{
  "code": "def parse_cli_args():\n    \"\"\" Parse arguments passed by command line interface \"\"\"\n\n    AP_kwargs = dict(\n        prog=\"InstaPy\",\n        description=\"Parse InstaPy constructor's arguments\",\n        epilog=\"And that's how you'd pass arguments by CLI..\",\n        conflict_handler=\"resolve\",\n    )\n    if python_version() < \"3.5\":\n        parser = CustomizedArgumentParser(**AP_kwargs)\n    else:\n        AP_kwargs.update(allow_abbrev=False)\n        parser = ArgumentParser(**AP_kwargs)\n\n    \"\"\" Flags that REQUIRE a value once added\n    ```python quickstart.py --username abc```\n    \"\"\"\n    parser.add_argument(\"-u\", \"--username\", help=\"Username\", type=str, metavar=\"abc\")\n    parser.add_argument(\"-p\", \"--password\", help=\"Password\", type=str, metavar=\"123\")\n    parser.add_argument(\n        \"-pd\", \"--page-delay\", help=\"Implicit wait\", type=int, metavar=25\n    )\n    parser.add_argument(\n        \"-pa\", \"--proxy-address\", help=\"Proxy address\", type=str, metavar=\"192.168.1.1\"\n    )\n    parser.add_argument(\n        \"-pp\", \"--proxy-port\", help=\"Proxy port\", type=int, metavar=8080\n    )\n\n    \"\"\" Auto-booleans: adding these flags ENABLE themselves automatically\n    ```python quickstart.py --use-firefox```\n    \"\"\"\n    parser.add_argument(\n        \"-uf\", \"--use-firefox\", help=\"Use Firefox\", action=\"store_true\", default=None\n    )\n    parser.add_argument(\n        \"-hb\",\n        \"--headless-browser\",\n        help=\"Headless browser\",\n        action=\"store_true\",\n        default=None,\n    )\n    parser.add_argument(\n        \"-dil\",\n        \"--disable-image-load\",\n        help=\"Disable image load\",\n        action=\"store_true\",\n        default=None,\n    )\n    parser.add_argument(\n        \"-bsa\",\n        \"--bypass-suspicious-attempt\",\n        help=\"Bypass suspicious attempt\",\n        action=\"store_true\",\n        default=None,\n    )\n    parser.add_argument(\n        \"-bwm\",\n        \"--bypass-with-mobile\",\n        help=\"Bypass with mobile phone\",\n        action=\"store_true\",\n        default=None,\n    )\n    parser.add_argument(\n        \"-sdb\",\n        \"--split-db\",\n        help=\"Split sqlite-db as instapy_{username}.db\",\n        action=\"store_true\",\n        default=None,\n    )\n\n    \"\"\" Style below can convert strings into booleans:\n    ```parser.add_argument(\"--is-debug\",\n                           default=False,\n                           type=lambda x: (str(x).capitalize() == \"True\"))```\n\n    So that, you can pass bool values explicitly from CLI,\n    ```python quickstart.py --is-debug True```\n\n    NOTE: This style is the easiest of it and currently not being used.\n    \"\"\"\n\n    args, _ = parser.parse_known_args()\n    # Once added custom arguments if you use a reserved name of core flags\n    # and don't parse it, e.g.,\n    # `-ufa` will misbehave cos it has `-uf` reserved flag in it.\n    # But if you parse it, it's okay.\n\n    return args",
  "smell": [
    {
      "smell_id": 2,
      "line_no": 28,
      "description": "The values of an argument hold inconsistent types in different function calls."
    }
  ]
}