{
  "code": "def load_data_list(self) -> List[dict]:\\n        \"\"\"Load annotations from an annotation file named as ``self.ann_file``\\n\\n        Returns:\\n            List[dict]: A list of annotation.\\n        \"\"\"  # noqa: E501\\n        with get_local_path(\\n                self.ann_file, backend_args=self.backend_args) as local_path:\\n            self.coco = self.COCOAPI(local_path)\\n        # The order of returned `cat_ids` will not\\n        # change with the order of the `classes`\\n        self.cat_ids = self.coco.get_cat_ids(\\n            cat_names=self.metainfo['classes'])\\n        self.cat2label = {cat_id: i for i, cat_id in enumerate(self.cat_ids)}\\n        self.cat_img_map = copy.deepcopy(self.coco.cat_img_map)\\n\\n        img_ids = self.coco.get_img_ids()\\n        data_list = []\\n        total_ann_ids = []\\n        for img_id in img_ids:\\n            raw_img_info = self.coco.load_imgs([img_id])[0]\\n            raw_img_info['img_id'] = img_id\\n\\n            ann_ids = self.coco.get_ann_ids(img_ids=[img_id])\\n            raw_ann_info = self.coco.load_anns(ann_ids)\\n            total_ann_ids.extend(ann_ids)\\n\\n            # file_name should be `patchX/xxx.jpg`\\n            file_name = osp.join(\\n                osp.split(osp.split(raw_img_info['file_name'])[0])[-1],\\n                osp.split(raw_img_info['file_name'])[-1])\\n\\n            if file_name in objv2_ignore_list:\\n                continue\\n\\n            raw_img_info['file_name'] = file_name\\n            parsed_data_info = self.parse_data_info({\\n                'raw_ann_info':\\n                raw_ann_info,\\n                'raw_img_info':\\n                raw_img_info\\n            })\\n            data_list.append(parsed_data_info)\\n        if self.ANN_ID_UNIQUE:\\n            assert len(set(total_ann_ids)) == len(\\n                total_ann_ids\\n            ), f\"Annotation ids in '{self.ann_file}' are not unique!\"\\n\\n        del self.coco\\n\\n        return data_list",
  "smell": [
    {
      "smell_id": 5,
      "line_no": 49,
      "description": "The attribute is deleted from an object through a dynamically determined name."
    }
  ]
}