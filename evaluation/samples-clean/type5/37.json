{
  "code": "def build(self):\\n        input_dim = self.input_shape[2]\\n        self.input = T.tensor3()\\n\\n        self.W_z = self.init((input_dim, self.output_dim))\\n        self.U_z = self.inner_init((self.output_dim, self.output_dim))\\n        self.b_z = shared_zeros((self.output_dim))\\n\\n        self.U_r = self.inner_init((self.output_dim, self.output_dim))\\n        self.b_r = shared_zeros((self.output_dim))\\n\\n        self.W_h = self.init((input_dim, self.output_dim))\\n        self.U_h = self.inner_init((self.output_dim, self.output_dim))\\n        self.b_h = shared_zeros((self.output_dim))\\n\\n        # P_h used to project X onto different dimension, using sparse random projections\\n        if input_dim == self.output_dim:\\n            self.Pmat = theano.shared(np.identity(self.output_dim, dtype=theano.config.floatX), name=None)\\n        else:\\n            P = np.random.binomial(1, 0.5, size=(input_dim, self.output_dim)).astype(theano.config.floatX) * 2 - 1\\n            P = 1 / np.sqrt(input_dim) * P\\n            self.Pmat = theano.shared(P, name=None)\\n\\n        self.params = [\\n            self.W_z, self.U_z, self.b_z,\\n            self.U_r, self.b_r,\\n            self.W_h, self.U_h, self.b_h,\\n            self.Pmat\\n        ]\\n\\n        if self.initial_weights is not None:\\n            self.set_weights(self.initial_weights)\\n            del self.initial_weights",
  "smell": [
    {
      "smell_id": 5,
      "line_no": 33,
      "description": "The attribute is deleted from an object through a dynamically determined name."
    }
  ]
}