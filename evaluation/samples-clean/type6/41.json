{
  "code": "def action(\n        self,\n        action,\n        entity=None,\n        action_condition=lambda e: e,\n        wait_condition=lambda e: e,\n        fail_condition=lambda e: False,\n        pre_action=lambda e: e,\n        post_action=lambda e: None,\n        search_params=None,\n        **kwargs\n    ):\n        \"\"\"\n        This method is executed when we want to change the state of some oVirt\n        entity. The action to be executed on oVirt service is specified by\n        `action` parameter. Whether the action should be executed can be\n        specified by passing `action_condition` parameter. State which the\n        entity should be in after execution of the action can be specified\n        by `wait_condition` parameter.\n\n        Function executed before an action on entity can optionally be specified\n        in `pre_action` parameter. Function executed after an action on entity can\n        optionally be specified in `post_action` parameter.\n\n        :param action: Action which should be executed by service on entity.\n        :param entity: Entity we want to run action on.\n        :param action_condition: Function which is executed when checking if action should be executed.\n        :param fail_condition: Function which checks incorrect state of entity, if it returns `True` Exception is raised.\n        :param wait_condition: Function which is executed when waiting on result state.\n        :param pre_action: Function which is executed before running the action.\n        :param post_action: Function which is executed after running the action.\n        :param search_params: Dictionary of parameters to be used for search.\n        :param kwargs: Additional parameters passed to action.\n        :return: Dictionary with values returned by Ansible module.\n        \"\"\"\n        if entity is None:\n            entity = self.search_entity(search_params)\n\n        entity = pre_action(entity)\n\n        if entity is None:\n            self._module.fail_json(\n                msg=\"Entity not found, can't run action '{}'.\".format(\n                    action\n                )\n            )\n\n        entity_service = self._service.service(entity.id)\n        entity = entity_service.get()\n        if action_condition(entity):\n            if not self._module.check_mode:\n                getattr(entity_service, action)(**kwargs)\n            self.changed = True\n\n        post_action(entity)\n\n        wait(\n            service=self._service.service(entity.id),\n            condition=wait_condition,\n            fail_condition=fail_condition,\n            wait=self._module.params['wait'],\n            timeout=self._module.params['timeout'],\n            poll_interval=self._module.params['poll_interval'],\n        )\n        return {\n            'changed': self.changed,\n            'id': entity.id,\n            type(entity).__name__.lower(): get_dict_of_struct(entity),\n        }",
  "smell": [
    {
      "smell_id": 6,
      "line_no": 52,
      "description": "The attribute is visited based on a dynamically determined name."
    }
  ]
}