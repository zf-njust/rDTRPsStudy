{
  "code": "def testHVDStack(self, shape, op, dtypes, array_input, out_dtype):\n    rng = jtu.rand_default(self.rng())\n    if array_input:\n      args_maker = lambda: [np.array([rng(shape, dtype) for dtype in dtypes])]\n    else:\n      args_maker = lambda: [[rng(shape, dtype) for dtype in dtypes]]\n\n    if numpy_version < (1, 24) or op == \"dstack\":\n      np_fun = jtu.promote_like_jnp(lambda *args: getattr(np, op)(*args).astype(out_dtype))\n    else:\n      np_fun = partial(jtu.promote_like_jnp(getattr(np, op)), dtype=out_dtype,\n                       casting='unsafe')\n\n    jnp_fun = partial(getattr(jnp, op), dtype=out_dtype)\n    with jtu.strict_promotion_if_dtypes_match(dtypes):\n      self._CheckAgainstNumpy(jnp_fun, np_fun, args_maker)\n      self._CompileAndCheck(jnp_fun, args_maker)",
  "smell": [
    {
      "smell_id": 6,
      "line_no": 14,
      "description": "The attribute is visited based on a dynamically determined name."
    }
  ]
}