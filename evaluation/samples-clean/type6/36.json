{
  "code": "def get_host_info(self):\n        '''\n        Get variables about a specific host\n        '''\n\n        if len(self.index) == 0:\n            # Need to load index from cache\n            self.load_index_from_cache()\n\n        if not self.args.host in self.index:\n            # try updating the cache\n            self.do_api_calls_update_cache()\n            if not self.args.host in self.index:\n                # host migh not exist anymore\n                return self.json_format_dict({}, True)\n\n        node_id = self.index[self.args.host]\n\n        node = self.get_node(node_id)\n        instance_vars = {}\n        for key in vars(instance):\n            value = getattr(instance, key)\n            key = self.to_safe('ec2_' + key)\n\n            # Handle complex types\n            if isinstance(value, (int, bool)):\n                instance_vars[key] = value\n            elif isinstance(value, string_types):\n                instance_vars[key] = value.strip()\n            elif value is None:\n                instance_vars[key] = ''\n            elif key == 'ec2_region':\n                instance_vars[key] = value.name\n            elif key == 'ec2_tags':\n                for k, v in iteritems(value):\n                    key = self.to_safe('ec2_tag_' + k)\n                    instance_vars[key] = v\n            elif key == 'ec2_groups':\n                group_ids = []\n                group_names = []\n                for group in value:\n                    group_ids.append(group.id)\n                    group_names.append(group.name)\n                instance_vars[\"ec2_security_group_ids\"] = ','.join(group_ids)\n                instance_vars[\"ec2_security_group_names\"] = ','.join(group_names)\n            else:\n                pass\n                # TODO Product codes if someone finds them useful\n                #print(key)\n                #print(type(value))\n                #print(value)\n\n        return self.json_format_dict(instance_vars, True)",
  "smell": [
    {
      "smell_id": 6,
      "line_no": 22,
      "description": "The attribute is visited based on a dynamically determined name."
    }
  ]
}