{
    "code": "def phonemize(\n        cls,\n        text: str,\n        lang: Optional[str],\n        phonemizer: Optional[str] = None,\n        preserve_punct: bool = False,\n        to_simplified_zh: bool = False,\n    ):\n        if to_simplified_zh:\n            import hanziconv\n\n            text = hanziconv.HanziConv.toSimplified(text)\n\n        if phonemizer == \"g2p\":\n            import g2p_en\n\n            g2p = g2p_en.G2p()\n            if preserve_punct:\n                return \" \".join(\"|\" if p == \" \" else p for p in g2p(text))\n            else:\n                res = [{\",\": \"sp\", \";\": \"sp\"}.get(p, p) for p in g2p(text)]\n                return \" \".join(p for p in res if p.isalnum())\n        if phonemizer == \"g2pc\":\n            import g2pc\n\n            g2p = g2pc.G2pC()\n            return \" \".join([w[3] for w in g2p(text)])\n        elif phonemizer == \"ipa\":\n            assert lang is not None\n            import phonemizer\n            from phonemizer.separator import Separator\n\n            lang_map = {\"en\": \"en-us\", \"fr\": \"fr-fr\"}\n            return phonemizer.phonemize(\n                text,\n                backend=\"espeak\",\n                language=lang_map.get(lang, lang),\n                separator=Separator(word=\"| \", phone=\" \"),\n            )\n        else:\n            return text",
    "smell": []
}