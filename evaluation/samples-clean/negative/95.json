{
    "code": "def parse_constraint(constraints):\n    if constraints == \"*\":\n        return AnyConstraint()\n\n    or_constraints = re.split(r\"\\s*\\|\\|?\\s*\", constraints.strip())\n    or_groups = []\n    for constraints in or_constraints:\n        and_constraints = re.split(\n            r\"(?<!^)(?<![=>< ,]) *(?<!-)[, ](?!-) *(?!,|$)\", constraints\n        )\n        constraint_objects = []\n\n        if len(and_constraints) > 1:\n            for constraint in and_constraints:\n                constraint_objects.append(parse_single_constraint(constraint))\n        else:\n            constraint_objects.append(parse_single_constraint(and_constraints[0]))\n\n        if len(constraint_objects) == 1:\n            constraint = constraint_objects[0]\n        else:\n            constraint = constraint_objects[0]\n            for next_constraint in constraint_objects[1:]:\n                constraint = constraint.intersect(next_constraint)\n\n        or_groups.append(constraint)\n\n    if len(or_groups) == 1:\n        return or_groups[0]\n    else:\n        return UnionConstraint(*or_groups)",
    "smell": []
}