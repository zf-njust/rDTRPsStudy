{
    "code": "def log_multivariate_normal_density(X, means, covars, covariance_type='diag'):\n    \"\"\"Compute the log probability under a multivariate Gaussian distribution.\n\n    Parameters\n    ----------\n    X : array_like, shape (n_samples, n_features)\n        List of n_features-dimensional data points.  Each row corresponds to a\n        single data point.\n\n    means : array_like, shape (n_components, n_features)\n        List of n_features-dimensional mean vectors for n_components Gaussians.\n        Each row corresponds to a single mean vector.\n\n    covars : array_like\n        List of n_components covariance parameters for each Gaussian. The shape\n        depends on `covariance_type`:\n            (n_components, n_features)      if 'spherical',\n            (n_features, n_features)    if 'tied',\n            (n_components, n_features)    if 'diag',\n            (n_components, n_features, n_features) if 'full'\n\n    covariance_type : string\n        Type of the covariance parameters.  Must be one of\n        'spherical', 'tied', 'diag', 'full'.  Defaults to 'diag'.\n\n    Returns\n    -------\n    lpr : array_like, shape (n_samples, n_components)\n        Array containing the log probabilities of each data point in\n        X under each of the n_components multivariate Gaussian distributions.\n    \"\"\"\n    log_multivariate_normal_density_dict = {\n        'spherical': _log_multivariate_normal_density_spherical,\n        'tied': _log_multivariate_normal_density_tied,\n        'diag': _log_multivariate_normal_density_diag,\n        'full': _log_multivariate_normal_density_full}\n    return log_multivariate_normal_density_dict[covariance_type](\n        X, means, covars)",
    "smell": []
}