{
    "code": "def setup_platform(\n    hass: HomeAssistant,\n    config: ConfigType,\n    add_entities: AddEntitiesCallback,\n    discovery_info: DiscoveryInfoType | None = None,\n) -> None:\n    \"\"\"Set up the configured Numato USB GPIO switch ports.\"\"\"\n    if discovery_info is None:\n        return\n\n    api = hass.data[DOMAIN][DATA_API]\n    switches = []\n    devices = hass.data[DOMAIN][CONF_DEVICES]\n    for device in [d for d in devices if CONF_SWITCHES in d]:\n        device_id = device[CONF_ID]\n        platform = device[CONF_SWITCHES]\n        invert_logic = platform[CONF_INVERT_LOGIC]\n        ports = platform[CONF_PORTS]\n        for port, port_name in ports.items():\n            try:\n                api.setup_output(device_id, port)\n                api.write_output(device_id, port, 1 if invert_logic else 0)\n            except NumatoGpioError as err:\n                _LOGGER.error(\n                    \"Failed to initialize switch '%s' on Numato device %s port %s: %s\",\n                    port_name,\n                    device_id,\n                    port,\n                    err,\n                )\n                continue\n            switches.append(\n                NumatoGpioSwitch(\n                    port_name,\n                    device_id,\n                    port,\n                    invert_logic,\n                    api,\n                )\n            )\n    add_entities(switches, True)",
    "smell": []
}