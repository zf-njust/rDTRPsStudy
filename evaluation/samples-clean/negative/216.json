{
    "code": "def v2_runner_on_failed(self, result, ignore_errors=False):\n\n        if self._play.strategy == 'free' and self._last_task_banner != result._task._uuid:\n            self._print_task_banner(result._task)\n\n        delegated_vars = result._result.get('_ansible_delegated_vars', None)\n        if 'exception' in result._result:\n            if self._display.verbosity < 3:\n                # extract just the actual error message from the exception text\n                error = result._result['exception'].strip().split('\\n')[-1]\n                msg = \"An exception occurred during task execution. To see the full traceback, use -vvv. The error was: %s\" % error\n            else:\n                msg = \"An exception occurred during task execution. The full traceback is:\\n\" + result._result['exception']\n\n            self._display.display(msg, color=C.COLOR_ERROR)\n\n        if result._task.loop and 'results' in result._result:\n            self._process_items(result)\n\n        else:\n            if delegated_vars:\n                self._display.display(\"fatal: [%s -> %s]: FAILED! => %s\" % (result._host.get_name(), delegated_vars['ansible_host'], self._dump_results(result._result)), color=C.COLOR_ERROR)\n            else:\n                self._display.display(\"fatal: [%s]: FAILED! => %s\" % (result._host.get_name(), self._dump_results(result._result)), color=C.COLOR_ERROR)\n\n        if result._task.ignore_errors:\n            self._display.display(\"...ignoring\", color=C.COLOR_SKIP)",
    "smell": []
}