{
    "code": "def __init__(\n        self,\n        datasets,\n        src_eos,\n        tgt_bos,\n        new_src_eos=None,\n        new_tgt_bos=None,\n    ):\n        super().__init__(datasets)\n        if new_src_eos is not None and new_src_eos != []:\n            assert len(new_src_eos) == len(datasets)\n        else:\n            new_src_eos = []\n        if new_tgt_bos is not None and new_tgt_bos != []:\n            assert len(new_tgt_bos) == len(datasets)\n        else:\n            new_tgt_bos = []\n        self.src_eos = src_eos\n        self.tgt_bos = tgt_bos\n        self.new_src_eos = (\n            torch.LongTensor(new_src_eos).cpu() if len(new_src_eos) > 0 else []\n        )\n        self.new_tgt_bos = (\n            torch.LongTensor(new_tgt_bos).cpu() if len(new_tgt_bos) > 0 else []\n        )\n        self.left_pad_source = self.is_left_pad_source(datasets)\n        self.left_pad_target = self.is_left_pad_target(datasets)\n        self.pad_idx = self.src_dict_pad()",
    "smell": []
}