{
    "code": "def __next__(self):\n        from lightning.app.structures import Dict\n\n        while self.queue:\n            component = self.queue.pop(0)\n\n            if isinstance(component, lightning.app.LightningFlow):\n                components = [getattr(component, el) for el in sorted(component._flows)]\n                for struct_name in sorted(component._structures):\n                    structure = getattr(component, struct_name)\n                    if isinstance(structure, Dict):\n                        values = sorted(structure.items(), key=lambda x: x[0])\n                    else:\n                        values = sorted(((v.name, v) for v in structure), key=lambda x: x[0])\n                    for _, value in values:\n                        if isinstance(value, lightning.app.LightningFlow):\n                            components.append(value)\n                self.queue += components\n                self.queue += component.works(recurse=False)\n\n            if any(isinstance(component, t) for t in self.types):\n                return component\n\n        raise StopIteration",
    "smell": []
}