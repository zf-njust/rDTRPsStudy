{
    "code": "def _generate_provider_intersphinx_mapping():\n    airflow_mapping = {}\n    for_production = os.environ.get(\"AIRFLOW_FOR_PRODUCTION\", \"false\") == \"true\"\n    current_version = \"stable\" if for_production else \"latest\"\n\n    for provider in load_package_data():\n        package_name = provider[\"package-name\"]\n        if os.environ.get(\"AIRFLOW_PACKAGE_NAME\") == package_name:\n            continue\n\n        provider_base_url = f\"/docs/{package_name}/{current_version}/\"\n        doc_inventory = f\"{DOCS_DIR}/_build/docs/{package_name}/{current_version}/objects.inv\"\n        cache_inventory = f\"{DOCS_DIR}/_inventory_cache/{package_name}/objects.inv\"\n\n        # Skip adding the mapping if the path does not exist\n        if not os.path.exists(doc_inventory) and not os.path.exists(cache_inventory):\n            continue\n\n        airflow_mapping[package_name] = (\n            # base URI\n            provider_base_url,\n            (doc_inventory if os.path.exists(doc_inventory) else cache_inventory,),\n        )\n    for pkg_name in [\"apache-airflow\", \"helm-chart\"]:\n        if os.environ.get(\"AIRFLOW_PACKAGE_NAME\") == pkg_name:\n            continue\n        doc_inventory = f\"{DOCS_DIR}/_build/docs/{pkg_name}/{current_version}/objects.inv\"\n        cache_inventory = f\"{DOCS_DIR}/_inventory_cache/{pkg_name}/objects.inv\"\n\n        airflow_mapping[pkg_name] = (\n            # base URI\n            f'/docs/{pkg_name}/{\"stable\" if for_production else \"latest\"}/',\n            (doc_inventory if os.path.exists(doc_inventory) else cache_inventory,),\n        )\n    for pkg_name in [\"apache-airflow-providers\", \"docker-stack\"]:\n        if os.environ.get(\"AIRFLOW_PACKAGE_NAME\") == pkg_name:\n            continue\n        doc_inventory = f\"{DOCS_DIR}/_build/docs/{pkg_name}/objects.inv\"\n        cache_inventory = f\"{DOCS_DIR}/_inventory_cache/{pkg_name}/objects.inv\"\n\n        airflow_mapping[pkg_name] = (\n            # base URI\n            f\"/docs/{pkg_name}/\",\n            (doc_inventory if os.path.exists(doc_inventory) else cache_inventory,),\n        )\n\n    return airflow_mapping",
    "smell": []
}