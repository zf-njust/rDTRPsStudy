{
    "code": "def setup_platform(\n    hass: HomeAssistant,\n    config: ConfigType,\n    add_entities: AddEntitiesCallback,\n    discovery_info: DiscoveryInfoType | None = None,\n) -> None:\n    \"\"\"Create the SolarEdge Monitoring API sensor.\"\"\"\n    ip_address = config[CONF_IP_ADDRESS]\n    platform_name = config[CONF_NAME]\n\n    # Create new SolarEdge object to retrieve data.\n    api = SolarEdge(f\"http://{ip_address}/\")\n\n    # Check if api can be reached and site is active.\n    try:\n        status = api.get_status()\n        _LOGGER.debug(\"Credentials correct and site is active\")\n    except AttributeError:\n        _LOGGER.error(\"Missing details data in solaredge status\")\n        return\n    except (ConnectTimeout, HTTPError):\n        _LOGGER.error(\"Could not retrieve details from SolarEdge API\")\n        return\n\n    # Create solaredge data service which will retrieve and update the data.\n    data = SolarEdgeData(hass, api)\n\n    # Changing inverter temperature unit.\n    inverter_temp_description = copy(SENSOR_TYPE_INVERTER_TEMPERATURE)\n    if status.inverters.primary.temperature.units.farenheit:\n        inverter_temp_description.native_unit_of_measurement = (\n            UnitOfTemperature.FAHRENHEIT\n        )\n\n    # Create entities\n    entities = [\n        SolarEdgeSensor(platform_name, data, description)\n        for description in (*SENSOR_TYPES, inverter_temp_description)\n    ]\n\n    try:\n        if status.metersList[0]:\n            entities.extend(\n                [\n                    SolarEdgeSensor(platform_name, data, description)\n                    for description in SENSOR_TYPES_ENERGY_IMPORT\n                ]\n            )\n    except IndexError:\n        _LOGGER.debug(\"Import meter sensors are not created\")\n\n    try:\n        if status.metersList[1]:\n            entities.extend(\n                [\n                    SolarEdgeSensor(platform_name, data, description)\n                    for description in SENSOR_TYPES_ENERGY_EXPORT\n                ]\n            )\n    except IndexError:\n        _LOGGER.debug(\"Export meter sensors are not created\")\n\n    add_entities(entities, True)",
    "smell": []
}