{
    "code": "def marshall(proto, data):\n    \"\"\"Marshals a proto with binary data (converts to base64).\n\n    Args\n    ----\n        proto: the proto to fill. Must have a string field called \"data\".\n        data: a buffer with the binary data. Supported formats: str, bytes,\n            BytesIO, NumPy array, or a file opened with io.open().\n    \"\"\"\n    if type(data) in string_types:\n        b64encodable = bytes(data)\n    elif type(data) is newbytes:\n        b64encodable = data\n    elif type(data) is bytes:\n        # Must come after str, since byte and str are equivalend in Python 2.7.\n        b64encodable = data\n    elif isinstance(data, io.BytesIO):\n        data.seek(0)\n        b64encodable = data.getvalue()\n    elif isinstance(data, io.IOBase):\n        data.seek(0)\n        b64encodable = data.read()\n    elif type(data).__name__ == 'ndarray':\n        b64encodable = data\n    else:\n        raise RuntimeError('Invalid binary data format: %s' % type(data))\n\n    data_b64 = base64.b64encode(b64encodable)\n    proto.data = data_b64.decode('utf-8')",
    "smell": []
}