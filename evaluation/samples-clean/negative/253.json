{
    "code": "def filter_variables(variables, filter_regex_list, invert=False):\n  \"\"\"Filters out the variables matching the filter_regex.\n\n  Filter out the variables whose name matches the any of the regular\n  expressions in filter_regex_list and returns the remaining variables.\n  Optionally, if invert=True, the complement set is returned.\n\n  Args:\n    variables: a list of tensorflow variables.\n    filter_regex_list: a list of string regular expressions.\n    invert: (boolean).  If True, returns the complement of the filter set; that\n      is, all variables matching filter_regex are kept and all others discarded.\n\n  Returns:\n    a list of filtered variables.\n  \"\"\"\n  kept_vars = []\n  variables_to_ignore_patterns = list([fre for fre in filter_regex_list if fre])\n  for var in variables:\n    add = True\n    for pattern in variables_to_ignore_patterns:\n      if re.match(pattern, var.op.name):\n        add = False\n        break\n    if add != invert:\n      kept_vars.append(var)\n  return kept_vars",
    "smell": []
}