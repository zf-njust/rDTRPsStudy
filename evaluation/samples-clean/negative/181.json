{
    "code": "def default_aliases():\n    \"\"\"Return list of shell aliases to auto-define.\n    \"\"\"\n    # Note: the aliases defined here should be safe to use on a kernel\n    # regardless of what frontend it is attached to.  Frontends that use a\n    # kernel in-process can define additional aliases that will only work in\n    # their case.  For example, things like 'less' or 'clear' that manipulate\n    # the terminal should NOT be declared here, as they will only work if the\n    # kernel is running inside a true terminal, and not over the network.\n\n    if os.name == 'posix':\n        default_aliases = [('mkdir', 'mkdir'), ('rmdir', 'rmdir'),\n                           ('mv', 'mv'), ('rm', 'rm'), ('cp', 'cp'),\n                           ('cat', 'cat'),\n                           ]\n        # Useful set of ls aliases.  The GNU and BSD options are a little\n        # different, so we make aliases that provide as similar as possible\n        # behavior in ipython, by passing the right flags for each platform\n        if sys.platform.startswith('linux'):\n            ls_aliases = [('ls', 'ls -F --color'),\n                          # long ls\n                          ('ll', 'ls -F -o --color'),\n                          # ls normal files only\n                          ('lf', 'ls -F -o --color %l | grep ^-'),\n                          # ls symbolic links\n                          ('lk', 'ls -F -o --color %l | grep ^l'),\n                          # directories or links to directories,\n                          ('ldir', 'ls -F -o --color %l | grep /$'),\n                          # things which are executable\n                          ('lx', 'ls -F -o --color %l | grep ^-..x'),\n                          ]\n        elif sys.platform.startswith('openbsd') or sys.platform.startswith('netbsd'):\n            # OpenBSD, NetBSD. The ls implementation on these platforms do not support\n            # the -G switch and lack the ability to use colorized output.\n            ls_aliases = [('ls', 'ls -F'),\n                          # long ls\n                          ('ll', 'ls -F -l'),\n                          # ls normal files only\n                          ('lf', 'ls -F -l %l | grep ^-'),\n                          # ls symbolic links\n                          ('lk', 'ls -F -l %l | grep ^l'),\n                          # directories or links to directories,\n                          ('ldir', 'ls -F -l %l | grep /$'),\n                          # things which are executable\n                          ('lx', 'ls -F -l %l | grep ^-..x'),\n                          ]\n        else:\n            # BSD, OSX, etc.\n            ls_aliases = [('ls', 'ls -F -G'),\n                          # long ls\n                          ('ll', 'ls -F -l -G'),\n                          # ls normal files only\n                          ('lf', 'ls -F -l -G %l | grep ^-'),\n                          # ls symbolic links\n                          ('lk', 'ls -F -l -G %l | grep ^l'),\n                          # directories or links to directories,\n                          ('ldir', 'ls -F -G -l %l | grep /$'),\n                          # things which are executable\n                          ('lx', 'ls -F -l -G %l | grep ^-..x'),\n                          ]\n        default_aliases = default_aliases + ls_aliases\n    elif os.name in ['nt', 'dos']:\n        default_aliases = [('ls', 'dir /on'),\n                           ('ddir', 'dir /ad /on'), ('ldir', 'dir /ad /on'),\n                           ('mkdir', 'mkdir'), ('rmdir', 'rmdir'),\n                           ('echo', 'echo'), ('ren', 'ren'), ('copy', 'copy'),\n                           ]\n    else:\n        default_aliases = []\n\n    return default_aliases",
    "smell": []
}