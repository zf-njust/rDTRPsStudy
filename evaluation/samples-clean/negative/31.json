{
    "code": "def assert_string_equal(actual, desired):\n    \"\"\"\n    Test if two strings are equal.\n\n    If the given strings are equal, `assert_string_equal` does nothing.\n    If they are not equal, an AssertionError is raised, and the diff\n    between the strings is shown.\n\n    Parameters\n    ----------\n    actual : str\n        The string to test for equality against the expected string.\n    desired : str\n        The expected string.\n\n    Examples\n    --------\n    >>> np.testing.assert_string_equal('abc', 'abc')\n    >>> np.testing.assert_string_equal('abc', 'abcd')\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    ...\n    AssertionError: Differences in strings:\n    - abc+ abcd?    +\n\n    \"\"\"\n    # delay import of difflib to reduce startup time\n    __tracebackhide__ = True  # Hide traceback for py.test\n    import difflib\n\n    if not isinstance(actual, str):\n        raise AssertionError(repr(type(actual)))\n    if not isinstance(desired, str):\n        raise AssertionError(repr(type(desired)))\n    if re.match(r'\\A'+desired+r'\\Z', actual, re.M):\n        return\n\n    diff = list(difflib.Differ().compare(actual.splitlines(1), desired.splitlines(1)))\n    diff_list = []\n    while diff:\n        d1 = diff.pop(0)\n        if d1.startswith('  '):\n            continue\n        if d1.startswith('- '):\n            l = [d1]\n            d2 = diff.pop(0)\n            if d2.startswith('? '):\n                l.append(d2)\n                d2 = diff.pop(0)\n            if not d2.startswith('+ '):\n                raise AssertionError(repr(d2))\n            l.append(d2)\n            d3 = diff.pop(0)\n            if d3.startswith('? '):\n                l.append(d3)\n            else:\n                diff.insert(0, d3)\n            if re.match(r'\\A'+d2[2:]+r'\\Z', d1[2:]):\n                continue\n            diff_list.extend(l)\n            continue\n        raise AssertionError(repr(d1))\n    if not diff_list:\n        return\n    msg = 'Differences in strings:\\n%s' % (''.join(diff_list)).rstrip()\n    if actual != desired:\n        raise AssertionError(msg)",
    "smell": []
}