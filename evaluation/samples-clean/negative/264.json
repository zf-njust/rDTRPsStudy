{
    "code": "def __call__(self, model_output: List[ModelOutput]) -> List[SampledData]:\n        \"\"\"\n        Transform model output into ground truth data through sampling\n\n        Args:\n          model_output (Dict[str, Any]): model output\n        Returns:\n          Dict[str, Any]: sampled data\n        \"\"\"\n        for model_output_i in model_output:\n            instances: Instances = model_output_i[\"instances\"]\n            # transform data in each field\n            for _, sampler in self._samplers.items():\n                if not instances.has(sampler.src) or sampler.dst is None:\n                    continue\n                if sampler.func is None:\n                    instances.set(sampler.dst, instances.get(sampler.src))\n                else:\n                    instances.set(sampler.dst, sampler.func(instances))\n            # delete model output data that was transformed\n            for _, sampler in self._samplers.items():\n                if sampler.src != sampler.dst and instances.has(sampler.src):\n                    instances.remove(sampler.src)\n            model_output_i[\"dataset\"] = self.dataset_name\n        return model_output",
    "smell": []
}