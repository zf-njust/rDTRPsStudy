{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [64, 22]], "fn_var_ln": {"data_as_list": [[56, 12], [56, 24]], "sep": [[50, 8], [50, 11]]}, "fn_var_occur": {"data_as_list": [["data_as_list", "l", "sep", "l", "read_data", "split", "sep"], ["data_as_list", "sep"], ["data_as_list", "data_as_list"], ["data_as_list", "data_as_list"]], "sep": [["sep", "isinstance", "read_data", "bytes"], ["data_as_list", "l", "sep", "l", "read_data", "split", "sep"], ["data_as_list", "sep"]]}, "name": "_iterate_read_data", "params": {"read_data": ""}, "params_descr": {"read_data": ""}, "params_occur": {"read_data": [["sep", "isinstance", "read_data", "bytes"], ["data_as_list", "l", "sep", "l", "read_data", "split", "sep"]]}, "params_p": {"args": [], "kwargs": [], "read_data": [["bytes", 0.2034636851433606], ["str", 0.1829812602644888], ["int", 0.0971082258778489]]}, "q_name": "_iterate_read_data", "ret_exprs": [], "ret_type": "", "variables": {"data_as_list": "", "sep": ""}, "variables_p": {"data_as_list": [["str", 0.9999999999999999]], "sep": [["bytes", 0.5839631916521815], ["int", 0.164558050485307], ["Tuple[str, str, str, str]", 0.0898390858374584], ["str", 0.08854833633727686], ["Dict[str, bool]", 0.07309133568777619]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 8], [81, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_readlines_side_effect", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_open.<locals>._readlines_side_effect", "ret_exprs": ["return handle.readlines.return_value", "return list(_data)"], "ret_type": "", "ret_type_p": [["int", 0.30965410548508454], ["List[List[str]]", 0.1295690166044726], ["IO[str]", 0.08610655578074237]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 8], [86, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_read_side_effect", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_open.<locals>._read_side_effect", "ret_exprs": ["return handle.read.return_value", "return type(read_data)().join(_data)"], "ret_type": "", "ret_type_p": [["bool", 0.27963653540233757], ["List[Dict[str, Any]]", 0.10072371578089537], ["Optional[Dict[str, str]]", 0.09011808948395722]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[88, 8], [93, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_readline_side_effect", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_open.<locals>._readline_side_effect", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "A helper function to create a mock to replace the use of `open`. It works", "long_descr": "for `open` called directly or used as a context manager.\n\nThe `mock` argument is the mock object to configure. If `None` (the\ndefault) then a `MagicMock` will be created for you, with the API limited\nto methods or attributes available on standard file handles.\n\n`read_data` is a string for the `read` methoddline`, and `readlines` of the\nfile handle to return.  This is an empty string by default.", "ret": null}, "fn_lc": [[66, 4], [118, 19]], "fn_var_ln": {"_data": [[106, 8], [106, 13]], "file_spec": [[98, 12], [98, 21]], "handle": [[103, 8], [103, 14]], "mock": [[101, 12], [101, 16]], "return_value": [[117, 8], [117, 25]]}, "fn_var_occur": {"_data": [["_data", "_iterate_read_data", "read_data"]], "file_spec": [["file_spec", "None"], ["file_spec", "list", "set", "dir", "_io", "TextIOWrapper", "union", "set", "dir", "_io", "BytesIO"], ["handle", "MagicMock", "spec", "file_spec"]], "handle": [["handle", "MagicMock", "spec", "file_spec"], ["handle", "__enter__", "return_value", "handle"], ["handle", "write", "return_value", "None"], ["handle", "read", "return_value", "None"], ["handle", "readline", "return_value", "None"], ["handle", "readlines", "return_value", "None"], ["handle", "read", "side_effect", "_read_side_effect"], ["handle", "readline", "side_effect", "_readline_side_effect"], ["handle", "readlines", "side_effect", "_readlines_side_effect"], ["mock", "return_value", "handle"]], "mock": [["mock", "None"], ["mock", "MagicMock", "name", "spec", "open"], ["mock", "return_value", "handle"]], "return_value": [["handle", "__enter__", "return_value", "handle"], ["handle", "write", "return_value", "None"], ["handle", "read", "return_value", "None"], ["handle", "readline", "return_value", "None"], ["handle", "readlines", "return_value", "None"], ["mock", "return_value", "handle"]]}, "name": "mock_open", "params": {"mock": "", "read_data": ""}, "params_descr": {"mock": "", "read_data": ""}, "params_occur": {"mock": [["mock", "None"], ["mock", "MagicMock", "name", "spec", "open"], ["mock", "return_value", "handle"]], "read_data": [["_data", "_iterate_read_data", "read_data"]]}, "params_p": {"args": [], "kwargs": [], "mock": [["str", 0.10061118974581414]], "read_data": [["dict", 0.20011046939652732], ["Dict[str, List[Any]]", 0.08646529584547369], ["str", 0.08263893508936702]]}, "q_name": "mock_open", "ret_exprs": ["return mock"], "ret_type": "", "ret_type_p": [["str", 0.10482299785203202]], "variables": {"_data": "", "file_spec": "", "handle": "", "mock": "", "return_value": ""}, "variables_p": {"_data": [["dict", 0.3945931645354299], ["Dict[str, str]", 0.18945895271791824], ["Dict[str, int]", 0.1273663275253183], ["Dict[str, Any]", 0.11086042955898089], ["str", 0.08901087840350708], ["List[Dict[str, Any]]", 0.08871024725884562]], "file_spec": [], "handle": [["mock.Mock", 0.5368174296283272], ["bytes", 0.1563571107746869]], "mock": [["dict", 0.37701878520568866], ["mock.Mock", 0.27229498531812046]], "return_value": [["str", 0.6210712021270632]]}}], "imports": ["__future__", "absolute_import", "division", "print_function", "sys", "unittest", "mock", "mock", "_io"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]], "file_spec": [[44, 4], [44, 13]]}, "mod_var_occur": {"__metaclass__": [], "file_spec": [["file_spec"], ["file_spec", "None"], ["file_spec", "list", "set", "dir", "_io", "TextIOWrapper", "union", "set", "dir", "_io", "BytesIO"], ["handle", "MagicMock", "spec", "file_spec"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 20}, "session_id": "Uv0T2cgMg_tRqa_WMuos0wVmeUwpq8quZE-WNyiV-BM", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": "", "file_spec": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "file_spec": [["Dict[str, Union[Any, Any, Any]]", 0.10712382301170949], ["tuple", 0.10531932028927342]]}}}