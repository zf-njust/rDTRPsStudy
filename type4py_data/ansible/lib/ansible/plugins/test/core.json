{"error": null, "response": {"classes": [{"cls_lc": [[117, 0], [140, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [140, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tests", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestModule.tests", "ret_exprs": ["return { # failure testing 'failed' : failed, 'succeeded' : success, # changed testing 'changed' : changed, # skip testing 'skipped' : skipped, # regex 'match': match, 'search': search, 'regex': regex, # version comparison 'version_compare': version_compare,}"], "ret_type": "", "ret_type_p": [["int", 0.09433874511312709], ["str", 0.08660800281277214]], "variables": {}, "variables_p": {}}], "name": "TestModule", "q_name": "TestModule", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Test if task result yields failed ", "long_descr": null, "ret": null}, "fn_lc": [[28, 0], [38, 20]], "fn_var_ln": {"failed": [[34, 4], [34, 10]], "item": [[30, 4], [30, 8]], "rc": [[33, 4], [33, 6]]}, "fn_var_occur": {"failed": [["failed", "item", "get", "False"], ["rc", "failed"]], "item": [["item", "a"], ["type", "item", "dict"], ["rc", "item", "get"], ["failed", "item", "get", "False"]], "rc": [["rc", "item", "get"], ["rc", "failed"]]}, "name": "failed", "params": {"a": "", "kw": ""}, "params_descr": {"a": "", "kw": ""}, "params_occur": {"a": [["item", "a"]], "kw": []}, "params_p": {"a": [["int", 1.0048253976014233e-10], ["float", 6.247903634705294e-11], ["str", 2.345274778199862e-11], ["list", 1.908482417309462e-11]], "args": [], "kw": [["List[T]", 0.19999999999999998], ["int", 0.19999999999999998], ["List[int]", 0.19999999999999998]], "kwargs": []}, "q_name": "failed", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {"failed": "", "item": "", "rc": ""}, "variables_p": {"failed": [["list", 0.2957048722049167], ["List[bool]", 0.19713658146994445], ["Dict[str, str]", 0.10571723960059094], ["dict", 0.10220111635037243], ["Tuple[str, str, str]", 0.10210360890423104], ["str", 0.09856829073497222]], "item": [["str", 0.5019524086679122], ["Dict[str, List[str]]", 0.19419661511968583], ["Dict[str, str]", 0.1915760673697467], ["Dict[str, int]", 0.11227490884265527]], "rc": [["Dict[str, str]", 0.7817115208133302]]}}, {"docstring": {"func": "Test if task result yields success ", "long_descr": null, "ret": null}, "fn_lc": [[40, 0], [42, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "success", "params": {"a": "", "kw": ""}, "params_descr": {"a": "", "kw": ""}, "params_occur": {"a": [["failed", "a", "kw"]], "kw": [["failed", "a", "kw"]]}, "params_p": {"a": [["int", 0.22052943365238964], ["Optional[int]", 0.11158803379438387], ["float", 0.10063690654044337], ["Tuple[float, float]", 0.08130437548221822], ["str", 0.07716201335105437]], "args": [], "kw": [["int", 0.22052943365238964], ["Optional[int]", 0.11158803379438387], ["float", 0.10063690654044337], ["Tuple[float, float]", 0.08130437548221822], ["str", 0.07716201335105437]], "kwargs": []}, "q_name": "success", "ret_exprs": ["return not failed(*a, **kw)"], "ret_type": "", "ret_type_p": [["str", 0.07679331431146852], ["Tuple[str]", 0.06223663483142594], ["int", 0.05861365908388808]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test if task result yields changed ", "long_descr": null, "ret": null}, "fn_lc": [[44, 0], [58, 18]], "fn_var_ln": {"changed": [[57, 8], [57, 15]], "item": [[46, 4], [46, 8]]}, "fn_var_occur": {"changed": [["changed", "False"], ["changed", "changed", "result", "get", "False"], ["changed", "item", "get", "False"]], "item": [["item", "a"], ["type", "item", "dict"], ["item", "type", "item", "list", "type", "item", "dict"], ["changed", "item", "get", "False"]]}, "name": "changed", "params": {"a": "", "kw": ""}, "params_descr": {"a": "", "kw": ""}, "params_occur": {"a": [["item", "a"]], "kw": []}, "params_p": {"a": [["int", 1.0048253976014233e-10], ["float", 6.247903634705294e-11], ["str", 2.345274778199862e-11], ["list", 1.908482417309462e-11]], "args": [], "kw": [["List[T]", 0.19999999999999998], ["int", 0.19999999999999998], ["List[int]", 0.19999999999999998]], "kwargs": []}, "q_name": "changed", "ret_exprs": ["return changed"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"changed": "", "item": ""}, "variables_p": {"changed": [["list", 0.4198352025514916], ["Dict[str, Union[Any, str]]", 0.18260817800096302], ["Dict[str, Union[list, str]]", 0.11050550858075871], ["Dict[str, Union[Any, Any]]", 0.09526533912719352]], "item": [["list", 0.49788667322823404], ["List[Callable[..., Any]]", 0.08992762861248565], ["List[Awaitable[Any]]", 0.08878921303310719], ["List[int]", 0.08514930939619664]]}}, {"docstring": {"func": "Test if task result yields skipped ", "long_descr": null, "ret": null}, "fn_lc": [[60, 0], [66, 18]], "fn_var_ln": {"item": [[62, 4], [62, 8]], "skipped": [[65, 4], [65, 11]]}, "fn_var_occur": {"item": [["item", "a"], ["type", "item", "dict"], ["skipped", "item", "get", "False"]], "skipped": [["skipped", "item", "get", "False"]]}, "name": "skipped", "params": {"a": "", "kw": ""}, "params_descr": {"a": "", "kw": ""}, "params_occur": {"a": [["item", "a"]], "kw": []}, "params_p": {"a": [["int", 1.0048253976014233e-10], ["float", 6.247903634705294e-11], ["str", 2.345274778199862e-11], ["list", 1.908482417309462e-11]], "args": [], "kw": [["List[T]", 0.19999999999999998], ["int", 0.19999999999999998], ["List[int]", 0.19999999999999998]], "kwargs": []}, "q_name": "skipped", "ret_exprs": ["return skipped"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"item": "", "skipped": ""}, "variables_p": {"item": [["MutableMapping[Any, Any]", 0.4098059449323195], ["Tuple[object]", 0.2688691345725166], ["Set[str]", 0.08304516175471208]], "skipped": [["Dict[str, str]", 0.43641329212521596], ["frozenset[str]", 0.09357087301671016], ["Dict[str, int]", 0.08745135470137254], ["set", 0.0805901791285507]]}}, {"docstring": {"func": "Expose `re` as a boolean filter using the `search` method by default.", "long_descr": "This is likely only useful for `search` and `match` which already\nhave their own filters.", "ret": null}, "fn_lc": [[68, 0], [80, 59]], "fn_var_ln": {"_bool": [[79, 4], [79, 9]], "_re": [[78, 4], [78, 7]], "flags": [[73, 4], [73, 9]]}, "fn_var_occur": {"_bool": [["_bool", "__builtins__", "get"], ["_bool", "getattr", "_re", "match_type", "value"]], "_re": [["_re", "re", "compile", "pattern", "flags", "flags"], ["_bool", "getattr", "_re", "match_type", "value"]], "flags": [["flags", "re", "I"], ["flags", "re", "M"], ["_re", "re", "compile", "pattern", "flags", "flags"]]}, "name": "regex", "params": {"ignorecase": "", "match_type": "", "multiline": "", "pattern": "", "value": ""}, "params_descr": {"ignorecase": "", "match_type": "", "multiline": "", "pattern": "", "value": ""}, "params_occur": {"ignorecase": [], "match_type": [["_bool", "getattr", "_re", "match_type", "value"]], "multiline": [], "pattern": [["_re", "re", "compile", "pattern", "flags", "flags"]], "value": [["_bool", "getattr", "_re", "match_type", "value"]]}, "params_p": {"args": [], "ignorecase": [["float", 0.35978482157299535], ["bool", 0.2945845156218525], ["str", 0.2556844574119032], ["set", 0.08994620539324884]], "kwargs": [], "match_type": [["bool", 0.18147524632454262], ["int", 0.09329673192796062], ["str", 0.08186757437983715]], "multiline": [["float", 0.35978482157299535], ["bool", 0.2945845156218525], ["str", 0.2556844574119032], ["set", 0.08994620539324884]], "pattern": [["int", 0.19982901039699955], ["Set[str]", 0.1249117997719988], ["bool", 0.09835168532110086], ["str", 0.09467175982909361]], "value": [["bool", 0.18147524632454262], ["int", 0.09329673192796062], ["str", 0.08186757437983715]]}, "q_name": "regex", "ret_exprs": ["return _bool(getattr(_re, match_type, 'search')(value))"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999998]], "variables": {"_bool": "", "_re": "", "flags": ""}, "variables_p": {"_bool": [["Callable", 0.3943688846361581], ["Sequence[str]", 0.2895459956750745], ["str", 0.10261019369405953], ["dict", 0.10132193588821123]], "_re": [["str", 0.8759102361905662], ["Pattern[str]", 0.12408976380943375]], "flags": [["dict", 0.36090088921485763], ["Dict[str, bool]", 0.1985538936504061], ["Dict[str, Dict[str, Any]]", 0.15002577443481274], ["str", 0.09740664488691926], ["Dict[str, Any]", 0.09217560047717491]]}}, {"docstring": {"func": "Perform a `re.match` returning a boolean ", "long_descr": null, "ret": null}, "fn_lc": [[82, 0], [84, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "match", "params": {"ignorecase": "", "multiline": "", "pattern": "", "value": ""}, "params_descr": {"ignorecase": "", "multiline": "", "pattern": "", "value": ""}, "params_occur": {"ignorecase": [["regex", "value", "pattern", "ignorecase", "multiline"]], "multiline": [["regex", "value", "pattern", "ignorecase", "multiline"]], "pattern": [["regex", "value", "pattern", "ignorecase", "multiline"]], "value": [["regex", "value", "pattern", "ignorecase", "multiline"]]}, "params_p": {"args": [], "ignorecase": [["float", 0.23428385311101604], ["int", 0.20030015290055325], ["str", 0.09354996705309611]], "kwargs": [], "multiline": [["float", 0.23428385311101604], ["int", 0.20030015290055325], ["str", 0.09354996705309611]], "pattern": [["float", 0.23428385311101604], ["int", 0.20030015290055325], ["str", 0.09354996705309611]], "value": [["float", 0.23428385311101604], ["int", 0.20030015290055325], ["str", 0.09354996705309611]]}, "q_name": "match", "ret_exprs": ["return regex(value, pattern, ignorecase, multiline, 'match')"], "ret_type": "", "ret_type_p": [["str", 0.16707556136712914], ["dict", 0.1514543657139814], ["int", 0.1188714981448529], ["float", 0.10148132565178711]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Perform a `re.search` returning a boolean ", "long_descr": null, "ret": null}, "fn_lc": [[86, 0], [88, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "search", "params": {"ignorecase": "", "multiline": "", "pattern": "", "value": ""}, "params_descr": {"ignorecase": "", "multiline": "", "pattern": "", "value": ""}, "params_occur": {"ignorecase": [["regex", "value", "pattern", "ignorecase", "multiline"]], "multiline": [["regex", "value", "pattern", "ignorecase", "multiline"]], "pattern": [["regex", "value", "pattern", "ignorecase", "multiline"]], "value": [["regex", "value", "pattern", "ignorecase", "multiline"]]}, "params_p": {"args": [], "ignorecase": [["str", 0.6757810140497401]], "kwargs": [], "multiline": [["str", 0.6757810140497401]], "pattern": [["str", 0.6757810140497401]], "value": [["str", 0.6757810140497401]]}, "q_name": "search", "ret_exprs": ["return regex(value, pattern, ignorecase, multiline, 'search')"], "ret_type": "", "ret_type_p": [["bool", 0.1669561425793881], ["str", 0.08347807128969405], ["int", 0.08347807128969405], ["Optional[float]", 0.07714397411890211]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Perform a version comparison on a value ", "long_descr": null, "ret": null}, "fn_lc": [[90, 0], [115, 69]], "fn_var_ln": {"Version": [[104, 8], [104, 15]], "method": [[112, 8], [112, 14]], "op_map": [[92, 4], [92, 10]], "operator": [[107, 8], [107, 16]]}, "fn_var_occur": {"Version": [["Version", "StrictVersion"], ["Version", "LooseVersion"], ["method", "Version", "str", "value", "Version", "str", "version"]], "method": [["method", "getattr", "py_operator", "operator"], ["method", "Version", "str", "value", "Version", "str", "version"]], "op_map": [["operator", "op_map"], ["operator", "op_map", "operator"]], "operator": [["operator", "op_map"], ["operator", "op_map", "operator"], ["method", "getattr", "py_operator", "operator"]]}, "name": "version_compare", "params": {"operator": "", "strict": "", "value": "", "version": ""}, "params_descr": {"operator": "", "strict": "", "value": "", "version": ""}, "params_occur": {"operator": [["operator", "op_map"], ["operator", "op_map", "operator"], ["method", "getattr", "py_operator", "operator"]], "strict": [], "value": [["method", "Version", "str", "value", "Version", "str", "version"]], "version": [["method", "Version", "str", "value", "Version", "str", "version"]]}, "params_p": {"args": [], "kwargs": [], "operator": [["str", 0.6273128615107026], ["Dict[Union[Any, Any], str]", 0.10780326594888075]], "strict": [["int", 0.5128092032000031], ["str", 0.17103206573244634], ["List[str]", 0.10310337914546833]], "value": [["str", 0.6296956607485552], ["Optional[str]", 0.15985792267436877]], "version": [["str", 0.6296956607485552], ["Optional[str]", 0.15985792267436877]]}, "q_name": "version_compare", "ret_exprs": ["return method(Version(str(value)), Version(str(version)))"], "ret_type": "", "ret_type_p": [["str", 0.7987997577088717], ["Optional[List[str]]", 0.08898042590505452]], "variables": {"Version": "", "method": "", "op_map": "", "operator": ""}, "variables_p": {"Version": [["str", 0.17915939160726652]], "method": [["str", 0.47112790107033053], ["Dict[Any, Union[Any, Any, Any, Any, Any, Any]]", 0.26590140506465726], ["distutils.extension.Extension", 0.08118381653403264]], "op_map": [["int", 0.4999999925660746], ["bytes", 1.4511886129683649e-08], ["Pattern[str]", 1.7798232031909088e-10], ["range", 8.899116015954544e-11], ["Dict[str, Any]", 8.899116015954544e-11]], "operator": [["Dict[str, Any]", 0.18338353169406857], ["bytearray", 0.08530155188128684], ["list", 0.08117224571498921]]}}], "imports": ["__future__", "absolute_import", "division", "print_function", "re", "operator", "py_operator", "distutils", "version", "LooseVersion", "StrictVersion", "ansible", "errors"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 48}, "session_id": "QoRrgPYAE0-tLYuVuUJ12z2_3sijW4g43WCUcAxBYr8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}