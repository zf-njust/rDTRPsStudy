{"error": null, "response": {"classes": [{"cls_lc": [[35, 0], [119, 21]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [40, 31]], "fn_var_ln": {"_display": [[40, 8], [40, 21]], "_loader": [[37, 8], [37, 20]], "_templar": [[38, 8], [38, 21]]}, "fn_var_occur": {"_display": [["self", "_display", "display"]], "_loader": [["self", "_loader", "loader"]], "_templar": [["self", "_templar", "templar"]]}, "name": "__init__", "params": {"kwargs": "", "loader": "", "self": "", "templar": ""}, "params_descr": {"kwargs": "", "loader": "", "self": "", "templar": ""}, "params_occur": {"kwargs": [], "loader": [["self", "_loader", "loader"]], "self": [["self", "_loader", "loader"], ["self", "_templar", "templar"], ["self", "_display", "display"]], "templar": [["self", "_templar", "templar"]]}, "params_p": {"args": [], "kwargs": [], "loader": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "self": [], "templar": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]]}, "q_name": "LookupBase.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_display": "", "_loader": "", "_templar": ""}, "variables_p": {"_display": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "_loader": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "_templar": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [46, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_basedir", "params": {"self": "", "variables": ""}, "params_descr": {"self": "", "variables": ""}, "params_occur": {"self": [["self", "_loader", "get_basedir"]], "variables": []}, "params_p": {"args": [], "kwargs": [], "self": [], "variables": [["bool", 0.2485516645350195], ["str", 0.2193195289052836], ["int", 0.09139449389307522], ["raiden.utils.Any", 0.08299946030290391], ["Iterable[str]", 0.08299946030290391]]}, "q_name": "LookupBase.get_basedir", "ret_exprs": ["return variables['role_path']", "return self._loader.get_basedir()"], "ret_type": "", "ret_type_p": [["str", 0.3882246893500808], ["BinaryIO", 0.11160493651505954], ["List[str]", 0.1054293020165899]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [56, 18]], "fn_var_ln": {"ret": [[50, 8], [50, 11]]}, "fn_var_occur": {"ret": [["ret", "extend", "term"], ["ret", "append", "term"]]}, "name": "_flatten", "params": {"terms": ""}, "params_descr": {"terms": ""}, "params_occur": {"terms": []}, "params_p": {"args": [], "kwargs": [], "self": [], "terms": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]]}, "q_name": "LookupBase._flatten", "ret_exprs": ["return ret"], "ret_type": "", "ret_type_p": [["bool", 0.2395657390539261], ["List[str]", 0.23338568586490194], ["Set[str]", 0.16051642331466923], ["Dict[str, Any]", 0.08608815791117343], ["str", 0.08416976611412513]], "variables": {"ret": ""}, "variables_p": {"ret": [["dict", 0.31225093753449296], ["Tuple[int, int, int, int, int, int]", 0.14927844409505428], ["str", 0.10510876725793705], ["List[Dict[str, Any]]", 0.08363956071357542], ["Dict[str, Union[Any, Any]]", 0.08276791624245718], ["Dict[str, Any]", 0.08208006346573796], ["Dict[str, Union[dict, Any, Any, Any, Any, Any, Any]]", 0.08072511382170024]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [64, 22]], "fn_var_ln": {"results": [[60, 8], [60, 15]]}, "fn_var_occur": {"results": [["results", "append", "LookupBase", "_flatten", "x", "y"]]}, "name": "_combine", "params": {"a": "", "b": ""}, "params_descr": {"a": "", "b": ""}, "params_occur": {"a": [], "b": []}, "params_p": {"a": [["int", 0.30000000000000004], ["Mapping", 0.2], ["List[str]", 0.1]], "args": [], "b": [["int", 0.30000000000000004], ["Mapping", 0.2], ["List[str]", 0.1]], "kwargs": [], "self": []}, "q_name": "LookupBase._combine", "ret_exprs": ["return results"], "ret_type": "", "ret_type_p": [["bool", 0.16408864410171026], ["Optional[Union[str, Any]]", 0.08753798278800795]], "variables": {"results": ""}, "variables_p": {"results": [["list", 0.2838998186968566], ["str", 0.22014101188754076], ["Dict[str, Union[Any, Any]]", 0.11113573643030132], ["List[List[int]]", 0.09995367237734851], ["Optional[Match[str]]", 0.0957434423355549], ["dict", 0.09510658307729895], ["Tuple[Any, None]", 0.0940197351950991]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [71, 18]], "fn_var_ln": {"ret": [[68, 8], [68, 11]]}, "fn_var_occur": {"ret": [["ret", "append", "key", "terms", "key"]]}, "name": "_flatten_hash_to_list", "params": {"terms": ""}, "params_descr": {"terms": ""}, "params_occur": {"terms": [["ret", "append", "key", "terms", "key"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "terms": [["dict", 0.18563556204747317], ["Iterable[Tuple[str, str]]", 0.09094175513724535], ["bool", 0.09029792656781033], ["Tuple[str]", 0.09003027750530221], ["list", 0.08317112400806323]]}, "q_name": "LookupBase._flatten_hash_to_list", "ret_exprs": ["return ret"], "ret_type": "", "ret_type_p": [["List[str]", 0.4060846327289388], ["list", 0.10586420098719432], ["bool", 0.08950960667096798], ["Dict[str, str]", 0.08579341193892004]], "variables": {"ret": ""}, "variables_p": {"ret": [["List[Dict[str, Any]]", 0.20517744454476855], ["str", 0.14340062935500775], ["dict", 0.10268426499807125], ["Dict[str, None]", 0.09886320460660009], ["Dict[str, Union[float, str]]", 0.09291549356562274], ["list", 0.09044663917848891], ["List[str]", 0.08995817414101047], ["Dict[str, int]", 0.08958246009336326]]}}, {"docstring": {"func": "When the playbook specifies a lookup, this method is run.  The", "long_descr": "arguments to the lookup become the arguments to this method.  One\nadditional keyword argument named ``variables`` is added to the method\ncall.  It contains the variables available to ansible at the time the\nlookup is templated.  For instance::\n\n    \"{{ lookup('url', 'https://toshio.fedorapeople.org/one.txt', validate_certs=True) }}\"\n\nwould end up calling the lookup plugin named url's run method like this::\n    run(['https://toshio.fedorapeople.org/one.txt'], variables=available_variables, validate_certs=True)\n\nLookup plugins can be used within playbooks for looping.  When this\nhappens, the first argument is a list containing the terms.  Lookup\nplugins can also be called from within playbooks to return their\nvalues into a variable or parameter.  If the user passes a string in\nthis case, it is converted into a list.\n\nErrors encountered during execution should be returned by raising\nAnsibleError() with a message describing the error.\n\nAny strings returned by this method that could ever contain non-ascii\nmust be converted into python's unicode type as the strings will be run\nthrough jinja2 which has this requirement.  You can use::\n\n    from ansible.module_utils._text import to_text\n    result_string = to_text(result_string)", "ret": null}, "fn_lc": [[74, 4], [103, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "run", "params": {"kwargs": "", "self": "", "terms": "", "variables": ""}, "params_descr": {"kwargs": "", "self": "", "terms": "", "variables": ""}, "params_occur": {"kwargs": [], "self": [], "terms": [], "variables": []}, "params_p": {"args": [], "kwargs": [], "self": [], "terms": [], "variables": []}, "q_name": "LookupBase.run", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return a file (needle) in the task's expected search path.", "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [119, 21]], "fn_var_ln": {"paths": [[113, 12], [113, 17]], "result": [[115, 8], [115, 14]]}, "fn_var_occur": {"paths": [["paths", "myvars"], ["paths", "self", "get_basedir", "myvars"], ["result", "self", "_loader", "path_dwim_relative_stack", "paths", "subdir", "needle"]], "result": [["result", "self", "_loader", "path_dwim_relative_stack", "paths", "subdir", "needle"], ["result", "None", "ignore_missing"]]}, "name": "find_file_in_search_path", "params": {"ignore_missing": "", "myvars": "", "needle": "", "self": "", "subdir": ""}, "params_descr": {"ignore_missing": "", "myvars": "", "needle": "", "self": "", "subdir": ""}, "params_occur": {"ignore_missing": [["result", "None", "ignore_missing"]], "myvars": [["paths", "myvars"], ["paths", "self", "get_basedir", "myvars"]], "needle": [["result", "self", "_loader", "path_dwim_relative_stack", "paths", "subdir", "needle"], ["self", "_display", "warning", "needle"]], "self": [["paths", "self", "get_basedir", "myvars"], ["result", "self", "_loader", "path_dwim_relative_stack", "paths", "subdir", "needle"], ["self", "_display", "warning", "needle"]], "subdir": [["result", "self", "_loader", "path_dwim_relative_stack", "paths", "subdir", "needle"]]}, "params_p": {"args": [], "ignore_missing": [["str", 0.3304091994264188], ["Optional[str]", 0.20240566367320711], ["Optional[Tuple[str, str]]", 0.10377213673444842]], "kwargs": [], "myvars": [["str", 0.19710783786336625]], "needle": [["str", 0.18666894091974157], ["dict", 0.17157372130225224]], "self": [], "subdir": [["str", 0.20593128700245467]]}, "q_name": "LookupBase.find_file_in_search_path", "ret_exprs": ["return result"], "ret_type": "", "ret_type_p": [["Dict[str, Set[Any]]", 0.5972199566686792], ["Union[dict, List[Any]]", 0.22731818319188846], ["Dict[str, str]", 0.08903527361495377], ["Dict[str, Any]", 0.08642658652447853]], "variables": {"paths": "", "result": ""}, "variables_p": {"paths": [["str", 0.08750376946677227]], "result": [["dict", 0.456744940052801], ["Optional[str]", 0.12161873093882512], ["Tuple[Optional[int], Optional[int]]", 0.0963413738045612]]}}], "name": "LookupBase", "q_name": "LookupBase", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "abc", "ABCMeta", "abstractmethod", "ansible", "compat", "six", "with_metaclass", "__main__", "display", "ansible", "utils", "display", "Display"], "mod_var_ln": {"__all__": [[32, 0], [32, 7]], "__metaclass__": [[20, 0], [20, 13]], "display": [[30, 4], [30, 11]]}, "mod_var_occur": {"__all__": [], "__metaclass__": [], "display": [["self", "_display", "display"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 33}, "session_id": "MDO5AsXqGck-3mpfa8_-SLb0JG7NT0m-8g5zBB--8tw", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__all__": "", "__metaclass__": "", "display": ""}, "variables_p": {"__all__": [["List[str]", 0.7999999999999999], ["Tuple[str]", 0.09999999999999999], ["Tuple[str, str, str]", 0.09999999999999999]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "display": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}}