{"error": null, "response": {"classes": [{"cls_lc": [[223, 0], [256, 18]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[224, 4], [256, 18]], "fn_var_ln": {"b_path": [[230, 12], [230, 18]], "changed": [[243, 16], [243, 23]], "chars": [[231, 12], [231, 17]], "content": [[247, 16], [247, 23]], "params": [[228, 21], [228, 27]], "password": [[251, 16], [251, 24]], "path": [[229, 12], [229, 16]], "plaintext_password": [[240, 16], [240, 34]], "relpath": [[228, 12], [228, 19]], "ret": [[225, 8], [225, 11]], "salt": [[244, 16], [244, 20]]}, "fn_var_occur": {"b_path": [["b_path", "to_bytes", "path", "errors"], ["content", "_read_password_file", "b_path"], ["_write_password_file", "b_path", "content"]], "changed": [["changed", "False"], ["changed", "True"], ["changed", "True"]], "chars": [["chars", "_gen_candidate_chars", "params"], ["plaintext_password", "_random_password", "params", "chars"]], "content": [["content", "_read_password_file", "b_path"], ["content", "None"], ["plaintext_password", "salt", "_parse_content", "content"], ["content", "_format_content", "plaintext_password", "salt", "encrypt", "params"], ["_write_password_file", "b_path", "content"]], "params": [["relpath", "params", "_parse_parameters", "term"], ["chars", "_gen_candidate_chars", "params"], ["plaintext_password", "_random_password", "params", "chars"], ["params", "salt"], ["content", "_format_content", "plaintext_password", "salt", "encrypt", "params"], ["password", "do_encrypt", "plaintext_password", "params", "salt", "salt"]], "password": [["password", "do_encrypt", "plaintext_password", "params", "salt", "salt"], ["ret", "append", "password"]], "path": [["path", "self", "_loader", "path_dwim", "relpath"], ["b_path", "to_bytes", "path", "errors"]], "plaintext_password": [["plaintext_password", "_random_password", "params", "chars"], ["plaintext_password", "salt", "_parse_content", "content"], ["content", "_format_content", "plaintext_password", "salt", "encrypt", "params"], ["password", "do_encrypt", "plaintext_password", "params", "salt", "salt"], ["ret", "append", "plaintext_password"]], "relpath": [["relpath", "params", "_parse_parameters", "term"], ["path", "self", "_loader", "path_dwim", "relpath"]], "ret": [["ret", "append", "password"], ["ret", "append", "plaintext_password"]], "salt": [["salt", "None"], ["plaintext_password", "salt", "_parse_content", "content"], ["params", "salt"], ["salt", "_random_salt"], ["content", "_format_content", "plaintext_password", "salt", "encrypt", "params"], ["password", "do_encrypt", "plaintext_password", "params", "salt", "salt"]]}, "name": "run", "params": {"kwargs": "", "self": "", "terms": "", "variables": ""}, "params_descr": {"kwargs": "", "self": "", "terms": "", "variables": ""}, "params_occur": {"kwargs": [], "self": [["path", "self", "_loader", "path_dwim", "relpath"]], "terms": [], "variables": []}, "params_p": {"args": [], "kwargs": [], "self": [], "terms": [], "variables": []}, "q_name": "LookupModule.run", "ret_exprs": ["return ret"], "ret_type": "", "ret_type_p": [["str", 0.2106897389625328], ["Set[str]", 0.20762927266240747], ["bool", 0.10581813770647755], ["Iterable[cmk.utils.type_defs.SectionName]", 0.09732303870261177], ["IO[str]", 0.09541521299090877]], "variables": {"b_path": "", "changed": "", "chars": "", "content": "", "params": "", "password": "", "path": "", "plaintext_password": "", "relpath": "", "ret": "", "salt": ""}, "variables_p": {"b_path": [["str", 1.0000000000000002]], "changed": [["dict", 0.3836412237880279], ["Dict[int, Optional[str]]", 0.1243074953712134], ["Dict[str, bool]", 0.12159269830476696], ["Dict[str, str]", 0.09459084013227052], ["str", 0.08797999765032771]], "chars": [["str", 0.2840630922085755], ["bool", 0.11230303194959575], ["bytes", 0.10594742780942604], ["Pattern[str]", 0.1047533861165726], ["int", 0.09319694718560856], ["set", 0.08892928305904993]], "content": [["str", 0.6089947966194288], ["List[str]", 0.11229929148099094], ["Optional[str]", 0.11123270052392989], ["Tuple[Literal, Literal]", 0.08378253276339918], ["Dict[str, Union[dict, str]]", 0.08369067861225113]], "params": [["str", 0.38615791661368587], ["float", 0.10490415257408421], ["Union[bytes, str]", 0.09362859909423514]], "password": [["str", 0.4176302911427674], ["list", 0.08580645935255746], ["defaultdict", 0.08250081596706803], ["List[Union[Any, Any]]", 0.07862068010342174], ["MutableMapping[str, Any]", 0.07610659783124188]], "path": [["str", 0.3013485143854998], ["TextIO", 0.0953071768557304], ["bytes", 0.09296858456018751], ["os.DirEntry", 0.0921581302922321]], "plaintext_password": [["str", 0.3013205259362087], ["List[str]", 0.28022619002222504], ["Dict[str, Dict[str, Any]]", 0.12487275182259681], ["int", 0.09510686489114348]], "relpath": [["str", 0.5100870024541357], ["List[str]", 0.10255776457147682], ["list", 0.087678935293196]], "ret": [["list", 0.20589275527416895], ["Dict[str, Any]", 0.11579163027837734], ["Tuple[Tuple[str, Any]]", 0.1028810755839581], ["bool", 0.1015942229668962], ["dict", 0.10024681510838696], ["Dict[str, List[Any]]", 0.09631353910664797], ["Dict[int, Any]", 0.09446153142550026], ["List[Union[Any, Any]]", 0.09203016962800513], ["List[Dict[str, str]]", 0.09078826062805899]], "salt": [["Callable", 0.194852086196277], ["Dict[str, Dict[str, Any]]", 0.09588589659223093], ["int", 0.09407714943396135]]}}], "name": "LookupModule", "q_name": "LookupModule", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Hacky parsing of params", "long_descr": "See https://github.com/ansible/ansible-modules-core/issues/1968#issuecomment-136842156\nand the first_found lookup For how we want to fix this later", "ret": null}, "fn_lc": [[40, 0], [87, 26]], "fn_var_ln": {"first_split": [[46, 4], [46, 15]], "invalid_params": [[68, 4], [68, 18]], "params": [[53, 8], [53, 14]], "relpath": [[56, 12], [56, 19]], "tmp_chars": [[78, 8], [78, 17]]}, "fn_var_occur": {"first_split": [["first_split", "term", "split"], ["len", "first_split"], ["relpath", "first_split"], ["params", "parse_kv", "first_split"]], "invalid_params": [["invalid_params", "frozenset", "params", "keys", "difference", "VALID_PARAMS"], ["AnsibleError", "join", "invalid_params"]], "params": [["params", "dict"], ["params", "parse_kv", "first_split"], ["relpath", "join", "relpath", "params"], ["invalid_params", "frozenset", "params", "keys", "difference", "VALID_PARAMS"], ["params", "int", "params", "get", "DEFAULT_LENGTH"], ["params", "params", "get", "None"], ["params", "params", "get", "None"], ["tmp_chars", "extend", "c", "c", "params", "replace", "split", "c"], ["params", "tmp_chars"], ["relpath", "params"]], "relpath": [["relpath", "term"], ["relpath", "first_split"], ["relpath", "join", "relpath", "params"], ["term", "startswith", "relpath"], ["relpath", "params"]], "tmp_chars": [["tmp_chars", "append"], ["tmp_chars", "extend", "c", "c", "params", "replace", "split", "c"], ["params", "tmp_chars"]]}, "name": "_parse_parameters", "params": {"term": ""}, "params_descr": {"term": ""}, "params_occur": {"term": [["first_split", "term", "split"], ["relpath", "term"], ["term", "startswith", "relpath"]]}, "params_p": {"args": [], "kwargs": [], "term": [["str", 0.8959598106338729], ["Exception", 0.10404018936612719]]}, "q_name": "_parse_parameters", "ret_exprs": ["return relpath, params"], "ret_type": "", "ret_type_p": [["int", 0.6666666666125791], ["Optional[str]", 0.22222222220419305], ["str", 0.11111111110209652], ["Iterable[T]", 8.1131156974361e-11]], "variables": {"first_split": "", "invalid_params": "", "params": "", "relpath": "", "tmp_chars": ""}, "variables_p": {"first_split": [["str", 0.2570804064596651], ["tuple", 0.24630452748368867], ["Pattern[str]", 0.21031582599688975], ["dict", 0.17411674046082282], ["list", 0.11218249959893357]], "invalid_params": [["List[str]", 0.11417457339345198], ["Dict[str, int]", 0.092624402041826], ["list", 0.08402709463639899]], "params": [["str", 0.9097625476514482], ["Tuple[str]", 0.09023745234855196]], "relpath": [["str", 0.27994849679989103], ["List[str]", 0.1833419882790481], ["raiden.utils.signer.LocalSigner", 0.11795213745606895], ["Pattern[str]", 0.10727405762882894], ["Tuple[Any, Any, Any, Any, Any, Any]", 0.10177877466559308]], "tmp_chars": [["list", 0.42192151556488855], ["List[str]", 0.19309860780207438], ["bytes", 0.10171207698189132], ["List[bytes]", 0.09686685710611967], ["str", 0.09036921943659966]]}}, {"docstring": {"func": "Read the contents of a password file and return it", "long_descr": null, "ret": "a text string containing the contents of the password file or\nNone if no password file was present."}, "fn_lc": [[90, 0], [103, 18]], "fn_var_ln": {"b_content": [[100, 12], [100, 21]], "content": [[101, 8], [101, 15]]}, "fn_var_occur": {"b_content": [["b_content", "f", "read", "rstrip"], ["content", "to_text", "b_content", "errors"]], "content": [["content", "None"], ["content", "to_text", "b_content", "errors"]]}, "name": "_read_password_file", "params": {"b_path": ""}, "params_descr": {"b_path": "A byte string containing the path to the password file"}, "params_occur": {"b_path": [["os", "path", "exists", "b_path"], ["open", "b_path", "f"]]}, "params_p": {"args": [], "b_path": [["str", 0.7039448672586132], ["dict", 0.20100189327300524], ["bool", 0.09505323946838158]], "kwargs": []}, "q_name": "_read_password_file", "ret_exprs": ["return content"], "ret_type": "", "ret_type_p": [["str", 0.389566984173646], ["bool", 0.1223263658185411], ["List[str]", 0.10239764749256747]], "variables": {"b_content": "", "content": ""}, "variables_p": {"b_content": [["str", 0.586337222610255], ["list", 0.18523661890163776], ["Dict[int, str]", 0.11009898575062964]], "content": [["Optional[bytes]", 0.27982102340800263], ["str", 0.17956514483474775], ["OrderedDict[str, Any]", 0.103923277913086], ["Optional[str]", 0.09968207260393251], ["list", 0.09829319086485941], ["int", 0.0808131310427273], ["TypeError", 0.07752868827817282]]}}, {"docstring": {"func": "Generate a string containing all valid chars as defined by ``characters``", "long_descr": null, "ret": null}, "fn_lc": [[106, 0], [136, 16]], "fn_var_ln": {"chars": [[135, 4], [135, 9]]}, "fn_var_occur": {"chars": [["chars", "append", "to_text", "getattr", "string", "to_native", "chars_spec", "chars_spec", "errors"], ["chars", "join", "chars", "replace", "replace"]]}, "name": "_gen_candidate_chars", "params": {"characters": ""}, "params_descr": {"characters": "A list of character specs. The character specs are\nshorthand names for sets of characters like 'digits', 'ascii_letters',\n    or 'punctuation' or a string to be included verbatim.\n\nThe values of each char spec can be:\n\n* a name of an attribute in the 'strings' module ('digits' for example).\n  The value of the attribute will be added to the candidate chars.\n* a string of characters. If the string isn't an attribute in 'string'\n  module, the string will be directly added to the candidate chars.\n\nFor example::\n\n    characters=['digits', '?|']``\n\nwill match ``string.digits`` and add all ascii digits.  ``'?|'`` will add\nthe question mark and pipe characters directly. Return will be the string::\n\n    u'0123456789?|'"}, "params_occur": {"characters": []}, "params_p": {"args": [], "characters": [["str", 0.560602587886979], ["bool", 0.257670291534716], ["List[str]", 0.10256514618843861], ["dict", 0.03417363880849662]], "kwargs": []}, "q_name": "_gen_candidate_chars", "ret_exprs": ["return chars"], "ret_type": "", "ret_type_p": [["str", 0.6945453689326373], ["int", 0.116857191802574], ["bool", 0.10454830548295181], ["Dict[str, Union[Any, Any]]", 0.08404913378183705]], "variables": {"chars": ""}, "variables_p": {"chars": [["str", 0.8937363247391975], ["List[str]", 0.1062636752608026]]}}, {"docstring": {"func": "Return a random password string of length containing only chars", "long_descr": null, "ret": null}, "fn_lc": [[139, 0], [158, 29]], "fn_var_ln": {"new_char": [[155, 8], [155, 16]], "password": [[153, 4], [153, 12]], "random_generator": [[151, 4], [151, 20]]}, "fn_var_occur": {"new_char": [["new_char", "random_generator", "choice", "chars"], ["password", "append", "new_char"]], "password": [["len", "password", "length"], ["password", "append", "new_char"], ["join", "password"]], "random_generator": [["random_generator", "random", "SystemRandom"], ["new_char", "random_generator", "choice", "chars"]]}, "name": "_random_password", "params": {"chars": "", "length": ""}, "params_descr": {"chars": "", "length": ""}, "params_occur": {"chars": [["isinstance", "chars", "text_type", "chars", "type", "chars"], ["new_char", "random_generator", "choice", "chars"]], "length": [["len", "password", "length"]]}, "params_p": {"args": [], "chars": [["str", 0.40661711381243343], ["Mapping", 0.1021668627421693]], "kwargs": [], "length": [["str", 0.9139721597827878], ["int", 0.08602784021721221]]}, "q_name": "_random_password", "ret_exprs": ["return u''.join(password)"], "ret_type": "", "ret_type_p": [["str", 0.6665157628681126], ["bool", 0.23252933562929887], ["list", 0.10095490150258844]], "variables": {"new_char": "", "password": "", "random_generator": ""}, "variables_p": {"new_char": [["str", 0.3182911731484436], ["list", 0.10671726485417053], ["int", 0.10370537729512327], ["set", 0.10172203706597006], ["List[List[Any]]", 0.09664521962669757], ["Set[str]", 0.09632250934309175], ["List[list]", 0.08910861875093642]], "password": [["list", 0.663290760674899], ["List[str]", 0.08650389570241589], ["List[Union[Any, Any]]", 0.08027287222514187], ["str", 0.0781979035026496]], "random_generator": [["float", 0.40596776342184265], ["Tuple[Literal, Literal]", 0.13660462728231493], ["SupportsInt", 0.09827650301825547], ["int", 0.09066761799023837], ["random.SystemRandom", 0.08722209785985036], ["Set[int]", 0.08719608744655832]]}}, {"docstring": {"func": "Return a text string suitable for use as a salt for the hash functions we use to encrypt passwords.", "long_descr": null, "ret": null}, "fn_lc": [[161, 0], [167, 55]], "fn_var_ln": {"salt_chars": [[166, 4], [166, 14]]}, "fn_var_occur": {"salt_chars": [["salt_chars", "_gen_candidate_chars"], ["_random_password", "length", "chars", "salt_chars"]]}, "name": "_random_salt", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_random_salt", "ret_exprs": ["return _random_password(length=8, chars=salt_chars)"], "ret_type": "", "ret_type_p": [["int", 0.5715385371314492], ["bytes", 0.1271813028531545], ["Dict[str, int]", 0.09221021907395252]], "variables": {"salt_chars": ""}, "variables_p": {"salt_chars": [["int", 0.3025347132086116], ["List[str]", 0.19497689225899487], ["str", 0.1928297044948044], ["Dict[str, Optional[Any]]", 0.11526493095964185], ["Union[Literal, str]", 0.11360458638112804], ["list", 0.08078917269681923]]}}, {"docstring": {"func": "parse our password data format into password and salt", "long_descr": null, "ret": "password and salt"}, "fn_lc": [[170, 0], [189, 25]], "fn_var_ln": {"password": [[187, 8], [187, 16]], "salt": [[186, 8], [186, 12]], "salt_slug": [[179, 4], [179, 13]], "sep": [[181, 8], [181, 11]]}, "fn_var_occur": {"password": [["password", "content"], ["salt", "password", "sep", "len", "salt_slug"], ["password", "content", "sep"], ["password", "salt"]], "salt": [["salt", "None"], ["salt", "password", "sep", "len", "salt_slug"], ["password", "salt"]], "salt_slug": [["sep", "content", "rindex", "salt_slug"], ["salt", "password", "sep", "len", "salt_slug"]], "sep": [["sep", "content", "rindex", "salt_slug"], ["salt", "password", "sep", "len", "salt_slug"], ["password", "content", "sep"]]}, "name": "_parse_content", "params": {"content": ""}, "params_descr": {"content": "The data read from the file"}, "params_occur": {"content": [["password", "content"], ["sep", "content", "rindex", "salt_slug"], ["password", "content", "sep"]]}, "params_p": {"args": [], "content": [["str", 0.10168502643183691]], "kwargs": []}, "q_name": "_parse_content", "ret_exprs": ["return password, salt"], "ret_type": "", "ret_type_p": [["str", 0.8161452480556849], ["bytes", 0.09406125446119194]], "variables": {"password": "", "salt": "", "salt_slug": "", "sep": ""}, "variables_p": {"password": [["bytes", 0.20649165489484902], ["list", 0.20408795026567306], ["Counter[Any]", 0.1014535982851584], ["Pattern[str]", 0.09984116238218578], ["Dict[str, List[str]]", 0.09883836272614938], ["Dict[str, str]", 0.09883836272614938], ["List[Union[int, str]]", 0.09794947590507046], ["str", 0.09249943281476451]], "salt": [["List[Dict[str, Any]]", 0.20444659564754802], ["int", 0.19507739688950654], ["list", 0.18626318852710244], ["List[Dict[str, str]]", 0.11414421309759573], ["List[float]", 0.0988180175214938], ["Tuple[Any, None]", 0.08481953443299169]], "salt_slug": [["list", 0.23426527893715024], ["List[float]", 0.10985263318953144], ["float", 0.09744003720414565], ["List[int]", 0.09033807525930945], ["int", 0.09033807525930945], ["Dict[str, Dict[str, Any]]", 0.08343686784832499]], "sep": [["int", 0.1494925548466998], ["float", 0.08863899469106681], ["Dict[str, Literal]", 0.08311175094187892], ["str", 0.08016905307757177]]}}, {"docstring": {"func": "Format the password and salt for saving", "long_descr": null, "ret": "a text string containing the formatted information\n.. warning:: Passwords are saved in clear.  This is because the playbooks\n    expect to get cleartext passwords from this lookup."}, "fn_lc": [[192, 0], [210, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_format_content", "params": {"encrypt": "", "password": "", "salt": ""}, "params_descr": {"encrypt": "Whether the user requests that this password is encrypted.\nNote that the password is saved in clear.  Encrypt just tells us if we\nmust save the salt value for idempotence.  Defaults to True.", "password": "the plaintext password to save", "salt": "the salt to use when encrypting a password"}, "params_occur": {"encrypt": [["encrypt", "salt"]], "password": [["password", "salt"]], "salt": [["encrypt", "salt"], ["password", "salt"]]}, "params_p": {"args": [], "encrypt": [["bytes", 0.304116891205747], ["int", 0.3016297875952996], ["str", 0.3004082898387325]], "kwargs": [], "password": [["bytes", 0.304116891205747], ["int", 0.3016297875952996], ["str", 0.3004082898387325]], "salt": [["bytes", 0.304116891205747], ["int", 0.3016297875952996], ["str", 0.3004082898387325]]}, "q_name": "_format_content", "ret_exprs": ["return password", "return u'%s salt=%s' % (password, salt)"], "ret_type": "", "ret_type_p": [["str", 0.3890145171157839], ["Dict[str, str]", 0.09941358152804114], ["List[str]", 0.09403787581941041], ["Optional[str]", 0.09193575030658205], ["bool", 0.0917359462473591]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[213, 0], [220, 26]], "fn_var_ln": {"b_content": [[219, 8], [219, 17]], "b_pathdir": [[214, 4], [214, 13]]}, "fn_var_occur": {"b_content": [["b_content", "to_bytes", "content", "errors"], ["f", "write", "b_content"]], "b_pathdir": [["b_pathdir", "os", "path", "dirname", "b_path"], ["makedirs_safe", "b_pathdir", "mode"]]}, "name": "_write_password_file", "params": {"b_path": "", "content": ""}, "params_descr": {"b_path": "", "content": ""}, "params_occur": {"b_path": [["b_pathdir", "os", "path", "dirname", "b_path"], ["open", "b_path", "f"], ["os", "chmod", "b_path"]], "content": [["b_content", "to_bytes", "content", "errors"]]}, "params_p": {"args": [], "b_path": [["str", 0.35991358152742126], ["bool", 0.11649887318924222], ["int", 0.11649887318924222]], "content": [["bytes", 0.42644300591206485], ["str", 0.18791091973598806], ["Union[str, bytes]", 0.09587099095908672], ["BinaryIO", 0.07946268332003206]], "kwargs": []}, "q_name": "_write_password_file", "ret_exprs": [], "ret_type": "", "variables": {"b_content": "", "b_pathdir": ""}, "variables_p": {"b_content": [["bytes", 0.32020052554870326], ["str", 0.2997534669397457], ["bool", 0.1141661606412105], ["List[str]", 0.09279092554669786], ["int", 0.09022375817690526]], "b_pathdir": [["str", 0.48475868712522063], ["List[str]", 0.3015524800396804], ["Union[Literal[False], str]", 0.11083073468769448]]}}], "imports": ["__future__", "absolute_import", "division", "print_function", "os", "string", "random", "ansible", "constants", "C", "ansible", "compat", "six", "text_type", "ansible", "errors", "AnsibleError", "ansible", "module_utils", "_text", "to_bytes", "to_native", "to_text", "ansible", "parsing", "splitter", "parse_kv", "ansible", "plugins", "lookup", "LookupBase", "ansible", "utils", "encrypt", "do_encrypt", "ansible", "utils", "path", "makedirs_safe"], "mod_var_ln": {"DEFAULT_LENGTH": [[36, 0], [36, 14]], "VALID_PARAMS": [[37, 0], [37, 12]], "__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"DEFAULT_LENGTH": [["params", "int", "params", "get", "DEFAULT_LENGTH"]], "VALID_PARAMS": [["invalid_params", "frozenset", "params", "keys", "difference", "VALID_PARAMS"]], "__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 55}, "session_id": "lc2vLnBHrOkF9KLKcxlAmHB--6hR1Fq2_Izu8NvKb68", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_LENGTH": "", "VALID_PARAMS": "", "__metaclass__": ""}, "variables_p": {"DEFAULT_LENGTH": [["int", 0.9999999999999999]], "VALID_PARAMS": [["Dict[Any, str]", 0.72364679402612], ["Dict[str, List[str]]", 0.09877045063082675], ["List[str]", 0.08896931821438907], ["Dict[str, Any]", 0.08861343712866424]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}