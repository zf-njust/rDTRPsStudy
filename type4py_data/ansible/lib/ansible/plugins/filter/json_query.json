{"error": null, "response": {"classes": [{"cls_lc": [[42, 0], [48, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [48, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "filters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "FilterModule.filters", "ret_exprs": ["return { 'json_query': json_query}"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.21484883323076404], ["str", 0.11388469802088078], ["Dict[str, str]", 0.10287880491310282], ["bool", 0.09871492000506368], ["Dict[Tuple[int, ...], float]", 0.08893479498691909]], "variables": {}, "variables_p": {}}], "name": "FilterModule", "q_name": "FilterModule", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Query data using jmespath query language ( http://jmespath.org ). Example:", "long_descr": "- debug: msg=\"{{ instance | json_query(tagged_instances[*].block_device_mapping.*.volume_id') }}\"", "ret": null}, "fn_lc": [[32, 0], [40, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "json_query", "params": {"data": "", "expr": ""}, "params_descr": {"data": "", "expr": ""}, "params_occur": {"data": [["jmespath", "search", "expr", "data"]], "expr": [["jmespath", "search", "expr", "data"]]}, "params_p": {"args": [], "data": [["str", 0.7775914608158182], ["Optional[Callable[[Any, Any], None]]", 0.12987453690101555], ["Dict[str, str]", 0.09253400228316629]], "expr": [["str", 0.7775914608158182], ["Optional[Callable[[Any, Any], None]]", 0.12987453690101555], ["Dict[str, str]", 0.09253400228316629]], "kwargs": []}, "q_name": "json_query", "ret_exprs": ["return jmespath.search(expr, data)"], "ret_type": "", "ret_type_p": [["int", 0.2959190687641543], ["str", 0.09725872106373427], ["hackathon.utils.utils.DataMessage", 0.09164927559093718]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "absolute_import", "division", "print_function", "ansible", "errors", "AnsibleError", "ansible", "plugins", "lookup", "LookupBase", "ansible", "utils", "listify", "listify_lookup_plugin_terms", "jmespath"], "mod_var_ln": {"HAS_LIB": [[29, 4], [29, 11]], "__metaclass__": [[19, 0], [19, 13]]}, "mod_var_occur": {"HAS_LIB": [["HAS_LIB"]], "__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 6}, "session_id": "XM4mdwSmv6trbP-_vZACYxFK965PpNHzL1P-ZeGjoZg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"HAS_LIB": "", "__metaclass__": ""}, "variables_p": {"HAS_LIB": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}