{"error": null, "response": {"classes": [{"cls_lc": [[51, 0], [731, 31]], "cls_var_ln": {"become_methods": [[56, 4], [56, 18]], "has_pipelining": [[55, 4], [55, 18]], "transport": [[54, 4], [54, 13]]}, "cls_var_occur": {"become_methods": [], "has_pipelining": [], "transport": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [61, 50]], "fn_var_ln": {"host": [[61, 8], [61, 17]]}, "fn_var_occur": {"host": [["self", "host", "self", "_play_context", "remote_addr"]]}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "Connection", "self", "__init__", "args", "kwargs"]], "kwargs": [["super", "Connection", "self", "__init__", "args", "kwargs"]], "self": [["super", "Connection", "self", "__init__", "args", "kwargs"], ["self", "host", "self", "_play_context", "remote_addr"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.__init__", "ret_exprs": [], "ret_type": "", "variables": {"host": ""}, "variables_p": {"host": [["int", 0.9999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [68, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_connect", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection._connect", "ret_exprs": ["return self"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [86, 32]], "fn_var_ln": {"SSHPASS_AVAILABLE": [[84, 16], [84, 33]], "p": [[80, 16], [80, 17]]}, "fn_var_occur": {"SSHPASS_AVAILABLE": [["SSHPASS_AVAILABLE", "None"], ["SSHPASS_AVAILABLE", "True"], ["SSHPASS_AVAILABLE", "False"]], "p": [["p", "subprocess", "Popen", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["p", "communicate"]]}, "name": "_sshpass_available", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection._sshpass_available", "ret_exprs": ["return SSHPASS_AVAILABLE"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"SSHPASS_AVAILABLE": "", "p": ""}, "variables_p": {"SSHPASS_AVAILABLE": [["Optional[str]", 0.17782994584047415], ["str", 0.1246469375687192], ["Optional[List[str]]", 0.1159458590284902], ["Optional[Dict[str, int]]", 0.10713173130787139], ["Optional[Dict[str, str]]", 0.10713173130787139], ["frozenset[str]", 0.08891497292023708], ["ImportError", 0.08891497292023708]], "p": [["subprocess.CompletedProcess[bytes]", 0.4953664856386522], ["subprocess.Popen[Any]", 0.33110434611242756], ["List[str]", 0.09998150923553756], ["str", 0.07354765901338249]]}}, {"docstring": {"func": "Takes a command array and scans it for ControlPersist and ControlPath", "long_descr": "settings and returns two booleans indicating whether either was found.\nThis could be smarter, e.g. returning false if ControlPersist is 'no',\nbut for now we do it simple way.", "ret": null}, "fn_lc": [[89, 4], [106, 42]], "fn_var_ln": {"controlpath": [[104, 16], [104, 27]], "controlpersist": [[102, 16], [102, 30]]}, "fn_var_occur": {"controlpath": [["controlpath", "False"], ["controlpath", "True"], ["controlpersist", "controlpath"]], "controlpersist": [["controlpersist", "False"], ["controlpersist", "True"], ["controlpersist", "controlpath"]]}, "name": "_persistence_controls", "params": {"b_command": ""}, "params_descr": {"b_command": ""}, "params_occur": {"b_command": [["a", "lower", "a", "b_command"]]}, "params_p": {"args": [], "b_command": [["Optional[Union[str, Any]]", 0.08514246515569364], ["bytes", 0.08442061075723184], ["metrics_backend.utils.Address", 0.08079111368682673]], "kwargs": [], "self": []}, "q_name": "Connection._persistence_controls", "ret_exprs": ["return controlpersist, controlpath"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"controlpath": "", "controlpersist": ""}, "variables_p": {"controlpath": [["list", 0.6666666666416292], ["int", 0.3333333333208146], ["str", 1.581340141885634e-11], ["bool", 1.3613298750341383e-11], ["List[str]", 3.511580396818342e-12]], "controlpersist": [["list", 0.6666666666416292], ["int", 0.3333333333208146], ["str", 1.581340141885634e-11], ["bool", 1.3613298750341383e-11], ["List[str]", 3.511580396818342e-12]]}}, {"docstring": {"func": "Adds arguments to the ssh command and displays a caller-supplied explanation of why.", "long_descr": null, "ret": null}, "fn_lc": [[108, 4], [122, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_add_args", "params": {"b_args": "", "b_command": "", "explanation": "", "self": ""}, "params_descr": {"b_args": "An iterable of new arguments to add.  This iterable is used\nmore than once so it must be persistent (ie: a list is okay but a\nStringIO would not)", "b_command": "A list containing the command to add the new arguments to.\nThis list will be modified by this method.", "explanation": "A text string containing explaining why the arguments\nwere added.  It will be displayed with a high enough verbosity.\n.. note:: This function does its work via side-effect.  The b_command list has the new arguments appended.", "self": ""}, "params_occur": {"b_args": [["display", "vvvvv", "explanation", "join", "to_text", "a", "a", "b_args", "host", "self", "_play_context", "remote_addr"], ["b_command", "b_args"]], "b_command": [["b_command", "b_args"]], "explanation": [["display", "vvvvv", "explanation", "join", "to_text", "a", "a", "b_args", "host", "self", "_play_context", "remote_addr"]], "self": [["display", "vvvvv", "explanation", "join", "to_text", "a", "a", "b_args", "host", "self", "_play_context", "remote_addr"]]}, "params_p": {"args": [], "b_args": [["str", 0.5748322526947016], ["List[str]", 0.23837073960035188], ["int", 0.09059150297853648]], "b_command": [["int", 0.624429262971825], ["bool", 0.18369957208646226], ["List[str]", 0.0969545071917824]], "explanation": [["str", 0.605767249986813], ["List[str]", 0.09544368030771909]], "kwargs": [], "self": []}, "q_name": "Connection._add_args", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Takes a binary (ssh, scp, sftp) and optional extra arguments and returns", "long_descr": "a command line as an array that can be passed to subprocess.Popen.", "ret": null}, "fn_lc": [[124, 4], [246, 24]], "fn_var_ln": {"_persistent": [[228, 12], [228, 28]], "attr": [[217, 12], [217, 16]], "b_args": [[239, 16], [239, 22]], "b_command": [[130, 8], [130, 17]], "b_cpdir": [[232, 16], [232, 23]], "controlpath": [[225, 24], [225, 35]], "controlpersist": [[225, 8], [225, 22]], "cpdir": [[231, 16], [231, 21]], "key": [[186, 8], [186, 11]], "sshpass_pipe": [[143, 12], [143, 29]], "user": [[201, 8], [201, 12]]}, "fn_var_occur": {"_persistent": [["self", "_persistent", "True"]], "attr": [["attr", "getattr", "self", "_play_context", "opt", "None"], ["attr", "None"], ["b_args", "to_bytes", "a", "errors", "a", "self", "_split_ssh_args", "attr"]], "b_args": [["self", "_add_args", "b_command", "b_args"], ["b_args", "to_bytes", "a", "errors", "a", "self", "_split_ssh_args", "self", "_play_context", "ssh_args"], ["self", "_add_args", "b_command", "b_args"], ["self", "_add_args", "b_command", "b_args"], ["b_args", "to_bytes", "self", "_play_context", "port", "nonstring", "errors"], ["self", "_add_args", "b_command", "b_args"], ["b_args", "to_bytes", "os", "path", "expanduser", "key", "errors"], ["self", "_add_args", "b_command", "b_args"], ["b_args", "to_bytes", "a", "errors", "a", "self", "_split_ssh_args", "attr"], ["self", "_add_args", "b_command", "b_args", "opt"], ["b_args", "to_bytes", "C", "ANSIBLE_SSH_CONTROL_PATH", "dict", "directory", "cpdir", "errors"], ["self", "_add_args", "b_command", "b_args"]], "b_command": [["b_command", "to_bytes", "self", "sshpass_pipe", "nonstring", "errors"], ["b_command", "to_bytes", "binary", "errors"], ["self", "_add_args", "b_command", "b_args"], ["b_command", "append"], ["self", "_add_args", "b_command", "b_args"], ["self", "_add_args", "b_command", "b_args"], ["self", "_add_args", "b_command", "b_args"], ["self", "_add_args", "b_command", "b_args"], ["self", "_add_args", "b_command"], ["self", "_add_args", "b_command", "to_bytes", "self", "_play_context", "remote_user", "errors"], ["self", "_add_args", "b_command", "to_bytes", "self", "_play_context", "timeout", "errors", "nonstring"], ["self", "_add_args", "b_command", "b_args", "opt"], ["controlpersist", "controlpath", "self", "_persistence_controls", "b_command"], ["self", "_add_args", "b_command", "b_args"], ["b_command", "to_bytes", "a", "a", "other_args"]], "b_cpdir": [["b_cpdir", "to_bytes", "cpdir", "errors"], ["makedirs_safe", "b_cpdir"], ["os", "access", "b_cpdir", "os", "W_OK"]], "controlpath": [["controlpersist", "controlpath", "self", "_persistence_controls", "b_command"]], "controlpersist": [["controlpersist", "controlpath", "self", "_persistence_controls", "b_command"]], "cpdir": [["cpdir", "unfrackpath"], ["b_cpdir", "to_bytes", "cpdir", "errors"], ["AnsibleError", "to_native", "cpdir"], ["b_args", "to_bytes", "C", "ANSIBLE_SSH_CONTROL_PATH", "dict", "directory", "cpdir", "errors"]], "key": [["key", "self", "_play_context", "private_key_file"], ["b_args", "to_bytes", "os", "path", "expanduser", "key", "errors"]], "sshpass_pipe": [["self", "sshpass_pipe", "os", "pipe"], ["b_command", "to_bytes", "self", "sshpass_pipe", "nonstring", "errors"]], "user": [["user", "self", "_play_context", "remote_user"]]}, "name": "_build_command", "params": {"binary": "", "other_args": "", "self": ""}, "params_descr": {"binary": "", "other_args": "", "self": ""}, "params_occur": {"binary": [["b_command", "to_bytes", "binary", "errors"], ["binary", "C", "DEFAULT_SFTP_BATCH_MODE"], ["format", "binary"]], "other_args": [["b_command", "to_bytes", "a", "a", "other_args"]], "self": [["self", "_play_context", "password"], ["self", "_sshpass_available"], ["self", "sshpass_pipe", "os", "pipe"], ["b_command", "to_bytes", "self", "sshpass_pipe", "nonstring", "errors"], ["self", "_play_context", "password"], ["self", "_add_args", "b_command", "b_args"], ["self", "_play_context", "verbosity"], ["self", "_play_context", "ssh_args"], ["b_args", "to_bytes", "a", "errors", "a", "self", "_split_ssh_args", "self", "_play_context", "ssh_args"], ["self", "_add_args", "b_command", "b_args"], ["self", "_add_args", "b_command", "b_args"], ["self", "_play_context", "port", "None"], ["b_args", "to_bytes", "self", "_play_context", "port", "nonstring", "errors"], ["self", "_add_args", "b_command", "b_args"], ["key", "self", "_play_context", "private_key_file"], ["self", "_add_args", "b_command", "b_args"], ["self", "_play_context", "password"], ["self", "_add_args", "b_command"], ["user", "self", "_play_context", "remote_user"], ["self", "_add_args", "b_command", "to_bytes", "self", "_play_context", "remote_user", "errors"], ["self", "_add_args", "b_command", "to_bytes", "self", "_play_context", "timeout", "errors", "nonstring"], ["attr", "getattr", "self", "_play_context", "opt", "None"], ["b_args", "to_bytes", "a", "errors", "a", "self", "_split_ssh_args", "attr"], ["self", "_add_args", "b_command", "b_args", "opt"], ["controlpersist", "controlpath", "self", "_persistence_controls", "b_command"], ["self", "_persistent", "True"], ["self", "_add_args", "b_command", "b_args"]]}, "params_p": {"args": [], "binary": [["int", 0.4879533808676415], ["bytes", 0.0963330173033654]], "kwargs": [], "other_args": [["str", 0.47529232884710343], ["int", 0.11196641377049119], ["Tuple[int, int]", 0.10838571213376542], ["bytes", 0.09505846576942069]], "self": []}, "q_name": "Connection._build_command", "ret_exprs": ["return b_command"], "ret_type": "", "ret_type_p": [["bytes", 0.09404037034598639]], "variables": {"_persistent": "", "attr": "", "b_args": "", "b_command": "", "b_cpdir": "", "controlpath": "", "controlpersist": "", "cpdir": "", "key": "", "sshpass_pipe": "", "user": ""}, "variables_p": {"_persistent": [["str", 0.7702907856156962], ["bool", 0.15357069239239746]], "attr": [["str", 0.42725987543365906], ["List[str]", 0.28754406587124176], ["bytes", 0.09866966414269873], ["Container[str]", 0.09034665012267398]], "b_args": [["bytes", 0.27858094245962994], ["str", 0.09354927671580002], ["tuple", 0.08713393533388764], ["List[str]", 0.0836147884287817]], "b_command": [["bytes", 1.0]], "b_cpdir": [["str", 0.30200238118348777], ["int", 0.17977583494417432], ["Union[int, str]", 0.12895509911199027], ["bool", 0.10663066049643453], ["List[int]", 0.10016882625222719], ["Tuple[bool]", 0.08810380229688526]], "controlpath": [["Dict[str, str]", 0.19999999999999998], ["List[Tuple[str, str, Any]]", 0.19999999999999998], ["str", 0.19999999999999998], ["Dict[str, Union[dict, Any]]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "controlpersist": [["Dict[str, str]", 0.19999999999999998], ["List[Tuple[str, str, Any]]", 0.19999999999999998], ["str", 0.19999999999999998], ["Dict[str, Union[dict, Any]]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "cpdir": [["str", 0.40115735480726816], ["Dict[bytes, bytes]", 0.20332235666943135], ["Tuple[List[Any], List[Any], List[Any]]", 0.17628422715849232], ["Optional[str]", 0.12767480125587927]], "key": [["bytes", 0.8217386345752682]], "sshpass_pipe": [["str", 0.39025593111950074], ["bytes", 0.28318965955016134], ["Dict[str, int]", 0.1260485677425092]], "user": [["Dict[str, Dict[str, Any]]", 0.2713093500602817], ["int", 0.10802098672524424], ["Type[Dict[str, Any]]", 0.09645027510054448], ["str", 0.0964175285681675], ["list", 0.09543581218287195]]}}, {"docstring": {"func": "Writes initial data to the stdin filehandle of the subprocess and closes", "long_descr": "it. (The handle must be closed; otherwise, for example, \"sftp -b -\" will\njust hang forever waiting for more commands.)", "ret": null}, "fn_lc": [[248, 4], [263, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_send_initial_data", "params": {"fh": "", "in_data": "", "self": ""}, "params_descr": {"fh": "", "in_data": "", "self": ""}, "params_occur": {"fh": [["fh", "write", "to_bytes", "in_data"], ["fh", "close"]], "in_data": [["fh", "write", "to_bytes", "in_data"], ["display", "debug", "len", "in_data"]], "self": []}, "params_p": {"args": [], "fh": [["bytes", 0.4178541628357197], ["str", 0.30587022490483307], ["float", 0.09726143648177749]], "in_data": [["str", 0.5077801343007737], ["bytes", 0.4922198656992264]], "kwargs": [], "self": []}, "q_name": "Connection._send_initial_data", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Terminate a process, ignoring errors ", "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [272, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_terminate_process", "params": {"p": ""}, "params_descr": {"p": ""}, "params_occur": {"p": [["p", "terminate"]]}, "params_p": {"args": [], "kwargs": [], "p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "self": []}, "q_name": "Connection._terminate_process", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Takes a string, extracts complete lines from it, tests to see if they", "long_descr": "are a prompt, error message, etc., and sets appropriate flags in self.\nPrompt and success lines are removed.\n\nReturns the processed (i.e. possibly-edited) output and the unprocessed\nremainder (to be processed with the next chunk) as strings.", "ret": null}, "fn_lc": [[276, 4], [320, 42]], "fn_var_ln": {"display_line": [[288, 12], [288, 24]], "output": [[318, 12], [318, 18]], "remainder": [[317, 12], [317, 21]], "suppress_output": [[299, 16], [299, 31]]}, "fn_var_occur": {"display_line": [["display_line", "to_text", "b_line", "rstrip"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"]], "output": [["output", "append", "b_line"], ["output", "output", "endswith"], ["remainder", "output"], ["output", "output"], ["join", "output", "remainder"]], "remainder": [["remainder", "output"], ["join", "output", "remainder"]], "suppress_output": [["suppress_output", "False"], ["suppress_output", "True"], ["suppress_output", "True"]]}, "name": "_examine_output", "params": {"b_chunk": "", "self": "", "source": "", "state": "", "sudoable": ""}, "params_descr": {"b_chunk": "", "self": "", "source": "", "state": "", "sudoable": ""}, "params_occur": {"b_chunk": [["b_chunk", "splitlines", "True"]], "self": [["self", "_play_context", "prompt", "self", "check_password_prompt", "b_line"], ["self", "_flags", "True"], ["self", "_play_context", "success_key", "self", "check_become_success", "b_line"], ["self", "_flags", "True"], ["sudoable", "self", "check_incorrect_password", "b_line"], ["self", "_flags", "True"], ["sudoable", "self", "check_missing_password", "b_line"], ["self", "_flags", "True"]], "source": [["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"]], "state": [["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"]], "sudoable": [["sudoable", "self", "check_incorrect_password", "b_line"], ["sudoable", "self", "check_missing_password", "b_line"]]}, "params_p": {"args": [], "b_chunk": [["bool", 0.6109548970912582], ["str", 0.23343964727699687], ["List[Dict]", 0.07956172394366881], ["Optional[bool]", 0.0760437316880762]], "kwargs": [], "self": [], "source": [["bool", 0.20514405988056528], ["str", 0.19524482562991302], ["int", 0.09776701350771509], ["Optional[float]", 0.09217701490954122], ["MutableSequence[str]", 0.09170395179828413]], "state": [["bool", 0.20514405988056528], ["str", 0.19524482562991302], ["int", 0.09776701350771509], ["Optional[float]", 0.09217701490954122], ["MutableSequence[str]", 0.09170395179828413]], "sudoable": [["str", 1.0]]}, "q_name": "Connection._examine_output", "ret_exprs": ["return b''.join(output), remainder"], "ret_type": "", "ret_type_p": [["int", 0.2617585909843499], ["bytes", 0.08106897800540662]], "variables": {"display_line": "", "output": "", "remainder": "", "suppress_output": ""}, "variables_p": {"display_line": [["str", 0.6290158102031608], ["Optional[str]", 0.17573298227042736], ["bool", 0.10434240864410982]], "output": [["list", 0.8009875798587635], ["List[str]", 0.10033963566576791], ["tuple", 0.09867278447546872]], "remainder": [["List[str]", 0.6058321189772602], ["str", 0.2025444253589414], ["Dict[str, Any]", 0.09620393152386954], ["bytes", 0.09541952413992882]], "suppress_output": [["bool", 0.187185618774104], ["FrozenSet[str]", 0.12514949605462936], ["TextIO", 0.09227312235335709], ["str", 0.08893148391053252]]}}, {"docstring": {"func": "Starts the command and communicates with it until it ends.", "long_descr": null, "ret": null}, "fn_lc": [[322, 4], [575, 49]], "fn_var_ln": {"_flags": [[413, 8], [413, 19]], "b_chunk": [[458, 16], [458, 23]], "b_output": [[475, 20], [475, 28]], "b_stderr": [[410, 19], [410, 27]], "b_stdout": [[410, 8], [410, 16]], "b_tmp_stderr": [[481, 31], [481, 43]], "b_tmp_stdout": [[481, 16], [481, 28]], "b_unprocessed": [[475, 30], [475, 43]], "cmd": [[340, 12], [340, 15]], "controlpersisterror": [[568, 8], [568, 27]], "display_cmd": [[327, 8], [327, 19]], "efd": [[434, 22], [434, 25]], "master": [[345, 16], [345, 22]], "p": [[359, 16], [359, 17]], "rfd": [[434, 12], [434, 15]], "rpipes": [[422, 8], [422, 14]], "slave": [[345, 24], [345, 29]], "state": [[401, 16], [401, 21]], "states": [[383, 8], [383, 14]], "stdin": [[360, 12], [360, 17]], "timeout": [[547, 20], [547, 27]], "wfd": [[434, 17], [434, 20]]}, "fn_var_occur": {"_flags": [["self", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["self", "_flags"], ["self", "_flags", "False"], ["self", "_flags"], ["self", "_flags"], ["self", "_flags", "False"], ["self", "_flags"], ["self", "_flags", "False"], ["self", "_flags"], ["self", "_flags", "False"], ["self", "_flags"], ["self", "_flags", "False"]], "b_chunk": [["b_chunk", "p", "stdout", "read"], ["b_tmp_stdout", "b_chunk"], ["display", "debug", "state", "to_text", "b_chunk"], ["b_chunk", "p", "stderr", "read"], ["b_tmp_stderr", "b_chunk"], ["display", "debug", "state", "to_text", "b_chunk"]], "b_output": [["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stdout", "sudoable"], ["b_stdout", "b_output"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stderr", "sudoable"], ["b_stderr", "b_output"]], "b_stderr": [["b_stdout", "b_stderr"], ["b_stderr", "b_output"], ["b_stderr", "b_tmp_stderr"], ["controlpersisterror", "b_stderr", "b_stderr"], ["p", "returncode", "b_stdout", "b_stderr"]], "b_stdout": [["b_stdout", "b_stderr"], ["AnsibleError", "timeout", "to_native", "b_stdout"], ["b_stdout", "b_output"], ["b_stdout", "b_tmp_stdout"], ["p", "returncode", "b_stdout", "b_stderr"]], "b_tmp_stderr": [["b_tmp_stdout", "b_tmp_stderr"], ["b_tmp_stderr", "b_chunk"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stderr", "sudoable"], ["b_tmp_stderr", "b_unprocessed"], ["b_stderr", "b_tmp_stderr"], ["b_tmp_stdout", "b_tmp_stderr"]], "b_tmp_stdout": [["b_tmp_stdout", "b_tmp_stderr"], ["b_tmp_stdout", "b_chunk"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stdout", "sudoable"], ["b_tmp_stdout", "b_unprocessed"], ["b_stdout", "b_tmp_stdout"], ["b_tmp_stdout", "b_tmp_stderr"]], "b_unprocessed": [["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stdout", "sudoable"], ["b_tmp_stdout", "b_unprocessed"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stderr", "sudoable"], ["b_tmp_stderr", "b_unprocessed"]], "cmd": [["display_cmd", "list", "map", "pipes", "quote", "map", "to_text", "cmd"], ["isinstance", "cmd", "text_type", "binary_type"], ["cmd", "to_bytes", "cmd"], ["cmd", "list", "map", "to_bytes", "cmd"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["cmd", "p", "returncode"]], "controlpersisterror": [["controlpersisterror", "b_stderr", "b_stderr"], ["p", "returncode", "controlpersisterror"]], "display_cmd": [["display_cmd", "list", "map", "pipes", "quote", "map", "to_text", "cmd"], ["display", "vvv", "format", "join", "display_cmd", "host", "self", "host"]], "efd": [["rfd", "wfd", "efd", "select", "select", "rpipes", "timeout"]], "master": [["master", "slave", "pty", "openpty"], ["stdin", "os", "fdopen", "master"]], "p": [["p", "None"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["p", "None"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["stdin", "p", "stdin"], ["e", "errno", "errno", "EPIPE", "p", "poll", "None"], ["rpipes", "p", "stdout", "p", "stderr"], ["p", "poll", "None"], ["self", "_terminate_process", "p"], ["p", "stdout", "rfd"], ["b_chunk", "p", "stdout", "read"], ["rpipes", "remove", "p", "stdout"], ["p", "stderr", "rfd"], ["b_chunk", "p", "stderr", "read"], ["rpipes", "remove", "p", "stderr"], ["self", "_terminate_process", "p"], ["self", "_terminate_process", "p"], ["self", "_terminate_process", "p"], ["p", "poll", "None"], ["p", "stdout", "rpipes"], ["p", "wait"], ["cmd", "p", "returncode"], ["p", "returncode", "controlpersisterror"], ["p", "returncode", "in_data", "checkrc"], ["p", "returncode", "b_stdout", "b_stderr"]], "rfd": [["rfd", "wfd", "efd", "select", "select", "rpipes", "timeout"], ["p", "stdout", "rfd"], ["p", "stderr", "rfd"], ["rpipes", "rfd"]], "rpipes": [["rpipes", "p", "stdout", "p", "stderr"], ["rfd", "wfd", "efd", "select", "select", "rpipes", "timeout"], ["rpipes", "remove", "p", "stdout"], ["rpipes", "remove", "p", "stderr"], ["rpipes", "rfd"], ["p", "stdout", "rpipes"]], "slave": [["master", "slave", "pty", "openpty"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["os", "close", "slave"]], "state": [["state", "states", "index"], ["state", "states", "index"], ["display", "debug", "states", "state", "self", "_play_context", "prompt"], ["state", "states", "index"], ["display", "debug", "states", "state", "self", "_play_context", "success_key"], ["states", "state", "in_data"], ["state", "states", "index"], ["display", "debug", "state", "to_text", "b_chunk"], ["display", "debug", "state", "to_text", "b_chunk"], ["state", "states", "index"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stdout", "sudoable"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stderr", "sudoable"], ["states", "state"], ["states", "state"], ["states", "state"]], "states": [["state", "states", "index"], ["state", "states", "index"], ["display", "debug", "states", "state", "self", "_play_context", "prompt"], ["state", "states", "index"], ["display", "debug", "states", "state", "self", "_play_context", "success_key"], ["states", "state", "in_data"], ["state", "states", "index"], ["state", "states", "index"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stdout", "sudoable"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stderr", "sudoable"], ["states", "state"], ["states", "state"], ["states", "state"]], "stdin": [["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["stdin", "os", "fdopen", "master"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["stdin", "p", "stdin"], ["self", "_send_initial_data", "stdin", "in_data"], ["stdin", "write", "to_bytes", "self", "_play_context", "become_pass"], ["self", "_send_initial_data", "stdin", "in_data"], ["stdin", "close"]], "timeout": [["timeout", "self", "_play_context", "timeout"], ["rfd", "wfd", "efd", "select", "select", "rpipes", "timeout"], ["AnsibleError", "timeout", "to_native", "b_stdout"]], "wfd": [["rfd", "wfd", "efd", "select", "select", "rpipes", "timeout"]]}, "name": "_run", "params": {"checkrc": "", "cmd": "", "in_data": "", "self": "", "sudoable": ""}, "params_descr": {"checkrc": "", "cmd": "", "in_data": "", "self": "", "sudoable": ""}, "params_occur": {"checkrc": [["p", "returncode", "in_data", "checkrc"]], "cmd": [["display_cmd", "list", "map", "pipes", "quote", "map", "to_text", "cmd"], ["isinstance", "cmd", "text_type", "binary_type"], ["cmd", "to_bytes", "cmd"], ["cmd", "list", "map", "to_bytes", "cmd"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["cmd", "p", "returncode"]], "in_data": [["states", "state", "in_data"], ["self", "_send_initial_data", "stdin", "in_data"], ["self", "_send_initial_data", "stdin", "in_data"], ["p", "returncode", "in_data", "checkrc"]], "self": [["display", "vvv", "format", "join", "display_cmd", "host", "self", "host"], ["PY3", "self", "_play_context", "password"], ["p", "subprocess", "Popen", "cmd", "stdin", "slave", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["PY3", "self", "_play_context", "password"], ["p", "subprocess", "Popen", "cmd", "stdin", "subprocess", "PIPE", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "pass_fds", "self", "sshpass_pipe"], ["self", "_play_context", "password"], ["os", "close", "self", "sshpass_pipe"], ["os", "write", "self", "sshpass_pipe", "to_bytes", "self", "_play_context", "password"], ["os", "close", "self", "sshpass_pipe"], ["self", "_play_context", "prompt"], ["display", "debug", "states", "state", "self", "_play_context", "prompt"], ["self", "_play_context", "become", "self", "_play_context", "success_key"], ["display", "debug", "states", "state", "self", "_play_context", "success_key"], ["self", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["timeout", "self", "_play_context", "timeout"], ["self", "_send_initial_data", "stdin", "in_data"], ["self", "_terminate_process", "p"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stdout", "sudoable"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stderr", "sudoable"], ["self", "_flags"], ["stdin", "write", "to_bytes", "self", "_play_context", "become_pass"], ["self", "_flags", "False"], ["self", "_flags"], ["self", "_flags"], ["self", "_flags", "False"], ["self", "_flags"], ["self", "_terminate_process", "p"], ["self", "_flags", "False"], ["AnsibleError", "self", "_play_context", "become_method"], ["self", "_flags"], ["self", "_terminate_process", "p"], ["self", "_flags", "False"], ["AnsibleError", "self", "_play_context", "become_method"], ["self", "_flags"], ["self", "_terminate_process", "p"], ["self", "_flags", "False"], ["AnsibleError", "self", "_play_context", "become_method"], ["self", "_send_initial_data", "stdin", "in_data"]], "sudoable": [["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stdout", "sudoable"], ["b_output", "b_unprocessed", "self", "_examine_output", "states", "state", "b_tmp_stderr", "sudoable"]]}, "params_p": {"args": [], "checkrc": [["bytes", 0.6037126418586471], ["bool", 0.19430254786814158], ["int", 0.11545060411511361], ["Callable[[bytes], bytes]", 0.08653420615809755]], "cmd": [["str", 0.18935889234357733], ["List[int]", 0.10091709713802079], ["List[T]", 0.09914903849546546], ["list", 0.09156139223479658], ["dict", 0.08862957833583958], ["Dict[str, Any]", 0.08833878442696172]], "in_data": [["int", 0.10921041475598782], ["str", 0.10761451769619079]], "kwargs": [], "self": [], "sudoable": [["str", 0.19643152647846115], ["bytes", 0.18889095256579164], ["bool", 0.14238019656249046], ["int", 0.09320032292245035], ["Tuple[int, int]", 0.08870843739652277]]}, "q_name": "Connection._run", "ret_exprs": ["return (p.returncode, b_stdout, b_stderr)"], "ret_type": "", "ret_type_p": [["List[int]", 0.14816009420109272], ["bytes", 0.09678739382569299], ["bytearray", 0.09293978387967988], ["int", 0.08874053450468647]], "variables": {"_flags": "", "b_chunk": "", "b_output": "", "b_stderr": "", "b_stdout": "", "b_tmp_stderr": "", "b_tmp_stdout": "", "b_unprocessed": "", "cmd": "", "controlpersisterror": "", "display_cmd": "", "efd": "", "master": "", "p": "", "rfd": "", "rpipes": "", "slave": "", "state": "", "states": "", "stdin": "", "timeout": "", "wfd": ""}, "variables_p": {"_flags": [["str", 0.8005191317308565]], "b_chunk": [["int", 0.26669957551590073], ["dict", 0.137919463958531], ["RuntimeError", 0.11400339753822894]], "b_output": [["bytes", 0.4995951322877039], ["int", 0.09660430344529565], ["tuple", 0.09455820507960838], ["str", 0.08905894744006422], ["slice", 0.08771675343965823]], "b_stderr": [["float", 0.09323411080288484]], "b_stdout": [["TextIO", 0.35952190146069885], ["str", 0.21481819271082658]], "b_tmp_stderr": [], "b_tmp_stdout": [], "b_unprocessed": [["int", 0.347146884230049], ["List[int]", 0.16217836198598207]], "cmd": [["str", 0.18904829299808473], ["list", 0.1271589393066651], ["Set[str]", 0.11043563188772687], ["Optional[float]", 0.09623045835141936], ["dict", 0.09488034606401893], ["List[int]", 0.08960982023627151]], "controlpersisterror": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "display_cmd": [["List[str]", 0.2776973988673434], ["str", 0.20335172175713195], ["list", 0.18681159758385127], ["Tuple[str]", 0.13832317083812498]], "efd": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "master": [["str", 0.3], ["int", 0.19999999999999998]], "p": [["subprocess.CompletedProcess[bytes]", 0.7965329119509341], ["str", 0.10471964065000428], ["subprocess.CompletedProcess[str]", 0.09874744739906158]], "rfd": [["str", 0.2347893723813375], ["list", 0.13995209723883228], ["bytes", 0.0890813184535703], ["float", 0.0746429534392362]], "rpipes": [["str", 0.20687902891860935]], "slave": [["str", 0.43207990100880045], ["subprocess.Popen[Any]", 0.27264984887402616], ["subprocess.CompletedProcess[str]", 0.10961615931594011], ["asyncio.subprocess.Process", 0.09809681892090684], ["subprocess.CompletedProcess[bytes]", 0.08755727188032617]], "state": [["list", 0.10866873966438756], ["Tuple[Literal, Literal]", 0.095866710371537], ["bytes", 0.08344713103093335]], "states": [["list", 0.10866873966438756], ["Tuple[Literal, Literal]", 0.095866710371537], ["bytes", 0.08344713103093335]], "stdin": [["subprocess.Popen[Any]", 0.5464334571831974], ["subprocess.CompletedProcess[bytes]", 0.28045523058084265], ["List[Optional[str]]", 0.09045510609297008], ["subprocess.CompletedProcess[str]", 0.08265620614298977]], "timeout": [["int", 0.3929166268705625], ["Tuple[float, float, float]", 0.12046970596694735], ["str", 0.09605470286386951]], "wfd": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": "run a command on the remote host ", "long_descr": null, "ret": null}, "fn_lc": [[577, 4], [600, 43]], "fn_var_ln": {"args": [[595, 12], [595, 16]], "cmd": [[597, 8], [597, 11]], "returncode": [[598, 9], [598, 19]], "ssh_executable": [[590, 8], [590, 22]], "stderr": [[598, 29], [598, 35]], "stdout": [[598, 21], [598, 27]]}, "fn_var_occur": {"args": [["args", "ssh_executable", "self", "host", "cmd"], ["args", "ssh_executable", "self", "host", "cmd"], ["cmd", "self", "_build_command", "args"]], "cmd": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["args", "ssh_executable", "self", "host", "cmd"], ["args", "ssh_executable", "self", "host", "cmd"], ["cmd", "self", "_build_command", "args"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"]], "returncode": [["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"], ["returncode", "stdout", "stderr"]], "ssh_executable": [["ssh_executable", "self", "_play_context", "ssh_executable"], ["args", "ssh_executable", "self", "host", "cmd"], ["args", "ssh_executable", "self", "host", "cmd"]], "stderr": [["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"], ["returncode", "stdout", "stderr"]], "stdout": [["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"], ["returncode", "stdout", "stderr"]]}, "name": "_exec_command", "params": {"cmd": "", "in_data": "", "self": "", "sudoable": ""}, "params_descr": {"cmd": "", "in_data": "", "self": "", "sudoable": ""}, "params_occur": {"cmd": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["args", "ssh_executable", "self", "host", "cmd"], ["args", "ssh_executable", "self", "host", "cmd"], ["cmd", "self", "_build_command", "args"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"]], "in_data": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["in_data", "sudoable"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"]], "self": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["display", "vvv", "format", "self", "_play_context", "remote_user", "host", "self", "_play_context", "remote_addr"], ["ssh_executable", "self", "_play_context", "ssh_executable"], ["args", "ssh_executable", "self", "host", "cmd"], ["args", "ssh_executable", "self", "host", "cmd"], ["cmd", "self", "_build_command", "args"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"]], "sudoable": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["in_data", "sudoable"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "sudoable", "sudoable"]]}, "params_p": {"args": [], "cmd": [["str", 0.29005481282184287], ["utils.mssql_counters.Section", 0.10054585769421584], ["Mapping[str, utils.mssql_counters.Section]", 0.09476145101200789]], "in_data": [["dict", 0.09497351055369863], ["List[Dict[str, Any]]", 0.08126322611322684]], "kwargs": [], "self": [], "sudoable": [["dict", 0.09497351055369863], ["List[Dict[str, Any]]", 0.08126322611322684]]}, "q_name": "Connection._exec_command", "ret_exprs": ["return (returncode, stdout, stderr)"], "ret_type": "", "ret_type_p": [["list", 4.879718773741805e-08], ["int", 8.069924880878987e-10], ["str", 8.069924880878987e-10]], "variables": {"args": "", "cmd": "", "returncode": "", "ssh_executable": "", "stderr": "", "stdout": ""}, "variables_p": {"args": [["Dict[str, Any]", 0.12709643024945375], ["list", 0.10646215485964572], ["List[str]", 0.10035393063358515]], "cmd": [["int", 0.3537039600506504], ["str", 0.13655354354130028], ["Dict[str, Any]", 0.10125690084461891], ["Dict[Any, int]", 0.08075222439305751]], "returncode": [["str", 0.6254514328827282], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10469996161919308], ["Dict[int, Any]", 0.08642305472207558]], "ssh_executable": [["int", 0.16564800636216342], ["str", 0.08621745857332351], ["Dict[Any, int]", 0.08581547078984327]], "stderr": [["str", 0.6254514328827282], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10469996161919308], ["Dict[int, Any]", 0.08642305472207558]], "stdout": [["str", 0.6254514328827282], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10469996161919308], ["Dict[int, Any]", 0.08642305472207558]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[602, 4], [649, 87]], "fn_var_ln": {"cmd": [[630, 16], [630, 19]], "host": [[605, 8], [605, 12]], "in_data": [[633, 12], [633, 19]], "methods": [[621, 12], [621, 19]], "res": [[645, 16], [645, 19]], "returncode": [[634, 13], [634, 23]], "scp_if_ssh": [[612, 16], [612, 26]], "stderr": [[634, 33], [634, 39]], "stdout": [[634, 25], [634, 31]], "success": [[637, 16], [637, 23]]}, "fn_var_occur": {"cmd": [["cmd", "self", "_build_command", "to_bytes", "host"], ["cmd", "self", "_build_command", "in_path", "format", "host", "pipes", "quote", "out_path"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "checkrc", "False"]], "host": [["host", "self", "host"], ["cmd", "self", "_build_command", "to_bytes", "host"], ["cmd", "self", "_build_command", "in_path", "format", "host", "pipes", "quote", "out_path"], ["display", "warning", "msg", "method", "host"]], "in_data": [["in_data", "format", "sftp_action", "pipes", "quote", "in_path", "pipes", "quote", "out_path"], ["in_data", "None"], ["in_data", "to_bytes", "in_data", "nonstring"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "checkrc", "False"]], "methods": [["methods", "append"]], "res": [["res", "None"], ["res", "returncode", "stdout", "stderr"], ["AnsibleError", "format", "to_native", "out_path", "to_native", "res", "to_native", "res"]], "returncode": [["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "checkrc", "False"], ["res", "returncode", "stdout", "stderr"]], "scp_if_ssh": [["scp_if_ssh", "C", "DEFAULT_SCP_IF_SSH"], ["isinstance", "scp_if_ssh", "bool"], ["scp_if_ssh", "scp_if_ssh", "lower"], ["scp_if_ssh", "BOOLEANS"], ["scp_if_ssh", "boolean", "scp_if_ssh"]], "stderr": [["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "checkrc", "False"], ["display", "debug", "msg", "to_native", "stderr"], ["res", "returncode", "stdout", "stderr"]], "stdout": [["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "checkrc", "False"], ["display", "debug", "msg", "to_native", "stdout"], ["res", "returncode", "stdout", "stderr"]], "success": [["success", "False"], ["success", "True"]]}, "name": "_file_transport_command", "params": {"in_path": "", "out_path": "", "self": "", "sftp_action": ""}, "params_descr": {"in_path": "", "out_path": "", "self": "", "sftp_action": ""}, "params_occur": {"in_path": [["in_data", "format", "sftp_action", "pipes", "quote", "in_path", "pipes", "quote", "out_path"], ["cmd", "self", "_build_command", "in_path", "format", "host", "pipes", "quote", "out_path"]], "out_path": [["in_data", "format", "sftp_action", "pipes", "quote", "in_path", "pipes", "quote", "out_path"], ["cmd", "self", "_build_command", "in_path", "format", "host", "pipes", "quote", "out_path"], ["AnsibleError", "format", "to_native", "out_path", "to_native", "res", "to_native", "res"]], "self": [["host", "self", "host"], ["cmd", "self", "_build_command", "to_bytes", "host"], ["cmd", "self", "_build_command", "in_path", "format", "host", "pipes", "quote", "out_path"], ["returncode", "stdout", "stderr", "self", "_run", "cmd", "in_data", "checkrc", "False"]], "sftp_action": [["in_data", "format", "sftp_action", "pipes", "quote", "in_path", "pipes", "quote", "out_path"]]}, "params_p": {"args": [], "in_path": [["str", 1.0]], "kwargs": [], "out_path": [["str", 0.6875238922311928]], "self": [], "sftp_action": [["str", 1.0]]}, "q_name": "Connection._file_transport_command", "ret_exprs": [], "ret_type": "", "variables": {"cmd": "", "host": "", "in_data": "", "methods": "", "res": "", "returncode": "", "scp_if_ssh": "", "stderr": "", "stdout": "", "success": ""}, "variables_p": {"cmd": [["bytes", 0.4641449140463354], ["int", 0.25451304595654994], ["Tuple[Any, Any, Any, Any, Any]", 0.10654573695324428], ["Dict[Tuple[int, int], int]", 0.07781484931255078]], "host": [["bytes", 0.38930424547181486], ["str", 0.28469608793217405], ["int", 0.2063831314335203], ["Tuple[str, str, str, str]", 0.1196165351624909]], "in_data": [["str", 0.585217785616672], ["bool", 0.3060555412110083]], "methods": [["Tuple[Literal, Literal, Literal, Literal]", 0.7], ["List[str]", 0.09999999999999999], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "res": [["str", 0.29468806044668755], ["Optional[str]", 0.23725939643373667], ["List[Tuple[str, str]]", 0.16547852011096084], ["Pattern", 0.11076377683562685], ["Optional[Match[str]]", 0.10142653372967393], ["Dict[str, float]", 0.09038371244331413]], "returncode": [["bool", 0.5143626675943777], ["list", 0.17758029978221823], ["bytes", 0.12550245052882772], ["Tuple[Literal, Literal]", 0.0852752281716883]], "scp_if_ssh": [["int", 0.2918519838364315], ["list", 0.11275487608634294], ["Tuple[float, float, float, float, float, float]", 0.10278415898850056], ["float", 0.09384615887870296], ["dict", 0.09098800340668353], ["List[int]", 0.08918642664122563]], "stderr": [["str", 0.43993819365033415], ["bytes", 0.09061296343739766], ["int", 0.08776749822225928]], "stdout": [["str", 0.6144729964640843], ["Callable(os.path.join)[..., Any][[[Named(a, Union[_PathLike[str], str]), Variable(Union[_PathLike[str], str])], str][Any, Any]]", 0.09226214442480822], ["bytes", 0.08809102128459272]], "success": [["int", 0.49999999999142564], ["list", 0.2499999999931977], ["bool", 1.2921943513617861e-11], ["Set[str]", 4.247932884947998e-12]]}}, {"docstring": {"func": "Wrapper around _exec_command to retry in the case of an ssh failure", "long_descr": "Will retry if:\n* an exception is caught\n* ssh returns 255\nWill not retry if\n* remaining_tries is <2\n* retries limit reached", "ret": null}, "fn_lc": [[654, 4], [696, 27]], "fn_var_ln": {"cmd_summary": [[667, 8], [667, 19]], "msg": [[689, 24], [689, 27]], "pause": [[684, 24], [684, 29]], "remaining_tries": [[666, 8], [666, 23]], "return_tuple": [[670, 16], [670, 28]]}, "fn_var_occur": {"cmd_summary": [["cmd_summary", "args"], ["msg", "attempt", "cmd_summary", "pause"], ["msg", "attempt", "e", "cmd_summary", "pause"]], "msg": [["msg", "attempt", "cmd_summary", "pause"], ["msg", "attempt", "e", "cmd_summary", "pause"], ["display", "vv", "msg", "host", "self", "host"]], "pause": [["pause", "attempt"], ["msg", "attempt", "cmd_summary", "pause"], ["msg", "attempt", "e", "cmd_summary", "pause"], ["time", "sleep", "pause"]], "remaining_tries": [["remaining_tries", "int", "C", "ANSIBLE_SSH_RETRIES"], ["range", "remaining_tries"], ["attempt", "remaining_tries"]], "return_tuple": [["return_tuple", "self", "_exec_command", "args", "kwargs"], ["AnsibleConnectionFailure", "to_native", "return_tuple"]]}, "name": "exec_command", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["cmd_summary", "args"], ["return_tuple", "self", "_exec_command", "args", "kwargs"]], "kwargs": [["return_tuple", "self", "_exec_command", "args", "kwargs"]], "self": [["return_tuple", "self", "_exec_command", "args", "kwargs"], ["display", "vv", "msg", "host", "self", "host"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.exec_command", "ret_exprs": ["return return_tuple"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12189517267350077], ["Dict[str, Any]", 0.09413671435007413], ["str", 0.09122208109455607], ["List[int]", 0.09008978015674188]], "variables": {"cmd_summary": "", "msg": "", "pause": "", "remaining_tries": "", "return_tuple": ""}, "variables_p": {"cmd_summary": [["Dict[str, Union[Any, Any]]", 0.11750410261536583], ["str", 0.11055371427564], ["bool", 0.0830881963489619], ["dict", 0.06225905757416072], ["int", 0.06035489117824193], ["Dict[Any, int]", 0.05744230611040994]], "msg": [["PyLibs.objection.utils.frida_transporRunnerMessage", 0.10293872813346318], ["str", 0.09984471052827511], ["dict", 0.08872783611732879], ["Dict[str, str]", 0.08627569697160711]], "pause": [["Tuple[int, int]", 0.19773748771060812], ["awspricing.constants.Enum", 0.16467852722895523], ["list", 0.13745774793174764]], "remaining_tries": [["int", 0.7], ["str", 0.19999999999999998]], "return_tuple": [["str", 0.28673435970133515], ["Optional[str]", 0.09331660050421936]]}}, {"docstring": {"func": "transfer a file from local to remote ", "long_descr": null, "ret": null}, "fn_lc": [[698, 4], [707, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "put_file", "params": {"in_path": "", "out_path": "", "self": ""}, "params_descr": {"in_path": "", "out_path": "", "self": ""}, "params_occur": {"in_path": [["super", "Connection", "self", "put_file", "in_path", "out_path"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"], ["os", "path", "exists", "to_bytes", "in_path", "errors"], ["AnsibleFileNotFound", "format", "to_native", "in_path"], ["self", "_file_transport_command", "in_path", "out_path"]], "out_path": [["super", "Connection", "self", "put_file", "in_path", "out_path"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"], ["self", "_file_transport_command", "in_path", "out_path"]], "self": [["super", "Connection", "self", "put_file", "in_path", "out_path"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"], ["self", "_file_transport_command", "in_path", "out_path"]]}, "params_p": {"args": [], "in_path": [["str", 0.4039941720171487], ["bool", 0.10407663893369157], ["Optional[str]", 0.0939748514258156]], "kwargs": [], "out_path": [], "self": []}, "q_name": "Connection.put_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "fetch a file from remote to local ", "long_descr": null, "ret": null}, "fn_lc": [[709, 4], [715, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "fetch_file", "params": {"in_path": "", "out_path": "", "self": ""}, "params_descr": {"in_path": "", "out_path": "", "self": ""}, "params_occur": {"in_path": [["super", "Connection", "self", "fetch_file", "in_path", "out_path"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"], ["self", "_file_transport_command", "in_path", "out_path"]], "out_path": [["super", "Connection", "self", "fetch_file", "in_path", "out_path"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"], ["self", "_file_transport_command", "in_path", "out_path"]], "self": [["super", "Connection", "self", "fetch_file", "in_path", "out_path"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"], ["self", "_file_transport_command", "in_path", "out_path"]]}, "params_p": {"args": [], "in_path": [["str", 0.09786989953873583]], "kwargs": [], "out_path": [["str", 0.09786989953873583]], "self": []}, "q_name": "Connection.fetch_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[717, 4], [731, 31]], "fn_var_ln": {"_connected": [[731, 8], [731, 23]]}, "fn_var_occur": {"_connected": [["self", "_connected", "False"]]}, "name": "close", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_connected", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.close", "ret_exprs": [], "ret_type": "", "variables": {"_connected": ""}, "variables_p": {"_connected": [["int", 0.6258564750569569], ["float", 0.1953714877468058]]}}], "name": "Connection", "q_name": "Connection", "variables": {"become_methods": "", "has_pipelining": "", "transport": ""}, "variables_p": {"become_methods": [["List[str]", 0.19999999999999998], ["int", 0.09999999999999999], ["Final", 0.09999999999999999], ["Tuple[str, str, str, str]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[str]", 0.09999999999999999], ["staticmethod", 0.09999999999999999], ["FrozenSet[str]", 0.09999999999999999]], "has_pipelining": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "transport": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "errno", "fcntl", "os", "pipes", "pty", "select", "subprocess", "time", "ansible", "constants", "C", "ansible", "compat", "six", "PY3", "text_type", "binary_type", "ansible", "errors", "AnsibleError", "AnsibleConnectionFailure", "AnsibleFileNotFound", "ansible", "errors", "AnsibleOptionsError", "ansible", "module_utils", "basic", "BOOLEANS", "ansible", "module_utils", "_text", "to_bytes", "to_native", "to_text", "ansible", "plugins", "connection", "ConnectionBase", "ansible", "utils", "boolean", "boolean", "ansible", "utils", "path", "unfrackpath", "makedirs_safe", "__main__", "display", "ansible", "utils", "display", "Display"], "mod_var_ln": {"SSHPASS_AVAILABLE": [[48, 0], [48, 17]], "__metaclass__": [[20, 0], [20, 13]], "display": [[46, 4], [46, 11]]}, "mod_var_occur": {"SSHPASS_AVAILABLE": [["SSHPASS_AVAILABLE"], ["SSHPASS_AVAILABLE", "None"], ["SSHPASS_AVAILABLE", "True"], ["SSHPASS_AVAILABLE", "False"], ["SSHPASS_AVAILABLE"]], "__metaclass__": [], "display": [["display", "vvvvv", "explanation", "join", "to_text", "a", "a", "b_args", "host", "self", "_play_context", "remote_addr"], ["display", "debug"], ["display", "debug", "len", "in_data"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "debug", "source", "state", "display_line"], ["display", "vvv", "format", "join", "display_cmd", "host", "self", "host"], ["display", "debug", "states", "state", "self", "_play_context", "prompt"], ["display", "debug", "states", "state", "self", "_play_context", "success_key"], ["display", "debug", "state", "to_text", "b_chunk"], ["display", "debug", "state", "to_text", "b_chunk"], ["display", "debug"], ["display", "debug"], ["display", "debug"], ["display", "debug"], ["display", "debug"], ["display", "vvv", "format", "self", "_play_context", "remote_user", "host", "self", "_play_context", "remote_addr"], ["display", "warning", "msg", "method", "host"], ["display", "debug", "msg", "to_native", "stdout"], ["display", "debug", "msg", "to_native", "stderr"], ["display", "vv", "msg", "host", "self", "host"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"], ["display", "vvv", "format", "in_path", "out_path", "host", "self", "host"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 115}, "session_id": "iGgkuYaWhU03CnXIpMtrdbIIWtipwLDrRginHEhfAHg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"SSHPASS_AVAILABLE": "", "__metaclass__": "", "display": ""}, "variables_p": {"SSHPASS_AVAILABLE": [["Callable(copyright)[[], None]", 0.36139796833805504], ["bool", 0.11694206906831438], ["List[str]", 0.10678519429581661], ["Dict[str, Any]", 0.09047998054286799], ["str", 0.08436488313241153]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "display": [["int", 0.2856442189514845]]}}}