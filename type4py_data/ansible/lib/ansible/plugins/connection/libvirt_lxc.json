{"error": null, "response": {"classes": [{"cls_lc": [[43, 0], [176, 31]], "cls_var_ln": {"become_methods": [[51, 4], [51, 18]], "has_pipelining": [[47, 4], [47, 18]], "transport": [[46, 4], [46, 13]]}, "cls_var_occur": {"become_methods": [], "has_pipelining": [], "transport": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[53, 4], [59, 36]], "fn_var_ln": {"lxc": [[55, 8], [55, 16]], "virsh": [[57, 8], [57, 18]]}, "fn_var_occur": {"lxc": [["self", "lxc", "self", "_play_context", "remote_addr"], ["self", "_check_domain", "self", "lxc"]], "virsh": [["self", "virsh", "self", "_search_executable"]]}, "name": "__init__", "params": {"args": "", "kwargs": "", "new_stdin": "", "play_context": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "new_stdin": "", "play_context": "", "self": ""}, "params_occur": {"args": [["super", "Connection", "self", "__init__", "play_context", "new_stdin", "args", "kwargs"]], "kwargs": [["super", "Connection", "self", "__init__", "play_context", "new_stdin", "args", "kwargs"]], "new_stdin": [["super", "Connection", "self", "__init__", "play_context", "new_stdin", "args", "kwargs"]], "play_context": [["super", "Connection", "self", "__init__", "play_context", "new_stdin", "args", "kwargs"]], "self": [["super", "Connection", "self", "__init__", "play_context", "new_stdin", "args", "kwargs"], ["self", "lxc", "self", "_play_context", "remote_addr"], ["self", "virsh", "self", "_search_executable"], ["self", "_check_domain", "self", "lxc"]]}, "params_p": {"args": [], "kwargs": [], "new_stdin": [["str", 0.40023945778212655], ["List[str]", 0.1129731270322296], ["dict", 0.1097877189776198], ["Type", 0.09459394715561582], ["Mapping", 0.08754084016118537]], "play_context": [["str", 0.40023945778212655], ["List[str]", 0.1129731270322296], ["dict", 0.1097877189776198], ["Type", 0.09459394715561582], ["Mapping", 0.08754084016118537]], "self": []}, "q_name": "Connection.__init__", "ret_exprs": [], "ret_type": "", "variables": {"lxc": "", "virsh": ""}, "variables_p": {"lxc": [["str", 0.28575185449707746], ["bytes", 0.22840662013783988], ["Dict[str, int]", 0.10137783072785263], ["list", 0.09454986041254197], ["int", 0.08404067469450537]], "virsh": [["str", 0.30000000000000004], ["Set[str]", 0.30000000000000004], ["List[int]", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [65, 18]], "fn_var_ln": {"cmd": [[62, 8], [62, 11]]}, "fn_var_occur": {"cmd": [["cmd", "distutils", "spawn", "find_executable", "executable"]]}, "name": "_search_executable", "params": {"executable": "", "self": ""}, "params_descr": {"executable": "", "self": ""}, "params_occur": {"executable": [["cmd", "distutils", "spawn", "find_executable", "executable"], ["AnsibleError", "executable"]], "self": []}, "params_p": {"args": [], "executable": [["bytes", 0.21667685423299238], ["Optional[str]", 0.20115263853773308], ["str", 0.18835992173189123], ["os.PathLike", 0.1189090704395756]], "kwargs": [], "self": []}, "q_name": "Connection._search_executable", "ret_exprs": ["return cmd"], "ret_type": "", "ret_type_p": [["int", 0.666666666340922], ["list", 2.605515229381428e-10], ["str", 1.141108553918318e-10]], "variables": {"cmd": ""}, "variables_p": {"cmd": [["str", 0.6154289815824813], ["Tuple[Literal, Any, Any, Any, Any, Any, Any]", 0.1922855092087594], ["dict", 0.0961427546043797], ["Dict[str, Dict[str, Any]]", 0.0961427546043797]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [72, 77]], "fn_var_ln": {"p": [[68, 8], [68, 9]]}, "fn_var_occur": {"p": [["p", "subprocess", "Popen", "self", "virsh", "to_bytes", "domain", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["p", "communicate"], ["p", "returncode"]]}, "name": "_check_domain", "params": {"domain": "", "self": ""}, "params_descr": {"domain": "", "self": ""}, "params_occur": {"domain": [["p", "subprocess", "Popen", "self", "virsh", "to_bytes", "domain", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["AnsibleError", "domain"]], "self": [["p", "subprocess", "Popen", "self", "virsh", "to_bytes", "domain", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]]}, "params_p": {"args": [], "domain": [["str", 0.9034582367686456], ["List[str]", 0.0965417632313544]], "kwargs": [], "self": []}, "q_name": "Connection._check_domain", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": [["str", 0.3824690947025386], ["subprocess.Popen[Any]", 0.3203150847330003], ["List[str]", 0.11624703995171108], ["subprocess.CompletedProcess[str]", 0.09496445169194036], ["subprocess.CompletedProcess[bytes]", 0.0860043289208098]]}}, {"docstring": {"func": "connect to the lxc; nothing to do here ", "long_descr": null, "ret": null}, "fn_lc": [[74, 4], [79, 34]], "fn_var_ln": {"_connected": [[79, 12], [79, 27]]}, "fn_var_occur": {"_connected": [["self", "_connected"], ["self", "_connected", "True"]]}, "name": "_connect", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["super", "Connection", "self", "_connect"], ["self", "_connected"], ["display", "vvv", "host", "self", "lxc"], ["self", "_connected", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection._connect", "ret_exprs": [], "ret_type": "", "variables": {"_connected": ""}, "variables_p": {"_connected": [["Type[str]", 0.38811083392145734], ["str", 0.18381092860989895], ["List[str]", 0.09605156895167588], ["float", 0.08994759178906274]]}}, {"docstring": {"func": "run a command on the chroot.  This is only needed for implementing", "long_descr": "put_file() get_file() so that we don't have to read the whole file\ninto memory.\n\ncompared to exec_command() it looses some niceties like being able to\nreturn the process's exit code immediately.", "ret": null}, "fn_lc": [[81, 4], [102, 16]], "fn_var_ln": {"executable": [[89, 8], [89, 18]], "local_cmd": [[98, 8], [98, 17]], "p": [[99, 8], [99, 9]]}, "fn_var_occur": {"executable": [["executable", "C", "DEFAULT_EXECUTABLE", "split", "C", "DEFAULT_EXECUTABLE"], ["local_cmd", "self", "lxc", "executable", "cmd"]], "local_cmd": [["local_cmd", "self", "virsh"], ["local_cmd", "self", "lxc", "executable", "cmd"], ["display", "vvv", "local_cmd", "host", "self", "lxc"], ["local_cmd", "to_bytes", "i", "errors", "i", "local_cmd"], ["p", "subprocess", "Popen", "local_cmd", "shell", "False", "stdin", "stdin", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]], "p": [["p", "subprocess", "Popen", "local_cmd", "shell", "False", "stdin", "stdin", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]]}, "name": "_buffered_exec_command", "params": {"cmd": "", "self": "", "stdin": ""}, "params_descr": {"cmd": "", "self": "", "stdin": ""}, "params_occur": {"cmd": [["local_cmd", "self", "lxc", "executable", "cmd"]], "self": [["local_cmd", "self", "virsh"], ["local_cmd", "self", "lxc", "executable", "cmd"], ["display", "vvv", "local_cmd", "host", "self", "lxc"]], "stdin": [["p", "subprocess", "Popen", "local_cmd", "shell", "False", "stdin", "stdin", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]]}, "params_p": {"args": [], "cmd": [["int", 0.19291822617890178], ["str", 0.09645911308945089], ["Callable", 0.09645911308945089]], "kwargs": [], "self": [], "stdin": [["str", 0.9234491996950382], ["List[str]", 0.07655080030496172]]}, "q_name": "Connection._buffered_exec_command", "ret_exprs": ["return p"], "ret_type": "", "ret_type_p": [["int", 0.19291822617890178], ["str", 0.09645911308945089], ["Callable", 0.09645911308945089]], "variables": {"executable": "", "local_cmd": "", "p": ""}, "variables_p": {"executable": [["str", 0.4367344144728007], ["int", 0.2826894088652331], ["Dict[str, int]", 0.09465668501381913], ["dict", 0.09301121760745637]], "local_cmd": [["str", 0.4047823283605011], ["int", 0.39182880709239304]], "p": [["str", 0.6110738750666437], ["subprocess.Popen", 0.06966451551113483], ["subprocess.CompletedProcess[bytes]", 0.06709065725904595], ["subprocess.CompletedProcess[str]", 0.06661283973169671]]}}, {"docstring": {"func": "run a command on the chroot ", "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [111, 45]], "fn_var_ln": {"p": [[108, 8], [108, 9]], "stderr": [[110, 16], [110, 22]], "stdout": [[110, 8], [110, 14]]}, "fn_var_occur": {"p": [["p", "self", "_buffered_exec_command", "cmd"], ["stdout", "stderr", "p", "communicate", "in_data"], ["p", "returncode", "stdout", "stderr"]], "stderr": [["stdout", "stderr", "p", "communicate", "in_data"], ["p", "returncode", "stdout", "stderr"]], "stdout": [["stdout", "stderr", "p", "communicate", "in_data"], ["p", "returncode", "stdout", "stderr"]]}, "name": "exec_command", "params": {"cmd": "", "in_data": "", "self": "", "sudoable": ""}, "params_descr": {"cmd": "", "in_data": "", "self": "", "sudoable": ""}, "params_occur": {"cmd": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["p", "self", "_buffered_exec_command", "cmd"]], "in_data": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["stdout", "stderr", "p", "communicate", "in_data"]], "self": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"], ["p", "self", "_buffered_exec_command", "cmd"]], "sudoable": [["super", "Connection", "self", "exec_command", "cmd", "in_data", "in_data", "sudoable", "sudoable"]]}, "params_p": {"args": [], "cmd": [["bytes", 0.21069720624922036], ["str", 0.0989247830280784], ["Optional[Exception]", 0.09639684859129566]], "in_data": [["Optional[Exception]", 0.3547563482152435], ["int", 0.10730527874063868]], "kwargs": [], "self": [], "sudoable": [["str", 0.10314724964076187], ["raiden.utils.Dict[str, raiden.utils.Any]", 0.09934087428837382], ["bytes", 0.09588697711638249]]}, "q_name": "Connection.exec_command", "ret_exprs": ["return (p.returncode, stdout, stderr)"], "ret_type": "", "ret_type_p": [["list", 4.879718773741805e-08], ["int", 8.069924880878987e-10], ["str", 8.069924880878987e-10]], "variables": {"p": "", "stderr": "", "stdout": ""}, "variables_p": {"p": [["list", 0.0796964523372332], ["dict", 0.07832404895932304]], "stderr": [["List[List[str]]", 0.17083328781288226], ["Dict[str, Any]", 0.09351843401890199]], "stdout": [["List[List[str]]", 0.17083328781288226], ["Dict[str, Any]", 0.09351843401890199]]}}, {"docstring": {"func": "Make sure that we put files into a standard path", "long_descr": "If a path is relative, then we need to choose where to put it.\nssh chooses $HOME but we aren't guaranteed that a home dir will\nexist in any given chroot.  So for now we're choosing \"/\" instead.\nThis also happens to be the former default.\n\nCan revisit using $HOME instead if it's a problem", "ret": null}, "fn_lc": [[113, 4], [125, 44]], "fn_var_ln": {"remote_path": [[124, 12], [124, 23]]}, "fn_var_occur": {"remote_path": [["remote_path", "startswith", "os", "path", "sep"], ["remote_path", "os", "path", "join", "os", "path", "sep", "remote_path"], ["os", "path", "normpath", "remote_path"]]}, "name": "_prefix_login_path", "params": {"remote_path": "", "self": ""}, "params_descr": {"remote_path": "", "self": ""}, "params_occur": {"remote_path": [["remote_path", "startswith", "os", "path", "sep"], ["remote_path", "os", "path", "join", "os", "path", "sep", "remote_path"], ["os", "path", "normpath", "remote_path"]], "self": []}, "params_p": {"args": [], "kwargs": [], "remote_path": [["str", 0.9108834697396023], ["List[str]", 0.08911653026039763]], "self": []}, "q_name": "Connection._prefix_login_path", "ret_exprs": ["return os.path.normpath(remote_path)"], "ret_type": "", "ret_type_p": [["str", 0.8029133878980433], ["bool", 0.1970866121019567]], "variables": {"remote_path": ""}, "variables_p": {"remote_path": [["str", 1.0000000000000002]]}}, {"docstring": {"func": "transfer a file from local to lxc ", "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [147, 80]], "fn_var_ln": {"out_path": [[132, 8], [132, 16]], "p": [[136, 20], [136, 21]], "stderr": [[140, 28], [140, 34]], "stdout": [[140, 20], [140, 26]]}, "fn_var_occur": {"out_path": [["super", "Connection", "self", "put_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["out_path", "pipes", "quote", "self", "_prefix_login_path", "out_path"], ["p", "self", "_buffered_exec_command", "out_path", "BUFSIZE", "stdin", "in_file"], ["AnsibleError", "in_path", "out_path"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]], "p": [["p", "self", "_buffered_exec_command", "out_path", "BUFSIZE", "stdin", "in_file"], ["stdout", "stderr", "p", "communicate"], ["p", "returncode"]], "stderr": [["stdout", "stderr", "p", "communicate"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]], "stdout": [["stdout", "stderr", "p", "communicate"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]]}, "name": "put_file", "params": {"in_path": "", "out_path": "", "self": ""}, "params_descr": {"in_path": "", "out_path": "", "self": ""}, "params_occur": {"in_path": [["super", "Connection", "self", "put_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["open", "to_bytes", "in_path", "errors", "in_file"], ["AnsibleError", "in_path", "out_path"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"], ["AnsibleError", "in_path"]], "out_path": [["super", "Connection", "self", "put_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["out_path", "pipes", "quote", "self", "_prefix_login_path", "out_path"], ["p", "self", "_buffered_exec_command", "out_path", "BUFSIZE", "stdin", "in_file"], ["AnsibleError", "in_path", "out_path"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]], "self": [["super", "Connection", "self", "put_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["out_path", "pipes", "quote", "self", "_prefix_login_path", "out_path"], ["p", "self", "_buffered_exec_command", "out_path", "BUFSIZE", "stdin", "in_file"]]}, "params_p": {"args": [], "in_path": [], "kwargs": [], "out_path": [], "self": []}, "q_name": "Connection.put_file", "ret_exprs": [], "ret_type": "", "variables": {"out_path": "", "p": "", "stderr": "", "stdout": ""}, "variables_p": {"out_path": [["str", 0.6173038464317404]], "p": [["str", 0.8983439189840642]], "stderr": [["str", 0.27033010465866286], ["List[str]", 0.1956403371155842], ["list", 0.1919918116636669], ["int", 0.09677368961018865]], "stdout": [["str", 0.27033010465866286], ["List[str]", 0.1956403371155842], ["list", 0.1919918116636669], ["int", 0.09677368961018865]]}}, {"docstring": {"func": "fetch a file from lxc to local ", "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [171, 117]], "fn_var_ln": {"chunk": [[165, 20], [165, 25]], "in_path": [[154, 8], [154, 15]], "p": [[156, 12], [156, 13]], "stderr": [[169, 20], [169, 26]], "stdout": [[169, 12], [169, 18]]}, "fn_var_occur": {"chunk": [["chunk", "p", "stdout", "read", "BUFSIZE"], ["out_file", "write", "chunk"], ["chunk", "p", "stdout", "read", "BUFSIZE"]], "in_path": [["super", "Connection", "self", "fetch_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["in_path", "pipes", "quote", "self", "_prefix_login_path", "in_path"], ["p", "self", "_buffered_exec_command", "in_path", "BUFSIZE"], ["AnsibleError", "in_path", "out_path"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]], "p": [["p", "self", "_buffered_exec_command", "in_path", "BUFSIZE"], ["chunk", "p", "stdout", "read", "BUFSIZE"], ["chunk", "p", "stdout", "read", "BUFSIZE"], ["stdout", "stderr", "p", "communicate"], ["p", "returncode"]], "stderr": [["stdout", "stderr", "p", "communicate"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]], "stdout": [["chunk", "p", "stdout", "read", "BUFSIZE"], ["chunk", "p", "stdout", "read", "BUFSIZE"], ["stdout", "stderr", "p", "communicate"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]]}, "name": "fetch_file", "params": {"in_path": "", "out_path": "", "self": ""}, "params_descr": {"in_path": "", "out_path": "", "self": ""}, "params_occur": {"in_path": [["super", "Connection", "self", "fetch_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["in_path", "pipes", "quote", "self", "_prefix_login_path", "in_path"], ["p", "self", "_buffered_exec_command", "in_path", "BUFSIZE"], ["AnsibleError", "in_path", "out_path"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]], "out_path": [["super", "Connection", "self", "fetch_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["open", "to_bytes", "out_path", "errors", "out_file"], ["AnsibleError", "in_path", "out_path"], ["AnsibleError", "in_path", "out_path", "stdout", "stderr"]], "self": [["super", "Connection", "self", "fetch_file", "in_path", "out_path"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["in_path", "pipes", "quote", "self", "_prefix_login_path", "in_path"], ["p", "self", "_buffered_exec_command", "in_path", "BUFSIZE"]]}, "params_p": {"args": [], "in_path": [["list", 0.08629828868347426]], "kwargs": [], "out_path": [], "self": []}, "q_name": "Connection.fetch_file", "ret_exprs": [], "ret_type": "", "variables": {"chunk": "", "in_path": "", "p": "", "stderr": "", "stdout": ""}, "variables_p": {"chunk": [["str", 0.8428699389930341]], "in_path": [["str", 0.6945882950558674]], "p": [], "stderr": [["str", 0.27033010465866286], ["List[str]", 0.1956403371155842], ["list", 0.1919918116636669], ["int", 0.09677368961018865]], "stdout": [["str", 0.4035932023728252], ["Dict[str, str]", 0.09767042923917327]]}}, {"docstring": {"func": "terminate the connection; nothing to do here ", "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [176, 31]], "fn_var_ln": {"_connected": [[176, 8], [176, 23]]}, "fn_var_occur": {"_connected": [["self", "_connected", "False"]]}, "name": "close", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["super", "Connection", "self", "close"], ["self", "_connected", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.close", "ret_exprs": [], "ret_type": "", "variables": {"_connected": ""}, "variables_p": {"_connected": [["int", 0.6258564750569569], ["float", 0.1953714877468058]]}}], "name": "Connection", "q_name": "Connection", "variables": {"become_methods": "", "has_pipelining": "", "transport": ""}, "variables_p": {"become_methods": [["List[str]", 0.19999999999999998], ["int", 0.09999999999999999], ["Final", 0.09999999999999999], ["Tuple[str, str, str, str]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[str]", 0.09999999999999999], ["staticmethod", 0.09999999999999999], ["FrozenSet[str]", 0.09999999999999999]], "has_pipelining": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "transport": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "distutils.spawn", "os", "os.path", "pipes", "subprocess", "traceback", "ansible", "constants", "C", "ansible", "errors", "AnsibleError", "ansible", "module_utils", "_text", "to_bytes", "ansible", "plugins", "connection", "ConnectionBase", "BUFSIZE", "__main__", "display", "ansible", "utils", "display", "Display"], "mod_var_ln": {"__metaclass__": [[21, 0], [21, 13]], "display": [[40, 4], [40, 11]]}, "mod_var_occur": {"__metaclass__": [], "display": [["display", "vvv", "host", "self", "lxc"], ["display", "vvv", "local_cmd", "host", "self", "lxc"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"], ["display", "vvv", "in_path", "out_path", "host", "self", "lxc"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 50}, "session_id": "oFJP3jnyWw9X9-L06WG7LjyqH-O509IGUHfDLjbOFhU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": "", "display": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "display": [["str", 0.733103127824516], ["List[str]", 0.09104988253590166]]}}}