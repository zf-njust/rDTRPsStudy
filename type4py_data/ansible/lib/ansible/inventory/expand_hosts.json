{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "A helper function that checks a given host line to see if it contains", "long_descr": "a range pattern described in the docstring above.\n\nReturnes True if the given line contains a pattern, else False.", "ret": null}, "fn_lc": [[40, 0], [50, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "detect_range", "params": {"line": ""}, "params_descr": {"line": ""}, "params_occur": {"line": []}, "params_p": {"args": [], "kwargs": [], "line": [["List[str]", 0.4244944811103193], ["list", 0.2891711424895883], ["Tuple[str, str]", 0.19088958426672822]]}, "q_name": "detect_range", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "A helper function that expands a given line that contains a pattern", "long_descr": "specified in top docstring, and returns a list that consists of the\nexpanded version.\n\nThe '[' and ']' characters are used to maintain the pseudo-code\nappearance. They are replaced in this function with '|' to ease\nstring splitting.\n\nReferences: http://ansible.github.com/patterns.html#hosts-and-groups", "ret": null}, "fn_lc": [[52, 0], [118, 24]], "fn_var_ln": {"all_hosts": [[64, 4], [64, 13]], "beg": [[90, 12], [90, 15]], "bounds": [[80, 8], [80, 14]], "end": [[84, 8], [84, 11]], "fill": [[99, 12], [99, 16]], "head": [[79, 9], [79, 13]], "hname": [[111, 12], [111, 17]], "i_beg": [[102, 12], [102, 17]], "i_end": [[103, 12], [103, 17]], "nrange": [[79, 15], [79, 21]], "rlen": [[94, 12], [94, 16]], "seq": [[108, 12], [108, 15]], "step": [[88, 12], [88, 16]], "tail": [[79, 23], [79, 27]]}, "fn_var_occur": {"all_hosts": [["all_hosts", "extend", "expand_hostname_range", "hname"], ["all_hosts", "append", "hname"]], "beg": [["beg", "bounds"], ["beg", "len", "beg"], ["rlen", "len", "beg"], ["i_beg", "string", "ascii_letters", "index", "beg"], ["seq", "range", "int", "beg", "int", "end", "int", "step"]], "bounds": [["bounds", "nrange", "split"], ["len", "bounds", "len", "bounds"], ["beg", "bounds"], ["end", "bounds"], ["len", "bounds"], ["step", "bounds"]], "end": [["end", "bounds"], ["rlen", "len", "end"], ["i_end", "string", "ascii_letters", "index", "end"], ["seq", "range", "int", "beg", "int", "end", "int", "step"]], "fill": [["fill", "_", "str", "_", "zfill", "rlen"], ["fill", "str"], ["hname", "join", "head", "fill", "rseq", "tail"]], "head": [["head", "nrange", "tail", "line", "replace", "replace", "split"], ["hname", "join", "head", "fill", "rseq", "tail"]], "hname": [["hname", "join", "head", "fill", "rseq", "tail"], ["detect_range", "hname"], ["all_hosts", "extend", "expand_hostname_range", "hname"], ["all_hosts", "append", "hname"]], "i_beg": [["i_beg", "string", "ascii_letters", "index", "beg"], ["i_beg", "i_end"], ["seq", "list", "string", "ascii_letters", "i_beg", "i_end", "int", "step"]], "i_end": [["i_end", "string", "ascii_letters", "index", "end"], ["i_beg", "i_end"], ["seq", "list", "string", "ascii_letters", "i_beg", "i_end", "int", "step"]], "nrange": [["head", "nrange", "tail", "line", "replace", "replace", "split"], ["bounds", "nrange", "split"]], "rlen": [["rlen", "len", "beg"], ["rlen", "len", "end"], ["fill", "_", "str", "_", "zfill", "rlen"]], "seq": [["seq", "list", "string", "ascii_letters", "i_beg", "i_end", "int", "step"], ["seq", "range", "int", "beg", "int", "end", "int", "step"]], "step": [["step", "bounds"], ["seq", "list", "string", "ascii_letters", "i_beg", "i_end", "int", "step"], ["seq", "range", "int", "beg", "int", "end", "int", "step"]], "tail": [["head", "nrange", "tail", "line", "replace", "replace", "split"], ["hname", "join", "head", "fill", "rseq", "tail"]]}, "name": "expand_hostname_range", "params": {"line": ""}, "params_descr": {"line": ""}, "params_occur": {"line": [["head", "nrange", "tail", "line", "replace", "replace", "split"]]}, "params_p": {"args": [], "kwargs": [], "line": [["str", 0.6528056948740734], ["Iterable[str]", 0.26737415908386597], ["List[str]", 0.07982014604206047]]}, "q_name": "expand_hostname_range", "ret_exprs": ["return all_hosts"], "ret_type": "", "ret_type_p": [["Dict[str, Dict[str, int]]", 0.276631445105456], ["Dict[str, Any]", 0.15096414426162064], ["bool", 0.0723996749012367], ["int", 0.06345789342201448]], "variables": {"all_hosts": "", "beg": "", "bounds": "", "end": "", "fill": "", "head": "", "hname": "", "i_beg": "", "i_end": "", "nrange": "", "rlen": "", "seq": "", "step": "", "tail": ""}, "variables_p": {"all_hosts": [["list", 0.8068218987709941], ["List[str]", 0.11037694310883663], ["str", 0.08280115812016925]], "beg": [["List[int]", 0.40322420328466074], ["int", 0.30898605218213815], ["list", 0.18312744026863237], ["List[Dict[str, str]]", 0.10466230426456867]], "bounds": [["str", 0.9999999999999998]], "end": [["int", 0.5911066775091336], ["Set[str]", 0.09654695462195755], ["str", 0.09436700507570536], ["list", 0.09333549520573019]], "fill": [["str", 0.7359751576390893], ["Tuple[str, str]", 0.09094465354108511], ["Type[str]", 0.08654009440991287], ["List[List[int]]", 0.08654009440991287]], "head": [["str", 0.28699056945167717], ["list", 0.09103983282767464], ["Union[Literal, str]", 0.09045932105849125], ["bytes", 0.09040560699401633], ["IO[bytes]", 0.08904423605668793], ["List[str]", 0.07945515055258225]], "hname": [["list", 0.7008139234191034], ["str", 0.20551418893594936], ["List[str]", 0.09367188764494698]], "i_beg": [["int", 0.2367550248724271], ["List[str]", 0.10270963050298715], ["Set[str]", 0.09956880131503941], ["Dict[str, Any]", 0.09482090037420254], ["str", 0.09100844828353816]], "i_end": [["str", 0.29072387774688024], ["int", 0.19748446770327444], ["List[Tuple[str, str]]", 0.09176092633849511], ["Dict[str, List[Any]]", 0.09084264803561476]], "nrange": [["str", 0.6820460674969601], ["float", 0.10278089674721141]], "rlen": [["List[List[str]]", 0.1854690850096179], ["bytearray", 0.1489610379342665], ["List[int]", 0.14449548813608215], ["Dict[str, int]", 0.10986328164593091], ["List[str]", 0.0957645179416894], ["List[Tuple[str, Any, Any]]", 0.09001410038885654], ["list", 0.08174796305576407], ["str", 0.07572078120551029], ["Type[List[Any]]", 0.06796374468228236]], "seq": [["int", 0.685617875363776], ["str", 0.09073407545333098], ["list", 0.07224088990016354]], "step": [["int", 0.6200006135823856], ["bytearray", 0.1063128385355291], ["str", 0.08148638801053791]], "tail": [["str", 0.28699056945167717], ["list", 0.09103983282767464], ["Union[Literal, str]", 0.09045932105849125], ["bytes", 0.09040560699401633], ["IO[bytes]", 0.08904423605668793], ["List[str]", 0.07945515055258225]]}}], "imports": ["__future__", "absolute_import", "division", "print_function", "string", "ansible", "errors"], "mod_var_ln": {"__metaclass__": [[34, 0], [34, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 19}, "session_id": "hWH6fvEbNWFZpUulQN19dK4dHWux2RnVNUEF2KeQWaQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}