{"error": null, "response": {"classes": [{"cls_lc": [[36, 0], [373, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [67, 25]], "fn_var_ln": {"data": [[65, 16], [65, 20]], "filename": [[43, 8], [43, 21]], "groups": [[50, 8], [50, 19]], "hosts": [[48, 8], [48, 18]], "patterns": [[49, 8], [49, 21]]}, "fn_var_occur": {"data": [["data", "fh", "read"], ["data", "to_text", "data", "errors"], ["data", "line", "line", "data", "splitlines", "line", "startswith", "line", "startswith"], ["data", "to_text", "line", "errors", "line", "data", "splitlines", "line", "startswith", "line", "startswith"], ["self", "_parse", "data"]], "filename": [["self", "filename", "filename"], ["open", "filename", "fh"]], "groups": [["self", "groups", "groups"]], "hosts": [["self", "hosts"]], "patterns": [["self", "patterns"]]}, "name": "__init__", "params": {"filename": "", "groups": "", "loader": "", "self": ""}, "params_descr": {"filename": "", "groups": "", "loader": "", "self": ""}, "params_occur": {"filename": [["self", "filename", "filename"], ["open", "filename", "fh"]], "groups": [["self", "groups", "groups"]], "loader": [], "self": [["self", "filename", "filename"], ["self", "hosts"], ["self", "patterns"], ["self", "groups", "groups"], ["self", "_parse", "data"]]}, "params_p": {"args": [], "filename": [["str", 0.0870290614297436]], "groups": [["bool", 0.30280932920152653], ["int", 0.23374244743969003], ["List[Dict]", 0.09790288194088288], ["MutableMapping[str, str]", 0.0951467078099271], ["Optional[str]", 0.08706567757953808], ["str", 0.08706567757953808]], "kwargs": [], "loader": [["bool", 0.562935827989979], ["List[str]", 0.08266055006792916], ["int", 0.08223795183104306], ["str", 0.08223795183104306], ["Optional[List]", 0.0799282278150389]], "self": []}, "q_name": "InventoryParser.__init__", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "filename": "", "groups": "", "hosts": "", "patterns": ""}, "variables_p": {"data": [["str", 0.8073171527051838], ["int", 0.0984595058793441], ["List[str]", 0.0942233414154722]], "filename": [["str", 0.3826504084155174], ["Optional[str]", 0.09509769621156787]], "groups": [["int", 1.0]], "hosts": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "patterns": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [70, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_raise_error", "params": {"message": "", "self": ""}, "params_descr": {"message": "", "self": ""}, "params_occur": {"message": [["AnsibleError", "self", "filename", "self", "lineno", "message"]], "self": [["AnsibleError", "self", "filename", "self", "lineno", "message"]]}, "params_p": {"args": [], "kwargs": [], "message": [["str", 0.6245286642923291], ["tuple", 0.09518337079032656], ["IO", 0.0909178730656304]], "self": []}, "q_name": "InventoryParser._raise_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Populates self.groups from the given array of lines. Raises an error on", "long_descr": "any parse failure.", "ret": null}, "fn_lc": [[72, 4], [194, 57]], "fn_var_ln": {"child": [[161, 16], [161, 21]], "decl": [[182, 12], [182, 16]], "groupname": [[104, 17], [104, 26]], "hosts": [[143, 16], [143, 21]], "k": [[150, 17], [150, 18]], "line": [[93, 12], [93, 16]], "lineno": [[89, 8], [89, 19]], "m": [[102, 12], [102, 13]], "pending_declarations": [[85, 8], [85, 28]], "state": [[106, 16], [106, 21]], "title": [[108, 20], [108, 25]], "v": [[150, 20], [150, 21]]}, "fn_var_occur": {"child": [["child", "self", "_parse_group_name", "line"], ["child", "self", "groups"], ["self", "groups", "child", "Group", "name", "child"], ["pending_declarations", "child", "dict", "line", "self", "lineno", "state", "state", "name", "child", "parent", "groupname"], ["self", "groups", "groupname", "add_child_group", "self", "groups", "child"]], "decl": [["decl", "pending_declarations", "g"], ["AnsibleError", "self", "filename", "decl", "decl", "decl"], ["AnsibleError", "self", "filename", "decl", "decl", "decl"]], "groupname": [["groupname", "state", "m", "groups"], ["groupname", "self", "groups"], ["self", "groups", "groupname", "Group", "name", "groupname"], ["pending_declarations", "groupname", "dict", "line", "self", "lineno", "state", "state", "name", "groupname"], ["groupname", "pending_declarations", "state"], ["pending_declarations", "groupname"], ["self", "groups", "groupname", "add_host", "h"], ["self", "groups", "groupname", "set_variable", "k", "v"], ["self", "groups", "groupname", "set_priority", "v"], ["pending_declarations", "child", "dict", "line", "self", "lineno", "state", "state", "name", "child", "parent", "groupname"], ["self", "groups", "groupname", "add_child_group", "self", "groups", "child"]], "hosts": [["hosts", "self", "_parse_host_definition", "line"]], "k": [["k", "v", "self", "_parse_variable_definition", "line"], ["self", "groups", "groupname", "set_variable", "k", "v"]], "line": [["line", "line", "strip"], ["m", "self", "patterns", "match", "line"], ["pending_declarations", "groupname", "dict", "line", "self", "lineno", "state", "state", "name", "groupname"], ["line", "startswith", "line", "endswith"], ["self", "_raise_error", "line"], ["hosts", "self", "_parse_host_definition", "line"], ["k", "v", "self", "_parse_variable_definition", "line"], ["child", "self", "_parse_group_name", "line"], ["pending_declarations", "child", "dict", "line", "self", "lineno", "state", "state", "name", "child", "parent", "groupname"]], "lineno": [["self", "lineno"], ["self", "lineno"], ["pending_declarations", "groupname", "dict", "line", "self", "lineno", "state", "state", "name", "groupname"], ["pending_declarations", "child", "dict", "line", "self", "lineno", "state", "state", "name", "child", "parent", "groupname"]], "m": [["m", "self", "patterns", "match", "line"], ["groupname", "state", "m", "groups"], ["title", "join", "m", "groups"]], "pending_declarations": [["pending_declarations", "groupname", "dict", "line", "self", "lineno", "state", "state", "name", "groupname"], ["groupname", "pending_declarations", "state"], ["pending_declarations", "groupname"], ["pending_declarations", "child", "dict", "line", "self", "lineno", "state", "state", "name", "child", "parent", "groupname"], ["decl", "pending_declarations", "g"]], "state": [["groupname", "state", "m", "groups"], ["state", "state"], ["self", "_raise_error", "title", "state"], ["pending_declarations", "groupname", "dict", "line", "self", "lineno", "state", "state", "name", "groupname"], ["groupname", "pending_declarations", "state"], ["pending_declarations", "child", "dict", "line", "self", "lineno", "state", "state", "name", "child", "parent", "groupname"], ["self", "_raise_error", "state"]], "title": [["title", "join", "m", "groups"], ["self", "_raise_error", "title", "state"]], "v": [["k", "v", "self", "_parse_variable_definition", "line"], ["self", "groups", "groupname", "set_variable", "k", "v"], ["self", "groups", "groupname", "set_priority", "v"]]}, "name": "_parse", "params": {"lines": "", "self": ""}, "params_descr": {"lines": "", "self": ""}, "params_occur": {"lines": [], "self": [["self", "_compile_patterns"], ["self", "lineno"], ["self", "lineno"], ["m", "self", "patterns", "match", "line"], ["self", "_raise_error", "title", "state"], ["groupname", "self", "groups"], ["self", "groups", "groupname", "Group", "name", "groupname"], ["pending_declarations", "groupname", "dict", "line", "self", "lineno", "state", "state", "name", "groupname"], ["self", "_raise_error", "line"], ["hosts", "self", "_parse_host_definition", "line"], ["self", "groups", "groupname", "add_host", "h"], ["k", "v", "self", "_parse_variable_definition", "line"], ["self", "groups", "groupname", "set_variable", "k", "v"], ["self", "groups", "groupname", "set_priority", "v"], ["child", "self", "_parse_group_name", "line"], ["child", "self", "groups"], ["self", "groups", "child", "Group", "name", "child"], ["pending_declarations", "child", "dict", "line", "self", "lineno", "state", "state", "name", "child", "parent", "groupname"], ["self", "groups", "groupname", "add_child_group", "self", "groups", "child"], ["self", "_raise_error", "state"], ["AnsibleError", "self", "filename", "decl", "decl", "decl"], ["AnsibleError", "self", "filename", "decl", "decl", "decl"], ["self", "groups", "values"], ["self", "groups", "add_child_group", "group"]]}, "params_p": {"args": [], "kwargs": [], "lines": [["List[AnyStr]", 0.49999999999999994], ["str", 0.19999999999999998], ["List[str]", 0.09999999999999999], ["Iterable[str]", 0.09999999999999999], ["Iterable[Sequence[str]]", 0.09999999999999999]], "self": []}, "q_name": "InventoryParser._parse", "ret_exprs": [], "ret_type": "", "variables": {"child": "", "decl": "", "groupname": "", "hosts": "", "k": "", "line": "", "lineno": "", "m": "", "pending_declarations": "", "state": "", "title": "", "v": ""}, "variables_p": {"child": [["str", 0.18756828362490915], ["Sequence[str]", 0.12278797836502324], ["Set[str]", 0.11135040478607978], ["Union[Literal, Literal]", 0.09804259307896171], ["List[str]", 0.09610199436039248]], "decl": [["str", 0.41159235990115717], ["Dict[int, List[int]]", 0.09555228773037441], ["dict", 0.09133538050887641], ["Type[RuntimeWarning]", 0.08996447441134231]], "groupname": [["int", 0.09932261576157403], ["dict", 0.09130246245230186]], "hosts": [["int", 0.7], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1], ["bool", 0.1], ["Type[str]", 0.1]], "k": [["int", 0.6433570480059957], ["bool", 0.28603657224825896], ["float", 0.07060637974574545]], "line": [["str", 0.5298262028008218], ["List[str]", 0.19123764943302624], ["list", 0.10008366201844708]], "lineno": [["str", 0.5], ["dict", 0.5]], "m": [["str", 0.7003667638387002], ["Pattern[str]", 0.2013050023814112]], "pending_declarations": [["dict", 0.39668963399446894], ["Dict[Any, Type[Any]]", 0.10448609492615968], ["Dict[str, str]", 0.10437633274605601], ["Dict[bytes, bytes]", 0.10421182463907522], ["List[Dict[str, Any]]", 0.10193322118871231], ["List[str]", 0.09182989208168547]], "state": [["Tuple[Any, Any]", 0.10835283912241413], ["str", 0.10820089807043444], ["int", 0.10741389108922346]], "title": [["str", 0.9999999999999998]], "v": [["str", 0.5677481960250971], ["Dict[int, str]", 0.12106015348831586], ["List[str]", 0.10790541956469664]]}}, {"docstring": {"func": "Takes a single line and tries to parse it as a group name. Returns the", "long_descr": "group name if successful, or raises an error.", "ret": null}, "fn_lc": [[196, 4], [206, 66]], "fn_var_ln": {"m": [[202, 8], [202, 9]]}, "fn_var_occur": {"m": [["m", "self", "patterns", "match", "line"], ["m", "group"]]}, "name": "_parse_group_name", "params": {"line": "", "self": ""}, "params_descr": {"line": "", "self": ""}, "params_occur": {"line": [["m", "self", "patterns", "match", "line"], ["self", "_raise_error", "line"]], "self": [["m", "self", "patterns", "match", "line"], ["self", "_raise_error", "line"]]}, "params_p": {"args": [], "kwargs": [], "line": [["str", 0.7217234931391224], ["int", 0.09518205884713062], ["bytes", 0.09288416015998287]], "self": []}, "q_name": "InventoryParser._parse_group_name", "ret_exprs": ["return m.group(1)"], "ret_type": "", "ret_type_p": [["int", 0.33333333272983884], ["Dict[str, Any]", 0.33333333272983884], ["str", 9.706075425789312e-10], ["Container[str]", 4.199380474972001e-10]], "variables": {"m": ""}, "variables_p": {"m": [["int", 0.3570588663447827], ["float", 0.24214469773363725], ["Pattern[str]", 0.09713919636148485], ["bytes", 0.07675933445105307], ["Dict[str, int]", 0.06981685052479261], ["List[str]", 0.06858853771613475]]}}, {"docstring": {"func": "Takes a string and tries to parse it as a variable definition. Returns", "long_descr": "the key and value if successful, or raises an error.", "ret": null}, "fn_lc": [[208, 4], [223, 65]], "fn_var_ln": {"k": [[220, 13], [220, 14]], "v": [[220, 16], [220, 17]]}, "fn_var_occur": {"k": [["k", "v", "e", "strip", "e", "line", "split"], ["k", "self", "_parse_value", "v"]], "v": [["k", "v", "e", "strip", "e", "line", "split"], ["k", "self", "_parse_value", "v"]]}, "name": "_parse_variable_definition", "params": {"line": "", "self": ""}, "params_descr": {"line": "", "self": ""}, "params_occur": {"line": [["k", "v", "e", "strip", "e", "line", "split"], ["self", "_raise_error", "line"]], "self": [["k", "self", "_parse_value", "v"], ["self", "_raise_error", "line"]]}, "params_p": {"args": [], "kwargs": [], "line": [["List[str]", 0.6103739542454363], ["str", 0.2105152952473007], ["IO[str]", 0.08788372807897354]], "self": []}, "q_name": "InventoryParser._parse_variable_definition", "ret_exprs": ["return (k, self._parse_value(v))"], "ret_type": "", "ret_type_p": [["str", 0.1975879459836489], ["bool", 0.17864036048159126], ["Pattern", 0.11095156479260618], ["mypy.errors.Errors", 0.11064229713975428], ["Tuple[float, float, float, float]", 0.10190298998853031], ["Optional[str]", 0.10029163933465167], ["Mapping", 0.09145910311945452]], "variables": {"k": "", "v": ""}, "variables_p": {"k": [["int", 0.5003152292237355], ["Pattern[str]", 0.2065061853236061], ["list", 0.1041493290694777], ["List[str]", 0.10146702001587074], ["Tuple[str]", 0.08756223636730998]], "v": []}}, {"docstring": {"func": "Takes a single line and tries to parse it as a host definition. Returns", "long_descr": "a list of Hosts if successful, or raises an error.", "ret": null}, "fn_lc": [[225, 4], [266, 20]], "fn_var_ln": {"address": [[264, 20], [264, 29]], "hostnames": [[246, 9], [246, 18]], "hosts": [[247, 8], [247, 13]], "k": [[255, 13], [255, 14]], "port": [[246, 20], [246, 24]], "tokens": [[242, 12], [242, 18]], "v": [[255, 16], [255, 17]], "variables": [[251, 8], [251, 17]]}, "fn_var_occur": {"address": [["h", "address", "variables", "k"]], "hostnames": [["hostnames", "port", "self", "_expand_hostpattern", "tokens"], ["hosts", "self", "_Hosts", "hostnames", "port"]], "hosts": [["hosts", "self", "_Hosts", "hostnames", "port"]], "k": [["k", "v", "t", "split"], ["variables", "k", "self", "_parse_value", "v"], ["h", "set_variable", "k", "variables", "k"], ["h", "address", "variables", "k"]], "port": [["hostnames", "port", "self", "_expand_hostpattern", "tokens"], ["hosts", "self", "_Hosts", "hostnames", "port"]], "tokens": [["tokens", "shlex_split", "line", "comments", "True"], ["hostnames", "port", "self", "_expand_hostpattern", "tokens"]], "v": [["k", "v", "t", "split"], ["variables", "k", "self", "_parse_value", "v"]], "variables": [["variables", "k", "self", "_parse_value", "v"], ["h", "set_variable", "k", "variables", "k"], ["h", "address", "variables", "k"]]}, "name": "_parse_host_definition", "params": {"line": "", "self": ""}, "params_descr": {"line": "", "self": ""}, "params_occur": {"line": [["tokens", "shlex_split", "line", "comments", "True"], ["self", "_raise_error", "line", "e"]], "self": [["self", "_raise_error", "line", "e"], ["hostnames", "port", "self", "_expand_hostpattern", "tokens"], ["hosts", "self", "_Hosts", "hostnames", "port"], ["self", "_raise_error", "t"], ["variables", "k", "self", "_parse_value", "v"]]}, "params_p": {"args": [], "kwargs": [], "line": [["bytes", 0.1745021692878053], ["int", 0.16321338256594584], ["str", 0.11339739316689124], ["Tuple[str, str, int]", 0.09767236654372503], ["Optional[bytes]", 0.09035928997657452]], "self": []}, "q_name": "InventoryParser._parse_host_definition", "ret_exprs": ["return hosts"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"address": "", "hostnames": "", "hosts": "", "k": "", "port": "", "tokens": "", "v": "", "variables": ""}, "variables_p": {"address": [["list", 0.4018437536009507], ["dict", 0.09311185627255823], ["Dict[str, Dict[str, Any]]", 0.08234622964283235], ["str", 0.0795839898369424]], "hostnames": [["str", 0.6541349548926402], ["int", 0.34586504510735977]], "hosts": [["str", 0.657755346696123], ["bool", 0.07971804886467133]], "k": [["int", 0.20587662033051585], ["List[str]", 0.12429419309524578], ["List[int]", 0.11277065945212389], ["Dict[str, str]", 0.10332188886113068], ["Set[str]", 0.09959524011383972], ["re.RegexFlag", 0.09485919028268512], ["Dict[str, List[Any]]", 0.09107531954146016], ["Dict[str, Any]", 0.08250557006115307]], "port": [["str", 0.6541349548926402], ["int", 0.34586504510735977]], "tokens": [["str", 0.6302998409988807], ["int", 0.09192864403586434], ["Pattern[str]", 0.08468836625532873]], "v": [["bool", 0.16739217032262058], ["float", 0.09995153977415208], ["idom.utils.Ref[Literal]", 0.08374586857265302]], "variables": [["Dict[str, Any]", 0.38360090371864264], ["dict", 0.36367415373758993]]}}, {"docstring": {"func": "Takes a single host pattern and returns a list of hostnames and an", "long_descr": "optional port number that applies to all of them.", "ret": null}, "fn_lc": [[268, 4], [292, 32]], "fn_var_ln": {"hostnames": [[290, 12], [290, 21]], "pattern": [[281, 12], [281, 19]], "port": [[282, 12], [282, 16]]}, "fn_var_occur": {"hostnames": [["hostnames", "expand_hostname_range", "pattern"], ["hostnames", "pattern"], ["hostnames", "port"]], "pattern": [["pattern", "port", "parse_address", "hostpattern", "allow_ranges", "True"], ["pattern", "hostpattern"], ["detect_range", "pattern"], ["hostnames", "expand_hostname_range", "pattern"], ["hostnames", "pattern"]], "port": [["pattern", "port", "parse_address", "hostpattern", "allow_ranges", "True"], ["port", "None"], ["hostnames", "port"]]}, "name": "_expand_hostpattern", "params": {"hostpattern": "", "self": ""}, "params_descr": {"hostpattern": "", "self": ""}, "params_occur": {"hostpattern": [["pattern", "port", "parse_address", "hostpattern", "allow_ranges", "True"], ["pattern", "hostpattern"]], "self": []}, "params_p": {"args": [], "hostpattern": [["bool", 0.3118503665124171], ["List[str]", 0.08836257334417666], ["str", 0.08683748787130992]], "kwargs": [], "self": []}, "q_name": "InventoryParser._expand_hostpattern", "ret_exprs": ["return (hostnames, port)"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"hostnames": "", "pattern": "", "port": ""}, "variables_p": {"hostnames": [["Pattern[str]", 0.27958832807992984], ["qutebrowser.utils.urlmatch.UrlPattern", 0.14875694761896952]], "pattern": [["str", 0.11302634488937556], ["int", 0.10980291794463835]], "port": [["str", 0.29679437857264707], ["int", 0.25275317015876375], ["list", 0.20621418764766047], ["Dict[str, Any]", 0.07991878577915405]]}}, {"docstring": {"func": "Takes a list of hostnames and a port (which may be None) and returns a", "long_descr": "list of Hosts (without recreating anything in self.hosts).", "ret": null}, "fn_lc": [[294, 4], [311, 20]], "fn_var_ln": {"hosts": [[300, 8], [300, 13]]}, "fn_var_occur": {"hosts": [["hn", "self", "hosts"], ["self", "hosts", "hn", "Host", "name", "hn", "port", "port"], ["hosts", "append", "self", "hosts", "hn"]]}, "name": "_Hosts", "params": {"hostnames": "", "port": "", "self": ""}, "params_descr": {"hostnames": "", "port": "", "self": ""}, "params_occur": {"hostnames": [], "port": [["self", "hosts", "hn", "Host", "name", "hn", "port", "port"]], "self": [["hn", "self", "hosts"], ["self", "hosts", "hn", "Host", "name", "hn", "port", "port"], ["hosts", "append", "self", "hosts", "hn"]]}, "params_p": {"args": [], "hostnames": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "port": [["Callable", 0.20482643344395268], ["str", 0.10241321672197634], ["bool", 0.08812931368722629]], "self": []}, "q_name": "InventoryParser._Hosts", "ret_exprs": ["return hosts"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"hosts": ""}, "variables_p": {"hosts": [["str", 0.5900787289794275], ["int", 0.40992127102057263]]}}, {"docstring": {"func": "Attempt to transform the string value from an ini file into a basic python object", "long_descr": "(int, dict, list, unicode string, etc).", "ret": null}, "fn_lc": [[314, 4], [330, 77]], "fn_var_ln": {"v": [[321, 16], [321, 17]]}, "fn_var_occur": {"v": [["v", "ast", "literal_eval", "v"], ["to_text", "v", "nonstring", "errors"]]}, "name": "_parse_value", "params": {"v": ""}, "params_descr": {"v": ""}, "params_occur": {"v": [["v", "ast", "literal_eval", "v"], ["to_text", "v", "nonstring", "errors"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "v": [["int", 0.7336055451189157], ["T", 0.09737325861776995], ["Optional[List[int]]", 0.09233689373437308], ["str", 0.07668430252894115]]}, "q_name": "InventoryParser._parse_value", "ret_exprs": ["return to_text(v, nonstring='passthru', errors='surrogate_or_strict')"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.18810091014189806], ["str", 0.17742329341438373]], "variables": {"v": ""}, "variables_p": {"v": [["int", 0.34534819005822864], ["Tuple[str]", 0.09888658791218695], ["list", 0.08027564177950386]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[332, 4], [333, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_host_variables", "params": {"host": "", "self": ""}, "params_descr": {"host": "", "self": ""}, "params_occur": {"host": [], "self": []}, "params_p": {"args": [], "host": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "InventoryParser.get_host_variables", "ret_exprs": ["return {}"], "ret_type": "", "ret_type_p": [["str", 0.40839082024770623], ["float", 0.08181451962548641], ["bool", 0.08181451962548641]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Compiles the regular expressions required to parse the inventory and", "long_descr": "stores them in self.patterns.", "ret": null}, "fn_lc": [[335, 4], [373, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_compile_patterns", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "patterns", "re", "compile", "re", "X"], ["self", "patterns", "re", "compile", "re", "X"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "InventoryParser._compile_patterns", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "InventoryParser", "q_name": "InventoryParser", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "ast", "re", "ansible", "constants", "C", "ansible", "errors", "AnsibleError", "ansible", "inventory", "host", "Host", "ansible", "inventory", "group", "Group", "ansible", "inventory", "expand_hosts", "detect_range", "ansible", "inventory", "expand_hosts", "expand_hostname_range", "ansible", "module_utils", "_text", "to_text", "ansible", "parsing", "utils", "addresses", "parse_address", "ansible", "utils", "shlex", "shlex_split"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 55}, "session_id": "fvrEdScUE2aoszTIxCOasjVurzFmJv7raqwjea6MsqI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}