{"error": null, "response": {"classes": [{"cls_lc": [[202, 4], [203, 12]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "CertificateError", "q_name": "CertificateError", "variables": {}, "variables_p": {}}, {"cls_lc": [[334, 0], [336, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "ConnectionError", "q_name": "ConnectionError", "variables": {}, "variables_p": {}}, {"cls_lc": [[339, 0], [341, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "ProxyError", "q_name": "ProxyError", "variables": {}, "variables_p": {}}, {"cls_lc": [[344, 0], [346, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "SSLValidationError", "q_name": "SSLValidationError", "variables": {}, "variables_p": {}}, {"cls_lc": [[349, 0], [351, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "NoSSLError", "q_name": "NoSSLError", "variables": {}, "variables_p": {}}, {"cls_lc": [[357, 4], [387, 119]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[358, 8], [363, 79]], "fn_var_ln": {"context": [[361, 16], [361, 28]]}, "fn_var_occur": {"context": [["self", "context", "create_default_context"], ["self", "context", "load_cert_chain", "self", "cert_file", "self", "key_file"]]}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["httplib", "HTTPSConnection", "__init__", "self", "args", "kwargs"]], "kwargs": [["httplib", "HTTPSConnection", "__init__", "self", "args", "kwargs"]], "self": [["httplib", "HTTPSConnection", "__init__", "self", "args", "kwargs"], ["self", "context", "create_default_context"], ["self", "cert_file"], ["self", "context", "load_cert_chain", "self", "cert_file", "self", "key_file"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CustomHTTPSConnection.__init__", "ret_exprs": [], "ret_type": "", "variables": {"context": ""}, "variables_p": {"context": [["int", 0.11253779185814797], ["List[None]", 0.10893990284324508]]}}, {"docstring": {"func": "Connect to a host on a given (SSL) port.", "long_descr": null, "ret": null}, "fn_lc": [[365, 8], [387, 119]], "fn_var_ln": {"server_hostname": [[379, 16], [379, 31]], "sock": [[387, 16], [387, 25]]}, "fn_var_occur": {"server_hostname": [["server_hostname", "self", "host"], ["server_hostname", "self", "_tunnel_host"], ["self", "sock", "self", "context", "wrap_socket", "sock", "server_hostname", "server_hostname"], ["self", "sock", "ssl_wrap_socket", "sock", "keyfile", "self", "key_file", "cert_reqs", "ssl", "CERT_NONE", "certfile", "self", "cert_file", "ssl_version", "PROTOCOL", "server_hostname", "server_hostname"]], "sock": [["sock", "socket", "create_connection", "self", "host", "self", "port", "self", "timeout", "self", "source_address"], ["sock", "socket", "create_connection", "self", "host", "self", "port", "self", "timeout"], ["self", "sock", "sock"], ["self", "sock", "self", "context", "wrap_socket", "sock", "server_hostname", "server_hostname"], ["self", "sock", "ssl_wrap_socket", "sock", "keyfile", "self", "key_file", "cert_reqs", "ssl", "CERT_NONE", "certfile", "self", "cert_file", "ssl_version", "PROTOCOL", "server_hostname", "server_hostname"], ["self", "sock", "ssl", "wrap_socket", "sock", "keyfile", "self", "key_file", "certfile", "self", "cert_file", "ssl_version", "PROTOCOL"]]}, "name": "connect", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["hasattr", "self"], ["sock", "socket", "create_connection", "self", "host", "self", "port", "self", "timeout", "self", "source_address"], ["sock", "socket", "create_connection", "self", "host", "self", "port", "self", "timeout"], ["server_hostname", "self", "host"], ["self", "_tunnel_host"], ["self", "sock", "sock"], ["self", "_tunnel"], ["server_hostname", "self", "_tunnel_host"], ["self", "sock", "self", "context", "wrap_socket", "sock", "server_hostname", "server_hostname"], ["self", "sock", "ssl_wrap_socket", "sock", "keyfile", "self", "key_file", "cert_reqs", "ssl", "CERT_NONE", "certfile", "self", "cert_file", "ssl_version", "PROTOCOL", "server_hostname", "server_hostname"], ["self", "sock", "ssl", "wrap_socket", "sock", "keyfile", "self", "key_file", "certfile", "self", "cert_file", "ssl_version", "PROTOCOL"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CustomHTTPSConnection.connect", "ret_exprs": [], "ret_type": "", "variables": {"server_hostname": "", "sock": ""}, "variables_p": {"server_hostname": [["list", 0.1913641285313037], ["float", 0.11577774352519943], ["Anaconda3.Lib.site-packages.dask.array.core.Array", 0.10009641978404835], ["int", 0.09201733307769673]], "sock": []}}], "name": "CustomHTTPSConnection", "q_name": "CustomHTTPSConnection", "variables": {}, "variables_p": {}}, {"cls_lc": [[389, 4], [394, 55]], "cls_var_ln": {"https_request": [[394, 8], [394, 21]]}, "cls_var_occur": {"https_request": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[391, 8], [392, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "https_open", "params": {"req": "", "self": ""}, "params_descr": {"req": "", "self": ""}, "params_occur": {"req": [["self", "do_open", "CustomHTTPSConnection", "req"]], "self": [["self", "do_open", "CustomHTTPSConnection", "req"]]}, "params_p": {"args": [], "kwargs": [], "req": [["float", 0.3275195107813302], ["int", 0.2144571574729609], ["bool", 0.1604985271284278]], "self": []}, "q_name": "CustomHTTPSHandler.https_open", "ret_exprs": ["return self.do_open(CustomHTTPSConnection, req)"], "ret_type": "", "ret_type_p": [["str", 0.18877705480363852], ["int", 0.12143650454604715], ["List[Exception]", 0.104379394105948], ["Callable[[KT], VT]", 0.09643679932367243], ["Callable", 0.0942310815697523]], "variables": {}, "variables_p": {}}], "name": "CustomHTTPSHandler", "q_name": "CustomHTTPSHandler", "variables": {"https_request": ""}, "variables_p": {"https_request": [["str", 0.39999999999999997], ["int", 0.3], ["Type[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]]}}, {"cls_lc": [[456, 0], [472, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[462, 4], [466, 65]], "fn_var_ln": {"_method": [[465, 8], [465, 20]], "headers": [[464, 12], [464, 19]]}, "fn_var_occur": {"_method": [["self", "_method", "method", "upper"]], "headers": [["headers", "None"], ["urllib_request", "Request", "__init__", "self", "url", "data", "headers"]]}, "name": "__init__", "params": {"data": "", "headers": "", "method": "", "self": "", "url": ""}, "params_descr": {"data": "", "headers": "", "method": "", "self": "", "url": ""}, "params_occur": {"data": [["urllib_request", "Request", "__init__", "self", "url", "data", "headers"]], "headers": [["headers", "None"], ["urllib_request", "Request", "__init__", "self", "url", "data", "headers"]], "method": [["self", "_method", "method", "upper"]], "self": [["self", "_method", "method", "upper"], ["urllib_request", "Request", "__init__", "self", "url", "data", "headers"]], "url": [["urllib_request", "Request", "__init__", "self", "url", "data", "headers"]]}, "params_p": {"args": [], "data": [["str", 0.2983568659367122], ["dict", 0.20072316551991243], ["Optional[dict]", 0.19394445405856947], ["Literal", 0.11443071559921075], ["Mapping[str, str]", 0.09871862832825203]], "headers": [["Optional[Dict]", 0.11030712559323465], ["Optional[str]", 0.10418226297951819], ["Optional[Dict[str, str]]", 0.09977964976594421], ["Optional[dict]", 0.09747938961791593], ["Optional[float]", 0.09462336503153222], ["bytes", 0.0938905510303613], ["Optional[Mapping[str, Any]]", 0.09101121606182423]], "kwargs": [], "method": [["str", 0.6361067038389043], ["Optional[str]", 0.18194664808054775], ["Callable[[], Any]", 0.09097332404027388], ["Callable[..., requests.Response]", 0.09097332404027388]], "self": [], "url": [["str", 0.2983568659367122], ["dict", 0.20072316551991243], ["Optional[dict]", 0.19394445405856947], ["Literal", 0.11443071559921075], ["Mapping[str, str]", 0.09871862832825203]]}, "q_name": "RequestWithMethod.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_method": "", "headers": ""}, "variables_p": {"_method": [["str", 0.8402759009972015], ["Pattern[str]", 0.08598580720172695], ["dict", 0.07373829180107157]], "headers": [["Dict[str, None]", 0.18438372789955113], ["str", 0.09683061669178232], ["http_server.requests.Request", 0.09277628893485701]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[468, 4], [472, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_method"], ["self", "_method"], ["urllib_request", "Request", "get_method", "self"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RequestWithMethod.get_method", "ret_exprs": ["return self._method", "return urllib_request.Request.get_method(self)"], "ret_type": "", "ret_type_p": [["str", 0.6214921227270283], ["List[Dict[str, Any]]", 0.10030498536654837], ["Union[str, bytes]", 0.0988370878870014], ["Optional[str]", 0.09094189153465317], ["Optional[dict]", 0.08842391248476865]], "variables": {}, "variables_p": {}}], "name": "RequestWithMethod", "q_name": "RequestWithMethod", "variables": {}, "variables_p": {}}, {"cls_lc": [[482, 4], [518, 85]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[489, 8], [518, 85]], "fn_var_ln": {"do_redirect": [[505, 16], [505, 27]], "handler": [[490, 12], [490, 19]], "m": [[504, 16], [504, 17]], "newheaders": [[510, 16], [510, 26]], "newurl": [[509, 16], [509, 22]]}, "fn_var_occur": {"do_redirect": [["do_redirect", "False"], ["do_redirect", "code", "code"], ["do_redirect", "code", "code", "m"]], "handler": [["handler", "maybe_add_ssl_handler", "newurl", "validate_certs"], ["urllib_request", "_opener", "add_handler", "handler"]], "m": [["m", "req", "get_method"], ["do_redirect", "code", "code", "m"]], "newheaders": [["newheaders", "dict", "k", "v", "k", "v", "req", "headers", "items", "k", "lower"], ["urllib_request", "Request", "newurl", "headers", "newheaders", "origin_req_host", "req", "get_origin_req_host", "unverifiable", "True"]], "newurl": [["handler", "maybe_add_ssl_handler", "newurl", "validate_certs"], ["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"], ["urllib_error", "HTTPError", "newurl", "code", "msg", "hdrs", "fp"], ["newurl", "newurl", "replace"], ["urllib_request", "Request", "newurl", "headers", "newheaders", "origin_req_host", "req", "get_origin_req_host", "unverifiable", "True"]]}, "name": "redirect_request", "params": {"code": "", "fp": "", "hdrs": "", "msg": "", "newurl": "", "req": "", "self": ""}, "params_descr": {"code": "", "fp": "", "hdrs": "", "msg": "", "newurl": "", "req": "", "self": ""}, "params_occur": {"code": [["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"], ["urllib_error", "HTTPError", "newurl", "code", "msg", "hdrs", "fp"], ["do_redirect", "code", "code"], ["do_redirect", "code", "code", "m"], ["urllib_error", "HTTPError", "req", "get_full_url", "code", "msg", "hdrs", "fp"]], "fp": [["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"], ["urllib_error", "HTTPError", "newurl", "code", "msg", "hdrs", "fp"], ["urllib_error", "HTTPError", "req", "get_full_url", "code", "msg", "hdrs", "fp"]], "hdrs": [["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"], ["urllib_error", "HTTPError", "newurl", "code", "msg", "hdrs", "fp"], ["urllib_error", "HTTPError", "req", "get_full_url", "code", "msg", "hdrs", "fp"]], "msg": [["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"], ["urllib_error", "HTTPError", "newurl", "code", "msg", "hdrs", "fp"], ["urllib_error", "HTTPError", "req", "get_full_url", "code", "msg", "hdrs", "fp"]], "newurl": [["handler", "maybe_add_ssl_handler", "newurl", "validate_certs"], ["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"], ["urllib_error", "HTTPError", "newurl", "code", "msg", "hdrs", "fp"], ["newurl", "newurl", "replace"], ["urllib_request", "Request", "newurl", "headers", "newheaders", "origin_req_host", "req", "get_origin_req_host", "unverifiable", "True"]], "req": [["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"], ["m", "req", "get_method"], ["newheaders", "dict", "k", "v", "k", "v", "req", "headers", "items", "k", "lower"], ["urllib_request", "Request", "newurl", "headers", "newheaders", "origin_req_host", "req", "get_origin_req_host", "unverifiable", "True"], ["urllib_error", "HTTPError", "req", "get_full_url", "code", "msg", "hdrs", "fp"]], "self": [["urllib_request", "HTTPRedirectHandler", "redirect_request", "self", "req", "fp", "code", "msg", "hdrs", "newurl"]]}, "params_p": {"args": [], "code": [["str", 0.40561143138281974], ["bool", 0.21558932586975718], ["dict", 0.1140635370828336], ["Dict[str, str]", 0.08684022449372804]], "fp": [["str", 0.40561143138281974], ["bool", 0.21558932586975718], ["dict", 0.1140635370828336], ["Dict[str, str]", 0.08684022449372804]], "hdrs": [["str", 0.40561143138281974], ["bool", 0.21558932586975718], ["dict", 0.1140635370828336], ["Dict[str, str]", 0.08684022449372804]], "kwargs": [], "msg": [["str", 0.40561143138281974], ["bool", 0.21558932586975718], ["dict", 0.1140635370828336], ["Dict[str, str]", 0.08684022449372804]], "newurl": [["str", 0.5043592182590059], ["Dict[str, str]", 0.09450753600786448], ["dict", 0.08997456856074247]], "req": [["str", 0.2902800102844715], ["int", 0.20781173089895133]], "self": []}, "q_name": "RedirectHandlerFactory.<locals>.RedirectHandler.redirect_request", "ret_exprs": ["return urllib_request.HTTPRedirectHandler.redirect_request(self, req, fp, code, msg, hdrs, newurl)", "return urllib_request.Request(newurl, headers=newheaders, origin_req_host=req.get_origin_req_host(), unverifiable=True)"], "ret_type": "", "ret_type_p": [["str", 0.3782650411714107], ["Optional[str]", 0.11610784367335654]], "variables": {"do_redirect": "", "handler": "", "m": "", "newheaders": "", "newurl": ""}, "variables_p": {"do_redirect": [["Dict[str, str]", 0.4451583482130082], ["Dict[str, Union[Any, Any]]", 0.1800387070308243], ["Dict[str, Union[Any, Any, Any]]", 0.10844690243036835], ["dict", 0.10018364932012774], ["Dict[str, bool]", 0.08549887485475323], ["OrderedDict[str, List[str]]", 0.08067351815091803]], "handler": [["Anaconda3.Lib.site-packages.conda.gateways.logging.StdStreamHandler", 0.21275652949933893]], "m": [["str", 0.37462771198109956], ["Type[Tuple[Any, str]]", 0.1494674692231557], ["dict", 0.08854879136083248], ["int", 0.08830831402133058]], "newheaders": [["dict", 0.38728957548187093], ["Dict[str, str]", 0.12242156844348008], ["str", 0.10233773347281987], ["Optional[str]", 0.0979279918201009], ["List[str]", 0.0979279918201009]], "newurl": [["Anaconda3.Lib.site-packages.conda.gateways.logging.StdStreamHandler", 0.23509110209961426], ["dict", 0.17651793052825368], ["str", 0.08691196456340357]]}}], "name": "RedirectHandler", "q_name": "RedirectHandlerFactory.<locals>.RedirectHandler", "variables": {}, "variables_p": {}}, {"cls_lc": [[550, 0], [724, 32]], "cls_var_ln": {"CONNECT_COMMAND": [[558, 4], [558, 19]], "https_request": [[724, 4], [724, 17]]}, "cls_var_occur": {"CONNECT_COMMAND": [], "https_request": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[560, 4], [562, 24]], "fn_var_ln": {"hostname": [[561, 8], [561, 21]], "port": [[562, 8], [562, 17]]}, "fn_var_occur": {"hostname": [["self", "hostname", "hostname"]], "port": [["self", "port", "port"]]}, "name": "__init__", "params": {"hostname": "", "port": "", "self": ""}, "params_descr": {"hostname": "", "port": "", "self": ""}, "params_occur": {"hostname": [["self", "hostname", "hostname"]], "port": [["self", "port", "port"]], "self": [["self", "hostname", "hostname"], ["self", "port", "port"]]}, "params_p": {"args": [], "hostname": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": [], "port": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "self": []}, "q_name": "SSLValidationHandler.__init__", "ret_exprs": [], "ret_type": "", "variables": {"hostname": "", "port": ""}, "variables_p": {"hostname": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "port": [["Dict[str, Dict[int, str]]", 0.11729461192294889], ["float", 0.10511260567794765], ["Dict[str, Any]", 0.1023277984126176], ["Dict[int, int]", 0.09080961634049001], ["dict", 0.0907865051969819], ["str", 0.08810922939553283], ["Dict[str, int]", 0.08782874108798978]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[564, 4], [617, 40]], "fn_var_ln": {"ca_certs": [[568, 8], [568, 16]], "cert_file": [[610, 28], [610, 37]], "dir_contents": [[605, 16], [605, 28]], "full_path": [[607, 20], [607, 29]], "paths_checked": [[569, 8], [569, 21]], "system": [[571, 8], [571, 14]], "tmp_fd": [[592, 8], [592, 14]], "tmp_path": [[592, 16], [592, 24]]}, "fn_var_occur": {"ca_certs": [["ca_certs", "append"]], "cert_file": [["cert_file", "open", "full_path"], ["os", "write", "tmp_fd", "cert_file", "read"], ["cert_file", "close"]], "dir_contents": [["dir_contents", "os", "listdir", "path"]], "full_path": [["full_path", "os", "path", "join", "path", "f"], ["os", "path", "isfile", "full_path", "os", "path", "splitext", "f"], ["cert_file", "open", "full_path"]], "paths_checked": [["paths_checked", "append"], ["paths_checked", "append"], ["paths_checked", "append"], ["paths_checked", "append"], ["paths_checked", "append"], ["paths_checked", "append"], ["paths_checked", "append"], ["paths_checked", "append"], ["paths_checked", "append"], ["tmp_path", "paths_checked"]], "system": [["system", "platform", "system"]], "tmp_fd": [["tmp_fd", "tmp_path", "tempfile", "mkstemp"], ["os", "write", "tmp_fd", "DUMMY_CA_CERT"], ["os", "write", "tmp_fd", "cert_file", "read"], ["os", "write", "tmp_fd", "b"]], "tmp_path": [["tmp_fd", "tmp_path", "tempfile", "mkstemp"], ["tmp_path", "paths_checked"]]}, "name": "get_ca_certs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SSLValidationHandler.get_ca_certs", "ret_exprs": ["return (tmp_path, paths_checked)"], "ret_type": "", "ret_type_p": [["str", 0.6134493391485782], ["int", 0.09635318311038288]], "variables": {"ca_certs": "", "cert_file": "", "dir_contents": "", "full_path": "", "paths_checked": "", "system": "", "tmp_fd": "", "tmp_path": ""}, "variables_p": {"ca_certs": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "cert_file": [["str", 0.41665037014603157], ["Optional[str]", 0.1124973708236228]], "dir_contents": [["str", 0.9015507566902374]], "full_path": [["str", 1.0000000000000004]], "paths_checked": [["list", 0.5522528246837947], ["List[str]", 0.26148527297117663], ["Dict[str, Union[Any, Any]]", 0.10450970618070787], ["str", 0.08175219616432089]], "system": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "tmp_fd": [["str", 0.8523102023537714], ["List[List[str]]", 0.1476897976462288]], "tmp_path": [["str", 0.5833586853622039]]}}, {"docstring": {"func": "make sure we get back a valid code from the proxy", "long_descr": null, "ret": null}, "fn_lc": [[619, 4], [628, 58]], "fn_var_ln": {"http_version": [[624, 13], [624, 25]], "msg": [[624, 38], [624, 41]], "resp_code": [[624, 27], [624, 36]]}, "fn_var_occur": {"http_version": [["http_version", "resp_code", "msg", "re", "match", "response", "groups"]], "msg": [["http_version", "resp_code", "msg", "re", "match", "response", "groups"]], "resp_code": [["http_version", "resp_code", "msg", "re", "match", "response", "groups"], ["int", "resp_code", "valid_codes"]]}, "name": "validate_proxy_response", "params": {"response": "", "self": "", "valid_codes": ""}, "params_descr": {"response": "", "self": "", "valid_codes": ""}, "params_occur": {"response": [["http_version", "resp_code", "msg", "re", "match", "response", "groups"]], "self": [], "valid_codes": [["int", "resp_code", "valid_codes"]]}, "params_p": {"args": [], "kwargs": [], "response": [["requests.Response", 0.2696097720452594], ["str", 0.20880438547504654], ["dict", 0.08929779961054884], ["Dict[str, Any]", 0.08816968337229075], ["bool", 0.08816968337229075], ["requests.models.Response", 0.08695942784510408], ["Union[None, Dict[str, str]]", 0.08615563079677604]], "self": [], "valid_codes": [["Dict[str, str]", 0.19726127339155405], ["bool", 0.10155566084064545], ["Dict[str, int]", 0.09549518687519233], ["dict", 0.08887871488589263]]}, "q_name": "SSLValidationHandler.validate_proxy_response", "ret_exprs": [], "ret_type": "", "variables": {"http_version": "", "msg": "", "resp_code": ""}, "variables_p": {"http_version": [["Dict[str, str]", 0.17235156378507144], ["Dict[str, List[str]]", 0.10914251962753055], ["OrderedDict[str, str]", 0.10234325404015597], ["Dict[Any, str]", 0.0941137483375162], ["Dict[str, Tuple[Any, str]]", 0.08969583505767764], ["str", 0.07634943965601458], ["Type[bytes]", 0.0725040535667816]], "msg": [["str", 0.3261257170810046], ["Dict[str, Dict[str, str]]", 0.11417853096738166], ["dict", 0.1103440440677397], ["Dict[str, Union[None, int, str]]", 0.09127852409149824], ["Dict[str, str]", 0.08981931557656991], ["Dict[str, Any]", 0.0811972214958049], ["Optional[str]", 0.08085220152719218]], "resp_code": [["str", 0.5919793362535638], ["Optional[str]", 0.20512769699930988], ["Dict[str, Dict[str, str]]", 0.1039120576802087], ["requests.models.Response", 0.09898090906691762]]}}, {"docstring": {"func": "Detect if the 'no_proxy' environment variable is set and honor those locations.", "long_descr": null, "ret": null}, "fn_lc": [[630, 4], [644, 19]], "fn_var_ln": {"env_no_proxy": [[636, 12], [636, 24]], "netloc": [[637, 12], [637, 18]]}, "fn_var_occur": {"env_no_proxy": [["env_no_proxy", "os", "environ", "get"], ["env_no_proxy", "env_no_proxy", "split"]], "netloc": [["netloc", "urlparse", "url", "netloc"], ["netloc", "endswith", "host", "netloc", "split", "endswith", "host"]]}, "name": "detect_no_proxy", "params": {"self": "", "url": ""}, "params_descr": {"self": "", "url": ""}, "params_occur": {"self": [], "url": [["netloc", "urlparse", "url", "netloc"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "url": [["str", 0.8626575919168659]]}, "q_name": "SSLValidationHandler.detect_no_proxy", "ret_exprs": ["return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"env_no_proxy": "", "netloc": ""}, "variables_p": {"env_no_proxy": [["str", 1.0000000000000002]], "netloc": [["List[Dict[str, Any]]", 0.11296771722294095], ["str", 0.1121150834739879], ["List[str]", 0.10905193674991134], ["Dict[str, str]", 0.09948663802615926], ["Optional[Literal]", 0.08105191261441701], ["List[float]", 0.07884167967750584]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[646, 4], [649, 22]], "fn_var_ln": {"context": [[647, 8], [647, 15]]}, "fn_var_occur": {"context": [["context", "create_default_context"], ["context", "load_verify_locations", "tmp_ca_cert_path"]]}, "name": "_make_context", "params": {"self": "", "tmp_ca_cert_path": ""}, "params_descr": {"self": "", "tmp_ca_cert_path": ""}, "params_occur": {"self": [], "tmp_ca_cert_path": [["context", "load_verify_locations", "tmp_ca_cert_path"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_ca_cert_path": [["str", 0.4702746312628546], ["Dict[str, Any]", 0.22887242458806437]]}, "q_name": "SSLValidationHandler._make_context", "ret_exprs": ["return context"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"context": ""}, "variables_p": {"context": [["str", 0.612936746068028], ["int", 0.09259085459119581]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[651, 4], [722, 18]], "fn_var_ln": {"connect_result": [[677, 20], [677, 34]], "context": [[656, 12], [656, 19]], "credentials": [[674, 24], [674, 35]], "e": [[706, 12], [706, 13]], "https_proxy": [[653, 8], [653, 19]], "paths_checked": [[652, 26], [652, 39]], "port": [[669, 16], [669, 20]], "proxy_parts": [[668, 16], [668, 27]], "s": [[666, 12], [666, 13]], "ssl_s": [[700, 20], [700, 25]], "tmp_ca_cert_path": [[652, 8], [652, 24]], "use_proxy": [[659, 8], [659, 17]]}, "fn_var_occur": {"connect_result": [["connect_result", "b"], ["connect_result", "find", "b"], ["connect_result", "s", "recv"], ["len", "connect_result"], ["self", "validate_proxy_response", "connect_result"]], "context": [["context", "None"], ["context", "self", "_make_context", "tmp_ca_cert_path"], ["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"], ["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"]], "credentials": [["credentials", "proxy_parts", "get", "proxy_parts", "get"], ["s", "sendall", "b", "base64", "b64encode", "to_bytes", "credentials", "errors", "strip"]], "e": [["e", "get_exception"], ["str", "e", "lower"]], "https_proxy": [["https_proxy", "os", "environ", "get"], ["proxy_parts", "generic_urlparse", "urlparse", "https_proxy"]], "paths_checked": [["tmp_ca_cert_path", "paths_checked", "self", "get_ca_certs"], ["build_ssl_validation_error", "self", "hostname", "self", "port", "paths_checked"], ["build_ssl_validation_error", "self", "hostname", "self", "port", "paths_checked"]], "port": [["port", "proxy_parts", "get"], ["s", "connect", "proxy_parts", "get", "port"], ["s", "sendall", "self", "CONNECT_COMMAND", "self", "hostname", "self", "port"], ["s", "connect", "self", "hostname", "self", "port"], ["ConnectionError", "self", "hostname", "self", "port"], ["build_ssl_validation_error", "self", "hostname", "self", "port", "paths_checked"], ["build_ssl_validation_error", "self", "hostname", "self", "port", "paths_checked"]], "proxy_parts": [["proxy_parts", "generic_urlparse", "urlparse", "https_proxy"], ["port", "proxy_parts", "get"], ["s", "connect", "proxy_parts", "get", "port"], ["proxy_parts", "get"], ["proxy_parts", "get"], ["credentials", "proxy_parts", "get", "proxy_parts", "get"], ["ProxyError", "proxy_parts", "get"]], "s": [["s", "socket", "socket", "socket", "AF_INET", "socket", "SOCK_STREAM"], ["s", "connect", "proxy_parts", "get", "port"], ["s", "sendall", "self", "CONNECT_COMMAND", "self", "hostname", "self", "port"], ["s", "sendall", "b", "base64", "b64encode", "to_bytes", "credentials", "errors", "strip"], ["s", "sendall", "b"], ["connect_result", "s", "recv"], ["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"], ["s", "connect", "self", "hostname", "self", "port"], ["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"], ["s", "close"]], "ssl_s": [["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"], ["match_hostname", "ssl_s", "getpeercert", "self", "hostname"], ["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"], ["match_hostname", "ssl_s", "getpeercert", "self", "hostname"]], "tmp_ca_cert_path": [["tmp_ca_cert_path", "paths_checked", "self", "get_ca_certs"], ["context", "self", "_make_context", "tmp_ca_cert_path"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"], ["os", "remove", "tmp_ca_cert_path"]], "use_proxy": [["use_proxy", "self", "detect_no_proxy", "req", "get_full_url"]]}, "name": "http_request", "params": {"req": "", "self": ""}, "params_descr": {"req": "", "self": ""}, "params_occur": {"req": [["use_proxy", "self", "detect_no_proxy", "req", "get_full_url"]], "self": [["tmp_ca_cert_path", "paths_checked", "self", "get_ca_certs"], ["context", "self", "_make_context", "tmp_ca_cert_path"], ["use_proxy", "self", "detect_no_proxy", "req", "get_full_url"], ["s", "sendall", "self", "CONNECT_COMMAND", "self", "hostname", "self", "port"], ["self", "validate_proxy_response", "connect_result"], ["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["match_hostname", "ssl_s", "getpeercert", "self", "hostname"], ["s", "connect", "self", "hostname", "self", "port"], ["ssl_s", "context", "wrap_socket", "s", "server_hostname", "self", "hostname"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["match_hostname", "ssl_s", "getpeercert", "self", "hostname"], ["ConnectionError", "self", "hostname", "self", "port"], ["build_ssl_validation_error", "self", "hostname", "self", "port", "paths_checked"], ["build_ssl_validation_error", "self", "hostname", "self", "port", "paths_checked"]]}, "params_p": {"args": [], "kwargs": [], "req": [["int", 0.192885019931352], ["str", 0.09099611518100333], ["dict", 0.0874582363463072]], "self": []}, "q_name": "SSLValidationHandler.http_request", "ret_exprs": ["return req", "return req"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.19461093700462584], ["dict", 0.08562914950389815], ["List[Dict]", 0.08547879956143335], ["bool", 0.07314495629334272]], "variables": {"connect_result": "", "context": "", "credentials": "", "e": "", "https_proxy": "", "paths_checked": "", "port": "", "proxy_parts": "", "s": "", "ssl_s": "", "tmp_ca_cert_path": "", "use_proxy": ""}, "variables_p": {"connect_result": [["int", 0.2442702440852423], ["Set[int]", 0.10224781573356584], ["Dict[Any, set]", 0.09879474917859854], ["str", 0.09434519192129111], ["List[str]", 0.09049675868006561], ["list", 0.08581793095597443]], "context": [["Optional[object]", 0.17044297189573177]], "credentials": [["Dict[str, str]", 0.3181131724841974], ["dict", 0.1905455992750159], ["str", 0.1251020690945894], ["list", 0.10159602363950099], ["Dict[str, Any]", 0.08349339747209085]], "e": [["int", 0.4126100463389929], ["Tuple[float]", 0.09692983100279688]], "https_proxy": [["str", 0.9224323908785248], ["Optional[str]", 0.07756760912147517]], "paths_checked": [], "port": [["dict", 0.5753637542538339], ["Dict[str, str]", 0.11138227878134459], ["str", 0.10681981932527848], ["Dict[str, list]", 0.09379749567030042]], "proxy_parts": [["dict", 0.19393155939265522], ["str", 0.09595701346919215], ["Dict[str, int]", 0.09361182176118982]], "s": [], "ssl_s": [["int", 0.22527375641306932], ["bool", 0.10022355701477911]], "tmp_ca_cert_path": [["list", 0.2099898955143989], ["str", 0.20886333790724415], ["dict", 0.09213531213859746]], "use_proxy": [["bool", 0.39486693659725725], ["Dict[str, object]", 0.11036570468049486], ["str", 0.10239915391084403], ["float", 0.10239915391084403]]}}], "name": "SSLValidationHandler", "q_name": "SSLValidationHandler", "variables": {"CONNECT_COMMAND": "", "https_request": ""}, "variables_p": {"CONNECT_COMMAND": [["str", 0.6666666666088855], ["bool", 1.529944638380263e-10], ["List[str]", 8.667199063309247e-11], ["int", 8.667199063309247e-11]], "https_request": [["str", 0.39999999999999997], ["int", 0.3], ["Type[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]]}}], "funcs": [{"docstring": {"func": "Matching according to RFC 6125, section 6.4.3", "long_descr": "http://tools.ietf.org/html/rfc6125#section-6.4.3", "ret": null}, "fn_lc": [[206, 4], [256, 34]], "fn_var_ln": {"leftmost": [[218, 8], [218, 16]], "parts": [[217, 8], [217, 13]], "pat": [[255, 8], [255, 11]], "pats": [[211, 8], [211, 12]], "remainder": [[219, 8], [219, 17]], "wildcards": [[221, 8], [221, 17]]}, "fn_var_occur": {"leftmost": [["leftmost", "parts"], ["wildcards", "leftmost", "count"], ["leftmost", "startswith", "hostname", "startswith"], ["pats", "append", "re", "escape", "leftmost"], ["pats", "append", "re", "escape", "leftmost", "replace"]], "parts": [["parts", "dn", "split"], ["leftmost", "parts"], ["remainder", "parts"]], "pat": [["pat", "re", "compile", "join", "pats", "re", "IGNORECASE"], ["pat", "match", "hostname"]], "pats": [["pats", "append"], ["pats", "append", "re", "escape", "leftmost"], ["pats", "append", "re", "escape", "leftmost", "replace"], ["pats", "append", "re", "escape", "frag"], ["pat", "re", "compile", "join", "pats", "re", "IGNORECASE"]], "remainder": [["remainder", "parts"]], "wildcards": [["wildcards", "leftmost", "count"], ["wildcards", "max_wildcards"]]}, "name": "_dnsname_match", "params": {"dn": "", "hostname": "", "max_wildcards": ""}, "params_descr": {"dn": "", "hostname": "", "max_wildcards": ""}, "params_occur": {"dn": [["parts", "dn", "split"], ["CertificateError", "repr", "dn"], ["dn", "lower", "hostname", "lower"]], "hostname": [["dn", "lower", "hostname", "lower"], ["leftmost", "startswith", "hostname", "startswith"], ["pat", "match", "hostname"]], "max_wildcards": [["wildcards", "max_wildcards"]]}, "params_p": {"args": [], "dn": [["str", 0.7716179091480074]], "hostname": [["str", 1.0]], "kwargs": [], "max_wildcards": [["int", 0.570620654546423], ["float", 0.3436012425709588]]}, "q_name": "_dnsname_match", "ret_exprs": ["return False", "return dn.lower() == hostname.lower()", "return pat.match(hostname)"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {"leftmost": "", "parts": "", "pat": "", "pats": "", "remainder": "", "wildcards": ""}, "variables_p": {"leftmost": [["list", 0.6778060951949294], ["str", 0.21077206168429097], ["int", 0.11142184312077966]], "parts": [["str", 0.4021188552258323], ["Final", 0.19353122539560572], ["Pattern[str]", 0.16038934998130944], ["KeysView[str]", 0.08677088404477988], ["int", 0.08431890769075173], ["requests.models.Response", 0.07287077766172097]], "pat": [["str", 0.7854317477530521], ["Tuple[Literal, Literal, Literal]", 0.12102473021265346], ["List[str]", 0.09354352203429454]], "pats": [["list", 0.8135678627456], ["str", 0.09590494417935501]], "remainder": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "wildcards": [["int", 0.8168342355929533], ["Tuple[int, int, int, int]", 0.09163388785972466], ["DefaultDict[Any, int]", 0.09153187654732188]]}}, {"docstring": {"func": "Verify that *cert* (in decoded format as returned by", "long_descr": "SSLSocket.getpeercert()) matches the *hostname*.  RFC 2818 and RFC 6125\nrules are followed, but IP addresses are not accepted for *hostname*.\n\nCertificateError is raised on failure. On success, the function\nreturns nothing.", "ret": null}, "fn_lc": [[259, 4], [297, 51]], "fn_var_ln": {"dnsnames": [[269, 8], [269, 16]], "san": [[270, 8], [270, 11]]}, "fn_var_occur": {"dnsnames": [["dnsnames", "append", "value"], ["dnsnames", "append", "value"], ["len", "dnsnames"], ["CertificateError", "hostname", "join", "map", "repr", "dnsnames"], ["len", "dnsnames"], ["CertificateError", "hostname", "dnsnames"]], "san": [["san", "cert", "get"]]}, "name": "match_hostname", "params": {"cert": "", "hostname": ""}, "params_descr": {"cert": "", "hostname": ""}, "params_occur": {"cert": [["san", "cert", "get"], ["cert", "get"]], "hostname": [["_dnsname_match", "value", "hostname"], ["_dnsname_match", "value", "hostname"], ["CertificateError", "hostname", "join", "map", "repr", "dnsnames"], ["CertificateError", "hostname", "dnsnames"]]}, "params_p": {"args": [], "cert": [["str", 0.30119221749884173], ["Dict[str, Any]", 0.20349375068137499], ["dict", 0.19609167741534442], ["int", 0.12313109563583131]], "hostname": [["str", 0.31107533214445965], ["Dict[str, int]", 0.10537925246631111], ["int", 0.09039670762407988], ["Callable[[T], None]", 0.08817841949031249]], "kwargs": []}, "q_name": "ssl.match_hostname", "ret_exprs": ["return", "return"], "ret_type": "", "ret_type_p": [["Iterator[Dict[str, str]]", 0.10530645530214178]], "variables": {"dnsnames": "", "san": ""}, "variables_p": {"dnsnames": [["list", 0.9217718000513417], ["int", 0.0782281999486585]], "san": [["Dict[str, Any]", 0.38233335697579657], ["str", 0.20811937426277724], ["dict", 0.09558333924394914], ["List[List[Any]]", 0.09558333924394914]]}}, {"docstring": {"func": "Returns a dictionary of url parts as parsed by urlparse,", "long_descr": "but accounts for the fact that older versions of that\nlibrary do not support named attributes (ie. .netloc)", "ret": null}, "fn_lc": [[397, 0], [453, 24]], "fn_var_ln": {"auth": [[440, 16], [440, 20]], "generic_parts": [[403, 4], [403, 17]], "hostname": [[431, 12], [431, 20]], "match": [[429, 12], [429, 17]], "netloc_re": [[428, 12], [428, 21]], "password": [[443, 27], [443, 35]], "port": [[436, 16], [436, 20]], "username": [[443, 16], [443, 24]]}, "fn_var_occur": {"auth": [["auth", "match", "group"], ["auth", "auth"], ["username", "password", "auth", "split"]], "generic_parts": [["generic_parts", "dict"], ["generic_parts", "parts", "scheme"], ["generic_parts", "parts", "netloc"], ["generic_parts", "parts", "path"], ["generic_parts", "parts", "params"], ["generic_parts", "parts", "query"], ["generic_parts", "parts", "fragment"], ["generic_parts", "parts", "username"], ["generic_parts", "parts", "password"], ["generic_parts", "parts", "hostname"], ["generic_parts", "parts", "port"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "username"], ["generic_parts", "password"], ["generic_parts", "hostname"], ["generic_parts", "port"], ["generic_parts", "None"], ["generic_parts", "None"], ["generic_parts", "parts"], ["generic_parts", "None"]], "hostname": [["generic_parts", "parts", "hostname"], ["hostname", "match", "group"], ["generic_parts", "hostname"]], "match": [["match", "netloc_re", "match", "parts"], ["auth", "match", "group"], ["hostname", "match", "group"], ["port", "match", "group"]], "netloc_re": [["netloc_re", "re", "compile"], ["match", "netloc_re", "match", "parts"]], "password": [["generic_parts", "parts", "password"], ["username", "password", "auth", "split"], ["username", "password", "None"], ["generic_parts", "password"]], "port": [["generic_parts", "parts", "port"], ["port", "match", "group"], ["port", "int", "port"], ["generic_parts", "port"]], "username": [["generic_parts", "parts", "username"], ["username", "password", "auth", "split"], ["username", "password", "None"], ["generic_parts", "username"]]}, "name": "generic_urlparse", "params": {"parts": ""}, "params_descr": {"parts": ""}, "params_occur": {"parts": [["hasattr", "parts"], ["generic_parts", "parts", "scheme"], ["generic_parts", "parts", "netloc"], ["generic_parts", "parts", "path"], ["generic_parts", "parts", "params"], ["generic_parts", "parts", "query"], ["generic_parts", "parts", "fragment"], ["generic_parts", "parts", "username"], ["generic_parts", "parts", "password"], ["generic_parts", "parts", "hostname"], ["generic_parts", "parts", "port"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["generic_parts", "parts"], ["match", "netloc_re", "match", "parts"], ["generic_parts", "parts"]]}, "params_p": {"args": [], "kwargs": [], "parts": [["Dict[str, Any]", 0.11474081272442048], ["bool", 0.10093002826594202], ["list", 0.09237702509899794], ["str", 0.08600812216967182]]}, "q_name": "generic_urlparse", "ret_exprs": ["return generic_parts"], "ret_type": "", "ret_type_p": [["float", 0.22462280779495228], ["bool", 0.12260645975318285]], "variables": {"auth": "", "generic_parts": "", "hostname": "", "match": "", "netloc_re": "", "password": "", "port": "", "username": ""}, "variables_p": {"auth": [["int", 0.49195645997583215], ["str", 0.29824853456977274], ["Tuple[str, str]", 0.12209253308261916], ["List[Optional[str]]", 0.08770247237177581]], "generic_parts": [["dict", 0.49493761388443913], ["str", 0.24616413946218874], ["List[str]", 0.08427207019939731], ["Tuple[Any, Any]", 0.08091081517563899]], "hostname": [["Pattern[str]", 1.0000000000000002]], "match": [["Pattern[str]", 0.8986416551502441], ["Pattern[bytes]", 0.10135834484975594]], "netloc_re": [["str", 0.841264200249526], ["Pattern[str]", 0.15873579975047414]], "password": [["str", 0.27953515145200486], ["Type[List[Any]]", 0.21958957333030513], ["Tuple[Literal, Literal]", 0.08870351211344583], ["List[str]", 0.08799421752285713], ["list", 0.08691715524664946], ["Pattern[str]", 0.07705929307164686]], "port": [["Dict[str, Any]", 0.24489943859794383], ["str", 0.2411195442370745], ["List[str]", 0.11154578449055513], ["dict", 0.08409105959314647], ["Dict[str, frozenset[str]]", 0.08395286752731847]], "username": [["List[str]", 0.16832425872949508], ["str", 0.13558193133565397], ["int", 0.12398400636439266], ["Optional[str]", 0.10944090240764213], ["float", 0.10450206378744947], ["slice", 0.08801448545041683], ["Dict[str, Literal]", 0.08791554128638872]]}}, {"docstring": {"func": "This is a class factory that closes over the value of", "long_descr": "``follow_redirects`` so that the RedirectHandler class has access to\nthat value without having to use globals, and potentially cause problems\nwhere ``open_url`` or ``fetch_url`` are used multiple times in a module.", "ret": null}, "fn_lc": [[475, 0], [520, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "RedirectHandlerFactory", "params": {"follow_redirects": "", "validate_certs": ""}, "params_descr": {"follow_redirects": "", "validate_certs": ""}, "params_occur": {"follow_redirects": [], "validate_certs": []}, "params_p": {"args": [], "follow_redirects": [["str", 0.50569206859177], ["Dict[str, Any]", 0.10680812620655324], ["Sequence[str]", 0.10680812620655324], ["List[str]", 0.10680812620655324]], "kwargs": [], "validate_certs": [["str", 0.50569206859177], ["Dict[str, Any]", 0.10680812620655324], ["Sequence[str]", 0.10680812620655324], ["List[str]", 0.10680812620655324]]}, "q_name": "RedirectHandlerFactory", "ret_exprs": ["return RedirectHandler"], "ret_type": "", "ret_type_p": [["str", 0.5155615054996161], ["Dict[str, Any]", 0.10348986776729019], ["Callable", 0.09169055837469157]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Inteligently build out the SSLValidationError based on what support", "long_descr": "you have installed", "ret": null}, "fn_lc": [[523, 0], [547, 80]], "fn_var_ln": {"msg": [[528, 4], [528, 7]]}, "fn_var_occur": {"msg": [["msg", "append"], ["msg", "append"], ["msg", "append"], ["msg", "append"], ["SSLValidationError", "join", "msg", "hostname", "port", "join", "paths"]]}, "name": "build_ssl_validation_error", "params": {"hostname": "", "paths": "", "port": ""}, "params_descr": {"hostname": "", "paths": "", "port": ""}, "params_occur": {"hostname": [["SSLValidationError", "join", "msg", "hostname", "port", "join", "paths"]], "paths": [["SSLValidationError", "join", "msg", "hostname", "port", "join", "paths"]], "port": [["SSLValidationError", "join", "msg", "hostname", "port", "join", "paths"]]}, "params_p": {"args": [], "hostname": [["str", 0.6004972297872025]], "kwargs": [], "paths": [["str", 0.6004972297872025]], "port": [["str", 0.6004972297872025]]}, "q_name": "build_ssl_validation_error", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["list", 0.7790955146131131], ["List[str]", 0.07289249625635567], ["str", 0.07259863852822555]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[727, 0], [748, 51]], "fn_var_ln": {"hostname": [[744, 12], [744, 20]], "netloc": [[739, 12], [739, 18]], "parsed": [[730, 4], [730, 10]], "port": [[745, 12], [745, 16]]}, "fn_var_occur": {"hostname": [["hostname", "port", "netloc", "split"], ["hostname", "netloc"], ["SSLValidationHandler", "hostname", "port"]], "netloc": [["netloc", "parsed"], ["netloc", "netloc", "split"], ["hostname", "port", "netloc", "split"], ["hostname", "netloc"]], "parsed": [["parsed", "urlparse", "url"], ["parsed", "validate_certs"], ["netloc", "parsed"]], "port": [["hostname", "port", "netloc", "split"], ["port", "int", "port"], ["SSLValidationHandler", "hostname", "port"]]}, "name": "maybe_add_ssl_handler", "params": {"url": "", "validate_certs": ""}, "params_descr": {"url": "", "validate_certs": ""}, "params_occur": {"url": [["parsed", "urlparse", "url"]], "validate_certs": [["parsed", "validate_certs"]]}, "params_p": {"args": [], "kwargs": [], "url": [["str", 0.48327116174516405], ["bool", 0.11378947800913708]], "validate_certs": [["str", 0.9999999999999998]]}, "q_name": "maybe_add_ssl_handler", "ret_exprs": ["return SSLValidationHandler(hostname, port)"], "ret_type": "", "ret_type_p": [["float", 1.6766813052608882e-09], ["Callable[[T], bool]", 1.3197660552366632e-09]], "variables": {"hostname": "", "netloc": "", "parsed": "", "port": ""}, "variables_p": {"hostname": [["str", 0.6069002457571064], ["bytes", 0.10758466600582961], ["int", 0.0842567912331119]], "netloc": [["str", 0.9999999999999998]], "parsed": [["str", 0.7909748984211362], ["List[str]", 0.10986141794815707]], "port": [["int", 0.4999999999999999], ["str", 0.4999999999999999]]}}, {"docstring": {"func": "Sends a request via HTTP(S) or FTP using urllib2 (Python2) or urllib (Python3)", "long_descr": "Does not require the module environment", "ret": null}, "fn_lc": [[751, 0], [878, 12]], "fn_var_ln": {"_": [[816, 26], [816, 27]], "authhandler": [[800, 12], [800, 23]], "check_hostname": [[830, 8], [830, 30]], "context": [[826, 8], [826, 15]], "credentials": [[778, 12], [778, 23]], "handlers": [[760, 4], [760, 12]], "headers": [[772, 12], [772, 19]], "login": [[813, 16], [813, 21]], "netloc": [[778, 25], [778, 31]], "opener": [[841, 4], [841, 10]], "parsed": [[785, 12], [785, 18]], "passman": [[792, 12], [792, 19]], "password": [[816, 29], [816, 37]], "proxyhandler": [[821, 8], [821, 20]], "r": [[877, 4], [877, 5]], "rc": [[810, 16], [810, 18]], "request": [[849, 8], [849, 15]], "ssl_handler": [[761, 4], [761, 15]], "tstamp": [[859, 8], [859, 14]], "url": [[789, 12], [789, 15]], "urlopen_args": [[871, 4], [871, 16]], "username": [[816, 16], [816, 24]], "verify_mode": [[829, 8], [829, 27]]}, "fn_var_occur": {"_": [["username", "_", "password", "login"]], "authhandler": [["authhandler", "urllib_request", "HTTPBasicAuthHandler", "passman"], ["handlers", "append", "authhandler"]], "check_hostname": [["context", "check_hostname", "False"]], "context": [["context", "SSLContext", "ssl", "PROTOCOL_SSLv23"], ["context", "options", "ssl", "OP_NO_SSLv2"], ["context", "options", "ssl", "OP_NO_SSLv3"], ["context", "verify_mode", "ssl", "CERT_NONE"], ["context", "check_hostname", "False"], ["handlers", "append", "urllib_request", "HTTPSHandler", "context", "context"]], "credentials": [["credentials", "netloc", "parsed", "split"], ["username", "password", "credentials", "split"], ["username", "credentials"]], "handlers": [["handlers", "append", "ssl_handler"], ["handlers", "append", "authhandler"], ["handlers", "append", "proxyhandler"], ["handlers", "append", "urllib_request", "HTTPSHandler", "context", "context"], ["handlers", "append", "CustomHTTPSHandler"], ["handlers", "append", "RedirectHandlerFactory", "follow_redirects", "validate_certs"], ["opener", "urllib_request", "build_opener", "handlers"]], "headers": [["headers", "None"], ["headers", "basic_auth_header", "username", "password"], ["headers", "basic_auth_header", "username", "password"], ["isinstance", "headers", "dict"], ["request", "add_header", "header", "headers", "header"]], "login": [["login", "rc", "authenticators", "parsed"], ["login", "None"], ["username", "_", "password", "login"]], "netloc": [["netloc", "parsed"], ["credentials", "netloc", "parsed", "split"], ["parsed", "netloc"], ["passman", "add_password", "None", "netloc", "username", "password"]], "opener": [["opener", "urllib_request", "build_opener", "handlers"], ["urllib_request", "install_opener", "opener"]], "parsed": [["parsed", "urlparse", "url"], ["netloc", "parsed"], ["credentials", "netloc", "parsed", "split"], ["parsed", "list", "parsed"], ["parsed", "netloc"], ["url", "urlunparse", "parsed"], ["login", "rc", "authenticators", "parsed"]], "passman": [["passman", "urllib_request", "HTTPPasswordMgrWithDefaultRealm"], ["passman", "add_password", "None", "netloc", "username", "password"], ["authhandler", "urllib_request", "HTTPBasicAuthHandler", "passman"]], "password": [["password", "url_password"], ["username", "password", "credentials", "split"], ["passman", "add_password", "None", "netloc", "username", "password"], ["headers", "basic_auth_header", "username", "password"], ["username", "_", "password", "login"], ["username", "password"], ["headers", "basic_auth_header", "username", "password"]], "proxyhandler": [["proxyhandler", "urllib_request", "ProxyHandler"], ["handlers", "append", "proxyhandler"]], "r": [["r", "urllib_request", "urlopen", "urlopen_args"]], "rc": [["rc", "netrc", "netrc", "os", "environ", "get"], ["login", "rc", "authenticators", "parsed"]], "request": [["request", "RequestWithMethod", "url", "method", "upper", "data"], ["request", "urllib_request", "Request", "url", "data"], ["request", "add_header", "http_agent"], ["request", "add_header", "tstamp"], ["request", "add_header"], ["request", "add_header", "header", "headers", "header"], ["urlopen_args", "request", "None"]], "ssl_handler": [["ssl_handler", "maybe_add_ssl_handler", "url", "validate_certs"], ["handlers", "append", "ssl_handler"]], "tstamp": [["tstamp", "last_mod_time", "strftime"], ["request", "add_header", "tstamp"]], "url": [["ssl_handler", "maybe_add_ssl_handler", "url", "validate_certs"], ["parsed", "urlparse", "url"], ["url", "urlunparse", "parsed"], ["request", "RequestWithMethod", "url", "method", "upper", "data"], ["request", "urllib_request", "Request", "url", "data"]], "urlopen_args": [["urlopen_args", "request", "None"], ["urlopen_args", "append", "timeout"], ["r", "urllib_request", "urlopen", "urlopen_args"]], "username": [["username", "url_username"], ["username", "password", "credentials", "split"], ["username", "credentials"], ["username", "force_basic_auth"], ["passman", "add_password", "None", "netloc", "username", "password"], ["username", "force_basic_auth"], ["headers", "basic_auth_header", "username", "password"], ["username", "_", "password", "login"], ["username", "password"], ["headers", "basic_auth_header", "username", "password"]], "verify_mode": [["context", "verify_mode", "ssl", "CERT_NONE"]]}, "name": "open_url", "params": {"data": "", "follow_redirects": "", "force": "", "force_basic_auth": "", "headers": "", "http_agent": "", "last_mod_time": "", "method": "", "timeout": "", "url": "", "url_password": "", "url_username": "", "use_proxy": "", "validate_certs": ""}, "params_descr": {"data": "", "follow_redirects": "", "force": "", "force_basic_auth": "", "headers": "", "http_agent": "", "last_mod_time": "", "method": "", "timeout": "", "url": "", "url_password": "", "url_username": "", "use_proxy": "", "validate_certs": ""}, "params_occur": {"data": [["request", "RequestWithMethod", "url", "method", "upper", "data"], ["request", "urllib_request", "Request", "url", "data"]], "follow_redirects": [["handlers", "append", "RedirectHandlerFactory", "follow_redirects", "validate_certs"]], "force": [["last_mod_time", "force"]], "force_basic_auth": [["username", "force_basic_auth"], ["username", "force_basic_auth"]], "headers": [["headers", "None"], ["headers", "basic_auth_header", "username", "password"], ["headers", "basic_auth_header", "username", "password"], ["isinstance", "headers", "dict"], ["request", "add_header", "header", "headers", "header"]], "http_agent": [["request", "add_header", "http_agent"]], "last_mod_time": [["last_mod_time", "force"], ["tstamp", "last_mod_time", "strftime"]], "method": [["method", "upper"], ["ConnectionError", "method", "upper"], ["request", "RequestWithMethod", "url", "method", "upper", "data"]], "timeout": [["urlopen_args", "append", "timeout"]], "url": [["ssl_handler", "maybe_add_ssl_handler", "url", "validate_certs"], ["parsed", "urlparse", "url"], ["url", "urlunparse", "parsed"], ["request", "RequestWithMethod", "url", "method", "upper", "data"], ["request", "urllib_request", "Request", "url", "data"]], "url_password": [["password", "url_password"]], "url_username": [["username", "url_username"]], "use_proxy": [], "validate_certs": [["ssl_handler", "maybe_add_ssl_handler", "url", "validate_certs"], ["HAS_SSLCONTEXT", "validate_certs"], ["handlers", "append", "RedirectHandlerFactory", "follow_redirects", "validate_certs"]]}, "params_p": {"args": [], "data": [["str", 0.4225650479174768], ["Optional[Dict[str, str]]", 0.18309222302528394], ["Dict[str, object]", 0.09840769967493307], ["Optional[float]", 0.09240799224192939], ["Optional[Mapping[str, str]]", 0.07802247589508231]], "follow_redirects": [["str", 0.2810630534972313], ["dict", 0.1931078334513565], ["Dict[str, str]", 0.12350490810768952], ["List[Dict[str, Any]]", 0.10639976795493201], ["List[int]", 0.10328067643041211], ["List[List[Any]]", 0.10130223124585065], ["List[str]", 0.09134152931252792]], "force": [["str", 0.3110028858417384], ["Optional[int]", 0.20664754279335087], ["int", 0.11919565764748512], ["float", 0.07745642687221176]], "force_basic_auth": [["bool", 0.3099427738706373], ["str", 0.19692526090157303], ["float", 0.19614482421887153], ["int", 0.10129483195198194], ["Optional[str]", 0.10067897555114787], ["List[str]", 0.09501333350578833]], "headers": [["Optional[Dict[str, Any]]", 0.15012852285273998], ["dict", 0.09561825814075597], ["Dict[str, Any]", 0.0946396928917428]], "http_agent": [["str", 0.19561233981904633], ["Optional[List[str]]", 0.12616475526733995], ["Optional[Callable[..., Any]]", 0.0998483348751783], ["Optional[str]", 0.09949542069363516], ["bool", 0.09949542069363516]], "kwargs": [], "last_mod_time": [["str", 0.2872368138668542], ["Optional[int]", 0.20536919170384654], ["int", 0.11350317178724167], ["bool", 0.08601367020520302]], "method": [["str", 0.3139906013717123], ["dict", 0.1526562741196949], ["Optional[Mapping[str, str]]", 0.08060295136954214], ["Dict[str, Any]", 0.07514397286274506]], "timeout": [["str", 0.7255583578652097], ["list", 0.18142334126719772]], "url": [["str", 0.5079187446675797], ["dict", 0.2328217997419189], ["int", 0.09682364987228582], ["Dict[str, str]", 0.08435549499128507], ["Optional[str]", 0.0780803107269305]], "url_password": [["bool", 0.3099427738706373], ["str", 0.19692526090157303], ["float", 0.19614482421887153], ["int", 0.10129483195198194], ["Optional[str]", 0.10067897555114787], ["List[str]", 0.09501333350578833]], "url_username": [["bool", 0.3099427738706373], ["str", 0.19692526090157303], ["float", 0.19614482421887153], ["int", 0.10129483195198194], ["Optional[str]", 0.10067897555114787], ["List[str]", 0.09501333350578833]], "use_proxy": [["str", 0.5731628918728577], ["Dict[str, str]", 0.1836910800728124]], "validate_certs": [["str", 0.2941947801238741], ["bool", 0.10213411569907341], ["Dict[int, Tuple[int, int]]", 0.09568264081275869], ["dict", 0.08923052868434672], ["Sequence[str]", 0.0853214959757085]]}, "q_name": "open_url", "ret_exprs": ["return r"], "ret_type": "", "ret_type_p": [["bool", 0.21494887374755717], ["Set[str]", 0.20252556256008322], ["List[str]", 0.18829699091339636], ["str", 0.1138764328140304], ["MutableMapping[str, int]", 0.09546655175713079], ["List[Mapping[str, Any]]", 0.0944785040948125], ["Dict[str, Set[str]]", 0.09040708411298949]], "variables": {"_": "", "authhandler": "", "check_hostname": "", "context": "", "credentials": "", "handlers": "", "headers": "", "login": "", "netloc": "", "opener": "", "parsed": "", "passman": "", "password": "", "proxyhandler": "", "r": "", "rc": "", "request": "", "ssl_handler": "", "tstamp": "", "url": "", "urlopen_args": "", "username": "", "verify_mode": ""}, "variables_p": {"_": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["List[str]", 0.09999999999999999], ["Union[bytes, int]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Tuple[int, int]", 0.09999999999999999]], "authhandler": [["bool", 0.39303983100042816], ["int", 0.2128544687265712], ["Dict[str, float]", 0.1112869623701786]], "check_hostname": [["str", 0.31481230425898044], ["list", 0.23023894813039206], ["Optional[str]", 0.1900468526804538], ["List[str]", 0.16987846858994685]], "context": [["Type[ctypes.pointer[Any]]", 0.18235518592738692]], "credentials": [["str", 0.9165982692832328], ["Dict[str, Dict[str, Any]]", 0.08340173071676699]], "handlers": [["str", 0.4861650931569882], ["list", 0.3078091529338129], ["List[str]", 0.20602575390919886]], "headers": [["dict", 0.08714720219931615]], "login": [["str", 0.21145618645381198], ["Type[str]", 0.20080134386588389], ["List[str]", 0.12342312721628854], ["int", 0.12102158483510181], ["Tuple[Hashable]", 0.10172004906474162], ["Set[str]", 0.0831882799020471], ["Optional[str]", 0.07299655020969689]], "netloc": [["str", 0.9042119659688589]], "opener": [["Dict[str, Union[Any, Any, Any, Any]]", 0.1524829185399402], ["requests.Response", 0.14305949731158532], ["bytes", 0.10030061878346734], ["str", 0.08235562578168833], ["Dict[str, str]", 0.07514499123107796], ["Optional[Dict[str, Any]]", 0.06807260467472781]], "parsed": [["list", 0.20877963802205596], ["int", 0.1340681740982496], ["dict", 0.09428678076917583], ["List[str]", 0.09341710747810514], ["Optional[IO[bytes]]", 0.09236490664866988], ["str", 0.09083259120256196]], "passman": [["str", 0.2271316512103463], ["bytes", 0.0797818346847259]], "password": [["str", 0.08662238281116202]], "proxyhandler": [["dict", 0.5345518175523534], ["urllib.requesProxyHandler", 0.13743943008094467]], "r": [["float", 0.2531310768389614], ["int", 0.19277680648225587]], "rc": [["str", 0.8582853816096181], ["dict", 0.14171461839038207]], "request": [["urllib.requesRequest", 0.30177344657778293], ["requests.models.Request", 0.16875583930105087], ["requests.models.Response", 0.08727556841160475], ["requests.sessions.Session", 0.08355356622880725]], "ssl_handler": [["dict", 0.6766612525400327], ["Dict[Any, list]", 0.08343893153961632], ["Dict[str, Any]", 0.08168928680676442], ["Dict[int, object]", 0.07943314595260327]], "tstamp": [["int", 0.1397688605707678], ["Tuple[Any, Any]", 0.09738779165776974], ["Pattern[str]", 0.0882500943845458], ["Dict[str, str]", 0.08799834869994083]], "url": [["str", 0.21290005740678522], ["int", 0.10993814944246315], ["Optional[str]", 0.10958598266903342], ["Dict[str, Union[float, str]]", 0.09365913060805366]], "urlopen_args": [["list", 0.51060332748506], ["set", 0.13307188403764783], ["Dict[str, Union[Any, int]]", 0.09467447030659301], ["Dict[str, Literal[True]]", 0.0886703550895267], ["DefaultDict[Any, List[Any]]", 0.08624399632166162]], "username": [["List[str]", 0.09972241412034905], ["Union[Literal, Literal]", 0.09972241412034905], ["TextIO", 0.09078069628389544]], "verify_mode": [["bool", 0.9999999998644213], ["str", 1.2172917803979181e-10], ["int", 1.3849499392645256e-11]]}}, {"docstring": {"func": "Takes a username and password and returns a byte string suitable for", "long_descr": "using as value of an Authorization header to do basic auth.", "ret": null}, "fn_lc": [[885, 0], [889, 115]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "basic_auth_header", "params": {"password": "", "username": ""}, "params_descr": {"password": "", "username": ""}, "params_occur": {"password": [["b", "base64", "b64encode", "to_bytes", "username", "password", "errors"]], "username": [["b", "base64", "b64encode", "to_bytes", "username", "password", "errors"]]}, "params_p": {"args": [], "kwargs": [], "password": [["str", 0.7689938292469938], ["bytes", 0.13569954161377012], ["int", 0.09530662913923586]], "username": [["str", 0.7689938292469938], ["bytes", 0.13569954161377012], ["int", 0.09530662913923586]]}, "q_name": "basic_auth_header", "ret_exprs": ["return b(\"Basic %s\") % base64.b64encode(to_bytes(\"%s:%s\" % (username, password), errors='surrogate_or_strict'))"], "ret_type": "", "ret_type_p": [["bytes", 0.5301679895795649], ["str", 0.2244085669090031], ["int", 0.08251559219580956]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates an argument spec that can be used with any module", "long_descr": "that will be requesting content via urllib/urllib2", "ret": null}, "fn_lc": [[892, 0], [907, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "url_argument_spec", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "url_argument_spec", "ret_exprs": ["return dict( url=dict(), force=dict(default='no', aliases=['thirsty'], type='bool'), http_agent=dict(default='ansible-httpget'), use_proxy=dict(default='yes', type='bool'), validate_certs=dict(default='yes', type='bool'), url_username=dict(required=False), url_password=dict(required=False), force_basic_auth=dict(required=False, type='bool', default='no'),)"], "ret_type": "", "ret_type_p": [["int", 0.19941217764393157], ["Dict[str, Any]", 0.18577894017668886], ["Dict[str, str]", 0.11352128123138758], ["Dict[str, Dict[str, Any]]", 0.09288947008834443]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Sends a request via HTTP(S) or FTP (needs the module as parameter)", "long_descr": null, "ret": "A tuple of (**response**, **info**). Use ``response.body()`` to read the data.\nThe **info** contains the 'status' and other meta data. When a HttpError (status > 400)\n    occurred then ``info['body']`` contains the error response data::\n\nExample::\n\n    data={...}\n    resp, info = fetch_url(\"http://example.com\",\n                           data=module.jsonify(data)\n                           header={Content-type': 'application/json'},\n                           method=\"POST\")\n    status_code = info[\"status\"]\n    body = resp.read()\n    if status_code >= 400 :\n        body = info['body']"}, "fn_lc": [[910, 0], [994, 18]], "fn_var_ln": {"body": [[980, 12], [980, 16]], "code": [[985, 8], [985, 12]], "distribution": [[967, 8], [967, 20]], "e": [[991, 8], [991, 9]], "follow_redirects": [[953, 4], [953, 20]], "force_basic_auth": [[951, 4], [951, 20]], "http_agent": [[950, 4], [950, 14]], "info": [[956, 4], [956, 8]], "password": [[949, 4], [949, 12]], "r": [[958, 8], [958, 9]], "username": [[948, 4], [948, 12]], "validate_certs": [[946, 4], [946, 18]]}, "fn_var_occur": {"body": [["body", "e", "read"], ["info", "update", "dict", "msg", "str", "e", "body", "body", "e", "info"]], "code": [["info", "update", "dict", "msg", "r", "headers", "get", "url", "r", "geturl", "status", "r", "code"], ["info", "e", "code"], ["code", "int", "getattr", "e"], ["info", "update", "dict", "msg", "str", "e", "status", "code"]], "distribution": [["distribution", "get_distribution"], ["distribution", "None", "distribution", "lower"]], "e": [["e", "get_exception"], ["module", "fail_json", "msg", "str", "e"], ["module", "fail_json", "msg", "str", "e"], ["e", "get_exception"], ["module", "fail_json", "msg", "str", "e"], ["e", "get_exception"], ["body", "e", "read"], ["info", "update", "dict", "msg", "str", "e", "body", "body", "e", "info"], ["info", "e", "code"], ["e", "get_exception"], ["code", "int", "getattr", "e"], ["info", "update", "dict", "msg", "str", "e", "status", "code"], ["e", "get_exception"], ["info", "update", "dict", "msg", "str", "e", "status"], ["e", "get_exception"], ["info", "update", "dict", "msg", "str", "e", "status"]], "follow_redirects": [["follow_redirects", "module", "params", "get"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "force_basic_auth": [["force_basic_auth", "module", "params", "get"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "http_agent": [["http_agent", "module", "params", "get", "None"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "info": [["info", "dict", "url", "url"], ["info", "update", "r", "info"], ["info", "update", "dict", "msg", "r", "headers", "get", "url", "r", "geturl", "status", "r", "code"], ["info", "update", "dict", "msg", "str", "e", "body", "body", "e", "info"], ["info", "e", "code"], ["info", "update", "dict", "msg", "str", "e", "status", "code"], ["info", "update", "dict", "msg", "str", "e", "status"], ["info", "update", "dict", "msg", "str", "e", "status"], ["r", "info"]], "password": [["password", "module", "params", "get"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "r": [["r", "None"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"], ["info", "update", "r", "info"], ["info", "update", "dict", "msg", "r", "headers", "get", "url", "r", "geturl", "status", "r", "code"], ["r", "info"]], "username": [["username", "module", "params", "get"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "validate_certs": [["validate_certs", "module", "params", "get", "True"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]]}, "name": "fetch_url", "params": {"data": "", "force": "", "headers": "", "last_mod_time": "", "method": "", "module": "", "timeout": "", "url": "", "use_proxy": ""}, "params_descr": {"data": "", "force": "", "headers": "", "last_mod_time": "", "method": "", "module": "The AnsibleModule (used to get username, password etc. (s.b.).", "timeout": "", "url": "The url to use.", "use_proxy": ""}, "params_occur": {"data": [["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "force": [["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "headers": [["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"], ["info", "update", "dict", "msg", "r", "headers", "get", "url", "r", "geturl", "status", "r", "code"]], "last_mod_time": [["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "method": [["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "module": [["module", "fail_json", "msg"], ["validate_certs", "module", "params", "get", "True"], ["username", "module", "params", "get"], ["password", "module", "params", "get"], ["http_agent", "module", "params", "get", "None"], ["force_basic_auth", "module", "params", "get"], ["follow_redirects", "module", "params", "get"], ["module", "fail_json", "msg", "str", "e"], ["module", "fail_json", "msg", "str", "e"], ["module", "fail_json", "msg", "str", "e"]], "timeout": [["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]], "url": [["info", "dict", "url", "url"], ["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"], ["info", "update", "dict", "msg", "r", "headers", "get", "url", "r", "geturl", "status", "r", "code"]], "use_proxy": [["r", "open_url", "url", "data", "data", "headers", "headers", "method", "method", "use_proxy", "use_proxy", "force", "force", "last_mod_time", "last_mod_time", "timeout", "timeout", "validate_certs", "validate_certs", "url_username", "username", "url_password", "password", "http_agent", "http_agent", "force_basic_auth", "force_basic_auth", "follow_redirects", "follow_redirects"]]}, "params_p": {"args": [], "data": [["dict", 0.38848757125369104], ["Optional[Dict]", 0.11772125319427772], ["Mapping[str, str]", 0.10223841668316946], ["Optional[str]", 0.0992321140246728], ["bool", 0.08867260010651115]], "force": [["dict", 0.38848757125369104], ["Optional[Dict]", 0.11772125319427772], ["Mapping[str, str]", 0.10223841668316946], ["Optional[str]", 0.0992321140246728], ["bool", 0.08867260010651115]], "headers": [["dict", 0.38848757125369104], ["Optional[Dict]", 0.11772125319427772], ["Mapping[str, str]", 0.10223841668316946], ["Optional[str]", 0.0992321140246728], ["bool", 0.08867260010651115]], "kwargs": [], "last_mod_time": [["dict", 0.38848757125369104], ["Optional[Dict]", 0.11772125319427772], ["Mapping[str, str]", 0.10223841668316946], ["Optional[str]", 0.0992321140246728], ["bool", 0.08867260010651115]], "method": [["dict", 0.38848757125369104], ["Optional[Dict]", 0.11772125319427772], ["Mapping[str, str]", 0.10223841668316946], ["Optional[str]", 0.0992321140246728], ["bool", 0.08867260010651115]], "module": [["str", 0.32855984300476915], ["dict", 0.18001207212127238], ["Optional[str]", 0.11766696212342036], ["Dict[str, Any]", 0.08818449599034499]], "timeout": [["dict", 0.38848757125369104], ["Optional[Dict]", 0.11772125319427772], ["Mapping[str, str]", 0.10223841668316946], ["Optional[str]", 0.0992321140246728], ["bool", 0.08867260010651115]], "url": [["str", 0.27515945727134716], ["Dict[str, Any]", 0.13657473309844237], ["Optional[str]", 0.1008940678019315], ["bool", 0.0999519252695555]], "use_proxy": [["dict", 0.38848757125369104], ["Optional[Dict]", 0.11772125319427772], ["Mapping[str, str]", 0.10223841668316946], ["Optional[str]", 0.0992321140246728], ["bool", 0.08867260010651115]]}, "q_name": "fetch_url", "ret_exprs": ["return r, info"], "ret_type": "", "ret_type_p": [["dict", 0.2360185634800541], ["bytes", 0.11229920302144715], ["ctypes.POINTER", 0.09407205481690717]], "variables": {"body": "", "code": "", "distribution": "", "e": "", "follow_redirects": "", "force_basic_auth": "", "http_agent": "", "info": "", "password": "", "r": "", "username": "", "validate_certs": ""}, "variables_p": {"body": [["str", 0.7257098801950925], ["list", 0.09285080610065802], ["Dict[str, str]", 0.09279355226963801]], "code": [["Dict[str, Any]", 0.46897541247086855], ["Dict[str, Dict[str, Any]]", 0.14426842111854596], ["Dict[str, str]", 0.13772291342732884], ["Dict[str, Union[Any, Any]]", 0.08540027258121863], ["bytes", 0.08411444187844261], ["str", 0.0795185385235955]], "distribution": [["Dict[str, str]", 0.1874909449201111], ["Optional[\"Lecture\"]", 0.10857175331033363], ["List[str]", 0.09960369631622112], ["Optional[int]", 0.09793100090556593], ["str", 0.09793100090556593]], "e": [["Type[bool]", 0.11243620488377672]], "follow_redirects": [["Dict[str, List[str]]", 0.13877633871084502], ["dict", 0.1158300456198867], ["Dict[Any, int]", 0.0967440900952056], ["int", 0.09648182898162588], ["str", 0.09648182898162588], ["Dict[str, str]", 0.09462566838435843]], "force_basic_auth": [["Dict[str, str]", 0.29818478775701135], ["Tuple[Literal, Literal]", 0.1832917024488431], ["Dict[str, int]", 0.1302706347216534], ["OrderedDict[str, str]", 0.12343872127772974], ["dict", 0.09040217422932431], ["str", 0.0881562911514832], ["int", 0.0862556884139549]], "http_agent": [["dict", 0.16412093615131268], ["Dict[str, list]", 0.13576630906450002], ["Dict[str, Tuple[str, str]]", 0.11226882421912653], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, str]]", 0.10177581905272687], ["Dict[str, List[str]]", 0.09923752721419823], ["str", 0.09599214808240539]], "info": [["Dict[str, Any]", 0.2885165329820164], ["Dict[str, Dict[str, Any]]", 0.2509068723309947], ["Dict[str, Union[Any, Any]]", 0.17374197152423762], ["dict", 0.11322120124013269], ["Dict[Any, Union[int, str]]", 0.08944985853347415], ["Dict[str, Dict[str, bool]]", 0.08416356338914464]], "password": [["Dict[Tuple[str, str], Tuple[str, str]]", 0.18947176951086778], ["requests.models.Response", 0.18590577734030916], ["Dict[str, bool]", 0.12948011529441258], ["Set[str]", 0.1086074969062665], ["Dict[str, str]", 0.10760106604556391], ["Dict[Any, str]", 0.09434992616314618]], "r": [["dict", 0.0750831652510956], ["list", 0.06574471541978963], ["int", 0.06219970987048991]], "username": [["Dict[Any, Tuple[str, str]]", 0.7867340151314697], ["Dict[str, str]", 0.11437438973353546]], "validate_certs": [["str", 0.21001498496126939], ["dict", 0.18648875048910624], ["int", 0.11926019256298288], ["Dict[str, Union[Any, Any, Any, Any]]", 0.11803533642299019], ["Dict[Any, int]", 0.09593287982962383], ["set", 0.08604799641214982]]}}], "imports": ["netrc", "os", "re", "sys", "socket", "platform", "tempfile", "base64", "httplib", "http.client", "httplib", "ansible.module_utils.six.moves.urllib.request", "urllib_request", "ansible.module_utils.six.moves.urllib.error", "urllib_error", "ansible", "module_utils", "basic", "get_distribution", "get_exception", "ansible", "module_utils", "six", "b", "ansible", "module_utils", "_text", "to_bytes", "urllib.request", "urllib_request", "urllib", "request", "AbstractHTTPHandler", "urllib2", "urllib_request", "urllib2", "AbstractHTTPHandler", "ansible", "module_utils", "six", "moves", "urllib", "parse", "urlparse", "urlunparse", "ssl", "ssl", "create_default_context", "SSLContext", "urllib3", "contrib", "pyopenssl", "ssl_wrap_socket", "requests", "packages", "urllib3", "contrib", "pyopenssl", "ssl_wrap_socket", "ctypes", "ctypes.util", "ssl", "match_hostname", "CertificateError", "backports", "ssl_match_hostname", "match_hostname", "CertificateError"], "mod_var_ln": {"CustomHTTPSConnection": [[355, 0], [355, 21]], "CustomHTTPSHandler": [[355, 24], [355, 42]], "DUMMY_CA_CERT": [[310, 0], [310, 13]], "HAS_MATCH_HOSTNAME": [[303, 4], [303, 22]], "HAS_SSL": [[139, 4], [139, 11]], "HAS_SSLCONTEXT": [[146, 4], [146, 18]], "HAS_URLLIB3_SNI_SUPPORT": [[155, 4], [155, 27]], "HAS_URLPARSE": [[133, 4], [133, 16]], "PROTOCOL": [[178, 16], [178, 24]], "libssl": [[172, 8], [172, 14]], "libssl_name": [[171, 8], [171, 19]]}, "mod_var_occur": {"CustomHTTPSConnection": [["self", "do_open", "CustomHTTPSConnection", "req"]], "CustomHTTPSHandler": [["hasattr", "socket", "CustomHTTPSHandler"], ["handlers", "append", "CustomHTTPSHandler"]], "DUMMY_CA_CERT": [["os", "write", "tmp_fd", "DUMMY_CA_CERT"]], "HAS_MATCH_HOSTNAME": [], "HAS_SSL": [["HAS_SSL"], ["HAS_SSLCONTEXT", "HAS_SSL"], ["HAS_SSL"]], "HAS_SSLCONTEXT": [["HAS_SSLCONTEXT", "HAS_SSL"], ["HAS_SSLCONTEXT"], ["HAS_SSLCONTEXT"], ["HAS_SSLCONTEXT"], ["HAS_SSLCONTEXT"], ["HAS_SSLCONTEXT", "validate_certs"]], "HAS_URLLIB3_SNI_SUPPORT": [["HAS_URLLIB3_SNI_SUPPORT"], ["HAS_URLLIB3_SNI_SUPPORT"], ["HAS_URLLIB3_SNI_SUPPORT"], ["HAS_URLLIB3_SNI_SUPPORT"]], "HAS_URLPARSE": [["HAS_URLPARSE"]], "PROTOCOL": [["self", "sock", "ssl_wrap_socket", "sock", "keyfile", "self", "key_file", "cert_reqs", "ssl", "CERT_NONE", "certfile", "self", "cert_file", "ssl_version", "PROTOCOL", "server_hostname", "server_hostname"], ["self", "sock", "ssl", "wrap_socket", "sock", "keyfile", "self", "key_file", "certfile", "self", "cert_file", "ssl_version", "PROTOCOL"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"], ["ssl_s", "ssl_wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL", "server_hostname", "self", "hostname"], ["ssl_s", "ssl", "wrap_socket", "s", "ca_certs", "tmp_ca_cert_path", "cert_reqs", "ssl", "CERT_REQUIRED", "ssl_version", "PROTOCOL"]], "libssl": [["libssl", "method"], ["libssl"]], "libssl_name": [["libssl", "ctypes", "CDLL", "libssl_name"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 182}, "session_id": "j6oAAYNH2fUvtQfpBVr2GEZwiO7QLiJBqNJhD9S_2_8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CustomHTTPSConnection": "", "CustomHTTPSHandler": "", "DUMMY_CA_CERT": "", "HAS_MATCH_HOSTNAME": "", "HAS_SSL": "", "HAS_SSLCONTEXT": "", "HAS_URLLIB3_SNI_SUPPORT": "", "HAS_URLPARSE": "", "PROTOCOL": "", "libssl": "", "libssl_name": ""}, "variables_p": {"CustomHTTPSConnection": [["Optional[str]", 0.2545620793483427], ["bool", 0.11949683970636035], ["str", 0.11949683970636035], ["List[str]", 0.08536760668268514]], "CustomHTTPSHandler": [["int", 0.5861454891246338]], "DUMMY_CA_CERT": [["str", 0.9999999999881217], ["int", 8.10812832772283e-12], ["requests.models.Response", 3.769794778880205e-12]], "HAS_MATCH_HOSTNAME": [["str", 0.39999999999999997], ["float", 0.19999999999999998], ["frozenset[str]", 0.09999999999999999], ["Tuple[str, str]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999]], "HAS_SSL": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_SSLCONTEXT": [["float", 4.497212060600414e-11], ["List[Tuple[str, bool]]", 4.33308300141461e-11]], "HAS_URLLIB3_SNI_SUPPORT": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_URLPARSE": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "PROTOCOL": [["str", 0.691885627302442]], "libssl": [["Set[Tuple[str, str]]", 0.7999999999813259], ["bool", 0.19999999999533147], ["str", 1.5785137312611508e-11], ["dict", 3.603621986992073e-12]], "libssl_name": [["str", 0.810810808134622], ["Tuple[str, int]", 0.09268132307631932]]}}}