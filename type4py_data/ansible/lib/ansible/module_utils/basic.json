{"error": null, "response": {"classes": [{"cls_lc": [[622, 0], [623, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "AnsibleFallbackNotFound", "q_name": "AnsibleFallbackNotFound", "variables": {}, "variables_p": {}}, {"cls_lc": [[626, 0], [2324, 33]], "cls_var_ln": {"is_executable": [[2324, 4], [2324, 17]], "pretty_bytes": [[2314, 4], [2314, 16]]}, "cls_var_occur": {"is_executable": [], "pretty_bytes": []}, "funcs": [{"docstring": {"func": "common code for quickly building an ansible module in Python", "long_descr": "(although you can write modules in anything that can return JSON)\nsee library/* for examples", "ret": null}, "fn_lc": [[627, 4], [721, 23]], "fn_var_ln": {"_CHECK_ARGUMENT_TYPES_DISPATCHER": [[693, 8], [693, 45]], "_debug": [[643, 8], [643, 19]], "_diff": [[644, 8], [644, 18]], "_legal_inputs": [[651, 8], [651, 26]], "_verbosity": [[645, 8], [645, 23]], "aliases": [[663, 12], [663, 24]], "argument_spec": [[638, 8], [638, 26]], "check_mode": [[640, 8], [640, 23]], "cleanup_files": [[642, 8], [642, 26]], "e": [[665, 12], [665, 13]], "no_log": [[641, 8], [641, 19]], "no_log_object": [[676, 16], [676, 29]], "no_log_values": [[671, 8], [671, 26]], "run_command_environ_update": [[648, 8], [648, 39]], "supports_check_mode": [[639, 8], [639, 32]]}, "fn_var_occur": {"_CHECK_ARGUMENT_TYPES_DISPATCHER": [["self", "_CHECK_ARGUMENT_TYPES_DISPATCHER", "self", "_check_type_str", "self", "_check_type_list", "self", "_check_type_dict", "self", "_check_type_bool", "self", "_check_type_int", "self", "_check_type_float", "self", "_check_type_path", "self", "_check_type_raw", "self", "_check_type_jsonarg", "self", "_check_type_jsonarg", "self", "_check_type_bytes", "self", "_check_type_bits"]], "_debug": [["self", "_debug", "False"]], "_diff": [["self", "_diff", "False"]], "_legal_inputs": [["self", "_legal_inputs"]], "_verbosity": [["self", "_verbosity"], ["self", "no_log", "self", "_verbosity"]], "aliases": [["self", "aliases"], ["self", "aliases", "self", "_handle_aliases"]], "argument_spec": [["self", "argument_spec", "argument_spec"], ["k", "self", "argument_spec"], ["self", "argument_spec", "k", "v"], ["self", "argument_spec", "items"]], "check_mode": [["self", "check_mode", "False"]], "cleanup_files": [["self", "cleanup_files"]], "e": [["e", "get_exception"], ["print", "str", "e"]], "no_log": [["self", "no_log", "no_log"], ["self", "no_log", "self", "_verbosity"]], "no_log_object": [["no_log_object", "self", "params", "get", "arg_name", "None"], ["self", "no_log_values", "update", "return_values", "no_log_object"]], "no_log_values": [["self", "no_log_values", "set"], ["self", "no_log_values", "update", "return_values", "no_log_object"]], "run_command_environ_update": [["self", "run_command_environ_update"]], "supports_check_mode": [["self", "supports_check_mode", "supports_check_mode"]]}, "name": "__init__", "params": {"add_file_common_args": "", "argument_spec": "", "bypass_checks": "", "check_invalid_arguments": "", "mutually_exclusive": "", "no_log": "", "required_if": "", "required_one_of": "", "required_together": "", "self": "", "supports_check_mode": ""}, "params_descr": {"add_file_common_args": "", "argument_spec": "", "bypass_checks": "", "check_invalid_arguments": "", "mutually_exclusive": "", "no_log": "", "required_if": "", "required_one_of": "", "required_together": "", "self": "", "supports_check_mode": ""}, "params_occur": {"add_file_common_args": [], "argument_spec": [["self", "argument_spec", "argument_spec"], ["k", "self", "argument_spec"], ["self", "argument_spec", "k", "v"], ["self", "argument_spec", "items"]], "bypass_checks": [], "check_invalid_arguments": [["self", "_check_arguments", "check_invalid_arguments"]], "mutually_exclusive": [["self", "_check_mutually_exclusive", "mutually_exclusive"]], "no_log": [["self", "no_log", "no_log"], ["self", "no_log", "self", "_verbosity"]], "required_if": [["self", "_check_required_if", "required_if"]], "required_one_of": [["self", "_check_required_one_of", "required_one_of"]], "required_together": [["self", "_check_required_together", "required_together"]], "self": [["self", "argument_spec", "argument_spec"], ["self", "supports_check_mode", "supports_check_mode"], ["self", "check_mode", "False"], ["self", "no_log", "no_log"], ["self", "cleanup_files"], ["self", "_debug", "False"], ["self", "_diff", "False"], ["self", "_verbosity"], ["self", "run_command_environ_update"], ["self", "aliases"], ["self", "_legal_inputs"], ["k", "self", "argument_spec"], ["self", "argument_spec", "k", "v"], ["self", "_load_params"], ["self", "_set_fallbacks"], ["self", "aliases", "self", "_handle_aliases"], ["self", "no_log_values", "set"], ["self", "argument_spec", "items"], ["no_log_object", "self", "params", "get", "arg_name", "None"], ["self", "no_log_values", "update", "return_values", "no_log_object"], ["self", "_check_locale"], ["self", "_check_arguments", "check_invalid_arguments"], ["self", "_check_mutually_exclusive", "mutually_exclusive"], ["self", "_set_defaults", "pre", "True"], ["self", "_CHECK_ARGUMENT_TYPES_DISPATCHER", "self", "_check_type_str", "self", "_check_type_list", "self", "_check_type_dict", "self", "_check_type_bool", "self", "_check_type_int", "self", "_check_type_float", "self", "_check_type_path", "self", "_check_type_raw", "self", "_check_type_jsonarg", "self", "_check_type_jsonarg", "self", "_check_type_bytes", "self", "_check_type_bits"], ["self", "_check_required_arguments"], ["self", "_check_argument_types"], ["self", "_check_argument_values"], ["self", "_check_required_together", "required_together"], ["self", "_check_required_one_of", "required_one_of"], ["self", "_check_required_if", "required_if"], ["self", "_set_defaults", "pre", "False"], ["self", "no_log", "self", "_verbosity"], ["self", "_log_invocation"], ["self", "_set_cwd"]], "supports_check_mode": [["self", "supports_check_mode", "supports_check_mode"]]}, "params_p": {"add_file_common_args": [["float", 0.4381115939242044], ["bool", 0.16361746075506467], ["int", 0.1095278984810511], ["list", 0.1095278984810511], ["List[int]", 0.08774769962304249]], "args": [], "argument_spec": [["Optional[bool]", 0.29266609862479714], ["bool", 0.1309393525246016], ["str", 0.09755536620826571], ["Optional[Dict[str, str]]", 0.09755536620826571]], "bypass_checks": [["float", 0.4381115939242044], ["bool", 0.16361746075506467], ["int", 0.1095278984810511], ["list", 0.1095278984810511], ["List[int]", 0.08774769962304249]], "check_invalid_arguments": [["bool", 0.5253007548312865], ["str", 0.1940720938970495], ["Dict[str, str]", 0.09455891800283761], ["int", 0.09394002565458], ["List[str]", 0.09212820761424659]], "kwargs": [], "mutually_exclusive": [["bool", 0.2906982372967779], ["float", 0.1647201666072335], ["Union[float, Tuple[float, float]]", 0.11531285541678812], ["List[str]", 0.10335747912244429], ["str", 0.08201205247248858], ["types.Bounds", 0.07729864691808984]], "no_log": [["str", 0.44636241014411976], ["Tuple[str, int]", 0.09528536261419608]], "required_if": [["bool", 0.2906982372967779], ["float", 0.1647201666072335], ["Union[float, Tuple[float, float]]", 0.11531285541678812], ["List[str]", 0.10335747912244429], ["str", 0.08201205247248858], ["types.Bounds", 0.07729864691808984]], "required_one_of": [["bool", 0.2906982372967779], ["float", 0.1647201666072335], ["Union[float, Tuple[float, float]]", 0.11531285541678812], ["List[str]", 0.10335747912244429], ["str", 0.08201205247248858], ["types.Bounds", 0.07729864691808984]], "required_together": [["bool", 0.2906982372967779], ["float", 0.1647201666072335], ["Union[float, Tuple[float, float]]", 0.11531285541678812], ["List[str]", 0.10335747912244429], ["str", 0.08201205247248858], ["types.Bounds", 0.07729864691808984]], "self": [], "supports_check_mode": [["Optional[bool]", 0.22227522423677487], ["str", 0.17201275328838356], ["Optional[int]", 0.11113761211838744], ["bool", 0.08337008478328595]]}, "q_name": "AnsibleModule.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_CHECK_ARGUMENT_TYPES_DISPATCHER": "", "_debug": "", "_diff": "", "_legal_inputs": "", "_verbosity": "", "aliases": "", "argument_spec": "", "check_mode": "", "cleanup_files": "", "e": "", "no_log": "", "no_log_object": "", "no_log_values": "", "run_command_environ_update": "", "supports_check_mode": ""}, "variables_p": {"_CHECK_ARGUMENT_TYPES_DISPATCHER": [["List[bool]", 0.3728434857094758], ["Dict[str, int]", 0.19660859750555648], ["Type[Tuple[str, str, str]]", 0.11536426854054256], ["List[str]", 0.10752052799038998], ["Type[str]", 0.10708944286712367], ["Type[int]", 0.10057367738691157]], "_debug": [["str", 0.6764829690625138], ["Union[Literal, str]", 0.22225043558443883], ["Union[Literal[False], str]", 0.10126659535304741]], "_diff": [["int", 0.6258564750569569], ["float", 0.1953714877468058]], "_legal_inputs": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "_verbosity": [["str", 0.6838502909673873], ["Set[str]", 0.21742020477343263], ["Final", 0.09872950425918006]], "aliases": [["str", 0.2867771074733743], ["int", 0.2316822839566885], ["List[str]", 0.1749617808767666], ["Tuple[Literal, Literal]", 0.11539408937758773]], "argument_spec": [["str", 0.4078223765630314], ["List[str]", 0.2046255015871526], ["bool", 0.0975721038614616], ["list", 0.08908925327413209]], "check_mode": [["str", 0.8997601997552936], ["List[str]", 0.10023980024470636]], "cleanup_files": [["str", 0.9999999996775509], ["int", 2.0717209047712168e-10], ["List[str]", 5.14839630419915e-11], ["Dict[Any, Tuple[Any, Any, Any]]", 3.288171511522404e-11]], "e": [["int", 1.0]], "no_log": [["str", 0.3735259605190187]], "no_log_object": [["str", 0.42992679213178736], ["Dict[str, Any]", 0.1294253712693205], ["Optional[str]", 0.08920111706887829], ["dict", 0.088639082311935], ["tuple", 0.08460640910744834]], "no_log_values": [["int", 0.19068103337051684], ["datetime.date.time.datetime", 0.12752562034153536], ["str", 0.10223464989626814], ["Dict[str, bool]", 0.08563037942688391], ["Dict[str, Any]", 0.08059985200532417], ["List[Dict[str, Any]]", 0.07921698829520203]], "run_command_environ_update": [["str", 0.36043960644128004], ["Dict[str, str]", 0.28512599752403733], ["int", 0.23215456320297342], ["bool", 0.1222798328317092]], "supports_check_mode": [["int", 0.7406099342610908], ["Set[str]", 0.08596242593877113]]}}, {"docstring": {"func": "many modules deal with files, this encapsulates common", "long_descr": "options that the file module accepts such that it is directly\navailable to all modules and they can share code.", "ret": null}, "fn_lc": [[723, 4], [766, 9]], "fn_var_ln": {"b_path": [[740, 12], [740, 18]], "default_secontext": [[757, 8], [757, 25]], "group": [[745, 8], [745, 13]], "mode": [[743, 8], [743, 12]], "owner": [[744, 8], [744, 13]], "path": [[741, 12], [741, 16]], "secontext": [[752, 8], [752, 17]], "selevel": [[751, 8], [751, 15]], "serole": [[749, 8], [749, 14]], "setype": [[750, 8], [750, 14]], "seuser": [[748, 8], [748, 14]]}, "fn_var_occur": {"b_path": [["b_path", "to_bytes", "path", "errors"], ["params", "get", "False", "os", "path", "islink", "b_path"], ["b_path", "os", "path", "realpath", "b_path"], ["path", "to_native", "b_path"]], "default_secontext": [["default_secontext", "self", "selinux_default_context", "path"], ["range", "len", "default_secontext"], ["secontext", "i", "default_secontext", "i"]], "group": [["group", "params", "get", "None"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "mode": [["mode", "params", "get", "None"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "owner": [["owner", "params", "get", "None"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "path": [["path", "params", "get", "params", "get", "None"], ["path", "None"], ["path", "os", "path", "expanduser", "os", "path", "expandvars", "path"], ["b_path", "to_bytes", "path", "errors"], ["params", "get", "False", "os", "path", "islink", "b_path"], ["b_path", "os", "path", "realpath", "b_path"], ["path", "to_native", "b_path"], ["default_secontext", "self", "selinux_default_context", "path"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "secontext": [["secontext", "seuser", "serole", "setype"], ["secontext", "append", "selevel"], ["i", "None", "secontext", "i"], ["secontext", "i", "default_secontext", "i"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "selevel": [["selevel", "params", "get", "None"], ["secontext", "append", "selevel"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "serole": [["serole", "params", "get", "None"], ["secontext", "seuser", "serole", "setype"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "setype": [["setype", "params", "get", "None"], ["secontext", "seuser", "serole", "setype"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]], "seuser": [["seuser", "params", "get", "None"], ["secontext", "seuser", "serole", "setype"], ["dict", "path", "path", "mode", "mode", "owner", "owner", "group", "group", "seuser", "seuser", "serole", "serole", "setype", "setype", "selevel", "selevel", "secontext", "secontext"]]}, "name": "load_file_common_arguments", "params": {"params": "", "self": ""}, "params_descr": {"params": "", "self": ""}, "params_occur": {"params": [["path", "params", "get", "params", "get", "None"], ["params", "get", "False", "os", "path", "islink", "b_path"], ["mode", "params", "get", "None"], ["owner", "params", "get", "None"], ["group", "params", "get", "None"], ["seuser", "params", "get", "None"], ["serole", "params", "get", "None"], ["setype", "params", "get", "None"], ["selevel", "params", "get", "None"]], "self": [["self", "selinux_mls_enabled"], ["default_secontext", "self", "selinux_default_context", "path"]]}, "params_p": {"args": [], "kwargs": [], "params": [["str", 0.19632871015077058], ["dict", 0.11627802523688131], ["Dict[str, Any]", 0.10237178464236678], ["Dict[str, str]", 0.0850064285901453]], "self": []}, "q_name": "AnsibleModule.load_file_common_arguments", "ret_exprs": ["return {}", "return dict( path=path, mode=mode, owner=owner, group=group, seuser=seuser, serole=serole, setype=setype, selevel=selevel, secontext=secontext,)"], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {"b_path": "", "default_secontext": "", "group": "", "mode": "", "owner": "", "path": "", "secontext": "", "selevel": "", "serole": "", "setype": "", "seuser": ""}, "variables_p": {"b_path": [["str", 0.7106146726750292], ["Optional[str]", 0.10140810612835081], ["Set[str]", 0.09043213907638424]], "default_secontext": [["int", 1.0]], "group": [["int", 0.2046073659498455], ["Optional[str]", 0.18512886964422506], ["str", 0.18191321176303404], ["Tuple[str, str]", 0.13888965317455346], ["bytes", 0.10965789831540682], ["Dict[str, Dict[str, dict]]", 0.09002616904745507], ["Optional[dict]", 0.08977683210548004]], "mode": [["str", 0.3685173251341989], ["Optional[str]", 0.13775987350779512], ["List[str]", 0.10917536353070761], ["bool", 0.10481504933192393], ["ImportError", 0.09234205041664163], ["ClassVar[str]", 0.09219121376930342]], "owner": [["str", 0.2009797971932884], ["Optional[str]", 0.19034048321194919], ["int", 0.1824368493403868], ["Optional[Dict[str, Any]]", 0.12111617791072715], ["set", 0.10166401526097307]], "path": [["str", 0.24793752130772279], ["Dict[str, Dict[str, Any]]", 0.10345517352851437], ["bytes", 0.09855557307870248], ["list", 0.07898861888368591]], "secontext": [["Tuple[int, int, int]", 0.3623836909678947], ["list", 0.19653250493733343]], "selevel": [["str", 0.2704444199883719], ["dict", 0.216170036923359], ["Dict[str, Any]", 0.16043265747924126], ["list", 0.088634632842461]], "serole": [["str", 0.4054212523147557], ["Optional[str]", 0.21078972506762247], ["Dict[str, Dict]", 0.0916400341984903], ["dict", 0.0912953255451777]], "setype": [["str", 0.4054212523147557], ["Optional[str]", 0.21078972506762247], ["Dict[str, Dict]", 0.0916400341984903], ["dict", 0.0912953255451777]], "seuser": [["str", 0.4054212523147557], ["Optional[str]", 0.21078972506762247], ["Dict[str, Dict]", 0.0916400341984903], ["dict", 0.0912953255451777]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[775, 4], [781, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "selinux_mls_enabled", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.selinux_mls_enabled", "ret_exprs": ["return False", "return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 1.0000000000000002]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[783, 4], [794, 24]], "fn_var_ln": {"err": [[787, 24], [787, 27]], "out": [[787, 20], [787, 23]], "rc": [[787, 17], [787, 19]], "seenabled": [[785, 12], [785, 21]]}, "fn_var_occur": {"err": [["rc", "out", "err", "self", "run_command", "seenabled"]], "out": [["rc", "out", "err", "self", "run_command", "seenabled"]], "rc": [["rc", "out", "err", "self", "run_command", "seenabled"]], "seenabled": [["seenabled", "self", "get_bin_path"], ["seenabled", "None"], ["rc", "out", "err", "self", "run_command", "seenabled"]]}, "name": "selinux_enabled", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["seenabled", "self", "get_bin_path"], ["rc", "out", "err", "self", "run_command", "seenabled"], ["self", "fail_json", "msg"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.selinux_enabled", "ret_exprs": ["return False", "return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 1.0000000000000002]], "variables": {"err": "", "out": "", "rc": "", "seenabled": ""}, "variables_p": {"err": [["str", 0.9068395264753422]], "out": [["str", 0.48265259660329285], ["os._wrap_close", 0.12086884271930788], ["int", 0.11321858890300099], ["Pattern[str]", 0.10117012542016125]], "rc": [["str", 0.9068395264753422]], "seenabled": [["List[str]", 0.08571331409232977], ["dict", 0.07908393858937951], ["Dict[str, int]", 0.07784995500816425]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[797, 4], [801, 22]], "fn_var_ln": {"context": [[798, 8], [798, 15]]}, "fn_var_occur": {"context": [["context", "None", "None", "None"], ["context", "append", "None"]]}, "name": "selinux_initial_context", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "selinux_mls_enabled"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.selinux_initial_context", "ret_exprs": ["return context"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"context": ""}, "variables_p": {"context": [["Dict[int, Tuple[int, int]]", 0.24885315219517007], ["list", 0.1583547468575083], ["List[int]", 0.0956715517459909]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[804, 4], [817, 22]], "fn_var_ln": {"context": [[816, 8], [816, 15]], "ret": [[809, 12], [809, 15]]}, "fn_var_occur": {"context": [["context", "self", "selinux_initial_context"], ["context", "ret", "split"]], "ret": [["ret", "selinux", "matchpathcon", "to_native", "path", "errors", "mode"], ["context", "ret", "split"]]}, "name": "selinux_default_context", "params": {"mode": "", "path": "", "self": ""}, "params_descr": {"mode": "", "path": "", "self": ""}, "params_occur": {"mode": [["ret", "selinux", "matchpathcon", "to_native", "path", "errors", "mode"]], "path": [["ret", "selinux", "matchpathcon", "to_native", "path", "errors", "mode"]], "self": [["context", "self", "selinux_initial_context"], ["HAVE_SELINUX", "self", "selinux_enabled"]]}, "params_p": {"args": [], "kwargs": [], "mode": [["str", 0.5698057694183739], ["int", 0.1422481218171112], ["List[str]", 0.09793223197693832], ["bool", 0.09569749966754751]], "path": [["str", 0.5698057694183739], ["int", 0.1422481218171112], ["List[str]", 0.09793223197693832], ["bool", 0.09569749966754751]], "self": []}, "q_name": "AnsibleModule.selinux_default_context", "ret_exprs": ["return context", "return context", "return context", "return context"], "ret_type": "", "ret_type_p": [["float", 0.20136785904039586], ["bool", 0.16898601974791394], ["int", 0.14896598347805146], ["types.UUIDType", 0.07703079805345024]], "variables": {"context": "", "ret": ""}, "variables_p": {"context": [["str", 0.6421832972626416], ["Dict[str, str]", 0.18972151722932856], ["frozenset[str]", 0.08605023220444839], ["Dict[str, float]", 0.08204495330358134]], "ret": [["Pattern[str]", 0.7936913429438271], ["frozenset[str]", 0.09810969264286336]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[819, 4], [836, 22]], "fn_var_ln": {"context": [[835, 8], [835, 15]], "e": [[826, 12], [826, 13]], "ret": [[824, 12], [824, 15]]}, "fn_var_occur": {"context": [["context", "self", "selinux_initial_context"], ["context", "ret", "split"]], "e": [["e", "get_exception"], ["e", "errno", "errno", "ENOENT"]], "ret": [["ret", "selinux", "lgetfilecon_raw", "to_native", "path", "errors"], ["context", "ret", "split"]]}, "name": "selinux_context", "params": {"path": "", "self": ""}, "params_descr": {"path": "", "self": ""}, "params_occur": {"path": [["ret", "selinux", "lgetfilecon_raw", "to_native", "path", "errors"], ["self", "fail_json", "path", "path", "msg", "path"], ["self", "fail_json", "path", "path", "msg"]], "self": [["context", "self", "selinux_initial_context"], ["HAVE_SELINUX", "self", "selinux_enabled"], ["self", "fail_json", "path", "path", "msg", "path"], ["self", "fail_json", "path", "path", "msg"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.09705194105682959]], "self": []}, "q_name": "AnsibleModule.selinux_context", "ret_exprs": ["return context", "return context", "return context"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"context": "", "e": "", "ret": ""}, "variables_p": {"context": [["str", 0.6421832972626416], ["Dict[str, str]", 0.18972151722932856], ["frozenset[str]", 0.08605023220444839], ["Dict[str, float]", 0.08204495330358134]], "e": [["str", 0.5114110969153136], ["int", 0.25675833835376194], ["bool", 0.12255013552411988], ["NameError", 0.10928042920680461]], "ret": [["Pattern[str]", 0.2499829478304978], ["List[bytes]", 0.1079290972687116], ["str", 0.09067138828153942], ["frozenset[int]", 0.08704645667337142]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[838, 4], [844, 25]], "fn_var_ln": {"b_filename": [[840, 8], [840, 18]], "filename": [[839, 8], [839, 16]], "gid": [[843, 8], [843, 11]], "st": [[841, 8], [841, 10]], "uid": [[842, 8], [842, 11]]}, "fn_var_occur": {"b_filename": [["b_filename", "to_bytes", "filename", "errors"], ["st", "os", "lstat", "b_filename"]], "filename": [["filename", "os", "path", "expanduser", "os", "path", "expandvars", "filename"], ["b_filename", "to_bytes", "filename", "errors"]], "gid": [["gid", "st", "st_gid"], ["uid", "gid"]], "st": [["st", "os", "lstat", "b_filename"], ["uid", "st", "st_uid"], ["gid", "st", "st_gid"]], "uid": [["uid", "st", "st_uid"], ["uid", "gid"]]}, "name": "user_and_group", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["filename", "os", "path", "expanduser", "os", "path", "expandvars", "filename"], ["b_filename", "to_bytes", "filename", "errors"]], "self": []}, "params_p": {"args": [], "filename": [["str", 0.2964502807518445], ["bool", 0.12205295353523386], ["Mapping[str, str]", 0.10488192104090573], ["Optional[Dict]", 0.08421771288078762]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.user_and_group", "ret_exprs": ["return (uid, gid)"], "ret_type": "", "ret_type_p": [["str", 0.3954182249178973]], "variables": {"b_filename": "", "filename": "", "gid": "", "st": "", "uid": ""}, "variables_p": {"b_filename": [["str", 0.23439735264185657], ["int", 0.19097526908579643], ["Dict[str, int]", 0.10015194602962901], ["float", 0.08929955951513673], ["dict", 0.08885324503064301]], "filename": [["str", 1.0000000000000002]], "gid": [["bytes", 0.18167723458150184], ["Tuple[int, int, int]", 0.17426821842463092], ["TextIO", 0.10813292674868116], ["str", 0.08812794168102026]], "st": [["str", 0.3861998420199026], ["float", 0.11690682697621603], ["Union[Literal, Literal]", 0.11158215142488669], ["Dict[str, Union[int, str]]", 0.10245366089676369]], "uid": [["str", 0.31637640662584254], ["Union[Literal, str]", 0.10690524023519204], ["list", 0.10303262777725611], ["List[bytes]", 0.09450309418238331], ["bytes", 0.08981285617127055]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[846, 4], [850, 19]], "fn_var_ln": {"path": [[849, 12], [849, 16]]}, "fn_var_occur": {"path": [["path", "os", "path", "realpath", "os", "path", "expanduser", "os", "path", "expandvars", "path"], ["os", "path", "ismount", "path"], ["path", "os", "path", "dirname", "path"]]}, "name": "find_mount_point", "params": {"path": "", "self": ""}, "params_descr": {"path": "", "self": ""}, "params_occur": {"path": [["path", "os", "path", "realpath", "os", "path", "expanduser", "os", "path", "expandvars", "path"], ["os", "path", "ismount", "path"], ["path", "os", "path", "dirname", "path"]], "self": []}, "params_p": {"args": [], "kwargs": [], "path": [["str", 1.0]], "self": []}, "q_name": "AnsibleModule.find_mount_point", "ret_exprs": ["return path"], "ret_type": "", "ret_type_p": [["str", 0.5045377460670117]], "variables": {"path": ""}, "variables_p": {"path": [["str", 0.9999999999999999]]}}, {"docstring": {"func": "Returns a tuple containing (True, selinux_context) if the given path is on a", "long_descr": "NFS or other 'special' fs  mount point, otherwise the return will be (False, None).", "ret": null}, "fn_lc": [[852, 4], [873, 28]], "fn_var_ln": {"device": [[865, 13], [865, 19]], "f": [[858, 12], [858, 13]], "fstype": [[865, 34], [865, 40]], "mount_data": [[859, 12], [859, 22]], "mount_point": [[865, 21], [865, 32]], "options": [[865, 42], [865, 49]], "path_mount_point": [[863, 8], [863, 24]], "rest": [[865, 51], [865, 55]], "special_context": [[870, 24], [870, 39]]}, "fn_var_occur": {"device": [["device", "mount_point", "fstype", "options", "rest", "line", "split"]], "f": [["f", "open"], ["mount_data", "f", "readlines"], ["f", "close"]], "fstype": [["device", "mount_point", "fstype", "options", "rest", "line", "split"], ["fs", "fstype"]], "mount_data": [["mount_data", "f", "readlines"]], "mount_point": [["device", "mount_point", "fstype", "options", "rest", "line", "split"], ["path_mount_point", "mount_point"]], "options": [["device", "mount_point", "fstype", "options", "rest", "line", "split"]], "path_mount_point": [["path_mount_point", "self", "find_mount_point", "path"], ["path_mount_point", "mount_point"], ["special_context", "self", "selinux_context", "path_mount_point"]], "rest": [["device", "mount_point", "fstype", "options", "rest", "line", "split"]], "special_context": [["special_context", "self", "selinux_context", "path_mount_point"], ["True", "special_context"]]}, "name": "is_special_selinux_path", "params": {"path": "", "self": ""}, "params_descr": {"path": "", "self": ""}, "params_occur": {"path": [["path_mount_point", "self", "find_mount_point", "path"]], "self": [["path_mount_point", "self", "find_mount_point", "path"], ["self", "_selinux_special_fs"], ["special_context", "self", "selinux_context", "path_mount_point"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.2574262866913965]], "self": []}, "q_name": "AnsibleModule.is_special_selinux_path", "ret_exprs": ["return (False, None)", "return (True, special_context)", "return (False, None)"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"device": "", "f": "", "fstype": "", "mount_data": "", "mount_point": "", "options": "", "path_mount_point": "", "rest": "", "special_context": ""}, "variables_p": {"device": [["str", 0.34615828802153836], ["List[int]", 0.19335015925788385], ["list", 0.17250285761037887], ["int", 0.09201298461657481]], "f": [], "fstype": [["str", 0.5367568264237121], ["List[List[int]]", 0.106345768068395], ["list", 0.09811183152246081], ["Optional[float]", 0.09482574400157333], ["Dict[str, str]", 0.07970501811073069]], "mount_data": [["bool", 0.25662891114274167], ["Dict[str, Union[int, str]]", 0.21487595570327184], ["dict", 0.21205833291052228], ["Dict[str, Any]", 0.10743797785163592], ["List[Dict[str, str]]", 0.10449941119591415], ["List[str]", 0.10449941119591415]], "mount_point": [["str", 0.4740698102782136], ["dict", 0.10827281409201542], ["Dict[str, Union[Any, Any]]", 0.10827281409201542], ["list", 0.09817149584675777]], "options": [["Dict[str, Union[Any, Any]]", 0.25660103617638474], ["six.moves.queue.Queue[Any]", 0.10902842426080961], ["List[Tuple[Any, Any, Any]]", 0.09487902266142849], ["Dict[str, int]", 0.09140187604419481], ["List[int]", 0.0897081574403606], ["Dict[str, str]", 0.0885790251454849]], "path_mount_point": [["list", 0.17483996962706497], ["str", 0.1312037330332611]], "rest": [["str", 0.34615828802153836], ["List[int]", 0.19335015925788385], ["list", 0.17250285761037887], ["int", 0.09201298461657481]], "special_context": [["str", 0.3039409736140594], ["Type[str]", 0.22571807338463962], ["List[str]", 0.10306636005673044]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[875, 4], [879, 66]], "fn_var_ln": {"context": [[878, 8], [878, 15]]}, "fn_var_occur": {"context": [["context", "self", "selinux_default_context", "path"], ["self", "set_context_if_different", "path", "context", "False"]]}, "name": "set_default_selinux_context", "params": {"changed": "", "path": "", "self": ""}, "params_descr": {"changed": "", "path": "", "self": ""}, "params_occur": {"changed": [], "path": [["context", "self", "selinux_default_context", "path"], ["self", "set_context_if_different", "path", "context", "False"]], "self": [["HAVE_SELINUX", "self", "selinux_enabled"], ["context", "self", "selinux_default_context", "path"], ["self", "set_context_if_different", "path", "context", "False"]]}, "params_p": {"args": [], "changed": [["str", 0.43188548546926786]], "kwargs": [], "path": [["str", 0.7701114595073572]], "self": []}, "q_name": "AnsibleModule.set_default_selinux_context", "ret_exprs": ["return changed", "return self.set_context_if_different(path, context, False)"], "ret_type": "", "ret_type_p": [["str", 0.8203113915177525], ["Callable", 0.09216586723477016]], "variables": {"context": ""}, "variables_p": {"context": [["List[str]", 0.22680626263715087], ["str", 0.2142430444101859], ["Type[Mapping[str, str]]", 0.19612399749924114], ["Type[str]", 0.17979391343143597], ["List[int]", 0.09419667172874356], ["Set[str]", 0.0888361102932426]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[881, 4], [921, 22]], "fn_var_ln": {"changed": [[920, 12], [920, 19]], "cur_context": [[885, 8], [885, 19]], "e": [[916, 16], [916, 17]], "is_special_se": [[890, 9], [890, 22]], "new_context": [[892, 12], [892, 23]], "rc": [[913, 16], [913, 18]], "sp_context": [[890, 24], [890, 34]]}, "fn_var_occur": {"changed": [["changed", "True"]], "cur_context": [["cur_context", "self", "selinux_context", "path"], ["new_context", "list", "cur_context"], ["range", "len", "cur_context"], ["context", "i", "None", "context", "i", "cur_context", "i"], ["new_context", "i", "cur_context", "i"], ["cur_context", "new_context"], ["diff", "cur_context"], ["self", "fail_json", "path", "path", "msg", "str", "e", "new_context", "new_context", "cur_context", "cur_context", "input_was", "context"]], "e": [["e", "get_exception"], ["self", "fail_json", "path", "path", "msg", "str", "e", "new_context", "new_context", "cur_context", "cur_context", "input_was", "context"]], "is_special_se": [["is_special_se", "sp_context", "self", "is_special_selinux_path", "path"]], "new_context": [["new_context", "list", "cur_context"], ["new_context", "sp_context"], ["new_context", "i", "context", "i"], ["new_context", "i", "cur_context", "i"], ["cur_context", "new_context"], ["diff", "new_context"], ["rc", "selinux", "lsetfilecon", "to_native", "path", "str", "join", "new_context"], ["self", "fail_json", "path", "path", "msg", "str", "e", "new_context", "new_context", "cur_context", "cur_context", "input_was", "context"]], "rc": [["rc", "selinux", "lsetfilecon", "to_native", "path", "str", "join", "new_context"]], "sp_context": [["is_special_se", "sp_context", "self", "is_special_selinux_path", "path"], ["new_context", "sp_context"]]}, "name": "set_context_if_different", "params": {"changed": "", "context": "", "diff": "", "path": "", "self": ""}, "params_descr": {"changed": "", "context": "", "diff": "", "path": "", "self": ""}, "params_occur": {"changed": [["changed", "True"]], "context": [["len", "context", "i"], ["context", "i", "None", "context", "i", "cur_context", "i"], ["new_context", "i", "context", "i"], ["context", "i", "None"], ["self", "fail_json", "path", "path", "msg", "str", "e", "new_context", "new_context", "cur_context", "cur_context", "input_was", "context"]], "diff": [["diff", "None"], ["diff", "cur_context"], ["diff", "new_context"]], "path": [["cur_context", "self", "selinux_context", "path"], ["is_special_se", "sp_context", "self", "is_special_selinux_path", "path"], ["rc", "selinux", "lsetfilecon", "to_native", "path", "str", "join", "new_context"], ["self", "fail_json", "path", "path", "msg", "str", "e", "new_context", "new_context", "cur_context", "cur_context", "input_was", "context"], ["self", "fail_json", "path", "path", "msg"]], "self": [["HAVE_SELINUX", "self", "selinux_enabled"], ["cur_context", "self", "selinux_context", "path"], ["is_special_se", "sp_context", "self", "is_special_selinux_path", "path"], ["self", "check_mode"], ["self", "fail_json", "path", "path", "msg", "str", "e", "new_context", "new_context", "cur_context", "cur_context", "input_was", "context"], ["self", "fail_json", "path", "path", "msg"]]}, "params_p": {"args": [], "changed": [["bool", 0.7125036671536962], ["Optional[bool]", 0.09360394392804569]], "context": [["Optional[str]", 0.1353817541497178], ["Sequence[str]", 0.1194293286129225], ["List[str]", 0.09251395193958156], ["dict", 0.09158135239391096], ["bool", 0.08973262647550537], ["Iterable[str]", 0.08874318829836891]], "diff": [["str", 0.5027158804501853], ["Optional[str]", 0.15229220712572464], ["bool", 0.10421270685379017]], "kwargs": [], "path": [["str", 0.08812392682555631]], "self": []}, "q_name": "AnsibleModule.set_context_if_different", "ret_exprs": ["return changed", "return True", "return changed"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"changed": "", "cur_context": "", "e": "", "is_special_se": "", "new_context": "", "rc": "", "sp_context": ""}, "variables_p": {"changed": [["Dict[str, Any]", 0.49999999999999994], ["List[bool]", 0.19999999999999998], ["Dict[str, bool]", 0.09999999999999999], ["Dict[str, Dict[str, Any]]", 0.09999999999999999], ["float", 0.09999999999999999]], "cur_context": [["List[str]", 0.2075599971694163], ["list", 0.19808797502966147], ["set", 0.1827531416146125], ["int", 0.1038511696499522], ["List[int]", 0.0996841514388411], ["str", 0.08825013742095075]], "e": [["Optional[int]", 0.23674894447753633], ["list", 0.09383694125273742], ["int", 0.0840606683543]], "is_special_se": [], "new_context": [["dict", 0.523026315210271], ["list", 0.2879416322247339], ["Dict[str, List[Any]]", 0.09711751759873678], ["str", 0.09191453496625848]], "rc": [["str", 0.31488637109716433], ["List[str]", 0.08917115206455971]], "sp_context": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[923, 4], [953, 22]], "fn_var_ln": {"b_path": [[925, 8], [925, 14]], "changed": [[952, 12], [952, 19]], "orig_gid": [[928, 18], [928, 26]], "orig_uid": [[928, 8], [928, 16]], "path": [[924, 8], [924, 12]], "uid": [[933, 16], [933, 19]]}, "fn_var_occur": {"b_path": [["b_path", "to_bytes", "path", "errors"], ["os", "lchown", "b_path", "uid"]], "changed": [["changed", "True"]], "orig_gid": [["orig_uid", "orig_gid", "self", "user_and_group", "path"]], "orig_uid": [["orig_uid", "orig_gid", "self", "user_and_group", "path"], ["orig_uid", "uid"], ["diff", "orig_uid"]], "path": [["path", "os", "path", "expanduser", "os", "path", "expandvars", "path"], ["b_path", "to_bytes", "path", "errors"], ["orig_uid", "orig_gid", "self", "user_and_group", "path"], ["self", "fail_json", "path", "path", "msg", "owner"], ["self", "fail_json", "path", "path", "msg"]], "uid": [["uid", "int", "owner"], ["uid", "pwd", "getpwnam", "owner", "pw_uid"], ["orig_uid", "uid"], ["diff", "uid"], ["os", "lchown", "b_path", "uid"]]}, "name": "set_owner_if_different", "params": {"changed": "", "diff": "", "owner": "", "path": "", "self": ""}, "params_descr": {"changed": "", "diff": "", "owner": "", "path": "", "self": ""}, "params_occur": {"changed": [["changed", "True"]], "diff": [["diff", "None"], ["diff", "orig_uid"], ["diff", "uid"]], "owner": [["owner", "None"], ["uid", "int", "owner"], ["uid", "pwd", "getpwnam", "owner", "pw_uid"], ["self", "fail_json", "path", "path", "msg", "owner"]], "path": [["path", "os", "path", "expanduser", "os", "path", "expandvars", "path"], ["b_path", "to_bytes", "path", "errors"], ["orig_uid", "orig_gid", "self", "user_and_group", "path"], ["self", "fail_json", "path", "path", "msg", "owner"], ["self", "fail_json", "path", "path", "msg"]], "self": [["orig_uid", "orig_gid", "self", "user_and_group", "path"], ["self", "fail_json", "path", "path", "msg", "owner"], ["self", "check_mode"], ["self", "fail_json", "path", "path", "msg"]]}, "params_p": {"args": [], "changed": [["bool", 0.9040693735180725], ["str", 0.09593062648192754]], "diff": [["str", 0.577050646720537], ["Optional[str]", 0.2131050105622947], ["Optional[int]", 0.10280431862837298]], "kwargs": [], "owner": [["str", 0.3122307867301909], ["Optional[str]", 0.27593194353290657], ["Optional[Dict[str, str]]", 0.12500296553499354], ["Optional[float]", 0.0869565545862962]], "path": [["str", 0.9089519559556714], ["Optional[str]", 0.09104804404432876]], "self": []}, "q_name": "AnsibleModule.set_owner_if_different", "ret_exprs": ["return changed", "return True", "return changed"], "ret_type": "", "ret_type_p": [["bool", 0.6782649613223117], ["str", 0.20428697879557606]], "variables": {"b_path": "", "changed": "", "orig_gid": "", "orig_uid": "", "path": "", "uid": ""}, "variables_p": {"b_path": [["str", 0.8341029173770446]], "changed": [["Dict[str, Any]", 0.49999999999999994], ["List[bool]", 0.19999999999999998], ["Dict[str, bool]", 0.09999999999999999], ["Dict[str, Dict[str, Any]]", 0.09999999999999999], ["float", 0.09999999999999999]], "orig_gid": [["str", 0.7749891373650853], ["Dict[int, str]", 0.12736051095777182], ["Dict[str, List[str]]", 0.09765035167714294]], "orig_uid": [["str", 1.0]], "path": [["str", 1.0]], "uid": [["str", 0.9162850956203716], ["List[str]", 0.0837149043796284]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[955, 4], [985, 22]], "fn_var_ln": {"b_path": [[957, 8], [957, 14]], "changed": [[984, 12], [984, 19]], "gid": [[965, 16], [965, 19]], "orig_gid": [[960, 18], [960, 26]], "orig_uid": [[960, 8], [960, 16]], "path": [[956, 8], [956, 12]]}, "fn_var_occur": {"b_path": [["b_path", "to_bytes", "path", "errors"], ["orig_uid", "orig_gid", "self", "user_and_group", "b_path"], ["os", "lchown", "b_path", "gid"]], "changed": [["changed", "True"]], "gid": [["gid", "int", "group"], ["gid", "grp", "getgrnam", "group", "gr_gid"], ["orig_gid", "gid"], ["diff", "gid"], ["os", "lchown", "b_path", "gid"]], "orig_gid": [["orig_uid", "orig_gid", "self", "user_and_group", "b_path"], ["orig_gid", "gid"], ["diff", "orig_gid"]], "orig_uid": [["orig_uid", "orig_gid", "self", "user_and_group", "b_path"]], "path": [["path", "os", "path", "expanduser", "os", "path", "expandvars", "path"], ["b_path", "to_bytes", "path", "errors"], ["self", "fail_json", "path", "path", "msg", "group"], ["self", "fail_json", "path", "path", "msg"]]}, "name": "set_group_if_different", "params": {"changed": "", "diff": "", "group": "", "path": "", "self": ""}, "params_descr": {"changed": "", "diff": "", "group": "", "path": "", "self": ""}, "params_occur": {"changed": [["changed", "True"]], "diff": [["diff", "None"], ["diff", "orig_gid"], ["diff", "gid"]], "group": [["group", "None"], ["gid", "int", "group"], ["gid", "grp", "getgrnam", "group", "gr_gid"], ["self", "fail_json", "path", "path", "msg", "group"]], "path": [["path", "os", "path", "expanduser", "os", "path", "expandvars", "path"], ["b_path", "to_bytes", "path", "errors"], ["self", "fail_json", "path", "path", "msg", "group"], ["self", "fail_json", "path", "path", "msg"]], "self": [["orig_uid", "orig_gid", "self", "user_and_group", "b_path"], ["self", "fail_json", "path", "path", "msg", "group"], ["self", "check_mode"], ["self", "fail_json", "path", "path", "msg"]]}, "params_p": {"args": [], "changed": [["bool", 0.7125036671536962], ["Optional[bool]", 0.09360394392804569]], "diff": [["Optional[str]", 0.3818082937714302], ["str", 0.18017015689493887], ["List[str]", 0.08713266543274349]], "group": [["Optional[int]", 0.309581257369464], ["str", 0.2978645226765111], ["Optional[str]", 0.20233675517539126], ["Optional[List[\"Address\"]]", 0.10404116062154177], ["bool", 0.08617630415709192]], "kwargs": [], "path": [["str", 0.7915721491563062]], "self": []}, "q_name": "AnsibleModule.set_group_if_different", "ret_exprs": ["return changed", "return True", "return changed"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"b_path": "", "changed": "", "gid": "", "orig_gid": "", "orig_uid": "", "path": ""}, "variables_p": {"b_path": [["bytes", 0.41580555141782966]], "changed": [["Dict[str, Any]", 0.49999999999999994], ["List[bool]", 0.19999999999999998], ["Dict[str, bool]", 0.09999999999999999], ["Dict[str, Dict[str, Any]]", 0.09999999999999999], ["float", 0.09999999999999999]], "gid": [["str", 0.3090032908074864], ["int", 0.20359888268660037], ["datetime.datetime.timedelta", 0.12376461262607298], ["datetime.datetime", 0.0958854992911308], ["slice", 0.08872588236341507]], "orig_gid": [["str", 1.0000000000000002]], "orig_uid": [["str", 1.0]], "path": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[987, 4], [1059, 22]], "fn_var_ln": {"b_path": [[989, 8], [989, 14]], "changed": [[1058, 16], [1058, 23]], "e": [[1051, 16], [1051, 17]], "mode": [[1000, 20], [1000, 24]], "new_mode": [[1055, 12], [1055, 20]], "new_underlying_stat": [[1039, 24], [1039, 43]], "path_stat": [[1054, 12], [1054, 21]], "prev_mode": [[1011, 8], [1011, 17]], "underlying_stat": [[1037, 24], [1037, 39]]}, "fn_var_occur": {"b_path": [["b_path", "to_bytes", "path", "errors"], ["b_path", "os", "path", "expanduser", "os", "path", "expandvars", "b_path"], ["path_stat", "os", "lstat", "b_path"], ["os", "lchmod", "b_path", "mode"], ["os", "path", "islink", "b_path"], ["os", "chmod", "b_path", "mode"], ["underlying_stat", "os", "stat", "b_path"], ["os", "chmod", "b_path", "mode"], ["new_underlying_stat", "os", "stat", "b_path"], ["os", "chmod", "b_path", "stat", "S_IMODE", "underlying_stat", "st_mode"], ["os", "path", "islink", "b_path", "e", "errno", "errno", "EPERM"], ["path_stat", "os", "lstat", "b_path"]], "changed": [["changed", "True"]], "e": [["e", "get_exception"], ["self", "fail_json", "path", "path", "msg", "details", "str", "e"], ["e", "get_exception"], ["os", "path", "islink", "b_path", "e", "errno", "errno", "EPERM"], ["e", "errno", "errno", "ENOENT", "errno", "ELOOP"], ["e", "get_exception"], ["self", "fail_json", "path", "path", "msg", "details", "str", "e"]], "mode": [["mode", "None"], ["isinstance", "mode", "int"], ["mode", "int", "mode"], ["mode", "self", "_symbolic_mode_to_octal", "path_stat", "mode"], ["mode", "stat", "S_IMODE", "mode"], ["self", "fail_json", "path", "path", "msg", "details", "mode"], ["prev_mode", "mode"], ["diff", "mode"], ["os", "lchmod", "b_path", "mode"], ["os", "chmod", "b_path", "mode"], ["os", "chmod", "b_path", "mode"]], "new_mode": [["new_mode", "stat", "S_IMODE", "path_stat", "st_mode"], ["new_mode", "prev_mode"]], "new_underlying_stat": [["new_underlying_stat", "os", "stat", "b_path"], ["underlying_stat", "st_mode", "new_underlying_stat", "st_mode"]], "path_stat": [["path_stat", "os", "lstat", "b_path"], ["mode", "self", "_symbolic_mode_to_octal", "path_stat", "mode"], ["prev_mode", "stat", "S_IMODE", "path_stat", "st_mode"], ["path_stat", "os", "lstat", "b_path"], ["new_mode", "stat", "S_IMODE", "path_stat", "st_mode"]], "prev_mode": [["prev_mode", "stat", "S_IMODE", "path_stat", "st_mode"], ["prev_mode", "mode"], ["diff", "prev_mode"], ["new_mode", "prev_mode"]], "underlying_stat": [["underlying_stat", "os", "stat", "b_path"], ["underlying_stat", "st_mode", "new_underlying_stat", "st_mode"], ["os", "chmod", "b_path", "stat", "S_IMODE", "underlying_stat", "st_mode"]]}, "name": "set_mode_if_different", "params": {"changed": "", "diff": "", "mode": "", "path": "", "self": ""}, "params_descr": {"changed": "", "diff": "", "mode": "", "path": "", "self": ""}, "params_occur": {"changed": [["changed", "True"]], "diff": [["diff", "None"], ["diff", "prev_mode"], ["diff", "mode"]], "mode": [["mode", "None"], ["isinstance", "mode", "int"], ["mode", "int", "mode"], ["mode", "self", "_symbolic_mode_to_octal", "path_stat", "mode"], ["mode", "stat", "S_IMODE", "mode"], ["self", "fail_json", "path", "path", "msg", "details", "mode"], ["prev_mode", "mode"], ["diff", "mode"], ["os", "lchmod", "b_path", "mode"], ["os", "chmod", "b_path", "mode"], ["os", "chmod", "b_path", "mode"]], "path": [["b_path", "to_bytes", "path", "errors"], ["b_path", "os", "path", "expanduser", "os", "path", "expandvars", "b_path"], ["self", "fail_json", "path", "path", "msg", "details", "str", "e"], ["self", "fail_json", "path", "path", "msg", "details", "mode"], ["os", "path", "islink", "b_path"], ["os", "path", "islink", "b_path", "e", "errno", "errno", "EPERM"], ["self", "fail_json", "path", "path", "msg", "details", "str", "e"]], "self": [["mode", "self", "_symbolic_mode_to_octal", "path_stat", "mode"], ["self", "fail_json", "path", "path", "msg", "details", "str", "e"], ["self", "fail_json", "path", "path", "msg", "details", "mode"], ["self", "check_mode"], ["self", "fail_json", "path", "path", "msg", "details", "str", "e"]]}, "params_p": {"args": [], "changed": [["bool", 0.9143967222378458], ["Optional[bool]", 0.08560327776215419]], "diff": [["Optional[Set[int]]", 0.6825162136662323], ["Optional[str]", 0.20809453157966956]], "kwargs": [], "mode": [["Optional[int]", 0.7356602301480314], ["Optional[str]", 0.16897482000540726], ["int", 0.09536494984656142]], "path": [["str", 0.5043210458371521], ["Iterable[Any]", 0.08687785246017794]], "self": []}, "q_name": "AnsibleModule.set_mode_if_different", "ret_exprs": ["return changed", "return True", "return changed"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999998]], "variables": {"b_path": "", "changed": "", "e": "", "mode": "", "new_mode": "", "new_underlying_stat": "", "path_stat": "", "prev_mode": "", "underlying_stat": ""}, "variables_p": {"b_path": [["str", 0.8979105397741661], ["Optional[str]", 0.10208946022583393]], "changed": [["Dict[str, Any]", 0.49999999999999994], ["List[bool]", 0.19999999999999998], ["Dict[str, bool]", 0.09999999999999999], ["Dict[str, Dict[str, Any]]", 0.09999999999999999], ["float", 0.09999999999999999]], "e": [["int", 0.49697942137020024], ["bytes", 0.12454497685705748], ["str", 0.09657241308343609]], "mode": [["int", 0.7252761648787396], ["Optional[int]", 0.1807653966073135], ["str", 0.09395843851394682]], "new_mode": [["int", 0.6377876164425389], ["List[None]", 0.19123854202809762], ["str", 0.1709738415293633]], "new_underlying_stat": [["int", 0.9119102170965879], ["str", 0.08808978290341221]], "path_stat": [["TextIO", 0.39185987511595327], ["os.stat_result", 0.11644133423219429], ["bytes", 0.09983891553589916], ["str", 0.09796496877898832], ["deque", 0.09796496877898832], ["Type[Callable[[None], Any]]", 0.09796496877898832]], "prev_mode": [["int", 0.2884307892454997], ["str", 0.1865814263181747], ["List[str]", 0.10266539429013095], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10246523968161603], ["Dict[str, str]", 0.09469731580884674], ["Dict[str, int]", 0.08692046030770877]], "underlying_stat": [["int", 0.29017152991808753]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1061, 4], [1080, 23]], "fn_var_ln": {"match": [[1066, 12], [1066, 17]], "mode_re": [[1064, 8], [1064, 15]], "mode_to_apply": [[1076, 20], [1076, 33]], "new_mode": [[1077, 20], [1077, 28]], "operator": [[1069, 16], [1069, 24]], "perms": [[1070, 16], [1070, 21]], "users": [[1073, 20], [1073, 25]]}, "fn_var_occur": {"match": [["match", "mode_re", "match", "mode"], ["users", "match", "group"], ["operator", "match", "group"], ["perms", "match", "group"]], "mode_re": [["mode_re", "re", "compile"], ["match", "mode_re", "match", "mode"]], "mode_to_apply": [["mode_to_apply", "self", "_get_octal_mode_from_symbolic_perms", "path_stat", "user", "perms"], ["new_mode", "self", "_apply_operation_to_mode", "user", "operator", "mode_to_apply", "new_mode"]], "new_mode": [["new_mode", "stat", "S_IMODE", "path_stat", "st_mode"], ["new_mode", "self", "_apply_operation_to_mode", "user", "operator", "mode_to_apply", "new_mode"]], "operator": [["operator", "match", "group"], ["new_mode", "self", "_apply_operation_to_mode", "user", "operator", "mode_to_apply", "new_mode"]], "perms": [["perms", "match", "group"], ["mode_to_apply", "self", "_get_octal_mode_from_symbolic_perms", "path_stat", "user", "perms"]], "users": [["users", "match", "group"]]}, "name": "_symbolic_mode_to_octal", "params": {"path_stat": "", "self": "", "symbolic_mode": ""}, "params_descr": {"path_stat": "", "self": "", "symbolic_mode": ""}, "params_occur": {"path_stat": [["new_mode", "stat", "S_IMODE", "path_stat", "st_mode"], ["mode_to_apply", "self", "_get_octal_mode_from_symbolic_perms", "path_stat", "user", "perms"]], "self": [["mode_to_apply", "self", "_get_octal_mode_from_symbolic_perms", "path_stat", "user", "perms"], ["new_mode", "self", "_apply_operation_to_mode", "user", "operator", "mode_to_apply", "new_mode"]], "symbolic_mode": [["symbolic_mode", "split"]]}, "params_p": {"args": [], "kwargs": [], "path_stat": [["str", 0.3036601357050168], ["int", 0.2928201440708128], ["utils.types.Vec3D", 0.09897423877379016]], "self": [], "symbolic_mode": [["str", 0.5789102766921], ["Optional[str]", 0.22058422571906666], ["bool", 0.10491843512874278], ["Dict[str, Any]", 0.09558706246009072]]}, "q_name": "AnsibleModule._symbolic_mode_to_octal", "ret_exprs": ["return new_mode"], "ret_type": "", "ret_type_p": [["List[str]", 0.1925799176358633], ["str", 0.17614922018115775], ["Dict[str, Any]", 0.10040294676055335], ["int", 0.09460658233629386]], "variables": {"match": "", "mode_re": "", "mode_to_apply": "", "new_mode": "", "operator": "", "perms": "", "users": ""}, "variables_p": {"match": [["Pattern[str]", 0.9999999999999999]], "mode_re": [["str", 0.9190362968261818], ["Optional[Match[str]]", 0.08096370317381793]], "mode_to_apply": [["Pattern[str]", 0.10814790434459579], ["\"OrderedDict[str, float]\"", 0.104746681262194], ["dict", 0.10458054998289396], ["frozenset[Any]", 0.09408623375462881]], "new_mode": [["int", 0.35162355043858173], ["Dict[str, Any]", 0.19731682652708882]], "operator": [["str", 0.2932395675036426], ["datetime.datetime.timedelta", 0.22353666701488145], ["int", 0.18481104641404597]], "perms": [["int", 0.6839138881277392], ["str", 0.20073686802991703], ["DefaultDict[Any, int]", 0.1153492438423437]], "users": [["Pattern[str]", 0.8046160844342451], ["str", 0.108318081770021], ["Dict[str, str]", 0.08706583379573389]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1082, 4], [1095, 23]], "fn_var_ln": {"inverse_mask": [[1089, 12], [1089, 24]], "mask": [[1086, 30], [1086, 34]], "new_mode": [[1094, 12], [1094, 20]]}, "fn_var_occur": {"inverse_mask": [["inverse_mask", "mask", "PERM_BITS"], ["new_mode", "current_mode", "inverse_mask", "mode_to_apply"]], "mask": [["inverse_mask", "mask", "PERM_BITS"]], "new_mode": [["new_mode", "current_mode", "inverse_mask", "mode_to_apply"], ["new_mode", "current_mode", "mode_to_apply"], ["new_mode", "current_mode", "current_mode", "mode_to_apply"]]}, "name": "_apply_operation_to_mode", "params": {"current_mode": "", "mode_to_apply": "", "operator": "", "self": "", "user": ""}, "params_descr": {"current_mode": "", "mode_to_apply": "", "operator": "", "self": "", "user": ""}, "params_occur": {"current_mode": [["new_mode", "current_mode", "inverse_mask", "mode_to_apply"], ["new_mode", "current_mode", "mode_to_apply"], ["new_mode", "current_mode", "current_mode", "mode_to_apply"]], "mode_to_apply": [["new_mode", "current_mode", "inverse_mask", "mode_to_apply"], ["new_mode", "current_mode", "mode_to_apply"], ["new_mode", "current_mode", "current_mode", "mode_to_apply"]], "operator": [], "self": [], "user": []}, "params_p": {"args": [], "current_mode": [["rouver.types.StartResponse", 0.21490177309075176], ["str", 0.1871332928953575], ["Dict[int, dict]", 0.1063508686771187], ["int", 0.09680207980180484], ["Optional[Dict]", 0.09437563947954719]], "kwargs": [], "mode_to_apply": [["rouver.types.StartResponse", 0.21490177309075176], ["str", 0.1871332928953575], ["Dict[int, dict]", 0.1063508686771187], ["int", 0.09680207980180484], ["Optional[Dict]", 0.09437563947954719]], "operator": [["bool", 0.48822503414331736], ["int", 0.21067979771292727], ["bytes", 0.10533989885646364], ["list", 0.09041537043082815]], "self": [], "user": [["bool", 0.48822503414331736], ["int", 0.21067979771292727], ["bytes", 0.10533989885646364], ["list", 0.09041537043082815]]}, "q_name": "AnsibleModule._apply_operation_to_mode", "ret_exprs": ["return new_mode"], "ret_type": "", "ret_type_p": [["dict", 0.17631078048675808], ["Iterable[Type]", 0.10600577920841625], ["Sequence[str]", 0.09652613600364898], ["str", 0.09364722830393477]], "variables": {"inverse_mask": "", "mask": "", "new_mode": ""}, "variables_p": {"inverse_mask": [["Sequence[str]", 0.10061559531146806], ["str", 0.09795407588175452], ["Dict[Any, str]", 0.09779393467231096], ["bool", 0.09689066295810314]], "mask": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "new_mode": [["str", 0.49165357977952995], ["Dict[str, List[str]]", 0.11014681013969319], ["int", 0.0943594570784864], ["dict", 0.09278310490658304]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1097, 4], [1154, 42]], "fn_var_ln": {"X_perms": [[1113, 12], [1113, 19]], "apply_X_permission": [[1102, 8], [1102, 26]], "has_x_permissions": [[1101, 8], [1101, 25]], "is_directory": [[1100, 8], [1100, 20]], "or_reduce": [[1153, 8], [1153, 17]], "prev_mode": [[1098, 8], [1098, 17]], "user_perms_to_modes": [[1119, 8], [1119, 27]]}, "fn_var_occur": {"X_perms": [["X_perms", "stat", "S_IXUSR", "stat", "S_IXGRP", "stat", "S_IXOTH"], ["X_perms", "items"]], "apply_X_permission": [["apply_X_permission", "is_directory", "has_x_permissions"]], "has_x_permissions": [["has_x_permissions", "prev_mode", "EXEC_PERM_BITS"], ["apply_X_permission", "is_directory", "has_x_permissions"]], "is_directory": [["is_directory", "stat", "S_ISDIR", "path_stat", "st_mode"], ["apply_X_permission", "is_directory", "has_x_permissions"]], "or_reduce": [["or_reduce", "mode", "perm", "mode", "user_perms_to_modes", "user", "perm"], ["reduce", "or_reduce", "perms"]], "prev_mode": [["prev_mode", "stat", "S_IMODE", "path_stat", "st_mode"], ["has_x_permissions", "prev_mode", "EXEC_PERM_BITS"], ["user_perms_to_modes", "stat", "S_IRUSR", "stat", "S_IWUSR", "stat", "S_IXUSR", "stat", "S_ISUID", "prev_mode", "stat", "S_IRWXU", "prev_mode", "stat", "S_IRWXG", "prev_mode", "stat", "S_IRWXO", "stat", "S_IRGRP", "stat", "S_IWGRP", "stat", "S_IXGRP", "stat", "S_ISGID", "prev_mode", "stat", "S_IRWXU", "prev_mode", "stat", "S_IRWXG", "prev_mode", "stat", "S_IRWXO", "stat", "S_IROTH", "stat", "S_IWOTH", "stat", "S_IXOTH", "stat", "S_ISVTX", "prev_mode", "stat", "S_IRWXU", "prev_mode", "stat", "S_IRWXG", "prev_mode", "stat", "S_IRWXO"]], "user_perms_to_modes": [["user_perms_to_modes", "stat", "S_IRUSR", "stat", "S_IWUSR", "stat", "S_IXUSR", "stat", "S_ISUID", "prev_mode", "stat", "S_IRWXU", "prev_mode", "stat", "S_IRWXG", "prev_mode", "stat", "S_IRWXO", "stat", "S_IRGRP", "stat", "S_IWGRP", "stat", "S_IXGRP", "stat", "S_ISGID", "prev_mode", "stat", "S_IRWXU", "prev_mode", "stat", "S_IRWXG", "prev_mode", "stat", "S_IRWXO", "stat", "S_IROTH", "stat", "S_IWOTH", "stat", "S_IXOTH", "stat", "S_ISVTX", "prev_mode", "stat", "S_IRWXU", "prev_mode", "stat", "S_IRWXG", "prev_mode", "stat", "S_IRWXO"], ["user_perms_to_modes", "key", "update", "value"], ["or_reduce", "mode", "perm", "mode", "user_perms_to_modes", "user", "perm"]]}, "name": "_get_octal_mode_from_symbolic_perms", "params": {"path_stat": "", "perms": "", "self": "", "user": ""}, "params_descr": {"path_stat": "", "perms": "", "self": "", "user": ""}, "params_occur": {"path_stat": [["prev_mode", "stat", "S_IMODE", "path_stat", "st_mode"], ["is_directory", "stat", "S_ISDIR", "path_stat", "st_mode"]], "perms": [["reduce", "or_reduce", "perms"]], "self": [], "user": [["or_reduce", "mode", "perm", "mode", "user_perms_to_modes", "user", "perm"]]}, "params_p": {"args": [], "kwargs": [], "path_stat": [["int", 0.1951987649994351], ["Callable", 0.11522046826770009], ["Optional[Tuple[int, int]]", 0.09625380761012238], ["Dict[str, Any]", 0.09387229812156851], ["Optional[str]", 0.09251764000360424]], "perms": [["str", 0.2957526030357062], ["bool", 0.2459084925326752], ["List[str]", 0.0905807511815496], ["Callable", 0.08161837412936948]], "self": [], "user": [["Optional[str]", 0.10445367971047084], ["bool", 0.10445367971047084], ["Dict[str, str]", 0.09036708076373604]]}, "q_name": "AnsibleModule._get_octal_mode_from_symbolic_perms", "ret_exprs": ["return reduce(or_reduce, perms, 0)"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.05524870041291584], ["str", 0.03359940996885381]], "variables": {"X_perms": "", "apply_X_permission": "", "has_x_permissions": "", "is_directory": "", "or_reduce": "", "prev_mode": "", "user_perms_to_modes": ""}, "variables_p": {"X_perms": [["str", 0.20767153589835846], ["int", 0.1887017903841603], ["bytes", 0.10820481578125428], ["Tuple[Any, int]", 0.09238960976104503]], "apply_X_permission": [["int", 0.7400331071680446], ["Pattern[str]", 0.13699784903547213], ["Type[List[Any]]", 0.12296904379648341]], "has_x_permissions": [["int", 0.8493122125412726], ["List[str]", 0.08016550802961987], ["float", 0.0705222794291076]], "is_directory": [["int", 0.5085923718374584], ["bytes", 0.20218945916772224], ["bool", 0.09274392932845617], ["float", 0.09241382489647963]], "or_reduce": [["bytes", 0.0821086228571934]], "prev_mode": [["int", 0.7088067386675488], ["str", 0.19383740792211449], ["float", 0.09735585341033662]], "user_perms_to_modes": [["bytes", 0.19717953641291566], ["List[Tuple[Any, Any, None]]", 0.18006740602283797], ["Dict[str, str]", 0.14587900139270454], ["Dict[str, Union[None, int, str]]", 0.11330957793855678], ["Dict[str, Literal[-1]]", 0.09961656649259876], ["Dict[bytes, int]", 0.08687914187875821], ["str", 0.08555011107972592]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1156, 4], [1170, 22]], "fn_var_ln": {"changed": [[1167, 8], [1167, 15]]}, "fn_var_occur": {"changed": [["changed", "self", "set_context_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_owner_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_group_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_mode_if_different", "file_args", "file_args", "changed", "diff"]]}, "name": "set_fs_attributes_if_different", "params": {"changed": "", "diff": "", "file_args": "", "self": ""}, "params_descr": {"changed": "", "diff": "", "file_args": "", "self": ""}, "params_occur": {"changed": [["changed", "self", "set_context_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_owner_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_group_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_mode_if_different", "file_args", "file_args", "changed", "diff"]], "diff": [["changed", "self", "set_context_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_owner_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_group_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_mode_if_different", "file_args", "file_args", "changed", "diff"]], "file_args": [["changed", "self", "set_context_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_owner_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_group_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_mode_if_different", "file_args", "file_args", "changed", "diff"]], "self": [["changed", "self", "set_context_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_owner_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_group_if_different", "file_args", "file_args", "changed", "diff"], ["changed", "self", "set_mode_if_different", "file_args", "file_args", "changed", "diff"]]}, "params_p": {"args": [], "changed": [], "diff": [], "file_args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.set_fs_attributes_if_different", "ret_exprs": ["return changed"], "ret_type": "", "ret_type_p": [["str", 0.512881032270942], ["int", 0.13897113934485827]], "variables": {"changed": ""}, "variables_p": {"changed": [["str", 0.8984149916686103]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1172, 4], [1173, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "set_directory_attributes_if_different", "params": {"changed": "", "diff": "", "file_args": "", "self": ""}, "params_descr": {"changed": "", "diff": "", "file_args": "", "self": ""}, "params_occur": {"changed": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]], "diff": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]], "file_args": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]], "self": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]]}, "params_p": {"args": [], "changed": [["str", 0.690591042178435], ["Optional[str]", 0.10357445121685753]], "diff": [["str", 0.690591042178435], ["Optional[str]", 0.10357445121685753]], "file_args": [["str", 0.690591042178435], ["Optional[str]", 0.10357445121685753]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.set_directory_attributes_if_different", "ret_exprs": ["return self.set_fs_attributes_if_different(file_args, changed, diff)"], "ret_type": "", "ret_type_p": [["str", 0.40760468094056285], ["int", 0.10175968316536835]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1175, 4], [1176, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "set_file_attributes_if_different", "params": {"changed": "", "diff": "", "file_args": "", "self": ""}, "params_descr": {"changed": "", "diff": "", "file_args": "", "self": ""}, "params_occur": {"changed": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]], "diff": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]], "file_args": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]], "self": [["self", "set_fs_attributes_if_different", "file_args", "changed", "diff"]]}, "params_p": {"args": [], "changed": [["str", 0.9033854075770485]], "diff": [["str", 0.9033854075770485]], "file_args": [["str", 0.9033854075770485]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.set_file_attributes_if_different", "ret_exprs": ["return self.set_fs_attributes_if_different(file_args, changed, diff)"], "ret_type": "", "ret_type_p": [["str", 0.4051546967200239], ["bool", 0.10702459833114487], ["Optional[Dict[str, str]]", 0.0933656482767848]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "for results that are files, supplement the info about the file", "long_descr": "in the return path with stats about the file path.", "ret": null}, "fn_lc": [[1178, 4], [1218, 21]], "fn_var_ln": {"b_path": [[1187, 8], [1187, 14]], "gid": [[1189, 18], [1189, 21]], "group": [[1199, 16], [1199, 21]], "path": [[1184, 8], [1184, 12]], "st": [[1202, 12], [1202, 14]], "uid": [[1189, 13], [1189, 16]], "user": [[1195, 16], [1195, 20]]}, "fn_var_occur": {"b_path": [["b_path", "to_bytes", "path", "errors"], ["os", "path", "exists", "b_path"], ["st", "os", "lstat", "b_path"], ["os", "path", "islink", "b_path"], ["os", "path", "isdir", "b_path"], ["os", "stat", "b_path", "st_nlink"]], "gid": [["uid", "gid", "self", "user_and_group", "path"], ["kwargs", "gid"], ["group", "grp", "getgrgid", "gid"], ["group", "str", "gid"]], "group": [["group", "grp", "getgrgid", "gid"], ["group", "str", "gid"], ["kwargs", "group"]], "path": [["path", "kwargs", "get", "kwargs", "get", "None"], ["path", "None"], ["b_path", "to_bytes", "path", "errors"], ["os", "path", "exists", "b_path"], ["uid", "gid", "self", "user_and_group", "path"], ["os", "path", "islink", "b_path"], ["os", "path", "isdir", "b_path"], ["kwargs", "join", "self", "selinux_context", "path"]], "st": [["st", "os", "lstat", "b_path"], ["kwargs", "stat", "S_IMODE", "st", "stat", "ST_MODE"], ["kwargs", "st", "stat", "ST_SIZE"]], "uid": [["uid", "gid", "self", "user_and_group", "path"], ["kwargs", "uid"], ["user", "pwd", "getpwuid", "uid"], ["user", "str", "uid"]], "user": [["user", "pwd", "getpwuid", "uid"], ["user", "str", "uid"], ["kwargs", "user"]]}, "name": "add_path_info", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [["path", "kwargs", "get", "kwargs", "get", "None"], ["kwargs", "uid"], ["kwargs", "gid"], ["kwargs", "user"], ["kwargs", "group"], ["kwargs", "stat", "S_IMODE", "st", "stat", "ST_MODE"], ["kwargs", "join", "self", "selinux_context", "path"], ["kwargs", "st", "stat", "ST_SIZE"]], "self": [["uid", "gid", "self", "user_and_group", "path"], ["HAVE_SELINUX", "self", "selinux_enabled"], ["kwargs", "join", "self", "selinux_context", "path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.add_path_info", "ret_exprs": ["return kwargs", "return kwargs"], "ret_type": "", "ret_type_p": [["dict", 0.2715996783265377], ["Dict[str, bool]", 0.09767121518709498], ["Mapping[str, Any]", 0.08787890403679213]], "variables": {"b_path": "", "gid": "", "group": "", "path": "", "st": "", "uid": "", "user": ""}, "variables_p": {"b_path": [["str", 0.7126683330587863]], "gid": [["int", 0.18299407401588375], ["float", 0.12422715290427207], ["Optional[int]", 0.09701568394859517], ["str", 0.09701568394859517], ["Type[List[Any]]", 0.0915409718377027]], "group": [["Pattern[str]", 0.21685764592283768], ["str", 0.19425765305481024], ["int", 0.18745353189573546], ["itertools.cycle[str]", 0.11539673569209352], ["bytes", 0.11294558954902366], ["List[str]", 0.07936207793763178]], "path": [["str", 0.49815487408115955], ["List[str]", 0.2012794282591422], ["dict", 0.0976467470458025], ["Tuple[str, str]", 0.09452719116867206]], "st": [["str", 0.2865322138042312], ["int", 0.2581769803774051], ["dict", 0.18408933591409132], ["Dict[str, Tuple[int, str]]", 0.09513500525380968], ["Dict[str, Dict[str, str]]", 0.08895222858013739], ["Dict[str, Union[Any, Any, Any, str]]", 0.08711423607032533]], "uid": [["str", 1.0]], "user": [["str", 0.5736994403759013], ["list", 0.1749766405830881], ["int", 0.14662133762273016]]}}, {"docstring": {"func": "Uses the locale module to test the currently set locale", "long_descr": "(per the LANG and LC_CTYPE environment settings)", "ret": null}, "fn_lc": [[1220, 4], [1239, 114]], "fn_var_ln": {"e": [[1238, 12], [1238, 13]]}, "fn_var_occur": {"e": [["e", "get_exception"], ["self", "fail_json", "msg", "e"]]}, "name": "_check_locale", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "fail_json", "msg", "e"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._check_locale", "ret_exprs": [], "ret_type": "", "variables": {"e": ""}, "variables_p": {"e": [["int", 0.5142290520722684], ["str", 0.18392448466438618], ["bool", 0.12707653271947988], ["Dict[int, str]", 0.0897751440300163], ["Dict[str, Any]", 0.08499478651384909]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1241, 4], [1262, 30]], "fn_var_ln": {"aliases": [[1246, 12], [1246, 19]], "aliases_results": [[1243, 8], [1243, 23]], "default": [[1247, 12], [1247, 19]], "required": [[1248, 12], [1248, 20]]}, "fn_var_occur": {"aliases": [["aliases", "v", "get", "None"], ["aliases", "None"], ["isinstance", "aliases", "SEQUENCETYPE", "isinstance", "aliases", "binary_type", "text_type"]], "aliases_results": [["aliases_results", "alias", "k"]], "default": [["default", "v", "get", "None"], ["default", "None", "required"]], "required": [["required", "v", "get", "False"], ["default", "None", "required"]]}, "name": "_handle_aliases", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "argument_spec", "items"], ["self", "_legal_inputs", "append", "k"], ["self", "_legal_inputs", "append", "alias"], ["alias", "self", "params"], ["self", "params", "k", "self", "params", "alias"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._handle_aliases", "ret_exprs": ["return aliases_results"], "ret_type": "", "ret_type_p": [["List[int]", 0.22008160840319407], ["Dict[str, int]", 0.11630234793073385], ["List[dict]", 0.1031400789197922]], "variables": {"aliases": "", "aliases_results": "", "default": "", "required": ""}, "variables_p": {"aliases": [["Type[str]", 0.14706286361779738]], "aliases_results": [["str", 0.23539409740616124], ["int", 0.19429443517950784], ["list", 0.19395788862963373], ["frozenset[str]", 0.18320180893184523], ["dict", 0.1030732477892715], ["Dict[str, Union[bool, str]]", 0.09007852206358045]], "default": [["str", 0.2921770809468012], ["Pattern[str]", 0.1235734824035095], ["OrderedDict[Any, Dict[str, Any]]", 0.10416975317209257], ["Dict[str, Union[int, str]]", 0.10193776200747842], ["int", 0.10095339217553592], ["Dict[str, str]", 0.09505405239390605]], "required": [["int", 0.14308961135733966], ["dict", 0.10912480826971899], ["List[Union[Any, Any]]", 0.10854263383972265]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1264, 4], [1303, 111]], "fn_var_ln": {"_debug": [[1275, 16], [1275, 27]], "_diff": [[1278, 16], [1278, 26]], "_name": [[1293, 16], [1293, 26]], "_selinux_special_fs": [[1284, 16], [1284, 40]], "_syslog_facility": [[1287, 16], [1287, 37]], "_verbosity": [[1281, 16], [1281, 31]], "ansible_version": [[1290, 16], [1290, 36]], "check_mode": [[1269, 16], [1269, 31]], "no_log": [[1272, 16], [1272, 27]]}, "fn_var_occur": {"_debug": [["self", "_debug", "self", "boolean", "v"]], "_diff": [["self", "_diff", "self", "boolean", "v"]], "_name": [["self", "_name", "v"], ["self", "exit_json", "skipped", "True", "msg", "self", "_name"]], "_selinux_special_fs": [["self", "_selinux_special_fs", "v"]], "_syslog_facility": [["self", "_syslog_facility"], ["self", "_syslog_facility", "v"]], "_verbosity": [["self", "_verbosity", "v"]], "ansible_version": [["self", "ansible_version", "v"]], "check_mode": [["self", "check_mode", "True"], ["self", "check_mode", "self", "supports_check_mode"]], "no_log": [["self", "no_log", "self", "boolean", "v"]]}, "name": "_check_arguments", "params": {"check_invalid_arguments": "", "self": ""}, "params_descr": {"check_invalid_arguments": "", "self": ""}, "params_occur": {"check_invalid_arguments": [["check_invalid_arguments", "k", "self", "_legal_inputs"]], "self": [["self", "_syslog_facility"], ["list", "self", "params", "items"], ["self", "check_mode", "True"], ["self", "no_log", "self", "boolean", "v"], ["self", "_debug", "self", "boolean", "v"], ["self", "_diff", "self", "boolean", "v"], ["self", "_verbosity", "v"], ["self", "_selinux_special_fs", "v"], ["self", "_syslog_facility", "v"], ["self", "ansible_version", "v"], ["self", "_name", "v"], ["check_invalid_arguments", "k", "self", "_legal_inputs"], ["self", "fail_json", "msg", "k"], ["self", "params", "k"], ["self", "check_mode", "self", "supports_check_mode"], ["self", "exit_json", "skipped", "True", "msg", "self", "_name"]]}, "params_p": {"args": [], "check_invalid_arguments": [["str", 0.27420247482433374], ["Optional[str]", 0.17699094452882436], ["int", 0.12914517234953882]], "kwargs": [], "self": []}, "q_name": "AnsibleModule._check_arguments", "ret_exprs": [], "ret_type": "", "variables": {"_debug": "", "_diff": "", "_name": "", "_selinux_special_fs": "", "_syslog_facility": "", "_verbosity": "", "ansible_version": "", "check_mode": "", "no_log": ""}, "variables_p": {"_debug": [["str", 0.5929936723621188], ["Union[Literal[False], str]", 0.25427542798576624], ["bool", 0.07982824475630856], ["Optional[Match[str]]", 0.07290265489580655]], "_diff": [["str", 0.30000000000000004], ["Set[str]", 0.30000000000000004], ["List[int]", 0.1], ["int", 0.1]], "_name": [["str", 0.3313589388128785], ["Final", 0.2895135815352639], ["List[str]", 0.17015197487741493], ["Set[str]", 0.11089076236290439]], "_selinux_special_fs": [["int", 0.9999999999999999]], "_syslog_facility": [["int", 0.3], ["str", 0.19999999999999998], ["Tuple[int, int, int, int]", 0.09999999999999999], ["dict", 0.09999999999999999], ["List[str]", 0.09999999999999999], ["Tuple[Any, int]", 0.09999999999999999]], "_verbosity": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "ansible_version": [["str", 0.625714834255895], ["Pattern[str]", 0.25788898165113605], ["Optional[str]", 0.1163961840929689]], "check_mode": [["str", 1.0000000000000002]], "no_log": [["str", 0.8129876812862243], ["Dict[str, str]", 0.09915655504602824], ["dict", 0.0878557636677473]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1305, 4], [1310, 20]], "fn_var_ln": {"count": [[1306, 8], [1306, 13]]}, "fn_var_occur": {"count": []}, "name": "_count_terms", "params": {"check": "", "self": ""}, "params_descr": {"check": "", "self": ""}, "params_occur": {"check": [], "self": [["term", "self", "params"]]}, "params_p": {"args": [], "check": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "AnsibleModule._count_terms", "ret_exprs": ["return count"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"count": ""}, "variables_p": {"count": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1312, 4], [1318, 86]], "fn_var_ln": {"count": [[1316, 12], [1316, 17]]}, "fn_var_occur": {"count": [["count", "self", "_count_terms", "check"]]}, "name": "_check_mutually_exclusive", "params": {"self": "", "spec": ""}, "params_descr": {"self": "", "spec": ""}, "params_occur": {"self": [["count", "self", "_count_terms", "check"], ["self", "fail_json", "msg", "check"]], "spec": [["spec", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "spec": [["Optional[int]", 0.19999999999999996], ["Optional[List[Callable]]", 0.09999999999999998], ["str", 0.09999999999999998]]}, "q_name": "AnsibleModule._check_mutually_exclusive", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"count": ""}, "variables_p": {"count": [["int", 0.7], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1], ["bool", 0.1], ["Type[str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1320, 4], [1326, 92]], "fn_var_ln": {"count": [[1324, 12], [1324, 17]]}, "fn_var_occur": {"count": [["count", "self", "_count_terms", "check"]]}, "name": "_check_required_one_of", "params": {"self": "", "spec": ""}, "params_descr": {"self": "", "spec": ""}, "params_occur": {"self": [["count", "self", "_count_terms", "check"], ["self", "fail_json", "msg", "join", "check"]], "spec": [["spec", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "spec": [["T", 0.29008506015148405], ["Optional[str]", 0.21341843948512687], ["Optional[int]", 0.1385028733849996], ["List[str]", 0.08098788020839026], ["Optional[List[Callable]]", 0.0692514366924998]]}, "q_name": "AnsibleModule._check_required_one_of", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["mypy.types.Type", 0.08985016520051159]], "variables": {"count": ""}, "variables_p": {"count": [["int", 0.7], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1], ["bool", 0.1], ["Type[str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1328, 4], [1336, 89]], "fn_var_ln": {"counts": [[1332, 12], [1332, 18]], "non_zero": [[1333, 12], [1333, 20]]}, "fn_var_occur": {"counts": [["counts", "self", "_count_terms", "field", "field", "check"], ["non_zero", "c", "c", "counts", "c"]], "non_zero": [["non_zero", "c", "c", "counts", "c"], ["len", "non_zero"]]}, "name": "_check_required_together", "params": {"self": "", "spec": ""}, "params_descr": {"self": "", "spec": ""}, "params_occur": {"self": [["counts", "self", "_count_terms", "field", "field", "check"], ["self", "fail_json", "msg", "check"]], "spec": [["spec", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "spec": [["Optional[int]", 0.35630549676110873], ["Optional[str]", 0.30882378267804367], ["list", 0.09491188109304155]]}, "q_name": "AnsibleModule._check_required_together", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Dict[str, Dict[str, int]]", 0.2033701661285623], ["Dict[str, Any]", 0.10273859321502612], ["Sequence[str]", 0.09865500969970613], ["str", 0.0960720181850779]], "variables": {"counts": "", "non_zero": ""}, "variables_p": {"counts": [["Dict[str, str]", 0.3976490900673435], ["Dict[str, Union[Any, Any]]", 0.226135782729281], ["frozenset[str]", 0.10599119321165945], ["str", 0.09740097885637093], ["DefaultDict[Any, List[Any]]", 0.09054931769265173], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.08227363744269343]], "non_zero": [["List[str]", 0.1886929628054117], ["str", 0.12360626763837902], ["frozenset[Union[bytes, str]]", 0.11012170882230976], ["Tuple[str, str, str, str, str]", 0.10241847666725568], ["Iterator[str]", 0.09977077737615683], ["Tuple[str, str, str]", 0.09874480373583071], ["Tuple[List[Any], List[Any], List[Any]]", 0.0911526548748362], ["list", 0.0856797015083017]]}}, {"docstring": {"func": "ensure all required arguments are present ", "long_descr": null, "ret": null}, "fn_lc": [[1338, 4], [1346, 84]], "fn_var_ln": {"missing": [[1340, 8], [1340, 15]], "required": [[1342, 12], [1342, 20]]}, "fn_var_occur": {"missing": [["missing", "append", "k"], ["len", "missing"], ["self", "fail_json", "msg", "join", "missing"]], "required": [["required", "v", "get", "False"], ["required", "k", "self", "params"]]}, "name": "_check_required_arguments", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "argument_spec", "items"], ["required", "k", "self", "params"], ["self", "fail_json", "msg", "join", "missing"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._check_required_arguments", "ret_exprs": [], "ret_type": "", "variables": {"missing": "", "required": ""}, "variables_p": {"missing": [["list", 0.8020887191616226]], "required": [["Dict[str, str]", 0.38028991530634676], ["Dict[Any, int]", 0.12623080701955727], ["Dict[str, Dict[str, str]]", 0.11235432904200732], ["tuple", 0.08979972424004759]]}}, {"docstring": {"func": "ensure that parameters which conditionally required are present ", "long_descr": null, "ret": null}, "fn_lc": [[1348, 4], [1360, 112]], "fn_var_ln": {"count": [[1356, 20], [1356, 25]], "missing": [[1353, 12], [1353, 19]]}, "fn_var_occur": {"count": [["count", "self", "_count_terms", "check"]], "missing": [["missing", "append", "check"], ["len", "missing"], ["self", "fail_json", "msg", "key", "val", "join", "missing"]]}, "name": "_check_required_if", "params": {"self": "", "spec": ""}, "params_descr": {"self": "", "spec": ""}, "params_occur": {"self": [["key", "self", "params", "self", "params", "key", "val"], ["count", "self", "_count_terms", "check"], ["self", "fail_json", "msg", "key", "val", "join", "missing"]], "spec": [["spec", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "spec": [["Optional[int]", 0.19999999999999996], ["Optional[List[Callable]]", 0.09999999999999998], ["str", 0.09999999999999998]]}, "q_name": "AnsibleModule._check_required_if", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"count": "", "missing": ""}, "variables_p": {"count": [["int", 0.7], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1], ["bool", 0.1], ["Type[str]", 0.1]], "missing": [["list", 1.0]]}}, {"docstring": {"func": "ensure all arguments have the requested values, and there are no stray arguments ", "long_descr": null, "ret": null}, "fn_lc": [[1362, 4], [1395, 113]], "fn_var_ln": {"FALSEY": [[1376, 28], [1376, 34]], "TRUTHY": [[1385, 28], [1385, 34]], "choices": [[1365, 12], [1365, 19]], "choices_str": [[1391, 28], [1391, 39]], "lowered_choices": [[1384, 32], [1384, 47]], "msg": [[1392, 28], [1392, 31]], "overlap": [[1386, 28], [1386, 35]]}, "fn_var_occur": {"FALSEY": [["FALSEY", "frozenset", "BOOLEANS_FALSE"], ["overlap", "FALSEY", "intersection", "choices"]], "TRUTHY": [["TRUTHY", "frozenset", "BOOLEANS_TRUE"], ["overlap", "TRUTHY", "intersection", "choices"]], "choices": [["choices", "v", "get", "None"], ["choices", "None"], ["isinstance", "choices", "SEQUENCETYPE", "isinstance", "choices", "binary_type", "text_type"], ["self", "params", "k", "choices"], ["lowered_choices", "_lenient_lowercase", "choices"], ["overlap", "FALSEY", "intersection", "choices"], ["lowered_choices", "_lenient_lowercase", "choices"], ["overlap", "TRUTHY", "intersection", "choices"], ["self", "params", "k", "choices"], ["choices_str", "join", "to_native", "c", "c", "choices"], ["self", "fail_json", "msg", "k", "choices"]], "choices_str": [["choices_str", "join", "to_native", "c", "c", "choices"], ["msg", "k", "choices_str", "self", "params", "k"]], "lowered_choices": [["lowered_choices", "None"], ["lowered_choices", "_lenient_lowercase", "choices"], ["lowered_choices", "None"], ["lowered_choices", "_lenient_lowercase", "choices"]], "msg": [["msg", "k", "choices_str", "self", "params", "k"], ["self", "fail_json", "msg", "msg"], ["self", "fail_json", "msg", "k", "choices"]], "overlap": [["overlap", "FALSEY", "intersection", "choices"], ["len", "overlap"], ["self", "params", "k", "overlap"], ["overlap", "TRUTHY", "intersection", "choices"], ["len", "overlap"], ["self", "params", "k", "overlap"]]}, "name": "_check_argument_values", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "argument_spec", "items"], ["k", "self", "params"], ["self", "params", "k", "choices"], ["self", "params", "k"], ["self", "params", "k", "overlap"], ["self", "params", "k"], ["self", "params", "k", "overlap"], ["self", "params", "k", "choices"], ["msg", "k", "choices_str", "self", "params", "k"], ["self", "fail_json", "msg", "msg"], ["self", "fail_json", "msg", "k", "choices"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._check_argument_values", "ret_exprs": [], "ret_type": "", "variables": {"FALSEY": "", "TRUTHY": "", "choices": "", "choices_str": "", "lowered_choices": "", "msg": "", "overlap": ""}, "variables_p": {"FALSEY": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "TRUTHY": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "choices": [["str", 0.20119903411317552], ["Dict[str, str]", 0.18819397900477272], ["Union[Literal, Literal]", 0.12126745225050732], ["List[Dict[str, Any]]", 0.1127483785306329], ["Set[str]", 0.09160364134833056], ["Dict[Any, Union[int, str]]", 0.09160364134833056], ["Dict[Any, float]", 0.09160364134833056]], "choices_str": [["str", 0.3979826118168235], ["Optional[str]", 0.09662083335638941], ["Dict[str, Tuple[Any, Any]]", 0.09593552485036996], ["dict", 0.09518793581540454]], "lowered_choices": [["str", 0.2627613024785648], ["Optional[str]", 0.10834047808341082], ["List[int]", 0.10752353597039685], ["Tuple[int]", 0.09086529215884168], ["Optional[float]", 0.0838671927397476]], "msg": [["str", 0.2768906115686083], ["dict", 0.19363588996767744], ["Dict[str, Union[Any, Any, Any]]", 0.1120016311519959], ["List[str]", 0.10302334344623108]], "overlap": [["List[List[Any]]", 0.1275625789896136], ["str", 0.11456303700147183], ["Dict[int, str]", 0.09795852778123566], ["Dict[str, int]", 0.0973702475540412], ["dict", 0.09620379052547663], ["list", 0.0941274050930314], ["float", 0.09360593104707789]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1397, 4], [1424, 24]], "fn_var_ln": {"e": [[1421, 12], [1421, 13]], "result": [[1415, 12], [1415, 18]]}, "fn_var_occur": {"e": [["e", "get_exception"], ["value", "e"]], "result": [["result", "literal_eval", "value"], ["result", "None"]]}, "name": "safe_eval", "params": {"include_exceptions": "", "locals": "", "self": "", "value": ""}, "params_descr": {"include_exceptions": "", "locals": "", "self": "", "value": ""}, "params_occur": {"include_exceptions": [], "locals": [], "self": [], "value": [["isinstance", "value", "string_types"], ["value", "None"], ["re", "search", "value"], ["value", "None"], ["re", "search", "value"], ["value", "None"], ["result", "literal_eval", "value"], ["value", "e"]]}, "params_p": {"args": [], "include_exceptions": [["bool", 0.3368677085816467], ["int", 0.28905277128507567], ["Dict[str, Any]", 0.1053357671113455]], "kwargs": [], "locals": [["bool", 0.3368677085816467], ["int", 0.28905277128507567], ["Dict[str, Any]", 0.1053357671113455]], "self": [], "value": [["T", 0.189765350836172], ["Union[type, Tuple[type, ...]]", 0.10561732666839618], ["Optional[Any]", 0.09712970598293286], ["Hashable", 0.09340861892043478], ["float", 0.08939308928947932], ["Iterable", 0.0887168862368148], ["datetime.datetime", 0.08465990919549589], ["Optional[object]", 0.08334405091112561]]}, "q_name": "AnsibleModule.safe_eval", "ret_exprs": ["return (value, None)", "return value", "return (value, None)", "return value", "return (value, None)", "return value", "return (result, None)", "return result", "return (value, e)", "return value"], "ret_type": "", "ret_type_p": [["bool", 0.3359601505971268], ["int", 0.09997206280511461], ["str", 0.0809160254843132]], "variables": {"e": "", "result": ""}, "variables_p": {"e": [["int", 0.35848905000044695], ["dict", 0.13389968256979204], ["list", 0.09003389917059815]], "result": [["str", 0.09633259220130139]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1426, 4], [1431, 25]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_str", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["isinstance", "value", "string_types"], ["str", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.28018495004773847], ["T", 0.1316557651737674], ["Union[str, List[Any]]", 0.10949717798521291], ["Dict[str, Any]", 0.10608556755276671], ["Type", 0.09082082183222166]]}, "q_name": "AnsibleModule._check_type_str", "ret_exprs": ["return value", "return str(value)"], "ret_type": "", "ret_type_p": [["str", 0.3012863508618709], ["Mapping[str, str]", 0.10475954909545561], ["Optional[mypy.types.Instance]", 0.09613282187050072], ["Type[Any]", 0.09137663977914183]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1433, 4], [1442, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_list", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["isinstance", "value", "list"], ["isinstance", "value", "string_types"], ["value", "split"], ["isinstance", "value", "int", "isinstance", "value", "float"], ["str", "value"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.2800431862317945], ["Type", 0.08738649247763547], ["Type[T]", 0.08226755236695955]]}, "q_name": "AnsibleModule._check_type_list", "ret_exprs": ["return value", "return value.split(\",\")", "return [ str(value) ]"], "ret_type": "", "ret_type_p": [["float", 0.12132029260720809], ["int", 0.10747031230805432], ["Optional[T]", 0.10540776329280548], ["List[str]", 0.10271030754977616], ["str", 0.09666801189289179], ["Optional[List[float]]", 0.09492603190522413], ["Optional[Callable[[bool], None]]", 0.09267073573161304], ["bool", 0.09267073573161304]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1444, 4], [1487, 73]], "fn_var_ln": {"exc": [[1453, 29], [1453, 32]], "field": [[1480, 16], [1480, 21]], "field_buffer": [[1476, 24], [1476, 36]], "fields": [[1458, 16], [1458, 22]], "in_escape": [[1467, 24], [1467, 33]], "in_quote": [[1471, 24], [1471, 32]], "result": [[1453, 21], [1453, 27]]}, "fn_var_occur": {"exc": [["result", "exc", "self", "safe_eval", "value", "dict", "include_exceptions", "True"], ["exc", "None"]], "field": [["field", "join", "field_buffer"], ["fields", "append", "field"], ["field", "join", "field_buffer"], ["fields", "append", "field"]], "field_buffer": [["field_buffer", "append", "c"], ["field", "join", "field_buffer"], ["field_buffer", "append", "c"], ["field", "join", "field_buffer"]], "fields": [["fields", "append", "field"], ["fields", "append", "field"], ["dict", "x", "split", "x", "fields"]], "in_escape": [["in_escape", "False"], ["in_escape", "False"], ["in_escape", "True"]], "in_quote": [["in_quote", "False"], ["in_quote", "c"], ["in_quote", "c"], ["in_quote", "in_quote", "c"], ["in_quote", "False"], ["in_quote", "c"]], "result": [["result", "exc", "self", "safe_eval", "value", "dict", "include_exceptions", "True"]]}, "name": "_check_type_dict", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["result", "exc", "self", "safe_eval", "value", "dict", "include_exceptions", "True"]], "value": [["isinstance", "value", "dict"], ["isinstance", "value", "string_types"], ["value", "startswith"], ["json", "loads", "value"], ["result", "exc", "self", "safe_eval", "value", "dict", "include_exceptions", "True"], ["value", "strip"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["Type", 0.18907566341633175], ["dict", 0.099977858820836]]}, "q_name": "AnsibleModule._check_type_dict", "ret_exprs": ["return value", "return json.loads(value)", "return result", "return dict(x.split(\"=\", 1) for x in fields)"], "ret_type": "", "ret_type_p": [["int", 0.26989691423228884], ["mypy.types.CallableType", 0.15653091439953906], ["Mapping[str, str]", 0.0957296916512945], ["bool", 0.08898592248406677], ["List[str]", 0.07864015077196618]], "variables": {"exc": "", "field": "", "field_buffer": "", "fields": "", "in_escape": "", "in_quote": "", "result": ""}, "variables_p": {"exc": [["str", 0.2834257461396339], ["dict", 0.0827268622205384], ["Dict[str, str]", 0.08230266830167698], ["List[Tuple[str, str, str]]", 0.08106579427120862], ["Union[Literal, int]", 0.08097191813429745]], "field": [["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.3950746071039745], ["List[str]", 0.3086194375680446], ["Tuple[str]", 0.2963059553279809]], "field_buffer": [["list", 0.781846899862982], ["List[List[Any]]", 0.09188566248469339]], "fields": [["list", 1.0]], "in_escape": [["str", 0.5770198178383276], ["bool", 0.2587570825283393], ["int", 0.1642230996333332]], "in_quote": [["int", 0.4652017143337823], ["bool", 0.16063363307227826], ["str", 0.1006552446823108]], "result": [["str", 0.4199831558550553], ["dict", 0.18938943754386714], ["Dict[str, None]", 0.10654105006532551], ["Dict[str, Union[Any, Any]]", 0.09213261203811925], ["KeysView[str]", 0.08599209406428358]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1489, 4], [1496, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_bool", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["self", "boolean", "value"]], "value": [["isinstance", "value", "bool"], ["isinstance", "value", "string_types", "isinstance", "value", "int"], ["self", "boolean", "value"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.20225718535662934], ["int", 0.11884785209730493]]}, "q_name": "AnsibleModule._check_type_bool", "ret_exprs": ["return value", "return self.boolean(value)"], "ret_type": "", "ret_type_p": [["int", 0.7375265644044036], ["float", 0.15190123759606644]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1498, 4], [1505, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_int", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["isinstance", "value", "int"], ["isinstance", "value", "string_types"], ["int", "value"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["mypy.types.Type", 0.4121673987108949], ["int", 0.11295828152749356], ["Union[None, str, bytes]", 0.0994007647625644], ["Set[Tuple[int, Any, Any]]", 0.0969557252298498], ["Dict[str, Any]", 0.0928979772347884], ["Type[eth.abc.VirtualMachineAPI]", 0.09256417118342572]]}, "q_name": "AnsibleModule._check_type_int", "ret_exprs": ["return value", "return int(value)"], "ret_type": "", "ret_type_p": [["int", 0.7756144502068558], ["float", 0.22438554979314423]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1507, 4], [1514, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_float", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["isinstance", "value", "float"], ["isinstance", "value", "binary_type", "text_type", "int"], ["float", "value"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["int", 0.20939389320493523], ["str", 0.12751165149725338], ["Type[eth.abc.VirtualMachineAPI]", 0.0911572285038235], ["T", 0.08919577033183923]]}, "q_name": "AnsibleModule._check_type_float", "ret_exprs": ["return value", "return float(value)"], "ret_type": "", "ret_type_p": [["int", 0.7756144502068558], ["float", 0.22438554979314423]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1516, 4], [1518, 60]], "fn_var_ln": {"value": [[1517, 8], [1517, 13]]}, "fn_var_occur": {"value": [["value", "self", "_check_type_str", "value"], ["os", "path", "expanduser", "os", "path", "expandvars", "value"]]}, "name": "_check_type_path", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["value", "self", "_check_type_str", "value"]], "value": [["value", "self", "_check_type_str", "value"], ["os", "path", "expanduser", "os", "path", "expandvars", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.9089750192659777]]}, "q_name": "AnsibleModule._check_type_path", "ret_exprs": ["return os.path.expanduser(os.path.expandvars(value))"], "ret_type": "", "ret_type_p": [["str", 0.7021041072760039], ["bool", 0.2978958927239959]], "variables": {"value": ""}, "variables_p": {"value": [["str", 0.4958963107259104], ["Dict[str, Type[Any]]", 0.10005229666487296], ["tuple", 0.09002948428352084], ["list", 0.08681828494417915]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1520, 4], [1528, 80]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_jsonarg", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["isinstance", "value", "text_type", "binary_type"], ["value", "strip"], ["isinstance", "value", "list", "tuple", "dict"], ["json", "dumps", "value"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.27079267943722274], ["Type", 0.20850783252347418], ["Dict[str, Any]", 0.15066097829162262], ["Union[dict, List[Any]]", 0.09743490718905652], ["Set[str]", 0.09133912855317727], ["Sequence[str]", 0.08685484722022518]]}, "q_name": "AnsibleModule._check_type_jsonarg", "ret_exprs": ["return value.strip()", "return json.dumps(value)"], "ret_type": "", "ret_type_p": [["str", 0.3002825018221608], ["datetime.datetime", 0.2042610889044592], ["bool", 0.17875989336778855], ["mypy.types.Type", 0.09313877562821746]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1530, 4], [1531, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_raw", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": []}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.9999999990303059], ["int", 2.458362820532471e-10], ["dict", 2.3367224096440743e-10], ["bool", 1.330507529352847e-10], ["Dict[str, Any]", 1.234625659245587e-10], ["T", 1.1683612048220371e-10]]}, "q_name": "AnsibleModule._check_type_raw", "ret_exprs": ["return value"], "ret_type": "", "ret_type_p": [["str", 0.6525325477093236], ["list", 0.1278781233872533], ["T", 0.127614047143536], ["Type", 0.0919752817598872]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1534, 4], [1538, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_bytes", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["self", "human_to_bytes", "value"]], "value": [["self", "human_to_bytes", "value"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.5108655872241028], ["Union[int, slice]", 0.10551917324373605], ["Callable", 0.10326696292895597]]}, "q_name": "AnsibleModule._check_type_bytes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1541, 4], [1545, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_type_bits", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["self", "human_to_bytes", "value", "isbits", "True"]], "value": [["self", "human_to_bytes", "value", "isbits", "True"], ["TypeError", "type", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.20480745319023358], ["Optional[AnyStr]", 0.09998462663518944], ["Type[object]", 0.09519742071531581], ["Union[str, bytes, int]", 0.09489603295635057]]}, "q_name": "AnsibleModule._check_type_bits", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "ensure all arguments have the requested type ", "long_descr": null, "ret": null}, "fn_lc": [[1547, 4], [1572, 126]], "fn_var_ln": {"type_checker": [[1566, 16], [1566, 28]], "value": [[1561, 12], [1561, 17]], "wanted": [[1559, 16], [1559, 22]]}, "fn_var_occur": {"type_checker": [["type_checker", "self", "_CHECK_ARGUMENT_TYPES_DISPATCHER", "wanted"], ["self", "params", "k", "type_checker", "value"]], "value": [["value", "self", "params", "k"], ["value", "None"], ["self", "params", "k", "type_checker", "value"], ["self", "fail_json", "msg", "k", "type", "value", "wanted"]], "wanted": [["wanted", "v", "get", "None"], ["wanted", "None"], ["type_checker", "self", "_CHECK_ARGUMENT_TYPES_DISPATCHER", "wanted"], ["self", "fail_json", "msg", "wanted", "k"], ["self", "fail_json", "msg", "k", "type", "value", "wanted"]]}, "name": "_check_argument_types", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "argument_spec", "items"], ["k", "self", "params"], ["self", "params", "k", "None"], ["value", "self", "params", "k"], ["type_checker", "self", "_CHECK_ARGUMENT_TYPES_DISPATCHER", "wanted"], ["self", "fail_json", "msg", "wanted", "k"], ["self", "params", "k", "type_checker", "value"], ["self", "fail_json", "msg", "k", "type", "value", "wanted"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._check_argument_types", "ret_exprs": [], "ret_type": "", "variables": {"type_checker": "", "value": "", "wanted": ""}, "variables_p": {"type_checker": [["Dict[str, str]", 0.382155011619643], ["Dict[Any, str]", 0.2337758675808307], ["dict", 0.11688793379041534], ["set", 0.10148034674306883], ["str", 0.08844247890678074], ["Set[str]", 0.07725836135926145]], "value": [["str", 0.2924923084780426], ["Dict[str, int]", 0.19080823326542168], ["List[Union[int, str]]", 0.09357973364317022], ["List[str]", 0.09064894323681554]], "wanted": [["Type[str]", 0.23117056945724027], ["dict", 0.18003289248159363], ["list", 0.11349684628257962], ["List[Tuple[int, int, int]]", 0.10149763822711183], ["str", 0.08705281140143839], ["Tuple[str, str, str]", 0.08599434999710254]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1574, 4], [1584, 44]], "fn_var_ln": {"default": [[1576, 12], [1576, 19]]}, "fn_var_occur": {"default": [["default", "v", "get", "None"], ["default", "None", "k", "self", "params"], ["self", "params", "k", "default"], ["self", "params", "k", "default"]]}, "name": "_set_defaults", "params": {"pre": "", "self": ""}, "params_descr": {"pre": "", "self": ""}, "params_occur": {"pre": [["pre", "True"]], "self": [["self", "argument_spec", "items"], ["default", "None", "k", "self", "params"], ["self", "params", "k", "default"], ["k", "self", "params"], ["self", "params", "k", "default"]]}, "params_p": {"args": [], "kwargs": [], "pre": [["bool", 1.0]], "self": []}, "q_name": "AnsibleModule._set_defaults", "ret_exprs": [], "ret_type": "", "variables": {"default": ""}, "variables_p": {"default": [["Dict[str, int]", 0.42448372926538874], ["str", 0.11705957026878283], ["Dict[str, str]", 0.10072844379440381], ["Dict[str, Tuple[Any, str]]", 0.09344161949645517], ["OrderedDict[str, List[str]]", 0.09293646578577082], ["int", 0.08887621588399237], ["Dict[str, Literal[False]]", 0.08247395550520623]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1586, 4], [1601, 28]], "fn_var_ln": {"fallback": [[1588, 12], [1588, 20]], "fallback_args": [[1597, 24], [1597, 37]], "fallback_kwargs": [[1595, 24], [1595, 39]], "fallback_strategy": [[1589, 12], [1589, 29]]}, "fn_var_occur": {"fallback": [["fallback", "v", "get", "None"], ["fallback_strategy", "fallback"]], "fallback_args": [["fallback_args", "item"], ["self", "params", "k", "fallback_strategy", "fallback_args", "fallback_kwargs"]], "fallback_kwargs": [["fallback_kwargs", "item"], ["self", "params", "k", "fallback_strategy", "fallback_args", "fallback_kwargs"]], "fallback_strategy": [["fallback_strategy", "fallback"], ["k", "self", "params", "fallback_strategy", "None"], ["self", "params", "k", "fallback_strategy", "fallback_args", "fallback_kwargs"]]}, "name": "_set_fallbacks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "argument_spec", "items"], ["k", "self", "params", "fallback_strategy", "None"], ["self", "params", "k", "fallback_strategy", "fallback_args", "fallback_kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._set_fallbacks", "ret_exprs": [], "ret_type": "", "variables": {"fallback": "", "fallback_args": "", "fallback_kwargs": "", "fallback_strategy": ""}, "variables_p": {"fallback": [["str", 0.2109753221588595], ["Tuple[str, str]", 0.15911463725739883], ["DefaultDict[Any, dict]", 0.11894268286381438], ["Dict[str, str]", 0.11147060275892562]], "fallback_args": [["list", 0.2013167551520707], ["Dict[str, Any]", 0.17596506778868362], ["Dict[str, str]", 0.15653786750905294], ["set", 0.10390410026920295], ["Dict[str, Union[str, Any]]", 0.09673710121910876], ["Tuple[Literal, Literal, Literal]", 0.08945508389891411]], "fallback_kwargs": [["dict", 0.34268563837144944], ["list", 0.3188308893919609], ["str", 0.17437943116421886], ["List[Dict[str, Any]]", 0.08267827535302429], ["Dict[str, Union[int, str]]", 0.08142576571934648]], "fallback_strategy": [["dict", 0.19990376510984226], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any]]", 0.08679921116302118]]}}, {"docstring": {"func": "read the input and set the params attribute.", "long_descr": "This method is for backwards compatibility.  The guts of the function\nwere moved out in 2.1 so that custom modules could read the parameters.", "ret": null}, "fn_lc": [[1603, 4], [1610, 36]], "fn_var_ln": {"params": [[1610, 8], [1610, 19]]}, "fn_var_occur": {"params": [["self", "params", "_load_params"]]}, "name": "_load_params", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "params", "_load_params"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._load_params", "ret_exprs": [], "ret_type": "", "variables": {"params": ""}, "variables_p": {"params": [["str", 0.6366682138865123], ["int", 0.09083294652837194]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1612, 4], [1617, 47]], "fn_var_ln": {"facility": [[1615, 12], [1615, 20]], "module": [[1614, 12], [1614, 18]]}, "fn_var_occur": {"facility": [["facility", "getattr", "syslog", "self", "_syslog_facility", "syslog", "LOG_USER"], ["syslog", "openlog", "str", "module", "facility"]], "module": [["module", "self", "_name"], ["syslog", "openlog", "str", "module", "facility"]]}, "name": "_log_to_syslog", "params": {"msg": "", "self": ""}, "params_descr": {"msg": "", "self": ""}, "params_occur": {"msg": [["syslog", "syslog", "syslog", "LOG_INFO", "msg"]], "self": [["module", "self", "_name"], ["facility", "getattr", "syslog", "self", "_syslog_facility", "syslog", "LOG_USER"]]}, "params_p": {"args": [], "kwargs": [], "msg": [["IO", 0.22154897298792772], ["bytes", 0.1961558515613737], ["int", 0.09567707663683431], ["str", 0.09567707663683431], ["rosie.types.ReceivedMessage", 0.09003556018353093]], "self": []}, "q_name": "AnsibleModule._log_to_syslog", "ret_exprs": [], "ret_type": "", "variables": {"facility": "", "module": ""}, "variables_p": {"facility": [["Type[Pattern[str]]", 0.0972760089927447], ["T", 0.08628409951489487]], "module": [["dict", 0.5864468492370709], ["Dict[str, str]", 0.08096602853516605], ["Set[str]", 0.07719091606098602], ["Dict[str, int]", 0.0675692463278561]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1619, 4], [1621, 25]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "debug", "params": {"msg": "", "self": ""}, "params_descr": {"msg": "", "self": ""}, "params_occur": {"msg": [["self", "log", "msg"]], "self": [["self", "_debug"], ["self", "log", "msg"]]}, "params_p": {"args": [], "kwargs": [], "msg": [["str", 0.5220076071946701], ["Optional[float]", 0.06469649585164823]], "self": []}, "q_name": "AnsibleModule.debug", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1623, 4], [1661, 47]], "fn_var_ln": {"journal_args": [[1652, 16], [1652, 28]], "journal_msg": [[1644, 16], [1644, 27]], "log_args": [[1628, 16], [1628, 24]], "module": [[1632, 16], [1632, 22]], "syslog_msg": [[1649, 16], [1649, 26]]}, "fn_var_occur": {"journal_args": [["journal_args", "os", "path", "basename", "__file__"], ["journal_args", "append", "arg", "upper", "str", "log_args", "arg"], ["journal", "send", "module", "journal_msg", "dict", "journal_args"]], "journal_msg": [["journal_msg", "remove_values", "msg", "decode", "self", "no_log_values"], ["journal_msg", "remove_values", "msg", "self", "no_log_values"], ["syslog_msg", "journal_msg"], ["syslog_msg", "journal_msg", "encode"], ["journal", "send", "module", "journal_msg", "dict", "journal_args"]], "log_args": [["log_args", "None"], ["log_args", "dict"], ["journal_args", "append", "arg", "upper", "str", "log_args", "arg"]], "module": [["module", "self", "_name"], ["isinstance", "module", "binary_type"], ["module", "module", "decode"], ["journal", "send", "module", "journal_msg", "dict", "journal_args"]], "syslog_msg": [["syslog_msg", "journal_msg"], ["syslog_msg", "journal_msg", "encode"], ["self", "_log_to_syslog", "syslog_msg"], ["self", "_log_to_syslog", "syslog_msg"]]}, "name": "log", "params": {"log_args": "", "msg": "", "self": ""}, "params_descr": {"log_args": "", "msg": "", "self": ""}, "params_occur": {"log_args": [["log_args", "None"], ["log_args", "dict"], ["journal_args", "append", "arg", "upper", "str", "log_args", "arg"]], "msg": [["isinstance", "msg", "binary_type", "text_type"], ["TypeError", "type", "msg"], ["isinstance", "msg", "binary_type"], ["journal_msg", "remove_values", "msg", "decode", "self", "no_log_values"], ["journal_msg", "remove_values", "msg", "self", "no_log_values"]], "self": [["self", "no_log"], ["module", "self", "_name"], ["journal_msg", "remove_values", "msg", "decode", "self", "no_log_values"], ["journal_msg", "remove_values", "msg", "self", "no_log_values"], ["self", "_log_to_syslog", "syslog_msg"], ["self", "_log_to_syslog", "syslog_msg"]]}, "params_p": {"args": [], "kwargs": [], "log_args": [["IO", 0.1199480948949767], ["Dict[str, str]", 0.1162366967674936], ["Callable[..., T]", 0.10167238496318284], ["bool", 0.09992164615173636], ["T", 0.09810940234415692], ["Iterable[str]", 0.09379860924059356], ["List[Dict]", 0.09131351516512357], ["bytes", 0.08689383584686523]], "msg": [["str", 0.2974995378365206], ["mypy.types.Type", 0.09651575305004167], ["bool", 0.0949915875005534]], "self": []}, "q_name": "AnsibleModule.log", "ret_exprs": [], "ret_type": "", "variables": {"journal_args": "", "journal_msg": "", "log_args": "", "module": "", "syslog_msg": ""}, "variables_p": {"journal_args": [["List[str]", 0.30947520183049115], ["list", 0.19008921546454408], ["dict", 0.10154456703190932], ["List[Tuple[str, Any]]", 0.09761395164424924], ["Tuple[str, str, str, str, str]", 0.0960266077128979], ["set", 0.09277378929388323]], "journal_msg": [["int", 0.3317652002284768], ["list", 0.09736195771241803], ["set", 0.09391052413278514], ["Coroutine[Any, Any, None]", 0.08717182270292613]], "log_args": [["list", 0.2917796816087621], ["List[int]", 0.12813215362704958], ["tuple", 0.10069418757246233], ["List[str]", 0.09025631256227473]], "module": [["str", 0.20536544842939433], ["int", 0.10934764910989808], ["list", 0.09873157884446226], ["Dict[Type[Any], str]", 0.09532720688959494], ["Type[List[Any]]", 0.09147396362703164], ["Tuple[Literal]", 0.08867658439055148]], "syslog_msg": []}}, {"docstring": {"func": "log that ansible ran the module ", "long_descr": null, "ret": null}, "fn_lc": [[1663, 4], [1700, 40]], "fn_var_ln": {"arg_opts": [[1672, 12], [1672, 20]], "arg_val": [[1693, 16], [1693, 23]], "canon": [[1671, 12], [1671, 17]], "log_args": [[1667, 8], [1667, 16]], "msg": [[1698, 12], [1698, 15]], "no_log": [[1673, 12], [1673, 18]], "param_val": [[1684, 20], [1684, 29]], "passwd_keys": [[1668, 8], [1668, 19]]}, "fn_var_occur": {"arg_opts": [["arg_opts", "self", "argument_spec", "get", "canon"], ["no_log", "arg_opts", "get", "False"]], "arg_val": [["arg_val", "log_args", "arg"], ["isinstance", "arg_val", "text_type", "binary_type"], ["arg_val", "str", "arg_val"], ["isinstance", "arg_val", "text_type"], ["arg_val", "arg_val", "encode"], ["msg", "append", "arg", "arg_val"]], "canon": [["canon", "self", "aliases", "get", "param", "param"], ["arg_opts", "self", "argument_spec", "get", "canon"]], "log_args": [["log_args", "dict"], ["log_args", "param"], ["log_args", "param"], ["log_args", "param", "heuristic_log_sanitize", "param_val", "self", "no_log_values"], ["arg_val", "log_args", "arg"], ["self", "log", "msg", "log_args", "log_args"]], "msg": [["msg", "append", "arg", "arg_val"], ["msg", "join", "msg"], ["self", "log", "msg", "log_args", "log_args"]], "no_log": [["no_log", "arg_opts", "get", "False"], ["self", "boolean", "no_log"]], "param_val": [["param_val", "self", "params", "param"], ["isinstance", "param_val", "text_type", "binary_type"], ["param_val", "str", "param_val"], ["isinstance", "param_val", "text_type"], ["param_val", "param_val", "encode"], ["log_args", "param", "heuristic_log_sanitize", "param_val", "self", "no_log_values"]], "passwd_keys": [["param", "passwd_keys"]]}, "name": "_log_invocation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "params"], ["canon", "self", "aliases", "get", "param", "param"], ["arg_opts", "self", "argument_spec", "get", "canon"], ["self", "boolean", "no_log"], ["param_val", "self", "params", "param"], ["log_args", "param", "heuristic_log_sanitize", "param_val", "self", "no_log_values"], ["self", "log", "msg", "log_args", "log_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._log_invocation", "ret_exprs": [], "ret_type": "", "variables": {"arg_opts": "", "arg_val": "", "canon": "", "log_args": "", "msg": "", "no_log": "", "param_val": "", "passwd_keys": ""}, "variables_p": {"arg_opts": [["dict", 0.370324750266458], ["Dict[str, str]", 0.2384003522958775], ["str", 0.09073395484093681]], "arg_val": [["str", 0.8119861407056536], ["int", 0.09475593778566856], ["Dict[str, Any]", 0.09325792150867793]], "canon": [["str", 0.5789046622556447], ["dict", 0.19518422479451386]], "log_args": [["str", 0.40176606670338044], ["List[str]", 0.13261866991632243], ["dict", 0.09755233378737299], ["int", 0.09081473285928146]], "msg": [["list", 0.9078266928966306], ["List[str]", 0.09217330710336952]], "no_log": [["str", 0.5616745072971122], ["dict", 0.08645245772361179]], "param_val": [["str", 0.7117855690896842], ["int", 0.28821443091031584]], "passwd_keys": [["str", 0.5982111982887348], ["Dict[str, str]", 0.10611612103473313], ["int", 0.10422255031753136], ["List[None]", 0.09633382728412467]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1703, 4], [1721, 19]], "fn_var_ln": {"cwd": [[1705, 12], [1705, 15]]}, "fn_var_occur": {"cwd": [["cwd", "os", "getcwd"], ["os", "access", "cwd", "os", "F_OK", "os", "R_OK"], ["os", "access", "cwd", "os", "F_OK", "os", "R_OK"], ["os", "chdir", "cwd"]]}, "name": "_set_cwd", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule._set_cwd", "ret_exprs": ["return cwd", "return cwd", "return None"], "ret_type": "", "ret_type_p": [["Optional[int]", 0.2053578941593901], ["Optional[str]", 0.10319126971527945], ["int", 0.0985466177764492], ["str", 0.09120733078153302], ["bool", 0.0889318087062305]], "variables": {"cwd": ""}, "variables_p": {"cwd": [["list", 0.18716686159518123], ["float", 0.17878278556789065], ["int", 0.159815372788761], ["Tuple[Literal, Literal]", 0.08588456494588374]]}}, {"docstring": {"func": "find system executable in PATH.", "long_descr": "Optional arguments:\n   - required:  if executable is not found and required is true, fail_json\n   - opt_dirs:  optional list of directories to search in addition to PATH\nif found return full path; otherwise return None", "ret": null}, "fn_lc": [[1723, 4], [1751, 23]], "fn_var_ln": {"bin_path": [[1747, 16], [1747, 24]], "path": [[1745, 12], [1745, 16]], "paths": [[1732, 8], [1732, 13]], "sbin_paths": [[1731, 8], [1731, 18]]}, "fn_var_occur": {"bin_path": [["bin_path", "None"], ["bin_path", "path"], ["required", "bin_path", "None"]], "path": [["d", "None", "os", "path", "exists", "d"], ["p", "paths", "os", "path", "exists", "p"], ["path", "os", "path", "join", "d", "arg"], ["os", "path", "exists", "path", "is_executable", "path"], ["bin_path", "path"]], "paths": [["paths", "append", "d"], ["paths", "os", "environ", "get", "split", "os", "pathsep"], ["p", "paths", "os", "path", "exists", "p"], ["paths", "append", "p"]], "sbin_paths": []}, "name": "get_bin_path", "params": {"arg": "", "opt_dirs": "", "required": "", "self": ""}, "params_descr": {"arg": "", "opt_dirs": "", "required": "", "self": ""}, "params_occur": {"arg": [["path", "os", "path", "join", "d", "arg"], ["self", "fail_json", "msg", "arg"]], "opt_dirs": [], "required": [["required", "bin_path", "None"]], "self": [["self", "fail_json", "msg", "arg"]]}, "params_p": {"arg": [["str", 0.901221096885364]], "args": [], "kwargs": [], "opt_dirs": [["str", 0.49999999944890566], ["list", 0.4999999990303983], ["bool", 4.704190622696932e-10], ["Dict[str, Any]", 2.0925364987279356e-10], ["Optional[str]", 1.8313946119705882e-10]], "required": [["str", 0.3729681058247077], ["dict", 0.09443759882708704], ["Optional[Dict]", 0.09443759882708704]], "self": []}, "q_name": "AnsibleModule.get_bin_path", "ret_exprs": ["return bin_path"], "ret_type": "", "ret_type_p": [["str", 0.6095302840961997], ["bool", 0.10518352186979056]], "variables": {"bin_path": "", "path": "", "paths": "", "sbin_paths": ""}, "variables_p": {"bin_path": [["str", 0.6523738699170236], ["Pattern", 0.10207826553237073], ["Dict[str, Any]", 0.09091295258173394]], "path": [["str", 0.9999999999999999]], "paths": [["str", 0.8070493558605243], ["list", 0.1030010641764308], ["Dict[str, str]", 0.08994957996304509]], "sbin_paths": [["str", 0.49999999999999994], ["list", 0.09999999999999999], ["Type[Sequence[str]]", 0.09999999999999999], ["Tuple[str]", 0.09999999999999999], ["tuple", 0.09999999999999999], ["int", 0.09999999999999999]]}}, {"docstring": {"func": "return a bool for the arg ", "long_descr": null, "ret": null}, "fn_lc": [[1753, 4], [1764, 77]], "fn_var_ln": {"arg": [[1758, 12], [1758, 15]]}, "fn_var_occur": {"arg": [["arg", "None", "isinstance", "arg", "bool"], ["isinstance", "arg", "string_types"], ["arg", "arg", "lower"], ["arg", "BOOLEANS_TRUE"], ["arg", "BOOLEANS_FALSE"], ["self", "fail_json", "msg", "arg"]]}, "name": "boolean", "params": {"arg": "", "self": ""}, "params_descr": {"arg": "", "self": ""}, "params_occur": {"arg": [["arg", "None", "isinstance", "arg", "bool"], ["isinstance", "arg", "string_types"], ["arg", "arg", "lower"], ["arg", "BOOLEANS_TRUE"], ["arg", "BOOLEANS_FALSE"], ["self", "fail_json", "msg", "arg"]], "self": [["self", "fail_json", "msg", "arg"]]}, "params_p": {"arg": [["types.ServiceT", 0.11558042760852902], ["Optional[\"Outcome\"]", 0.10315668369262439], ["bool", 0.0924994428089511], ["Optional[int]", 0.09070072397518325]], "args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.boolean", "ret_exprs": ["return arg", "return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"arg": ""}, "variables_p": {"arg": [["bytes", 0.2012604594458805], ["int", 0.1721778971473882], ["Dict[str, Set[Any]]", 0.11509447568443652], ["Dict[str, Set]", 0.1002690971486312], ["List[Union[Any, Any]]", 0.09314457475381367], ["str", 0.0921007245224544]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1766, 4], [1779, 66]], "fn_var_ln": {"new_data": [[1773, 20], [1773, 28]]}, "fn_var_occur": {"new_data": [["new_data", "json_dict_bytes_to_unicode", "data", "encoding", "encoding"], ["json", "dumps", "new_data"]]}, "name": "jsonify", "params": {"data": "", "self": ""}, "params_descr": {"data": "", "self": ""}, "params_occur": {"data": [["json", "dumps", "data", "encoding", "encoding"], ["new_data", "json_dict_bytes_to_unicode", "data", "encoding", "encoding"]], "self": [["self", "fail_json", "msg"]]}, "params_p": {"args": [], "data": [["bytes", 0.5006401025907009], ["Iterable[bytes]", 0.10757895037407829], ["int", 0.08858587420740781]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.jsonify", "ret_exprs": ["return json.dumps(data, encoding=encoding)", "return json.dumps(new_data)"], "ret_type": "", "ret_type_p": [["int", 0.19536103978188482], ["Dict[str, Any]", 0.09800610064999024], ["str", 0.08549957826586374]], "variables": {"new_data": ""}, "variables_p": {"new_data": [["Dict[str, Union[Any, Any]]", 0.7], ["Type[List[Any]]", 0.2], ["list", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1781, 4], [1782, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "from_json", "params": {"data": "", "self": ""}, "params_descr": {"data": "", "self": ""}, "params_occur": {"data": [["json", "loads", "data"]], "self": []}, "params_p": {"args": [], "data": [["dict", 0.5426862749660334], ["Dict[str, Any]", 0.2067532332177008], ["str", 0.14836503752658597], ["T", 0.10219545428967984]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.from_json", "ret_exprs": ["return json.loads(data)"], "ret_type": "", "ret_type_p": [["bytes", 0.278717179632993], ["dict", 0.19147843369071418], ["IO[bytes]", 0.13256071868817185], ["Dict[str, Any]", 0.09880612099897872], ["Optional[Dict[str, Any]]", 0.0983665143017401]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1784, 4], [1786, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_cleanup_file", "params": {"path": "", "self": ""}, "params_descr": {"path": "", "self": ""}, "params_occur": {"path": [["path", "self", "cleanup_files"], ["self", "cleanup_files", "append", "path"]], "self": [["path", "self", "cleanup_files"], ["self", "cleanup_files", "append", "path"]]}, "params_p": {"args": [], "kwargs": [], "path": [["list", 0.19904950244211084], ["Optional[str]", 0.17288067083053915], ["List[str]", 0.142810849148436], ["Iterable[str]", 0.10189919053165548], ["str", 0.09468924285122933]], "self": []}, "q_name": "AnsibleModule.add_cleanup_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1788, 4], [1790, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "do_cleanup_files", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cleanup_files"], ["self", "cleanup", "path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.do_cleanup_files", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "return from the module, without error ", "long_descr": null, "ret": null}, "fn_lc": [[1792, 4], [1802, 19]], "fn_var_ln": {"kwargs": [[1799, 8], [1799, 14]]}, "fn_var_occur": {"kwargs": [["self", "add_path_info", "kwargs"], ["kwargs", "False"], ["kwargs", "self", "params"], ["kwargs", "remove_values", "kwargs", "self", "no_log_values"], ["print", "self", "jsonify", "kwargs"]]}, "name": "exit_json", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [["self", "add_path_info", "kwargs"], ["kwargs", "False"], ["kwargs", "self", "params"], ["kwargs", "remove_values", "kwargs", "self", "no_log_values"], ["print", "self", "jsonify", "kwargs"]], "self": [["self", "add_path_info", "kwargs"], ["kwargs", "self", "params"], ["kwargs", "remove_values", "kwargs", "self", "no_log_values"], ["self", "do_cleanup_files"], ["print", "self", "jsonify", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.exit_json", "ret_exprs": [], "ret_type": "", "variables": {"kwargs": ""}, "variables_p": {"kwargs": [["int", 0.20398892126722096], ["str", 0.18940048994109132], ["list", 0.17243977204676403], ["Tuple[str]", 0.10096680881786035], ["List[str]", 0.08100451910528375]]}}, {"docstring": {"func": "return from the module, with an error message ", "long_descr": null, "ret": null}, "fn_lc": [[1804, 4], [1814, 19]], "fn_var_ln": {"kwargs": [[1811, 8], [1811, 14]]}, "fn_var_occur": {"kwargs": [["self", "add_path_info", "kwargs"], ["kwargs", "True"], ["kwargs", "self", "params"], ["kwargs", "remove_values", "kwargs", "self", "no_log_values"], ["print", "self", "jsonify", "kwargs"]]}, "name": "fail_json", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [["self", "add_path_info", "kwargs"], ["kwargs", "True"], ["kwargs", "self", "params"], ["kwargs", "remove_values", "kwargs", "self", "no_log_values"], ["print", "self", "jsonify", "kwargs"]], "self": [["self", "add_path_info", "kwargs"], ["kwargs", "self", "params"], ["kwargs", "remove_values", "kwargs", "self", "no_log_values"], ["self", "do_cleanup_files"], ["print", "self", "jsonify", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AnsibleModule.fail_json", "ret_exprs": [], "ret_type": "", "variables": {"kwargs": ""}, "variables_p": {"kwargs": [["int", 0.2327358545041361], ["list", 0.19509382504478243], ["tuple", 0.17084167091608274], ["str", 0.10677784198953262], ["Tuple[Any, Any]", 0.09646411895656441], ["Tuple[str]", 0.09101701192720796]]}}, {"docstring": {"func": "This is for checking for required params when we can not check via argspec because we", "long_descr": "need more information than is simply given in the argspec.", "ret": null}, "fn_lc": [[1816, 4], [1827, 91]], "fn_var_ln": {"missing_params": [[1822, 8], [1822, 22]]}, "fn_var_occur": {"missing_params": [["missing_params", "append", "required_param"], ["self", "fail_json", "msg", "join", "missing_params"]]}, "name": "fail_on_missing_params", "params": {"required_params": "", "self": ""}, "params_descr": {"required_params": "", "self": ""}, "params_occur": {"required_params": [], "self": [["self", "params", "get", "required_param"], ["self", "fail_json", "msg", "join", "missing_params"]]}, "params_p": {"args": [], "kwargs": [], "required_params": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "self": []}, "q_name": "AnsibleModule.fail_on_missing_params", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"missing_params": ""}, "variables_p": {"missing_params": [["list", 0.6864768994350734], ["Dict[str, Union[Any, Any]]", 0.11778175787545843], ["set", 0.10450216632576219], ["Dict[str, str]", 0.09123917636370596]]}}, {"docstring": {"func": "Return hex digest of local file for a digest_method specified by name, or None if file is not present. ", "long_descr": null, "ret": null}, "fn_lc": [[1829, 4], [1853, 40]], "fn_var_ln": {"block": [[1851, 12], [1851, 17]], "blocksize": [[1846, 8], [1846, 17]], "digest_method": [[1841, 16], [1841, 29]], "infile": [[1847, 8], [1847, 14]]}, "fn_var_occur": {"block": [["block", "infile", "read", "blocksize"], ["digest_method", "update", "block"], ["block", "infile", "read", "blocksize"]], "blocksize": [["block", "infile", "read", "blocksize"], ["block", "infile", "read", "blocksize"]], "digest_method": [["digest_method", "algorithm"], ["digest_method", "AVAILABLE_HASH_ALGORITHMS", "algorithm"], ["digest_method", "update", "block"], ["digest_method", "hexdigest"]], "infile": [["infile", "open", "filename"], ["block", "infile", "read", "blocksize"], ["block", "infile", "read", "blocksize"], ["infile", "close"]]}, "name": "digest_from_file", "params": {"algorithm": "", "filename": "", "self": ""}, "params_descr": {"algorithm": "", "filename": "", "self": ""}, "params_occur": {"algorithm": [["hasattr", "algorithm"], ["digest_method", "algorithm"], ["digest_method", "AVAILABLE_HASH_ALGORITHMS", "algorithm"], ["self", "fail_json", "msg", "filename", "algorithm", "join", "AVAILABLE_HASH_ALGORITHMS"]], "filename": [["os", "path", "exists", "filename"], ["os", "path", "isdir", "filename"], ["self", "fail_json", "msg", "filename"], ["self", "fail_json", "msg", "filename", "algorithm", "join", "AVAILABLE_HASH_ALGORITHMS"], ["infile", "open", "filename"]], "self": [["self", "fail_json", "msg", "filename"], ["self", "fail_json", "msg", "filename", "algorithm", "join", "AVAILABLE_HASH_ALGORITHMS"]]}, "params_p": {"algorithm": [["str", 0.20834563510506926], ["tuple", 0.17624434245218687], ["Optional[str]", 0.09881203324515285]], "args": [], "filename": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.digest_from_file", "ret_exprs": ["return None", "return digest_method.hexdigest()"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.347860685843968], ["str", 0.31449519909500523], ["List[Dict[str, Any]]", 0.15622148838515632]], "variables": {"block": "", "blocksize": "", "digest_method": "", "infile": ""}, "variables_p": {"block": [["Dict[str, Tuple[Any, Any]]", 0.2019913246560453], ["list", 0.20177254205285958], ["List[Dict[str, Any]]", 0.10512205151815596]], "blocksize": [["list", 0.1996290987726726], ["int", 0.13621054061064505], ["List[Dict[str, Any]]", 0.1258974867476208], ["dict", 0.095759871802925], ["Dict[str, Callable[[], Any]]", 0.09090188598875919], ["List[str]", 0.08427715016579053], ["str", 0.08228384555615205]], "digest_method": [["dict", 0.31565040212168144], ["Dict[str, Dict[Any, Any]]", 0.19087035388338003], ["DefaultDict[Any, DefaultDict[Any, Any]]", 0.09655656580183242]], "infile": [["int", 0.14741426783024686], ["dict", 0.12292446127220254], ["Dict[str, Any]", 0.10604414502764323], ["Optional[str]", 0.07926147729851107]]}}, {"docstring": {"func": "Return MD5 hex digest of local file using digest_from_file().", "long_descr": "Do not use this function unless you have no other choice for:\n    1) Optional backwards compatibility\n    2) Compatibility with a third party protocol\n\nThis function will not work on systems complying with FIPS-140-2.\n\nMost uses of this function can use the module.sha1 function instead.", "ret": null}, "fn_lc": [[1855, 4], [1868, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "md5", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["self", "digest_from_file", "filename"]], "self": [["self", "digest_from_file", "filename"]]}, "params_p": {"args": [], "filename": [["str", 0.60287814128405], ["Dict[str, Any]", 0.0976127860743111]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.md5", "ret_exprs": ["return self.digest_from_file(filename, 'md5')"], "ret_type": "", "ret_type_p": [["List[str]", 0.10393884680847498], ["bool", 0.10387448141395189], ["Dict[str, str]", 0.09050773082289605], ["bytes", 0.08896315549248603]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return SHA1 hex digest of local file using digest_from_file(). ", "long_descr": null, "ret": null}, "fn_lc": [[1870, 4], [1872, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "sha1", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["self", "digest_from_file", "filename"]], "self": [["self", "digest_from_file", "filename"]]}, "params_p": {"args": [], "filename": [["str", 0.60287814128405], ["Dict[str, Any]", 0.0976127860743111]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.sha1", "ret_exprs": ["return self.digest_from_file(filename, 'sha1')"], "ret_type": "", "ret_type_p": [["List[str]", 0.10393884680847498], ["bool", 0.10387448141395189], ["Dict[str, str]", 0.09050773082289605], ["bytes", 0.08896315549248603]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return SHA-256 hex digest of local file using digest_from_file(). ", "long_descr": null, "ret": null}, "fn_lc": [[1874, 4], [1876, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "sha256", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["self", "digest_from_file", "filename"]], "self": [["self", "digest_from_file", "filename"]]}, "params_p": {"args": [], "filename": [["str", 0.60287814128405], ["Dict[str, Any]", 0.0976127860743111]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.sha256", "ret_exprs": ["return self.digest_from_file(filename, 'sha256')"], "ret_type": "", "ret_type_p": [["List[str]", 0.10393884680847498], ["bool", 0.10387448141395189], ["Dict[str, str]", 0.09050773082289605], ["bytes", 0.08896315549248603]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "make a date-marked backup of the specified file, return True or False on success or failure", "long_descr": null, "ret": null}, "fn_lc": [[1878, 4], [1893, 25]], "fn_var_ln": {"backupdest": [[1885, 12], [1885, 22]], "e": [[1890, 16], [1890, 17]], "ext": [[1884, 12], [1884, 15]]}, "fn_var_occur": {"backupdest": [["backupdest", "fn", "os", "getpid", "ext"], ["shutil", "copy2", "fn", "backupdest"], ["self", "fail_json", "msg", "fn", "backupdest", "e"]], "e": [["e", "get_exception"], ["self", "fail_json", "msg", "fn", "backupdest", "e"]], "ext": [["ext", "time", "strftime", "time", "localtime", "time", "time"], ["backupdest", "fn", "os", "getpid", "ext"]]}, "name": "backup_local", "params": {"fn": "", "self": ""}, "params_descr": {"fn": "", "self": ""}, "params_occur": {"fn": [["os", "path", "exists", "fn"], ["backupdest", "fn", "os", "getpid", "ext"], ["shutil", "copy2", "fn", "backupdest"], ["self", "fail_json", "msg", "fn", "backupdest", "e"]], "self": [["self", "fail_json", "msg", "fn", "backupdest", "e"]]}, "params_p": {"args": [], "fn": [["str", 0.772999335746947], ["int", 0.12931475047682237], ["List[str]", 0.09768591377623063]], "kwargs": [], "self": []}, "q_name": "AnsibleModule.backup_local", "ret_exprs": ["return backupdest"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"backupdest": "", "e": "", "ext": ""}, "variables_p": {"backupdest": [["int", 0.237576882545802], ["list", 0.17746388403200214], ["Tuple[Any, Literal]", 0.10298185439198737], ["float", 0.10231337877908596], ["Dict[str, Union[Any, Any]]", 0.09243555211443126], ["List[Tuple[Any, Any, int]]", 0.08789389544727198]], "e": [["Dict[str, Any]", 0.2230190202338258], ["list", 0.1984552973488531], ["bool", 0.1904673694528778], ["int", 0.09772188888979627], ["str", 0.09219775863036216]], "ext": [["Pattern[str]", 0.19293708877957522], ["Type[bytes]", 0.18101961251803086], ["Dict[bytes, str]", 0.12958535209159136], ["Dict[str, Union[Any, Any]]", 0.11090635929210861], ["str", 0.09433945259738748], ["Type[str]", 0.09050980625901543], ["Type[int]", 0.09050980625901543]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1895, 4], [1901, 75]], "fn_var_ln": {"e": [[1900, 16], [1900, 17]]}, "fn_var_occur": {"e": [["e", "get_exception"], ["sys", "stderr", "write", "tmpfile", "e"]]}, "name": "cleanup", "params": {"self": "", "tmpfile": ""}, "params_descr": {"self": "", "tmpfile": ""}, "params_occur": {"self": [], "tmpfile": [["os", "path", "exists", "tmpfile"], ["os", "unlink", "tmpfile"], ["sys", "stderr", "write", "tmpfile", "e"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpfile": [["str", 0.9002273269023705], ["int", 0.09977267309762948]]}, "q_name": "AnsibleModule.cleanup", "ret_exprs": [], "ret_type": "", "variables": {"e": ""}, "variables_p": {"e": [["str", 0.49183607846712984], ["int", 0.18297568539352202], ["Optional[str]", 0.1305687019931302], ["Dict[str, int]", 0.09417486276404151]]}}, {"docstring": {"func": "atomically move src to dest, copying attributes from dest, returns true on success", "long_descr": "it uses os.rename to ensure this as it is an atomic operation, rest of the function is\nto work around limitations, corner cases and ensure selinux context is saved if possible", "ret": null}, "fn_lc": [[1903, 4], [2018, 63]], "fn_var_ln": {"b_dest": [[1910, 8], [1910, 14]], "b_dest_dir": [[1950, 16], [1950, 26]], "b_src": [[1909, 8], [1909, 13]], "b_tmp_dest_name": [[1971, 16], [1971, 31]], "context": [[1924, 16], [1924, 23]], "creating": [[1926, 8], [1926, 16]], "dest_stat": [[1913, 16], [1913, 25]], "e": [[1992, 28], [1992, 29]], "login_name": [[1933, 12], [1933, 22]], "native_dest_dir": [[1954, 16], [1954, 31]], "native_prefix": [[1956, 16], [1956, 29]], "native_suffix": [[1955, 16], [1955, 29]], "switched_user": [[1938, 8], [1938, 21]], "tmp_dest_fd": [[1958, 20], [1958, 31]], "tmp_dest_name": [[1958, 33], [1958, 46]], "tmp_stat": [[1988, 28], [1988, 36]], "umask": [[2010, 12], [2010, 17]]}, "fn_var_occur": {"b_dest": [["b_dest", "to_bytes", "dest", "errors"], ["os", "path", "exists", "b_dest"], ["dest_stat", "os", "stat", "b_dest"], ["creating", "os", "path", "exists", "b_dest"], ["os", "rename", "b_src", "b_dest"], ["b_dest_dir", "os", "path", "dirname", "b_dest"], ["native_suffix", "os", "path", "basename", "b_dest"], ["os", "rename", "b_tmp_dest_name", "b_dest"], ["self", "_unsafe_writes", "b_tmp_dest_name", "b_dest", "get_exception"], ["os", "chmod", "b_dest", "DEFAULT_PERM", "umask"], ["os", "chown", "b_dest", "os", "getuid", "os", "getgid"]], "b_dest_dir": [["b_dest_dir", "os", "path", "dirname", "b_dest"], ["native_dest_dir", "b_dest_dir"]], "b_src": [["b_src", "to_bytes", "src", "errors"], ["os", "chmod", "b_src", "dest_stat", "st_mode", "PERM_BITS"], ["os", "chown", "b_src", "dest_stat", "st_uid", "dest_stat", "st_gid"], ["os", "rename", "b_src", "b_dest"], ["shutil", "copy2", "b_src", "b_tmp_dest_name"], ["shutil", "move", "b_src", "b_tmp_dest_name"]], "b_tmp_dest_name": [["b_tmp_dest_name", "to_bytes", "tmp_dest_name", "errors"], ["shutil", "copy2", "b_src", "b_tmp_dest_name"], ["shutil", "move", "b_src", "b_tmp_dest_name"], ["self", "set_context_if_different", "b_tmp_dest_name", "context", "False"], ["tmp_stat", "os", "stat", "b_tmp_dest_name"], ["os", "chown", "b_tmp_dest_name", "dest_stat", "st_uid", "dest_stat", "st_gid"], ["os", "rename", "b_tmp_dest_name", "b_dest"], ["self", "_unsafe_writes", "b_tmp_dest_name", "b_dest", "get_exception"], ["self", "cleanup", "b_tmp_dest_name"]], "context": [["context", "None"], ["context", "self", "selinux_context", "dest"], ["context", "self", "selinux_default_context", "dest"], ["self", "set_context_if_different", "b_tmp_dest_name", "context", "False"], ["self", "set_context_if_different", "dest", "context", "False"]], "creating": [["creating", "os", "path", "exists", "b_dest"]], "dest_stat": [["dest_stat", "None"], ["dest_stat", "os", "stat", "b_dest"], ["os", "chmod", "b_src", "dest_stat", "st_mode", "PERM_BITS"], ["os", "chown", "b_src", "dest_stat", "st_uid", "dest_stat", "st_gid"], ["dest_stat", "tmp_stat", "st_uid", "dest_stat", "st_uid", "tmp_stat", "st_gid", "dest_stat", "st_gid"], ["os", "chown", "b_tmp_dest_name", "dest_stat", "st_uid", "dest_stat", "st_gid"]], "e": [["e", "get_exception"], ["e", "errno", "errno", "EPERM"], ["e", "get_exception"], ["e", "errno", "errno", "EPERM", "errno", "EXDEV", "errno", "EACCES", "errno", "ETXTBSY", "errno", "EBUSY"], ["self", "fail_json", "msg", "src", "dest", "e"], ["e", "get_exception"], ["self", "fail_json", "msg", "os", "path", "dirname", "dest", "e"], ["e", "get_exception"], ["e", "errno", "errno", "EPERM"]], "login_name": [["login_name", "os", "getlogin"], ["login_name", "os", "environ", "get", "None"], ["switched_user", "login_name", "login_name", "pwd", "getpwuid", "os", "getuid", "os", "environ", "get"]], "native_dest_dir": [["native_dest_dir", "b_dest_dir"], ["tmp_dest_fd", "tmp_dest_name", "tempfile", "mkstemp", "prefix", "native_prefix", "dir", "native_dest_dir", "suffix", "native_suffix"]], "native_prefix": [["native_prefix", "b"], ["tmp_dest_fd", "tmp_dest_name", "tempfile", "mkstemp", "prefix", "native_prefix", "dir", "native_dest_dir", "suffix", "native_suffix"]], "native_suffix": [["native_suffix", "os", "path", "basename", "b_dest"], ["tmp_dest_fd", "tmp_dest_name", "tempfile", "mkstemp", "prefix", "native_prefix", "dir", "native_dest_dir", "suffix", "native_suffix"]], "switched_user": [["switched_user", "login_name", "login_name", "pwd", "getpwuid", "os", "getuid", "os", "environ", "get"], ["switched_user", "os", "getuid"]], "tmp_dest_fd": [["tmp_dest_fd", "tmp_dest_name", "tempfile", "mkstemp", "prefix", "native_prefix", "dir", "native_dest_dir", "suffix", "native_suffix"], ["os", "close", "tmp_dest_fd"]], "tmp_dest_name": [["tmp_dest_fd", "tmp_dest_name", "tempfile", "mkstemp", "prefix", "native_prefix", "dir", "native_dest_dir", "suffix", "native_suffix"], ["b_tmp_dest_name", "to_bytes", "tmp_dest_name", "errors"]], "tmp_stat": [["tmp_stat", "os", "stat", "b_tmp_dest_name"], ["dest_stat", "tmp_stat", "st_uid", "dest_stat", "st_uid", "tmp_stat", "st_gid", "dest_stat", "st_gid"]], "umask": [["umask", "os", "umask"], ["os", "umask", "umask"], ["os", "chmod", "b_dest", "DEFAULT_PERM", "umask"]]}, "name": "atomic_move", "params": {"dest": "", "self": "", "src": "", "unsafe_writes": ""}, "params_descr": {"dest": "", "self": "", "src": "", "unsafe_writes": ""}, "params_occur": {"dest": [["b_dest", "to_bytes", "dest", "errors"], ["context", "self", "selinux_context", "dest"], ["context", "self", "selinux_default_context", "dest"], ["self", "fail_json", "msg", "src", "dest", "e"], ["self", "fail_json", "msg", "os", "path", "dirname", "dest", "e"], ["self", "fail_json", "msg", "src", "dest", "exception"], ["self", "fail_json", "msg", "src", "dest", "exception"], ["self", "set_context_if_different", "dest", "context", "False"]], "self": [["self", "selinux_enabled"], ["context", "self", "selinux_context", "dest"], ["self", "selinux_enabled"], ["context", "self", "selinux_default_context", "dest"], ["self", "fail_json", "msg", "src", "dest", "e"], ["self", "fail_json", "msg", "os", "path", "dirname", "dest", "e"], ["self", "fail_json", "msg", "exception", "sys", "exc_info"], ["self", "selinux_enabled"], ["self", "set_context_if_different", "b_tmp_dest_name", "context", "False"], ["self", "_unsafe_writes", "b_tmp_dest_name", "b_dest", "get_exception"], ["self", "fail_json", "msg", "src", "dest", "exception"], ["self", "fail_json", "msg", "src", "dest", "exception"], ["self", "cleanup", "b_tmp_dest_name"], ["self", "selinux_enabled"], ["self", "set_context_if_different", "dest", "context", "False"]], "src": [["b_src", "to_bytes", "src", "errors"], ["self", "fail_json", "msg", "src", "dest", "e"], ["self", "fail_json", "msg", "src", "dest", "exception"], ["self", "fail_json", "msg", "src", "dest", "exception"]], "unsafe_writes": []}, "params_p": {"args": [], "dest": [["str", 0.20211083869978505], ["int", 0.10613916984729405], ["bool", 0.09781411203523893], ["T", 0.09704207039842605], ["BinaryIO", 0.09552304378263088]], "kwargs": [], "self": [], "src": [["bytes", 0.4626932378443707], ["BinaryIO", 0.1870287382443699], ["int", 0.1327254763424943], ["AnyStr", 0.1061295610003566]], "unsafe_writes": [["Iterator[bytes]", 0.19999999999999998], ["List[int]", 0.09999999999999999], ["str", 0.09999999999999999]]}, "q_name": "AnsibleModule.atomic_move", "ret_exprs": [], "ret_type": "", "variables": {"b_dest": "", "b_dest_dir": "", "b_src": "", "b_tmp_dest_name": "", "context": "", "creating": "", "dest_stat": "", "e": "", "login_name": "", "native_dest_dir": "", "native_prefix": "", "native_suffix": "", "switched_user": "", "tmp_dest_fd": "", "tmp_dest_name": "", "tmp_stat": "", "umask": ""}, "variables_p": {"b_dest": [["str", 0.1910554798523756], ["int", 0.19084376607574616], ["bytes", 0.10742926823401622], ["float", 0.0902764843946004]], "b_dest_dir": [["str", 1.0000000000000002]], "b_src": [["bytes", 0.6088205600488219], ["str", 0.3116408099010507], ["os.stat_result", 0.07953863005012742]], "b_tmp_dest_name": [["str", 0.48284405107087297], ["int", 0.09364098931603203], ["Optional[str]", 0.09240716583914581], ["bytes", 0.09008038770656746], ["List[str]", 0.08994399091175044]], "context": [["list", 0.09272537315375604]], "creating": [["str", 1.0]], "dest_stat": [["Optional[str]", 0.29086076339309735], ["str", 0.26463887913924883], ["List[str]", 0.14561894640743128], ["Union[None, bytes, str]", 0.13803705592746565], ["Dict[str, str]", 0.08382063007993108], ["Callable(id)[[object], int]", 0.07702372505282568]], "e": [["str", 0.33000485079790465], ["int", 0.27922902943701394], ["datetime.date", 0.08721691417392873], ["Dict[str, Any]", 0.08596676550518197]], "login_name": [["str", 0.6700251408806653], ["List[str]", 0.2409803061022866], ["set", 0.08899455301704806]], "native_dest_dir": [["str", 0.757614898047712], ["tempfile.TemporaryDirectory[Any]", 0.09223623883531222]], "native_prefix": [["str", 0.9216902294869584], ["list", 0.07830977051304153]], "native_suffix": [["str", 0.8194027075504831], ["List[str]", 0.09151054782508117]], "switched_user": [["str", 0.7640424575343419], ["Dict[str, Union[int, str]]", 0.15515264565867454], ["Pattern[str]", 0.0808048968069836]], "tmp_dest_fd": [["str", 0.8905028884907233], ["Dict[int, str]", 0.10949711150927667]], "tmp_dest_name": [["str", 0.8985116306033916], ["Generator[str, None, None]", 0.10148836939660849]], "tmp_stat": [["int", 0.5059762743423706], ["bytearray", 0.09919381810151247], ["complex", 0.09910757115270831], ["memoryview", 0.09594223127571061]], "umask": [["list", 0.24493845117873508], ["List[str]", 0.15409514432997934], ["int", 0.12895217350618213], ["Dict[str, Any]", 0.11846701313289436], ["Pattern[str]", 0.09972087156978027], ["List[int]", 0.08644518753785378], ["float", 0.08069970859125374]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[2020, 4], [2040, 93]], "fn_var_ln": {"e": [[2036, 14], [2036, 15]], "in_src": [[2028, 18], [2028, 24]], "out_dest": [[2027, 18], [2027, 26]]}, "fn_var_occur": {"e": [["e", "get_exception"], ["self", "fail_json", "msg", "dest", "src", "e"]], "in_src": [["in_src", "open", "src"], ["shutil", "copyfileobj", "in_src", "out_dest"], ["in_src", "close"]], "out_dest": [["out_dest", "open", "dest"], ["shutil", "copyfileobj", "in_src", "out_dest"], ["out_dest", "close"]]}, "name": "_unsafe_writes", "params": {"dest": "", "exception": "", "self": "", "src": ""}, "params_descr": {"dest": "", "exception": "", "self": "", "src": ""}, "params_occur": {"dest": [["out_dest", "open", "dest"], ["self", "fail_json", "msg", "dest", "src", "e"], ["self", "fail_json", "msg", "src", "dest", "exception"]], "exception": [["exception", "errno", "errno", "EBUSY"], ["self", "fail_json", "msg", "src", "dest", "exception"]], "self": [["self", "fail_json", "msg", "dest", "src", "e"], ["self", "fail_json", "msg", "src", "dest", "exception"]], "src": [["in_src", "open", "src"], ["self", "fail_json", "msg", "dest", "src", "e"], ["self", "fail_json", "msg", "src", "dest", "exception"]]}, "params_p": {"args": [], "dest": [["str", 0.5264369540786574], ["list", 0.19779711706766306]], "exception": [["Optional[bool]", 0.10962654565760419], ["tuple", 0.09989363735318857], ["bool", 0.0977000031231041], ["int", 0.09385744709243676], ["Union[tuple, list]", 0.09266503243453532]], "kwargs": [], "self": [], "src": [["str", 0.3363633207841483], ["Callable", 0.08320153390543691]]}, "q_name": "AnsibleModule._unsafe_writes", "ret_exprs": [], "ret_type": "", "variables": {"e": "", "in_src": "", "out_dest": ""}, "variables_p": {"e": [["int", 0.19265087903674777], ["str", 0.10180264326709039]], "in_src": [["Set[str]", 0.09983552206603405], ["Type[str]", 0.09511659727711262]], "out_dest": [["str", 0.6954398467951527], ["dict", 0.2152492283581814]]}}, {"docstring": {"func": "Execute a command, returns rc, stdout, and stderr.", "long_descr": null, "ret": "A 3-tuple of return code (integer), stdout (native string),\nand stderr (native string).  On python2, stdout and stderr are both\nbyte strings.  On python3, stdout and stderr are text strings converted\naccording to the encoding and errors parameters.  If you want byte\nstrings on python3, use encoding=None to turn decoding to text off."}, "fn_lc": [[2042, 4], [2302, 35]], "fn_var_ln": {"arg": [[2182, 12], [2182, 15]], "args": [[2120, 12], [2120, 16]], "clean_args": [[2184, 8], [2184, 18]], "cmd": [[2220, 12], [2220, 15]], "dat": [[2245, 20], [2245, 23]], "data": [[2233, 20], [2233, 24]], "e": [[2279, 12], [2279, 13]], "efd": [[2238, 26], [2238, 29]], "is_passwd": [[2181, 20], [2181, 29]], "kwargs": [[2189, 8], [2189, 14]], "msg": [[2293, 12], [2293, 15]], "old_env_vals": [[2127, 8], [2127, 20]], "old_umask": [[2214, 12], [2214, 21]], "prev_dir": [[2202, 8], [2202, 16]], "prompt_re": [[2114, 16], [2114, 25]], "prompt_regex": [[2112, 20], [2112, 32]], "pypaths": [[2148, 12], [2148, 19]], "rc": [[2274, 12], [2274, 14]], "rfd": [[2238, 16], [2238, 19]], "rpipes": [[2227, 12], [2227, 18]], "sep_idx": [[2176, 16], [2176, 23]], "shell": [[2093, 12], [2093, 17]], "st_in": [[2187, 12], [2187, 17]], "stderr": [[2226, 12], [2226, 18]], "stdout": [[2255, 28], [2255, 34]], "to_clean_args": [[2166, 12], [2166, 25]], "wfd": [[2238, 21], [2238, 24]]}, "fn_var_occur": {"arg": [["PASSWD_ARG_RE", "match", "arg"], ["sep_idx", "arg", "find"], ["clean_args", "append", "arg", "sep_idx"], ["arg", "heuristic_log_sanitize", "arg", "self", "no_log_values"], ["clean_args", "append", "arg"], ["clean_args", "join", "pipes", "quote", "arg", "arg", "clean_args"]], "args": [["isinstance", "args", "list"], ["args", "join", "pipes", "quote", "x", "x", "args"], ["isinstance", "args", "binary_type", "text_type", "use_unsafe_shell"], ["isinstance", "args", "binary_type", "text_type"], ["args", "to_bytes", "args", "errors"], ["args", "to_text", "args", "errors"], ["args", "shlex", "split", "args"], ["self", "fail_json", "rc", "cmd", "args", "msg", "msg"], ["args", "os", "path", "expanduser", "os", "path", "expandvars", "x", "x", "args", "x", "None"], ["to_clean_args", "args"], ["isinstance", "args", "text_type"], ["to_clean_args", "to_bytes", "args"], ["isinstance", "args", "binary_type"], ["to_clean_args", "to_text", "args"], ["isinstance", "args", "text_type", "binary_type"], ["cmd", "subprocess", "Popen", "args", "kwargs"]], "clean_args": [["clean_args", "append"], ["clean_args", "append", "arg", "sep_idx"], ["clean_args", "append", "arg"], ["clean_args", "join", "pipes", "quote", "arg", "arg", "clean_args"], ["self", "log", "clean_args"], ["self", "fail_json", "rc", "e", "errno", "msg", "to_native", "e", "cmd", "clean_args"], ["self", "fail_json", "rc", "msg", "to_native", "e", "exception", "traceback", "format_exc", "cmd", "clean_args"], ["self", "fail_json", "cmd", "clean_args", "rc", "rc", "stdout", "stdout", "stderr", "stderr", "msg", "msg"]], "cmd": [["self", "fail_json", "rc", "cmd", "args", "msg", "msg"], ["cmd", "subprocess", "Popen", "args", "kwargs"], ["rpipes", "cmd", "stdout", "cmd", "stderr"], ["cmd", "stdin", "write", "data"], ["cmd", "stdin", "close"], ["cmd", "stdout", "rfd"], ["dat", "os", "read", "cmd", "stdout", "fileno"], ["rpipes", "remove", "cmd", "stdout"], ["cmd", "stderr", "rfd"], ["dat", "os", "read", "cmd", "stderr", "fileno"], ["rpipes", "remove", "cmd", "stderr"], ["rpipes", "rfd", "cmd", "poll", "None"], ["rpipes", "cmd", "poll", "None"], ["cmd", "wait"], ["cmd", "stdout", "close"], ["cmd", "stderr", "close"], ["rc", "cmd", "returncode"], ["self", "fail_json", "rc", "e", "errno", "msg", "to_native", "e", "cmd", "clean_args"], ["self", "fail_json", "rc", "msg", "to_native", "e", "exception", "traceback", "format_exc", "cmd", "clean_args"], ["self", "fail_json", "cmd", "clean_args", "rc", "rc", "stdout", "stdout", "stderr", "stderr", "msg", "msg"]], "dat": [["dat", "os", "read", "cmd", "stdout", "fileno"], ["stdout", "dat"], ["dat", "b"], ["dat", "os", "read", "cmd", "stderr", "fileno"], ["stderr", "dat"], ["dat", "b"]], "data": [["isinstance", "data", "text_type"], ["data", "to_bytes", "data"], ["cmd", "stdin", "write", "data"], ["prompt_re", "search", "stdout", "data"]], "e": [["e", "get_exception"], ["self", "fail_json", "rc", "e", "errno", "msg", "cwd", "str", "e"], ["e", "get_exception"], ["self", "fail_json", "rc", "e", "errno", "msg", "to_native", "e", "cmd", "clean_args"], ["e", "get_exception"], ["self", "fail_json", "rc", "msg", "to_native", "e", "exception", "traceback", "format_exc", "cmd", "clean_args"]], "efd": [["rfd", "wfd", "efd", "select", "select", "rpipes", "rpipes"]], "is_passwd": [["is_passwd", "False"], ["is_passwd", "False"], ["is_passwd", "True"]], "kwargs": [["kwargs", "dict", "executable", "executable", "shell", "shell", "close_fds", "close_fds", "stdin", "st_in", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["kwargs", "cwd"], ["cmd", "subprocess", "Popen", "args", "kwargs"]], "msg": [["self", "fail_json", "rc", "cmd", "args", "msg", "msg"], ["self", "fail_json", "msg"], ["msg", "None"], ["self", "fail_json", "rc", "e", "errno", "msg", "cwd", "str", "e"], ["self", "fail_json", "rc", "e", "errno", "msg", "to_native", "e", "cmd", "clean_args"], ["self", "fail_json", "rc", "msg", "to_native", "e", "exception", "traceback", "format_exc", "cmd", "clean_args"], ["msg", "heuristic_log_sanitize", "stderr", "rstrip", "self", "no_log_values"], ["self", "fail_json", "cmd", "clean_args", "rc", "rc", "stdout", "stdout", "stderr", "stderr", "msg", "msg"]], "old_env_vals": [["old_env_vals", "key", "os", "environ", "get", "key", "None"], ["old_env_vals", "key", "os", "environ", "get", "key", "None"], ["old_env_vals", "os", "environ"], ["old_env_vals", "items"]], "old_umask": [["old_umask", "None"], ["old_umask", "os", "umask", "umask"], ["os", "umask", "old_umask"]], "prev_dir": [["prev_dir", "os", "getcwd"], ["os", "chdir", "prev_dir"]], "prompt_re": [["prompt_re", "None"], ["prompt_re", "re", "compile", "prompt_regex", "re", "MULTILINE"], ["prompt_re", "search", "stdout", "data"]], "prompt_regex": [["isinstance", "prompt_regex", "text_type"], ["prompt_regex", "to_bytes", "prompt_regex", "errors"], ["prompt_regex", "to_bytes", "prompt_regex", "errors"], ["prompt_re", "re", "compile", "prompt_regex", "re", "MULTILINE"]], "pypaths": [["pypaths", "os", "environ", "split"], ["pypaths", "x", "x", "pypaths", "x", "endswith", "x", "endswith"], ["os", "environ", "join", "pypaths"]], "rc": [["self", "fail_json", "rc", "cmd", "args", "msg", "msg"], ["self", "fail_json", "rc", "e", "errno", "msg", "cwd", "str", "e"], ["rc", "cmd", "returncode"], ["self", "fail_json", "rc", "e", "errno", "msg", "to_native", "e", "cmd", "clean_args"], ["self", "fail_json", "rc", "msg", "to_native", "e", "exception", "traceback", "format_exc", "cmd", "clean_args"], ["rc", "check_rc"], ["self", "fail_json", "cmd", "clean_args", "rc", "rc", "stdout", "stdout", "stderr", "stderr", "msg", "msg"], ["rc", "to_native", "stdout", "encoding", "encoding", "errors", "errors", "to_native", "stderr", "encoding", "encoding", "errors", "errors"], ["rc", "stdout", "stderr"]], "rfd": [["rfd", "wfd", "efd", "select", "select", "rpipes", "rpipes"], ["cmd", "stdout", "rfd"], ["cmd", "stderr", "rfd"], ["rpipes", "rfd", "cmd", "poll", "None"]], "rpipes": [["rpipes", "cmd", "stdout", "cmd", "stderr"], ["rfd", "wfd", "efd", "select", "select", "rpipes", "rpipes"], ["rpipes", "remove", "cmd", "stdout"], ["rpipes", "remove", "cmd", "stderr"], ["rpipes", "rfd", "cmd", "poll", "None"], ["rpipes", "cmd", "poll", "None"]], "sep_idx": [["sep_idx", "arg", "find"], ["clean_args", "append", "arg", "sep_idx"]], "shell": [["shell", "False"], ["shell", "True"], ["shell", "True"], ["kwargs", "dict", "executable", "executable", "shell", "shell", "close_fds", "close_fds", "stdin", "st_in", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]], "st_in": [["st_in", "None"], ["st_in", "subprocess", "PIPE"], ["kwargs", "dict", "executable", "executable", "shell", "shell", "close_fds", "close_fds", "stdin", "st_in", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]], "stderr": [["kwargs", "dict", "executable", "executable", "shell", "shell", "close_fds", "close_fds", "stdin", "st_in", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["stderr", "b"], ["rpipes", "cmd", "stdout", "cmd", "stderr"], ["cmd", "stderr", "rfd"], ["dat", "os", "read", "cmd", "stderr", "fileno"], ["stderr", "dat"], ["rpipes", "remove", "cmd", "stderr"], ["cmd", "stderr", "close"], ["msg", "heuristic_log_sanitize", "stderr", "rstrip", "self", "no_log_values"], ["self", "fail_json", "cmd", "clean_args", "rc", "rc", "stdout", "stdout", "stderr", "stderr", "msg", "msg"], ["rc", "to_native", "stdout", "encoding", "encoding", "errors", "errors", "to_native", "stderr", "encoding", "encoding", "errors", "errors"], ["rc", "stdout", "stderr"]], "stdout": [["kwargs", "dict", "executable", "executable", "shell", "shell", "close_fds", "close_fds", "stdin", "st_in", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"], ["stdout", "b"], ["rpipes", "cmd", "stdout", "cmd", "stderr"], ["cmd", "stdout", "rfd"], ["dat", "os", "read", "cmd", "stdout", "fileno"], ["stdout", "dat"], ["rpipes", "remove", "cmd", "stdout"], ["prompt_re", "search", "stdout", "data"], ["stdout", "to_native", "stdout", "encoding", "encoding", "errors", "errors"], ["stdout", "stdout"], ["cmd", "stdout", "close"], ["self", "fail_json", "cmd", "clean_args", "rc", "rc", "stdout", "stdout", "stderr", "stderr", "msg", "msg"], ["rc", "to_native", "stdout", "encoding", "encoding", "errors", "errors", "to_native", "stderr", "encoding", "encoding", "errors", "errors"], ["rc", "stdout", "stderr"]], "to_clean_args": [["to_clean_args", "args"], ["to_clean_args", "to_bytes", "args"], ["to_clean_args", "to_text", "args"], ["to_clean_args", "shlex", "split", "to_clean_args"]], "wfd": [["rfd", "wfd", "efd", "select", "select", "rpipes", "rpipes"]]}, "name": "run_command", "params": {"args": "", "binary_data": "", "check_rc": "", "close_fds": "", "cwd": "", "data": "", "encoding": "", "environ_update": "", "errors": "", "executable": "", "path_prefix": "", "prompt_regex": "", "self": "", "umask": "", "use_unsafe_shell": ""}, "params_descr": {"args": "is the command to run\n* If args is a list, the command will be run with shell=False.\n* If args is a string and use_unsafe_shell=False it will split args to a list and run with shell=False\n* If args is a string and use_unsafe_shell=True it runs with shell=True.", "binary_data": "", "check_rc": "", "close_fds": "", "cwd": "", "data": "", "encoding": "", "environ_update": "", "errors": "", "executable": "", "path_prefix": "", "prompt_regex": "", "self": "", "umask": "", "use_unsafe_shell": ""}, "params_occur": {"args": [["isinstance", "args", "list"], ["args", "join", "pipes", "quote", "x", "x", "args"], ["isinstance", "args", "binary_type", "text_type", "use_unsafe_shell"], ["isinstance", "args", "binary_type", "text_type"], ["args", "to_bytes", "args", "errors"], ["args", "to_text", "args", "errors"], ["args", "shlex", "split", "args"], ["self", "fail_json", "rc", "cmd", "args", "msg", "msg"], ["args", "os", "path", "expanduser", "os", "path", "expandvars", "x", "x", "args", "x", "None"], ["to_clean_args", "args"], ["isinstance", "args", "text_type"], ["to_clean_args", "to_bytes", "args"], ["isinstance", "args", "binary_type"], ["to_clean_args", "to_text", "args"], ["isinstance", "args", "text_type", "binary_type"], ["cmd", "subprocess", "Popen", "args", "kwargs"]], "binary_data": [], "check_rc": [["rc", "check_rc"]], "close_fds": [["kwargs", "dict", "executable", "executable", "shell", "shell", "close_fds", "close_fds", "stdin", "st_in", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]], "cwd": [["cwd", "os", "path", "isdir", "cwd"], ["kwargs", "cwd"], ["cwd", "os", "path", "isdir", "cwd"], ["os", "chdir", "cwd"], ["self", "fail_json", "rc", "e", "errno", "msg", "cwd", "str", "e"]], "data": [["isinstance", "data", "text_type"], ["data", "to_bytes", "data"], ["cmd", "stdin", "write", "data"], ["prompt_re", "search", "stdout", "data"]], "encoding": [["stdout", "to_native", "stdout", "encoding", "encoding", "errors", "errors"], ["encoding", "None"], ["rc", "to_native", "stdout", "encoding", "encoding", "errors", "errors", "to_native", "stderr", "encoding", "encoding", "errors", "errors"]], "environ_update": [["environ_update", "items"]], "errors": [["args", "to_bytes", "args", "errors"], ["args", "to_text", "args", "errors"], ["prompt_regex", "to_bytes", "prompt_regex", "errors"], ["prompt_regex", "to_bytes", "prompt_regex", "errors"], ["stdout", "to_native", "stdout", "encoding", "encoding", "errors", "errors"], ["rc", "to_native", "stdout", "encoding", "encoding", "errors", "errors", "to_native", "stderr", "encoding", "encoding", "errors", "errors"]], "executable": [["kwargs", "dict", "executable", "executable", "shell", "shell", "close_fds", "close_fds", "stdin", "st_in", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE"]], "path_prefix": [["os", "environ", "path_prefix", "os", "environ"]], "prompt_regex": [["isinstance", "prompt_regex", "text_type"], ["prompt_regex", "to_bytes", "prompt_regex", "errors"], ["prompt_regex", "to_bytes", "prompt_regex", "errors"], ["prompt_re", "re", "compile", "prompt_regex", "re", "MULTILINE"]], "self": [["self", "fail_json", "rc", "cmd", "args", "msg", "msg"], ["self", "fail_json", "msg"], ["self", "run_command_environ_update", "items"], ["arg", "heuristic_log_sanitize", "arg", "self", "no_log_values"], ["self", "fail_json", "rc", "e", "errno", "msg", "cwd", "str", "e"], ["self", "_debug"], ["self", "log", "clean_args"], ["self", "fail_json", "rc", "e", "errno", "msg", "to_native", "e", "cmd", "clean_args"], ["self", "fail_json", "rc", "msg", "to_native", "e", "exception", "traceback", "format_exc", "cmd", "clean_args"], ["msg", "heuristic_log_sanitize", "stderr", "rstrip", "self", "no_log_values"], ["self", "fail_json", "cmd", "clean_args", "rc", "rc", "stdout", "stdout", "stderr", "stderr", "msg", "msg"]], "umask": [["old_umask", "os", "umask", "umask"], ["os", "umask", "old_umask"]], "use_unsafe_shell": [["isinstance", "args", "binary_type", "text_type", "use_unsafe_shell"]]}, "params_p": {"args": [], "binary_data": [["bool", 0.47134688971383915], ["FrozenSet[str]", 0.18477314065350822], ["list", 0.1485226068626127], ["str", 0.09767868138502003], ["dict", 0.09767868138502003]], "check_rc": [["str", 0.5048401342108912], ["Dict[str, str]", 0.08885797290107576], ["Dict[str, bytes]", 0.0887347607037191]], "close_fds": [["Optional[Dict]", 0.1035453581990081], ["List[str]", 0.09992422020922875], ["str", 0.09469771258848637], ["starlette.types.Send", 0.09252418612914136], ["Union[None, Dict]", 0.09042201530748409]], "cwd": [["str", 0.805039024838457], ["bool", 0.09799838597018981], ["int", 0.09696258919135309]], "data": [["int", 0.21750156438333043], ["Dict[str, Any]", 0.10310834934254419], ["IO[str]", 0.09775203648375229], ["Mapping[str, int]", 0.09744738381164306], ["str", 0.08961571668561603]], "encoding": [["bytes", 0.30971578068205413], ["str", 0.1964267525688429], ["BinaryIO", 0.11100282685883132], ["List[str]", 0.10344986933644944], ["Callable", 0.0904507991327471], ["int", 0.08550410208462544]], "environ_update": [["dict", 0.23253906494727813], ["Dict[str, float]", 0.08090206611189038], ["str", 0.07822266885405865], ["Dict[str, Dict]", 0.06461477875262804]], "errors": [["OSError", 0.11579731905314486], ["Exception", 0.10113684220245128], ["BinaryIO", 0.0977458843942118], ["Dict[str, Any]", 0.09407594276217726], ["bytes", 0.09248447273320859], ["bytearray", 0.09123066604608855]], "executable": [["Optional[Dict]", 0.1035453581990081], ["List[str]", 0.09992422020922875], ["str", 0.09469771258848637], ["starlette.types.Send", 0.09252418612914136], ["Union[None, Dict]", 0.09042201530748409]], "kwargs": [], "path_prefix": [["str", 0.5015889439010223]], "prompt_regex": [["str", 0.2645366810261758], ["dict", 0.10130951112138811], ["Union[str, bytes]", 0.09438658675318538]], "self": [], "umask": [["int", 0.41633269110482113], ["str", 0.09136171917012136]], "use_unsafe_shell": [["bool", 0.3107570148558073], ["str", 0.10248419756933153], ["Optional[int]", 0.09925719119090615], ["Optional[str]", 0.09925719119090615]]}, "q_name": "AnsibleModule.run_command", "ret_exprs": ["return (257, stdout, \"A prompt was encountered while running a command, but no input data was specified\")", "return (rc, to_native(stdout, encoding=encoding, errors=errors), to_native(stderr, encoding=encoding, errors=errors))", "return (rc, stdout, stderr)"], "ret_type": "", "ret_type_p": [], "variables": {"arg": "", "args": "", "clean_args": "", "cmd": "", "dat": "", "data": "", "e": "", "efd": "", "is_passwd": "", "kwargs": "", "msg": "", "old_env_vals": "", "old_umask": "", "prev_dir": "", "prompt_re": "", "prompt_regex": "", "pypaths": "", "rc": "", "rfd": "", "rpipes": "", "sep_idx": "", "shell": "", "st_in": "", "stderr": "", "stdout": "", "to_clean_args": "", "wfd": ""}, "variables_p": {"arg": [["int", 0.297479340429613], ["tuple", 0.2101507517643773], ["datetime.date.time.datetime", 0.10832771209476151], ["list", 0.09987274944202722], ["str", 0.09426357603015303]], "args": [["List[str]", 0.6753033482814443], ["List[bytes]", 0.1321464129830552], ["Tuple[str]", 0.09197804802838569]], "clean_args": [["list", 0.6850112060248594], ["List[str]", 0.1720132880990606], ["List[List[Any]]", 0.1429755058760798]], "cmd": [["str", 0.840596290386767]], "dat": [["str", 0.9048391609660654], ["Set[str]", 0.09516083903393449]], "data": [["bytes", 0.25627866651246045], ["List[str]", 0.20643404520458888], ["T", 0.17717646843003831]], "e": [["int", 0.3154554969069909], ["bool", 0.09868655150209725], ["List[str]", 0.09482788554044273], ["Tuple[int]", 0.09195209895122562]], "efd": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "is_passwd": [["bool", 0.9999999999999999]], "kwargs": [["dict", 0.580367888314395]], "msg": [["str", 0.48728240071651163], ["Dict[str, Union[Any, Any, Any, Any]]", 0.12029330518368048], ["Pattern[str]", 0.10049765526451916], ["Optional[str]", 0.09735440901896822], ["Dict[str, str]", 0.09735440901896822], ["property", 0.09721782079735218]], "old_env_vals": [["Set[str]", 0.2161149169097885], ["dict", 0.1834482252476487], ["Dict[str, bool]", 0.10902233786852289], ["Dict[str, Any]", 0.1073089035964389], ["str", 0.105923745525086], ["Dict[str, int]", 0.09173202377680105]], "old_umask": [["list", 0.2377987404641337], ["Type[datetime.datetime]", 0.10376048231658637], ["platform.Any", 0.08957363611275615], ["Type[Exception]", 0.07260462490615173], ["Tuple[Any, Any]", 0.06928916438465867]], "prev_dir": [["str", 0.6431681932861641], ["Optional[str]", 0.08824898037570085]], "prompt_re": [["str", 0.4096617227665723], ["Optional[str]", 0.3981802347736732], ["Pattern", 0.09951188925445591], ["Union[Literal, str]", 0.09264615320529866]], "prompt_regex": [["bytes", 0.8997093917361486], ["str", 0.10029060826385143]], "pypaths": [["List[str]", 0.4873620285415253], ["str", 0.21642096602403213], ["Dict[str, List[str]]", 0.12934039801645975], ["Dict[str, str]", 0.08431097636753636], ["dict", 0.08256563105044633]], "rc": [["str", 0.2626436165777509], ["Dict[str, List[str]]", 0.12449186071598715], ["list", 0.11255270745996108], ["Optional[types.TracebackType]", 0.09913074885282296], ["int", 0.09648787258256393]], "rfd": [], "rpipes": [["str", 0.601502557493773], ["Dict[str, str]", 0.09861591103360487]], "sep_idx": [["list", 1.0000000000000002]], "shell": [["List[List[str]]", 0.2649615760027342], ["str", 0.16801589823836238], ["List[str]", 0.0858668510203146], ["list", 0.06545768756983399]], "st_in": [["str", 0.450064807104033], ["List[None]", 0.14076466796671858], ["int", 0.08710275531221374], ["list", 0.08669277834498967], ["Tuple[Literal, Literal]", 0.07497523018382743]], "stderr": [["dict", 0.6987631464450331], ["str", 0.12387315028092824]], "stdout": [["dict", 0.6948459673705152], ["str", 0.12751730843174297]], "to_clean_args": [["int", 0.1823843686732863], ["list", 0.09874083456967991]], "wfd": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[2304, 4], [2308, 18]], "fn_var_ln": {"fh": [[2306, 8], [2306, 10]], "filename": [[2305, 8], [2305, 16]]}, "fn_var_occur": {"fh": [["fh", "open", "filename"], ["fh", "write", "str"], ["fh", "close"]], "filename": [["filename", "os", "path", "expandvars", "os", "path", "expanduser", "filename"], ["fh", "open", "filename"]]}, "name": "append_to_file", "params": {"filename": "", "self": "", "str": ""}, "params_descr": {"filename": "", "self": "", "str": ""}, "params_occur": {"filename": [["filename", "os", "path", "expandvars", "os", "path", "expanduser", "filename"], ["fh", "open", "filename"]], "self": [], "str": [["fh", "write", "str"]]}, "params_p": {"args": [], "filename": [["str", 0.9999999999999999]], "kwargs": [], "self": [], "str": [["str", 1.0]]}, "q_name": "AnsibleModule.append_to_file", "ret_exprs": [], "ret_type": "", "variables": {"fh": "", "filename": ""}, "variables_p": {"fh": [["float", 0.136647638333953], ["str", 0.09479801782517308]], "filename": [["str", 0.9999999999999997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[2310, 4], [2311, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "bytes_to_human", "params": {"self": "", "size": ""}, "params_descr": {"self": "", "size": ""}, "params_occur": {"self": [], "size": [["bytes_to_human", "size"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "size": [["int", 0.40926295765411025], ["Iterable", 0.10231573941352756], ["str", 0.10231573941352756], ["Tuple[int, int]", 0.0791583452782519]]}, "q_name": "AnsibleModule.bytes_to_human", "ret_exprs": ["return bytes_to_human(size)"], "ret_type": "", "ret_type_p": [["bool", 0.4128608033833179], ["str", 0.10278762473002254]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[2316, 4], [2317, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "human_to_bytes", "params": {"isbits": "", "number": "", "self": ""}, "params_descr": {"isbits": "", "number": "", "self": ""}, "params_occur": {"isbits": [["human_to_bytes", "number", "isbits"]], "number": [["human_to_bytes", "number", "isbits"]], "self": []}, "params_p": {"args": [], "isbits": [["int", 0.524980442190406], ["str", 0.08184668044914521], ["float", 0.05988253922962246]], "kwargs": [], "number": [["int", 0.524980442190406], ["str", 0.08184668044914521], ["float", 0.05988253922962246]], "self": []}, "q_name": "AnsibleModule.human_to_bytes", "ret_exprs": ["return human_to_bytes(number, isbits)"], "ret_type": "", "ret_type_p": [["int", 0.21409991501162018], ["dict", 0.16999232920390156], ["List[str]", 0.09703250860593363], ["Dict[str, Any]", 0.09048246247598118]], "variables": {}, "variables_p": {}}], "name": "AnsibleModule", "q_name": "AnsibleModule", "variables": {"is_executable": "", "pretty_bytes": ""}, "variables_p": {"is_executable": [["bool", 0.6], ["int", 0.2]], "pretty_bytes": [["Callable(chr)[[int], str]", 0.5], ["int", 0.2], ["str", 0.1], ["property", 0.1]]}}], "funcs": [{"docstring": {"func": "what's the platform?  example: Linux is a platform. ", "long_descr": null, "ret": null}, "fn_lc": [[216, 0], [218, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_platform", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_platform", "ret_exprs": ["return platform.system()"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "return the distribution name ", "long_descr": null, "ret": null}, "fn_lc": [[220, 0], [237, 23]], "fn_var_ln": {"distribution": [[236, 8], [236, 20]], "supported_dists": [[224, 12], [224, 27]]}, "fn_var_occur": {"distribution": [["distribution", "platform", "linux_distribution", "supported_dists", "supported_dists", "capitalize"], ["distribution", "os", "path", "isfile"], ["distribution", "platform", "linux_distribution", "supported_dists", "capitalize"], ["distribution", "platform", "dist", "capitalize"], ["distribution", "None"]], "supported_dists": [["supported_dists", "platform", "_supported_dists"], ["distribution", "platform", "linux_distribution", "supported_dists", "supported_dists", "capitalize"], ["distribution", "platform", "linux_distribution", "supported_dists", "capitalize"]]}, "name": "get_distribution", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_distribution", "ret_exprs": ["return distribution"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"distribution": "", "supported_dists": ""}, "variables_p": {"distribution": [["dict", 0.2505534660503328]], "supported_dists": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": "return the distribution version ", "long_descr": null, "ret": null}, "fn_lc": [[239, 0], [251, 31]], "fn_var_ln": {"distribution_version": [[250, 8], [250, 28]]}, "fn_var_occur": {"distribution_version": [["distribution_version", "platform", "linux_distribution"], ["distribution_version", "os", "path", "isfile"], ["distribution_version", "platform", "linux_distribution", "supported_dists"], ["distribution_version", "platform", "dist"], ["distribution_version", "None"]]}, "name": "get_distribution_version", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_distribution_version", "ret_exprs": ["return distribution_version"], "ret_type": "", "ret_type_p": [["str", 0.8072643712855572]], "variables": {"distribution_version": ""}, "variables_p": {"distribution_version": [["str", 0.7996060320900853]]}}, {"docstring": {"func": "used by modules like Hardware or Network fact classes to retrieve all subclasses of a given class.", "long_descr": "__subclasses__ return only direct sub classes. This one go down into the class tree.", "ret": null}, "fn_lc": [[253, 0], [270, 21]], "fn_var_ln": {"subclasses": [[259, 4], [259, 14]], "to_visit": [[260, 4], [260, 12]]}, "fn_var_occur": {"subclasses": [["subclasses", "cls", "__subclasses__"], ["to_visit", "list", "subclasses"], ["subclasses", "append", "ssc"]], "to_visit": [["to_visit", "list", "subclasses"], ["to_visit", "remove", "sc"], ["to_visit", "append", "ssc"]]}, "name": "get_all_subclasses", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["subclasses", "cls", "__subclasses__"]]}, "params_p": {"args": [], "cls": [["bool", 0.129377996415195], ["str", 0.11952362758545607], ["Optional[int]", 0.11952362758545607], ["Type", 0.11540035493561861], ["type", 0.038079883136450006]], "kwargs": []}, "q_name": "get_all_subclasses", "ret_exprs": ["return subclasses"], "ret_type": "", "ret_type_p": [["str", 0.7499999989620881], ["int", 7.792122380421146e-10], ["Tuple[bytes]", 1.4656700548771338e-10], ["Dict[str, Any]", 1.4656700548771338e-10]], "variables": {"subclasses": "", "to_visit": ""}, "variables_p": {"subclasses": [["int", 0.18685614351319485], ["Generator[int, None, None]", 0.11470751454762242], ["str", 0.10739436729003805], ["Iterator[Any]", 0.10566300558022171], ["Type[Tuple[Any, ...]]", 0.10465683340096132], ["dict", 0.09491308093644395], ["list", 0.09093728541816325]], "to_visit": [["list", 0.18969674799759673], ["int", 0.1846719877000289], ["str", 0.13987191290534384], ["List[int]", 0.09397344321790169]]}}, {"docstring": {"func": "used by modules like User to have different implementations based on detected platform.  See User", "long_descr": "module for an example.", "ret": null}, "fn_lc": [[273, 0], [295, 49]], "fn_var_ln": {"distribution": [[280, 4], [280, 16]], "subclass": [[293, 8], [293, 16]], "this_platform": [[279, 4], [279, 17]]}, "fn_var_occur": {"distribution": [["distribution", "get_distribution"], ["distribution", "None"], ["sc", "distribution", "None", "sc", "distribution", "distribution", "sc", "platform", "this_platform"], ["sc", "platform", "this_platform", "sc", "distribution", "None"]], "subclass": [["subclass", "None"], ["subclass", "sc"], ["subclass", "None"], ["subclass", "sc"], ["subclass", "None"], ["subclass", "cls"], ["super", "cls", "subclass", "__new__", "subclass"]], "this_platform": [["this_platform", "get_platform"], ["sc", "distribution", "None", "sc", "distribution", "distribution", "sc", "platform", "this_platform"], ["sc", "platform", "this_platform", "sc", "distribution", "None"]]}, "name": "load_platform_subclass", "params": {"args": "", "cls": "", "kwargs": ""}, "params_descr": {"args": "", "cls": "", "kwargs": ""}, "params_occur": {"args": [], "cls": [["get_all_subclasses", "cls"], ["get_all_subclasses", "cls"], ["subclass", "cls"], ["super", "cls", "subclass", "__new__", "subclass"]], "kwargs": []}, "params_p": {"args": [], "cls": [["str", 0.38871917211865004], ["dict", 0.09379255126656565], ["type", 0.08521672375038712]], "kwargs": []}, "q_name": "load_platform_subclass", "ret_exprs": ["return super(cls, subclass).__new__(subclass)"], "ret_type": "", "ret_type_p": [["bool", 0.47790817538644115], ["str", 0.08789717310598995], ["ClassVar", 0.0827089160959846]], "variables": {"distribution": "", "subclass": "", "this_platform": ""}, "variables_p": {"distribution": [["int", 0.11725837492973142], ["str", 0.09291946565659694], ["bool", 0.09190608353680563]], "subclass": [["dict", 0.12706864620698308], ["str", 0.09631206984391641]], "this_platform": [["Tuple[str, str, str, str]", 0.10432432146198098]]}}, {"docstring": {"func": "Recursively convert dict keys and values to byte str", "long_descr": "Specialized for json return because this only handles, lists, tuples,\nand dict container types (the containers that the json module returns)", "ret": null}, "fn_lc": [[298, 0], [314, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "json_dict_unicode_to_bytes", "params": {"d": "", "encoding": "", "errors": ""}, "params_descr": {"d": "", "encoding": "", "errors": ""}, "params_occur": {"d": [["isinstance", "d", "text_type"], ["to_bytes", "d", "encoding", "encoding", "errors", "errors"], ["isinstance", "d", "dict"], ["dict", "map", "json_dict_unicode_to_bytes", "iteritems", "d", "repeat", "encoding", "repeat", "errors"], ["isinstance", "d", "list"], ["list", "map", "json_dict_unicode_to_bytes", "d", "repeat", "encoding", "repeat", "errors"], ["isinstance", "d", "tuple"], ["tuple", "map", "json_dict_unicode_to_bytes", "d", "repeat", "encoding", "repeat", "errors"]], "encoding": [["to_bytes", "d", "encoding", "encoding", "errors", "errors"], ["dict", "map", "json_dict_unicode_to_bytes", "iteritems", "d", "repeat", "encoding", "repeat", "errors"], ["list", "map", "json_dict_unicode_to_bytes", "d", "repeat", "encoding", "repeat", "errors"], ["tuple", "map", "json_dict_unicode_to_bytes", "d", "repeat", "encoding", "repeat", "errors"]], "errors": [["to_bytes", "d", "encoding", "encoding", "errors", "errors"], ["dict", "map", "json_dict_unicode_to_bytes", "iteritems", "d", "repeat", "encoding", "repeat", "errors"], ["list", "map", "json_dict_unicode_to_bytes", "d", "repeat", "encoding", "repeat", "errors"], ["tuple", "map", "json_dict_unicode_to_bytes", "d", "repeat", "encoding", "repeat", "errors"]]}, "params_p": {"args": [], "d": [["str", 0.5282575537049766], ["dict", 0.10454610024914024], ["Union[str, bytes]", 0.09682961981112609], ["Union[bytes, str]", 0.09409902411806328], ["bytes", 0.08807601922106457]], "encoding": [["str", 0.7631355546704003], ["bytes", 0.10413514868081573]], "errors": [["str", 0.7631355546704003], ["bytes", 0.10413514868081573]], "kwargs": []}, "q_name": "json_dict_unicode_to_bytes", "ret_exprs": ["return to_bytes(d, encoding=encoding, errors=errors)", "return dict(map(json_dict_unicode_to_bytes, iteritems(d), repeat(encoding), repeat(errors)))", "return list(map(json_dict_unicode_to_bytes, d, repeat(encoding), repeat(errors)))", "return tuple(map(json_dict_unicode_to_bytes, d, repeat(encoding), repeat(errors)))", "return d"], "ret_type": "", "ret_type_p": [["int", 0.29712827822169496], ["dict", 0.10161361662545977]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Recursively convert dict keys and values to byte str", "long_descr": "Specialized for json return because this only handles, lists, tuples,\nand dict container types (the containers that the json module returns)", "ret": null}, "fn_lc": [[316, 0], [333, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "json_dict_bytes_to_unicode", "params": {"d": "", "encoding": "", "errors": ""}, "params_descr": {"d": "", "encoding": "", "errors": ""}, "params_occur": {"d": [["isinstance", "d", "binary_type"], ["to_text", "d", "encoding", "encoding", "errors", "errors"], ["isinstance", "d", "dict"], ["dict", "map", "json_dict_bytes_to_unicode", "iteritems", "d", "repeat", "encoding", "repeat", "errors"], ["isinstance", "d", "list"], ["list", "map", "json_dict_bytes_to_unicode", "d", "repeat", "encoding", "repeat", "errors"], ["isinstance", "d", "tuple"], ["tuple", "map", "json_dict_bytes_to_unicode", "d", "repeat", "encoding", "repeat", "errors"]], "encoding": [["to_text", "d", "encoding", "encoding", "errors", "errors"], ["dict", "map", "json_dict_bytes_to_unicode", "iteritems", "d", "repeat", "encoding", "repeat", "errors"], ["list", "map", "json_dict_bytes_to_unicode", "d", "repeat", "encoding", "repeat", "errors"], ["tuple", "map", "json_dict_bytes_to_unicode", "d", "repeat", "encoding", "repeat", "errors"]], "errors": [["to_text", "d", "encoding", "encoding", "errors", "errors"], ["dict", "map", "json_dict_bytes_to_unicode", "iteritems", "d", "repeat", "encoding", "repeat", "errors"], ["list", "map", "json_dict_bytes_to_unicode", "d", "repeat", "encoding", "repeat", "errors"], ["tuple", "map", "json_dict_bytes_to_unicode", "d", "repeat", "encoding", "repeat", "errors"]]}, "params_p": {"args": [], "d": [["Exception", 0.19623685647538724], ["str", 0.19450727343417956], ["int", 0.17485005213451366], ["Tuple[()]", 0.13511904935233313], ["Iterator[str]", 0.08420087405773463]], "encoding": [["str", 0.5868386962359551], ["dict", 0.11907066595635045], ["Dict[str, Any]", 0.10935085507758709], ["Dict[str, str]", 0.09472593054691794], ["List[str]", 0.09001385218318933]], "errors": [["str", 0.5868386962359551], ["dict", 0.11907066595635045], ["Dict[str, Any]", 0.10935085507758709], ["Dict[str, str]", 0.09472593054691794], ["List[str]", 0.09001385218318933]], "kwargs": []}, "q_name": "json_dict_bytes_to_unicode", "ret_exprs": ["return to_text(d, encoding=encoding, errors=errors)", "return dict(map(json_dict_bytes_to_unicode, iteritems(d), repeat(encoding), repeat(errors)))", "return list(map(json_dict_bytes_to_unicode, d, repeat(encoding), repeat(errors)))", "return tuple(map(json_dict_bytes_to_unicode, d, repeat(encoding), repeat(errors)))", "return d"], "ret_type": "", "ret_type_p": [["str", 0.9164217677775828]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return native stringified values from datastructures.", "long_descr": "For use with removing sensitive values pre-jsonification.", "ret": null}, "fn_lc": [[335, 0], [357, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "return_values", "params": {"obj": ""}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["isinstance", "obj", "text_type", "binary_type"], ["to_native", "obj", "errors"], ["isinstance", "obj", "SEQUENCETYPE"], ["isinstance", "obj", "Mapping"], ["obj", "items"], ["isinstance", "obj", "bool", "NoneType"], ["isinstance", "obj", "NUMBERTYPES"], ["to_native", "obj", "nonstring"], ["TypeError", "type", "obj", "obj"]]}, "params_p": {"args": [], "kwargs": [], "obj": []}, "q_name": "return_values", "ret_exprs": ["return", "return"], "ret_type": "", "ret_type_p": [["mypy.types.Type", 0.6375928060076154], ["Iterator[Dict[str, str]]", 0.09745033465029887]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Remove strings in no_log_strings from value.  If value is a container", "long_descr": "type, then remove a lot more", "ret": null}, "fn_lc": [[359, 0], [400, 16]], "fn_var_ln": {"native_str_value": [[377, 12], [377, 28]], "stringy_value": [[390, 8], [390, 21]], "value": [[397, 8], [397, 13]], "value_is_text": [[370, 12], [370, 25]]}, "fn_var_occur": {"native_str_value": [["native_str_value", "value"], ["native_str_value", "to_bytes", "value", "encoding", "errors"], ["native_str_value", "to_text", "value", "encoding", "errors"], ["native_str_value", "no_log_strings"], ["native_str_value", "native_str_value", "replace", "omit_me"], ["value_is_text", "isinstance", "native_str_value", "binary_type"], ["value", "to_text", "native_str_value", "encoding", "errors"], ["value_is_text", "isinstance", "native_str_value", "text_type"], ["value", "to_bytes", "native_str_value", "encoding", "errors"], ["value", "native_str_value"]], "stringy_value": [["stringy_value", "to_native", "value", "encoding", "errors"], ["stringy_value", "no_log_strings"], ["omit_me", "stringy_value"]], "value": [["isinstance", "value", "text_type", "binary_type"], ["native_str_value", "value"], ["isinstance", "value", "text_type"], ["native_str_value", "to_bytes", "value", "encoding", "errors"], ["isinstance", "value", "binary_type"], ["native_str_value", "to_text", "value", "encoding", "errors"], ["value", "to_text", "native_str_value", "encoding", "errors"], ["value", "to_bytes", "native_str_value", "encoding", "errors"], ["value", "native_str_value"], ["isinstance", "value", "SEQUENCETYPE"], ["remove_values", "elem", "no_log_strings", "elem", "value"], ["isinstance", "value", "Mapping"], ["dict", "k", "remove_values", "v", "no_log_strings", "k", "v", "value", "items"], ["isinstance", "value", "tuple", "chain", "NUMBERTYPES", "bool", "NoneType"], ["stringy_value", "to_native", "value", "encoding", "errors"], ["isinstance", "value", "datetime", "datetime"], ["value", "value", "isoformat"], ["TypeError", "type", "value", "value"]], "value_is_text": [["value_is_text", "True"], ["value_is_text", "False"], ["value_is_text", "isinstance", "native_str_value", "binary_type"], ["value_is_text", "isinstance", "native_str_value", "text_type"]]}, "name": "remove_values", "params": {"no_log_strings": "", "value": ""}, "params_descr": {"no_log_strings": "", "value": ""}, "params_occur": {"no_log_strings": [["native_str_value", "no_log_strings"], ["remove_values", "elem", "no_log_strings", "elem", "value"], ["dict", "k", "remove_values", "v", "no_log_strings", "k", "v", "value", "items"], ["stringy_value", "no_log_strings"]], "value": [["isinstance", "value", "text_type", "binary_type"], ["native_str_value", "value"], ["isinstance", "value", "text_type"], ["native_str_value", "to_bytes", "value", "encoding", "errors"], ["isinstance", "value", "binary_type"], ["native_str_value", "to_text", "value", "encoding", "errors"], ["value", "to_text", "native_str_value", "encoding", "errors"], ["value", "to_bytes", "native_str_value", "encoding", "errors"], ["value", "native_str_value"], ["isinstance", "value", "SEQUENCETYPE"], ["remove_values", "elem", "no_log_strings", "elem", "value"], ["isinstance", "value", "Mapping"], ["dict", "k", "remove_values", "v", "no_log_strings", "k", "v", "value", "items"], ["isinstance", "value", "tuple", "chain", "NUMBERTYPES", "bool", "NoneType"], ["stringy_value", "to_native", "value", "encoding", "errors"], ["isinstance", "value", "datetime", "datetime"], ["value", "value", "isoformat"], ["TypeError", "type", "value", "value"]]}, "params_p": {"args": [], "kwargs": [], "no_log_strings": [["str", 0.5693619985995042], ["int", 0.11484852172883266], ["Iterable", 0.11484852172883266], ["dict", 0.0860924362139977]], "value": [["str", 0.6059846897571235], ["Iterable[str]", 0.10620094514111231], ["Union[str, int]", 0.10101247196329581], ["int", 0.09479369885199959], ["Union[bytes, bytearray, str]", 0.09200819428646888]]}, "q_name": "remove_values", "ret_exprs": ["return 'VALUE_SPECIFIED_IN_NO_LOG_PARAMETER'", "return [remove_values(elem, no_log_strings) for elem in value]", "return dict((k, remove_values(v, no_log_strings)) for k, v in value.items())", "return 'VALUE_SPECIFIED_IN_NO_LOG_PARAMETER'", "return 'VALUE_SPECIFIED_IN_NO_LOG_PARAMETER'", "return value"], "ret_type": "", "ret_type_p": [["bool", 0.3231273062091301], ["int", 0.2789222177722946], ["str", 0.11144092296896564], ["Optional[str]", 0.10187909032633533], ["Iterable['cirq.Qid']", 0.09247384595577961]], "variables": {"native_str_value": "", "stringy_value": "", "value": "", "value_is_text": ""}, "variables_p": {"native_str_value": [["str", 0.384518160587903], ["bytes", 0.16653500754781025]], "stringy_value": [["str", 0.7106411172799169], ["List[str]", 0.08986962790377619]], "value": [["str", 0.40808859555427146], ["property", 0.11530462912080697]], "value_is_text": [["str", 0.19667108606194872], ["Union[str, Iterable[str]]", 0.12158795404034044], ["dict", 0.10084632295711242], ["Iterable[Any]", 0.10005987956828238], ["type", 0.09213547342897736]]}}, {"docstring": {"func": "Remove strings that look like passwords from log messages ", "long_descr": null, "ret": null}, "fn_lc": [[403, 0], [465, 17]], "fn_var_ln": {"begin": [[441, 16], [441, 21]], "data": [[416, 4], [416, 8]], "end": [[425, 12], [425, 15]], "output": [[464, 8], [464, 14]], "prev_begin": [[460, 12], [460, 22]], "sep": [[444, 16], [444, 19]], "sep_search_end": [[453, 16], [453, 30]]}, "fn_var_occur": {"begin": [["begin", "len", "data"], ["prev_begin", "begin"], ["end", "data", "rindex", "begin"], ["output", "insert", "data", "begin"], ["begin", "data", "rindex", "sep_search_end"], ["sep", "data", "index", "begin", "end"], ["output", "insert", "data", "begin"], ["sep_search_end", "begin"], ["output", "insert", "data", "begin", "sep"], ["prev_begin", "begin"]], "data": [["data", "to_native", "data"], ["begin", "len", "data"], ["end", "data", "rindex", "begin"], ["output", "insert", "data", "begin"], ["begin", "data", "rindex", "sep_search_end"], ["sep", "data", "index", "begin", "end"], ["output", "insert", "data", "begin"], ["output", "insert", "data", "end", "prev_begin"], ["output", "insert", "data", "begin", "sep"]], "end": [["end", "data", "rindex", "begin"], ["sep_search_end", "end"], ["sep", "data", "index", "begin", "end"], ["output", "insert", "data", "end", "prev_begin"]], "output": [["output", "insert", "data", "begin"], ["output", "insert", "data", "begin"], ["output", "insert", "data", "end", "prev_begin"], ["output", "insert"], ["output", "insert", "data", "begin", "sep"], ["output", "join", "output"], ["output", "remove_values", "output", "no_log_values"]], "prev_begin": [["prev_begin", "begin"], ["output", "insert", "data", "end", "prev_begin"], ["prev_begin", "begin"]], "sep": [["sep", "None"], ["sep", "data", "index", "begin", "end"], ["output", "insert", "data", "begin", "sep"]], "sep_search_end": [["sep_search_end", "end"], ["begin", "data", "rindex", "sep_search_end"], ["sep_search_end", "begin"]]}, "name": "heuristic_log_sanitize", "params": {"data": "", "no_log_values": ""}, "params_descr": {"data": "", "no_log_values": ""}, "params_occur": {"data": [["data", "to_native", "data"], ["begin", "len", "data"], ["end", "data", "rindex", "begin"], ["output", "insert", "data", "begin"], ["begin", "data", "rindex", "sep_search_end"], ["sep", "data", "index", "begin", "end"], ["output", "insert", "data", "begin"], ["output", "insert", "data", "end", "prev_begin"], ["output", "insert", "data", "begin", "sep"]], "no_log_values": [["output", "remove_values", "output", "no_log_values"]]}, "params_p": {"args": [], "data": [["str", 0.4224530885195661], ["int", 0.28747507444814013], ["bytes", 0.10364980005622206]], "kwargs": [], "no_log_values": [["str", 0.37670809116536763], ["Union[Sequence, 'SweepFixedValues']", 0.12010987657358943], ["float", 0.09813756259366244]]}, "q_name": "heuristic_log_sanitize", "ret_exprs": ["return output"], "ret_type": "", "ret_type_p": [["str", 0.5992892672186398], ["Set[str]", 0.3017319755456901], ["Optional[str]", 0.09897875723567]], "variables": {"begin": "", "data": "", "end": "", "output": "", "prev_begin": "", "sep": "", "sep_search_end": ""}, "variables_p": {"begin": [["int", 1.0]], "data": [["str", 0.2838662759324939], ["bytes", 0.19372907527924854], ["os.terminal_size", 0.13002413360736798], ["int", 0.0992772148948478], ["Dict[str, int]", 0.09921143038338774], ["Dict[str, Union[Any, Any, Any, str]]", 0.09729303866333551]], "end": [["str", 1.0]], "output": [["str", 1.0]], "prev_begin": [["str", 0.3098716520966035], ["Dict[str, Union[Any, Any]]", 0.1640334176395379], ["bool", 0.08658232235237222]], "sep": [["float", 0.41118335490666896], ["int", 0.3957163201944625], ["List[int]", 0.09931126530651546], ["str", 0.09378905959235316]], "sep_search_end": [["str", 0.6907133103649584], ["frozenset[bytes]", 0.10772304348139108], ["Dict[str, Dict[str, str]]", 0.10328758666003554], ["Dict[str, Union[int, str]]", 0.09827605949361468]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[467, 0], [483, 51]], "fn_var_ln": {"base": [[471, 8], [471, 12]], "suffix": [[481, 8], [481, 14]]}, "fn_var_occur": {"base": [["suffix", "base"], ["suffix", "base"]], "suffix": [["unit", "None", "size", "limit", "unit", "None", "unit", "upper", "suffix"], ["suffix", "base"], ["suffix", "base"], ["float", "size", "limit", "suffix"]]}, "name": "bytes_to_human", "params": {"isbits": "", "size": "", "unit": ""}, "params_descr": {"isbits": "", "size": "", "unit": ""}, "params_occur": {"isbits": [], "size": [["unit", "None", "size", "limit", "unit", "None", "unit", "upper", "suffix"], ["float", "size", "limit", "suffix"]], "unit": [["unit", "None", "size", "limit", "unit", "None", "unit", "upper", "suffix"]]}, "params_p": {"args": [], "isbits": [["int", 0.3], ["Optional[Callable]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Optional[int]", 0.09999999999999999], ["Union[int, Tuple[int, int]]", 0.09999999999999999]], "kwargs": [], "size": [["Optional[int]", 0.7553333030495536], ["float", 0.07751019160965149]], "unit": [["Optional[int]", 0.5974469696004312], ["int", 0.19236966807379788], ["bytes", 0.10723256797604301], ["Union[int, None]", 0.10295079434972793]]}, "q_name": "bytes_to_human", "ret_exprs": ["return '%.2f %s' % (float(size)/ limit, suffix)"], "ret_type": "", "ret_type_p": [["str", 0.7393943543331908], ["Tuple[Tuple[int, ...]]", 0.09698914918663368]], "variables": {"base": "", "suffix": ""}, "variables_p": {"base": [["str", 0.553612883183564], ["Tuple[str, str, str, str, str]", 0.11543837770306067], ["Dict[str, str]", 0.08812533623983972], ["datetime.timedelta", 0.08023535769127002], ["Tuple[Literal, Literal]", 0.07698021874923314]], "suffix": [["Optional[str]", 0.11233255266341392], ["Union[List[str], str]", 0.09805978427011212], ["list", 0.0818118685706576]]}}, {"docstring": {"func": "Convert number in string format into bytes (ex: '2K' => 2048) or using unit argument", "long_descr": "ex:\n  human_to_bytes('10M') <=> human_to_bytes(10, 'M')", "ret": null}, "fn_lc": [[485, 0], [531, 34]], "fn_var_ln": {"expect_message": [[524, 12], [524, 26]], "limit": [[509, 8], [509, 13]], "m": [[492, 4], [492, 5]], "num": [[496, 8], [496, 11]], "range_key": [[507, 4], [507, 13]], "unit": [[502, 8], [502, 12]], "unit_class": [[518, 8], [518, 18]], "unit_class_name": [[519, 8], [519, 23]]}, "fn_var_occur": {"expect_message": [["expect_message", "range_key", "unit_class", "range_key"], ["expect_message", "unit_class", "unit_class_name"], ["ValueError", "number", "expect_message"]], "limit": [["limit", "SIZE_RANGES", "range_key"], ["int", "round", "num", "limit"]], "m": [["m", "re", "search", "str", "number", "flags", "re", "IGNORECASE"], ["m", "None"], ["num", "float", "m", "group"], ["ValueError", "m", "group", "number"], ["unit", "m", "group"]], "num": [["num", "float", "m", "group"], ["int", "round", "num"], ["int", "round", "num", "limit"]], "range_key": [["range_key", "unit", "upper"], ["limit", "SIZE_RANGES", "range_key"], ["expect_message", "range_key", "unit_class", "range_key"]], "unit": [["unit", "m", "group"], ["unit", "None"], ["unit", "default_unit"], ["unit", "None"], ["range_key", "unit", "upper"], ["ValueError", "number", "unit", "join", "SIZE_RANGES", "keys"], ["len", "unit"], ["unit_class_name", "unit", "lower"], ["unit", "unit_class"]], "unit_class": [["expect_message", "range_key", "unit_class", "range_key"], ["expect_message", "unit_class", "unit_class_name"], ["unit", "unit_class"]], "unit_class_name": [["expect_message", "unit_class", "unit_class_name"], ["unit_class_name", "unit", "lower"]]}, "name": "human_to_bytes", "params": {"default_unit": "", "isbits": "", "number": ""}, "params_descr": {"default_unit": "", "isbits": "", "number": ""}, "params_occur": {"default_unit": [["unit", "default_unit"]], "isbits": [], "number": [["m", "re", "search", "str", "number", "flags", "re", "IGNORECASE"], ["ValueError", "str", "number"], ["ValueError", "m", "group", "number"], ["ValueError", "number", "unit", "join", "SIZE_RANGES", "keys"], ["ValueError", "number", "expect_message"]]}, "params_p": {"args": [], "default_unit": [["abc.BaseConfig", 0.1642976770403742], ["float", 0.12633677449511777], ["Iterable[T]", 0.12633677449511777], ["str", 0.1153913596625109]], "isbits": [["Optional", 0.24830844172754588], ["float", 0.1952790443852982], ["bool", 0.15897500396775885], ["str", 0.15897500396775885], ["int", 0.07948750198387942], ["Optional[T]", 0.07948750198387942], ["T", 0.07948750198387942]], "kwargs": [], "number": [["str", 0.665510024051867], ["Union[bytes, bytearray, str]", 0.24354613446778275], ["Optional[int]", 0.09094384148035047]]}, "q_name": "human_to_bytes", "ret_exprs": ["return int(round(num))", "return int(round(num * limit))"], "ret_type": "", "ret_type_p": [["bool", 0.12910033294787684], ["List[str]", 0.07058786603382294], ["int", 0.06658009689098231], ["Optional[float]", 0.06658009689098231], ["str", 0.06658009689098231]], "variables": {"expect_message": "", "limit": "", "m": "", "num": "", "range_key": "", "unit": "", "unit_class": "", "unit_class_name": ""}, "variables_p": {"expect_message": [["tuple", 0.12730775640579672], ["Dict[str, Any]", 0.10930361143755828], ["Dict[str, Dict[str, Any]]", 0.0960083703963147], ["Dict[str, str]", 0.09297205851641771], ["List[str]", 0.09252274116500817], ["dict", 0.09035515402750884], ["str", 0.09025799573083229]], "limit": [["frozenset[Any]", 0.9999999999999999]], "m": [["str", 0.4087793155510413], ["list", 0.21106754467340216], ["int", 0.10900828809078024], ["Pattern[str]", 0.09567833912955753], ["List[str]", 0.0873258908242429]], "num": [["float", 0.8059068597970908], ["int", 0.19409314020290908]], "range_key": [["str", 0.5806389962978172], ["bytes", 0.19947395015241912], ["Dict[Any, str]", 0.11378427722396665], ["dict", 0.10610277632579712]], "unit": [["int", 0.18768983772656456], ["Optional[str]", 0.1799720545820791], ["Set[str]", 0.15743813773387758], ["List[str]", 0.10456914438812845], ["Tuple[str, str]", 0.10396202151537057], ["bytes", 0.09110100084479025], ["Tuple[Hashable]", 0.08773265238173589], ["str", 0.08753515082745365]], "unit_class": [["Dict[str, str]", 0.33852821776732295], ["dict", 0.22820219455787527], ["Dict[str, List[int]]", 0.18682501132412946], ["Dict[str, Type[Any]]", 0.16141106663742996], ["OrderedDict[str, List[str]]", 0.08503350971324247]], "unit_class_name": [["str", 0.8890887514311892], ["Optional[str]", 0.1109112485688112]]}}, {"docstring": {"func": "is the given path executable?", "long_descr": "Limitations:\n* Does not account for FSACLs.\n* Most times we really want to know \"Can the current user execute this\n  file\"  This function does not tell us that, only if an execute bit is set.", "ret": null}, "fn_lc": [[533, 0], [544, 87]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_executable", "params": {"path": ""}, "params_descr": {"path": ""}, "params_occur": {"path": [["stat", "S_IXUSR", "stat", "S_IXGRP", "stat", "S_IXOTH", "os", "stat", "path", "stat", "ST_MODE"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.6586029927466115], ["bool", 0.07772470815677304]]}, "q_name": "is_executable", "ret_exprs": ["return ((stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH) & os.stat(path)[stat.ST_MODE])"], "ret_type": "", "ret_type_p": [["str", 0.53163768627798], ["bytes", 0.10569176423837943], ["int", 0.0855427558919798], ["Dict[str, int]", 0.08501485667267283]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "read the modules parameters and store them globally.", "long_descr": "This function may be needed for certain very dynamic custom modules which\nwant to process the parameters that are being handed the module.  Since\nthis is so closely tied to the implementation of modules we cannot\nguarantee API stability for it (it may change between versions) however we\nwill try not to break it gratuitously.  It is certainly more future-proof\nto call this function and consume its outputs than to implement the logic\ninside it as a copy in your own code.", "ret": null}, "fn_lc": [[546, 0], [598, 19]], "fn_var_ln": {"_ANSIBLE_ARGS": [[580, 8], [580, 21]], "buffer": [[579, 16], [579, 22]], "fd": [[567, 16], [567, 18]], "params": [[590, 8], [590, 14]]}, "fn_var_occur": {"_ANSIBLE_ARGS": [["_ANSIBLE_ARGS", "None"], ["buffer", "_ANSIBLE_ARGS"], ["_ANSIBLE_ARGS", "buffer"]], "buffer": [["buffer", "_ANSIBLE_ARGS"], ["buffer", "fd", "read"], ["buffer", "sys", "argv"], ["buffer", "buffer", "encode", "errors"], ["buffer", "sys", "stdin", "read"], ["buffer", "sys", "stdin", "buffer", "read"], ["_ANSIBLE_ARGS", "buffer"], ["params", "json", "loads", "buffer", "decode"]], "fd": [["fd", "open", "sys", "argv"], ["buffer", "fd", "read"], ["fd", "close"]], "params": [["params", "json", "loads", "buffer", "decode"], ["params", "json_dict_unicode_to_bytes", "params"]]}, "name": "_load_params", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_load_params", "ret_exprs": ["return params['ANSIBLE_MODULE_ARGS']"], "ret_type": "", "ret_type_p": [["dict", 0.20600333894060263], ["Optional[str]", 0.18247581823136058], ["bool", 0.1035156849488901], ["str", 0.09599847999794145]], "variables": {"_ANSIBLE_ARGS": "", "buffer": "", "fd": "", "params": ""}, "variables_p": {"_ANSIBLE_ARGS": [["str", 0.2620488265002302], ["Union[Literal, Literal]", 0.22431652912078437], ["int", 0.09058436245731238], ["Optional[TextIO]", 0.08921062707962779], ["TextIO", 0.0789347300207293]], "buffer": [["str", 0.5331328345029038]], "fd": [["str", 0.3528234264944157], ["Dict[str, Type[Any]]", 0.09951068564452632], ["float", 0.09490457518114061], ["List[str]", 0.08166874086213517]], "params": [["int", 0.5586173227986224], ["str", 0.11512162653106175], ["Tuple[Any, Any, Any, Any]", 0.09898174307631535]]}}, {"docstring": {"func": "Load value from environment ", "long_descr": null, "ret": null}, "fn_lc": [[600, 0], [606, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "env_fallback", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": []}, "q_name": "env_fallback", "ret_exprs": ["return os.environ[arg]"], "ret_type": "", "ret_type_p": [["str", 0.47630709117810266], ["Optional[str]", 0.10224048608579102], ["Sequence[str]", 0.07375344815531652]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Lowercase elements of a list.", "long_descr": "If an element is not a string, pass it through untouched.", "ret": null}, "fn_lc": [[608, 0], [619, 18]], "fn_var_ln": {"lowered": [[613, 4], [613, 11]]}, "fn_var_occur": {"lowered": [["lowered", "append", "value", "lower"], ["lowered", "append", "value"]]}, "name": "_lenient_lowercase", "params": {"lst": ""}, "params_descr": {"lst": ""}, "params_occur": {"lst": []}, "params_p": {"args": [], "kwargs": [], "lst": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]]}, "q_name": "_lenient_lowercase", "ret_exprs": ["return lowered"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"lowered": ""}, "variables_p": {"lowered": [["list", 0.44839018145409737], ["str", 0.3520066633774236]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[2327, 0], [2328, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_module_path", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_module_path", "ret_exprs": ["return os.path.dirname(os.path.realpath(__file__))"], "ret_type": "", "ret_type_p": [["str", 1.0]], "variables": {}, "variables_p": {}}], "imports": ["locale", "os", "re", "pipes", "shlex", "subprocess", "sys", "types", "time", "select", "shutil", "stat", "tempfile", "traceback", "grp", "pwd", "platform", "errno", "datetime", "itertools", "repeat", "chain", "syslog", "systemd", "journal", "selinux", "collections", "Sequence", "Mapping", "collections", "abc", "KeysView", "json", "simplejson", "json", "hashlib", "sha", "md5", "ansible", "module_utils", "pycompat24", "get_exception", "literal_eval", "ansible", "module_utils", "six", "PY2", "PY3", "b", "binary_type", "integer_types", "iteritems", "text_type", "string_types", "ansible", "module_utils", "six", "moves", "map", "reduce", "ansible", "module_utils", "_text", "to_native", "to_bytes", "to_text"], "mod_var_ln": {"AVAILABLE_HASH_ALGORITHMS": [[134, 4], [134, 29]], "BOOLEANS": [[33, 0], [33, 8]], "BOOLEANS_FALSE": [[32, 0], [32, 14]], "BOOLEANS_TRUE": [[31, 0], [31, 13]], "DEFAULT_PERM": [[213, 0], [213, 12]], "EXEC_PERM_BITS": [[212, 0], [212, 14]], "FILE_COMMON_ARGUMENTS": [[187, 0], [187, 21]], "HAS_SYSLOG": [[66, 4], [66, 14]], "HAVE_SELINUX": [[77, 4], [77, 16]], "Mapping": [[89, 4], [89, 11]], "NUMBERTYPES": [[152, 0], [152, 11]], "NoneType": [[82, 0], [82, 8]], "PASSWD_ARG_RE": [[208, 0], [208, 13]], "PERM_BITS": [[211, 0], [211, 9]], "SEQUENCETYPE": [[97, 4], [97, 16]], "SIZE_RANGES": [[35, 0], [35, 11]], "Sequence": [[88, 4], [88, 12]], "_ANSIBLE_ARGS": [[185, 0], [185, 13]], "_NUMBERTYPES": [[147, 0], [147, 12]], "_literal_eval": [[177, 0], [177, 13]], "algorithms": [[129, 8], [129, 18]], "basestring": [[175, 4], [175, 14]], "bytes": [[168, 4], [168, 9]], "has_journal": [[72, 4], [72, 15]], "imap": [[154, 0], [154, 4]], "unicode": [[161, 4], [161, 11]]}, "mod_var_occur": {"AVAILABLE_HASH_ALGORITHMS": [["AVAILABLE_HASH_ALGORITHMS", "md5", "md5"], ["digest_method", "AVAILABLE_HASH_ALGORITHMS", "algorithm"], ["self", "fail_json", "msg", "filename", "algorithm", "join", "AVAILABLE_HASH_ALGORITHMS"], ["AVAILABLE_HASH_ALGORITHMS"]], "BOOLEANS": [], "BOOLEANS_FALSE": [["BOOLEANS", "BOOLEANS_TRUE", "BOOLEANS_FALSE"], ["FALSEY", "frozenset", "BOOLEANS_FALSE"], ["arg", "BOOLEANS_FALSE"]], "BOOLEANS_TRUE": [["BOOLEANS", "BOOLEANS_TRUE", "BOOLEANS_FALSE"], ["TRUTHY", "frozenset", "BOOLEANS_TRUE"], ["arg", "BOOLEANS_TRUE"]], "DEFAULT_PERM": [["os", "chmod", "b_dest", "DEFAULT_PERM", "umask"]], "EXEC_PERM_BITS": [["has_x_permissions", "prev_mode", "EXEC_PERM_BITS"]], "FILE_COMMON_ARGUMENTS": [["FILE_COMMON_ARGUMENTS", "items"]], "HAS_SYSLOG": [["HAS_SYSLOG"]], "HAVE_SELINUX": [["HAVE_SELINUX"], ["HAVE_SELINUX"], ["HAVE_SELINUX", "self", "selinux_enabled"], ["HAVE_SELINUX", "self", "selinux_enabled"], ["HAVE_SELINUX", "self", "selinux_enabled"], ["HAVE_SELINUX", "self", "selinux_enabled"], ["HAVE_SELINUX", "self", "selinux_enabled"]], "Mapping": [["isinstance", "obj", "Mapping"], ["isinstance", "value", "Mapping"]], "NUMBERTYPES": [["isinstance", "obj", "NUMBERTYPES"], ["isinstance", "value", "tuple", "chain", "NUMBERTYPES", "bool", "NoneType"]], "NoneType": [["isinstance", "obj", "bool", "NoneType"], ["isinstance", "value", "tuple", "chain", "NUMBERTYPES", "bool", "NoneType"]], "PASSWD_ARG_RE": [["PASSWD_ARG_RE", "match", "arg"]], "PERM_BITS": [["inverse_mask", "mask", "PERM_BITS"], ["os", "chmod", "b_src", "dest_stat", "st_mode", "PERM_BITS"]], "SEQUENCETYPE": [["isinstance", "obj", "SEQUENCETYPE"], ["isinstance", "value", "SEQUENCETYPE"], ["isinstance", "aliases", "SEQUENCETYPE", "isinstance", "aliases", "binary_type", "text_type"], ["isinstance", "choices", "SEQUENCETYPE", "isinstance", "choices", "binary_type", "text_type"]], "SIZE_RANGES": [["sorted", "iteritems", "SIZE_RANGES", "key", "item", "item"], ["limit", "SIZE_RANGES", "range_key"], ["ValueError", "number", "unit", "join", "SIZE_RANGES", "keys"]], "Sequence": [["SEQUENCETYPE", "Sequence", "KeysView"], ["SEQUENCETYPE", "Sequence"]], "_ANSIBLE_ARGS": [["_ANSIBLE_ARGS"], ["_ANSIBLE_ARGS", "None"], ["buffer", "_ANSIBLE_ARGS"], ["_ANSIBLE_ARGS", "buffer"]], "_NUMBERTYPES": [["NUMBERTYPES", "_NUMBERTYPES"]], "_literal_eval": [], "algorithms": [["algorithms"]], "basestring": [], "bytes": [], "has_journal": [["has_journal"]], "imap": [], "unicode": []}, "no_types_annot": {"D": 0, "I": 0, "U": 511}, "session_id": "uNgaZ9LuEMZxOyf1fy6bQMyHH7-HLBs66e4RXsHAgl4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"AVAILABLE_HASH_ALGORITHMS": "", "BOOLEANS": "", "BOOLEANS_FALSE": "", "BOOLEANS_TRUE": "", "DEFAULT_PERM": "", "EXEC_PERM_BITS": "", "FILE_COMMON_ARGUMENTS": "", "HAS_SYSLOG": "", "HAVE_SELINUX": "", "Mapping": "", "NUMBERTYPES": "", "NoneType": "", "PASSWD_ARG_RE": "", "PERM_BITS": "", "SEQUENCETYPE": "", "SIZE_RANGES": "", "Sequence": "", "_ANSIBLE_ARGS": "", "_NUMBERTYPES": "", "_literal_eval": "", "algorithms": "", "basestring": "", "bytes": "", "has_journal": "", "imap": "", "unicode": ""}, "variables_p": {"AVAILABLE_HASH_ALGORITHMS": [["str", 0.7226686457833205], ["int", 0.09229886445672132]], "BOOLEANS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "BOOLEANS_FALSE": [["int", 0.10517500912908959], ["List[int]", 0.0931200121860993], ["Dict[str, int]", 0.09229000880169543]], "BOOLEANS_TRUE": [["dict", 0.12482190697507282], ["str", 0.11665285376085756], ["bytes", 0.10275268444664533], ["float", 0.09847848696917831]], "DEFAULT_PERM": [["Tuple[str, str, str, str]", 0.9999999995346962], ["int", 2.782596827212059e-10]], "EXEC_PERM_BITS": [["str", 0.9999999999770286], ["int", 2.297148456465906e-11]], "FILE_COMMON_ARGUMENTS": [["str", 0.2581310395248517], ["List[str]", 0.11885440040925287], ["bytes", 0.08249085148776199], ["Tuple[Literal, Literal, Literal]", 0.08074748081747478]], "HAS_SYSLOG": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "HAVE_SELINUX": [["str", 0.6098814441615313], ["int", 0.15354437116771147]], "Mapping": [["Dict[str, Optional[bool]]", 0.29870821141880755], ["Dict[str, float]", 0.2201782402318381], ["str", 0.1815587269284941], ["Type[Dict[str, Any]]", 0.1068291600826065], ["Dict[str, str]", 0.10663570226953753], ["frozenset[Union[bytes, str]]", 0.08608995906871611]], "NUMBERTYPES": [["int", 0.29525237619694356], ["tuple", 0.27415426247470687], ["Tuple[int]", 0.09294723293683213], ["bool", 0.08597615397890858], ["float", 0.08362436884545119]], "NoneType": [["Type[None]", 0.3106171784937807], ["int", 0.19950863390339904], ["tuple", 0.10922486343345397], ["Tuple[Type]", 0.0965159709585434], ["set", 0.09471724705061246], ["Type[Callable[[str], None]]", 0.09471690778617332], ["dict", 0.09469919837403719]], "PASSWD_ARG_RE": [["Pattern[str]", 0.9999999998869661], ["Pattern[bytes]", 1.1303384500200184e-10]], "PERM_BITS": [["str", 0.21120632383001936], ["Dict[str, str]", 0.11141364744884527], ["List[Dict[str, Any]]", 0.08325328056870275], ["Optional[Match[str]]", 0.08103252463837063]], "SEQUENCETYPE": [["Dict[int, int]", 0.3959353705326547], ["list", 0.24058761877576512], ["dict", 0.09859710376863966], ["Dict[str, Any]", 0.08922980880322573], ["str", 0.08782504905985739], ["bool", 0.08782504905985739]], "SIZE_RANGES": [["Dict[str, int]", 0.13187197300407338], ["int", 0.12184379288822916]], "Sequence": [["str", 0.9999999999999999]], "_ANSIBLE_ARGS": [["Union[Literal, Literal]", 0.24663375862718603], ["str", 0.20307148763506805], ["bool", 0.088472571168545], ["List[str]", 0.088472571168545]], "_NUMBERTYPES": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "_literal_eval": [["str", 0.5], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.2], ["int", 0.2], ["tuple", 0.1]], "algorithms": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "basestring": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "bytes": [["Callable", 0.39999999999999997], ["int", 0.3], ["Type[str]", 0.19999999999999998], ["str", 0.09999999999999999]], "has_journal": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "imap": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "unicode": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}