{"error": null, "response": {"classes": [{"cls_lc": [[294, 0], [565, 21]], "cls_var_ln": {"__metaclass__": [[301, 4], [301, 17]]}, "cls_var_occur": {"__metaclass__": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[303, 4], [307, 31]], "fn_var_ln": {"_changed": [[307, 8], [307, 21]], "_connection": [[304, 8], [304, 24]], "_module": [[305, 8], [305, 20]], "_service": [[306, 8], [306, 21]]}, "fn_var_occur": {"_changed": [["self", "_changed", "changed"]], "_connection": [["self", "_connection", "connection"]], "_module": [["self", "_module", "module"]], "_service": [["self", "_service", "service"]]}, "name": "__init__", "params": {"changed": "", "connection": "", "module": "", "self": "", "service": ""}, "params_descr": {"changed": "", "connection": "", "module": "", "self": "", "service": ""}, "params_occur": {"changed": [["self", "_changed", "changed"]], "connection": [["self", "_connection", "connection"]], "module": [["self", "_module", "module"]], "self": [["self", "_connection", "connection"], ["self", "_module", "module"], ["self", "_service", "service"], ["self", "_changed", "changed"]], "service": [["self", "_service", "service"]]}, "params_p": {"args": [], "changed": [["str", 0.43377930885233745], ["Optional[List]", 0.11345841757844478], ["Dict[str, Tuple[str, str]]", 0.10512258737442329], ["Callable", 0.09758622611452616], ["int", 0.081205576578891]], "connection": [["str", 0.43377930885233745], ["Optional[List]", 0.11345841757844478], ["Dict[str, Tuple[str, str]]", 0.10512258737442329], ["Callable", 0.09758622611452616], ["int", 0.081205576578891]], "kwargs": [], "module": [["str", 0.43377930885233745], ["Optional[List]", 0.11345841757844478], ["Dict[str, Tuple[str, str]]", 0.10512258737442329], ["Callable", 0.09758622611452616], ["int", 0.081205576578891]], "self": [], "service": [["str", 0.43377930885233745], ["Optional[List]", 0.11345841757844478], ["Dict[str, Tuple[str, str]]", 0.10512258737442329], ["Callable", 0.09758622611452616], ["int", 0.081205576578891]]}, "q_name": "BaseModule.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_changed": "", "_connection": "", "_module": "", "_service": ""}, "variables_p": {"_changed": [["str", 1.0001215190724666e-10], ["int", 9.440349307581676e-11]], "_connection": [["str", 0.3154639874942479], ["int", 0.21348873574561533], ["Optional[float]", 0.10942028819644531], ["bool", 0.08409959250411694]], "_module": [["str", 0.29584627014228065], ["bytes", 0.08658229411514357]], "_service": [["int", 0.2138336495671751], ["Pattern[str]", 0.17230687903879432], ["List[str]", 0.10691682478358755]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[310, 4], [311, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "changed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_changed"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseModule.changed", "ret_exprs": ["return self._changed"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[314, 4], [316, 35]], "fn_var_ln": {"_changed": [[316, 12], [316, 25]]}, "fn_var_occur": {"_changed": [["self", "_changed"], ["self", "_changed", "changed"]]}, "name": "changed", "params": {"changed": "", "self": ""}, "params_descr": {"changed": "", "self": ""}, "params_occur": {"changed": [["self", "_changed", "changed"]], "self": [["self", "_changed"], ["self", "_changed", "changed"]]}, "params_p": {"args": [], "changed": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "kwargs": [], "self": []}, "q_name": "BaseModule.changed", "ret_exprs": [], "ret_type": "", "variables": {"_changed": ""}, "variables_p": {"_changed": [["Type[str]", 0.7467105139475697], ["float", 0.11049484507545027], ["str", 0.05019382308887025], ["Dict[int, str]", 0.047068680638710766], ["Dict[str, str]", 0.04553213724939907]]}}, {"docstring": {"func": "This method should return oVirt Python SDK type, which we want to", "long_descr": "create or update, initialized by values passed by Ansible module.\n\nFor example if we want to create VM, we will return following:\n  types.Vm(name=self._module.params['vm_name'])", "ret": "Specific instance of sdk.Struct."}, "fn_lc": [[319, 4], [329, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "build_entity", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseModule.build_entity", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method handle checks whether the entity values are same as values", "long_descr": "passed to ansible module. By default we don't compare any values.", "ret": "True if values are same, so we don't need to update the entity."}, "fn_lc": [[331, 4], [339, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "update_check", "params": {"entity": "", "self": ""}, "params_descr": {"entity": "Entity we want to compare with Ansible module values.", "self": ""}, "params_occur": {"entity": [], "self": []}, "params_p": {"args": [], "entity": [["T", 0.4999999990310928], ["Optional[str]", 4.645561743426227e-10], ["bool", 1.8190687725194616e-10]], "kwargs": [], "self": []}, "q_name": "BaseModule.update_check", "ret_exprs": ["return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method is called right before entity is created.", "long_descr": null, "ret": null}, "fn_lc": [[341, 4], [347, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "pre_create", "params": {"entity": "", "self": ""}, "params_descr": {"entity": "Entity to be created or updated.", "self": ""}, "params_occur": {"entity": [], "self": []}, "params_p": {"args": [], "entity": [["str", 0.284406868900197], ["list", 0.07281879055750562], ["Optional[str]", 0.06855357670858912]], "kwargs": [], "self": []}, "q_name": "BaseModule.pre_create", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method is called right after entity is created.", "long_descr": null, "ret": null}, "fn_lc": [[349, 4], [355, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "post_create", "params": {"entity": "", "self": ""}, "params_descr": {"entity": "Entity which was created.", "self": ""}, "params_occur": {"entity": [], "self": []}, "params_p": {"args": [], "entity": [["list", 0.16253060168766822], ["T", 0.09027342498916946], ["str", 0.08156196286515793], ["bool", 0.07323740379494503]], "kwargs": [], "self": []}, "q_name": "BaseModule.post_create", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method is called right after entity is updated.", "long_descr": null, "ret": null}, "fn_lc": [[357, 4], [363, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "post_update", "params": {"entity": "", "self": ""}, "params_descr": {"entity": "Entity which was updated.", "self": ""}, "params_occur": {"entity": [], "self": []}, "params_p": {"args": [], "entity": [["list", 0.1796121930731913], ["T", 0.08435673967151519], ["str", 0.0790698882074405], ["bool", 0.06884872928368153]], "kwargs": [], "self": []}, "q_name": "BaseModule.post_update", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Method which is called when state of the entity is 'present'. If user", "long_descr": "don't provide `entity` parameter the entity is searched using\n`search_params` parameter. If entity is found it's updated, whether\nthe entity should be updated is checked by `update_check` method.\nThe corresponding updated entity is build by `build_entity` method.\n\nFunction executed after entity is created can optionally be specified\nin `post_create` parameter. Function executed after entity is updated\ncan optionally be specified in `post_update` parameter.", "ret": "Dictionary with values returned by Ansible module."}, "fn_lc": [[365, 4], [426, 9]], "fn_var_ln": {"changed": [[405, 12], [405, 24]], "entity": [[400, 16], [400, 22]], "entity_service": [[408, 8], [408, 22]], "state_condition": [[412, 12], [412, 27]]}, "fn_var_occur": {"changed": [["self", "changed", "True"], ["self", "changed", "True"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "entity": [["entity", "None"], ["entity", "self", "search_entity", "search_params"], ["self", "pre_create", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["self", "update_check", "entity"], ["self", "post_update", "entity"], ["entity", "self", "_service", "add", "self", "build_entity", "kwargs"], ["self", "post_create", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["state_condition", "entity", "entity"], ["state_condition", "entity", "entity", "entity", "status", "result_state"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "entity_service": [["entity_service", "self", "_service", "service", "entity", "id"], ["entity_service", "update", "self", "build_entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["wait", "service", "entity_service", "condition", "state_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"]], "state_condition": [["state_condition", "entity", "entity"], ["state_condition", "entity", "entity", "entity", "status", "result_state"], ["wait", "service", "entity_service", "condition", "state_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"]]}, "name": "create", "params": {"entity": "", "fail_condition": "", "kwargs": "", "result_state": "", "search_params": "", "self": ""}, "params_descr": {"entity": "Entity we want to update, if exists.", "fail_condition": "Function which checks incorrect state of entity, if it returns `True` Exception is raised.", "kwargs": "Additional parameters passed when creating entity.", "result_state": "State which should entity has in order to finish task.", "search_params": "Dictionary of parameters to be used for search.", "self": ""}, "params_occur": {"entity": [["entity", "None"], ["entity", "self", "search_entity", "search_params"], ["self", "pre_create", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["self", "update_check", "entity"], ["self", "post_update", "entity"], ["entity", "self", "_service", "add", "self", "build_entity", "kwargs"], ["self", "post_create", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["state_condition", "entity", "entity"], ["state_condition", "entity", "entity", "entity", "status", "result_state"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "fail_condition": [["wait", "service", "entity_service", "condition", "state_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"]], "kwargs": [["entity", "self", "_service", "add", "self", "build_entity", "kwargs"]], "result_state": [["state_condition", "entity", "entity", "entity", "status", "result_state"]], "search_params": [["entity", "self", "search_entity", "search_params"]], "self": [["entity", "self", "search_entity", "search_params"], ["self", "pre_create", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["self", "update_check", "entity"], ["self", "_module", "check_mode"], ["entity_service", "update", "self", "build_entity"], ["self", "post_update", "entity"], ["self", "changed", "True"], ["self", "_module", "check_mode"], ["entity", "self", "_service", "add", "self", "build_entity", "kwargs"], ["self", "post_create", "entity"], ["self", "changed", "True"], ["entity_service", "self", "_service", "service", "entity", "id"], ["wait", "service", "entity_service", "condition", "state_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]]}, "params_p": {"args": [], "entity": [["datetime.datetime", 0.10373310555935542], ["Dict[str, str]", 0.09181235508091305], ["Dict[str, Any]", 0.09009806444447829], ["Optional[Any]", 0.08321893439947602], ["Optional[str]", 0.08321893439947602]], "fail_condition": [["str", 0.3643532464153352], ["Dict[str, List[str]]", 0.15941459902681207], ["Dict[str, Any]", 0.1369393354939205], ["Mapping[str, Any]", 0.0844476995087807]], "kwargs": [], "result_state": [["Optional[dict]", 0.12004332360681966], ["Union[str, bytes, Any]", 0.08950964569760109]], "search_params": [["str", 0.20280332656366717], ["List[\"DeliveryItem\"]", 0.10498555402047322], ["bool", 0.10130150577291765], ["int", 0.09688717452848156], ["List[Dict]", 0.09658426405503975]], "self": []}, "q_name": "BaseModule.create", "ret_exprs": ["return { 'changed': self.changed, 'id': entity.id, type(entity).__name__.lower(): get_dict_of_struct(entity),}"], "ret_type": "", "ret_type_p": [["str", 0.4122951251288261], ["Optional[str]", 0.19458710416459316]], "variables": {"changed": "", "entity": "", "entity_service": "", "state_condition": ""}, "variables_p": {"changed": [["list", 0.22426890062742932], ["str", 0.20068478612936552], ["Optional[str]", 0.09902078997142631]], "entity": [["list", 0.19356593832638003], ["tuple", 0.17207018689396858], ["dict", 0.10002380061827436], ["str", 0.08849640723369805], ["T", 0.08182915207167026]], "entity_service": [["Exception", 0.1297138177494293], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10674195210923827], ["dict", 0.10555749726986743], ["Set[str]", 0.09890470149048454], ["bool", 0.09003581733025255], ["str", 0.08611340286383282], ["Dict[str, Any]", 0.08357721449799253]], "state_condition": [["Sequence[eth.abc.SignedTransactionAPI]", 0.09807802568526577], ["str", 0.09721422038736327], ["Generator[Any, None, None]", 0.0925802279853235], ["tuple", 0.0925802279853235]]}}, {"docstring": {"func": "This method is called right before entity is removed.", "long_descr": null, "ret": null}, "fn_lc": [[428, 4], [434, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "pre_remove", "params": {"entity": "", "self": ""}, "params_descr": {"entity": "Entity which we want to remove.", "self": ""}, "params_occur": {"entity": [], "self": []}, "params_p": {"args": [], "entity": [["List[Dict[str, Any]]", 0.199999999952959], ["dict", 0.199999999952959], ["T", 0.199999999952959], ["bool", 9.408197907513979e-11], ["str", 4.7040989537569896e-11]], "kwargs": [], "self": []}, "q_name": "BaseModule.pre_remove", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Method which is called when state of the entity is 'absent'. If user", "long_descr": "don't provide `entity` parameter the entity is searched using\n`search_params` parameter. If entity is found it's removed.\n\nFunction executed before remove is executed can optionally be specified\nin `pre_remove` parameter.", "ret": "Dictionary with values returned by Ansible module."}, "fn_lc": [[436, 4], [478, 9]], "fn_var_ln": {"changed": [[472, 8], [472, 20]], "entity": [[451, 12], [451, 18]], "entity_service": [[461, 8], [461, 22]]}, "fn_var_occur": {"changed": [["self", "changed"], ["self", "changed", "True"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "entity": [["entity", "None"], ["entity", "self", "search_entity", "search_params"], ["entity", "None"], ["self", "pre_remove", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["wait", "service", "entity_service", "condition", "entity", "entity", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "entity_service": [["entity_service", "self", "_service", "service", "entity", "id"], ["entity_service", "remove", "kwargs"], ["wait", "service", "entity_service", "condition", "entity", "entity", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"]]}, "name": "remove", "params": {"entity": "", "kwargs": "", "search_params": "", "self": ""}, "params_descr": {"entity": "Entity we want to remove.", "kwargs": "Additional parameters passed when removing entity.", "search_params": "Dictionary of parameters to be used for search.", "self": ""}, "params_occur": {"entity": [["entity", "None"], ["entity", "self", "search_entity", "search_params"], ["entity", "None"], ["self", "pre_remove", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["wait", "service", "entity_service", "condition", "entity", "entity", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "kwargs": [["entity_service", "remove", "kwargs"]], "search_params": [["entity", "self", "search_entity", "search_params"]], "self": [["entity", "self", "search_entity", "search_params"], ["self", "changed"], ["self", "pre_remove", "entity"], ["entity_service", "self", "_service", "service", "entity", "id"], ["self", "_module", "check_mode"], ["wait", "service", "entity_service", "condition", "entity", "entity", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"], ["self", "changed", "True"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]]}, "params_p": {"args": [], "entity": [["Optional[dict]", 0.10301017807757183], ["Optional[str]", 0.0860449579091131]], "kwargs": [], "search_params": [["str", 0.4781139033298959], ["Type[T]", 0.1337689913597792], ["bool", 0.06258777542433326]], "self": []}, "q_name": "BaseModule.remove", "ret_exprs": ["return { 'changed': self.changed, 'msg': \"Entity wasn't found.\"}", "return { 'changed': self.changed, 'id': entity.id, type(entity).__name__.lower(): get_dict_of_struct(entity),}"], "ret_type": "", "ret_type_p": [["bool", 0.182154052466635], ["Iterable[str]", 0.1780312096737278], ["str", 0.1423205510134185], ["IO[str]", 0.097987539274787], ["int", 0.08117203884893483]], "variables": {"changed": "", "entity": "", "entity_service": ""}, "variables_p": {"changed": [["list", 0.2014763197398513], ["distutils.version.StrictVersion", 0.18492035728326014], ["Optional[str]", 0.10517543752018146]], "entity": [["dict", 0.09903546434874945], ["Sequence[eth.abc.SignedTransactionAPI]", 0.09779892061028979]], "entity_service": [["dict", 0.09576636514587132]]}}, {"docstring": {"func": "This method is executed when we want to change the state of some oVirt", "long_descr": "entity. The action to be executed on oVirt service is specified by\n`action` parameter. Whether the action should be executed can be\nspecified by passing `action_condition` parameter. State which the\nentity should be in after execution of the action can be specified\nby `wait_condition` parameter.\n\nFunction executed before an action on entity can optionally be specified\nin `pre_action` parameter. Function executed after an action on entity can\noptionally be specified in `post_action` parameter.", "ret": "Dictionary with values returned by Ansible module."}, "fn_lc": [[480, 4], [548, 9]], "fn_var_ln": {"changed": [[532, 12], [532, 24]], "entity": [[528, 8], [528, 14]], "entity_service": [[527, 8], [527, 22]]}, "fn_var_occur": {"changed": [["self", "changed", "True"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "entity": [["entity", "None"], ["entity", "self", "search_entity", "search_params"], ["entity", "pre_action", "entity"], ["entity", "None"], ["entity_service", "self", "_service", "service", "entity", "id"], ["entity", "entity_service", "get"], ["action_condition", "entity"], ["post_action", "entity"], ["wait", "service", "self", "_service", "service", "entity", "id", "condition", "wait_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "entity_service": [["entity_service", "self", "_service", "service", "entity", "id"], ["entity", "entity_service", "get"], ["getattr", "entity_service", "action", "kwargs"]]}, "name": "action", "params": {"action": "", "action_condition": "", "entity": "", "fail_condition": "", "kwargs": "", "post_action": "", "pre_action": "", "search_params": "", "self": "", "wait_condition": ""}, "params_descr": {"action": "Action which should be executed by service on entity.", "action_condition": "Function which is executed when checking if action should be executed.", "entity": "Entity we want to run action on.", "fail_condition": "Function which checks incorrect state of entity, if it returns `True` Exception is raised.", "kwargs": "Additional parameters passed to action.", "post_action": "Function which is executed after running the action.", "pre_action": "Function which is executed before running the action.", "search_params": "Dictionary of parameters to be used for search.", "self": "", "wait_condition": "Function which is executed when waiting on result state."}, "params_occur": {"action": [["self", "_module", "fail_json", "msg", "format", "action"], ["getattr", "entity_service", "action", "kwargs"]], "action_condition": [["action_condition", "entity"]], "entity": [["entity", "None"], ["entity", "self", "search_entity", "search_params"], ["entity", "pre_action", "entity"], ["entity", "None"], ["entity_service", "self", "_service", "service", "entity", "id"], ["entity", "entity_service", "get"], ["action_condition", "entity"], ["post_action", "entity"], ["wait", "service", "self", "_service", "service", "entity", "id", "condition", "wait_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "fail_condition": [["wait", "service", "self", "_service", "service", "entity", "id", "condition", "wait_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"]], "kwargs": [["getattr", "entity_service", "action", "kwargs"]], "post_action": [["post_action", "entity"]], "pre_action": [["entity", "pre_action", "entity"]], "search_params": [["entity", "self", "search_entity", "search_params"]], "self": [["entity", "self", "search_entity", "search_params"], ["self", "_module", "fail_json", "msg", "format", "action"], ["entity_service", "self", "_service", "service", "entity", "id"], ["self", "_module", "check_mode"], ["self", "changed", "True"], ["wait", "service", "self", "_service", "service", "entity", "id", "condition", "wait_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"], ["self", "changed", "entity", "id", "type", "entity", "__name__", "lower", "get_dict_of_struct", "entity"]], "wait_condition": [["wait", "service", "self", "_service", "service", "entity", "id", "condition", "wait_condition", "fail_condition", "fail_condition", "wait", "self", "_module", "params", "timeout", "self", "_module", "params", "poll_interval", "self", "_module", "params"]]}, "params_p": {"action": [["str", 0.8140370076748364]], "action_condition": [["str", 0.09673164745766324], ["bool", 0.09264754102407588], ["int", 0.08999800076107999]], "args": [], "entity": [["str", 0.18255180048791458]], "fail_condition": [["type", 0.2961417536089405]], "kwargs": [], "post_action": [["str", 0.09673164745766324], ["bool", 0.09264754102407588], ["int", 0.08999800076107999]], "pre_action": [["Dict[str, Any]", 0.30180424256029337], ["str", 0.2012100595455894], ["Type", 0.09830407322496738]], "search_params": [["str", 0.32339303170839295], ["Type[T]", 0.11563252945470534]], "self": [], "wait_condition": [["type", 0.2961417536089405]]}, "q_name": "BaseModule.action", "ret_exprs": ["return { 'changed': self.changed, 'id': entity.id, type(entity).__name__.lower(): get_dict_of_struct(entity),}"], "ret_type": "", "ret_type_p": [["dict", 0.19119348749517723], ["str", 0.19089519538104963]], "variables": {"changed": "", "entity": "", "entity_service": ""}, "variables_p": {"changed": [["dict", 0.21307908060498504], ["Dict[str, Type[Any]]", 0.10117154232952787], ["Dict[str, Any]", 0.0778636251150547]], "entity": [["Sequence[eth.abc.SignedTransactionAPI]", 0.12443615843955223], ["dict", 0.10622775774488157], ["Optional[str]", 0.09015846899399996]], "entity_service": [["dict", 0.11529447523168654]]}}, {"docstring": {"func": "Always first try to search by `ID`, if ID isn't specified,", "long_descr": "check if user constructed special search in `search_params`,\nif not search by `name`.", "ret": null}, "fn_lc": [[550, 4], [565, 21]], "fn_var_ln": {"entity": [[563, 12], [563, 18]]}, "fn_var_occur": {"entity": [["entity", "None"], ["entity", "search_by_attributes", "self", "_service", "id", "self", "_module", "params"], ["entity", "search_by_attributes", "self", "_service", "search_params"], ["entity", "search_by_attributes", "self", "_service", "name", "self", "_module", "params"]]}, "name": "search_entity", "params": {"search_params": "", "self": ""}, "params_descr": {"search_params": "", "self": ""}, "params_occur": {"search_params": [["search_params", "None"], ["entity", "search_by_attributes", "self", "_service", "search_params"]], "self": [["self", "_module", "params", "self", "_module", "params", "None"], ["entity", "search_by_attributes", "self", "_service", "id", "self", "_module", "params"], ["entity", "search_by_attributes", "self", "_service", "search_params"], ["self", "_module", "params", "self", "_module", "params", "None"], ["entity", "search_by_attributes", "self", "_service", "name", "self", "_module", "params"]]}, "params_p": {"args": [], "kwargs": [], "search_params": [["Optional[str]", 0.28101368389002207], ["List[\"InlineContent\"]", 0.1873424559266814], ["List[str]", 0.13901873677646154], ["Dict[str, Any]", 0.1036295058807075], ["str", 0.10096407111176886], ["Type", 0.09436031845101786], ["Optional[Dict[str, Any]]", 0.0936712279633407]], "self": []}, "q_name": "BaseModule.search_entity", "ret_exprs": ["return entity"], "ret_type": "", "ret_type_p": [["bool", 0.1859453282732283], ["Optional[Exception]", 0.10289629698353707], ["Optional[Any]", 0.08589054253786524], ["List[Dict]", 0.08290689005271092]], "variables": {"entity": ""}, "variables_p": {"entity": [["Optional[Hashable]", 0.1750155087112407], ["Optional[List]", 0.08080813916827874]]}}], "name": "BaseModule", "q_name": "BaseModule", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 0], [52, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_sdk", "params": {"module": ""}, "params_descr": {"module": ""}, "params_occur": {"module": [["module", "fail_json", "msg"]]}, "params_p": {"args": [], "kwargs": [], "module": [["List[str]", 0.3333333332876965], ["str", 1.8279622887669273e-11]]}, "q_name": "check_sdk", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [63, 18]], "fn_var_ln": {"val": [[61, 12], [61, 15]]}, "fn_var_occur": {"val": [["val", "startswith"], ["val", "val"], ["remove_underscore", "val"]]}, "name": "remove_underscore", "params": {"val": ""}, "params_descr": {"val": ""}, "params_occur": {"val": [["val", "startswith"], ["val", "val"], ["remove_underscore", "val"]]}, "params_p": {"args": [], "kwargs": [], "val": [["str", 0.8116888209759967], ["List[str]", 0.09009524737869572]]}, "q_name": "get_dict_of_struct.<locals>.remove_underscore", "ret_exprs": ["return val"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"val": ""}, "variables_p": {"val": [["str", 0.797929877007933], ["float", 0.1230755326980482], ["Union[Literal, Literal]", 0.07899459029401878]]}}, {"docstring": {"func": "Convert SDK Struct type into dictionary.", "long_descr": null, "ret": null}, "fn_lc": [[55, 0], [87, 14]], "fn_var_ln": {"key": [[68, 12], [68, 15]], "res": [[65, 4], [65, 7]]}, "fn_var_occur": {"key": [["key", "remove_underscore", "key"], ["res", "key", "get_dict_of_struct", "value"], ["res", "key", "str", "value"], ["res", "key"], ["res", "key", "append", "get_dict_of_struct", "i"], ["res", "key", "append", "str", "i"], ["res", "key", "append", "i"], ["res", "key", "value"]], "res": [["res", "key", "get_dict_of_struct", "value"], ["res", "key", "str", "value"], ["res", "key"], ["res", "key", "append", "get_dict_of_struct", "i"], ["res", "key", "append", "str", "i"], ["res", "key", "append", "i"], ["res", "key", "value"]]}, "name": "get_dict_of_struct", "params": {"struct": ""}, "params_descr": {"struct": ""}, "params_occur": {"struct": [["struct", "None"], ["struct", "__dict__", "items"]]}, "params_p": {"args": [], "kwargs": [], "struct": [["Optional[str]", 0.3512089577010732], ["str", 0.18678582752275186], ["bool", 0.13773940404484883], ["Optional[Dict]", 0.11355314174480362], ["Optional[Sequence[Any]]", 0.09488317728532822]]}, "q_name": "get_dict_of_struct", "ret_exprs": ["return res"], "ret_type": "", "ret_type_p": [["str", 0.3948219589364648], ["dict", 0.20054560543878716], ["int", 0.093067162823075], ["bytes", 0.0911783969790408]], "variables": {"key": "", "res": ""}, "variables_p": {"key": [["str", 0.8035101617723515]], "res": [["str", 0.4041556946623684], ["Pattern[str]", 0.38722916521039463], ["dict", 0.10627202372603138], ["List[str]", 0.10234311640120547]]}}, {"docstring": {"func": "Create a connection to Python SDK, from task `auth` parameter.", "long_descr": "If user doesnt't have SSO token the `auth` dictionary has following parameters mandatory:\n url, username, password\n\nIf user has SSO token the `auth` dictionary has following parameters mandatory:\n url, token\n\nThe `ca_file` parameter is mandatory in case user want to use secure connection,\nin case user want to use insecure connection, it's mandatory to send insecure=True.", "ret": "Python SDK connection"}, "fn_lc": [[90, 0], [114, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_connection", "params": {"auth": ""}, "params_descr": {"auth": "dictionary which contains needed values for connection creation"}, "params_occur": {"auth": [["sdk", "Connection", "url", "auth", "get", "username", "auth", "get", "password", "auth", "get", "ca_file", "auth", "get", "None", "insecure", "auth", "get", "False", "token", "auth", "get", "None", "kerberos", "auth", "get", "None"]]}, "params_p": {"args": [], "auth": [["dict", 0.3072109128261187], ["Dict[str, Any]", 0.2217320550365287], ["str", 0.08792400683906687]], "kwargs": []}, "q_name": "create_connection", "ret_exprs": ["return sdk.Connection( url=auth.get('url'), username=auth.get('username'), password=auth.get('password'), ca_file=auth.get('ca_file', None), insecure=auth.get('insecure', False), token=auth.get('token', None), kerberos=auth.get('kerberos', None),)"], "ret_type": "", "ret_type_p": [["str", 0.18754262428300095]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method convert units to bytes, which follow IEC standard.", "long_descr": null, "ret": null}, "fn_lc": [[116, 0], [136, 9]], "fn_var_ln": {"param": [[126, 4], [126, 9]]}, "fn_var_occur": {"param": [["param", "None"], ["param", "join", "param", "split"], ["param", "lower"], ["int", "param", "BYTES_MAP", "get", "param", "lower"], ["param", "isdigit"], ["int", "param"], ["ValueError", "format", "value", "param"]]}, "name": "convert_to_bytes", "params": {"param": ""}, "params_descr": {"param": "value to be converted"}, "params_occur": {"param": [["param", "None"], ["param", "join", "param", "split"], ["param", "lower"], ["int", "param", "BYTES_MAP", "get", "param", "lower"], ["param", "isdigit"], ["int", "param"], ["ValueError", "format", "value", "param"]]}, "params_p": {"args": [], "kwargs": [], "param": [["str", 0.21314981381483217], ["Dict[str, str]", 0.19276551139587111], ["Optional[str]", 0.09259858444404269], ["datetime.date.time", 0.08851174572266923]]}, "q_name": "convert_to_bytes", "ret_exprs": ["return None", "return int(param[:-3]) * BYTES_MAP.get(param[-3:].lower(), 1)", "return int(param) * 2**10"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.4734574939300321], ["str", 0.11059579674030527], ["Optional[int]", 0.0842732924519303]], "variables": {"param": ""}, "variables_p": {"param": [["str", 0.6335823008337373], ["Dict[str, float]", 0.09250803716606779]]}}, {"docstring": {"func": "This method returns the entity of the element which link points to.", "long_descr": null, "ret": "entity which link points to"}, "fn_lc": [[139, 0], [151, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "follow_link", "params": {"connection": "", "link": ""}, "params_descr": {"connection": "connection to the Python SDK", "link": "link of the entity"}, "params_occur": {"connection": [["connection", "follow_link", "link"]], "link": [["connection", "follow_link", "link"]]}, "params_p": {"args": [], "connection": [["str", 0.368262111758571], ["int", 0.07165436691557567]], "kwargs": [], "link": [["str", 0.368262111758571], ["int", 0.07165436691557567]]}, "q_name": "follow_link", "ret_exprs": ["return connection.follow_link(link)", "return None"], "ret_type": "", "ret_type_p": [["bool", 0.1066479871966897], ["str", 0.09408838607702667], ["abc.Mapping", 0.09255182765626692]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method returns the name of the element which link points to.", "long_descr": null, "ret": "name of the entity, which link points to"}, "fn_lc": [[154, 0], [166, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_link_name", "params": {"connection": "", "link": ""}, "params_descr": {"connection": "connection to the Python SDK", "link": "link of the entity"}, "params_occur": {"connection": [["connection", "follow_link", "link", "name"]], "link": [["connection", "follow_link", "link", "name"]]}, "params_p": {"args": [], "connection": [["str", 0.3900400092902531], ["Dict[Hashable, Any]", 0.18984336853522746], ["Optional[Sequence[str]]", 0.1102751651065436]], "kwargs": [], "link": [["str", 0.3900400092902531], ["Dict[Hashable, Any]", 0.18984336853522746], ["Optional[Sequence[str]]", 0.1102751651065436]]}, "q_name": "get_link_name", "ret_exprs": ["return connection.follow_link(link).name", "return None"], "ret_type": "", "ret_type_p": [["str", 0.37701135144889714], ["Optional[bool]", 0.11094231397568595], ["bool", 0.0917407959633762], ["dict", 0.0917407959633762]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Compare two parameters and return if they are equal.", "long_descr": "This parameter doesn't run equal operation if first parameter is None.\nWith this approach we don't run equal operation in case user don't\nspecify parameter in their task.", "ret": "True if parameters are equal or first parameter is None, otherwise False"}, "fn_lc": [[169, 0], [182, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "equal", "params": {"param1": "", "param2": ""}, "params_descr": {"param1": "user inputted parameter", "param2": "value of entity parameter"}, "params_occur": {"param1": [["param1", "None"], ["param1", "param2"]], "param2": [["param1", "param2"]]}, "params_p": {"args": [], "kwargs": [], "param1": [["Optional[str]", 0.39999999999999997], ["Optional[int]", 0.09999999999999999], ["Optional[float]", 0.09999999999999999], ["bool", 0.09999999999999999]], "param2": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]]}, "q_name": "equal", "ret_exprs": ["return param1 == param2", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.44046398421182986], ["Optional[int]", 0.1255520294935758], ["int", 0.123178118204177], ["str", 0.10130080979790215], ["Optional[bool]", 0.08632694008833819]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Search for the entity by attributes. Nested entities don't support search", "long_descr": "via REST, so in case using search for nested entity we return all entities\nand filter them by specified attributes.", "ret": null}, "fn_lc": [[185, 0], [204, 17]], "fn_var_ln": {"res": [[203, 4], [203, 7]]}, "fn_var_occur": {"res": [["res", "service", "list", "search", "join", "format", "k", "v", "k", "v", "kwargs", "items"], ["res", "e", "e", "service", "list", "len", "k", "k", "v", "kwargs", "items", "getattr", "e", "k", "None", "v", "len", "kwargs"], ["res", "res", "None"]]}, "name": "search_by_attributes", "params": {"kwargs": "", "service": ""}, "params_descr": {"kwargs": "", "service": ""}, "params_occur": {"kwargs": [["res", "service", "list", "search", "join", "format", "k", "v", "k", "v", "kwargs", "items"], ["res", "e", "e", "service", "list", "len", "k", "k", "v", "kwargs", "items", "getattr", "e", "k", "None", "v", "len", "kwargs"]], "service": [["inspect", "getargspec", "service", "list"], ["res", "service", "list", "search", "join", "format", "k", "v", "k", "v", "kwargs", "items"], ["res", "e", "e", "service", "list", "len", "k", "k", "v", "kwargs", "items", "getattr", "e", "k", "None", "v", "len", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "service": [["List[str]", 0.2096005771957795], ["Union[List, Dict]", 0.13656684710943515], ["str", 0.09167677479343224], ["list", 0.08839482581731974], ["dict", 0.0880748583613205]]}, "q_name": "search_by_attributes", "ret_exprs": ["return res[0]"], "ret_type": "", "ret_type_p": [["str", 0.27927995102212116], ["bytes", 0.23091302588061452], ["bool", 0.10468266978463361]], "variables": {"res": ""}, "variables_p": {"res": [["str", 0.2140074665467073], ["list", 0.12547250979508923], ["Union[Literal, Literal]", 0.12031868247006806], ["dict", 0.10073931977155474], ["Dict[str, Any]", 0.09329007107510354], ["Pattern[str]", 0.0880778490381661], ["Counter[str]", 0.08542099703124828], ["List[str]", 0.0837779059817117]]}}, {"docstring": {"func": "Search for the entity by its name. Nested entities don't support search", "long_descr": "via REST, so in case using search for nested entity we return all entities\nand filter them by name.", "ret": "Entity object returned by Python SDK"}, "fn_lc": [[207, 0], [233, 17]], "fn_var_ln": {"res": [[232, 4], [232, 7]]}, "fn_var_occur": {"res": [["res", "service", "list", "search", "format", "name", "name"], ["res", "e", "e", "service", "list", "e", "name", "name"], ["res", "e", "e", "service", "list", "len", "k", "k", "v", "kwargs", "items", "getattr", "e", "k", "None", "v", "len", "kwargs"], ["res", "res", "None"]]}, "name": "search_by_name", "params": {"kwargs": "", "name": "", "service": ""}, "params_descr": {"kwargs": "", "name": "name of the entity", "service": "service of the entity"}, "params_occur": {"kwargs": [["res", "e", "e", "service", "list", "len", "k", "k", "v", "kwargs", "items", "getattr", "e", "k", "None", "v", "len", "kwargs"]], "name": [["res", "service", "list", "search", "format", "name", "name"], ["res", "e", "e", "service", "list", "e", "name", "name"]], "service": [["inspect", "getargspec", "service", "list"], ["res", "service", "list", "search", "format", "name", "name"], ["res", "e", "e", "service", "list", "e", "name", "name"], ["res", "e", "e", "service", "list", "len", "k", "k", "v", "kwargs", "items", "getattr", "e", "k", "None", "v", "len", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.6676622672379193]], "service": [["List[str]", 0.6861610668458002], ["Set[str]", 0.11772321260058545], ["str", 0.09941795518795422], ["list", 0.09669776536566003]]}, "q_name": "search_by_name", "ret_exprs": ["return res[0]"], "ret_type": "", "ret_type_p": [["str", 0.07853793668098423], ["Type", 0.07143802506570168]], "variables": {"res": ""}, "variables_p": {"res": [["list", 0.2151917536871546], ["Pattern[str]", 0.11728354054856026], ["tuple", 0.11059998704715981], ["Dict[str, bool]", 0.09480363206937355]]}}, {"docstring": {"func": "Wait until entity fulfill expected condition.", "long_descr": null, "ret": null}, "fn_lc": [[236, 0], [266, 44]], "fn_var_ln": {"entity": [[259, 12], [259, 18]], "start": [[256, 8], [256, 13]]}, "fn_var_occur": {"entity": [["entity", "service", "get"], ["condition", "entity"], ["fail_condition", "entity"]], "start": [["start", "time", "time"], ["time", "time", "start", "timeout"]]}, "name": "wait", "params": {"condition": "", "fail_condition": "", "poll_interval": "", "service": "", "timeout": "", "wait": ""}, "params_descr": {"condition": "condition to be fulfilled", "fail_condition": "if this condition is true, raise Exception", "poll_interval": "Number of seconds we should wait until next condition check", "service": "service of the entity", "timeout": "max time to wait in seconds", "wait": "if True wait for condition, if False don't wait"}, "params_occur": {"condition": [["condition", "entity"]], "fail_condition": [["fail_condition", "entity"]], "poll_interval": [["time", "sleep", "float", "poll_interval"]], "service": [["entity", "service", "get"]], "timeout": [["time", "time", "start", "timeout"]], "wait": []}, "params_p": {"args": [], "condition": [["int", 0.3895703342471632], ["Optional[int]", 0.22143461018518587], ["tuple", 0.1018143946607646], ["List[int]", 0.0823184282390717]], "fail_condition": [["int", 0.3026575068299893], ["str", 0.17378196100576304], ["Optional[str]", 0.14356497239189192], ["Optional[Sequence[str]]", 0.11277578622933337], ["Optional[float]", 0.08611306450792598]], "kwargs": [], "poll_interval": [["int", 0.2982404757183881], ["Tuple[int, int]", 0.19196727898800922], ["Tuple[float, float, float]", 0.11042556181170139], ["float", 0.10588666872452997]], "service": [["bool", 0.17797367046962148], ["int", 0.12022958533311974], ["List[Dict]", 0.11833115284912289], ["str", 0.10875380014762921], ["dict", 0.09429608294280221], ["Optional[Callable[[dict], None]]", 0.09318533961748476], ["List[str]", 0.0866008235785578]], "timeout": [["int", 0.20961643327417612], ["float", 0.19336448543434556], ["bytes", 0.1077064315268145], ["Optional[float]", 0.09668224271717278], ["Optional[int]", 0.09668224271717278]], "wait": [["bool", 0.2885016572071446], ["int", 0.20328524079795868], ["Optional[str]", 0.10164262039897934], ["Iterable[int]", 0.10164262039897934], ["str", 0.10164262039897934]]}, "q_name": "wait", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"entity": "", "start": ""}, "variables_p": {"entity": [["list", 0.4061606395426779], ["dict", 0.18544761859193717], ["Dict[str, int]", 0.14091248546128096], ["Dict[Any, str]", 0.0992174164795364], ["str", 0.08254371088697957]], "start": [["float", 0.9076022727739492], ["Tuple[int, int, int]", 0.09239772722605086]]}}, {"docstring": {"func": "Extend parameters of module with parameters which are common to all oVirt modules.", "long_descr": null, "ret": "extended dictionary with common parameters"}, "fn_lc": [[269, 0], [283, 15]], "fn_var_ln": {"spec": [[276, 4], [276, 8]]}, "fn_var_occur": {"spec": [["spec", "dict", "auth", "dict", "required", "True", "type", "timeout", "dict", "default", "type", "wait", "dict", "default", "True", "type", "poll_interval", "dict", "default", "type"], ["spec", "update", "kwargs"]]}, "name": "ovirt_full_argument_spec", "params": {"kwargs": ""}, "params_descr": {"kwargs": "kwargs to be extended"}, "params_occur": {"kwargs": [["spec", "update", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "ovirt_full_argument_spec", "ret_exprs": ["return spec"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"spec": ""}, "variables_p": {"spec": [["Dict[Type[Any], Union[Any, Any, Any, Any]]", 0.10801347879584759], ["int", 0.1031104932997193], ["Dict[Any, Tuple[Any, Any]]", 0.09850549473112967], ["List[Type[Any]]", 0.09445461315768174], ["Dict[Any, tuple]", 0.09393960633825363], ["Dict[Any, Type[str]]", 0.09248242501847805]]}}, {"docstring": {"func": "Most modules must have either `name` or `id` specified.", "long_descr": null, "ret": null}, "fn_lc": [[286, 0], [291, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_params", "params": {"module": ""}, "params_descr": {"module": ""}, "params_occur": {"module": [["module", "params", "get", "None", "module", "params", "get", "None"], ["module", "fail_json", "msg"]]}, "params_p": {"args": [], "kwargs": [], "module": [["str", 0.30412779095254605], ["dict", 0.11067211652263084]]}, "q_name": "check_params", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["inspect", "time", "abc", "ABCMeta", "abstractmethod", "datetime", "datetime", "distutils", "version", "LooseVersion", "enum", "Enum", "ovirtsdk4", "sdk", "ovirtsdk4.types", "otypes", "ovirtsdk4.version", "sdk_version"], "mod_var_ln": {"BYTES_MAP": [[39, 0], [39, 9]], "HAS_SDK": [[36, 4], [36, 11]]}, "mod_var_occur": {"BYTES_MAP": [["int", "param", "BYTES_MAP", "get", "param", "lower"]], "HAS_SDK": [["HAS_SDK"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 100}, "session_id": "y_uFcpE8xoUh4LA7g0o8y4DYAjvHZ2perEEEPoH6ogc", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BYTES_MAP": "", "HAS_SDK": ""}, "variables_p": {"BYTES_MAP": [["Dict[str, Any]", 0.19856382037538636], ["Dict[str, Callable[[], Any]]", 0.18708518160370322], ["dict", 0.1274605267357606], ["str", 0.10338353070883945], ["Dict[str, int]", 0.09801494033351837], ["Tuple[str, str]", 0.09597529341030739], ["tuple", 0.09530960898984724]], "HAS_SDK": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}}