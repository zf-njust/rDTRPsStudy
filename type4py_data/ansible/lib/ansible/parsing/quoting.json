{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[23, 0], [24, 95]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_quoted", "params": {"data": ""}, "params_descr": {"data": ""}, "params_occur": {"data": [["len", "data", "data", "data", "data", "data"]]}, "params_p": {"args": [], "data": [["str", 0.28208762979780255], ["dict", 0.2722482736717408], ["Dict[str, Any]", 0.18118301200949377], ["bytes", 0.1550192253358452], ["Union[Dict, List]", 0.10946185918511772]], "kwargs": []}, "q_name": "is_quoted", "ret_exprs": ["return len(data) > 1 and data[0] == data[-1] and data[0] in ('\"', \"'\") and data[-2] != ''"], "ret_type": "", "ret_type_p": [["Iterable[str]", 0.14870839679380157], ["bool", 0.10295623870277704]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "removes first and last quotes from a string, if the string starts and ends with the same quotes ", "long_descr": null, "ret": null}, "fn_lc": [[26, 0], [30, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "unquote", "params": {"data": ""}, "params_descr": {"data": ""}, "params_occur": {"data": [["is_quoted", "data"]]}, "params_p": {"args": [], "data": [["dict", 0.49999999999999994], ["bytes", 0.3], ["Union[bytes, bytearray, memoryview]", 0.09999999999999999]], "kwargs": []}, "q_name": "unquote", "ret_exprs": ["return data[1:-1]", "return data"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.09130453613975123], ["Dict[str, str]", 0.08456169829753558], ["dict", 0.08125638347268535]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "absolute_import", "division", "print_function"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 5}, "session_id": "H_JqohWnnqVidvrQkCHrJZCt3ubFoSmb3V1w95Nr29I", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}