{"error": null, "response": {"classes": [{"cls_lc": [[109, 0], [110, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "AnsibleVaultError", "q_name": "AnsibleVaultError", "variables": {}, "variables_p": {}}, {"cls_lc": [[165, 0], [309, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[167, 4], [170, 31]], "fn_var_ln": {"b_password": [[168, 8], [168, 23]], "b_version": [[170, 8], [170, 22]], "cipher_name": [[169, 8], [169, 24]]}, "fn_var_occur": {"b_password": [["self", "b_password", "to_bytes", "password", "errors", "encoding"]], "b_version": [["self", "b_version"]], "cipher_name": [["self", "cipher_name", "None"]]}, "name": "__init__", "params": {"password": "", "self": ""}, "params_descr": {"password": "", "self": ""}, "params_occur": {"password": [["self", "b_password", "to_bytes", "password", "errors", "encoding"]], "self": [["self", "b_password", "to_bytes", "password", "errors", "encoding"], ["self", "cipher_name", "None"], ["self", "b_version"]]}, "params_p": {"args": [], "kwargs": [], "password": [["str", 0.7822446885894527], ["bytes", 0.1223166580212514], ["Union[str, bytes]", 0.09543865338929611]], "self": []}, "q_name": "VaultLib.__init__", "ret_exprs": [], "ret_type": "", "variables": {"b_password": "", "b_version": "", "cipher_name": ""}, "variables_p": {"b_password": [["int", 0.5330735193796433], ["str", 0.4669264806203568]], "b_version": [["\"Point\"", 0.3734573139534286], ["int", 0.24224595197512017], ["str", 0.15118812766920037], ["float", 0.1126781931933867], ["bytes", 0.061167789635722815], ["Type[int]", 0.059262623573141104]], "cipher_name": [["str", 0.5100042598494671], ["Optional[str]", 0.086381815174644]]}}, {"docstring": {"func": "Test if this is vault encrypted data", "long_descr": null, "ret": "True if it is recognized.  Otherwise, False."}, "fn_lc": [[173, 4], [185, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_encrypted", "params": {"data": ""}, "params_descr": {"data": "a byte or text string or a python3 to test for whether it is\nrecognized as vault encrypted data"}, "params_occur": {"data": [["is_encrypted", "data"]]}, "params_p": {"args": [], "data": [["T", 0.999999998567646], ["dict", 7.061536948996332e-10], ["bytes", 3.886792004982803e-10], ["Iterable[T]", 1.5791864867785932e-10]], "kwargs": [], "self": []}, "q_name": "VaultLib.is_encrypted", "ret_exprs": ["return is_encrypted(data)"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 4], [190, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_encrypted_file", "params": {"file_obj": ""}, "params_descr": {"file_obj": ""}, "params_occur": {"file_obj": [["is_encrypted_file", "file_obj"]]}, "params_p": {"args": [], "file_obj": [["str", 0.46349410953070136], ["BinaryIO", 0.20710812700517095], ["Union[str, os.PathLike]", 0.17023733472828087]], "kwargs": [], "self": []}, "q_name": "VaultLib.is_encrypted_file", "ret_exprs": ["return is_encrypted_file(file_obj)"], "ret_type": "", "ret_type_p": [["str", 0.409133302767318], ["bool", 0.19441634101199506], ["Optional[List[str]]", 0.1033023717097744], ["backuppy.io.IOIter", 0.09609558277214214]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Vault encrypt a piece of data.", "long_descr": null, "ret": "a utf-8 encoded byte str of encrypted data.  The string\ncontains a header identifying this as vault encrypted data and\n    formatted to newline terminated lines of 80 characters.  This is\n    suitable for dumping as is to a vault file.\n\nIf the string passed in is a text string, it will be encoded to UTF-8\nbefore encryption."}, "fn_lc": [[192, 4], [223, 26]], "fn_var_ln": {"Cipher": [[213, 12], [213, 18]], "b_ciphertext": [[219, 8], [219, 20]], "b_plaintext": [[204, 8], [204, 19]], "b_vaulttext": [[222, 8], [222, 19]], "cipher_name": [[210, 12], [210, 28]], "this_cipher": [[216, 8], [216, 19]]}, "fn_var_occur": {"Cipher": [["Cipher", "CIPHER_MAPPING", "self", "cipher_name"], ["this_cipher", "Cipher"]], "b_ciphertext": [["b_ciphertext", "this_cipher", "encrypt", "b_plaintext", "self", "b_password"], ["b_vaulttext", "self", "_format_output", "b_ciphertext"]], "b_plaintext": [["b_plaintext", "to_bytes", "plaintext", "errors"], ["is_encrypted", "b_plaintext"], ["b_ciphertext", "this_cipher", "encrypt", "b_plaintext", "self", "b_password"]], "b_vaulttext": [["b_vaulttext", "self", "_format_output", "b_ciphertext"]], "cipher_name": [["self", "cipher_name", "self", "cipher_name", "CIPHER_WRITE_WHITELIST"], ["self", "cipher_name"], ["Cipher", "CIPHER_MAPPING", "self", "cipher_name"], ["AnsibleError", "format", "self", "cipher_name"]], "this_cipher": [["this_cipher", "Cipher"], ["b_ciphertext", "this_cipher", "encrypt", "b_plaintext", "self", "b_password"]]}, "name": "encrypt", "params": {"plaintext": "", "self": ""}, "params_descr": {"plaintext": "a text or byte string to encrypt.", "self": ""}, "params_occur": {"plaintext": [["b_plaintext", "to_bytes", "plaintext", "errors"]], "self": [["self", "cipher_name", "self", "cipher_name", "CIPHER_WRITE_WHITELIST"], ["self", "cipher_name"], ["Cipher", "CIPHER_MAPPING", "self", "cipher_name"], ["AnsibleError", "format", "self", "cipher_name"], ["b_ciphertext", "this_cipher", "encrypt", "b_plaintext", "self", "b_password"], ["b_vaulttext", "self", "_format_output", "b_ciphertext"]]}, "params_p": {"args": [], "kwargs": [], "plaintext": [["str", 0.3812611106618622], ["int", 0.32279884594914104], ["bytes", 0.13157559948020195], ["bool", 0.05862083682177762]], "self": []}, "q_name": "VaultLib.encrypt", "ret_exprs": ["return b_vaulttext"], "ret_type": "", "ret_type_p": [["bool", 0.0832464831909122], ["str", 0.0784432595426524], ["bytes", 0.034687974405105314]], "variables": {"Cipher": "", "b_ciphertext": "", "b_plaintext": "", "b_vaulttext": "", "cipher_name": "", "this_cipher": ""}, "variables_p": {"Cipher": [["Tuple[Any, Any]", 0.09325961674422935], ["float", 0.08491937546425853], ["Dict[str, Union[Any, Any]]", 0.08361218085651298], ["str", 0.08086706415972682]], "b_ciphertext": [], "b_plaintext": [["bytes", 0.6079281559760111], ["str", 0.21289033237758193], ["int", 0.09110458926522923], ["Final", 0.08807692238117769]], "b_vaulttext": [["int", 0.5554588141370035], ["str", 0.4445411858629965]], "cipher_name": [["str", 0.6411728576362735], ["Union[Literal, str]", 0.09741617372109947], ["list", 0.09299329619033524], ["List[str]", 0.08895737444720044]], "this_cipher": [["int", 4.4354153840357096e-11]]}}, {"docstring": {"func": "Decrypt a piece of vault encrypted data.", "long_descr": null, "ret": "a byte string containing the decrypted data"}, "fn_lc": [[225, 4], [266, 26]], "fn_var_ln": {"Cipher": [[253, 12], [253, 18]], "b_plaintext": [[259, 8], [259, 19]], "b_vaulttext": [[247, 8], [247, 19]], "cipher_class_name": [[250, 8], [250, 25]], "msg": [[261, 12], [261, 15]], "this_cipher": [[254, 12], [254, 23]]}, "fn_var_occur": {"Cipher": [["Cipher", "globals", "cipher_class_name"], ["this_cipher", "Cipher"]], "b_plaintext": [["b_plaintext", "this_cipher", "decrypt", "b_vaulttext", "self", "b_password"], ["b_plaintext", "None"]], "b_vaulttext": [["b_vaulttext", "to_bytes", "vaulttext", "errors", "encoding"], ["is_encrypted", "b_vaulttext"], ["b_vaulttext", "self", "_split_header", "b_vaulttext"], ["b_plaintext", "this_cipher", "decrypt", "b_vaulttext", "self", "b_password"]], "cipher_class_name": [["cipher_class_name", "format", "self", "cipher_name"], ["cipher_class_name", "globals", "self", "cipher_name", "CIPHER_WHITELIST"], ["Cipher", "globals", "cipher_class_name"]], "msg": [["msg", "filename"], ["AnsibleError", "msg"], ["msg", "filename"], ["AnsibleError", "msg"]], "this_cipher": [["this_cipher", "Cipher"], ["b_plaintext", "this_cipher", "decrypt", "b_vaulttext", "self", "b_password"]]}, "name": "decrypt", "params": {"filename": "", "self": "", "vaulttext": ""}, "params_descr": {"filename": "", "self": "", "vaulttext": "a string to decrypt.  Since vault encrypted data is an\nascii text format this can be either a byte str or unicode string."}, "params_occur": {"filename": [["msg", "filename"], ["msg", "filename"]], "self": [["self", "b_password", "None"], ["b_vaulttext", "self", "_split_header", "b_vaulttext"], ["cipher_class_name", "format", "self", "cipher_name"], ["cipher_class_name", "globals", "self", "cipher_name", "CIPHER_WHITELIST"], ["AnsibleError", "format", "self", "cipher_name"], ["b_plaintext", "this_cipher", "decrypt", "b_vaulttext", "self", "b_password"]], "vaulttext": [["b_vaulttext", "to_bytes", "vaulttext", "errors", "encoding"]]}, "params_p": {"args": [], "filename": [["str", 0.7292124902868274], ["Dict[str, str]", 0.10187378080746987], ["os.PathLike", 0.08859247722865746]], "kwargs": [], "self": [], "vaulttext": [["str", 0.6417368969687209]]}, "q_name": "VaultLib.decrypt", "ret_exprs": ["return b_plaintext"], "ret_type": "", "ret_type_p": [["bool", 0.0832464831909122], ["str", 0.0784432595426524], ["bytes", 0.034687974405105314]], "variables": {"Cipher": "", "b_plaintext": "", "b_vaulttext": "", "cipher_class_name": "", "msg": "", "this_cipher": ""}, "variables_p": {"Cipher": [["Dict[Any, Tuple[Any, Any]]", 0.18888181983276592], ["Final", 0.17707937097960968], ["Type[Callable[Any, str]]", 0.09593395012355306], ["int", 0.09336979292317626], ["Dict[str, str]", 0.08844926655599691]], "b_plaintext": [], "b_vaulttext": [["bytes", 0.7158791074376532], ["Optional[str]", 0.09885102179238857], ["bool", 0.09617576463199769], ["int", 0.08909410613796062]], "cipher_class_name": [["str", 1.0]], "msg": [["str", 1.0000000000000002]], "this_cipher": [["int", 4.4354153840357096e-11]]}}, {"docstring": {"func": "Add header and format to 80 columns", "long_descr": null, "ret": "a byte str that should be dumped into a file.  It's\nformatted to 80 char columns and has the header prepended"}, "fn_lc": [[268, 4], [286, 26]], "fn_var_ln": {"b_vaulttext": [[284, 8], [284, 19]], "header": [[279, 8], [279, 14]]}, "fn_var_occur": {"b_vaulttext": [["b_vaulttext", "header"], ["b_vaulttext", "b_ciphertext", "i", "i", "i", "range", "len", "b_ciphertext"], ["b_vaulttext", "join", "b_vaulttext"]], "header": [["header", "join", "b_HEADER", "self", "b_version", "to_bytes", "self", "cipher_name", "errors"], ["b_vaulttext", "header"]]}, "name": "_format_output", "params": {"b_ciphertext": "", "self": ""}, "params_descr": {"b_ciphertext": "", "self": ""}, "params_occur": {"b_ciphertext": [["b_vaulttext", "b_ciphertext", "i", "i", "i", "range", "len", "b_ciphertext"]], "self": [["self", "cipher_name"], ["header", "join", "b_HEADER", "self", "b_version", "to_bytes", "self", "cipher_name", "errors"]]}, "params_p": {"args": [], "b_ciphertext": [["Sequence[Sequence[float]]", 0.10804001341754074], ["List[str]", 0.10538167851105358], ["bool", 0.09851896725357862], ["bytes", 0.09459994588146806], ["Optional[str]", 0.09401196528953197]], "kwargs": [], "self": []}, "q_name": "VaultLib._format_output", "ret_exprs": ["return b_vaulttext"], "ret_type": "", "ret_type_p": [["bytes", 0.19363726201740633], ["int", 0.10134498864843762]], "variables": {"b_vaulttext": "", "header": ""}, "variables_p": {"b_vaulttext": [["Iterator[Any]", 0.10547544606031595], ["Dict[str, Any]", 0.09889512252094444], ["List[str]", 0.09683625330769124]], "header": [["str", 0.37500826487309546], ["Set[str]", 0.25816430830142667], ["List[str]", 0.16275872131546468], ["Dict[str, str]", 0.11299565102593996], ["Tuple[str]", 0.09107305448407316]]}}, {"docstring": {"func": "Retrieve information about the Vault and clean the data", "long_descr": "When data is saved, it has a header prepended and is formatted into 80\ncharacter lines.  This method extracts the information from the header\nand then removes the header and the inserted newlines.  The string returned\nis suitable for processing by the Cipher classes.", "ret": "a byte str suitable for passing to a Cipher class's\ndecrypt() function."}, "fn_lc": [[288, 4], [309, 27]], "fn_var_ln": {"b_ciphertext": [[307, 8], [307, 20]], "b_tmpdata": [[302, 8], [302, 17]], "b_tmpheader": [[303, 8], [303, 19]], "b_version": [[305, 8], [305, 22]], "cipher_name": [[306, 8], [306, 24]]}, "fn_var_occur": {"b_ciphertext": [["b_ciphertext", "join", "b_tmpdata"]], "b_tmpdata": [["b_tmpdata", "b_vaulttext", "split"], ["b_tmpheader", "b_tmpdata", "strip", "split"], ["b_ciphertext", "join", "b_tmpdata"]], "b_tmpheader": [["b_tmpheader", "b_tmpdata", "strip", "split"], ["self", "b_version", "b_tmpheader", "strip"], ["self", "cipher_name", "to_text", "b_tmpheader", "strip"]], "b_version": [["self", "b_version", "b_tmpheader", "strip"]], "cipher_name": [["self", "cipher_name", "to_text", "b_tmpheader", "strip"]]}, "name": "_split_header", "params": {"b_vaulttext": "", "self": ""}, "params_descr": {"b_vaulttext": "byte str containing the data from a save file", "self": ""}, "params_occur": {"b_vaulttext": [["b_tmpdata", "b_vaulttext", "split"]], "self": [["self", "b_version", "b_tmpheader", "strip"], ["self", "cipher_name", "to_text", "b_tmpheader", "strip"]]}, "params_p": {"args": [], "b_vaulttext": [["str", 0.2138485394467603], ["dict", 0.11056356918083936], ["bool", 0.09133372363536557], ["List[str]", 0.09133372363536557], ["Dict[str, str]", 0.08992064067928586], ["Optional[str]", 0.08823385572501102]], "kwargs": [], "self": []}, "q_name": "VaultLib._split_header", "ret_exprs": ["return b_ciphertext"], "ret_type": "", "ret_type_p": [["bool", 0.17348238911166633], ["str", 0.1656342352848627]], "variables": {"b_ciphertext": "", "b_tmpdata": "", "b_tmpheader": "", "b_version": "", "cipher_name": ""}, "variables_p": {"b_ciphertext": [["List[str]", 0.6224953528925696], ["list", 0.15857623866262224]], "b_tmpdata": [["list", 0.8142696923853832], ["List[str]", 0.09295231781136394], ["str", 0.09277798980325282]], "b_tmpheader": [["str", 0.5810722229819569], ["int", 0.08336105541304006], ["list", 0.08019706550549893]], "b_version": [["\"Point\"", 0.3734573139534286], ["int", 0.24224595197512017], ["str", 0.15118812766920037], ["float", 0.1126781931933867], ["bytes", 0.061167789635722815], ["Type[int]", 0.059262623573141104]], "cipher_name": [["str", 0.922345305669612], ["Dict[int, str]", 0.07765469433038799]]}}], "name": "VaultLib", "q_name": "VaultLib", "variables": {}, "variables_p": {}}, {"cls_lc": [[312, 0], [554, 21]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[314, 4], [315, 39]], "fn_var_ln": {"vault": [[315, 8], [315, 18]]}, "fn_var_occur": {"vault": [["self", "vault", "VaultLib", "password"]]}, "name": "__init__", "params": {"password": "", "self": ""}, "params_descr": {"password": "", "self": ""}, "params_occur": {"password": [["self", "vault", "VaultLib", "password"]], "self": [["self", "vault", "VaultLib", "password"]]}, "params_p": {"args": [], "kwargs": [], "password": [["str", 0.8005515470418902], ["int", 0.10376997476652915]], "self": []}, "q_name": "VaultEditor.__init__", "ret_exprs": [], "ret_type": "", "variables": {"vault": ""}, "variables_p": {"vault": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": "\"Destroy a file, when shred (core-utils) is not available", "long_descr": "Unix `shred' destroys files \"so that they can be recovered only with great difficulty with\nspecialised hardware, if at all\". It is based on the method from the paper\n\"Secure Deletion of Data from Magnetic and Solid-State Memory\",\nProceedings of the Sixth USENIX Security Symposium (San Jose, California, July 22-25, 1996).\n\nWe do not go to that length to re-implement shred in Python; instead, overwriting with a block\nof random data should suffice.\n\nSee https://github.com/ansible/ansible/pull/13700 .", "ret": null}, "fn_lc": [[318, 4], [350, 32]], "fn_var_ln": {"chunk_len": [[342, 20], [342, 29]], "data": [[343, 20], [343, 24]], "file_len": [[332, 8], [332, 16]], "max_chunk_len": [[335, 12], [335, 25]], "passes": [[337, 12], [337, 18]]}, "fn_var_occur": {"chunk_len": [["chunk_len", "random", "randint", "max_chunk_len", "max_chunk_len"], ["data", "os", "urandom", "chunk_len"], ["range", "file_len", "chunk_len"], ["fh", "write", "data", "file_len", "chunk_len"]], "data": [["data", "os", "urandom", "chunk_len"], ["fh", "write", "data"], ["fh", "write", "data", "file_len", "chunk_len"]], "file_len": [["file_len", "os", "path", "getsize", "tmp_path"], ["max_chunk_len", "min", "file_len"], ["range", "file_len", "chunk_len"], ["fh", "write", "data", "file_len", "chunk_len"], ["fh", "tell", "file_len"]], "max_chunk_len": [["max_chunk_len", "min", "file_len"], ["chunk_len", "random", "randint", "max_chunk_len", "max_chunk_len"]], "passes": [["range", "passes"]]}, "name": "_shred_file_custom", "params": {"self": "", "tmp_path": ""}, "params_descr": {"self": "", "tmp_path": ""}, "params_occur": {"self": [], "tmp_path": [["file_len", "os", "path", "getsize", "tmp_path"], ["open", "tmp_path", "fh"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path": [["str", 1.0000000000000002]]}, "q_name": "VaultEditor._shred_file_custom", "ret_exprs": [], "ret_type": "", "variables": {"chunk_len": "", "data": "", "file_len": "", "max_chunk_len": "", "passes": ""}, "variables_p": {"chunk_len": [["random.SystemRandom", 0.6378553953782887], ["int", 0.17299180565570826]], "data": [["bytes", 0.38409889274539927], ["str", 0.33953909358687095], ["Type[List[Any]]", 0.09406704871499001], ["Counter[str]", 0.09208031856372187], ["int", 0.090214646389018]], "file_len": [["str", 0.6859282386586785], ["List[str]", 0.12304280082035247], ["io.StringIO", 0.09700444766054848], ["int", 0.09402451286042048]], "max_chunk_len": [["float", 0.47975782763468977], ["str", 0.13558894453250914], ["List[int]", 0.11330533772134828], ["list", 0.08899932393726662]], "passes": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": "Securely destroy a decrypted file", "long_descr": "Note standard limitations of GNU shred apply (For flash, overwriting would have no effect\ndue to wear leveling; for other storage systems, the async kernel->filesystem->disk calls never\nguarantee data hits the disk; etc). Furthermore, if your tmp dirs is on tmpfs (ramdisks),\nit is a non-issue.\n\nNevertheless, some form of overwriting the data (instead of just removing the fs index entry) is\na good idea. If shred is not available (e.g. on windows, or no core-utils installed), fall back on\na custom shredding method.", "ret": null}, "fn_lc": [[352, 4], [383, 27]], "fn_var_ln": {"r": [[377, 12], [377, 13]]}, "fn_var_occur": {"r": [["r", "call", "tmp_path"]]}, "name": "_shred_file", "params": {"self": "", "tmp_path": ""}, "params_descr": {"self": "", "tmp_path": ""}, "params_occur": {"self": [["self", "_shred_file_custom", "tmp_path"]], "tmp_path": [["os", "path", "isfile", "tmp_path"], ["r", "call", "tmp_path"], ["self", "_shred_file_custom", "tmp_path"], ["os", "remove", "tmp_path"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path": [["str", 0.9999999999999998]]}, "q_name": "VaultEditor._shred_file", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Set[str]", 0.10853000025958487], ["str", 0.1084642643151935], ["Tuple[int, str]", 0.10175373245887163], ["bool", 0.10145372036039024], ["List[str]", 0.09866586066010385]], "variables": {"r": ""}, "variables_p": {"r": [["str", 0.9148946506754093], ["Dict[int, str]", 0.08510534932459096]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[385, 4], [415, 46]], "fn_var_ln": {"_": [[388, 8], [388, 9]], "enc_data": [[411, 8], [411, 16]], "tmp_path": [[388, 11], [388, 19]], "tmpdata": [[401, 8], [401, 15]]}, "fn_var_occur": {"_": [["_", "tmp_path", "tempfile", "mkstemp"]], "enc_data": [["enc_data", "self", "vault", "encrypt", "tmpdata", "decode"], ["self", "write_data", "enc_data", "tmp_path"]], "tmp_path": [["_", "tmp_path", "tempfile", "mkstemp"], ["self", "write_data", "existing_data", "tmp_path", "shred", "False"], ["call", "self", "_editor_shell_command", "tmp_path"], ["self", "_shred_file", "tmp_path"], ["tmpdata", "self", "read_data", "tmp_path"], ["self", "_shred_file", "tmp_path"], ["self", "write_data", "enc_data", "tmp_path"], ["self", "shuffle_files", "tmp_path", "filename"]], "tmpdata": [["tmpdata", "self", "read_data", "tmp_path"], ["existing_data", "tmpdata", "force_save"], ["enc_data", "self", "vault", "encrypt", "tmpdata", "decode"]]}, "name": "_edit_file_helper", "params": {"existing_data": "", "filename": "", "force_save": "", "self": ""}, "params_descr": {"existing_data": "", "filename": "", "force_save": "", "self": ""}, "params_occur": {"existing_data": [["self", "write_data", "existing_data", "tmp_path", "shred", "False"], ["existing_data", "tmpdata", "force_save"]], "filename": [["self", "shuffle_files", "tmp_path", "filename"]], "force_save": [["existing_data", "tmpdata", "force_save"]], "self": [["self", "write_data", "existing_data", "tmp_path", "shred", "False"], ["call", "self", "_editor_shell_command", "tmp_path"], ["self", "_shred_file", "tmp_path"], ["tmpdata", "self", "read_data", "tmp_path"], ["self", "_shred_file", "tmp_path"], ["enc_data", "self", "vault", "encrypt", "tmpdata", "decode"], ["self", "write_data", "enc_data", "tmp_path"], ["self", "shuffle_files", "tmp_path", "filename"]]}, "params_p": {"args": [], "existing_data": [["str", 0.8910294231851238], ["Optional[str]", 0.108970576814876]], "filename": [["str", 0.5078942413265215], ["Optional[str]", 0.20785046538089008], ["bytes", 0.17727144656219795], ["int", 0.10698384673039049]], "force_save": [["str", 0.3907435278085525], ["bool", 0.29636819950099136], ["Optional[str]", 0.10831593347664421], ["int", 0.0979115147940858]], "kwargs": [], "self": []}, "q_name": "VaultEditor._edit_file_helper", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Set[str]", 0.10853000025958487], ["str", 0.1084642643151935], ["Tuple[int, str]", 0.10175373245887163], ["bool", 0.10145372036039024], ["List[str]", 0.09866586066010385]], "variables": {"_": "", "enc_data": "", "tmp_path": "", "tmpdata": ""}, "variables_p": {"_": [["str", 0.31295739252425947], ["List[str]", 0.16985715541197094], ["Set[str]", 0.1527331264439535], ["List[List[Any]]", 0.09081508303241313]], "enc_data": [["str", 0.9152831833638588], ["Dict[str, Dict[str, Any]]", 0.08471681663614115]], "tmp_path": [], "tmpdata": [["int", 0.2009627669724156], ["str", 0.17960447495837384], ["Dict[str, str]", 0.14634437985679072], ["List[str]", 0.10931318140435754], ["dict", 0.10285735539770861], ["List['Book']", 0.08767659884599405], ["Dict[Any, str]", 0.08542648570773574]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[417, 4], [425, 60]], "fn_var_ln": {"ciphertext": [[424, 8], [424, 18]], "plaintext": [[423, 8], [423, 17]]}, "fn_var_occur": {"ciphertext": [["ciphertext", "self", "vault", "encrypt", "plaintext"], ["self", "write_data", "ciphertext", "output_file", "filename"]], "plaintext": [["plaintext", "self", "read_data", "filename"], ["ciphertext", "self", "vault", "encrypt", "plaintext"]]}, "name": "encrypt_file", "params": {"filename": "", "output_file": "", "self": ""}, "params_descr": {"filename": "", "output_file": "", "self": ""}, "params_occur": {"filename": [["plaintext", "self", "read_data", "filename"], ["self", "write_data", "ciphertext", "output_file", "filename"]], "output_file": [["self", "write_data", "ciphertext", "output_file", "filename"]], "self": [["plaintext", "self", "read_data", "filename"], ["ciphertext", "self", "vault", "encrypt", "plaintext"], ["self", "write_data", "ciphertext", "output_file", "filename"]]}, "params_p": {"args": [], "filename": [["str", 0.6870009475770051]], "kwargs": [], "output_file": [["str", 1.0000000000000002]], "self": []}, "q_name": "VaultEditor.encrypt_file", "ret_exprs": [], "ret_type": "", "variables": {"ciphertext": "", "plaintext": ""}, "variables_p": {"ciphertext": [["str", 0.6968437517718156], ["bytes", 0.1151846014320342]], "plaintext": [["str", 0.5089186288891494], ["int", 0.37579897035889887], ["Dict[str, str]", 0.1152824007519516]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[427, 4], [436, 72]], "fn_var_ln": {"ciphertext": [[431, 8], [431, 18]], "plaintext": [[433, 12], [433, 21]]}, "fn_var_occur": {"ciphertext": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"]], "plaintext": [["plaintext", "self", "vault", "decrypt", "ciphertext"], ["self", "write_data", "plaintext", "output_file", "filename", "shred", "False"]]}, "name": "decrypt_file", "params": {"filename": "", "output_file": "", "self": ""}, "params_descr": {"filename": "", "output_file": "", "self": ""}, "params_occur": {"filename": [["ciphertext", "self", "read_data", "filename"], ["AnsibleError", "to_bytes", "e", "to_bytes", "filename"], ["self", "write_data", "plaintext", "output_file", "filename", "shred", "False"]], "output_file": [["self", "write_data", "plaintext", "output_file", "filename", "shred", "False"]], "self": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"], ["self", "write_data", "plaintext", "output_file", "filename", "shred", "False"]]}, "params_p": {"args": [], "filename": [["str", 0.42105840449117277], ["bytes", 0.19078844755023489], ["Set[str]", 0.10857274450820158], ["IO[bytes]", 0.08996112473692305]], "kwargs": [], "output_file": [["str", 0.9068639017377051]], "self": []}, "q_name": "VaultEditor.decrypt_file", "ret_exprs": [], "ret_type": "", "variables": {"ciphertext": "", "plaintext": ""}, "variables_p": {"ciphertext": [["str", 0.5089186288891494], ["int", 0.37579897035889887], ["Dict[str, str]", 0.1152824007519516]], "plaintext": [["Optional[str]", 0.09544060229458236], ["int", 0.09043091188562068], ["Dict[str, Any]", 0.0899918672563764], ["bool", 0.08940796828152806], ["Dict[str, List[Any]]", 0.08906265051097022], ["str", 0.08159390520077088]]}}, {"docstring": {"func": "create a new encrypted file ", "long_descr": null, "ret": null}, "fn_lc": [[438, 4], [448, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_file", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["os", "path", "isfile", "filename"], ["AnsibleError", "filename"], ["self", "_edit_file_helper", "filename"]], "self": [["self", "_edit_file_helper", "filename"]]}, "params_p": {"args": [], "filename": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "VaultEditor.create_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[450, 4], [464, 87]], "fn_var_ln": {"ciphertext": [[454, 8], [454, 18]], "plaintext": [[456, 12], [456, 21]]}, "fn_var_occur": {"ciphertext": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"]], "plaintext": [["plaintext", "self", "vault", "decrypt", "ciphertext"], ["self", "_edit_file_helper", "filename", "existing_data", "plaintext", "force_save", "True"], ["self", "_edit_file_helper", "filename", "existing_data", "plaintext", "force_save", "False"]]}, "name": "edit_file", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["ciphertext", "self", "read_data", "filename"], ["AnsibleError", "to_bytes", "e", "to_bytes", "filename"], ["self", "_edit_file_helper", "filename", "existing_data", "plaintext", "force_save", "True"], ["self", "_edit_file_helper", "filename", "existing_data", "plaintext", "force_save", "False"]], "self": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"], ["self", "vault", "cipher_name", "CIPHER_WRITE_WHITELIST"], ["self", "_edit_file_helper", "filename", "existing_data", "plaintext", "force_save", "True"], ["self", "_edit_file_helper", "filename", "existing_data", "plaintext", "force_save", "False"]]}, "params_p": {"args": [], "filename": [["str", 0.7168883204952815], ["int", 0.19559005387879635], ["bool", 0.08752162562592196]], "kwargs": [], "self": []}, "q_name": "VaultEditor.edit_file", "ret_exprs": [], "ret_type": "", "variables": {"ciphertext": "", "plaintext": ""}, "variables_p": {"ciphertext": [["str", 0.5089186288891494], ["int", 0.37579897035889887], ["Dict[str, str]", 0.1152824007519516]], "plaintext": [["str", 0.30134987538259705], ["int", 0.19803411035333596], ["float", 0.12227350771785213], ["Dict[str, str]", 0.0886620166065141], ["Dict[str, Dict[str, int]]", 0.0882532606420799]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[466, 4], [476, 24]], "fn_var_ln": {"ciphertext": [[469, 8], [469, 18]], "plaintext": [[472, 12], [472, 21]]}, "fn_var_occur": {"ciphertext": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"]], "plaintext": [["plaintext", "self", "vault", "decrypt", "ciphertext"]]}, "name": "plaintext", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["ciphertext", "self", "read_data", "filename"], ["AnsibleError", "to_bytes", "e", "to_bytes", "filename"]], "self": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"]]}, "params_p": {"args": [], "filename": [["str", 0.6045124092480361], ["bytes", 0.17550802924334047]], "kwargs": [], "self": []}, "q_name": "VaultEditor.plaintext", "ret_exprs": ["return plaintext"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"ciphertext": "", "plaintext": ""}, "variables_p": {"ciphertext": [["str", 0.5089186288891494], ["int", 0.37579897035889887], ["Dict[str, str]", 0.1152824007519516]], "plaintext": [["int", 0.7], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1], ["bool", 0.1], ["Type[str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[478, 4], [496, 52]], "fn_var_ln": {"ciphertext": [[483, 8], [483, 18]], "new_ciphertext": [[490, 8], [490, 22]], "new_vault": [[489, 8], [489, 17]], "plaintext": [[485, 12], [485, 21]], "prev": [[482, 8], [482, 12]]}, "fn_var_occur": {"ciphertext": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"]], "new_ciphertext": [["new_ciphertext", "new_vault", "encrypt", "plaintext"], ["self", "write_data", "new_ciphertext", "filename"]], "new_vault": [["new_vault", "VaultLib", "new_password"], ["new_ciphertext", "new_vault", "encrypt", "plaintext"]], "plaintext": [["plaintext", "self", "vault", "decrypt", "ciphertext"], ["new_ciphertext", "new_vault", "encrypt", "plaintext"]], "prev": [["prev", "os", "stat", "filename"], ["os", "chmod", "filename", "prev", "st_mode"], ["os", "chown", "filename", "prev", "st_uid", "prev", "st_gid"]]}, "name": "rekey_file", "params": {"filename": "", "new_password": "", "self": ""}, "params_descr": {"filename": "", "new_password": "", "self": ""}, "params_occur": {"filename": [["prev", "os", "stat", "filename"], ["ciphertext", "self", "read_data", "filename"], ["AnsibleError", "to_bytes", "e", "to_bytes", "filename"], ["self", "write_data", "new_ciphertext", "filename"], ["os", "chmod", "filename", "prev", "st_mode"], ["os", "chown", "filename", "prev", "st_uid", "prev", "st_gid"]], "new_password": [["new_vault", "VaultLib", "new_password"]], "self": [["ciphertext", "self", "read_data", "filename"], ["plaintext", "self", "vault", "decrypt", "ciphertext"], ["self", "write_data", "new_ciphertext", "filename"]]}, "params_p": {"args": [], "filename": [["str", 0.5758489936175573], ["io.BytesIO", 0.1300331192128283], ["bytes", 0.10267695275068242], ["Union[str, bytes]", 0.10092575152740636], ["BinaryIO", 0.09051518289152566]], "kwargs": [], "new_password": [["str", 0.7480824641258296], ["int", 0.08437411682045758], ["Optional[float]", 0.08377170952685636], ["float", 0.08377170952685636]], "self": []}, "q_name": "VaultEditor.rekey_file", "ret_exprs": [], "ret_type": "", "variables": {"ciphertext": "", "new_ciphertext": "", "new_vault": "", "plaintext": "", "prev": ""}, "variables_p": {"ciphertext": [["str", 0.5089186288891494], ["int", 0.37579897035889887], ["Dict[str, str]", 0.1152824007519516]], "new_ciphertext": [["Dict[str, Any]", 0.2933447071078013], ["T", 0.100435612282317], ["str", 0.09929922082488343]], "new_vault": [["raiden.utils.Any", 0.11245374543766758], ["bytearray", 0.09235046725499932], ["int", 0.08819459304386652]], "plaintext": [["int", 0.5806516962832062], ["float", 0.226242444788067], ["bool", 0.10983093315762435], ["bytes", 0.08327492577110245]], "prev": [["io.TextIOWrapper", 0.4196113541760139], ["str", 0.2051361336713683], ["os.stat_result", 0.10791705377499762], ["io.BufferedWriter", 0.09092620193974693]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[498, 4], [509, 19]], "fn_var_ln": {"data": [[505, 20], [505, 24]]}, "fn_var_occur": {"data": [["data", "sys", "stdin", "read"], ["data", "fh", "read"]]}, "name": "read_data", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["open", "filename", "fh"]], "self": []}, "params_p": {"args": [], "filename": [["str", 0.9999999999999999]], "kwargs": [], "self": []}, "q_name": "VaultEditor.read_data", "ret_exprs": ["return data"], "ret_type": "", "ret_type_p": [["Dict[str, List[int]]", 0.20971043994762842], ["dict", 0.17694648752846054], ["str", 0.1723921492306813], ["Optional[float]", 0.09678956060069185], ["bytes", 0.08381184079337255]], "variables": {"data": ""}, "variables_p": {"data": [["int", 0.4428899153454268], ["Dict[str, Union[Any, Any, str]]", 0.1756251505247164], ["List[str]", 0.11369434967585082], ["Dict[str, Dict[str, str]]", 0.09023180005690767], ["bytes", 0.09007408932351742], ["staticmethod", 0.08748469507358081]]}}, {"docstring": {"func": "write data to given path", "long_descr": null, "ret": null}, "fn_lc": [[512, 4], [532, 37]], "fn_var_ln": {"b_file_data": [[521, 8], [521, 19]]}, "fn_var_occur": {"b_file_data": [["b_file_data", "to_bytes", "data", "errors"], ["sys", "stdout", "write", "b_file_data"], ["fh", "write", "b_file_data"]]}, "name": "write_data", "params": {"data": "", "filename": "", "self": "", "shred": ""}, "params_descr": {"data": "the encrypted and hexlified data as a utf-8 byte string", "filename": "filename to save 'data' to.", "self": "", "shred": "if shred==True, make sure that the original data is first shredded so\nthat is cannot be recovered."}, "params_occur": {"data": [["b_file_data", "to_bytes", "data", "errors"]], "filename": [["os", "path", "isfile", "filename"], ["self", "_shred_file", "filename"], ["os", "remove", "filename"], ["open", "filename", "fh"]], "self": [["self", "_shred_file", "filename"]], "shred": []}, "params_p": {"args": [], "data": [["Union[str, bytes]", 0.347910943723871], ["bytes", 0.2121009665589338], ["Union[io.FileIO, io.BufferedReader]", 0.08770574045743236]], "filename": [["str", 0.816226281784802], ["bytes", 0.09442589654454059], ["AnyStr", 0.08934782167065737]], "kwargs": [], "self": [], "shred": [["bytes", 0.39564868676945947], ["Optional[dict]", 0.1701868584320813], ["bool", 0.12576226792509426], ["list", 0.12263307475292526], ["Mapping", 0.09716824874108469]]}, "q_name": "VaultEditor.write_data", "ret_exprs": [], "ret_type": "", "variables": {"b_file_data": ""}, "variables_p": {"b_file_data": [["bytes", 0.30698455159568117], ["str", 0.3042987670776037], ["Tuple[List[str], List[str]]", 0.10613163833278491], ["Dict[str, Any]", 0.09123009961821535]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[534, 4], [547, 52]], "fn_var_ln": {"prev": [[538, 12], [538, 16]]}, "fn_var_occur": {"prev": [["prev", "None"], ["prev", "os", "stat", "dest"], ["prev", "None"], ["os", "chmod", "dest", "prev", "st_mode"], ["os", "chown", "dest", "prev", "st_uid", "prev", "st_gid"]]}, "name": "shuffle_files", "params": {"dest": "", "self": "", "src": ""}, "params_descr": {"dest": "", "self": "", "src": ""}, "params_occur": {"dest": [["os", "path", "isfile", "dest"], ["prev", "os", "stat", "dest"], ["os", "remove", "dest"], ["shutil", "move", "src", "dest"], ["os", "chmod", "dest", "prev", "st_mode"], ["os", "chown", "dest", "prev", "st_uid", "prev", "st_gid"]], "self": [], "src": [["shutil", "move", "src", "dest"]]}, "params_p": {"args": [], "dest": [["str", 0.9999999999999998]], "kwargs": [], "self": [], "src": [["str", 0.8223490700069939], ["list", 0.04441273249825153]]}, "q_name": "VaultEditor.shuffle_files", "ret_exprs": [], "ret_type": "", "variables": {"prev": ""}, "variables_p": {"prev": [["str", 0.32767648389881543], ["int", 0.2212492217338088], ["subprocess.Popen[Any]", 0.10807312351482126], ["Set[str]", 0.09915992461675313], ["dict", 0.08529023560177768]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[549, 4], [554, 21]], "fn_var_ln": {"EDITOR": [[550, 8], [550, 14]], "editor": [[551, 8], [551, 14]]}, "fn_var_occur": {"EDITOR": [["EDITOR", "os", "environ", "get"], ["editor", "shlex", "split", "EDITOR"]], "editor": [["editor", "shlex", "split", "EDITOR"], ["editor", "append", "filename"]]}, "name": "_editor_shell_command", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["editor", "append", "filename"]], "self": []}, "params_p": {"args": [], "filename": [["List[str]", 0.27545477834939025], ["str", 0.243928694318358], ["Optional[str]", 0.17649838894629252], ["list", 0.11562194876337895], ["bool", 0.09732963539446349]], "kwargs": [], "self": []}, "q_name": "VaultEditor._editor_shell_command", "ret_exprs": ["return editor"], "ret_type": "", "ret_type_p": [["str", 0.9798715777186553], ["int", 0.0019080977625367643], ["Dict[str, bool]", 0.0019080977625367643], ["float", 0.0015274829105591066], ["bool", 0.0014745051278943003]], "variables": {"EDITOR": "", "editor": ""}, "variables_p": {"EDITOR": [["str", 0.46118909583515705], ["List[str]", 0.23015809307116236]], "editor": [["List[str]", 0.6323927961393035], ["list", 0.19339691921822058], ["Dict[str, Any]", 0.09066692309475138], ["str", 0.08354336154772435]]}}], "name": "VaultEditor", "q_name": "VaultEditor", "variables": {}, "variables_p": {}}, {"cls_lc": [[561, 0], [651, 26]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[570, 4], [572, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "VaultAES.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create a key and an initialization vector ", "long_descr": null, "ret": null}, "fn_lc": [[574, 4], [587, 26]], "fn_var_ln": {"b_d": [[578, 8], [578, 11]], "b_di": [[581, 12], [581, 16]], "b_iv": [[585, 8], [585, 12]], "b_key": [[584, 8], [584, 13]], "b_text": [[580, 12], [580, 18]]}, "fn_var_occur": {"b_d": [["b_d", "b_di"], ["len", "b_d", "key_length", "iv_length"], ["b_d", "b_di"], ["b_key", "b_d", "key_length"], ["b_iv", "b_d", "key_length", "key_length", "iv_length"]], "b_di": [["b_d", "b_di"], ["b_text", "join", "b_di", "b_password", "b_salt"], ["b_di", "to_bytes", "md5", "b_text", "digest", "errors"], ["b_d", "b_di"]], "b_iv": [["b_iv", "b_d", "key_length", "key_length", "iv_length"], ["b_key", "b_iv"]], "b_key": [["b_key", "b_d", "key_length"], ["b_key", "b_iv"]], "b_text": [["b_text", "join", "b_di", "b_password", "b_salt"], ["b_di", "to_bytes", "md5", "b_text", "digest", "errors"]]}, "name": "_aes_derive_key_and_iv", "params": {"b_password": "", "b_salt": "", "iv_length": "", "key_length": "", "self": ""}, "params_descr": {"b_password": "", "b_salt": "", "iv_length": "", "key_length": "", "self": ""}, "params_occur": {"b_password": [["b_text", "join", "b_di", "b_password", "b_salt"]], "b_salt": [["b_text", "join", "b_di", "b_password", "b_salt"]], "iv_length": [["len", "b_d", "key_length", "iv_length"], ["b_iv", "b_d", "key_length", "key_length", "iv_length"]], "key_length": [["len", "b_d", "key_length", "iv_length"], ["b_key", "b_d", "key_length"], ["b_iv", "b_d", "key_length", "key_length", "iv_length"]], "self": []}, "params_p": {"args": [], "b_password": [["str", 0.4370918763256959], ["Optional[str]", 0.16453862624504026], ["bool", 0.11086322954155808]], "b_salt": [["str", 0.4370918763256959], ["Optional[str]", 0.16453862624504026], ["bool", 0.11086322954155808]], "iv_length": [["str", 0.7208387787744893], ["\"CharSource\"", 0.09538283139683633]], "key_length": [["str", 0.6934267764230524], ["List[str]", 0.09911360387691427]], "kwargs": [], "self": []}, "q_name": "VaultAES._aes_derive_key_and_iv", "ret_exprs": ["return b_key, b_iv"], "ret_type": "", "ret_type_p": [["str", 0.21520684235093826], ["bool", 0.10868112925045322], ["bytes", 0.08928890882440782]], "variables": {"b_d": "", "b_di": "", "b_iv": "", "b_key": "", "b_text": ""}, "variables_p": {"b_d": [["int", 0.33306165848643354], ["str", 0.2862901650987886], ["List[str]", 0.1299771977821715], ["list", 0.08484580182340085], ["Type[List[Any]]", 0.08367595206329065], ["Dict[str, Any]", 0.08214922474591485]], "b_di": [["int", 0.22291582450908765], ["bool", 0.10063560001582451], ["Optional[str]", 0.09900667366609098], ["str", 0.09750425845731846]], "b_iv": [["List[int]", 0.1716255025660388], ["Dict[str, str]", 0.10472565155417482], ["int", 0.09721082143095566], ["List[str]", 0.09437066206091264], ["Dict[int, bool]", 0.09190148503418484], ["str", 0.08978991542530329], ["io.StringIO", 0.08702417416418244], ["Dict[int, Union[Any, Any]]", 0.08692004703896973], ["Dict[int, List[int]]", 0.08692004703896973]], "b_key": [["str", 1.0]], "b_text": [["Tuple[str, str, str]", 0.41516471214528783], ["str", 0.20302130153080056], ["int", 0.09766483930251624], ["List[Tuple[int, int]]", 0.09288183226834398], ["List[str]", 0.09240387449443782]]}}, {"docstring": {"func": "Read plaintext data from in_file and write encrypted to out_file ", "long_descr": null, "ret": null}, "fn_lc": [[589, 4], [593, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "encrypt", "params": {"b_password": "", "b_plaintext": "", "key_length": "", "self": ""}, "params_descr": {"b_password": "", "b_plaintext": "", "key_length": "", "self": ""}, "params_occur": {"b_password": [], "b_plaintext": [], "key_length": [], "self": []}, "params_p": {"args": [], "b_password": [["bool", 0.5698874933024721], ["List[str]", 0.22342083854252162], ["str", 0.20669166815500617]], "b_plaintext": [["bool", 0.5698874933024721], ["List[str]", 0.22342083854252162], ["str", 0.20669166815500617]], "key_length": [["bool", 0.5698874933024721], ["List[str]", 0.22342083854252162], ["str", 0.20669166815500617]], "kwargs": [], "self": []}, "q_name": "VaultAES.encrypt", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Decrypt the given data and return it", "long_descr": null, "ret": "A byte string containing the decrypted data"}, "fn_lc": [[595, 4], [651, 26]], "fn_var_ln": {"b_chunk": [[631, 16], [631, 23]], "b_ciphertext": [[609, 8], [609, 20]], "b_iv": [[618, 15], [618, 19]], "b_key": [[618, 8], [618, 13]], "b_next_chunk": [[624, 21], [624, 33]], "b_out_data": [[639, 8], [639, 18]], "b_plaintext": [[645, 8], [645, 19]], "b_salt": [[617, 8], [617, 14]], "b_split_data": [[643, 8], [643, 20]], "b_test_sha": [[646, 8], [646, 18]], "b_this_sha": [[644, 8], [644, 18]], "b_tmpsalt": [[616, 8], [616, 17]], "bs": [[615, 8], [615, 10]], "cipher": [[619, 8], [619, 14]], "finished": [[632, 16], [632, 24]], "in_file": [[611, 8], [611, 15]], "out_file": [[613, 8], [613, 16]], "padding_length": [[629, 20], [629, 34]]}, "fn_var_occur": {"b_chunk": [["b_chunk", "b_next_chunk", "b_next_chunk", "cipher", "decrypt", "in_file", "read", "bs"], ["padding_length", "b_chunk"], ["padding_length", "ord", "b_chunk"], ["b_chunk", "b_chunk", "padding_length"], ["out_file", "write", "b_chunk"]], "b_ciphertext": [["b_ciphertext", "unhexlify", "b_vaulttext"], ["in_file", "BytesIO", "b_ciphertext"]], "b_iv": [["b_key", "b_iv", "self", "_aes_derive_key_and_iv", "b_password", "b_salt", "key_length", "bs"], ["cipher", "AES", "new", "b_key", "AES", "MODE_CBC", "b_iv"]], "b_key": [["b_key", "b_iv", "self", "_aes_derive_key_and_iv", "b_password", "b_salt", "key_length", "bs"], ["cipher", "AES", "new", "b_key", "AES", "MODE_CBC", "b_iv"]], "b_next_chunk": [["b_chunk", "b_next_chunk", "b_next_chunk", "cipher", "decrypt", "in_file", "read", "bs"], ["len", "b_next_chunk"]], "b_out_data": [["b_out_data", "out_file", "read"], ["b_split_data", "b_out_data", "split"]], "b_plaintext": [["b_plaintext", "b_split_data"], ["b_test_sha", "to_bytes", "sha256", "b_plaintext", "hexdigest"]], "b_salt": [["b_salt", "b_tmpsalt", "len"], ["b_key", "b_iv", "self", "_aes_derive_key_and_iv", "b_password", "b_salt", "key_length", "bs"]], "b_split_data": [["b_split_data", "b_out_data", "split"], ["b_this_sha", "b_split_data"], ["b_plaintext", "b_split_data"]], "b_test_sha": [["b_test_sha", "to_bytes", "sha256", "b_plaintext", "hexdigest"], ["b_this_sha", "b_test_sha"]], "b_this_sha": [["b_this_sha", "b_split_data"], ["b_this_sha", "b_test_sha"]], "b_tmpsalt": [["b_tmpsalt", "in_file", "read", "bs"], ["b_salt", "b_tmpsalt", "len"]], "bs": [["bs", "AES", "block_size"], ["b_tmpsalt", "in_file", "read", "bs"], ["b_key", "b_iv", "self", "_aes_derive_key_and_iv", "b_password", "b_salt", "key_length", "bs"], ["b_chunk", "b_next_chunk", "b_next_chunk", "cipher", "decrypt", "in_file", "read", "bs"]], "cipher": [["cipher", "AES", "new", "b_key", "AES", "MODE_CBC", "b_iv"], ["b_chunk", "b_next_chunk", "b_next_chunk", "cipher", "decrypt", "in_file", "read", "bs"]], "finished": [["finished", "False"], ["finished", "True"]], "in_file": [["in_file", "BytesIO", "b_ciphertext"], ["in_file", "seek"], ["b_tmpsalt", "in_file", "read", "bs"], ["b_chunk", "b_next_chunk", "b_next_chunk", "cipher", "decrypt", "in_file", "read", "bs"]], "out_file": [["out_file", "BytesIO"], ["out_file", "write", "b_chunk"], ["out_file", "flush"], ["out_file", "seek"], ["b_out_data", "out_file", "read"], ["out_file", "close"]], "padding_length": [["padding_length", "b_chunk"], ["padding_length", "ord", "b_chunk"], ["b_chunk", "b_chunk", "padding_length"]]}, "name": "decrypt", "params": {"b_password": "", "b_vaulttext": "", "key_length": "", "self": ""}, "params_descr": {"b_password": "A byte string containing the encryption password", "b_vaulttext": "", "key_length": "Length of the key", "self": ""}, "params_occur": {"b_password": [["b_key", "b_iv", "self", "_aes_derive_key_and_iv", "b_password", "b_salt", "key_length", "bs"]], "b_vaulttext": [["b_ciphertext", "unhexlify", "b_vaulttext"]], "key_length": [["b_key", "b_iv", "self", "_aes_derive_key_and_iv", "b_password", "b_salt", "key_length", "bs"]], "self": [["b_key", "b_iv", "self", "_aes_derive_key_and_iv", "b_password", "b_salt", "key_length", "bs"]]}, "params_p": {"args": [], "b_password": [["int", 0.19650293629702176], ["str", 0.19299256001469522], ["bytes", 0.19220064297115314], ["bool", 0.11770909159892985], ["Optional[bytes]", 0.10461550721145499], ["Sequence[str]", 0.09798963095337256]], "b_vaulttext": [["bool", 0.4298138820225315], ["List[List[str]]", 0.19286261889381315], ["int", 0.09238022776194607], ["MutableMapping[str, Any]", 0.08455794454043587]], "key_length": [["int", 0.19650293629702176], ["str", 0.19299256001469522], ["bytes", 0.19220064297115314], ["bool", 0.11770909159892985], ["Optional[bytes]", 0.10461550721145499], ["Sequence[str]", 0.09798963095337256]], "kwargs": [], "self": []}, "q_name": "VaultAES.decrypt", "ret_exprs": ["return b_plaintext"], "ret_type": "", "ret_type_p": [["bool", 0.0832464831909122], ["str", 0.0784432595426524], ["bytes", 0.034687974405105314]], "variables": {"b_chunk": "", "b_ciphertext": "", "b_iv": "", "b_key": "", "b_next_chunk": "", "b_out_data": "", "b_plaintext": "", "b_salt": "", "b_split_data": "", "b_test_sha": "", "b_this_sha": "", "b_tmpsalt": "", "bs": "", "cipher": "", "finished": "", "in_file": "", "out_file": "", "padding_length": ""}, "variables_p": {"b_chunk": [["str", 0.08273950192049578]], "b_ciphertext": [["hmac.HMAC", 0.2754411584449232], ["pycharm_helpers.py2only.docutils.utils.math.math2html.TextPosition", 0.090758132588392]], "b_iv": [["list", 0.19291647945593976], ["int", 0.10508624097951566], ["str", 0.09797265204455799]], "b_key": [["str", 0.6663503561876908], ["int", 0.14765896376915583]], "b_next_chunk": [], "b_out_data": [["List[Tuple[Any, Any, None]]", 0.3886005359882041], ["Dict[bytes, int]", 0.2968555831698896], ["str", 0.21573605451071795], ["Dict[str, int]", 0.0988078263311885]], "b_plaintext": [["bytes", 0.20144735681462678], ["str", 0.12964782243406758], ["list", 0.10926257590859302], ["Dict[str, Any]", 0.09345781076392203], ["int", 0.08810187027272876], ["Dict[str, str]", 0.08418034311649798]], "b_salt": [["int", 0.21733242356094257], ["list", 0.0969204351560112], ["Dict[str, Union[bool, str]]", 0.09513973282515821], ["Dict[str, int]", 0.09014155412821985]], "b_split_data": [["str", 0.9999999999999998]], "b_test_sha": [["int", 0.8849376392411828], ["float", 0.1150623607588171]], "b_this_sha": [["pytch.utils.Position", 0.21356350230214166], ["str", 0.10204743322826158], ["List[str]", 0.10020730092182116], ["Type[tuple]", 0.09801144686302302]], "b_tmpsalt": [["str", 0.6058372792751753], ["List[str]", 0.10256841513369093], ["Dict[int, bytes]", 0.09557209193515911], ["Dict[int, Union[Any, Any]]", 0.09164020839247436]], "bs": [["io.TextIOWrapper", 0.18843785598743987], ["bytes", 0.08934647147205158]], "cipher": [["str", 0.27083236004537037], ["Optional[str]", 0.17799107518051901], ["List[str]", 0.11834471054805563], ["Tuple[str]", 0.10427220062467722]], "finished": [["int", 0.49999999999142564], ["list", 0.2499999999931977], ["bool", 1.2921943513617861e-11], ["Set[str]", 4.247932884947998e-12]], "in_file": [["io.BufferedReader", 0.4768151123631714], ["io.StringIO", 0.31678109008882815], ["io.BufferedWriter", 0.20640379754800037]], "out_file": [["io.BufferedWriter", 0.20831173227782193], ["io.TextIOWrapper", 0.09329275449383322], ["List[str]", 0.09301497036850907]], "padding_length": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}], "name": "VaultAES", "q_name": "VaultAES", "variables": {}, "variables_p": {}}, {"cls_lc": [[654, 0], [787, 26]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[665, 4], [667, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "VaultAES256.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[670, 4], [678, 27]], "fn_var_ln": {"b_derivedkey": [[676, 8], [676, 20]], "hash_function": [[671, 8], [671, 21]], "pbkdf2_prf": [[674, 8], [674, 18]]}, "fn_var_occur": {"b_derivedkey": [["b_derivedkey", "PBKDF2", "b_password", "b_salt", "dkLen", "keylength", "ivlength", "count", "prf", "pbkdf2_prf"]], "hash_function": [["hash_function", "SHA256"], ["pbkdf2_prf", "p", "s", "HMAC", "new", "p", "s", "hash_function", "digest"]], "pbkdf2_prf": [["pbkdf2_prf", "p", "s", "HMAC", "new", "p", "s", "hash_function", "digest"], ["b_derivedkey", "PBKDF2", "b_password", "b_salt", "dkLen", "keylength", "ivlength", "count", "prf", "pbkdf2_prf"]]}, "name": "_create_key", "params": {"b_password": "", "b_salt": "", "ivlength": "", "keylength": ""}, "params_descr": {"b_password": "", "b_salt": "", "ivlength": "", "keylength": ""}, "params_occur": {"b_password": [["b_derivedkey", "PBKDF2", "b_password", "b_salt", "dkLen", "keylength", "ivlength", "count", "prf", "pbkdf2_prf"]], "b_salt": [["b_derivedkey", "PBKDF2", "b_password", "b_salt", "dkLen", "keylength", "ivlength", "count", "prf", "pbkdf2_prf"]], "ivlength": [["b_derivedkey", "PBKDF2", "b_password", "b_salt", "dkLen", "keylength", "ivlength", "count", "prf", "pbkdf2_prf"]], "keylength": [["b_derivedkey", "PBKDF2", "b_password", "b_salt", "dkLen", "keylength", "ivlength", "count", "prf", "pbkdf2_prf"]]}, "params_p": {"args": [], "b_password": [["int", 0.31704782212403854], ["str", 0.1940020622473826], ["float", 0.11114155295080973], ["bool", 0.09852268032751994], ["bytes", 0.09431340158857675], ["Optional[str]", 0.09429212715490908]], "b_salt": [["int", 0.31704782212403854], ["str", 0.1940020622473826], ["float", 0.11114155295080973], ["bool", 0.09852268032751994], ["bytes", 0.09431340158857675], ["Optional[str]", 0.09429212715490908]], "ivlength": [["int", 0.31704782212403854], ["str", 0.1940020622473826], ["float", 0.11114155295080973], ["bool", 0.09852268032751994], ["bytes", 0.09431340158857675], ["Optional[str]", 0.09429212715490908]], "keylength": [["int", 0.31704782212403854], ["str", 0.1940020622473826], ["float", 0.11114155295080973], ["bool", 0.09852268032751994], ["bytes", 0.09431340158857675], ["Optional[str]", 0.09429212715490908]], "kwargs": [], "self": []}, "q_name": "VaultAES256._create_key", "ret_exprs": ["return b_derivedkey"], "ret_type": "", "ret_type_p": [["bool", 0.11105759563782162], ["bytes", 0.10677321620790661], ["str", 0.09786536600033606]], "variables": {"b_derivedkey": "", "hash_function": "", "pbkdf2_prf": ""}, "variables_p": {"b_derivedkey": [["int", 0.22556983298683303], ["float", 0.07295928114006656]], "hash_function": [["hashlib._Hash", 0.2879615616394238], ["int", 0.09327261646007265], ["str", 0.09327261646007265]], "pbkdf2_prf": [["Pattern[str]", 0.18691449272758645], ["int", 0.16453911549795736], ["str", 0.10443862471653735], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09327966485266627], ["List[float]", 0.09301473676516356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[681, 4], [704, 44]], "fn_var_ln": {"b_derivedkey": [[698, 12], [698, 24]], "b_iv": [[702, 8], [702, 12]], "b_key1": [[700, 8], [700, 14]], "b_key2": [[701, 8], [701, 14]], "backend": [[689, 12], [689, 19]], "ivlength": [[686, 8], [686, 16]], "kdf": [[690, 12], [690, 15]], "keylength": [[683, 8], [683, 17]]}, "fn_var_occur": {"b_derivedkey": [["b_derivedkey", "kdf", "derive", "b_password"], ["b_derivedkey", "cls", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["b_key1", "b_derivedkey", "keylength"], ["b_key2", "b_derivedkey", "keylength", "keylength"], ["b_iv", "b_derivedkey", "keylength", "keylength", "ivlength"]], "b_iv": [["b_iv", "b_derivedkey", "keylength", "keylength", "ivlength"], ["b_key1", "b_key2", "hexlify", "b_iv"]], "b_key1": [["b_key1", "b_derivedkey", "keylength"], ["b_key1", "b_key2", "hexlify", "b_iv"]], "b_key2": [["b_key2", "b_derivedkey", "keylength", "keylength"], ["b_key1", "b_key2", "hexlify", "b_iv"]], "backend": [["backend", "default_backend"], ["kdf", "PBKDF2HMAC", "algorithm", "c_SHA256", "length", "keylength", "ivlength", "salt", "b_salt", "iterations", "backend", "backend"]], "ivlength": [["kdf", "PBKDF2HMAC", "algorithm", "c_SHA256", "length", "keylength", "ivlength", "salt", "b_salt", "iterations", "backend", "backend"], ["b_derivedkey", "cls", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["b_iv", "b_derivedkey", "keylength", "keylength", "ivlength"]], "kdf": [["kdf", "PBKDF2HMAC", "algorithm", "c_SHA256", "length", "keylength", "ivlength", "salt", "b_salt", "iterations", "backend", "backend"], ["b_derivedkey", "kdf", "derive", "b_password"]], "keylength": [["kdf", "PBKDF2HMAC", "algorithm", "c_SHA256", "length", "keylength", "ivlength", "salt", "b_salt", "iterations", "backend", "backend"], ["b_derivedkey", "cls", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["b_key1", "b_derivedkey", "keylength"], ["b_key2", "b_derivedkey", "keylength", "keylength"], ["b_iv", "b_derivedkey", "keylength", "keylength", "ivlength"]]}, "name": "_gen_key_initctr", "params": {"b_password": "", "b_salt": "", "cls": ""}, "params_descr": {"b_password": "", "b_salt": "", "cls": ""}, "params_occur": {"b_password": [["b_derivedkey", "kdf", "derive", "b_password"], ["b_derivedkey", "cls", "_create_key", "b_password", "b_salt", "keylength", "ivlength"]], "b_salt": [["kdf", "PBKDF2HMAC", "algorithm", "c_SHA256", "length", "keylength", "ivlength", "salt", "b_salt", "iterations", "backend", "backend"], ["b_derivedkey", "cls", "_create_key", "b_password", "b_salt", "keylength", "ivlength"]], "cls": [["b_derivedkey", "cls", "_create_key", "b_password", "b_salt", "keylength", "ivlength"]]}, "params_p": {"args": [], "b_password": [["str", 0.8365123233512032]], "b_salt": [["bool", 0.22311199983879412], ["raiden.utils.Nonce", 0.09736507279672561], ["raiden.utils.BalanceHash", 0.09736507279672561], ["raiden.utils.AdditionalHash", 0.09736507279672561], ["raiden.utils.Signature", 0.09736507279672561], ["str", 0.08114156346145517]], "cls": [["str", 0.8155032168126573], ["Optional[str]", 0.08887191228467275]], "kwargs": [], "self": []}, "q_name": "VaultAES256._gen_key_initctr", "ret_exprs": ["return b_key1, b_key2, hexlify(b_iv)"], "ret_type": "", "ret_type_p": [["bytes", 0.30276756052679954], ["Tuple[int, int]", 0.11846729418715417], ["dict", 0.10304227674140007], ["Tuple[bytes, str]", 0.09761520949049902], ["str", 0.09480184433511599], ["Iterator[bytes]", 0.09055606305736598], ["bool", 0.08388140353467878]], "variables": {"b_derivedkey": "", "b_iv": "", "b_key1": "", "b_key2": "", "backend": "", "ivlength": "", "kdf": "", "keylength": ""}, "variables_p": {"b_derivedkey": [["str", 0.08587288415450403], ["bytes", 0.08587065622894782]], "b_iv": [["str", 0.1892150667994926], ["Union[Literal, Literal]", 0.10135940977273245], ["int", 0.09214285943821272]], "b_key1": [["str", 0.6934804344470857], ["Set[str]", 0.18893499065778416], ["frozenset[str]", 0.11758457489513031]], "b_key2": [["str", 0.8997984072691427], ["Set[str]", 0.10020159273085733]], "backend": [["pringles.utils.vtime.VirtualTime", 0.20176040262970957], ["hashlib._BlakeHash", 0.10448556065721304], ["int", 0.0883837558636836]], "ivlength": [["float", 0.28025062192403], ["io.TextIOWrapper", 0.15875351245746908]], "kdf": [["str", 0.1976555808858274], ["float", 0.17339447769658337]], "keylength": [["float", 0.28025062192403], ["io.TextIOWrapper", 0.15875351245746908]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[706, 4], [735, 26]], "fn_var_ln": {"b_ciphertext": [[729, 8], [729, 20]], "b_iv": [[708, 24], [708, 28]], "b_key1": [[708, 8], [708, 14]], "b_key2": [[708, 16], [708, 22]], "b_salt": [[707, 8], [707, 14]], "b_vaulttext": [[734, 8], [734, 19]], "bs": [[711, 8], [711, 10]], "cipher": [[726, 8], [726, 14]], "ctr": [[719, 8], [719, 11]], "hmac": [[732, 8], [732, 12]], "padding_length": [[712, 8], [712, 22]]}, "fn_var_occur": {"b_ciphertext": [["b_ciphertext", "cipher", "encrypt", "b_plaintext"], ["hmac", "HMAC", "new", "b_key2", "b_ciphertext", "SHA256"], ["b_vaulttext", "join", "hexlify", "b_salt", "to_bytes", "hmac", "hexdigest", "hexlify", "b_ciphertext"]], "b_iv": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["ctr", "Counter", "new", "initial_value", "int", "b_iv"]], "b_key1": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["cipher", "AES", "new", "b_key1", "AES", "MODE_CTR", "counter", "ctr"]], "b_key2": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["hmac", "HMAC", "new", "b_key2", "b_ciphertext", "SHA256"]], "b_salt": [["b_salt", "os", "urandom"], ["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["b_vaulttext", "join", "hexlify", "b_salt", "to_bytes", "hmac", "hexdigest", "hexlify", "b_ciphertext"]], "b_vaulttext": [["b_vaulttext", "join", "hexlify", "b_salt", "to_bytes", "hmac", "hexdigest", "hexlify", "b_ciphertext"], ["b_vaulttext", "hexlify", "b_vaulttext"]], "bs": [["bs", "AES", "block_size"], ["padding_length", "bs", "len", "b_plaintext", "bs", "bs"]], "cipher": [["cipher", "AES", "new", "b_key1", "AES", "MODE_CTR", "counter", "ctr"], ["b_ciphertext", "cipher", "encrypt", "b_plaintext"]], "ctr": [["ctr", "Counter", "new", "initial_value", "int", "b_iv"], ["cipher", "AES", "new", "b_key1", "AES", "MODE_CTR", "counter", "ctr"]], "hmac": [["hmac", "HMAC", "new", "b_key2", "b_ciphertext", "SHA256"], ["b_vaulttext", "join", "hexlify", "b_salt", "to_bytes", "hmac", "hexdigest", "hexlify", "b_ciphertext"]], "padding_length": [["padding_length", "bs", "len", "b_plaintext", "bs", "bs"], ["b_plaintext", "to_bytes", "padding_length", "chr", "padding_length", "encoding", "errors"]]}, "name": "encrypt", "params": {"b_password": "", "b_plaintext": "", "self": ""}, "params_descr": {"b_password": "", "b_plaintext": "", "self": ""}, "params_occur": {"b_password": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"]], "b_plaintext": [["padding_length", "bs", "len", "b_plaintext", "bs", "bs"], ["b_plaintext", "to_bytes", "padding_length", "chr", "padding_length", "encoding", "errors"], ["b_ciphertext", "cipher", "encrypt", "b_plaintext"]], "self": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"]]}, "params_p": {"args": [], "b_password": [["bool", 0.3229873374369364], ["bytes", 0.10452309580137163], ["str", 0.09763403329708896], ["Tuple[int, int]", 0.09405998073111234]], "b_plaintext": [["int", 0.3027667163438402], ["bytes", 0.09681146740575798]], "kwargs": [], "self": []}, "q_name": "VaultAES256.encrypt", "ret_exprs": ["return b_vaulttext"], "ret_type": "", "ret_type_p": [["bool", 0.0832464831909122], ["str", 0.0784432595426524], ["bytes", 0.034687974405105314]], "variables": {"b_ciphertext": "", "b_iv": "", "b_key1": "", "b_key2": "", "b_salt": "", "b_vaulttext": "", "bs": "", "cipher": "", "ctr": "", "hmac": "", "padding_length": ""}, "variables_p": {"b_ciphertext": [["str", 0.09296177599902707]], "b_iv": [["Set[str]", 0.11367070578067932], ["List[int]", 0.09267680605161709], ["DefaultDict[str, int]", 0.08992559041518845]], "b_key1": [["str", 0.6097138466581736]], "b_key2": [["str", 0.6097138466581736]], "b_salt": [["str", 0.3869950502502335], ["io.BufferedWriter", 0.21102346913430423], ["dict", 0.10348151536729182], ["subprocess.Popen[Any]", 0.08449308917806181]], "b_vaulttext": [["str", 0.52375948336763], ["List[str]", 0.2067205274115282], ["list", 0.09242002390603342], ["Set[str]", 0.08920923113520794]], "bs": [["list", 0.21778119296021312], ["List[int]", 0.18366182935978648], ["int", 0.1808664771807344]], "cipher": [["str", 0.9159751539424188], ["List[str]", 0.08402484605758108]], "ctr": [["int", 0.2184835837298001], ["list", 0.21177605283350964], ["Collection[int]", 0.1737835280247361], ["float", 0.09203450965843135]], "hmac": [["str", 0.2832887175841912], ["int", 0.19608254356091187], ["bytes", 0.13093761252221647], ["Optional[str]", 0.10283575523414829], ["io.TextIOWrapper", 0.09457466490214674], ["Dict[int, str]", 0.0895703000553519]], "padding_length": [["bytes", 0.7771936395720235], ["int", 0.12513553821202258], ["list", 0.09767082221595398]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[737, 4], [763, 26]], "fn_var_ln": {"b_ciphertext": [[742, 8], [742, 20]], "b_cryptedHmac": [[740, 16], [740, 29]], "b_iv": [[743, 24], [743, 28]], "b_key1": [[743, 8], [743, 14]], "b_key2": [[743, 16], [743, 22]], "b_plaintext": [[762, 8], [762, 19]], "b_salt": [[741, 8], [741, 14]], "b_vaulttext": [[739, 8], [739, 19]], "cipher": [[751, 8], [751, 14]], "ctr": [[750, 8], [750, 11]], "hmacDecrypt": [[746, 8], [746, 19]], "padding_length": [[760, 12], [760, 26]]}, "fn_var_occur": {"b_ciphertext": [["b_salt", "b_cryptedHmac", "b_ciphertext", "b_vaulttext", "split"], ["b_ciphertext", "unhexlify", "b_ciphertext"], ["hmacDecrypt", "HMAC", "new", "b_key2", "b_ciphertext", "SHA256"], ["b_plaintext", "cipher", "decrypt", "b_ciphertext"]], "b_cryptedHmac": [["b_salt", "b_cryptedHmac", "b_ciphertext", "b_vaulttext", "split"], ["self", "_is_equal", "b_cryptedHmac", "to_bytes", "hmacDecrypt", "hexdigest"]], "b_iv": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["ctr", "Counter", "new", "initial_value", "int", "b_iv"]], "b_key1": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["cipher", "AES", "new", "b_key1", "AES", "MODE_CTR", "counter", "ctr"]], "b_key2": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["hmacDecrypt", "HMAC", "new", "b_key2", "b_ciphertext", "SHA256"]], "b_plaintext": [["b_plaintext", "cipher", "decrypt", "b_ciphertext"], ["padding_length", "b_plaintext"], ["padding_length", "ord", "b_plaintext"], ["b_plaintext", "b_plaintext", "padding_length"]], "b_salt": [["b_salt", "b_cryptedHmac", "b_ciphertext", "b_vaulttext", "split"], ["b_salt", "unhexlify", "b_salt"], ["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"]], "b_vaulttext": [["b_vaulttext", "unhexlify", "b_vaulttext"], ["b_salt", "b_cryptedHmac", "b_ciphertext", "b_vaulttext", "split"]], "cipher": [["cipher", "AES", "new", "b_key1", "AES", "MODE_CTR", "counter", "ctr"], ["b_plaintext", "cipher", "decrypt", "b_ciphertext"]], "ctr": [["ctr", "Counter", "new", "initial_value", "int", "b_iv"], ["cipher", "AES", "new", "b_key1", "AES", "MODE_CTR", "counter", "ctr"]], "hmacDecrypt": [["hmacDecrypt", "HMAC", "new", "b_key2", "b_ciphertext", "SHA256"], ["self", "_is_equal", "b_cryptedHmac", "to_bytes", "hmacDecrypt", "hexdigest"]], "padding_length": [["padding_length", "b_plaintext"], ["padding_length", "ord", "b_plaintext"], ["b_plaintext", "b_plaintext", "padding_length"]]}, "name": "decrypt", "params": {"b_password": "", "b_vaulttext": "", "self": ""}, "params_descr": {"b_password": "", "b_vaulttext": "", "self": ""}, "params_occur": {"b_password": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"]], "b_vaulttext": [["b_vaulttext", "unhexlify", "b_vaulttext"], ["b_salt", "b_cryptedHmac", "b_ciphertext", "b_vaulttext", "split"]], "self": [["b_key1", "b_key2", "b_iv", "self", "_gen_key_initctr", "b_password", "b_salt"], ["self", "_is_equal", "b_cryptedHmac", "to_bytes", "hmacDecrypt", "hexdigest"]]}, "params_p": {"args": [], "b_password": [["bool", 0.3229873374369364], ["bytes", 0.10452309580137163], ["str", 0.09763403329708896], ["Tuple[int, int]", 0.09405998073111234]], "b_vaulttext": [["torch.utils.data.DataLoader", 0.12702029546799], ["List[Tuple[int, int]]", 0.09598807423903019], ["Callable[[Callable], Callable[..., Any]]", 0.08622857570400885], ["int", 0.08611182105820171]], "kwargs": [], "self": []}, "q_name": "VaultAES256.decrypt", "ret_exprs": ["return None", "return b_plaintext"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.5145027797329422], ["str", 0.24223279523277935], ["bool", 0.08290945591576283], ["Optional[List[Any]]", 0.08050952158765656]], "variables": {"b_ciphertext": "", "b_cryptedHmac": "", "b_iv": "", "b_key1": "", "b_key2": "", "b_plaintext": "", "b_salt": "", "b_vaulttext": "", "cipher": "", "ctr": "", "hmacDecrypt": "", "padding_length": ""}, "variables_p": {"b_ciphertext": [], "b_cryptedHmac": [["Iterator[Any]", 0.09049057887100471]], "b_iv": [["Set[str]", 0.11367070578067932], ["List[int]", 0.09267680605161709], ["DefaultDict[str, int]", 0.08992559041518845]], "b_key1": [["str", 0.6097138466581736]], "b_key2": [["str", 0.6216821994628343]], "b_plaintext": [["float", 0.3], ["int", 0.09999999999999999], ["dict", 0.09999999999999999], ["Tuple[int, int]", 0.09999999999999999], ["Iterator[Any]", 0.09999999999999999]], "b_salt": [["str", 0.3939223029934117]], "b_vaulttext": [["int", 0.11930829095077108]], "cipher": [["str", 0.9159751539424188], ["List[str]", 0.08402484605758108]], "ctr": [["int", 0.2184835837298001], ["list", 0.21177605283350964], ["Collection[int]", 0.1737835280247361], ["float", 0.09203450965843135]], "hmacDecrypt": [["bytes", 0.4769396575610563], ["hashlib._Hash", 0.10691664486417889], ["hmac.HMAC", 0.08402055052094679], ["cryptography.x509.Certificate", 0.08184147698293245]], "padding_length": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": "Comparing 2 byte arrrays in constant time", "long_descr": "to avoid timing attacks.\n\nIt would be nice if there was a library for this but\nhey.", "ret": null}, "fn_lc": [[766, 4], [787, 26]], "fn_var_ln": {"result": [[781, 8], [781, 14]]}, "fn_var_occur": {"result": [["result", "b_x", "b_y"], ["result", "ord", "b_x", "ord", "b_y"]]}, "name": "_is_equal", "params": {"b_a": "", "b_b": ""}, "params_descr": {"b_a": "", "b_b": ""}, "params_occur": {"b_a": [["isinstance", "b_a", "binary_type", "isinstance", "b_b", "binary_type"], ["len", "b_a", "len", "b_b"], ["zip", "b_a", "b_b"]], "b_b": [["isinstance", "b_a", "binary_type", "isinstance", "b_b", "binary_type"], ["len", "b_a", "len", "b_b"], ["zip", "b_a", "b_b"]]}, "params_p": {"args": [], "b_a": [["int", 0.5125147071512277], ["str", 0.18525470796855523]], "b_b": [["int", 0.5125147071512277], ["str", 0.18525470796855523]], "kwargs": [], "self": []}, "q_name": "VaultAES256._is_equal", "ret_exprs": ["return False", "return result == 0"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"result": ""}, "variables_p": {"result": [["list", 0.21032191455927393], ["str", 0.21032191455927393], ["int", 0.07874617565585605], ["List[str]", 0.06977838869879958]]}}], "name": "VaultAES256", "q_name": "VaultAES256", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 0], [106, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_prereqs", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "check_prereqs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test if this is vault encrypted data blob", "long_descr": null, "ret": "True if it is recognized.  Otherwise, False."}, "fn_lc": [[113, 0], [132, 16]], "fn_var_ln": {"b_data": [[123, 8], [123, 14]]}, "fn_var_occur": {"b_data": [["b_data", "to_bytes", "to_text", "data", "encoding", "errors", "nonstring", "encoding", "errors"], ["b_data", "startswith", "b_HEADER"]]}, "name": "is_encrypted", "params": {"data": ""}, "params_descr": {"data": "a byte or text string to test whether it is recognized as vault\nencrypted data"}, "params_occur": {"data": [["b_data", "to_bytes", "to_text", "data", "encoding", "errors", "nonstring", "encoding", "errors"]]}, "params_p": {"args": [], "data": [["str", 0.5681448464632968], ["bytes", 0.3259169803771754]], "kwargs": []}, "q_name": "is_encrypted", "ret_exprs": ["return False", "return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"b_data": ""}, "variables_p": {"b_data": [["bytes", 0.28752250828736914], ["str", 0.1782952342669197], ["List[str]", 0.1344079407312982], ["int", 0.11349135404120572], ["Dict[bytes, bytes]", 0.10414491701757252]]}}, {"docstring": {"func": "Test if the contents of a file obj are a vault encrypted data blob.", "long_descr": null, "ret": "True if the file looks like a vault file. Otherwise, False."}, "fn_lc": [[135, 0], [162, 36]], "fn_var_ln": {"b_vaulttext": [[152, 12], [152, 23]], "current_position": [[147, 4], [147, 20]], "vaulttext": [[150, 8], [150, 17]]}, "fn_var_occur": {"b_vaulttext": [["b_vaulttext", "to_bytes", "to_text", "vaulttext", "encoding", "errors", "encoding", "errors"], ["is_encrypted", "b_vaulttext"]], "current_position": [["current_position", "file_obj", "tell"], ["file_obj", "seek", "current_position"]], "vaulttext": [["vaulttext", "file_obj", "read", "count"], ["b_vaulttext", "to_bytes", "to_text", "vaulttext", "encoding", "errors", "encoding", "errors"]]}, "name": "is_encrypted_file", "params": {"count": "", "file_obj": "", "start_pos": ""}, "params_descr": {"count": "", "file_obj": "A file object that will be read from.", "start_pos": ""}, "params_occur": {"count": [["vaulttext", "file_obj", "read", "count"]], "file_obj": [["current_position", "file_obj", "tell"], ["file_obj", "seek", "start_pos"], ["vaulttext", "file_obj", "read", "count"], ["file_obj", "seek", "current_position"]], "start_pos": [["file_obj", "seek", "start_pos"]]}, "params_p": {"args": [], "count": [["str", 0.2946281144249488], ["List[str]", 0.0987736733003697]], "file_obj": [["str", 0.26818547823579597], ["IO[bytes]", 0.13510730265141305], ["TextIO", 0.09496601239384772]], "kwargs": [], "start_pos": [["str", 0.4844838692858208], ["dict", 0.13641602362506552]]}, "q_name": "is_encrypted_file", "ret_exprs": ["return False", "return is_encrypted(b_vaulttext)"], "ret_type": "", "ret_type_p": [["bool", 1.0000000000000002]], "variables": {"b_vaulttext": "", "current_position": "", "vaulttext": ""}, "variables_p": {"b_vaulttext": [["str", 0.7799462386115038], ["float", 0.11498548414328703], ["os._wrap_close", 0.10506827724520923]], "current_position": [["dict", 0.40288873130805714], ["str", 0.11668612459619503]], "vaulttext": [["Tuple[str, str, str, str]", 0.18251857102789779], ["str", 0.17478311940696473], ["Tuple[List[Any], List[Any], List[Any]]", 0.14409850588429246], ["io.TextIOWrapper", 0.08828868128432246], ["float", 0.07029240724979591], ["int", 0.07029240724979591]]}}], "imports": ["__future__", "absolute_import", "division", "print_function", "os", "shlex", "shutil", "sys", "tempfile", "random", "io", "BytesIO", "subprocess", "call", "hashlib", "sha256", "binascii", "hexlify", "binascii", "unhexlify", "hashlib", "md5", "Crypto", "Hash", "SHA256", "HMAC", "Crypto", "Util", "Counter", "Crypto", "Protocol", "KDF", "PBKDF2", "Crypto", "Cipher", "AES", "AES", "ansible", "compat", "six", "PY3", "binary_type", "ansible", "compat", "six", "moves", "zip", "ansible", "errors", "AnsibleError", "ansible", "module_utils", "_text", "to_bytes", "to_text", "__main__", "display", "ansible", "utils", "display", "Display", "cryptography", "hazmat", "primitives", "hashes", "SHA256", "c_SHA256", "cryptography", "hazmat", "primitives", "kdf", "pbkdf2", "PBKDF2HMAC", "cryptography", "hazmat", "backends", "default_backend", "traceback"], "mod_var_ln": {"CIPHER_MAPPING": [[792, 0], [792, 14]], "CIPHER_WHITELIST": [[97, 0], [97, 16]], "CIPHER_WRITE_WHITELIST": [[98, 0], [98, 22]], "CRYPTO_UPGRADE": [[93, 0], [93, 14]], "HAS_AES": [[63, 4], [63, 11]], "HAS_ANY_PBKDF2HMAC": [[90, 0], [90, 18]], "HAS_COUNTER": [[49, 4], [49, 15]], "HAS_HASH": [[42, 4], [42, 12]], "HAS_PBKDF2": [[56, 4], [56, 14]], "HAS_PBKDF2HMAC": [[82, 4], [82, 18]], "__metaclass__": [[20, 0], [20, 13]], "b_HEADER": [[96, 0], [96, 8]], "display": [[74, 4], [74, 11]]}, "mod_var_occur": {"CIPHER_MAPPING": [], "CIPHER_WHITELIST": [["cipher_class_name", "globals", "self", "cipher_name", "CIPHER_WHITELIST"]], "CIPHER_WRITE_WHITELIST": [["self", "cipher_name", "self", "cipher_name", "CIPHER_WRITE_WHITELIST"], ["self", "vault", "cipher_name", "CIPHER_WRITE_WHITELIST"]], "CRYPTO_UPGRADE": [["AnsibleError", "CRYPTO_UPGRADE"], ["AnsibleError", "CRYPTO_UPGRADE"]], "HAS_AES": [["HAS_AES", "HAS_COUNTER", "HAS_ANY_PBKDF2HMAC", "HAS_HASH"], ["HAS_AES"]], "HAS_ANY_PBKDF2HMAC": [["HAS_AES", "HAS_COUNTER", "HAS_ANY_PBKDF2HMAC", "HAS_HASH"]], "HAS_COUNTER": [["HAS_AES", "HAS_COUNTER", "HAS_ANY_PBKDF2HMAC", "HAS_HASH"]], "HAS_HASH": [["HAS_AES", "HAS_COUNTER", "HAS_ANY_PBKDF2HMAC", "HAS_HASH"]], "HAS_PBKDF2": [["HAS_ANY_PBKDF2HMAC", "HAS_PBKDF2", "HAS_PBKDF2HMAC"]], "HAS_PBKDF2HMAC": [["HAS_ANY_PBKDF2HMAC", "HAS_PBKDF2", "HAS_PBKDF2HMAC"], ["HAS_PBKDF2HMAC"]], "__metaclass__": [], "b_HEADER": [["b_data", "startswith", "b_HEADER"], ["header", "join", "b_HEADER", "self", "b_version", "to_bytes", "self", "cipher_name", "errors"]], "display": [["display", "vvvv"], ["display", "vvvv", "format", "traceback", "format_exc"], ["display", "deprecated", "version"], ["display", "deprecated", "version"], ["display", "deprecated", "version"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 216}, "session_id": "EIreG-uBSV5DlxWwu7CT7G5YgW4CJClPedRk_f0cZPo", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CIPHER_MAPPING": "", "CIPHER_WHITELIST": "", "CIPHER_WRITE_WHITELIST": "", "CRYPTO_UPGRADE": "", "HAS_AES": "", "HAS_ANY_PBKDF2HMAC": "", "HAS_COUNTER": "", "HAS_HASH": "", "HAS_PBKDF2": "", "HAS_PBKDF2HMAC": "", "__metaclass__": "", "b_HEADER": "", "display": ""}, "variables_p": {"CIPHER_MAPPING": [["Dict[str, Tuple[str, None]]", 0.49999999999999994], ["Dict[str, str]", 0.09999999999999999], ["Dict[str, None]", 0.09999999999999999], ["Dict[str, Tuple[str, Any]]", 0.09999999999999999], ["Dict[str, bool]", 0.09999999999999999], ["Type[Dict[str, Any]]", 0.09999999999999999]], "CIPHER_WHITELIST": [["str", 0.3229702411692368], ["Dict[str, str]", 0.17692528711622263], ["int", 0.10120575157720936], ["dict", 0.08989810646441668]], "CIPHER_WRITE_WHITELIST": [["Dict[str, str]", 0.3563784552930844], ["str", 0.24373127812408446], ["dict", 0.17415591320113014], ["Type[\"ExtractableWordnet\"]", 0.15277556557781471], ["Optional[str]", 0.07295878780388629]], "CRYPTO_UPGRADE": [["str", 0.7362279043636882]], "HAS_AES": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_ANY_PBKDF2HMAC": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_COUNTER": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_HASH": [["int", 0.5000000000255194], ["bool", 2.551931543477643e-11], ["List[bool]", 2.551931543477643e-11], ["tuple", 2.551931543477643e-11]], "HAS_PBKDF2": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_PBKDF2HMAC": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "b_HEADER": [["str", 0.33816865020138903], ["bytes", 0.1792589376172915], ["List[str]", 0.17682703107555392], ["Dict[str, Any]", 0.12698556683887144], ["Dict[str, Dict[str, Any]]", 0.089492139269064], ["dict", 0.08926767499783012]], "display": [["str", 0.2858830713004339], ["Dict[str, str]", 0.2626209816203485], ["List[str]", 0.157622096467186], ["Optional[str]", 0.10371263230547703], ["Dict[int, Dict[str, str]]", 0.09565880943041931], ["list", 0.0945024088761352]]}}}