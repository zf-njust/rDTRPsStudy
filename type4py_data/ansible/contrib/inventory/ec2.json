{"error": null, "response": {"classes": [{"cls_lc": [[153, 0], [1506, 35]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[155, 4], [156, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_empty_inventory", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory._empty_inventory", "ret_exprs": ["return {\"_meta\" : {\"hostvars\" : {}}}"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Main execution path ", "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [201, 28]], "fn_var_ln": {"boto_profile": [[169, 8], [169, 25]], "credentials": [[172, 8], [172, 24]], "data_to_print": [[199, 16], [199, 29]], "index": [[166, 8], [166, 18]], "inventory": [[163, 8], [163, 22]]}, "fn_var_occur": {"boto_profile": [["self", "boto_profile", "None"], ["self", "boto_profile"]], "credentials": [["self", "credentials"]], "data_to_print": [["data_to_print", "self", "get_host_info"], ["data_to_print", "self", "get_inventory_from_cache"], ["data_to_print", "self", "json_format_dict", "self", "inventory", "True"], ["print", "data_to_print"]], "index": [["self", "index"]], "inventory": [["self", "inventory", "self", "_empty_inventory"], ["self", "inventory", "self", "_empty_inventory"], ["data_to_print", "self", "json_format_dict", "self", "inventory", "True"]]}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "inventory", "self", "_empty_inventory"], ["self", "index"], ["self", "boto_profile", "None"], ["self", "credentials"], ["self", "parse_cli_args"], ["self", "read_settings"], ["self", "boto_profile"], ["self", "fail_with_error"], ["self", "args", "refresh_cache"], ["self", "do_api_calls_update_cache"], ["self", "is_cache_valid"], ["self", "do_api_calls_update_cache"], ["self", "args", "host"], ["data_to_print", "self", "get_host_info"], ["self", "args", "list"], ["self", "inventory", "self", "_empty_inventory"], ["data_to_print", "self", "get_inventory_from_cache"], ["data_to_print", "self", "json_format_dict", "self", "inventory", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.__init__", "ret_exprs": [], "ret_type": "", "variables": {"boto_profile": "", "credentials": "", "data_to_print": "", "index": "", "inventory": ""}, "variables_p": {"boto_profile": [["int", 0.6732832777413026], ["list", 0.24983073193447813]], "credentials": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "data_to_print": [["str", 0.711757290073336], ["list", 0.10893380001009802], ["Dict[str, List[str]]", 0.09173653887014863], ["dict", 0.08757237104641753]], "index": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "inventory": [["str", 0.40372568769457573], ["Dict[str, Union[None, Any, Any, Any]]", 0.11149903832711859], ["Dict[str, Dict[str, Any]]", 0.11043073508785152], ["Dict[str, Union[None, Any, Any]]", 0.1083637276235408], ["Optional[str]", 0.08880583503817878], ["Dict[str, str]", 0.08880583503817878]]}}, {"docstring": {"func": "Determines if the cache files have expired, or if it is still valid ", "long_descr": null, "ret": null}, "fn_lc": [[204, 4], [214, 20]], "fn_var_ln": {"current_time": [[209, 12], [209, 24]], "mod_time": [[208, 12], [208, 20]]}, "fn_var_occur": {"current_time": [["current_time", "time"], ["mod_time", "self", "cache_max_age", "current_time"]], "mod_time": [["mod_time", "os", "path", "getmtime", "self", "cache_path_cache"], ["mod_time", "self", "cache_max_age", "current_time"]]}, "name": "is_cache_valid", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["os", "path", "isfile", "self", "cache_path_cache"], ["mod_time", "os", "path", "getmtime", "self", "cache_path_cache"], ["mod_time", "self", "cache_max_age", "current_time"], ["os", "path", "isfile", "self", "cache_path_index"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.is_cache_valid", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"current_time": "", "mod_time": ""}, "variables_p": {"current_time": [["float", 0.4414244118914488], ["time.struct_time", 0.2930892097725718], ["Anaconda3.Lib.site-packages.astropy.time.core.TimeDelta", 0.17504724688494644]], "mod_time": [["str", 1.0]]}}, {"docstring": {"func": "Reads the settings from the ec2.ini file ", "long_descr": null, "ret": null}, "fn_lc": [[217, 4], [463, 74]], "fn_var_ln": {"all_elasticache_clusters": [[333, 12], [333, 41]], "all_elasticache_nodes": [[339, 12], [339, 38]], "all_elasticache_replication_groups": [[327, 12], [327, 51]], "all_instances": [[293, 12], [293, 30]], "all_rds_instances": [[321, 12], [321, 34]], "aws_access_key_id": [[352, 16], [352, 33]], "aws_profile": [[377, 8], [377, 19]], "aws_secret_access_key": [[356, 16], [356, 37]], "aws_security_token": [[360, 16], [360, 34]], "boto_profile": [[344, 12], [344, 29]], "cache_dir": [[372, 12], [372, 21]], "cache_max_age": [[385, 8], [385, 26]], "cache_name": [[382, 12], [382, 22]], "cache_path_cache": [[383, 8], [383, 29]], "cache_path_index": [[384, 8], [384, 29]], "config": [[222, 12], [222, 18]], "configRegions": [[237, 8], [237, 21]], "configRegions_exclude": [[238, 8], [238, 29]], "credentials": [[362, 16], [362, 32]], "destination_format": [[263, 12], [263, 35]], "destination_format_tags": [[264, 12], [264, 40]], "destination_variable": [[250, 8], [250, 33]], "ec2_default_ini_path": [[223, 8], [223, 28]], "ec2_ini_path": [[224, 8], [224, 20]], "ec2_instance_filters": [[451, 8], [451, 33]], "ec2_instance_states": [[315, 10], [315, 34]], "ec2_valid_instance_states": [[297, 8], [297, 33]], "elasticache_enabled": [[287, 12], [287, 36]], "eucalyptus": [[231, 12], [231, 27]], "eucalyptus_host": [[233, 12], [233, 32]], "expand_csv_tags": [[390, 12], [390, 32]], "filter_key": [[460, 16], [460, 26]], "filter_value": [[460, 28], [460, 40]], "filters": [[454, 12], [454, 19]], "group_by_options": [[405, 8], [405, 24]], "hostname_variable": [[256, 12], [256, 34]], "include_rds_clusters": [[282, 12], [282, 37]], "instance_filter": [[457, 16], [457, 31]], "instance_state": [[310, 12], [310, 26]], "nested_groups": [[396, 12], [396, 30]], "pattern_exclude": [[448, 12], [448, 32]], "pattern_include": [[438, 12], [438, 32]], "rds_enabled": [[276, 12], [276, 28]], "regions": [[247, 12], [247, 24]], "replace_dash_in_groups": [[402, 12], [402, 39]], "route53_enabled": [[267, 8], [267, 28]], "route53_excluded_zones": [[268, 8], [268, 35]], "vpc_destination_variable": [[251, 8], [251, 37]]}, "fn_var_occur": {"all_elasticache_clusters": [["self", "all_elasticache_clusters", "config", "getboolean"], ["self", "all_elasticache_clusters", "False"]], "all_elasticache_nodes": [["self", "all_elasticache_nodes", "config", "getboolean"], ["self", "all_elasticache_nodes", "False"]], "all_elasticache_replication_groups": [["self", "all_elasticache_replication_groups", "config", "getboolean"], ["self", "all_elasticache_replication_groups", "False"]], "all_instances": [["self", "all_instances", "config", "getboolean"], ["self", "all_instances", "False"], ["self", "all_instances"]], "all_rds_instances": [["self", "all_rds_instances", "config", "getboolean"], ["self", "all_rds_instances", "False"]], "aws_access_key_id": [["aws_access_key_id", "config", "get"], ["aws_access_key_id", "None"], ["self", "credentials", "aws_access_key_id", "aws_secret_access_key"]], "aws_profile": [["aws_profile", "self", "boto_profile", "os", "environ", "get", "os", "environ", "get", "self", "credentials", "get", "None"], ["cache_name", "cache_name", "aws_profile"]], "aws_secret_access_key": [["aws_secret_access_key", "config", "get"], ["aws_secret_access_key", "None"], ["self", "credentials", "aws_access_key_id", "aws_secret_access_key"]], "aws_security_token": [["aws_security_token", "config", "get"], ["aws_security_token", "None"], ["self", "credentials", "aws_security_token"]], "boto_profile": [["self", "boto_profile", "self", "args", "boto_profile"], ["config", "has_option", "self", "boto_profile"], ["self", "boto_profile", "config", "get"], ["self", "boto_profile", "os", "environ", "get", "os", "environ", "get"], ["self", "boto_profile"], ["cache_dir", "os", "path", "join", "cache_dir", "self", "boto_profile"], ["aws_profile", "self", "boto_profile", "os", "environ", "get", "os", "environ", "get", "self", "credentials", "get", "None"]], "cache_dir": [["cache_dir", "os", "path", "expanduser", "config", "get"], ["cache_dir", "os", "path", "join", "cache_dir", "self", "boto_profile"], ["os", "path", "exists", "cache_dir"], ["os", "makedirs", "cache_dir"], ["self", "cache_path_cache", "cache_dir", "cache_name"], ["self", "cache_path_index", "cache_dir", "cache_name"]], "cache_max_age": [["self", "cache_max_age", "config", "getint"]], "cache_name": [["cache_name", "cache_name", "aws_profile"], ["self", "cache_path_cache", "cache_dir", "cache_name"], ["self", "cache_path_index", "cache_dir", "cache_name"]], "cache_path_cache": [["self", "cache_path_cache", "cache_dir", "cache_name"]], "cache_path_index": [["self", "cache_path_index", "cache_dir", "cache_name"]], "config": [["config", "configparser", "ConfigParser"], ["config", "configparser", "SafeConfigParser"], ["config", "read", "ec2_ini_path"], ["config", "has_option"], ["self", "eucalyptus", "config", "getboolean"], ["self", "eucalyptus", "config", "has_option"], ["self", "eucalyptus_host", "config", "get"], ["configRegions", "config", "get"], ["configRegions_exclude", "config", "get"], ["self", "destination_variable", "config", "get"], ["self", "vpc_destination_variable", "config", "get"], ["config", "has_option"], ["self", "hostname_variable", "config", "get"], ["config", "has_option", "config", "has_option"], ["self", "destination_format", "config", "get"], ["self", "destination_format_tags", "config", "get", "split"], ["self", "route53_enabled", "config", "getboolean"], ["config", "has_option"], ["self", "route53_excluded_zones", "extend", "config", "get", "split"], ["config", "has_option"], ["self", "rds_enabled", "config", "getboolean"], ["config", "has_option"], ["self", "include_rds_clusters", "config", "getboolean"], ["config", "has_option"], ["self", "elasticache_enabled", "config", "getboolean"], ["config", "has_option"], ["self", "all_instances", "config", "getboolean"], ["config", "has_option"], ["config", "get", "split"], ["config", "has_option", "self", "rds_enabled"], ["self", "all_rds_instances", "config", "getboolean"], ["config", "has_option", "self", "elasticache_enabled"], ["self", "all_elasticache_replication_groups", "config", "getboolean"], ["config", "has_option", "self", "elasticache_enabled"], ["self", "all_elasticache_clusters", "config", "getboolean"], ["config", "has_option", "self", "elasticache_enabled"], ["self", "all_elasticache_nodes", "config", "getboolean"], ["config", "has_option", "self", "boto_profile"], ["self", "boto_profile", "config", "get"], ["config", "has_option"], ["aws_access_key_id", "config", "get"], ["config", "has_option"], ["aws_secret_access_key", "config", "get"], ["config", "has_option"], ["aws_security_token", "config", "get"], ["cache_dir", "os", "path", "expanduser", "config", "get"], ["self", "cache_max_age", "config", "getint"], ["config", "has_option"], ["self", "expand_csv_tags", "config", "getboolean"], ["config", "has_option"], ["self", "nested_groups", "config", "getboolean"], ["config", "has_option"], ["self", "replace_dash_in_groups", "config", "getboolean"], ["config", "has_option", "option"], ["setattr", "self", "option", "config", "getboolean", "option"], ["pattern_include", "config", "get"], ["pattern_exclude", "config", "get"], ["config", "has_option"], ["filters", "f", "f", "config", "get", "split", "f"]], "configRegions": [["configRegions", "config", "get"], ["self", "regions", "configRegions", "split"]], "configRegions_exclude": [["configRegions_exclude", "config", "get"], ["regionInfo", "name", "configRegions_exclude"]], "credentials": [["self", "regions", "append", "boto", "connect_euca", "host", "self", "eucalyptus_host", "region", "name", "self", "credentials"], ["self", "credentials", "aws_access_key_id", "aws_secret_access_key"], ["self", "credentials", "aws_security_token"], ["aws_profile", "self", "boto_profile", "os", "environ", "get", "os", "environ", "get", "self", "credentials", "get", "None"]], "destination_format": [["self", "destination_format", "config", "get"], ["self", "destination_format", "None"]], "destination_format_tags": [["self", "destination_format_tags", "config", "get", "split"], ["self", "destination_format_tags", "None"]], "destination_variable": [["self", "destination_variable", "config", "get"]], "ec2_default_ini_path": [["ec2_default_ini_path", "os", "path", "join", "os", "path", "dirname", "os", "path", "realpath", "__file__"], ["ec2_ini_path", "os", "path", "expanduser", "os", "path", "expandvars", "os", "environ", "get", "ec2_default_ini_path"]], "ec2_ini_path": [["ec2_ini_path", "os", "path", "expanduser", "os", "path", "expandvars", "os", "environ", "get", "ec2_default_ini_path"], ["config", "read", "ec2_ini_path"]], "ec2_instance_filters": [["self", "ec2_instance_filters", "defaultdict", "list"], ["self", "ec2_instance_filters", "filter_key", "append", "filter_value"]], "ec2_instance_states": [["self", "ec2_instance_states"], ["self", "ec2_instance_states", "ec2_valid_instance_states"], ["self", "ec2_instance_states", "append", "instance_state"], ["self", "ec2_instance_states"]], "ec2_valid_instance_states": [["self", "ec2_instance_states", "ec2_valid_instance_states"], ["instance_state", "ec2_valid_instance_states"]], "elasticache_enabled": [["self", "elasticache_enabled", "True"], ["self", "elasticache_enabled", "config", "getboolean"], ["config", "has_option", "self", "elasticache_enabled"], ["config", "has_option", "self", "elasticache_enabled"], ["config", "has_option", "self", "elasticache_enabled"]], "eucalyptus": [["self", "eucalyptus", "False"], ["self", "eucalyptus", "config", "getboolean"], ["self", "eucalyptus", "config", "has_option"]], "eucalyptus_host": [["self", "eucalyptus_host", "None"], ["self", "eucalyptus_host", "config", "get"], ["self", "eucalyptus_host"], ["self", "regions", "append", "boto", "connect_euca", "host", "self", "eucalyptus_host", "region", "name", "self", "credentials"]], "expand_csv_tags": [["self", "expand_csv_tags", "config", "getboolean"], ["self", "expand_csv_tags", "False"]], "filter_key": [["filter_key", "filter_value", "x", "strip", "x", "instance_filter", "split"], ["self", "ec2_instance_filters", "filter_key", "append", "filter_value"]], "filter_value": [["filter_key", "filter_value", "x", "strip", "x", "instance_filter", "split"], ["self", "ec2_instance_filters", "filter_key", "append", "filter_value"]], "filters": [["filters", "f", "f", "config", "get", "split", "f"]], "group_by_options": [], "hostname_variable": [["self", "hostname_variable", "config", "get"], ["self", "hostname_variable", "None"]], "include_rds_clusters": [["self", "include_rds_clusters", "config", "getboolean"], ["self", "include_rds_clusters", "False"]], "instance_filter": [["instance_filter", "instance_filter", "strip"], ["instance_filter", "instance_filter"], ["filter_key", "filter_value", "x", "strip", "x", "instance_filter", "split"]], "instance_state": [["instance_state", "instance_state", "strip"], ["instance_state", "ec2_valid_instance_states"], ["self", "ec2_instance_states", "append", "instance_state"]], "nested_groups": [["self", "nested_groups", "config", "getboolean"], ["self", "nested_groups", "False"]], "pattern_exclude": [["pattern_exclude", "config", "get"], ["pattern_exclude", "len", "pattern_exclude"], ["self", "pattern_exclude", "re", "compile", "pattern_exclude"], ["self", "pattern_exclude", "None"], ["self", "pattern_exclude", "None"]], "pattern_include": [["pattern_include", "config", "get"], ["pattern_include", "len", "pattern_include"], ["self", "pattern_include", "re", "compile", "pattern_include"], ["self", "pattern_include", "None"], ["self", "pattern_include", "None"]], "rds_enabled": [["self", "rds_enabled", "True"], ["self", "rds_enabled", "config", "getboolean"], ["config", "has_option", "self", "rds_enabled"]], "regions": [["self", "regions"], ["self", "regions", "append", "boto", "connect_euca", "host", "self", "eucalyptus_host", "region", "name", "self", "credentials"], ["ec2", "regions"], ["self", "regions", "append", "regionInfo", "name"], ["self", "regions", "configRegions", "split"]], "replace_dash_in_groups": [["self", "replace_dash_in_groups", "config", "getboolean"], ["self", "replace_dash_in_groups", "True"]], "route53_enabled": [["self", "route53_enabled", "config", "getboolean"]], "route53_excluded_zones": [["self", "route53_excluded_zones"], ["self", "route53_excluded_zones", "extend", "config", "get", "split"]], "vpc_destination_variable": [["self", "vpc_destination_variable", "config", "get"]]}, "name": "read_settings", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "eucalyptus_host", "None"], ["self", "eucalyptus", "False"], ["self", "eucalyptus", "config", "getboolean"], ["self", "eucalyptus", "config", "has_option"], ["self", "eucalyptus_host", "config", "get"], ["self", "regions"], ["self", "eucalyptus_host"], ["self", "regions", "append", "boto", "connect_euca", "host", "self", "eucalyptus_host", "region", "name", "self", "credentials"], ["self", "regions", "append", "regionInfo", "name"], ["self", "regions", "configRegions", "split"], ["self", "destination_variable", "config", "get"], ["self", "vpc_destination_variable", "config", "get"], ["self", "hostname_variable", "config", "get"], ["self", "hostname_variable", "None"], ["self", "destination_format", "config", "get"], ["self", "destination_format_tags", "config", "get", "split"], ["self", "destination_format", "None"], ["self", "destination_format_tags", "None"], ["self", "route53_enabled", "config", "getboolean"], ["self", "route53_excluded_zones"], ["self", "route53_excluded_zones", "extend", "config", "get", "split"], ["self", "rds_enabled", "True"], ["self", "rds_enabled", "config", "getboolean"], ["self", "include_rds_clusters", "config", "getboolean"], ["self", "include_rds_clusters", "False"], ["self", "elasticache_enabled", "True"], ["self", "elasticache_enabled", "config", "getboolean"], ["self", "all_instances", "config", "getboolean"], ["self", "all_instances", "False"], ["self", "ec2_instance_states"], ["self", "all_instances"], ["self", "ec2_instance_states", "ec2_valid_instance_states"], ["self", "ec2_instance_states", "append", "instance_state"], ["self", "ec2_instance_states"], ["config", "has_option", "self", "rds_enabled"], ["self", "all_rds_instances", "config", "getboolean"], ["self", "all_rds_instances", "False"], ["config", "has_option", "self", "elasticache_enabled"], ["self", "all_elasticache_replication_groups", "config", "getboolean"], ["self", "all_elasticache_replication_groups", "False"], ["config", "has_option", "self", "elasticache_enabled"], ["self", "all_elasticache_clusters", "config", "getboolean"], ["self", "all_elasticache_clusters", "False"], ["config", "has_option", "self", "elasticache_enabled"], ["self", "all_elasticache_nodes", "config", "getboolean"], ["self", "all_elasticache_nodes", "False"], ["self", "boto_profile", "self", "args", "boto_profile"], ["config", "has_option", "self", "boto_profile"], ["self", "boto_profile", "config", "get"], ["self", "boto_profile", "os", "environ", "get", "os", "environ", "get"], ["self", "credentials", "aws_access_key_id", "aws_secret_access_key"], ["self", "credentials", "aws_security_token"], ["self", "boto_profile"], ["cache_dir", "os", "path", "join", "cache_dir", "self", "boto_profile"], ["aws_profile", "self", "boto_profile", "os", "environ", "get", "os", "environ", "get", "self", "credentials", "get", "None"], ["self", "cache_path_cache", "cache_dir", "cache_name"], ["self", "cache_path_index", "cache_dir", "cache_name"], ["self", "cache_max_age", "config", "getint"], ["self", "expand_csv_tags", "config", "getboolean"], ["self", "expand_csv_tags", "False"], ["self", "nested_groups", "config", "getboolean"], ["self", "nested_groups", "False"], ["self", "replace_dash_in_groups", "config", "getboolean"], ["self", "replace_dash_in_groups", "True"], ["setattr", "self", "option", "config", "getboolean", "option"], ["setattr", "self", "option", "True"], ["self", "pattern_include", "re", "compile", "pattern_include"], ["self", "pattern_include", "None"], ["self", "pattern_include", "None"], ["self", "pattern_exclude", "re", "compile", "pattern_exclude"], ["self", "pattern_exclude", "None"], ["self", "pattern_exclude", "None"], ["self", "ec2_instance_filters", "defaultdict", "list"], ["self", "ec2_instance_filters", "filter_key", "append", "filter_value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.read_settings", "ret_exprs": [], "ret_type": "", "variables": {"all_elasticache_clusters": "", "all_elasticache_nodes": "", "all_elasticache_replication_groups": "", "all_instances": "", "all_rds_instances": "", "aws_access_key_id": "", "aws_profile": "", "aws_secret_access_key": "", "aws_security_token": "", "boto_profile": "", "cache_dir": "", "cache_max_age": "", "cache_name": "", "cache_path_cache": "", "cache_path_index": "", "config": "", "configRegions": "", "configRegions_exclude": "", "credentials": "", "destination_format": "", "destination_format_tags": "", "destination_variable": "", "ec2_default_ini_path": "", "ec2_ini_path": "", "ec2_instance_filters": "", "ec2_instance_states": "", "ec2_valid_instance_states": "", "elasticache_enabled": "", "eucalyptus": "", "eucalyptus_host": "", "expand_csv_tags": "", "filter_key": "", "filter_value": "", "filters": "", "group_by_options": "", "hostname_variable": "", "include_rds_clusters": "", "instance_filter": "", "instance_state": "", "nested_groups": "", "pattern_exclude": "", "pattern_include": "", "rds_enabled": "", "regions": "", "replace_dash_in_groups": "", "route53_enabled": "", "route53_excluded_zones": "", "vpc_destination_variable": ""}, "variables_p": {"all_elasticache_clusters": [["Dict[str, str]", 0.2563862529711425], ["List[str]", 0.16586221069358703], ["Set[str]", 0.10664796877088156], ["Dict[str, Any]", 0.10322118203851346], ["Dict[str, dict]", 0.10028306972450339], ["frozenset[str]", 0.09888318923599942], ["Dict[str, Dict[str, str]]", 0.08689510409606395], ["dict", 0.08182102246930881]], "all_elasticache_nodes": [["dict", 0.545666766233679], ["Dict[str, Any]", 0.33889344777964225], ["Pattern[str]", 0.11543978598667883]], "all_elasticache_replication_groups": [["str", 0.21087365207013103], ["Dict[str, dict]", 0.12555722285684484], ["List[List[float]]", 0.10575429420334174], ["Union[None, MutableMapping[str, Any], MutableSequence[Any], bool, float, int, str]", 0.08944820881916787]], "all_instances": [["Tuple[Literal]", 0.40325227122692997], ["Dict[str, str]", 0.1370204651261099], ["Dict[str, Any]", 0.09595868889620983], ["Tuple[str, str, str, str]", 0.09264661411883392], ["Set[str]", 0.09124843694939597], ["Tuple[str, str, str]", 0.09027334975945603]], "all_rds_instances": [["List[str]", 0.4704041964963394], ["list", 0.19683520023857473], ["KeysView[str]", 0.08555515961965743], ["Dict[str, List[str]]", 0.08133497107015694], ["bool", 0.08088402081903558]], "aws_access_key_id": [["str", 0.8163851867369495], ["List[str]", 0.09271382743641633]], "aws_profile": [["dict", 0.4844254293379704], ["str", 0.3205644980124803], ["List[str]", 0.10664672787407221], ["Dict[int, int]", 0.0883633447754771]], "aws_secret_access_key": [["str", 0.9999999999999999]], "aws_security_token": [["Dict[str, str]", 0.18782041987522663], ["Set[str]", 0.11640272167695677], ["Dict[str, Set[str]]", 0.10439769482009502], ["dict", 0.09861335266959474], ["str", 0.09369602360097531], ["Dict[Any, str]", 0.08977598416754361]], "boto_profile": [["Dict[str, Dict[str, Any]]", 0.11342540246909269], ["Tuple[str, str]", 0.1049824514912444], ["List[str]", 0.10089754896895628], ["int", 0.09141728989139931], ["Dict[str, str]", 0.0841473524517639]], "cache_dir": [["str", 1.0000000000000002]], "cache_max_age": [["classmethod", 0.4867564127831885], ["bool", 0.20274572908303556]], "cache_name": [["str", 0.9069130247960804], ["Set[str]", 0.09308697520391958]], "cache_path_cache": [["str", 0.16535773703293793]], "cache_path_index": [["str", 0.16535773703293793]], "config": [["configparser.ConfigParser", 0.49980984131575756]], "configRegions": [["Dict[str, Union[Any, Any]]", 0.3721250532859378], ["Dict[str, Union[Any, Any, Any]]", 0.1979637780371962], ["Type[Dict[str, Any]]", 0.11840049074060106], ["Dict[str, Any]", 0.1151183226284755], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0989818890185981]], "configRegions_exclude": [["Dict[str, Any]", 0.44527170707820934], ["str", 0.17946159794695993], ["dict", 0.09940474657586855]], "credentials": [["str", 0.5971028094620474], ["List[str]", 0.20270694204411366], ["TextIO", 0.09679630653200767]], "destination_format": [["str", 0.4984336842536033], ["dict", 0.09716561491923864], ["Dict[str, Any]", 0.08808224865388979], ["Dict[str, str]", 0.08394150702077822]], "destination_format_tags": [["Dict[str, str]", 0.36009894528660824], ["Dict[str, Any]", 0.19936548499802897], ["dict", 0.1460336053089431], ["Dict[Any, str]", 0.10199997113599991], ["Set[str]", 0.09567618789675102]], "destination_variable": [["str", 0.3394709278522027], ["Dict[str, int]", 0.18071087291087073], ["Dict[Any, str]", 0.0983882872458715], ["Dict[str, Any]", 0.09633560361682707], ["Dict[str, Union[dict, Any]]", 0.09577792884823587], ["set", 0.0942545060571285]], "ec2_default_ini_path": [["str", 0.7830950608059902], ["set", 0.11707361483332676], ["dict", 0.099831324360683]], "ec2_ini_path": [["str", 0.6602056109086027], ["Dict[str, Type[Any]]", 0.07393502027401491], ["List[str]", 0.07095163840889918]], "ec2_instance_filters": [["list", 0.17925095199909163], ["tuple", 0.11725974205877734], ["DefaultDict[Any, dict]", 0.1038122189210032], ["Dict[str, Union[Any, int]]", 0.09031783142546727], ["Dict[str, bool]", 0.08915881749319801], ["Dict[str, Tuple[int, str]]", 0.08486747582821567]], "ec2_instance_states": [["list", 0.2927657924374756], ["int", 0.20228384779082345]], "ec2_valid_instance_states": [["int", 0.9039737859862405], ["List[Tuple[str, Any]]", 0.09602621401375976]], "elasticache_enabled": [["str", 0.3599231929262882], ["Dict[str, Union[Any, Any]]", 0.19806952522805668], ["bytes", 0.09390863958432677], ["Dict[str, Tuple[str, ...]]", 0.08911556768311595], ["dict", 0.08758017992682933], ["Dict[str, str]", 0.08443617374652683]], "eucalyptus": [["bool", 0.14183495713630237], ["str", 0.10963697845183439], ["List[str]", 0.10371984121085244], ["Tuple[Any, Any]", 0.09797867381794284], ["bytes", 0.09595608939176022], ["int", 0.09047484136782197], ["Dict[str, Tuple[int, str]]", 0.08436653449514994]], "eucalyptus_host": [["List[str]", 0.5633619939505505], ["list", 0.35256316071012656], ["Dict[str, Union[Any, Any, Any]]", 0.08407484533932276]], "expand_csv_tags": [["dict", 0.3029941389430959], ["Optional[str]", 0.11229699014231881], ["Final", 0.09748296525487331], ["Set[str]", 0.09464756606114566], ["bool", 0.09304263443425531]], "filter_key": [["list", 0.2815383111702866], ["str", 0.22649604966137576], ["set", 0.10647446856228035], ["int", 0.09730710176338943], ["List[str]", 0.08748158977054164], ["Set[str]", 0.08308627183052887]], "filter_value": [["list", 0.6157227976081455], ["int", 0.2903800672132284], ["Dict[str, Any]", 0.09389713517862601]], "filters": [["str", 0.8906369189903645], ["Dict[str, str]", 0.10936308100963549]], "group_by_options": [["int", 0.2], ["Dict[str, Union[bool, str]]", 0.2], ["Tuple[Tuple[str, str], Tuple[str, str], Tuple[str, str], Tuple[str, str]]", 0.1], ["Dict[str, int]", 0.1], ["Dict[str, None]", 0.1], ["Dict[str, Union[int, str]]", 0.1], ["str", 0.1]], "hostname_variable": [["Dict[str, str]", 0.4938606742516437], ["Dict[str, Union[Any, Any]]", 0.10972176532781833], ["Dict[bool, Any]", 0.10236058738318483], ["Dict[str, Any]", 0.10120718600507234], ["Dict[str, bool]", 0.09723799967009071], ["Dict[Any, str]", 0.09561178736219017]], "include_rds_clusters": [["dict", 0.20152979652506897]], "instance_filter": [["Type[Dict[str, Any]]", 0.10216750237103113], ["set", 0.10111336752514122], ["Optional[Dict[str, Any]]", 0.09086166544668162]], "instance_state": [["list", 0.23493715900300938], ["List[int]", 0.16328294763627582], ["int", 0.1366282490855291], ["Tuple[Any, int]", 0.07891057691209691]], "nested_groups": [], "pattern_exclude": [["int", 0.31351320176627906], ["str", 0.22260043527973963], ["Dict[str, Dict[str, Any]]", 0.11432249929970337], ["bool", 0.09348489268376069], ["Type[str]", 0.07516588649810137]], "pattern_include": [["int", 0.31351320176627906], ["str", 0.22260043527973963], ["Dict[str, Dict[str, Any]]", 0.11432249929970337], ["bool", 0.09348489268376069], ["Type[str]", 0.07516588649810137]], "rds_enabled": [["Dict[str, Any]", 0.21809205314257407], ["Dict[str, Union[Any, Any, Any]]", 0.19340686667964838], ["Dict[str, str]", 0.1863727646856921], ["dict", 0.10290051837196676], ["List[str]", 0.09912361662488742], ["set", 0.09340125195192125]], "regions": [["int", 0.28273635995248625], ["str", 0.20522703465021697], ["bool", 0.1330099312865006], ["float", 0.09993298632376123], ["list", 0.09870625263941146], ["dict", 0.08902773444315819]], "replace_dash_in_groups": [["int", 0.7131600663856232], ["Dict[str, Dict[str, Any]]", 0.10669293361183674], ["str", 0.10331199721266811], ["bool", 0.07683500278987186]], "route53_enabled": [["str", 0.4042009480891486], ["int", 0.0916126244301249], ["bool", 0.09061332221836033]], "route53_excluded_zones": [["Dict[str, Union[None, bool, str]]", 0.1369220415036999], ["Dict[str, Union[dict, Any, Any]]", 0.1369220415036999], ["Dict[str, int]", 0.10826832263083877], ["Dict[Any, str]", 0.09954550952580062], ["dict", 0.09562123921460458], ["float", 0.09181650569132081], ["str", 0.08676366759858914], ["Dict[int, str]", 0.08515671421645549], ["Dict[str, str]", 0.07965539273621274]], "vpc_destination_variable": [["Dict[str, str]", 0.11818874058951573], ["Pattern[str]", 0.11795073007861474], ["dict", 0.09766842519834287], ["Dict[str, int]", 0.09355367835786038], ["bool", 0.08898743190295319]]}}, {"docstring": {"func": "Command line argument processing ", "long_descr": null, "ret": null}, "fn_lc": [[465, 4], [477, 39]], "fn_var_ln": {"args": [[477, 8], [477, 17]], "parser": [[468, 8], [468, 14]]}, "fn_var_occur": {"args": [["self", "args", "parser", "parse_args"]], "parser": [["parser", "argparse", "ArgumentParser", "description"], ["parser", "add_argument", "action", "default", "True", "help"], ["parser", "add_argument", "action", "help"], ["parser", "add_argument", "action", "default", "False", "help"], ["parser", "add_argument", "action", "dest", "help"], ["self", "args", "parser", "parse_args"]]}, "name": "parse_cli_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "args", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.parse_cli_args", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "parser": ""}, "variables_p": {"args": [["List[str]", 0.5248807964843968], ["argparse.Namespace", 0.321139793955019], ["List[Union[int, str]]", 0.07698970478029216], ["list", 0.07698970478029216]], "parser": [["argparse.ArgumentParser", 1.0]]}}, {"docstring": {"func": "Do API calls to each region, and save data in cache files ", "long_descr": null, "ret": null}, "fn_lc": [[480, 4], [497, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "do_api_calls_update_cache", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "route53_enabled"], ["self", "get_route53_records"], ["self", "regions"], ["self", "get_instances_by_region", "region"], ["self", "rds_enabled"], ["self", "get_rds_instances_by_region", "region"], ["self", "elasticache_enabled"], ["self", "get_elasticache_clusters_by_region", "region"], ["self", "get_elasticache_replication_groups_by_region", "region"], ["self", "include_rds_clusters"], ["self", "include_rds_clusters_by_region", "region"], ["self", "write_to_cache", "self", "inventory", "self", "cache_path_cache"], ["self", "write_to_cache", "self", "index", "self", "cache_path_index"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.do_api_calls_update_cache", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "create connection to api server", "long_descr": null, "ret": null}, "fn_lc": [[499, 4], [506, 19]], "fn_var_ln": {"APIVersion": [[503, 12], [503, 27]], "conn": [[505, 12], [505, 16]]}, "fn_var_occur": {"APIVersion": [["conn", "APIVersion"]], "conn": [["conn", "boto", "connect_euca", "host", "self", "eucalyptus_host", "self", "credentials"], ["conn", "APIVersion"], ["conn", "self", "connect_to_aws", "ec2", "region"]]}, "name": "connect", "params": {"region": "", "self": ""}, "params_descr": {"region": "", "self": ""}, "params_occur": {"region": [["conn", "self", "connect_to_aws", "ec2", "region"]], "self": [["self", "eucalyptus"], ["conn", "boto", "connect_euca", "host", "self", "eucalyptus_host", "self", "credentials"], ["conn", "self", "connect_to_aws", "ec2", "region"]]}, "params_p": {"args": [], "kwargs": [], "region": [["bool", 0.9999999998402755], ["str", 4.302530003004415e-11], ["int", 2.3828247762609607e-11]], "self": []}, "q_name": "Ec2Inventory.connect", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"APIVersion": "", "conn": ""}, "variables_p": {"APIVersion": [["Tuple[int]", 0.49999999999999994], ["int", 0.3], ["str", 0.09999999999999999]], "conn": [["int", 0.37993816951836656], ["str", 0.1710588972346757], ["bool", 0.08435075852293371]]}}, {"docstring": {"func": "monkey patch for boto issue boto/boto#2100 ", "long_descr": null, "ret": null}, "fn_lc": [[508, 4], [513, 27]], "fn_var_ln": {"profile": [[510, 8], [510, 15]]}, "fn_var_occur": {"profile": [["profile", "self", "boto_profile"], ["boto", "config", "has_option", "profile"], ["connect_args", "boto", "config", "get", "profile"]]}, "name": "boto_fix_security_token_in_profile", "params": {"connect_args": "", "self": ""}, "params_descr": {"connect_args": "", "self": ""}, "params_occur": {"connect_args": [["connect_args", "boto", "config", "get", "profile"]], "self": [["profile", "self", "boto_profile"]]}, "params_p": {"args": [], "connect_args": [["str", 0.3819472137199027], ["Exception", 0.0990208161736985]], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.boto_fix_security_token_in_profile", "ret_exprs": ["return connect_args"], "ret_type": "", "ret_type_p": [["bool", 0.10387547717443087], ["str", 0.08769436340444549]], "variables": {"profile": ""}, "variables_p": {"profile": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[515, 4], [527, 19]], "fn_var_ln": {"conn": [[523, 8], [523, 12]], "connect_args": [[516, 8], [516, 20]]}, "fn_var_occur": {"conn": [["conn", "module", "connect_to_region", "region", "connect_args"], ["conn", "None"]], "connect_args": [["connect_args", "self", "credentials"], ["connect_args", "self", "boto_profile"], ["self", "boto_fix_security_token_in_profile", "connect_args"], ["conn", "module", "connect_to_region", "region", "connect_args"]]}, "name": "connect_to_aws", "params": {"module": "", "region": "", "self": ""}, "params_descr": {"module": "", "region": "", "self": ""}, "params_occur": {"module": [["conn", "module", "connect_to_region", "region", "connect_args"]], "region": [["conn", "module", "connect_to_region", "region", "connect_args"], ["self", "fail_with_error", "region"]], "self": [["connect_args", "self", "credentials"], ["self", "boto_profile"], ["connect_args", "self", "boto_profile"], ["self", "boto_fix_security_token_in_profile", "connect_args"], ["self", "fail_with_error", "region"]]}, "params_p": {"args": [], "kwargs": [], "module": [["int", 0.26336613570904605], ["bool", 0.2319277256000254], ["float", 0.09506239776752076]], "region": [["str", 0.29853457594477717], ["int", 0.18771024452659252], ["float", 0.11418084964082942]], "self": []}, "q_name": "Ec2Inventory.connect_to_aws", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.39246775043608534], ["int", 0.30376612478195736], ["Generator", 0.08870162565412798]], "variables": {"conn": "", "connect_args": ""}, "variables_p": {"conn": [["List[float]", 0.20107135658244574], ["list", 0.19703354207286508], ["List[str]", 0.17496472380254974], ["List[List[float]]", 0.08895017093871829], ["dict", 0.08447703276436444]], "connect_args": [["int", 0.7774736197073644], ["list", 0.22252638029263552]]}}, {"docstring": {"func": "Makes an AWS EC2 API call to the list of instances in a particular", "long_descr": "region", "ret": null}, "fn_lc": [[529, 4], [569, 64]], "fn_var_ln": {"backend": [[567, 16], [567, 23]], "conn": [[534, 12], [534, 16]], "error": [[568, 16], [568, 21]], "instance_ids": [[545, 12], [545, 24]], "max_filter_value": [[549, 12], [549, 28]], "reservations": [[540, 16], [540, 28]], "tags": [[560, 20], [560, 33]], "tags_by_instance_id": [[554, 12], [554, 31]]}, "fn_var_occur": {"backend": [["backend", "self", "eucalyptus"], ["error", "backend", "e", "message"]], "conn": [["conn", "self", "connect", "region"], ["reservations", "extend", "conn", "get_all_instances", "filters", "filter_key", "filter_values"], ["reservations", "conn", "get_all_instances"], ["tags", "extend", "conn", "get_all_tags", "filters", "instance_ids", "i", "i", "max_filter_value"]], "error": [["error", "self", "get_auth_error_message"], ["error", "backend", "e", "message"], ["self", "fail_with_error", "error"]], "instance_ids": [["instance_ids", "extend", "instance", "id", "instance", "reservation", "instances"], ["range", "len", "instance_ids", "max_filter_value"], ["tags", "extend", "conn", "get_all_tags", "filters", "instance_ids", "i", "i", "max_filter_value"]], "max_filter_value": [["range", "len", "instance_ids", "max_filter_value"], ["tags", "extend", "conn", "get_all_tags", "filters", "instance_ids", "i", "i", "max_filter_value"]], "reservations": [["reservations", "extend", "conn", "get_all_instances", "filters", "filter_key", "filter_values"], ["reservations", "conn", "get_all_instances"]], "tags": [["tags", "extend", "conn", "get_all_tags", "filters", "instance_ids", "i", "i", "max_filter_value"], ["instance", "tags", "tags_by_instance_id", "instance", "id"]], "tags_by_instance_id": [["tags_by_instance_id", "defaultdict", "dict"], ["tags_by_instance_id", "tag", "res_id", "tag", "name", "tag", "value"], ["instance", "tags", "tags_by_instance_id", "instance", "id"]]}, "name": "get_instances_by_region", "params": {"region": "", "self": ""}, "params_descr": {"region": "", "self": ""}, "params_occur": {"region": [["conn", "self", "connect", "region"], ["self", "add_instance", "instance", "region"]], "self": [["conn", "self", "connect", "region"], ["self", "ec2_instance_filters"], ["self", "ec2_instance_filters", "items"], ["self", "add_instance", "instance", "region"], ["error", "self", "get_auth_error_message"], ["backend", "self", "eucalyptus"], ["self", "fail_with_error", "error"]]}, "params_p": {"args": [], "kwargs": [], "region": [["List[str]", 0.0906195402255211]], "self": []}, "q_name": "Ec2Inventory.get_instances_by_region", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "conn": "", "error": "", "instance_ids": "", "max_filter_value": "", "reservations": "", "tags": "", "tags_by_instance_id": ""}, "variables_p": {"backend": [["float", 0.10346086504768706], ["int", 0.09738828337137381], ["Dict[str, dict]", 0.09214872676187087]], "conn": [["int", 0.10307972093205335], ["dict", 0.10247173035808169], ["Set[str]", 0.09329389717021039]], "error": [["str", 0.7713061730363928], ["int", 0.12144872551544922]], "instance_ids": [["int", 0.43944881560272003], ["List[int]", 0.11749685124717991], ["Dict[str,int]", 0.0794447401617717]], "max_filter_value": [["int", 0.37736233522882473], ["str", 0.21025308035454354], ["Type[List[int]]", 0.10730923086655443], ["list", 0.10103808002797406], ["Tuple[int, int, Any, Any]", 0.10082157747981242]], "reservations": [["list", 0.174838392622221], ["List[List[Any]]", 0.15420236580279614], ["str", 0.108922549509305], ["Optional[str]", 0.09165442081581009], ["dict", 0.08446184563920874]], "tags": [["str", 0.8381434659906718], ["Callable[[], str]", 0.08108017539564881], ["int", 0.08077635861367946]], "tags_by_instance_id": [["str", 0.6482549195688531], ["Dict[str, str]", 0.10232454562051822], ["int", 0.09319361466422169], ["Optional[str]", 0.07930195180634593], ["List[Tuple[str, str]]", 0.07692496834006102]]}}, {"docstring": {"func": "Makes an AWS API call to the list of RDS instances in a particular", "long_descr": "region", "ret": null}, "fn_lc": [[571, 4], [593, 64]], "fn_var_ln": {"conn": [[576, 12], [576, 16]], "error": [[592, 16], [592, 21]], "instances": [[580, 20], [580, 29]], "marker": [[581, 20], [581, 26]]}, "fn_var_occur": {"conn": [["conn", "self", "connect_to_aws", "rds", "region"], ["instances", "conn", "get_all_dbinstances", "marker", "marker"]], "error": [["error", "e", "reason"], ["error", "self", "get_auth_error_message"], ["error", "e", "message"], ["self", "fail_with_error", "error"]], "instances": [["instances", "conn", "get_all_dbinstances", "marker", "marker"], ["marker", "instances", "marker"]], "marker": [["marker", "None"], ["instances", "conn", "get_all_dbinstances", "marker", "marker"], ["marker", "instances", "marker"]]}, "name": "get_rds_instances_by_region", "params": {"region": "", "self": ""}, "params_descr": {"region": "", "self": ""}, "params_occur": {"region": [["conn", "self", "connect_to_aws", "rds", "region"], ["self", "add_rds_instance", "instance", "region"]], "self": [["conn", "self", "connect_to_aws", "rds", "region"], ["self", "add_rds_instance", "instance", "region"], ["error", "self", "get_auth_error_message"], ["self", "fail_with_error", "error"]]}, "params_p": {"args": [], "kwargs": [], "region": [["str", 0.30305367509787784], ["bool", 0.11545365375921676], ["int", 0.09403949541688898]], "self": []}, "q_name": "Ec2Inventory.get_rds_instances_by_region", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "error": "", "instances": "", "marker": ""}, "variables_p": {"conn": [["list", 0.2095072881767019], ["List[str]", 0.14609530335593524], ["str", 0.12295331398934213]], "error": [["str", 0.26116471850354794], ["int", 0.04560893490002352]], "instances": [["Dict[str, int]", 0.9999999998054235], ["list", 2.668682299364027e-11], ["Tuple[Literal, Literal, Literal]", 2.5973179132715253e-11]], "marker": [["Optional[str]", 0.28290911222706155], ["str", 0.21969192613925356], ["List[None]", 0.09542351632175997], ["frozenset[str]", 0.08728564019002692], ["ImportError", 0.08728564019002692]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[595, 4], [652, 46]], "fn_var_ln": {"account_id": [[608, 8], [608, 18]], "c_dict": [[609, 8], [609, 14]], "client": [[600, 8], [600, 14]], "clusters": [[602, 16], [602, 24]], "marker": [[606, 12], [606, 18]], "matches_filter": [[634, 24], [634, 38]], "resp": [[604, 12], [604, 16]], "tag_name": [[632, 24], [632, 32]], "tags": [[625, 16], [625, 20]]}, "fn_var_occur": {"account_id": [["account_id", "boto", "connect_iam", "get_user", "arn", "split"], ["tags", "client", "list_tags_for_resource", "ResourceName", "region", "account_id", "c"]], "c_dict": [["c_dict", "c", "c"], ["self", "inventory", "c_dict"]], "client": [["client", "ec2_utils", "boto3_inventory_conn", "region", "self", "credentials"], ["resp", "client", "describe_db_clusters", "Marker", "marker"], ["tags", "client", "list_tags_for_resource", "ResourceName", "region", "account_id", "c"]], "clusters": [["marker", "clusters"], ["clusters", "extend", "resp"]], "marker": [["marker", "clusters"], ["marker", "None"], ["resp", "client", "describe_db_clusters", "Marker", "marker"], ["marker", "resp", "get", "None"]], "matches_filter": [["matches_filter", "True"], ["matches_filter", "False"], ["matches_filter", "any", "d", "tag_name", "d", "filter_values", "d", "c"]], "resp": [["resp", "client", "describe_db_clusters", "Marker", "marker"], ["clusters", "extend", "resp"], ["marker", "resp", "get", "None"]], "tag_name": [["tag_name", "filter_key", "split"], ["matches_filter", "any", "d", "tag_name", "d", "filter_values", "d", "c"]], "tags": [["tags", "client", "list_tags_for_resource", "ResourceName", "region", "account_id", "c"], ["c", "tags"]]}, "name": "include_rds_clusters_by_region", "params": {"region": "", "self": ""}, "params_descr": {"region": "", "self": ""}, "params_occur": {"region": [["client", "ec2_utils", "boto3_inventory_conn", "region", "self", "credentials"], ["tags", "client", "list_tags_for_resource", "ResourceName", "region", "account_id", "c"]], "self": [["self", "fail_with_error"], ["client", "ec2_utils", "boto3_inventory_conn", "region", "self", "credentials"], ["self", "ec2_instance_filters"], ["self", "ec2_instance_filters"], ["self", "ec2_instance_filters", "items"], ["self", "inventory", "c_dict"]]}, "params_p": {"args": [], "kwargs": [], "region": [["bytearray", 0.09004747285293635]], "self": []}, "q_name": "Ec2Inventory.include_rds_clusters_by_region", "ret_exprs": [], "ret_type": "", "variables": {"account_id": "", "c_dict": "", "client": "", "clusters": "", "marker": "", "matches_filter": "", "resp": "", "tag_name": "", "tags": ""}, "variables_p": {"account_id": [["str", 0.9999999999999999]], "c_dict": [["int", 0.39994662394501346], ["Dict[str, Any]", 0.19005332210810233], ["DefaultDict[Any, int]", 0.12536259727057106], ["bytes", 0.10175898759909577], ["float", 0.09486288657493801]], "client": [], "clusters": [["list", 0.9999999999969941], ["str", 3.0060757045754886e-12]], "marker": [["str", 0.22466344665080312], ["Dict[str, str]", 0.09613644485472934], ["Optional[List[str]]", 0.09353561274798919]], "matches_filter": [["Pattern[str]", 0.26358149320283897], ["List[str]", 0.23277533323801608], ["List[Tuple[Any, Any]]", 0.20238189949989477], ["Type[Optional[str]]", 0.10150021704401303], ["Dict[str, Union[None, Any, Any, str]]", 0.09439827118663198]], "resp": [["dict", 0.178352203011087], ["Generator[Any, None, None]", 0.13361502205000705], ["List[Dict[str, str]]", 0.0959006994609853], ["str", 0.08262328911337469]], "tag_name": [["str", 0.6393175046590688], ["Dict[int, str]", 0.09680573356150976], ["Tuple[Literal, Literal]", 0.07570058217530228]], "tags": [["str", 0.3856349560880991], ["dict", 0.08991858776829281], ["Optional[str]", 0.08748746992607861], ["list", 0.08416034661145584]]}}, {"docstring": {"func": "Makes an AWS API call to the list of ElastiCache clusters (with", "long_descr": "nodes' info) in a particular region.", "ret": null}, "fn_lc": [[654, 4], [688, 57]], "fn_var_ln": {"clusters": [[681, 12], [681, 20]], "conn": [[662, 12], [662, 16]], "error": [[684, 12], [684, 17]], "response": [[666, 16], [666, 24]]}, "fn_var_occur": {"clusters": [["clusters", "response"]], "conn": [["conn", "self", "connect_to_aws", "elasticache", "region"], ["response", "conn", "describe_cache_clusters", "None", "None", "None", "True"]], "error": [["error", "e", "reason"], ["error", "self", "get_auth_error_message"], ["error", "e", "message"], ["self", "fail_with_error", "error"], ["self", "fail_with_error", "error"]], "response": [["response", "conn", "describe_cache_clusters", "None", "None", "None", "True"], ["clusters", "response"]]}, "name": "get_elasticache_clusters_by_region", "params": {"region": "", "self": ""}, "params_descr": {"region": "", "self": ""}, "params_occur": {"region": [["conn", "self", "connect_to_aws", "elasticache", "region"], ["self", "add_elasticache_cluster", "cluster", "region"]], "self": [["conn", "self", "connect_to_aws", "elasticache", "region"], ["error", "self", "get_auth_error_message"], ["self", "fail_with_error", "error"], ["self", "fail_with_error", "error"], ["self", "add_elasticache_cluster", "cluster", "region"]]}, "params_p": {"args": [], "kwargs": [], "region": [["str", 0.19499677438230262], ["int", 0.09583238348731485]], "self": []}, "q_name": "Ec2Inventory.get_elasticache_clusters_by_region", "ret_exprs": [], "ret_type": "", "variables": {"clusters": "", "conn": "", "error": "", "response": ""}, "variables_p": {"clusters": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "conn": [["Dict[str, str]", 0.10700255630435351], ["int", 0.09931736239664427]], "error": [["str", 0.4790881749979837], ["int", 0.0701036902186647]], "response": [["Dict[str, str]", 0.27845056133682233], ["str", 0.20317836809367562], ["Type[Dict[str, Any]]", 0.11200088197898157], ["tuple", 0.10754133667407374]]}}, {"docstring": {"func": "Makes an AWS API call to the list of ElastiCache replication groups", "long_descr": "in a particular region.", "ret": null}, "fn_lc": [[690, 4], [722, 77]], "fn_var_ln": {"conn": [[698, 12], [698, 16]], "error": [[718, 12], [718, 17]], "replication_groups": [[715, 12], [715, 30]], "response": [[700, 16], [700, 24]]}, "fn_var_occur": {"conn": [["conn", "self", "connect_to_aws", "elasticache", "region"], ["response", "conn", "describe_replication_groups"]], "error": [["error", "e", "reason"], ["error", "self", "get_auth_error_message"], ["error", "e", "message"], ["self", "fail_with_error", "error"], ["self", "fail_with_error", "error"]], "replication_groups": [["replication_groups", "response"]], "response": [["response", "conn", "describe_replication_groups"], ["replication_groups", "response"]]}, "name": "get_elasticache_replication_groups_by_region", "params": {"region": "", "self": ""}, "params_descr": {"region": "", "self": ""}, "params_occur": {"region": [["conn", "self", "connect_to_aws", "elasticache", "region"], ["self", "add_elasticache_replication_group", "replication_group", "region"]], "self": [["conn", "self", "connect_to_aws", "elasticache", "region"], ["error", "self", "get_auth_error_message"], ["self", "fail_with_error", "error"], ["self", "fail_with_error", "error"], ["self", "add_elasticache_replication_group", "replication_group", "region"]]}, "params_p": {"args": [], "kwargs": [], "region": [["str", 0.19499677438230262], ["int", 0.09583238348731485]], "self": []}, "q_name": "Ec2Inventory.get_elasticache_replication_groups_by_region", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "error": "", "replication_groups": "", "response": ""}, "variables_p": {"conn": [["str", 0.46175205128934504], ["list", 0.2593841451556466], ["Dict[str, str]", 0.0953340857110234], ["int", 0.09452114621745615]], "error": [["str", 0.4790881749979837], ["int", 0.0701036902186647]], "replication_groups": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "response": [["str", 0.3333333333313284], ["dict", 0.2222222222208856], ["Dict[str, Union[dict, Any, Any]]", 0.2222222222208856], ["Dict[str, Union[Any, Any, Any]]", 0.2222222222208856], ["List[str]", 6.014744165478809e-12]]}}, {"docstring": {"func": "create an informative error message if there is an issue authenticating", "long_descr": null, "ret": null}, "fn_lc": [[724, 4], [739, 32]], "fn_var_ln": {"boto_config_found": [[733, 8], [733, 25]], "boto_paths": [[732, 8], [732, 18]], "errors": [[726, 8], [726, 14]]}, "fn_var_occur": {"boto_config_found": [["boto_config_found", "list", "p", "p", "boto_paths", "os", "path", "isfile", "os", "path", "expanduser", "p"], ["len", "boto_config_found"], ["errors", "append", "join", "boto_config_found"]], "boto_paths": [["boto_config_found", "list", "p", "p", "boto_paths", "os", "path", "isfile", "os", "path", "expanduser", "p"], ["errors", "append", "join", "boto_paths"]], "errors": [["errors", "append"], ["errors", "append"], ["errors", "append", "join", "boto_config_found"], ["errors", "append", "join", "boto_paths"], ["join", "errors"]]}, "name": "get_auth_error_message", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.get_auth_error_message", "ret_exprs": ["return 'n'.join(errors)"], "ret_type": "", "ret_type_p": [["str", 0.7036005239962153], ["List[str]", 0.1033993460794931]], "variables": {"boto_config_found": "", "boto_paths": "", "errors": ""}, "variables_p": {"boto_config_found": [["List[str]", 0.4582697629844466], ["str", 0.18139413855511807], ["Dict[str, str]", 0.17635257929754025], ["int", 0.09019870535829301]], "boto_paths": [["str", 0.40756539538204495], ["List[str]", 0.38506445767636577], ["list", 0.20737014694158934]], "errors": [["list", 0.8288338070293377], ["set", 0.08792563725884499], ["List[str]", 0.0832405557118175]]}}, {"docstring": {"func": "log an error to std err for ansible-playbook to consume and exit", "long_descr": null, "ret": null}, "fn_lc": [[741, 4], [747, 19]], "fn_var_ln": {"err_msg": [[744, 12], [744, 19]]}, "fn_var_occur": {"err_msg": [["err_msg", "format", "err_msg", "err_msg", "err_operation", "err_operation"], ["sys", "stderr", "write", "err_msg"]]}, "name": "fail_with_error", "params": {"err_msg": "", "err_operation": "", "self": ""}, "params_descr": {"err_msg": "", "err_operation": "", "self": ""}, "params_occur": {"err_msg": [["err_msg", "format", "err_msg", "err_msg", "err_operation", "err_operation"], ["sys", "stderr", "write", "err_msg"]], "err_operation": [["err_msg", "format", "err_msg", "err_msg", "err_operation", "err_operation"]], "self": []}, "params_p": {"args": [], "err_msg": [["str", 0.27775219169273185], ["float", 0.18192844524380591], ["int", 0.11733214921813973], ["Optional[str]", 0.1017993380458264]], "err_operation": [["str", 0.5570945390328322], ["Tuple['cirq.Qid']", 0.11529447997539054], ["float", 0.05600910215895456]], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.fail_with_error", "ret_exprs": [], "ret_type": "", "variables": {"err_msg": ""}, "variables_p": {"err_msg": [["str", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[749, 4], [755, 31]], "fn_var_ln": {"conn": [[750, 8], [750, 12]], "reservations": [[752, 8], [752, 20]]}, "fn_var_occur": {"conn": [["conn", "self", "connect", "region"], ["reservations", "conn", "get_all_instances", "instance_id"]], "reservations": [["reservations", "conn", "get_all_instances", "instance_id"]]}, "name": "get_instance", "params": {"instance_id": "", "region": "", "self": ""}, "params_descr": {"instance_id": "", "region": "", "self": ""}, "params_occur": {"instance_id": [["reservations", "conn", "get_all_instances", "instance_id"]], "region": [["conn", "self", "connect", "region"]], "self": [["conn", "self", "connect", "region"]]}, "params_p": {"args": [], "instance_id": [["str", 0.7277978518566335], ["Optional[int]", 0.08609421107240939], ["int", 0.08575271692760263]], "kwargs": [], "region": [["bytes", 0.3108701719373387], ["List[int]", 0.11867626065052533], ["str", 0.09467986092716943]], "self": []}, "q_name": "Ec2Inventory.get_instance", "ret_exprs": ["return instance"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"conn": "", "reservations": ""}, "variables_p": {"conn": [["str", 0.3054263506804717], ["dict", 0.09070724753342502], ["Dict[str, Any]", 0.08221080371129802]], "reservations": [["str", 0.7105077354581191], ["Dict[Any, str]", 0.09133138180962809], ["int", 0.09082496288048157]]}}, {"docstring": {"func": "Adds an instance to the inventory and index, as long as it is", "long_descr": "addressable", "ret": null}, "fn_lc": [[757, 4], [903, 80]], "fn_var_ln": {"ami_id": [[828, 12], [828, 18]], "dest": [[775, 16], [775, 20]], "hostname": [[793, 12], [793, 20]], "key": [[878, 24], [878, 27]], "key_name": [[842, 12], [842, 20]], "route53_names": [[887, 12], [887, 25]], "type_name": [[835, 12], [835, 21]], "values": [[872, 20], [872, 26]], "vpc_id_name": [[849, 12], [849, 23]]}, "fn_var_occur": {"ami_id": [["ami_id", "self", "to_safe", "instance", "image_id"], ["self", "push", "self", "inventory", "ami_id", "hostname"], ["self", "push_group", "self", "inventory", "ami_id"]], "dest": [["dest", "self", "destination_format", "format", "getattr", "instance", "get", "tag", "tag", "self", "destination_format_tags"], ["dest", "getattr", "instance", "self", "vpc_destination_variable", "None"], ["dest", "None"], ["dest", "getattr", "instance", "get", "self", "vpc_destination_variable", "None"], ["dest", "getattr", "instance", "self", "destination_variable", "None"], ["dest", "None"], ["dest", "getattr", "instance", "get", "self", "destination_variable", "None"], ["hostname", "dest"], ["self", "inventory", "hostname", "dest"]], "hostname": [["hostname", "None"], ["hostname", "instance", "tags", "get", "self", "hostname_variable", "None"], ["hostname", "getattr", "instance", "self", "hostname_variable"], ["hostname", "dest"], ["hostname", "self", "to_safe", "hostname", "lower"], ["self", "pattern_include", "self", "pattern_include", "match", "hostname"], ["self", "pattern_exclude", "self", "pattern_exclude", "match", "hostname"], ["self", "index", "hostname", "region", "instance", "id"], ["self", "inventory", "instance", "id", "hostname"], ["self", "push", "self", "inventory", "region", "hostname"], ["self", "push", "self", "inventory", "instance", "placement", "hostname"], ["self", "push", "self", "inventory", "ami_id", "hostname"], ["self", "push", "self", "inventory", "type_name", "hostname"], ["self", "push", "self", "inventory", "key_name", "hostname"], ["self", "push", "self", "inventory", "vpc_id_name", "hostname"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "push", "self", "inventory", "name", "hostname"], ["self", "push", "self", "inventory", "hostname"], ["self", "push", "self", "inventory", "hostname"], ["self", "inventory", "hostname", "self", "get_host_info_dict_from_instance", "instance"], ["self", "inventory", "hostname", "dest"]], "key": [["key", "self", "to_safe", "group", "name"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "push_group", "self", "inventory", "key"], ["key", "self", "to_safe", "k", "v"], ["key", "self", "to_safe", "k"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "push_group", "self", "inventory", "self", "to_safe", "k", "key"]], "key_name": [["self", "group_by_key_pair", "instance", "key_name"], ["key_name", "self", "to_safe", "instance", "key_name"], ["self", "push", "self", "inventory", "key_name", "hostname"], ["self", "push_group", "self", "inventory", "key_name"]], "route53_names": [["route53_names", "self", "get_instance_route53_names", "instance"]], "type_name": [["type_name", "self", "to_safe", "instance", "instance_type"], ["self", "push", "self", "inventory", "type_name", "hostname"], ["self", "push_group", "self", "inventory", "type_name"]], "values": [["values", "map", "x", "x", "strip", "v", "split"], ["values", "v"]], "vpc_id_name": [["vpc_id_name", "self", "to_safe", "instance", "vpc_id"], ["self", "push", "self", "inventory", "vpc_id_name", "hostname"], ["self", "push_group", "self", "inventory", "vpc_id_name"]]}, "name": "add_instance", "params": {"instance": "", "region": "", "self": ""}, "params_descr": {"instance": "", "region": "", "self": ""}, "params_occur": {"instance": [["instance", "state", "self", "ec2_instance_states"], ["dest", "self", "destination_format", "format", "getattr", "instance", "get", "tag", "tag", "self", "destination_format_tags"], ["instance", "subnet_id"], ["dest", "getattr", "instance", "self", "vpc_destination_variable", "None"], ["dest", "getattr", "instance", "get", "self", "vpc_destination_variable", "None"], ["dest", "getattr", "instance", "self", "destination_variable", "None"], ["dest", "getattr", "instance", "get", "self", "destination_variable", "None"], ["hostname", "instance", "tags", "get", "self", "hostname_variable", "None"], ["hostname", "getattr", "instance", "self", "hostname_variable"], ["self", "index", "hostname", "region", "instance", "id"], ["self", "inventory", "instance", "id", "hostname"], ["self", "push_group", "self", "inventory", "instance", "id"], ["self", "push", "self", "inventory", "instance", "placement", "hostname"], ["self", "push_group", "self", "inventory", "region", "instance", "placement"], ["self", "push_group", "self", "inventory", "instance", "placement"], ["ami_id", "self", "to_safe", "instance", "image_id"], ["type_name", "self", "to_safe", "instance", "instance_type"], ["self", "group_by_key_pair", "instance", "key_name"], ["key_name", "self", "to_safe", "instance", "key_name"], ["self", "group_by_vpc_id", "instance", "vpc_id"], ["vpc_id_name", "self", "to_safe", "instance", "vpc_id"], ["instance", "groups"], ["instance", "tags", "items"], ["route53_names", "self", "get_instance_route53_names", "instance"], ["self", "group_by_tag_none", "len", "instance", "tags"], ["self", "inventory", "hostname", "self", "get_host_info_dict_from_instance", "instance"]], "region": [["self", "index", "hostname", "region", "instance", "id"], ["self", "push", "self", "inventory", "region", "hostname"], ["self", "push_group", "self", "inventory", "region"], ["self", "push_group", "self", "inventory", "region", "instance", "placement"]], "self": [["instance", "state", "self", "ec2_instance_states"], ["self", "destination_format", "self", "destination_format_tags"], ["dest", "self", "destination_format", "format", "getattr", "instance", "get", "tag", "tag", "self", "destination_format_tags"], ["dest", "getattr", "instance", "self", "vpc_destination_variable", "None"], ["dest", "getattr", "instance", "get", "self", "vpc_destination_variable", "None"], ["dest", "getattr", "instance", "self", "destination_variable", "None"], ["dest", "getattr", "instance", "get", "self", "destination_variable", "None"], ["self", "hostname_variable"], ["self", "hostname_variable", "startswith"], ["hostname", "instance", "tags", "get", "self", "hostname_variable", "None"], ["hostname", "getattr", "instance", "self", "hostname_variable"], ["hostname", "self", "to_safe", "hostname", "lower"], ["self", "pattern_include", "self", "pattern_include", "match", "hostname"], ["self", "pattern_exclude", "self", "pattern_exclude", "match", "hostname"], ["self", "index", "hostname", "region", "instance", "id"], ["self", "group_by_instance_id"], ["self", "inventory", "instance", "id", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "instance", "id"], ["self", "group_by_region"], ["self", "push", "self", "inventory", "region", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "region"], ["self", "group_by_availability_zone"], ["self", "push", "self", "inventory", "instance", "placement", "hostname"], ["self", "nested_groups"], ["self", "group_by_region"], ["self", "push_group", "self", "inventory", "region", "instance", "placement"], ["self", "push_group", "self", "inventory", "instance", "placement"], ["self", "group_by_ami_id"], ["ami_id", "self", "to_safe", "instance", "image_id"], ["self", "push", "self", "inventory", "ami_id", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "ami_id"], ["self", "group_by_instance_type"], ["type_name", "self", "to_safe", "instance", "instance_type"], ["self", "push", "self", "inventory", "type_name", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "type_name"], ["self", "group_by_key_pair", "instance", "key_name"], ["key_name", "self", "to_safe", "instance", "key_name"], ["self", "push", "self", "inventory", "key_name", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "key_name"], ["self", "group_by_vpc_id", "instance", "vpc_id"], ["vpc_id_name", "self", "to_safe", "instance", "vpc_id"], ["self", "push", "self", "inventory", "vpc_id_name", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "vpc_id_name"], ["self", "group_by_security_group"], ["key", "self", "to_safe", "group", "name"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "key"], ["self", "fail_with_error", "join"], ["self", "group_by_tag_keys"], ["self", "expand_csv_tags", "v", "v"], ["key", "self", "to_safe", "k", "v"], ["key", "self", "to_safe", "k"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "self", "to_safe", "k"], ["self", "push_group", "self", "inventory", "self", "to_safe", "k", "key"], ["self", "route53_enabled", "self", "group_by_route53_names"], ["route53_names", "self", "get_instance_route53_names", "instance"], ["self", "push", "self", "inventory", "name", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "name"], ["self", "group_by_tag_none", "len", "instance", "tags"], ["self", "push", "self", "inventory", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory"], ["self", "push", "self", "inventory", "hostname"], ["self", "inventory", "hostname", "self", "get_host_info_dict_from_instance", "instance"], ["self", "inventory", "hostname", "dest"]]}, "params_p": {"args": [], "instance": [["dict", 0.13782521052879634], ["Dict[str, Any]", 0.11834359887267124]], "kwargs": [], "region": [["int", 0.07710444067587151], ["bool", 0.07710444067587151], ["str", 0.07221748149840047]], "self": []}, "q_name": "Ec2Inventory.add_instance", "ret_exprs": ["return", "return", "return", "return"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.09422122303997388]], "variables": {"ami_id": "", "dest": "", "hostname": "", "key": "", "key_name": "", "route53_names": "", "type_name": "", "values": "", "vpc_id_name": ""}, "variables_p": {"ami_id": [["list", 0.3925597465888101], ["int", 0.2074537040918768], ["Type[bytes]", 0.11728122642917646], ["str", 0.10364708702664598], ["tuple", 0.09182434507177045], ["bool", 0.08723389079172035]], "dest": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.43100916143599943], ["str", 0.20200190584686645], ["int", 0.09485777201801752], ["List[str]", 0.08678973464282566], ["Dict[str, List[str]]", 0.08678973464282566]], "hostname": [["Dict[Tuple[Any, Any], Any]", 0.14179032085067467], ["dict", 0.08133446335776973]], "key": [["str", 0.778744577239503], ["List[str]", 0.14138608845580775], ["int", 0.0798693343046893]], "key_name": [["str", 1.0]], "route53_names": [["str", 0.35182935977737806], ["List[str]", 0.22491931425879036], ["list", 0.13057974662613858], ["dict", 0.10127927738991568], ["Dict[Any, str]", 0.09996896990620205], ["Dict[str, str]", 0.09142333204157513]], "type_name": [["str", 0.8635327352426234], ["List[str]", 0.13646726475737642]], "values": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.8960471031791185], ["str", 0.10395289682088156]], "vpc_id_name": [["str", 1.0]]}}, {"docstring": {"func": "Adds an RDS instance to the inventory and index, as long as it is", "long_descr": "addressable", "ret": null}, "fn_lc": [[906, 4], [1002, 80]], "fn_var_ln": {"dest": [[915, 8], [915, 12]], "hostname": [[933, 8], [933, 16]], "key": [[976, 20], [976, 23]], "type_name": [[960, 12], [960, 21]], "vpc_id_name": [[967, 12], [967, 23]]}, "fn_var_occur": {"dest": [["dest", "instance", "endpoint"], ["hostname", "dest"], ["self", "inventory", "hostname", "dest"]], "hostname": [["hostname", "None"], ["hostname", "instance", "tags", "get", "self", "hostname_variable", "None"], ["hostname", "getattr", "instance", "self", "hostname_variable"], ["hostname", "dest"], ["hostname", "self", "to_safe", "hostname", "lower"], ["self", "index", "hostname", "region", "instance", "id"], ["self", "inventory", "instance", "id", "hostname"], ["self", "push", "self", "inventory", "region", "hostname"], ["self", "push", "self", "inventory", "instance", "availability_zone", "hostname"], ["self", "push", "self", "inventory", "type_name", "hostname"], ["self", "push", "self", "inventory", "vpc_id_name", "hostname"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "push", "self", "inventory", "self", "to_safe", "instance", "engine", "hostname"], ["self", "push", "self", "inventory", "self", "to_safe", "instance", "parameter_group", "name", "hostname"], ["self", "push", "self", "inventory", "hostname"], ["self", "inventory", "hostname", "self", "get_host_info_dict_from_instance", "instance"], ["self", "inventory", "hostname", "dest"]], "key": [["key", "self", "to_safe", "instance", "security_group", "name"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "push_group", "self", "inventory", "key"]], "type_name": [["type_name", "self", "to_safe", "instance", "instance_class"], ["self", "push", "self", "inventory", "type_name", "hostname"], ["self", "push_group", "self", "inventory", "type_name"]], "vpc_id_name": [["vpc_id_name", "self", "to_safe", "instance", "subnet_group", "vpc_id"], ["self", "push", "self", "inventory", "vpc_id_name", "hostname"], ["self", "push_group", "self", "inventory", "vpc_id_name"]]}, "name": "add_rds_instance", "params": {"instance": "", "region": "", "self": ""}, "params_descr": {"instance": "", "region": "", "self": ""}, "params_occur": {"instance": [["self", "all_rds_instances", "instance", "status"], ["dest", "instance", "endpoint"], ["hostname", "instance", "tags", "get", "self", "hostname_variable", "None"], ["hostname", "getattr", "instance", "self", "hostname_variable"], ["self", "index", "hostname", "region", "instance", "id"], ["self", "inventory", "instance", "id", "hostname"], ["self", "push_group", "self", "inventory", "instance", "id"], ["self", "push", "self", "inventory", "instance", "availability_zone", "hostname"], ["self", "push_group", "self", "inventory", "region", "instance", "availability_zone"], ["self", "push_group", "self", "inventory", "instance", "availability_zone"], ["type_name", "self", "to_safe", "instance", "instance_class"], ["self", "group_by_vpc_id", "instance", "subnet_group", "instance", "subnet_group", "vpc_id"], ["vpc_id_name", "self", "to_safe", "instance", "subnet_group", "vpc_id"], ["instance", "security_group"], ["key", "self", "to_safe", "instance", "security_group", "name"], ["self", "push", "self", "inventory", "self", "to_safe", "instance", "engine", "hostname"], ["self", "push_group", "self", "inventory", "self", "to_safe", "instance", "engine"], ["self", "push", "self", "inventory", "self", "to_safe", "instance", "parameter_group", "name", "hostname"], ["self", "push_group", "self", "inventory", "self", "to_safe", "instance", "parameter_group", "name"], ["self", "inventory", "hostname", "self", "get_host_info_dict_from_instance", "instance"]], "region": [["self", "index", "hostname", "region", "instance", "id"], ["self", "push", "self", "inventory", "region", "hostname"], ["self", "push_group", "self", "inventory", "region"], ["self", "push_group", "self", "inventory", "region", "instance", "availability_zone"]], "self": [["self", "all_rds_instances", "instance", "status"], ["self", "hostname_variable"], ["self", "hostname_variable", "startswith"], ["hostname", "instance", "tags", "get", "self", "hostname_variable", "None"], ["hostname", "getattr", "instance", "self", "hostname_variable"], ["hostname", "self", "to_safe", "hostname", "lower"], ["self", "index", "hostname", "region", "instance", "id"], ["self", "group_by_instance_id"], ["self", "inventory", "instance", "id", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "instance", "id"], ["self", "group_by_region"], ["self", "push", "self", "inventory", "region", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "region"], ["self", "group_by_availability_zone"], ["self", "push", "self", "inventory", "instance", "availability_zone", "hostname"], ["self", "nested_groups"], ["self", "group_by_region"], ["self", "push_group", "self", "inventory", "region", "instance", "availability_zone"], ["self", "push_group", "self", "inventory", "instance", "availability_zone"], ["self", "group_by_instance_type"], ["type_name", "self", "to_safe", "instance", "instance_class"], ["self", "push", "self", "inventory", "type_name", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "type_name"], ["self", "group_by_vpc_id", "instance", "subnet_group", "instance", "subnet_group", "vpc_id"], ["vpc_id_name", "self", "to_safe", "instance", "subnet_group", "vpc_id"], ["self", "push", "self", "inventory", "vpc_id_name", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "vpc_id_name"], ["self", "group_by_security_group"], ["key", "self", "to_safe", "instance", "security_group", "name"], ["self", "push", "self", "inventory", "key", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "key"], ["self", "fail_with_error", "join"], ["self", "group_by_rds_engine"], ["self", "push", "self", "inventory", "self", "to_safe", "instance", "engine", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "self", "to_safe", "instance", "engine"], ["self", "group_by_rds_parameter_group"], ["self", "push", "self", "inventory", "self", "to_safe", "instance", "parameter_group", "name", "hostname"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "self", "to_safe", "instance", "parameter_group", "name"], ["self", "push", "self", "inventory", "hostname"], ["self", "inventory", "hostname", "self", "get_host_info_dict_from_instance", "instance"], ["self", "inventory", "hostname", "dest"]]}, "params_p": {"args": [], "instance": [["Union[int, str]", 0.10383075507959329]], "kwargs": [], "region": [["int", 0.07710444067587151], ["bool", 0.07710444067587151], ["str", 0.07221748149840047]], "self": []}, "q_name": "Ec2Inventory.add_rds_instance", "ret_exprs": ["return", "return"], "ret_type": "", "ret_type_p": [["Callable[[], Dict[str, object]]", 0.09076122973389097], ["Iterator[Dict[str, str]]", 0.08835649254622849]], "variables": {"dest": "", "hostname": "", "key": "", "type_name": "", "vpc_id_name": ""}, "variables_p": {"dest": [["List[str]", 0.6]], "hostname": [["Dict[Tuple[Any, Any], Any]", 0.14179032085067467], ["dict", 0.08133446335776973]], "key": [["str", 0.6359439024745774], ["int", 0.11584524285386737], ["list", 0.0907393158377351], ["Optional[str]", 0.07886137632453123], ["Tuple[str, str, str, str, str, str]", 0.07861016250928884]], "type_name": [["str", 0.6116921961362801], ["list", 0.1745545742836993], ["List[str]", 0.1181977407879393], ["Pattern[str]", 0.0955554887920812]], "vpc_id_name": [["str", 1.0]]}}, {"docstring": {"func": "Adds an ElastiCache cluster to the inventory and index, as long as", "long_descr": "it's nodes are addressable", "ret": null}, "fn_lc": [[1004, 4], [1101, 60]], "fn_var_ln": {"dest": [[1021, 12], [1021, 16]], "host_info": [[1095, 8], [1095, 17]], "is_redis": [[1022, 12], [1022, 20]], "key": [[1069, 20], [1069, 23]], "type_name": [[1053, 12], [1053, 21]]}, "fn_var_occur": {"dest": [["dest", "cluster"], ["dest", "cluster"], ["self", "index", "dest", "region", "cluster"], ["self", "inventory", "cluster", "dest"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "push", "self", "inventory", "cluster", "dest"], ["self", "push", "self", "inventory", "type_name", "dest"], ["self", "push", "self", "inventory", "key", "dest"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "inventory", "dest", "host_info"]], "host_info": [["host_info", "self", "get_host_info_dict_from_describe_dict", "cluster"], ["self", "inventory", "dest", "host_info"]], "is_redis": [["is_redis", "False"], ["is_redis", "True"], ["self", "group_by_region", "is_redis"], ["self", "group_by_availability_zone", "is_redis"], ["self", "group_by_instance_type", "is_redis"], ["self", "group_by_security_group", "is_redis"], ["self", "group_by_elasticache_engine", "is_redis"]], "key": [["key", "self", "to_safe", "security_group"], ["self", "push", "self", "inventory", "key", "dest"], ["self", "push_group", "self", "inventory", "key"]], "type_name": [["type_name", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "type_name", "dest"], ["self", "push_group", "self", "inventory", "type_name"]]}, "name": "add_elasticache_cluster", "params": {"cluster": "", "region": "", "self": ""}, "params_descr": {"cluster": "", "region": "", "self": ""}, "params_occur": {"cluster": [["self", "all_elasticache_clusters", "cluster"], ["cluster", "cluster"], ["dest", "cluster"], ["dest", "cluster"], ["self", "index", "dest", "region", "cluster"], ["self", "inventory", "cluster", "dest"], ["self", "push_group", "self", "inventory", "cluster"], ["self", "push", "self", "inventory", "cluster", "dest"], ["self", "push_group", "self", "inventory", "region", "cluster"], ["self", "push_group", "self", "inventory", "cluster"], ["type_name", "self", "to_safe", "cluster"], ["cluster", "cluster", "None"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "group_by_elasticache_replication_group", "cluster", "cluster"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "cluster"], ["host_info", "self", "get_host_info_dict_from_describe_dict", "cluster"], ["self", "add_elasticache_node", "node", "cluster", "region"]], "region": [["self", "index", "dest", "region", "cluster"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "push_group", "self", "inventory", "region"], ["self", "push_group", "self", "inventory", "region", "cluster"], ["self", "add_elasticache_node", "node", "cluster", "region"]], "self": [["self", "all_elasticache_clusters", "cluster"], ["self", "index", "dest", "region", "cluster"], ["self", "group_by_instance_id"], ["self", "inventory", "cluster", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "cluster"], ["self", "group_by_region", "is_redis"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "region"], ["self", "group_by_availability_zone", "is_redis"], ["self", "push", "self", "inventory", "cluster", "dest"], ["self", "nested_groups"], ["self", "group_by_region"], ["self", "push_group", "self", "inventory", "region", "cluster"], ["self", "push_group", "self", "inventory", "cluster"], ["self", "group_by_instance_type", "is_redis"], ["type_name", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "type_name", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "type_name"], ["self", "group_by_security_group", "is_redis"], ["key", "self", "to_safe", "security_group"], ["self", "push", "self", "inventory", "key", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "key"], ["self", "group_by_elasticache_engine", "is_redis"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "group_by_elasticache_parameter_group"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "group_by_elasticache_replication_group", "cluster", "cluster"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "cluster"], ["host_info", "self", "get_host_info_dict_from_describe_dict", "cluster"], ["self", "inventory", "dest", "host_info"], ["self", "add_elasticache_node", "node", "cluster", "region"]]}, "params_p": {"args": [], "cluster": [], "kwargs": [], "region": [["int", 0.09737056461336531]], "self": []}, "q_name": "Ec2Inventory.add_elasticache_cluster", "ret_exprs": ["return", "return"], "ret_type": "", "ret_type_p": [["Callable[[], Dict[str, object]]", 0.09076122973389097], ["Iterator[Dict[str, str]]", 0.08835649254622849]], "variables": {"dest": "", "host_info": "", "is_redis": "", "key": "", "type_name": ""}, "variables_p": {"dest": [["frozenset[int]", 0.22996483742983714], ["Mapping[str, Any]", 0.1410436739789085], ["int", 0.10933891066572643]], "host_info": [["dict", 0.4230740253305032], ["str", 0.11288413956362578], ["Dict[str, Dict]", 0.09335735029446195], ["Dict[Type[Any], str]", 0.09290388649826102], ["Dict[Any, dict]", 0.08969228708164942]], "is_redis": [["str", 0.8076033090979143], ["bool", 0.1923966909020858]], "key": [["str", 0.9015256146883215], ["int", 0.09847438531167875]], "type_name": [["str", 0.47098133995072167], ["Tuple[str, str, str, str, str]", 0.20368555286605924], ["List[str]", 0.12770603492821891], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.10184277643302962], ["int", 0.09578429582197034]]}}, {"docstring": {"func": "Adds an ElastiCache node to the inventory and index, as long as", "long_descr": "it is addressable", "ret": null}, "fn_lc": [[1103, 4], [1188, 65]], "fn_var_ln": {"dest": [[1112, 8], [1112, 12]], "host_info": [[1183, 8], [1183, 17]], "key": [[1161, 20], [1161, 23]], "node_id": [[1118, 8], [1118, 15]], "type_name": [[1145, 12], [1145, 21]]}, "fn_var_occur": {"dest": [["dest", "node"], ["self", "index", "dest", "region", "node_id"], ["self", "inventory", "node_id", "dest"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "push", "self", "inventory", "cluster", "dest"], ["self", "push", "self", "inventory", "type_name", "dest"], ["self", "push", "self", "inventory", "key", "dest"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push", "self", "inventory", "dest"], ["dest", "self", "inventory"], ["self", "inventory", "dest", "update", "host_info"], ["self", "inventory", "dest", "host_info"]], "host_info": [["host_info", "self", "get_host_info_dict_from_describe_dict", "node"], ["self", "inventory", "dest", "update", "host_info"], ["self", "inventory", "dest", "host_info"]], "key": [["key", "self", "to_safe", "security_group"], ["self", "push", "self", "inventory", "key", "dest"], ["self", "push_group", "self", "inventory", "key"]], "node_id": [["node_id", "self", "to_safe", "cluster", "node"], ["self", "index", "dest", "region", "node_id"], ["self", "inventory", "node_id", "dest"], ["self", "push_group", "self", "inventory", "node_id"]], "type_name": [["type_name", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "type_name", "dest"], ["self", "push_group", "self", "inventory", "type_name"]]}, "name": "add_elasticache_node", "params": {"cluster": "", "node": "", "region": "", "self": ""}, "params_descr": {"cluster": "", "node": "", "region": "", "self": ""}, "params_occur": {"cluster": [["node_id", "self", "to_safe", "cluster", "node"], ["self", "push", "self", "inventory", "cluster", "dest"], ["self", "push_group", "self", "inventory", "region", "cluster"], ["self", "push_group", "self", "inventory", "cluster"], ["type_name", "self", "to_safe", "cluster"], ["cluster", "cluster", "None"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"]], "node": [["self", "all_elasticache_nodes", "node"], ["dest", "node"], ["node_id", "self", "to_safe", "cluster", "node"], ["host_info", "self", "get_host_info_dict_from_describe_dict", "node"]], "region": [["self", "index", "dest", "region", "node_id"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "push_group", "self", "inventory", "region"], ["self", "push_group", "self", "inventory", "region", "cluster"]], "self": [["self", "all_elasticache_nodes", "node"], ["node_id", "self", "to_safe", "cluster", "node"], ["self", "index", "dest", "region", "node_id"], ["self", "group_by_instance_id"], ["self", "inventory", "node_id", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "node_id"], ["self", "group_by_region"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "region"], ["self", "group_by_availability_zone"], ["self", "push", "self", "inventory", "cluster", "dest"], ["self", "nested_groups"], ["self", "group_by_region"], ["self", "push_group", "self", "inventory", "region", "cluster"], ["self", "push_group", "self", "inventory", "cluster"], ["self", "group_by_instance_type"], ["type_name", "self", "to_safe", "cluster"], ["self", "push", "self", "inventory", "type_name", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "type_name"], ["self", "group_by_security_group"], ["key", "self", "to_safe", "security_group"], ["self", "push", "self", "inventory", "key", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "key"], ["self", "group_by_elasticache_engine"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "self", "to_safe", "cluster"], ["self", "group_by_elasticache_cluster"], ["self", "push", "self", "inventory", "self", "to_safe", "cluster", "dest"], ["self", "push", "self", "inventory", "dest"], ["host_info", "self", "get_host_info_dict_from_describe_dict", "node"], ["dest", "self", "inventory"], ["self", "inventory", "dest", "update", "host_info"], ["self", "inventory", "dest", "host_info"]]}, "params_p": {"args": [], "cluster": [["dict", 0.10128708498618863], ["type", 0.09212245847974909]], "kwargs": [], "node": [], "region": [["bytes", 0.10956752474938125], ["int", 0.09799960439626156]], "self": []}, "q_name": "Ec2Inventory.add_elasticache_node", "ret_exprs": ["return", "return"], "ret_type": "", "ret_type_p": [["Iterator[Dict[str, str]]", 0.08007303991955672]], "variables": {"dest": "", "host_info": "", "key": "", "node_id": "", "type_name": ""}, "variables_p": {"dest": [["str", 0.11705444657317354], ["list", 0.1160922849006687], ["int", 0.1099762119163072], ["float", 0.09594020834175909], ["List[int]", 0.0947244560279849], ["dict", 0.09243980538538168]], "host_info": [["dict", 0.7002615449002674], ["List[int]", 0.11808724263005611], ["Dict[Type[Any], str]", 0.09267888748289273], ["list", 0.08897232498678359]], "key": [["str", 0.9015256146883215], ["int", 0.09847438531167875]], "node_id": [["str", 1.0000000000000002]], "type_name": [["str", 0.47098133995072167], ["Tuple[str, str, str, str, str]", 0.20368555286605924], ["List[str]", 0.12770603492821891], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.10184277643302962], ["int", 0.09578429582197034]]}}, {"docstring": {"func": "Adds an ElastiCache replication group to the inventory and index ", "long_descr": null, "ret": null}, "fn_lc": [[1190, 4], [1240, 61]], "fn_var_ln": {"dest": [[1198, 8], [1198, 12]], "host_info": [[1238, 8], [1238, 17]]}, "fn_var_occur": {"dest": [["dest", "replication_group"], ["self", "index", "dest", "region", "replication_group"], ["self", "inventory", "replication_group", "dest"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "push", "self", "inventory", "dest"], ["self", "inventory", "dest", "host_info"]], "host_info": [["host_info", "self", "get_host_info_dict_from_describe_dict", "replication_group"], ["self", "inventory", "dest", "host_info"]]}, "name": "add_elasticache_replication_group", "params": {"region": "", "replication_group": "", "self": ""}, "params_descr": {"region": "", "replication_group": "", "self": ""}, "params_occur": {"region": [["self", "index", "dest", "region", "replication_group"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "push_group", "self", "inventory", "region"]], "replication_group": [["self", "all_elasticache_replication_groups", "replication_group"], ["dest", "replication_group"], ["self", "index", "dest", "region", "replication_group"], ["self", "inventory", "replication_group", "dest"], ["self", "push_group", "self", "inventory", "replication_group"], ["self", "push", "self", "inventory", "replication_group"], ["host_info", "self", "get_host_info_dict_from_describe_dict", "replication_group"]], "self": [["self", "all_elasticache_replication_groups", "replication_group"], ["self", "index", "dest", "region", "replication_group"], ["self", "group_by_instance_id"], ["self", "inventory", "replication_group", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "replication_group"], ["self", "group_by_region"], ["self", "push", "self", "inventory", "region", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory", "region"], ["self", "group_by_elasticache_engine"], ["self", "push", "self", "inventory", "dest"], ["self", "nested_groups"], ["self", "push_group", "self", "inventory"], ["self", "push", "self", "inventory", "replication_group"], ["host_info", "self", "get_host_info_dict_from_describe_dict", "replication_group"], ["self", "inventory", "dest", "host_info"]]}, "params_p": {"args": [], "kwargs": [], "region": [["str", 0.2822896505394214], ["List[List[Any]]", 0.09529012379515836], ["List[str]", 0.08788742678238191]], "replication_group": [["bool", 0.1072100224791946]], "self": []}, "q_name": "Ec2Inventory.add_elasticache_replication_group", "ret_exprs": ["return", "return"], "ret_type": "", "ret_type_p": [["Callable[[], Dict[str, object]]", 0.09076122973389097], ["Iterator[Dict[str, str]]", 0.08835649254622849]], "variables": {"dest": "", "host_info": ""}, "variables_p": {"dest": [["str", 0.9999999999999999]], "host_info": [["dict", 0.7068363392114317], ["Dict[Any, dict]", 0.11574152989631918], ["Dict[str, Any]", 0.08992748500439657], ["Dict[str, str]", 0.08749464588785255]]}}, {"docstring": {"func": "Get and store the map of resource records to domain names that", "long_descr": "point to them.", "ret": null}, "fn_lc": [[1242, 4], [1265, 67]], "fn_var_ln": {"all_zones": [[1247, 8], [1247, 17]], "r53_conn": [[1246, 8], [1246, 16]], "record_name": [[1261, 20], [1261, 31]], "route53_records": [[1252, 8], [1252, 28]], "route53_zones": [[1249, 8], [1249, 21]], "rrsets": [[1255, 12], [1255, 18]]}, "fn_var_occur": {"all_zones": [["all_zones", "r53_conn", "get_zones"], ["route53_zones", "zone", "zone", "all_zones", "zone", "name", "self", "route53_excluded_zones"]], "r53_conn": [["r53_conn", "route53", "Route53Connection"], ["all_zones", "r53_conn", "get_zones"], ["rrsets", "r53_conn", "get_all_rrsets", "zone", "id"]], "record_name": [["record_name", "record_set", "name"], ["record_name", "endswith"], ["record_name", "record_name"], ["self", "route53_records", "resource", "add", "record_name"]], "route53_records": [["self", "route53_records"], ["self", "route53_records", "setdefault", "resource", "set"], ["self", "route53_records", "resource", "add", "record_name"]], "route53_zones": [["route53_zones", "zone", "zone", "all_zones", "zone", "name", "self", "route53_excluded_zones"]], "rrsets": [["rrsets", "r53_conn", "get_all_rrsets", "zone", "id"]]}, "name": "get_route53_records", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["route53_zones", "zone", "zone", "all_zones", "zone", "name", "self", "route53_excluded_zones"], ["self", "route53_records"], ["self", "route53_records", "setdefault", "resource", "set"], ["self", "route53_records", "resource", "add", "record_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.get_route53_records", "ret_exprs": [], "ret_type": "", "variables": {"all_zones": "", "r53_conn": "", "record_name": "", "route53_records": "", "route53_zones": "", "rrsets": ""}, "variables_p": {"all_zones": [["list", 0.17982195442459195], ["Tuple[Literal, Literal]", 0.10091170198027992], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09111313605397475]], "r53_conn": [["int", 0.267642179314678], ["Optional[List[str]]", 0.09930587598151577], ["str", 0.08372732629032122], ["dict", 0.08118164337185152]], "record_name": [["list", 0.5740672832395546], ["str", 0.12004504762914846], ["List[str]", 0.07877571677851303], ["set", 0.07515208614297082], ["Set[str]", 0.0706138011861925]], "route53_records": [["Tuple[Tuple[Any, Any], Tuple[Any, Any]]", 0.11087139188628292]], "route53_zones": [["List[str]", 0.11006631344239746], ["deque", 0.08991588133921849], ["List[Tuple[int, Any]]", 0.08875084937355442]], "rrsets": [["str", 0.12692302167202932]]}}, {"docstring": {"func": "Check if an instance is referenced in the records we have from", "long_descr": "Route53. If it is, return the list of domain names pointing to said\ninstance. If nothing points to it, return an empty list.", "ret": null}, "fn_lc": [[1268, 4], [1287, 30]], "fn_var_ln": {"instance_attributes": [[1273, 8], [1273, 27]], "name_list": [[1276, 8], [1276, 17]], "value": [[1280, 16], [1280, 21]]}, "fn_var_occur": {"instance_attributes": [], "name_list": [["name_list", "set"], ["name_list", "update", "self", "route53_records", "value"], ["list", "name_list"]], "value": [["value", "getattr", "instance", "attrib"], ["value", "self", "route53_records"], ["name_list", "update", "self", "route53_records", "value"]]}, "name": "get_instance_route53_names", "params": {"instance": "", "self": ""}, "params_descr": {"instance": "", "self": ""}, "params_occur": {"instance": [["value", "getattr", "instance", "attrib"]], "self": [["value", "self", "route53_records"], ["name_list", "update", "self", "route53_records", "value"]]}, "params_p": {"args": [], "instance": [["str", 0.6019264768249878], ["Iterable[Dict[str, Any]]", 0.11411079385833967], ["Union[Sequence[str], Sequence[int]]", 0.10021046768424824], ["Iterable[str]", 0.10021046768424824], ["List[str]", 0.0835417939481761]], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.get_instance_route53_names", "ret_exprs": ["return list(name_list)"], "ret_type": "", "ret_type_p": [["str", 0.606537974923596], ["Optional[Callable]", 0.09902066840386442]], "variables": {"instance_attributes": "", "name_list": "", "value": ""}, "variables_p": {"instance_attributes": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "name_list": [["list", 0.7954682888618844], ["List[str]", 0.20453171113811547]], "value": [["list", 0.21534291661393493], ["str", 0.19513935695079776], ["Type[Optional[str]]", 0.11872286647015118], ["int", 0.09329352359001487]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1289, 4], [1338, 28]], "fn_var_ln": {"group_ids": [[1320, 16], [1320, 25]], "group_names": [[1321, 16], [1321, 27]], "instance_vars": [[1290, 8], [1290, 21]], "key": [[1317, 20], [1317, 23]], "v": [[1316, 24], [1316, 25]], "value": [[1292, 12], [1292, 17]]}, "fn_var_occur": {"group_ids": [["group_ids", "append", "group", "id"], ["instance_vars", "join", "str", "i", "i", "group_ids"]], "group_names": [["group_names", "append", "group", "name"], ["instance_vars", "join", "str", "i", "i", "group_names"]], "instance_vars": [["instance_vars", "instance", "state"], ["instance_vars", "instance", "state_code"], ["instance_vars", "instance", "previous_state"], ["instance_vars", "instance", "previous_state_code"], ["instance_vars", "key", "value"], ["instance_vars", "key", "value", "strip"], ["instance_vars", "key"], ["instance_vars", "key", "value", "name"], ["instance_vars", "value", "zone"], ["instance_vars", "key", "v"], ["instance_vars", "join", "str", "i", "i", "group_ids"], ["instance_vars", "join", "str", "i", "i", "group_names"], ["instance_vars", "os", "path", "basename", "k", "v", "volume_id"]], "key": [["value", "getattr", "instance", "key"], ["key", "self", "to_safe", "key"], ["instance_vars", "key", "value"], ["instance_vars", "key", "value", "strip"], ["instance_vars", "key"], ["instance_vars", "key", "value", "name"], ["key", "self", "to_safe", "k"], ["instance_vars", "key", "v"]], "v": [["self", "expand_csv_tags", "v"], ["v", "map", "x", "x", "strip", "v", "split"], ["instance_vars", "key", "v"], ["instance_vars", "os", "path", "basename", "k", "v", "volume_id"]], "value": [["value", "getattr", "instance", "key"], ["type", "value", "int", "bool"], ["instance_vars", "key", "value"], ["isinstance", "value", "six", "string_types"], ["instance_vars", "key", "value", "strip"], ["type", "value", "type", "None"], ["instance_vars", "key", "value", "name"], ["instance_vars", "value", "zone"], ["value", "items"], ["value", "items"]]}, "name": "get_host_info_dict_from_instance", "params": {"instance": "", "self": ""}, "params_descr": {"instance": "", "self": ""}, "params_occur": {"instance": [["vars", "instance"], ["value", "getattr", "instance", "key"], ["instance_vars", "instance", "state"], ["instance_vars", "instance", "state_code"], ["instance_vars", "instance", "previous_state"], ["instance_vars", "instance", "previous_state_code"]], "self": [["key", "self", "to_safe", "key"], ["self", "expand_csv_tags", "v"], ["key", "self", "to_safe", "k"]]}, "params_p": {"args": [], "instance": [["dict", 0.3049289449425127], ["Dict[str, Any]", 0.19990938842909575]], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.get_host_info_dict_from_instance", "ret_exprs": ["return instance_vars"], "ret_type": "", "ret_type_p": [["str", 0.5758348131024978], ["bool", 0.10406674730904074], ["Type[T]", 0.09088449921735813]], "variables": {"group_ids": "", "group_names": "", "instance_vars": "", "key": "", "v": "", "value": ""}, "variables_p": {"group_ids": [["list", 0.9999999999999999]], "group_names": [["list", 0.5788120991478839], ["str", 0.18523449662216673], ["List[str]", 0.08891286727552172], ["Dict[int, str]", 0.07403484138139328], ["List[Tuple[str, Any]]", 0.07300569557303418]], "instance_vars": [["Dict[str, int]", 0.08182466492387246]], "key": [["list", 0.561399323295395], ["str", 0.18629623397062822], ["List[int]", 0.07861288400072139]], "v": [["frozenset[str]", 0.28311969140269283], ["str", 0.10912426833236287], ["dict", 0.10370181642795698], ["List[str]", 0.09057735024857477], ["List[List[Any]]", 0.08958074811898172]], "value": [["bytearray", 0.2817933065782018], ["int", 0.22079141009572367], ["str", 0.09543404951747174], ["List[None]", 0.09225768174434791]]}}, {"docstring": {"func": "Parses the dictionary returned by the API call into a flat list", "long_descr": "of parameters. This method should be used only when 'describe' is\nused directly because Boto doesn't provide specific classes.", "ret": null}, "fn_lc": [[1340, 4], [1423, 24]], "fn_var_ln": {"host_info": [[1350, 8], [1350, 17]], "key": [[1353, 12], [1353, 15]], "replica_count": [[1371, 16], [1371, 29]], "sg_ids": [[1399, 20], [1399, 26]], "value": [[1352, 12], [1352, 17]]}, "fn_var_occur": {"host_info": [["host_info", "value"], ["host_info", "value"], ["host_info", "value"], ["host_info", "value"], ["host_info", "value"], ["host_info", "value"], ["host_info", "node"], ["host_info", "node"], ["host_info", "node"], ["host_info", "str", "replica_count", "node"], ["host_info", "str", "replica_count", "node"], ["host_info", "str", "replica_count", "node"], ["host_info", "join", "str", "i", "i", "value"], ["host_info", "join", "str", "i", "i", "value"], ["host_info", "value"], ["host_info", "value"], ["host_info", "join", "str", "i", "i", "sg_ids"], ["host_info", "key", "value"], ["host_info", "key", "value", "strip"], ["host_info", "key"]], "key": [["value", "describe_dict", "key"], ["key", "self", "to_safe", "self", "uncammelize", "key"], ["key", "value"], ["key", "value"], ["key", "value"], ["key", "value"], ["host_info", "key", "value"], ["host_info", "key", "value", "strip"], ["host_info", "key"]], "replica_count": [["host_info", "str", "replica_count", "node"], ["host_info", "str", "replica_count", "node"], ["host_info", "str", "replica_count", "node"]], "sg_ids": [["sg_ids", "append", "sg"], ["host_info", "join", "str", "i", "i", "sg_ids"]], "value": [["value", "describe_dict", "key"], ["key", "value"], ["host_info", "value"], ["host_info", "value"], ["key", "value"], ["host_info", "value"], ["host_info", "value"], ["key", "value"], ["host_info", "value"], ["host_info", "value"], ["key", "value"], ["host_info", "join", "str", "i", "i", "value"], ["host_info", "join", "str", "i", "i", "value"], ["host_info", "value"], ["host_info", "value"], ["value", "None"], ["type", "value", "int", "bool"], ["host_info", "key", "value"], ["isinstance", "value", "six", "string_types"], ["host_info", "key", "value", "strip"], ["type", "value", "type", "None"]]}, "name": "get_host_info_dict_from_describe_dict", "params": {"describe_dict": "", "self": ""}, "params_descr": {"describe_dict": "", "self": ""}, "params_occur": {"describe_dict": [["value", "describe_dict", "key"]], "self": [["key", "self", "to_safe", "self", "uncammelize", "key"]]}, "params_p": {"args": [], "describe_dict": [["dict", 0.45083398773508077], ["Dict[str, Any]", 0.18552473712639117], ["Dict[str, List[Any]]", 0.08780467580489307], ["Dict[str, str]", 0.08483562899809378]], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.get_host_info_dict_from_describe_dict", "ret_exprs": ["return host_info"], "ret_type": "", "ret_type_p": [["str", 0.27108645891808114], ["dict", 0.20249224021819284], ["Optional[str]", 0.1930278892892411], ["Optional[Dict[str, Any]]", 0.09151668144625483]], "variables": {"host_info": "", "key": "", "replica_count": "", "sg_ids": "", "value": ""}, "variables_p": {"host_info": [["Dict[Any, str]", 0.8291840384892427], ["str", 0.08256811908181114]], "key": [["List[str]", 0.39098486076072453], ["list", 0.1038698574525381], ["tuple", 0.10209322863179249], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09370860980889228]], "replica_count": [["int", 0.31235000325327666], ["str", 0.12121657453020278], ["argparse.Namespace", 0.10650608933922256], ["Dict[str, Any]", 0.10223581891110907], ["List[int]", 0.09605380217300635], ["List[str]", 0.08452684020668166], ["float", 0.07980685784527985]], "sg_ids": [["list", 0.9999999999999998]], "value": [["str", 0.21712806309191746], ["int", 0.1376609023918923], ["list", 0.09257434111404444], ["Set[str]", 0.09004762702852438], ["List[float]", 0.08786733207527322]]}}, {"docstring": {"func": "Get variables about a specific host ", "long_descr": null, "ret": null}, "fn_lc": [[1425, 4], [1442, 91]], "fn_var_ln": {"instance": [[1441, 8], [1441, 16]], "instance_id": [[1439, 17], [1439, 28]], "region": [[1439, 9], [1439, 15]]}, "fn_var_occur": {"instance": [["instance", "self", "get_instance", "region", "instance_id"], ["self", "json_format_dict", "self", "get_host_info_dict_from_instance", "instance", "True"]], "instance_id": [["region", "instance_id", "self", "index", "self", "args", "host"], ["instance", "self", "get_instance", "region", "instance_id"]], "region": [["region", "instance_id", "self", "index", "self", "args", "host"], ["instance", "self", "get_instance", "region", "instance_id"]]}, "name": "get_host_info", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["len", "self", "index"], ["self", "load_index_from_cache"], ["self", "args", "host", "self", "index"], ["self", "do_api_calls_update_cache"], ["self", "args", "host", "self", "index"], ["self", "json_format_dict", "True"], ["region", "instance_id", "self", "index", "self", "args", "host"], ["instance", "self", "get_instance", "region", "instance_id"], ["self", "json_format_dict", "self", "get_host_info_dict_from_instance", "instance", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.get_host_info", "ret_exprs": ["return self.json_format_dict({}, True)", "return self.json_format_dict(self.get_host_info_dict_from_instance(instance), True)"], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {"instance": "", "instance_id": "", "region": ""}, "variables_p": {"instance": [["str", 0.5777415985330033], ["dict", 0.09362505856737602]], "instance_id": [["str", 0.3346532786257859], ["int", 0.18436552525228656], ["Dict[str, int]", 0.10490860947817013], ["Dict[str, str]", 0.09320839154639694], ["float", 0.08734468929775484]], "region": [["str", 0.38857747262078496], ["Tuple[Any, Any]", 0.1208197377659221], ["List[str]", 0.0941341499443614], ["Dict[Any, str]", 0.08786580576957877]]}}, {"docstring": {"func": "Push an element onto an array that may not have been defined in", "long_descr": "the dict", "ret": null}, "fn_lc": [[1444, 4], [1452, 38]], "fn_var_ln": {"group_info": [[1447, 8], [1447, 18]], "host_list": [[1449, 12], [1449, 21]]}, "fn_var_occur": {"group_info": [["group_info", "my_dict", "setdefault", "key"], ["isinstance", "group_info", "dict"], ["host_list", "group_info", "setdefault"], ["group_info", "append", "element"]], "host_list": [["host_list", "group_info", "setdefault"], ["host_list", "append", "element"]]}, "name": "push", "params": {"element": "", "key": "", "my_dict": "", "self": ""}, "params_descr": {"element": "", "key": "", "my_dict": "", "self": ""}, "params_occur": {"element": [["host_list", "append", "element"], ["group_info", "append", "element"]], "key": [["group_info", "my_dict", "setdefault", "key"]], "my_dict": [["group_info", "my_dict", "setdefault", "key"]], "self": []}, "params_p": {"args": [], "element": [["List[str]", 0.19593493691746555], ["int", 0.13724168845085233], ["dict", 0.09612852722711687], ["Optional[Callable]", 0.08829857728258814]], "key": [["dict", 0.36922520434306255], ["str", 0.228193846767489], ["Callable", 0.09192813168850412]], "kwargs": [], "my_dict": [["dict", 0.36922520434306255], ["str", 0.228193846767489], ["Callable", 0.09192813168850412]], "self": []}, "q_name": "Ec2Inventory.push", "ret_exprs": [], "ret_type": "", "variables": {"group_info": "", "host_list": ""}, "variables_p": {"group_info": [["dict", 0.7787828334157043], ["Dict[str, Any]", 0.11061398948455015]], "host_list": [["list", 0.1591075326255288], ["List[int]", 0.11181916523423312], ["dict", 0.08123758546002331]]}}, {"docstring": {"func": "Push a group as a child of another group. ", "long_descr": null, "ret": null}, "fn_lc": [[1454, 4], [1461, 40]], "fn_var_ln": {"child_groups": [[1459, 8], [1459, 20]], "parent_group": [[1458, 12], [1458, 24]]}, "fn_var_occur": {"child_groups": [["child_groups", "parent_group", "setdefault"], ["element", "child_groups"], ["child_groups", "append", "element"]], "parent_group": [["parent_group", "my_dict", "setdefault", "key"], ["isinstance", "parent_group", "dict"], ["parent_group", "my_dict", "key", "parent_group"], ["child_groups", "parent_group", "setdefault"]]}, "name": "push_group", "params": {"element": "", "key": "", "my_dict": "", "self": ""}, "params_descr": {"element": "", "key": "", "my_dict": "", "self": ""}, "params_occur": {"element": [["element", "child_groups"], ["child_groups", "append", "element"]], "key": [["parent_group", "my_dict", "setdefault", "key"], ["parent_group", "my_dict", "key", "parent_group"]], "my_dict": [["parent_group", "my_dict", "setdefault", "key"], ["parent_group", "my_dict", "key", "parent_group"]], "self": []}, "params_p": {"args": [], "element": [["int", 0.22056897699662026], ["List[int]", 0.18447040153661487]], "key": [["dict", 0.2920609755955193], ["Dict[str, List[Any]]", 0.11265511088148505], ["str", 0.09263585655048803], ["Optional[str]", 0.09065494388060437], ["Dict[str, Any]", 0.08969043104679023]], "kwargs": [], "my_dict": [["dict", 0.2920609755955193], ["Dict[str, List[Any]]", 0.11265511088148505], ["str", 0.09263585655048803], ["Optional[str]", 0.09065494388060437], ["Dict[str, Any]", 0.08969043104679023]], "self": []}, "q_name": "Ec2Inventory.push_group", "ret_exprs": [], "ret_type": "", "variables": {"child_groups": "", "parent_group": ""}, "variables_p": {"child_groups": [["float", 0.09544692054431202]], "parent_group": [["dict", 0.439205286509635], ["List[str]", 0.16925804110705492], ["str", 0.10549618957787826], ["KeysView[str]", 0.09971566192068454], ["Dict[str, str]", 0.09886768949445793], ["Dict[Type[Any], str]", 0.08745713139028935]]}}, {"docstring": {"func": "Reads the inventory from the cache file and returns it as a JSON", "long_descr": "object", "ret": null}, "fn_lc": [[1463, 4], [1469, 29]], "fn_var_ln": {"cache": [[1467, 8], [1467, 13]], "json_inventory": [[1468, 8], [1468, 22]]}, "fn_var_occur": {"cache": [["cache", "open", "self", "cache_path_cache"], ["json_inventory", "cache", "read"]], "json_inventory": [["json_inventory", "cache", "read"]]}, "name": "get_inventory_from_cache", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["cache", "open", "self", "cache_path_cache"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.get_inventory_from_cache", "ret_exprs": ["return json_inventory"], "ret_type": "", "ret_type_p": [["str", 0.3999999999041128], ["bytes", 0.19999999986498648], ["int", 2.4414862119903426e-10]], "variables": {"cache": "", "json_inventory": ""}, "variables_p": {"cache": [["Set[str]", 0.22138355815762392], ["str", 0.20654473159588285], ["Type[str]", 0.1899427699570657], ["Dict[str, Union[None, Any, Any]]", 0.10691792567571429], ["int", 0.0925739673623188], ["Dict[str, str]", 0.09169167668124581], ["Dict[str, Union[Any, Any]]", 0.09094537057014854]], "json_inventory": [["int", 0.2730617909519897], ["dict", 0.2194516802033463], ["Type[Dict[Any, Any]]", 0.10206348522133588], ["Dict[str, Tuple[str, bool]]", 0.08866235960813548], ["bool", 0.08260372428264123]]}}, {"docstring": {"func": "Reads the index from the cache file sets self.index ", "long_descr": null, "ret": null}, "fn_lc": [[1472, 4], [1477, 43]], "fn_var_ln": {"cache": [[1475, 8], [1475, 13]], "index": [[1477, 8], [1477, 18]], "json_index": [[1476, 8], [1476, 18]]}, "fn_var_occur": {"cache": [["cache", "open", "self", "cache_path_index"], ["json_index", "cache", "read"]], "index": [["self", "index", "json", "loads", "json_index"]], "json_index": [["json_index", "cache", "read"], ["self", "index", "json", "loads", "json_index"]]}, "name": "load_index_from_cache", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["cache", "open", "self", "cache_path_index"], ["self", "index", "json", "loads", "json_index"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.load_index_from_cache", "ret_exprs": [], "ret_type": "", "variables": {"cache": "", "index": "", "json_index": ""}, "variables_p": {"cache": [["Set[str]", 0.22138355815762392], ["str", 0.20654473159588285], ["Type[str]", 0.1899427699570657], ["Dict[str, Union[None, Any, Any]]", 0.10691792567571429], ["int", 0.0925739673623188], ["Dict[str, str]", 0.09169167668124581], ["Dict[str, Union[Any, Any]]", 0.09094537057014854]], "index": [["dict", 0.20724692809795497], ["Dict[int, Any]", 0.20362918423207324], ["Dict[str, Union[Any, Any, Any, Any]]", 0.17888163123430606], ["bool", 0.1297047692661474], ["float", 0.09706460789777524], ["List[tuple]", 0.09609665326193748], ["list", 0.08737622600980578]], "json_index": []}}, {"docstring": {"func": "Writes data in JSON format to a file ", "long_descr": null, "ret": null}, "fn_lc": [[1480, 4], [1486, 21]], "fn_var_ln": {"cache": [[1484, 8], [1484, 13]], "json_data": [[1483, 8], [1483, 17]]}, "fn_var_occur": {"cache": [["cache", "open", "filename"], ["cache", "write", "json_data"], ["cache", "close"]], "json_data": [["json_data", "self", "json_format_dict", "data", "True"], ["cache", "write", "json_data"]]}, "name": "write_to_cache", "params": {"data": "", "filename": "", "self": ""}, "params_descr": {"data": "", "filename": "", "self": ""}, "params_occur": {"data": [["json_data", "self", "json_format_dict", "data", "True"]], "filename": [["cache", "open", "filename"]], "self": [["json_data", "self", "json_format_dict", "data", "True"]]}, "params_p": {"args": [], "data": [["str", 0.3037675208772618], ["dict", 0.19665022587202147], ["Dict[str, float]", 0.12016636068086693], ["bytes", 0.09330629025576591], ["List[str]", 0.09246221435148941], ["Mapping[str, Any]", 0.08630504706041559]], "filename": [["Optional[str]", 0.18903678259087253], ["str", 0.18571710164772637], ["List[str]", 0.08916372810462261]], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.write_to_cache", "ret_exprs": [], "ret_type": "", "variables": {"cache": "", "json_data": ""}, "variables_p": {"cache": [["str", 0.7537160749663909]], "json_data": [["str", 0.620368437021849], ["Dict[str, int]", 0.09743392218306392], ["Dict[str, Any]", 0.09713338344012518], ["dict", 0.09550298504271966], ["DefaultDict[Any, dict]", 0.08956127231224231]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1488, 4], [1490, 66]], "fn_var_ln": {"temp": [[1489, 8], [1489, 12]]}, "fn_var_occur": {"temp": [["temp", "re", "sub", "key"], ["re", "sub", "temp", "lower"]]}, "name": "uncammelize", "params": {"key": "", "self": ""}, "params_descr": {"key": "", "self": ""}, "params_occur": {"key": [["temp", "re", "sub", "key"]], "self": []}, "params_p": {"args": [], "key": [["str", 0.9999999997380021], ["T", 1.1127189183911297e-10], ["KT", 2.6159528732015062e-11], ["Union[int, slice]", 2.4921978936973737e-11], ["bytes", 2.4921978936973737e-11]], "kwargs": [], "self": []}, "q_name": "Ec2Inventory.uncammelize", "ret_exprs": ["return re.sub('([a-z0-9])([A-Z])', r'1_2', temp).lower()"], "ret_type": "", "ret_type_p": [["str", 0.9077856070507349], ["bool", 0.09221439294926535]], "variables": {"temp": ""}, "variables_p": {"temp": [["List[Union[Any, Any]]", 0.3803767722785221], ["Dict[str, List[int]]", 0.2158346250642203], ["List[int]", 0.10606019663432069], ["List[str]", 0.07423313847586556], ["float", 0.07351733990136541], ["list", 0.07351733990136541]]}}, {"docstring": {"func": "Converts 'bad' characters in a string to underscores so they can be used as Ansible groups ", "long_descr": null, "ret": null}, "fn_lc": [[1492, 4], [1497, 45]], "fn_var_ln": {"regex": [[1494, 8], [1494, 13]]}, "fn_var_occur": {"regex": [["re", "sub", "regex", "word"]]}, "name": "to_safe", "params": {"self": "", "word": ""}, "params_descr": {"self": "", "word": ""}, "params_occur": {"self": [["self", "replace_dash_in_groups"]], "word": [["re", "sub", "regex", "word"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "word": [["str", 0.28659172677262185], ["int", 0.14507370181453486], ["List[str]", 0.07253685090726743], ["Tuple[float, float]", 0.0609685608712239]]}, "q_name": "Ec2Inventory.to_safe", "ret_exprs": ["return re.sub(regex + \"]\", \"_\", word)"], "ret_type": "", "ret_type_p": [["bool", 0.10320783350487209], ["List[Dict[str, str]]", 0.10003926336287702], ["list", 0.10003926336287702], ["Tuple[Sequence]", 0.09952981890356184], ["int", 0.09725101339139912], ["Dict[str, Any]", 0.0931008744583862], ["str", 0.09233442477234428]], "variables": {"regex": ""}, "variables_p": {"regex": [["bytes", 0.19999999999999998], ["str", 0.19999999999999998], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09999999999999999], ["int", 0.09999999999999999]]}}, {"docstring": {"func": "Converts a dict to a JSON object and dumps it as a formatted", "long_descr": "string", "ret": null}, "fn_lc": [[1499, 4], [1506, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "json_format_dict", "params": {"data": "", "pretty": "", "self": ""}, "params_descr": {"data": "", "pretty": "", "self": ""}, "params_occur": {"data": [["json", "dumps", "data", "sort_keys", "True", "indent"], ["json", "dumps", "data"]], "pretty": [], "self": []}, "params_p": {"args": [], "data": [["Dict[str, Any]", 0.40562182824604287], ["dict", 0.2773897086518541], ["Dict[str, str]", 0.07693258776240822]], "kwargs": [], "pretty": [["bool", 0.5015884337915886], ["Optional[bool]", 0.09901312741733721], ["list", 0.0914913735618803], ["memoryview", 0.0914913735618803], ["Iterable[bytes]", 0.07072926212961732], ["List[Dict]", 0.04741910158716508]], "self": []}, "q_name": "Ec2Inventory.json_format_dict", "ret_exprs": ["return json.dumps(data, sort_keys=True, indent=2)", "return json.dumps(data)"], "ret_type": "", "ret_type_p": [["bool", 0.19546575095163893], ["Dict[str, Any]", 0.10633191385761122], ["int", 0.10598869280065575], ["str", 0.09622176781879022], ["Dict[str, str]", 0.09617744638246765]], "variables": {}, "variables_p": {}}], "name": "Ec2Inventory", "q_name": "Ec2Inventory", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["sys", "os", "argparse", "re", "time", "time", "boto", "boto", "ec2", "boto", "rds", "boto", "elasticache", "boto", "route53", "six", "ansible", "module_utils", "ec2", "ec2_utils", "boto3", "six", "moves", "configparser", "collections", "defaultdict", "json", "simplejson", "json"], "mod_var_ln": {"HAS_BOTO3": [[140, 4], [140, 13]]}, "mod_var_occur": {"HAS_BOTO3": [["HAS_BOTO3"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 233}, "session_id": "vFozN0UHyz3i7ZK4NBnywXqPXOm6xnxfIFvaGzaJUdA", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"HAS_BOTO3": ""}, "variables_p": {"HAS_BOTO3": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}}