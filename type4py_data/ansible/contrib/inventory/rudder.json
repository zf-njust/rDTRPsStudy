{"error": null, "response": {"classes": [{"cls_lc": [[72, 0], [299, 50]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Main execution path ", "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [101, 57]], "fn_var_ln": {"conn": [[84, 8], [84, 17]], "data_to_print": [[99, 12], [99, 25]], "inventory": [[77, 8], [77, 22]]}, "fn_var_occur": {"conn": [["self", "conn", "http", "Http", "disable_ssl_certificate_validation", "self", "disable_ssl_validation"]], "data_to_print": [["data_to_print", "self", "get_host_info", "self", "args", "host"], ["data_to_print", "self", "get_list_info"], ["print", "self", "json_format_dict", "data_to_print", "True"]], "inventory": [["self", "inventory"]]}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "inventory"], ["self", "read_settings"], ["self", "parse_cli_args"], ["self", "conn", "http", "Http", "disable_ssl_certificate_validation", "self", "disable_ssl_validation"], ["self", "args", "refresh_cache"], ["self", "update_cache"], ["self", "is_cache_valid"], ["self", "update_cache"], ["self", "load_cache"], ["self", "args", "host"], ["data_to_print", "self", "get_host_info", "self", "args", "host"], ["self", "args", "list"], ["data_to_print", "self", "get_list_info"], ["print", "self", "json_format_dict", "data_to_print", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.__init__", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "data_to_print": "", "inventory": ""}, "variables_p": {"conn": [["Dict[str, str]", 0.49999999975895715], ["float", 1.7220433388434042e-10], ["int", 3.441928231988628e-11], ["List[str]", 3.441928231988628e-11]], "data_to_print": [["str", 0.21547060046476552], ["Dict[str, List[str]]", 0.10513388605954826], ["List[Tuple[str, str]]", 0.10174248612835789], ["Dict[str, Union[Any, Any, Any, str]]", 0.0965640790659732], ["Tuple[Literal]", 0.09179916091610585], ["int", 0.09109765656182676], ["List[List[str]]", 0.08919648791263601]], "inventory": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": "Reads the settings from the rudder.ini file ", "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [122, 69]], "fn_var_ln": {"cache_max_age": [[122, 8], [122, 26]], "cache_path": [[121, 8], [121, 23]], "config": [[108, 12], [108, 18]], "disable_ssl_validation": [[117, 8], [117, 35]], "fail_if_name_collision": [[119, 8], [119, 35]], "group_name": [[118, 8], [118, 23]], "rudder_default_ini_path": [[109, 8], [109, 31]], "rudder_ini_path": [[110, 8], [110, 23]], "token": [[113, 8], [113, 18]], "uri": [[115, 8], [115, 16]], "version": [[114, 8], [114, 20]]}, "fn_var_occur": {"cache_max_age": [["self", "cache_max_age", "config", "getint"]], "cache_path": [["self", "cache_path", "config", "get"]], "config": [["config", "configparser", "SafeConfigParser"], ["config", "configparser", "ConfigParser"], ["config", "read", "rudder_ini_path"], ["self", "token", "os", "environ", "get", "config", "get"], ["self", "version", "os", "environ", "get", "config", "get"], ["self", "uri", "os", "environ", "get", "config", "get"], ["self", "disable_ssl_validation", "config", "getboolean"], ["self", "group_name", "config", "get"], ["self", "fail_if_name_collision", "config", "getboolean"], ["self", "cache_path", "config", "get"], ["self", "cache_max_age", "config", "getint"]], "disable_ssl_validation": [["self", "disable_ssl_validation", "config", "getboolean"]], "fail_if_name_collision": [["self", "fail_if_name_collision", "config", "getboolean"]], "group_name": [["self", "group_name", "config", "get"]], "rudder_default_ini_path": [["rudder_default_ini_path", "os", "path", "join", "os", "path", "dirname", "os", "path", "realpath", "__file__"], ["rudder_ini_path", "os", "path", "expanduser", "os", "path", "expandvars", "os", "environ", "get", "rudder_default_ini_path"]], "rudder_ini_path": [["rudder_ini_path", "os", "path", "expanduser", "os", "path", "expandvars", "os", "environ", "get", "rudder_default_ini_path"], ["config", "read", "rudder_ini_path"]], "token": [["self", "token", "os", "environ", "get", "config", "get"]], "uri": [["self", "uri", "os", "environ", "get", "config", "get"]], "version": [["self", "version", "os", "environ", "get", "config", "get"]]}, "name": "read_settings", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "token", "os", "environ", "get", "config", "get"], ["self", "version", "os", "environ", "get", "config", "get"], ["self", "uri", "os", "environ", "get", "config", "get"], ["self", "disable_ssl_validation", "config", "getboolean"], ["self", "group_name", "config", "get"], ["self", "fail_if_name_collision", "config", "getboolean"], ["self", "cache_path", "config", "get"], ["self", "cache_max_age", "config", "getint"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.read_settings", "ret_exprs": [], "ret_type": "", "variables": {"cache_max_age": "", "cache_path": "", "config": "", "disable_ssl_validation": "", "fail_if_name_collision": "", "group_name": "", "rudder_default_ini_path": "", "rudder_ini_path": "", "token": "", "uri": "", "version": ""}, "variables_p": {"cache_max_age": [["classmethod", 0.4867564127831885], ["bool", 0.20274572908303556]], "cache_path": [["str", 0.7307005281410057], ["deque[str]", 0.26929947185899406]], "config": [], "disable_ssl_validation": [["classmethod", 0.4867564127831885], ["bool", 0.20274572908303556]], "fail_if_name_collision": [["str", 0.8262414747201389], ["Optional[str]", 0.08783634306587791], ["Dict[Any, str]", 0.08592218221398318]], "group_name": [["str", 0.9999999999999998]], "rudder_default_ini_path": [["str", 0.7830950608059902], ["set", 0.11707361483332676], ["dict", 0.099831324360683]], "rudder_ini_path": [["str", 0.6602056109086027], ["Dict[str, Type[Any]]", 0.07393502027401491], ["List[str]", 0.07095163840889918]], "token": [["str", 0.6338409278065585], ["Dict[str, str]", 0.1014817808165046], ["int", 0.09660662576763737], ["Optional[str]", 0.07747470070256207]], "uri": [["str", 0.6893808648247729], ["Dict[str, str]", 0.0857660562918503]], "version": [["str", 1.0]]}}, {"docstring": {"func": "Command line argument processing ", "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [134, 39]], "fn_var_ln": {"args": [[134, 8], [134, 17]], "parser": [[127, 8], [127, 14]]}, "fn_var_occur": {"args": [["self", "args", "parser", "parse_args"]], "parser": [["parser", "argparse", "ArgumentParser", "description"], ["parser", "add_argument", "action", "default", "True", "help"], ["parser", "add_argument", "action", "help"], ["parser", "add_argument", "action", "default", "False", "help"], ["self", "args", "parser", "parse_args"]]}, "name": "parse_cli_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "args", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.parse_cli_args", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "parser": ""}, "variables_p": {"args": [["List[str]", 0.5248807964843968], ["argparse.Namespace", 0.321139793955019], ["List[Union[int, str]]", 0.07698970478029216], ["list", 0.07698970478029216]], "parser": [["argparse.ArgumentParser", 1.0]]}}, {"docstring": {"func": "Determines if the cache files have expired, or if it is still valid ", "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [145, 20]], "fn_var_ln": {"current_time": [[141, 12], [141, 24]], "mod_time": [[140, 12], [140, 20]]}, "fn_var_occur": {"current_time": [["current_time", "time"], ["mod_time", "self", "cache_max_age", "current_time"]], "mod_time": [["mod_time", "os", "path", "getmtime", "self", "cache_path"], ["mod_time", "self", "cache_max_age", "current_time"]]}, "name": "is_cache_valid", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["os", "path", "isfile", "self", "cache_path"], ["mod_time", "os", "path", "getmtime", "self", "cache_path"], ["mod_time", "self", "cache_max_age", "current_time"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.is_cache_valid", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"current_time": "", "mod_time": ""}, "variables_p": {"current_time": [["float", 0.4414244118914488], ["time.struct_time", 0.2930892097725718], ["Anaconda3.Lib.site-packages.astropy.time.core.TimeDelta", 0.17504724688494644]], "mod_time": [["str", 0.8224038302522323], ["int", 0.09665775880504215], ["List[int]", 0.08093841094272551]]}}, {"docstring": {"func": "Reads the cache from the cache file sets self.cache ", "long_descr": null, "ret": null}, "fn_lc": [[147, 4], [156, 105]], "fn_var_ln": {"cache": [[150, 8], [150, 13]], "inventory": [[154, 12], [154, 26]], "json_cache": [[151, 8], [151, 18]]}, "fn_var_occur": {"cache": [["cache", "open", "self", "cache_path"], ["json_cache", "cache", "read"]], "inventory": [["self", "inventory", "json", "loads", "json_cache"]], "json_cache": [["json_cache", "cache", "read"], ["self", "inventory", "json", "loads", "json_cache"]]}, "name": "load_cache", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["cache", "open", "self", "cache_path"], ["self", "inventory", "json", "loads", "json_cache"], ["self", "fail_with_error"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.load_cache", "ret_exprs": [], "ret_type": "", "variables": {"cache": "", "inventory": "", "json_cache": ""}, "variables_p": {"cache": [["str", 0.11502627560234152], ["list", 0.10600768710789633], ["Dict[str, int]", 0.10459575347873683], ["dict", 0.0991114701612577], ["Union[Literal, Literal]", 0.09566530806609723]], "inventory": [["float", 0.05329234097603649]], "json_cache": [["Type[Dict[Any, Any]]", 0.10243564499287257], ["int", 0.10243564499287257], ["dict", 0.0907569582967812], ["List[str]", 0.08555411009897325]]}}, {"docstring": {"func": "Writes data in JSON format to a file ", "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [164, 21]], "fn_var_ln": {"cache": [[162, 8], [162, 13]], "json_data": [[161, 8], [161, 17]]}, "fn_var_occur": {"cache": [["cache", "open", "self", "cache_path"], ["cache", "write", "json_data"], ["cache", "close"]], "json_data": [["json_data", "self", "json_format_dict", "self", "inventory", "True"], ["cache", "write", "json_data"]]}, "name": "write_cache", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["json_data", "self", "json_format_dict", "self", "inventory", "True"], ["cache", "open", "self", "cache_path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.write_cache", "ret_exprs": [], "ret_type": "", "variables": {"cache": "", "json_data": ""}, "variables_p": {"cache": [["bool", 0.11689188085267548], ["Dict[str, List[Any]]", 0.1074032463629104], ["Optional[str]", 0.09789834669392079], ["int", 0.09779240740407064], ["str", 0.09418461593150602]], "json_data": [["Dict[str, str]", 0.8065270113446962], ["Union[Literal, str]", 0.0980571369594579], ["str", 0.0954158516958456]]}}, {"docstring": {"func": "Gets the nodes list from Rudder ", "long_descr": null, "ret": null}, "fn_lc": [[166, 4], [182, 20]], "fn_var_ln": {"nodes": [[172, 8], [172, 13]], "path": [[169, 8], [169, 12]], "result": [[170, 8], [170, 14]]}, "fn_var_occur": {"nodes": [["nodes", "node"], ["nodes", "node", "node"], ["nodes", "node", "node"], ["nodes", "node"]], "path": [["result", "self", "api_call", "path"]], "result": [["result", "self", "api_call", "path"]]}, "name": "get_nodes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["result", "self", "api_call", "path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.get_nodes", "ret_exprs": ["return nodes"], "ret_type": "", "ret_type_p": [["Union[Sequence, 'SweepFixedValues']", 0.09896841069879957], ["str", 0.09548099342050358], ["Tuple[str]", 0.08886140118356746]], "variables": {"nodes": "", "path": "", "result": ""}, "variables_p": {"nodes": [["list", 0.13436152849976127], ["dict", 0.11429967430994269], ["str", 0.09389195406874801], ["Dict[str, str]", 0.08780840283081118]], "path": [["str", 0.48009742923554355], ["List[Tuple[str, Any]]", 0.13236390150759594], ["Optional[Union[str, Any]]", 0.10532294875839818], ["Dict[str, Dict[str, str]]", 0.09298045284236278], ["int", 0.09088129134078518]], "result": [["str", 0.1878214927810781], ["Dict[str, Any]", 0.11076453521254977], ["Dict[str, str]", 0.10174730507741778]]}}, {"docstring": {"func": "Gets the groups list from Rudder ", "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [195, 21]], "fn_var_ln": {"groups": [[190, 8], [190, 14]], "path": [[187, 8], [187, 12]], "result": [[188, 8], [188, 14]]}, "fn_var_occur": {"groups": [["groups", "group", "group", "self", "to_safe", "group", "self", "group_name"]], "path": [["result", "self", "api_call", "path"]], "result": [["result", "self", "api_call", "path"]]}, "name": "get_groups", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["result", "self", "api_call", "path"], ["groups", "group", "group", "self", "to_safe", "group", "self", "group_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.get_groups", "ret_exprs": ["return groups"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"groups": "", "path": "", "result": ""}, "variables_p": {"groups": [["str", 0.32079921575305476], ["Dict[str, str]", 0.2955747322085763], ["List[str]", 0.10294670745490786], ["DefaultDict[Any, List[Any]]", 0.09689057641355572], ["Type[str]", 0.09135520722178843]], "path": [["str", 0.48009742923554355], ["List[Tuple[str, Any]]", 0.13236390150759594], ["Optional[Union[str, Any]]", 0.10532294875839818], ["Dict[str, Dict[str, str]]", 0.09298045284236278], ["int", 0.09088129134078518]], "result": [["str", 0.1878214927810781], ["Dict[str, Any]", 0.11076453521254977], ["Dict[str, str]", 0.10174730507741778]]}}, {"docstring": {"func": "Fetches the inventory information from Rudder and creates the inventory ", "long_descr": null, "ret": null}, "fn_lc": [[197, 4], [238, 30]], "fn_var_ln": {"groups": [[201, 8], [201, 14]], "inventory": [[235, 8], [235, 22]], "nodes": [[200, 8], [200, 13]], "properties": [[219, 8], [219, 18]]}, "fn_var_occur": {"groups": [["groups", "self", "get_groups"], ["groups", "group", "inventory"], ["self", "fail_with_error", "groups", "group"], ["inventory", "groups", "group"], ["inventory", "groups", "group"], ["inventory", "groups", "group"], ["inventory", "groups", "group", "group"], ["groups", "group"], ["inventory", "groups", "group", "append", "nodes", "node"]], "inventory": [["groups", "group", "inventory"], ["inventory", "groups", "group"], ["inventory", "groups", "group"], ["inventory", "groups", "group"], ["inventory", "groups", "group", "group"], ["inventory", "groups", "group", "append", "nodes", "node"], ["inventory", "properties"], ["self", "inventory", "inventory"]], "nodes": [["nodes", "self", "get_nodes"], ["inventory", "groups", "group", "append", "nodes", "node"], ["nodes", "node", "properties"], ["self", "fail_with_error", "nodes", "node"], ["properties", "nodes", "node"], ["properties", "nodes", "node", "node"], ["nodes", "node"], ["properties", "nodes", "node", "self", "to_safe", "node_property", "node_property"]], "properties": [["nodes", "node", "properties"], ["properties", "nodes", "node"], ["properties", "nodes", "node", "node"], ["properties", "nodes", "node", "self", "to_safe", "node_property", "node_property"], ["inventory", "properties"]]}, "name": "update_cache", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["nodes", "self", "get_nodes"], ["groups", "self", "get_groups"], ["self", "fail_if_name_collision"], ["self", "fail_with_error", "groups", "group"], ["self", "fail_if_name_collision"], ["self", "fail_with_error", "nodes", "node"], ["properties", "nodes", "node", "self", "to_safe", "node_property", "node_property"], ["self", "inventory", "inventory"], ["self", "cache_max_age"], ["self", "write_cache"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.update_cache", "ret_exprs": [], "ret_type": "", "variables": {"groups": "", "inventory": "", "nodes": "", "properties": ""}, "variables_p": {"groups": [["List[str]", 0.4180819617542677], ["Tuple[str, str, str]", 0.271114420582724], ["str", 0.10422004870776727], ["int", 0.10236352024747374]], "inventory": [["list", 0.3010745296071011], ["dict", 0.11153161337398435], ["List[int]", 0.10182932372817255], ["int", 0.09115593486505892]], "nodes": [["list", 0.17972493050373822], ["str", 0.0957161019898065], ["dict", 0.0854393489516988]], "properties": [["set", 0.4146912739788036]]}}, {"docstring": {"func": "Gets inventory information from local cache ", "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [243, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_list_info", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "inventory"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RudderInventory.get_list_info", "ret_exprs": ["return self.inventory"], "ret_type": "", "ret_type_p": [["str", 0.1730425941430768], ["float", 0.10803816354359985], ["bool", 0.10803816354359985]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Gets information about a specific host from local cache ", "long_descr": null, "ret": null}, "fn_lc": [[245, 4], [251, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_host_info", "params": {"hostname": "", "self": ""}, "params_descr": {"hostname": "", "self": ""}, "params_occur": {"hostname": [["hostname", "self", "inventory"], ["self", "inventory", "hostname"]], "self": [["hostname", "self", "inventory"], ["self", "inventory", "hostname"]]}, "params_p": {"args": [], "hostname": [["List[str]", 0.33333333157191286], ["str", 0.33333333021725947], ["Callable", 2.688223308341285e-09], ["int", 1.3546533937378115e-09]], "kwargs": [], "self": []}, "q_name": "RudderInventory.get_host_info", "ret_exprs": ["return self.inventory['_meta']['hostvars'][hostname]", "return {}"], "ret_type": "", "ret_type_p": [["List[str]", 0.33333333157191286], ["str", 0.33333333021725947], ["Callable", 2.688223308341285e-09], ["int", 1.3546533937378115e-09]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Performs an API request ", "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [276, 19]], "fn_var_ln": {"body": [[264, 8], [264, 12]], "content": [[267, 22], [267, 29]], "data": [[272, 12], [272, 16]], "headers": [[256, 8], [256, 15]], "method": [[263, 8], [263, 14]], "response": [[267, 12], [267, 20]], "target": [[262, 8], [262, 14]]}, "fn_var_occur": {"body": [["response", "content", "self", "conn", "request", "target", "geturl", "method", "body", "headers"]], "content": [["response", "content", "self", "conn", "request", "target", "geturl", "method", "body", "headers"], ["data", "json", "loads", "content"]], "data": [["data", "json", "loads", "content"]], "headers": [["headers", "self", "token", "self", "version"], ["response", "content", "self", "conn", "request", "target", "geturl", "method", "body", "headers"]], "method": [["response", "content", "self", "conn", "request", "target", "geturl", "method", "body", "headers"]], "response": [["response", "content", "self", "conn", "request", "target", "geturl", "method", "body", "headers"]], "target": [["target", "urlparse", "self", "uri", "path"], ["response", "content", "self", "conn", "request", "target", "geturl", "method", "body", "headers"]]}, "name": "api_call", "params": {"path": "", "self": ""}, "params_descr": {"path": "", "self": ""}, "params_occur": {"path": [["target", "urlparse", "self", "uri", "path"]], "self": [["headers", "self", "token", "self", "version"], ["target", "urlparse", "self", "uri", "path"], ["response", "content", "self", "conn", "request", "target", "geturl", "method", "body", "headers"], ["self", "fail_with_error"], ["self", "fail_with_error"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.6972766785848412], ["List[Dict]", 0.13039343914783055], ["list", 0.08616494113366412]], "self": []}, "q_name": "RudderInventory.api_call", "ret_exprs": ["return data"], "ret_type": "", "ret_type_p": [["str", 0.10710723901982647]], "variables": {"body": "", "content": "", "data": "", "headers": "", "method": "", "response": "", "target": ""}, "variables_p": {"body": [["dict", 0.7796913592694956], ["str", 0.08994735502969918]], "content": [["dict", 0.9001076916580905], ["Tuple[dict]", 0.09989230834190957]], "data": [["str", 0.17670853197141148], ["List[str]", 0.1726592763335971], ["Dict[str, Any]", 0.13645593656047933], ["DefaultDict[Any, dict]", 0.11560580492874563], ["Dict[str, Dict[str, Any]]", 0.11276976490939786], ["Dict[str, List[str]]", 0.10902310500238398], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09171392136936014], ["list", 0.08506365892462465]], "headers": [["str", 0.5713415653307226], ["Dict[str, str]", 0.28461066385590306]], "method": [["dict", 0.5933771968344541], ["Dict[str, str]", 0.09867015311270907], ["List[str]", 0.09506250887499947]], "response": [["dict", 0.1742361549745181], ["Dict[str, Type[Any]]", 0.08330860626319754]], "target": [["bytes", 0.16822646402179028], ["str", 0.1175906698184532], ["Dict[str, Any]", 0.0838352401606488], ["inspire_mitmproxy.http.MITMRequest", 0.07788428637085772]]}}, {"docstring": {"func": "Logs an error to std err for ansible-playbook to consume and exit ", "long_descr": null, "ret": null}, "fn_lc": [[278, 4], [284, 19]], "fn_var_ln": {"err_msg": [[281, 12], [281, 19]]}, "fn_var_occur": {"err_msg": [["err_msg", "format", "err_msg", "err_msg", "err_operation", "err_operation"], ["sys", "stderr", "write", "err_msg"]]}, "name": "fail_with_error", "params": {"err_msg": "", "err_operation": "", "self": ""}, "params_descr": {"err_msg": "", "err_operation": "", "self": ""}, "params_occur": {"err_msg": [["err_msg", "format", "err_msg", "err_msg", "err_operation", "err_operation"], ["sys", "stderr", "write", "err_msg"]], "err_operation": [["err_msg", "format", "err_msg", "err_msg", "err_operation", "err_operation"]], "self": []}, "params_p": {"args": [], "err_msg": [["str", 0.27775219169273185], ["float", 0.18192844524380591], ["int", 0.11733214921813973], ["Optional[str]", 0.1017993380458264]], "err_operation": [["str", 0.5570945390328322], ["Tuple['cirq.Qid']", 0.11529447997539054], ["float", 0.05600910215895456]], "kwargs": [], "self": []}, "q_name": "RudderInventory.fail_with_error", "ret_exprs": [], "ret_type": "", "variables": {"err_msg": ""}, "variables_p": {"err_msg": [["str", 1.0000000000000002]]}}, {"docstring": {"func": "Converts a dict to a JSON object and dumps it as a formatted", "long_descr": "string", "ret": null}, "fn_lc": [[286, 4], [293, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "json_format_dict", "params": {"data": "", "pretty": "", "self": ""}, "params_descr": {"data": "", "pretty": "", "self": ""}, "params_occur": {"data": [["json", "dumps", "data", "sort_keys", "True", "indent"], ["json", "dumps", "data"]], "pretty": [], "self": []}, "params_p": {"args": [], "data": [["Dict[str, Any]", 0.40562182824604287], ["dict", 0.2773897086518541], ["Dict[str, str]", 0.07693258776240822]], "kwargs": [], "pretty": [["bool", 0.5015884337915886], ["Optional[bool]", 0.09901312741733721], ["list", 0.0914913735618803], ["memoryview", 0.0914913735618803], ["Iterable[bytes]", 0.07072926212961732], ["List[Dict]", 0.04741910158716508]], "self": []}, "q_name": "RudderInventory.json_format_dict", "ret_exprs": ["return json.dumps(data, sort_keys=True, indent=2)", "return json.dumps(data)"], "ret_type": "", "ret_type_p": [["bool", 0.19546575095163893], ["Dict[str, Any]", 0.10633191385761122], ["int", 0.10598869280065575], ["str", 0.09622176781879022], ["Dict[str, str]", 0.09617744638246765]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Converts 'bad' characters in a string to underscores so they can be", "long_descr": "used as Ansible variable names", "ret": null}, "fn_lc": [[295, 4], [299, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "to_safe", "params": {"self": "", "word": ""}, "params_descr": {"self": "", "word": ""}, "params_occur": {"self": [], "word": [["re", "sub", "word"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "word": [["str", 0.28659172677262185], ["int", 0.14507370181453486], ["List[str]", 0.07253685090726743], ["Tuple[float, float]", 0.0609685608712239]]}, "q_name": "RudderInventory.to_safe", "ret_exprs": ["return re.sub('[^A-Za-z0-9_]', '_', word)"], "ret_type": "", "ret_type_p": [["int", 0.4036086645864207], ["List[int]", 0.18871399263354283], ["type", 0.0996423078531519], ["List[dict]", 0.09798325440699783]], "variables": {}, "variables_p": {}}], "name": "RudderInventory", "q_name": "RudderInventory", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["sys", "os", "re", "argparse", "six", "httplib2", "http", "time", "time", "six", "moves", "configparser", "urlparse", "urlparse", "urllib", "parse", "urlparse", "json", "simplejson", "json"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 62}, "session_id": "n3NUMTHTIMR_fF-dsTN8jYuZxzONcEFsXB62FdWk1VY", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}