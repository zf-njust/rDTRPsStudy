{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [117, 57]], "cls_var_ln": {"pattern_lists": [[51, 4], [51, 17]], "patterns": [[36, 4], [36, 12]], "ranges_to_expand": [[75, 4], [75, 20]], "subscripts": [[63, 4], [63, 14]]}, "cls_var_occur": {"pattern_lists": [], "patterns": [], "ranges_to_expand": [], "subscripts": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [89, 80]], "fn_var_ln": {"fake_loader": [[87, 8], [87, 19]], "i": [[89, 8], [89, 14]], "v": [[86, 8], [86, 9]]}, "fn_var_occur": {"fake_loader": [["fake_loader", "DictDataLoader"], ["self", "i", "Inventory", "loader", "fake_loader", "variable_manager", "v", "host_list"]], "i": [["self", "i", "Inventory", "loader", "fake_loader", "variable_manager", "v", "host_list"]], "v": [["v", "VariableManager"], ["self", "i", "Inventory", "loader", "fake_loader", "variable_manager", "v", "host_list"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "i", "Inventory", "loader", "fake_loader", "variable_manager", "v", "host_list"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestInventory.setUp", "ret_exprs": [], "ret_type": "", "variables": {"fake_loader": "", "i": "", "v": ""}, "variables_p": {"fake_loader": [["List[str]", 0.2050636455825157], ["str", 0.13667924852270633], ["int", 0.10517367321654289], ["Set[str]", 0.08891722853938472], ["Tuple[Literal, Literal]", 0.08824010542848636]], "i": [["Pattern[str]", 0.6724810520298297], ["int", 0.2314502262516231], ["Counter[str]", 0.0960687217185471]], "v": [["Dict[str, str]", 0.18290057414922226], ["Dict[str, int]", 0.18290057414922226], ["Dict[str, Any]", 0.1455418028158663], ["List[bytes]", 0.10740017935177629], ["Dict[str, Union[int, str]]", 0.09145028707461113], ["Dict[str, float]", 0.09145028707461113], ["List[int]", 0.09145028707461113]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [98, 61]], "fn_var_ln": {"r": [[94, 12], [94, 13]]}, "fn_var_occur": {"r": [["r", "self", "patterns", "p"], ["self", "assertEqual", "r", "self", "i", "split_host_pattern", "p"], ["self", "assertEqual", "r", "self", "i", "split_host_pattern", "p"]]}, "name": "test_split_patterns", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "patterns"], ["r", "self", "patterns", "p"], ["self", "assertEqual", "r", "self", "i", "split_host_pattern", "p"], ["self", "pattern_lists"], ["self", "assertEqual", "r", "self", "i", "split_host_pattern", "p"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestInventory.test_split_patterns", "ret_exprs": [], "ret_type": "", "variables": {"r": ""}, "variables_p": {"r": [["str", 0.390210408999762], ["Counter[str]", 0.09696735970202532], ["Dict[str, bool]", 0.09192046697837836]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [111, 13]], "fn_var_ln": {"r": [[103, 12], [103, 13]]}, "fn_var_occur": {"r": [["r", "self", "subscripts", "s"], ["self", "assertEqual", "r", "self", "i", "_split_subscript", "s"], ["self", "assertEqual", "r", "self", "i", "_apply_subscript", "list", "string", "ascii_letters", "r"]]}, "name": "test_ranges", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "subscripts"], ["r", "self", "subscripts", "s"], ["self", "assertEqual", "r", "self", "i", "_split_subscript", "s"], ["self", "assertEqual", "r", "self", "i", "_apply_subscript", "list", "string", "ascii_letters", "r"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestInventory.test_ranges", "ret_exprs": [], "ret_type": "", "variables": {"r": ""}, "variables_p": {"r": [["int", 0.19546128463909973], ["float", 0.09630914023042932]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [117, 57]], "fn_var_ln": {"r": [[116, 12], [116, 13]]}, "fn_var_occur": {"r": [["r", "self", "ranges_to_expand", "e"], ["self", "assertEqual", "r", "expand_hostname_range", "e"]]}, "name": "test_expand_hostname_range", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "ranges_to_expand"], ["r", "self", "ranges_to_expand", "e"], ["self", "assertEqual", "r", "expand_hostname_range", "e"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestInventory.test_expand_hostname_range", "ret_exprs": [], "ret_type": "", "variables": {"r": ""}, "variables_p": {"r": [["int", 0.3353981648302129], ["Pattern[str]", 0.2538517462223585], ["List[int]", 0.10475561028303888], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08420884020251874]]}}], "name": "TestInventory", "q_name": "TestInventory", "variables": {"pattern_lists": "", "patterns": "", "ranges_to_expand": "", "subscripts": ""}, "variables_p": {"pattern_lists": [["List[str]", 0.39999999999999997], ["list", 0.3], ["str", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999]], "patterns": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "ranges_to_expand": [["int", 0.617866001950463], ["Type[int]", 0.1910669990247686], ["Dict[int, str]", 0.0955334995123843], ["List[int]", 0.0955334995123843]], "subscripts": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "string", "ansible", "compat", "tests", "unittest", "ansible", "compat", "tests", "mock", "patch", "MagicMock", "ansible", "errors", "AnsibleError", "AnsibleParserError", "ansible", "inventory", "Inventory", "ansible", "inventory", "expand_hosts", "expand_hostname_range", "ansible", "vars", "VariableManager", "units", "mock", "loader", "DictDataLoader"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 15}, "session_id": "gOd5XLO9iZiU8LaLIPDiRNfyw2qRRfSwo0o21vhwvfg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}