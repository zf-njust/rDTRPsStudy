{"error": null, "response": {"classes": [{"cls_lc": [[30, 0], [85, 75]], "cls_var_ln": {"test_data": [[32, 4], [32, 13]]}, "cls_var_occur": {"test_data": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [73, 39]], "fn_var_ln": {"env": [[73, 8], [73, 16]]}, "fn_var_occur": {"env": [["self", "env", "jinja2", "Environment"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "env", "jinja2", "Environment"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBackslashEscape.setUp", "ret_exprs": [], "ret_type": "", "variables": {"env": ""}, "variables_p": {"env": [["set", 0.12408321421154699], ["str", 0.11434552042671528], ["dict", 0.0452453339386799]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [76, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBackslashEscape.tearDown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [85, 75]], "fn_var_ln": {"args": [[84, 12], [84, 16]], "intermediate": [[81, 12], [81, 24]], "template": [[83, 12], [83, 20]]}, "fn_var_occur": {"args": [["args", "test"], ["self", "assertEquals", "template", "render", "args", "test"]], "intermediate": [["intermediate", "_escape_backslashes", "test", "self", "env"], ["self", "assertEquals", "intermediate", "test"], ["template", "jinja2", "Template", "intermediate"]], "template": [["template", "jinja2", "Template", "intermediate"], ["self", "assertEquals", "template", "render", "args", "test"]]}, "name": "test_backslash_escaping", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "test_data"], ["intermediate", "_escape_backslashes", "test", "self", "env"], ["self", "assertEquals", "intermediate", "test"], ["self", "assertEquals", "template", "render", "args", "test"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBackslashEscape.test_backslash_escaping", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "intermediate": "", "template": ""}, "variables_p": {"args": [["List[str]", 0.18983098783245034]], "intermediate": [["float", 0.192741503062861], ["str", 0.10968454755501696], ["List[int]", 0.08654176348616553]], "template": [["jinja2.environmenTemplate", 0.20487611136017309], ["list", 0.19090918378761174], ["str", 0.1215943861717205]]}}], "name": "TestBackslashEscape", "q_name": "TestBackslashEscape", "variables": {"test_data": ""}, "variables_p": {"test_data": [["Tuple[Tuple[str, str, int, int, str]]", 0.30000000000000004], ["str", 0.2], ["List[Tuple[str, Any]]", 0.1], ["List[Tuple[str, str]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str, str]", 0.1], ["Dict[str, Union[dict, int]]", 0.1], ["List[Tuple[str, Any, Any]]", 0.1]]}}, {"cls_lc": [[87, 0], [114, 121]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [90, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.setUp", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [93, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.tearDown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [96, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_zero_length_string", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEquals", "_count_newlines_from_end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.test_zero_length_string", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [99, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_short_string", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEquals", "_count_newlines_from_end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.test_short_string", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [102, 118]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_one_newline", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEquals", "_count_newlines_from_end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.test_one_newline", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [105, 122]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_multiple_newlines", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEquals", "_count_newlines_from_end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.test_multiple_newlines", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [108, 110]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_zero_newlines", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEquals", "_count_newlines_from_end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.test_zero_newlines", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [111, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_all_newlines", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEquals", "_count_newlines_from_end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.test_all_newlines", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [114, 121]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_mostly_newlines", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEquals", "_count_newlines_from_end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCountNewlines.test_mostly_newlines", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestCountNewlines", "q_name": "TestCountNewlines", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "jinja2", "ansible", "compat", "tests", "unittest", "ansible", "template", "_escape_backslashes", "_count_newlines_from_end"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 18}, "session_id": "ZZzweLFS6XJRaZqsS3dyXASvuiQ_yij1D_qe40S8KDo", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}