{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [66, 31]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 4], [36, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_empty_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "TypeError", "objects", "AnsibleVaultEncryptedUnicode"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultUnicodeNoVault.test_empty_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[38, 4], [40, 31]], "fn_var_ln": {"seq": [[39, 8], [39, 11]]}, "fn_var_occur": {"seq": [["seq", "encode"], ["self", "assert_values", "seq"]]}, "name": "test_empty_string_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assert_values", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultUnicodeNoVault.test_empty_string_init", "ret_exprs": [], "ret_type": "", "variables": {"seq": ""}, "variables_p": {"seq": [["int", 0.5088189196250515], ["bytes", 0.1949404913367202], ["str", 0.1949404913367202], ["Dict[str, int]", 0.10130009770150804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [44, 31]], "fn_var_ln": {"seq": [[43, 8], [43, 11]]}, "fn_var_occur": {"seq": [["self", "assert_values", "seq"]]}, "name": "test_empty_byte_string_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assert_values", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultUnicodeNoVault.test_empty_byte_string_init", "ret_exprs": [], "ret_type": "", "variables": {"seq": ""}, "variables_p": {"seq": [["int", 0.28115025303616414], ["list", 0.27853544383762585], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.16726541043149606], ["Tuple[int, int]", 0.1005698461236693], ["Dict[str, str]", 0.08884634135529654], ["Tuple[int, int, int, int]", 0.08363270521574803]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [50, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_values", "params": {"avu": "", "self": "", "seq": ""}, "params_descr": {"avu": "", "self": "", "seq": ""}, "params_occur": {"avu": [["self", "assertIsInstance", "avu", "objects", "AnsibleVaultEncryptedUnicode"], ["self", "assertTrue", "avu", "vault", "None"], ["self", "assertNotEquals", "avu", "seq"]], "self": [["self", "assertIsInstance", "avu", "objects", "AnsibleVaultEncryptedUnicode"], ["self", "assertTrue", "avu", "vault", "None"], ["self", "assertNotEquals", "avu", "seq"]], "seq": [["self", "assertNotEquals", "avu", "seq"]]}, "params_p": {"args": [], "avu": [["BinaryIO", 0.11737458094647361]], "kwargs": [], "self": [], "seq": [["bytes", 0.36680710687346146]]}, "q_name": "TestAnsibleVaultUnicodeNoVault._assert_values", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [54, 37]], "fn_var_ln": {"avu": [[53, 8], [53, 11]]}, "fn_var_occur": {"avu": [["avu", "objects", "AnsibleVaultEncryptedUnicode", "seq"], ["self", "_assert_values", "avu", "seq"]]}, "name": "assert_values", "params": {"self": "", "seq": ""}, "params_descr": {"self": "", "seq": ""}, "params_occur": {"self": [["self", "_assert_values", "avu", "seq"]], "seq": [["avu", "objects", "AnsibleVaultEncryptedUnicode", "seq"], ["self", "_assert_values", "avu", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "seq": [["bytes", 0.2855548997392907], ["str", 0.18701261165348593]]}, "q_name": "TestAnsibleVaultUnicodeNoVault.assert_values", "ret_exprs": [], "ret_type": "", "variables": {"avu": ""}, "variables_p": {"avu": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [58, 31]], "fn_var_ln": {"seq": [[57, 8], [57, 11]]}, "fn_var_occur": {"seq": [["seq", "encode"], ["self", "assert_values", "seq"]]}, "name": "test_single_char", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assert_values", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultUnicodeNoVault.test_single_char", "ret_exprs": [], "ret_type": "", "variables": {"seq": ""}, "variables_p": {"seq": [["int", 0.5088189196250515], ["bytes", 0.1949404913367202], ["str", 0.1949404913367202], ["Dict[str, int]", 0.10130009770150804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [62, 31]], "fn_var_ln": {"seq": [[61, 8], [61, 11]]}, "fn_var_occur": {"seq": [["self", "assert_values", "seq"]]}, "name": "test_string", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assert_values", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultUnicodeNoVault.test_string", "ret_exprs": [], "ret_type": "", "variables": {"seq": ""}, "variables_p": {"seq": [["int", 0.28115025303616414], ["list", 0.27853544383762585], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.16726541043149606], ["Tuple[int, int]", 0.1005698461236693], ["Dict[str, str]", 0.08884634135529654], ["Tuple[int, int, int, int]", 0.08363270521574803]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [66, 31]], "fn_var_ln": {"seq": [[65, 8], [65, 11]]}, "fn_var_occur": {"seq": [["seq", "encode"], ["self", "assert_values", "seq"]]}, "name": "test_byte_string", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assert_values", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultUnicodeNoVault.test_byte_string", "ret_exprs": [], "ret_type": "", "variables": {"seq": ""}, "variables_p": {"seq": [["int", 0.5088189196250515], ["bytes", 0.1949404913367202], ["str", 0.1949404913367202], ["Dict[str, int]", 0.10130009770150804]]}}], "name": "TestAnsibleVaultUnicodeNoVault", "q_name": "TestAnsibleVaultUnicodeNoVault", "variables": {}, "variables_p": {}}, {"cls_lc": [[69, 0], [129, 36]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[70, 4], [77, 36]], "fn_var_ln": {"good_vault": [[72, 8], [72, 23]], "vault": [[77, 8], [77, 18]], "vault_password": [[71, 8], [71, 27]], "wrong_vault": [[75, 8], [75, 24]], "wrong_vault_password": [[74, 8], [74, 33]]}, "fn_var_occur": {"good_vault": [["self", "good_vault", "vault", "VaultLib", "self", "vault_password"], ["self", "vault", "self", "good_vault"]], "vault": [["self", "good_vault", "vault", "VaultLib", "self", "vault_password"], ["self", "wrong_vault", "vault", "VaultLib", "self", "wrong_vault_password"], ["self", "vault", "self", "good_vault"]], "vault_password": [["self", "vault_password"], ["self", "good_vault", "vault", "VaultLib", "self", "vault_password"]], "wrong_vault": [["self", "wrong_vault", "vault", "VaultLib", "self", "wrong_vault_password"]], "wrong_vault_password": [["self", "wrong_vault_password"], ["self", "wrong_vault", "vault", "VaultLib", "self", "wrong_vault_password"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "vault_password"], ["self", "good_vault", "vault", "VaultLib", "self", "vault_password"], ["self", "wrong_vault_password"], ["self", "wrong_vault", "vault", "VaultLib", "self", "wrong_vault_password"], ["self", "vault", "self", "good_vault"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.setUp", "ret_exprs": [], "ret_type": "", "variables": {"good_vault": "", "vault": "", "vault_password": "", "wrong_vault": "", "wrong_vault_password": ""}, "variables_p": {"good_vault": [["int", 0.3013405838335945], ["float", 0.18856838827719838], ["Union[Literal, Literal]", 0.09499491472118585], ["str", 0.09182471548746696], ["dict", 0.08350780951389981]], "vault": [["str", 0.6077612243022225], ["int", 0.2575387661094905]], "vault_password": [["str", 0.5961650309666269], ["int", 0.314569708197444], ["bool", 0.0892652608359292]], "wrong_vault": [["int", 0.3], ["Dict[str, str]", 0.3], ["str", 0.19999999999999998]], "wrong_vault_password": [["int", 0.3882436838910928], ["bytes", 0.3327732966996116], ["str", 0.27898301940929565]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [80, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_loader", "params": {"self": "", "stream": ""}, "params_descr": {"self": "", "stream": ""}, "params_occur": {"self": [["AnsibleLoader", "stream", "vault_password", "self", "vault_password"]], "stream": [["AnsibleLoader", "stream", "vault_password", "self", "vault_password"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "stream": []}, "q_name": "TestAnsibleVaultEncryptedUnicode._loader", "ret_exprs": ["return AnsibleLoader(stream, vault_password=self.vault_password)"], "ret_type": "", "ret_type_p": [["str", 0.2756295593508511], ["Optional[str]", 0.23505820328917082], ["bool", 0.1901906661811427], ["Dict[str, str]", 0.11564033543844017]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [84, 35]], "fn_var_ln": {"aveu": [[83, 8], [83, 12]]}, "fn_var_occur": {"aveu": [["aveu", "self", "_from_plaintext"], ["self", "_dump_load_cycle", "aveu"]]}, "name": "test_dump_load_cycle", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["aveu", "self", "_from_plaintext"], ["self", "_dump_load_cycle", "aveu"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.test_dump_load_cycle", "ret_exprs": [], "ret_type": "", "variables": {"aveu": ""}, "variables_p": {"aveu": [["int", 0.6139559758122936], ["float", 0.1947539784208825], ["list", 0.09564502288341192], ["List[Callable[[], bool]]", 0.09564502288341192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [91, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_values", "params": {"avu": "", "self": "", "seq": ""}, "params_descr": {"avu": "", "self": "", "seq": ""}, "params_occur": {"avu": [["self", "assertIsInstance", "avu", "objects", "AnsibleVaultEncryptedUnicode"], ["self", "assertEquals", "avu", "seq"], ["self", "assertTrue", "avu", "vault", "self", "vault"], ["self", "assertIsInstance", "avu", "vault", "vault", "VaultLib"]], "self": [["self", "assertIsInstance", "avu", "objects", "AnsibleVaultEncryptedUnicode"], ["self", "assertEquals", "avu", "seq"], ["self", "assertTrue", "avu", "vault", "self", "vault"], ["self", "assertIsInstance", "avu", "vault", "vault", "VaultLib"]], "seq": [["self", "assertEquals", "avu", "seq"]]}, "params_p": {"args": [], "avu": [["BinaryIO", 0.1254491085852524]], "kwargs": [], "self": [], "seq": [["bytes", 0.36680710687346146]]}, "q_name": "TestAnsibleVaultEncryptedUnicode.assert_values", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [94, 89]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_from_plaintext", "params": {"self": "", "seq": ""}, "params_descr": {"self": "", "seq": ""}, "params_occur": {"self": [["objects", "AnsibleVaultEncryptedUnicode", "from_plaintext", "seq", "vault", "self", "vault"]], "seq": [["objects", "AnsibleVaultEncryptedUnicode", "from_plaintext", "seq", "vault", "self", "vault"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "seq": [["str", 0.39474323018641577]]}, "q_name": "TestAnsibleVaultEncryptedUnicode._from_plaintext", "ret_exprs": ["return objects.AnsibleVaultEncryptedUnicode.from_plaintext(seq, vault=self.vault)"], "ret_type": "", "ret_type_p": [["int", 0.40424604658765756], ["dict", 0.0922159123977918]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [99, 18]], "fn_var_ln": {"avu": [[97, 8], [97, 11]], "vault": [[98, 8], [98, 17]]}, "fn_var_occur": {"avu": [["avu", "objects", "AnsibleVaultEncryptedUnicode", "ciphertext"], ["avu", "vault", "self", "vault"]], "vault": [["avu", "vault", "self", "vault"]]}, "name": "_from_ciphertext", "params": {"ciphertext": "", "self": ""}, "params_descr": {"ciphertext": "", "self": ""}, "params_occur": {"ciphertext": [["avu", "objects", "AnsibleVaultEncryptedUnicode", "ciphertext"]], "self": [["avu", "vault", "self", "vault"]]}, "params_p": {"args": [], "ciphertext": [["str", 0.39557264039205026], ["int", 0.10749844945320507], ["bytes", 0.08167599717203211]], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode._from_ciphertext", "ret_exprs": ["return avu"], "ret_type": "", "ret_type_p": [["str", 0.09999999999999999], ["Callable", 0.09999999999999999], ["Callable[[None, None], bool]", 0.09999999999999999]], "variables": {"avu": "", "vault": ""}, "variables_p": {"avu": [], "vault": [["Dict[str, str]", 0.19999999999999998], ["List[Tuple[str, str, Any]]", 0.19999999999999998], ["str", 0.19999999999999998], ["Dict[str, Union[dict, Any]]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[str]", 0.09999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [102, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_empty_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "TypeError", "objects", "AnsibleVaultEncryptedUnicode"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.test_empty_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [107, 35]], "fn_var_ln": {"avu": [[106, 8], [106, 11]], "seq": [[105, 8], [105, 11]]}, "fn_var_occur": {"avu": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]], "seq": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "name": "test_empty_string_init_from_plaintext", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.test_empty_string_init_from_plaintext", "ret_exprs": [], "ret_type": "", "variables": {"avu": "", "seq": ""}, "variables_p": {"avu": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]], "seq": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [112, 35]], "fn_var_ln": {"avu": [[111, 8], [111, 11]], "seq": [[110, 8], [110, 11]]}, "fn_var_occur": {"avu": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]], "seq": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "name": "test_empty_unicode_init_from_plaintext", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.test_empty_unicode_init_from_plaintext", "ret_exprs": [], "ret_type": "", "variables": {"avu": "", "seq": ""}, "variables_p": {"avu": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]], "seq": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [117, 35]], "fn_var_ln": {"avu": [[116, 8], [116, 11]], "seq": [[115, 8], [115, 11]]}, "fn_var_occur": {"avu": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]], "seq": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "name": "test_string_from_plaintext", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.test_string_from_plaintext", "ret_exprs": [], "ret_type": "", "variables": {"avu": "", "seq": ""}, "variables_p": {"avu": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]], "seq": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[119, 4], [122, 35]], "fn_var_ln": {"avu": [[121, 8], [121, 11]], "seq": [[120, 8], [120, 11]]}, "fn_var_occur": {"avu": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]], "seq": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "name": "test_unicode_from_plaintext", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.test_unicode_from_plaintext", "ret_exprs": [], "ret_type": "", "variables": {"avu": "", "seq": ""}, "variables_p": {"avu": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]], "seq": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[125, 4], [129, 36]], "fn_var_ln": {"avu": [[128, 8], [128, 11]], "seq": [[126, 8], [126, 11]], "vault": [[127, 8], [127, 18]]}, "fn_var_occur": {"avu": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]], "seq": [["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]], "vault": [["self", "vault", "self", "wrong_vault"]]}, "name": "test_empty_string_wrong_password", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "vault", "self", "wrong_vault"], ["avu", "self", "_from_plaintext", "seq"], ["self", "assert_values", "avu", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnsibleVaultEncryptedUnicode.test_empty_string_wrong_password", "ret_exprs": [], "ret_type": "", "variables": {"avu": "", "seq": "", "vault": ""}, "variables_p": {"avu": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]], "seq": [["Sized", 0.20738952501816718], ["List[str]", 0.1342543603452543], ["Dict[int, int]", 0.08858781047113186], ["int", 0.08567661428096343]], "vault": [["str", 0.30000000000000004], ["Set[str]", 0.30000000000000004], ["List[int]", 0.1], ["int", 0.1]]}}], "name": "TestAnsibleVaultEncryptedUnicode", "q_name": "TestAnsibleVaultEncryptedUnicode", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "ansible", "compat", "tests", "unittest", "ansible", "parsing", "vault", "ansible", "parsing", "yaml", "loader", "AnsibleLoader", "ansible", "parsing", "yaml", "objects", "units", "mock", "yaml_helper", "YamlTestUtils"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 54}, "session_id": "YqDdFFOB_yeWnbKo7u8IyHV9OGEjCwt6tkKRN4pHPMM", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}