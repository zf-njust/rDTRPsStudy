{"error": null, "response": {"classes": [{"cls_lc": [[30, 0], [61, 96]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[32, 4], [33, 35]], "fn_var_ln": {"_loader": [[33, 8], [33, 20]]}, "fn_var_occur": {"_loader": [["self", "_loader", "DataLoader"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_loader", "DataLoader"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataLoader.setUp", "ret_exprs": [], "ret_type": "", "variables": {"_loader": ""}, "variables_p": {"_loader": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 4], [36, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataLoader.tearDown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [42, 51]], "fn_var_ln": {"output": [[41, 8], [41, 14]], "return_value": [[40, 8], [40, 29]]}, "fn_var_occur": {"output": [["output", "self", "_loader", "load_from_file"], ["self", "assertEqual", "output", "dict", "a", "b", "c"]], "return_value": [["mock_def", "return_value", "True"]]}, "name": "test_parse_json_from_file", "params": {"mock_def": "", "self": ""}, "params_descr": {"mock_def": "", "self": ""}, "params_occur": {"mock_def": [["mock_def", "return_value", "True"]], "self": [["output", "self", "_loader", "load_from_file"], ["self", "assertEqual", "output", "dict", "a", "b", "c"]]}, "params_p": {"args": [], "kwargs": [], "mock_def": [["mock.MagicMock", 0.09690431902819022]], "self": []}, "q_name": "TestDataLoader.test_parse_json_from_file", "ret_exprs": [], "ret_type": "", "variables": {"output": "", "return_value": ""}, "variables_p": {"output": [["list", 0.5161775035074863], ["Dict[str, Any]", 0.10131588929814096], ["float", 0.09248590269608134], ["int", 0.08657322624068116], ["str", 0.08461844180742979]], "return_value": [["Dict[str, Dict[str, Any]]", 0.26291225653730227], ["List[str]", 0.16013167465611008], ["list", 0.1348388570268133], ["Tuple[int, int]", 0.10470838098064467], ["List[Tuple[str, str]]", 0.09792751046162841], ["int", 0.08392310784632474], ["tests.mock.zwave.MockNode", 0.08071803112473593], ["mock._Call", 0.0748401813664404]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [52, 51]], "fn_var_ln": {"output": [[51, 8], [51, 14]], "return_value": [[46, 8], [46, 29]]}, "fn_var_occur": {"output": [["output", "self", "_loader", "load_from_file"], ["self", "assertEqual", "output", "dict", "a", "b", "c"]], "return_value": [["mock_def", "return_value", "True"]]}, "name": "test_parse_yaml_from_file", "params": {"mock_def": "", "self": ""}, "params_descr": {"mock_def": "", "self": ""}, "params_occur": {"mock_def": [["mock_def", "return_value", "True"]], "self": [["output", "self", "_loader", "load_from_file"], ["self", "assertEqual", "output", "dict", "a", "b", "c"]]}, "params_p": {"args": [], "kwargs": [], "mock_def": [["mock.MagicMock", 0.09690431902819022]], "self": []}, "q_name": "TestDataLoader.test_parse_yaml_from_file", "ret_exprs": [], "ret_type": "", "variables": {"output": "", "return_value": ""}, "variables_p": {"output": [["list", 0.5161775035074863], ["Dict[str, Any]", 0.10131588929814096], ["float", 0.09248590269608134], ["int", 0.08657322624068116], ["str", 0.08461844180742979]], "return_value": [["Dict[str, Dict[str, Any]]", 0.26291225653730227], ["List[str]", 0.16013167465611008], ["list", 0.1348388570268133], ["Tuple[int, int]", 0.10470838098064467], ["List[Tuple[str, str]]", 0.09792751046162841], ["int", 0.08392310784632474], ["tests.mock.zwave.MockNode", 0.08071803112473593], ["mock._Call", 0.0748401813664404]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [61, 96]], "fn_var_ln": {"return_value": [[56, 8], [56, 29]]}, "fn_var_occur": {"return_value": [["mock_def", "return_value", "True"]]}, "name": "test_parse_fail_from_file", "params": {"mock_def": "", "self": ""}, "params_descr": {"mock_def": "", "self": ""}, "params_occur": {"mock_def": [["mock_def", "return_value", "True"]], "self": [["self", "assertRaises", "AnsibleParserError", "self", "_loader", "load_from_file"]]}, "params_p": {"args": [], "kwargs": [], "mock_def": [["mock.MagicMock", 0.09690431902819022]], "self": []}, "q_name": "TestDataLoader.test_parse_fail_from_file", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["Dict[str, Dict[str, Any]]", 0.26291225653730227], ["List[str]", 0.16013167465611008], ["list", 0.1348388570268133], ["Tuple[int, int]", 0.10470838098064467], ["List[Tuple[str, str]]", 0.09792751046162841], ["int", 0.08392310784632474], ["tests.mock.zwave.MockNode", 0.08071803112473593], ["mock._Call", 0.0748401813664404]]}}], "name": "TestDataLoader", "q_name": "TestDataLoader", "variables": {}, "variables_p": {}}, {"cls_lc": [[63, 0], [88, 53]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [67, 50]], "fn_var_ln": {"_loader": [[66, 8], [66, 20]]}, "fn_var_occur": {"_loader": [["self", "_loader", "DataLoader"], ["self", "_loader", "set_vault_password"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_loader", "DataLoader"], ["self", "_loader", "set_vault_password"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataLoaderWithVault.setUp", "ret_exprs": [], "ret_type": "", "variables": {"_loader": ""}, "variables_p": {"_loader": [["int", 0.26794891136650834], ["Dict[str, int]", 0.2010661626990219], ["list", 0.18562639114969348], ["Final", 0.08899892226033589], ["Dict[str, List[str]]", 0.077391586199707], ["str", 0.07443580093745301]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [70, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataLoaderWithVault.tearDown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [88, 53]], "fn_var_ln": {"builtins_name": [[84, 12], [84, 25]], "output": [[87, 12], [87, 18]], "vaulted_data": [[74, 8], [74, 20]]}, "fn_var_occur": {"builtins_name": [["patch", "builtins_name", "mock_open", "read_data", "vaulted_data", "encode"]], "output": [["output", "self", "_loader", "load_from_file"], ["self", "assertEqual", "output", "dict", "foo"]], "vaulted_data": [["patch", "builtins_name", "mock_open", "read_data", "vaulted_data", "encode"]]}, "name": "test_parse_from_vault_1_1_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "_loader", "load_from_file"], ["self", "assertEqual", "output", "dict", "foo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataLoaderWithVault.test_parse_from_vault_1_1_file", "ret_exprs": [], "ret_type": "", "variables": {"builtins_name": "", "output": "", "vaulted_data": ""}, "variables_p": {"builtins_name": [["str", 0.8740054382718875], ["Dict[str, List[str]]", 0.12599456172811263]], "output": [["List[Awaitable[Any]]", 0.18381814949136255], ["List[tuple]", 0.12863554856485515], ["str", 0.1042518252786441], ["bytes", 0.10038264054426875], ["Collection[Any]", 0.09736112592356873], ["Tuple[None]", 0.09006534217649782]], "vaulted_data": [["str", 0.4987091927750796], ["list", 0.11688843870597349], ["Dict[str, Union[dict, Any, Any]]", 0.10841512710017999], ["Dict[str, bool]", 0.09997083570727652], ["dict", 0.08895969106048626], ["Dict[str, str]", 0.08705671465100427]]}}], "name": "TestDataLoaderWithVault", "q_name": "TestDataLoaderWithVault", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "six", "PY3", "ansible", "compat", "tests", "unittest", "ansible", "compat", "tests", "mock", "patch", "mock_open", "ansible", "errors", "AnsibleParserError", "ansible", "parsing", "dataloader", "DataLoader"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 22}, "session_id": "ETn23Hb0hrpF6SPypWi46XWRqCYeqCsfh1cql0MCl40", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}