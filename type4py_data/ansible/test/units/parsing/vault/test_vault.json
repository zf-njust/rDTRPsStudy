{"error": null, "response": {"classes": [{"cls_lc": [[63, 0], [87, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [66, 52]], "fn_var_ln": {"b_data": [[65, 8], [65, 14]]}, "fn_var_occur": {"b_data": [["self", "assertFalse", "vault", "is_encrypted", "b_data"]]}, "name": "test_bytes_not_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted", "b_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncrypted.test_bytes_not_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_data": ""}, "variables_p": {"b_data": [["dict", 0.4884129886906926], ["Dict[Any, Dict[str, float]]", 0.1164441077075205], ["Dict[str, int]", 0.11000918672876243], ["Dict[str, str]", 0.0980286729077706], ["Dict[int, str]", 0.09463632886395043], ["Type[Dict[str, Any]]", 0.09246871510130346]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [70, 51]], "fn_var_ln": {"b_data": [[69, 8], [69, 14]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["self", "assertTrue", "vault", "is_encrypted", "b_data"]]}, "name": "test_bytes_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted", "b_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncrypted.test_bytes_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_data": ""}, "variables_p": {"b_data": [["Dict[str, Any]", 0.2187665011883901], ["Dict[str, int]", 0.10938325059419506], ["Tuple[List[str], List[str]]", 0.08476326276483562]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [74, 52]], "fn_var_ln": {"b_data": [[73, 8], [73, 14]]}, "fn_var_occur": {"b_data": [["b_data", "to_text"], ["self", "assertFalse", "vault", "is_encrypted", "b_data"]]}, "name": "test_text_not_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted", "b_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncrypted.test_text_not_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_data": ""}, "variables_p": {"b_data": [["dict", 0.4006400616098382], ["str", 0.33359166057515954], ["Dict[Any, Dict[str, Any]]", 0.09178440584814768], ["KeysView[str]", 0.08758578206932417], ["Dict[Any, Dict[str, float]]", 0.08639808989753031]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 4], [78, 51]], "fn_var_ln": {"b_data": [[77, 8], [77, 14]]}, "fn_var_occur": {"b_data": [["b_data", "to_text", "hexlify"], ["self", "assertTrue", "vault", "is_encrypted", "b_data"]]}, "name": "test_text_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted", "b_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncrypted.test_text_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_data": ""}, "variables_p": {"b_data": [["list", 0.4261147249409852], ["Dict[Any, List[int]]", 0.24128395123140572], ["int", 0.13152163754056906], ["Dict[str, Any]", 0.10084168761193447], ["List[Dict[str, Any]]", 0.10023799867510583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [82, 50]], "fn_var_ln": {"data": [[81, 8], [81, 12]]}, "fn_var_occur": {"data": [["self", "assertFalse", "vault", "is_encrypted", "data"]]}, "name": "test_invalid_text_not_ascii", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted", "data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncrypted.test_invalid_text_not_ascii", "ret_exprs": [], "ret_type": "", "variables": {"data": ""}, "variables_p": {"data": [["dict", 0.3012298626477372], ["str", 0.19682332007051398], ["Dict[str, Any]", 0.0943428798067352], ["OrderedDict", 0.08572821708515661]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[84, 4], [87, 52]], "fn_var_ln": {"b_data": [[86, 8], [86, 14]], "data": [[85, 8], [85, 12]]}, "fn_var_occur": {"b_data": [["b_data", "to_bytes", "data", "encoding"], ["self", "assertFalse", "vault", "is_encrypted", "b_data"]], "data": [["b_data", "to_bytes", "data", "encoding"]]}, "name": "test_invalid_bytes_not_ascii", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted", "b_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncrypted.test_invalid_bytes_not_ascii", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "data": ""}, "variables_p": {"b_data": [["bytes", 0.906021984074816], ["Dict[str, bytes]", 0.09397801592518384]], "data": [["int", 0.4933497144616264], ["os.terminal_size", 0.19959808521719402], ["Dict[str, str]", 0.13784616609223393], ["List[str]", 0.0868537301245045], ["Type[List[Any]]", 0.08235230410444104]]}}], "name": "TestVaultIsEncrypted", "q_name": "TestVaultIsEncrypted", "variables": {}, "variables_p": {}}, {"cls_lc": [[90, 0], [152, 92]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [94, 60]], "fn_var_ln": {"b_data": [[92, 8], [92, 14]], "b_data_fo": [[93, 8], [93, 17]]}, "fn_var_occur": {"b_data": [["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["self", "assertFalse", "vault", "is_encrypted_file", "b_data_fo"]]}, "name": "test_binary_file_handle_not_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted_file", "b_data_fo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_binary_file_handle_not_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": ""}, "variables_p": {"b_data": [["str", 0.8328679909087796], ["bytes", 0.08543209064379687]], "b_data_fo": [["io.StringIO", 0.5041971869386908], ["Dict[str, io.BytesIO]", 0.2815166339008645], ["io.BytesIO", 0.21428617916044468]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [99, 58]], "fn_var_ln": {"data": [[97, 8], [97, 12]], "data_fo": [[98, 8], [98, 15]]}, "fn_var_occur": {"data": [["data_fo", "io", "StringIO", "data"]], "data_fo": [["data_fo", "io", "StringIO", "data"], ["self", "assertFalse", "vault", "is_encrypted_file", "data_fo"]]}, "name": "test_text_file_handle_not_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted_file", "data_fo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_text_file_handle_not_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "data_fo": ""}, "variables_p": {"data": [["io.StringIO", 0.5376484638834231], ["os.stat_result", 0.21514762326140455], ["str", 0.12989042355663571], ["io.TextIOWrapper", 0.11731348929853667]], "data_fo": [["io.StringIO", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [104, 59]], "fn_var_ln": {"b_data": [[102, 8], [102, 14]], "b_data_fo": [[103, 8], [103, 17]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo"]]}, "name": "test_binary_file_handle_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_binary_file_handle_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": ""}, "variables_p": {"b_data": [["bytes", 0.9006995186540444], ["io.BufferedReader", 0.09930048134595544]], "b_data_fo": [["io.StringIO", 0.5041971869386908], ["Dict[str, io.BytesIO]", 0.2815166339008645], ["io.BytesIO", 0.21428617916044468]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [109, 57]], "fn_var_ln": {"data": [[107, 8], [107, 12]], "data_fo": [[108, 8], [108, 15]]}, "fn_var_occur": {"data": [["data", "to_text", "hexlify"], ["data_fo", "io", "StringIO", "data"]], "data_fo": [["data_fo", "io", "StringIO", "data"], ["self", "assertTrue", "vault", "is_encrypted_file", "data_fo"]]}, "name": "test_text_file_handle_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted_file", "data_fo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_text_file_handle_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "data_fo": ""}, "variables_p": {"data": [["io.StringIO", 0.38979420590308866], ["os.stat_result", 0.26111729820055996], ["io.TextIOWrapper", 0.19144605901396472], ["Tuple[int]", 0.07802826165709155]], "data_fo": [["io.StringIO", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[111, 4], [115, 60]], "fn_var_ln": {"b_data": [[113, 8], [113, 14]], "b_data_fo": [[114, 8], [114, 17]], "data": [[112, 8], [112, 12]]}, "fn_var_occur": {"b_data": [["b_data", "to_bytes", "data"], ["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["self", "assertFalse", "vault", "is_encrypted_file", "b_data_fo"]], "data": [["b_data", "to_bytes", "data"]]}, "name": "test_binary_file_handle_invalid", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted_file", "b_data_fo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_binary_file_handle_invalid", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": "", "data": ""}, "variables_p": {"b_data": [["bytes", 0.69896619328695], ["os.stat_result", 0.30103380671305]], "b_data_fo": [["io.StringIO", 0.5041971869386908], ["Dict[str, io.BytesIO]", 0.2815166339008645], ["io.BytesIO", 0.21428617916044468]], "data": [["bytes", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[117, 4], [120, 58]], "fn_var_ln": {"data": [[118, 8], [118, 12]], "data_fo": [[119, 8], [119, 15]]}, "fn_var_occur": {"data": [["data_fo", "io", "StringIO", "data"]], "data_fo": [["data_fo", "io", "StringIO", "data"], ["self", "assertFalse", "vault", "is_encrypted_file", "data_fo"]]}, "name": "test_text_file_handle_invalid", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "vault", "is_encrypted_file", "data_fo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_text_file_handle_invalid", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "data_fo": ""}, "variables_p": {"data": [["io.StringIO", 0.5376484638834231], ["os.stat_result", 0.21514762326140455], ["str", 0.12989042355663571], ["io.TextIOWrapper", 0.11731348929853667]], "data_fo": [["io.StringIO", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[122, 4], [126, 59]], "fn_var_ln": {"b_data": [[123, 8], [123, 14]], "b_data_fo": [[124, 8], [124, 17]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["b_data_fo", "read"], ["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo"]]}, "name": "test_file_already_read_from_finds_header", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_file_already_read_from_finds_header", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": ""}, "variables_p": {"b_data": [["bytes", 0.9006995186540444], ["io.BufferedReader", 0.09930048134595544]], "b_data_fo": [["os.stat_result", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [133, 46]], "fn_var_ln": {"b_data": [[129, 8], [129, 14]], "b_data_fo": [[130, 8], [130, 17]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["b_data_fo", "read"], ["vault", "is_encrypted_file", "b_data_fo"], ["self", "assertEqual", "b_data_fo", "tell"]]}, "name": "test_file_already_read_from_saves_file_pos", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "b_data_fo", "tell"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_file_already_read_from_saves_file_pos", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": ""}, "variables_p": {"b_data": [["bytes", 0.9006995186540444], ["io.BufferedReader", 0.09930048134595544]], "b_data_fo": [["os.stat_result", 0.6287926114558121], ["str", 0.10735890053183786], ["io.StringIO", 0.09094698886453126]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[135, 4], [138, 72]], "fn_var_ln": {"b_data": [[136, 8], [136, 14]], "b_data_fo": [[137, 8], [137, 17]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "start_pos"]]}, "name": "test_file_with_offset", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "start_pos"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_file_with_offset", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": ""}, "variables_p": {"b_data": [["bytes", 0.9006995186540444], ["io.BufferedReader", 0.09930048134595544]], "b_data_fo": [["io.StringIO", 0.5002285919462011], ["Dict[str, io.BytesIO]", 0.2860302152691552], ["io.BytesIO", 0.21374119278464393]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [145, 79]], "fn_var_ln": {"b_data": [[143, 8], [143, 14]], "b_data_fo": [[144, 8], [144, 17]], "vault_length": [[142, 8], [142, 20]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["vault_length", "len", "b_data"], ["b_data", "b_data", "encode"], ["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "count", "vault_length"]], "vault_length": [["vault_length", "len", "b_data"], ["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "count", "vault_length"]]}, "name": "test_file_with_count", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "count", "vault_length"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_file_with_count", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": "", "vault_length": ""}, "variables_p": {"b_data": [["bytes", 0.4115025649479139], ["str", 0.11176906911649659], ["List[str]", 0.11149716500564387], ["Dict[Any, str]", 0.0936722541951171], ["int", 0.09284800249587723], ["List[Dict[str, Any]]", 0.09220252736298927], ["Tuple[Literal, Literal, Literal, Literal]", 0.08650841687596203]], "b_data_fo": [["io.StringIO", 0.5005436343274077], ["Dict[str, io.BytesIO]", 0.2863592809021288], ["io.BytesIO", 0.21309708477046357]], "vault_length": [["cmk.base.plugins.agent_based.mem_used.MemBytes", 0.18792652999922022], ["bytes", 0.11315485855333136], ["str", 0.10125920513249954], ["list", 0.09631469019018955], ["os.terminal_size", 0.09020151439470452]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[147, 4], [152, 92]], "fn_var_ln": {"b_data": [[150, 8], [150, 14]], "b_data_fo": [[151, 8], [151, 17]], "vault_length": [[149, 8], [149, 20]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["vault_length", "len", "b_data"], ["b_data", "b_data", "encode"], ["b_data_fo", "io", "BytesIO", "b_data"]], "b_data_fo": [["b_data_fo", "io", "BytesIO", "b_data"], ["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "start_pos", "count", "vault_length"]], "vault_length": [["vault_length", "len", "b_data"], ["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "start_pos", "count", "vault_length"]]}, "name": "test_file_with_offset_and_count", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "vault", "is_encrypted_file", "b_data_fo", "start_pos", "count", "vault_length"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultIsEncryptedFile.test_file_with_offset_and_count", "ret_exprs": [], "ret_type": "", "variables": {"b_data": "", "b_data_fo": "", "vault_length": ""}, "variables_p": {"b_data": [["bytes", 0.4115025649479139], ["str", 0.11176906911649659], ["List[str]", 0.11149716500564387], ["Dict[Any, str]", 0.0936722541951171], ["int", 0.09284800249587723], ["List[Dict[str, Any]]", 0.09220252736298927], ["Tuple[Literal, Literal, Literal, Literal]", 0.08650841687596203]], "b_data_fo": [["io.StringIO", 0.40273642954830846], ["Dict[str, io.BytesIO]", 0.3827675361170215], ["io.BytesIO", 0.2144960343346698]], "vault_length": [["int", 0.6509219729887596], ["list", 0.24202976169230966]]}}], "name": "TestVaultIsEncryptedFile", "q_name": "TestVaultIsEncryptedFile", "variables": {}, "variables_p": {}}, {"cls_lc": [[155, 0], [214, 82]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[156, 4], [157, 47]], "fn_var_ln": {"vault_cipher": [[157, 8], [157, 25]]}, "fn_var_occur": {"vault_cipher": [["self", "vault_cipher", "vault", "VaultAES256"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "vault_cipher", "vault", "VaultAES256"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.setUp", "ret_exprs": [], "ret_type": "", "variables": {"vault_cipher": ""}, "variables_p": {"vault_cipher": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[159, 4], [160, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertIsInstance", "self", "vault_cipher", "vault", "VaultAES256"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 4], [167, 53]], "fn_var_ln": {"b_key": [[166, 8], [166, 13]], "b_password": [[164, 8], [164, 18]], "b_salt": [[165, 8], [165, 14]]}, "fn_var_occur": {"b_key": [["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["self", "assertIsInstance", "b_key", "six", "binary_type"]], "b_password": [["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"]], "b_salt": [["b_salt", "os", "urandom"], ["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"]]}, "name": "test_create_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["self", "assertIsInstance", "b_key", "six", "binary_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_create_key", "ret_exprs": [], "ret_type": "", "variables": {"b_key": "", "b_password": "", "b_salt": ""}, "variables_p": {"b_key": [["str", 0.4201240270769731], ["IO[bytes]", 0.11074441198078364], ["int", 0.11060620419132909], ["bytes", 0.09246555488245047], ["List[str]", 0.08655808969375563]], "b_password": [["Dict[str, bool]", 0.21826339112421328], ["int", 0.20957930830568655], ["Dict[str, int]", 0.11611407695884085], ["bytes", 0.09338962633049103], ["str", 0.09058944097896422], ["Dict[int, bool]", 0.08914549614159062]], "b_salt": [["bytes", 0.8161172692176191], ["int", 0.10097491231850123], ["str", 0.08290781846387973]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[169, 4], [182, 40]], "fn_var_ln": {"b_key": [[174, 8], [174, 13]], "b_key_2": [[180, 8], [180, 15]], "b_password": [[170, 8], [170, 18]], "b_salt": [[173, 8], [173, 14]]}, "fn_var_occur": {"b_key": [["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["self", "assertIsInstance", "b_key", "six", "binary_type"], ["self", "assertIsInstance", "b_key", "six", "binary_type"], ["self", "assertEqual", "b_key", "b_key_2"]], "b_key_2": [["b_key_2", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["self", "assertEqual", "b_key", "b_key_2"]], "b_password": [["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["b_key_2", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"]], "b_salt": [["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["b_key_2", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"]]}, "name": "test_create_key_known", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["b_key", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["self", "assertIsInstance", "b_key", "six", "binary_type"], ["b_key_2", "self", "vault_cipher", "_create_key", "b_password", "b_salt", "keylength", "ivlength"], ["self", "assertIsInstance", "b_key", "six", "binary_type"], ["self", "assertEqual", "b_key", "b_key_2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_create_key_known", "ret_exprs": [], "ret_type": "", "variables": {"b_key": "", "b_key_2": "", "b_password": "", "b_salt": ""}, "variables_p": {"b_key": [["str", 0.8204619472214845], ["List[str]", 0.09203636463379554], ["IO[bytes]", 0.08750168814471998]], "b_key_2": [["str", 0.2756367221950663], ["int", 0.23289208455172689], ["bytes", 0.09234224647873215]], "b_password": [["bytes", 0.40633292736691207], ["slice", 0.1889140240828631], ["str", 0.11549444114846598], ["int", 0.08942293669134523]], "b_salt": [["slice", 0.19872148211350804], ["int", 0.11534107815332138], ["bytes", 0.11161306820045659], ["List[int]", 0.0944838468451146], ["str", 0.08821776670887936]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [185, 114]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_equal_is_equal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "self", "vault_cipher", "_is_equal"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_is_equal_is_equal", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [188, 129]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_equal_unequal_length", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "self", "vault_cipher", "_is_equal"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_is_equal_unequal_length", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [191, 114]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_equal_not_equal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "self", "vault_cipher", "_is_equal"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_is_equal_not_equal", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[193, 4], [194, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_equal_empty", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "self", "vault_cipher", "_is_equal"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_is_equal_empty", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[196, 4], [198, 74]], "fn_var_ln": {"utf8_data": [[197, 8], [197, 17]]}, "fn_var_occur": {"utf8_data": [["utf8_data", "to_bytes"], ["self", "assertTrue", "self", "vault_cipher", "_is_equal", "utf8_data", "utf8_data"]]}, "name": "test_is_equal_non_ascii_equal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "self", "vault_cipher", "_is_equal", "utf8_data", "utf8_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_is_equal_non_ascii_equal", "ret_exprs": [], "ret_type": "", "variables": {"utf8_data": ""}, "variables_p": {"utf8_data": [["List[Tuple[Any, Any, Any, Any, str]]", 0.35864219759400545], ["bytes", 0.23540009358353278], ["int", 0.13697606062695775], ["List[tuple]", 0.08966054939850136], ["List[Tuple[Any, Any, Any, Any, Any]]", 0.08966054939850136], ["List[Dict[Any, Any]]", 0.08966054939850136]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[200, 4], [207, 87]], "fn_var_ln": {"utf8_data": [[201, 8], [201, 17]], "utf8_data2": [[202, 8], [202, 18]]}, "fn_var_occur": {"utf8_data": [["utf8_data", "to_bytes"], ["self", "assertFalse", "self", "vault_cipher", "_is_equal", "utf8_data", "utf8_data2"], ["self", "assertFalse", "self", "vault_cipher", "_is_equal", "utf8_data", "utf8_data"]], "utf8_data2": [["utf8_data2", "to_bytes"], ["self", "assertFalse", "self", "vault_cipher", "_is_equal", "utf8_data", "utf8_data2"]]}, "name": "test_is_equal_non_ascii_unequal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "self", "vault_cipher", "_is_equal", "utf8_data", "utf8_data2"], ["self", "assertFalse", "self", "vault_cipher", "_is_equal", "utf8_data", "utf8_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_is_equal_non_ascii_unequal", "ret_exprs": [], "ret_type": "", "variables": {"utf8_data": "", "utf8_data2": ""}, "variables_p": {"utf8_data": [["bytes", 0.4927572773216606], ["List[str]", 0.11130225284264432], ["Dict[str, Union[float, str]]", 0.10051813871655174], ["int", 0.08353968108886514]], "utf8_data2": [["List[Tuple[Any, Any, Any, Any, str]]", 0.35864219759400545], ["bytes", 0.23540009358353278], ["int", 0.13697606062695775], ["List[tuple]", 0.08966054939850136], ["List[Tuple[Any, Any, Any, Any, Any]]", 0.08966054939850136], ["List[Dict[Any, Any]]", 0.08966054939850136]]}}, {"docstring": {"func": "Anything not a byte string should raise a TypeError ", "long_descr": null, "ret": null}, "fn_lc": [[209, 4], [214, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_equal_non_bytes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "TypeError", "self", "vault_cipher", "_is_equal"], ["self", "assertRaises", "TypeError", "self", "vault_cipher", "_is_equal"], ["self", "assertRaises", "TypeError", "self", "vault_cipher", "_is_equal"], ["self", "assertRaises", "TypeError", "self", "vault_cipher", "_is_equal"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultCipherAes256.test_is_equal_non_bytes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestVaultCipherAes256", "q_name": "TestVaultCipherAes256", "variables": {}, "variables_p": {}}, {"cls_lc": [[217, 0], [376, 55]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[218, 4], [219, 48]], "fn_var_ln": {"v": [[219, 8], [219, 14]]}, "fn_var_occur": {"v": [["self", "v", "VaultLib"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "VaultLib"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.setUp", "ret_exprs": [], "ret_type": "", "variables": {"v": ""}, "variables_p": {"v": [["int", 0.21880812959036589], ["Dict[str, int]", 0.17869664502026794], ["float", 0.1728071917258988], ["property", 0.15285342165141214], ["str", 0.09381021839934892], ["List[int]", 0.09208695722445971], ["Type[int]", 0.09093743638824664]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[221, 4], [228, 63]], "fn_var_ln": {"b_header": [[227, 8], [227, 16]], "b_vaulttext": [[223, 8], [223, 19]], "plaintext": [[222, 8], [222, 17]]}, "fn_var_occur": {"b_header": [["self", "assertEqual", "b_vaulttext", "len", "b_header", "b_header"]], "b_vaulttext": [["b_vaulttext", "self", "v", "encrypt", "plaintext"], ["self", "assertIsInstance", "b_vaulttext", "six", "binary_type"], ["self", "assertEqual", "b_vaulttext", "len", "b_header", "b_header"]], "plaintext": [["b_vaulttext", "self", "v", "encrypt", "plaintext"]]}, "name": "test_encrypt", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["b_vaulttext", "self", "v", "encrypt", "plaintext"], ["self", "assertIsInstance", "b_vaulttext", "six", "binary_type"], ["self", "assertEqual", "b_vaulttext", "len", "b_header", "b_header"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_encrypt", "ret_exprs": [], "ret_type": "", "variables": {"b_header": "", "b_vaulttext": "", "plaintext": ""}, "variables_p": {"b_header": [["List[int]", 0.36209722152163876], ["str", 0.21638986442398017], ["List[object]", 0.1745795515647793], ["Dict[str, Any]", 0.14789097755446287], ["Set[str]", 0.09904238493513891]], "b_vaulttext": [["int", 0.3942385354422162], ["str", 0.3168439987585056], ["list", 0.10242234518036944]], "plaintext": [["List[str]", 0.7022721226964396], ["Pattern[str]", 0.16996440281611974], ["int", 0.12776347448744058]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[230, 4], [238, 63]], "fn_var_ln": {"b_header": [[237, 8], [237, 16]], "b_vaulttext": [[233, 8], [233, 19]], "plaintext": [[232, 8], [232, 17]]}, "fn_var_occur": {"b_header": [["self", "assertEqual", "b_vaulttext", "len", "b_header", "b_header"]], "b_vaulttext": [["b_vaulttext", "self", "v", "encrypt", "plaintext"], ["self", "assertIsInstance", "b_vaulttext", "six", "binary_type"], ["self", "assertEqual", "b_vaulttext", "len", "b_header", "b_header"]], "plaintext": [["plaintext", "to_bytes"], ["b_vaulttext", "self", "v", "encrypt", "plaintext"]]}, "name": "test_encrypt_bytes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["b_vaulttext", "self", "v", "encrypt", "plaintext"], ["self", "assertIsInstance", "b_vaulttext", "six", "binary_type"], ["self", "assertEqual", "b_vaulttext", "len", "b_header", "b_header"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_encrypt_bytes", "ret_exprs": [], "ret_type": "", "variables": {"b_header": "", "b_vaulttext": "", "plaintext": ""}, "variables_p": {"b_header": [["List[int]", 0.36209722152163876], ["str", 0.21638986442398017], ["List[object]", 0.1745795515647793], ["Dict[str, Any]", 0.14789097755446287], ["Set[str]", 0.09904238493513891]], "b_vaulttext": [["int", 0.3942385354422162], ["str", 0.3168439987585056], ["list", 0.10242234518036944]], "plaintext": [["str", 0.33728494194999187], ["Type[tuple]", 0.24805688495141215], ["Dict[bytes, bytes]", 0.20510906936438883], ["int", 0.07737323114860395]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [243, 100]], "fn_var_ln": {"b_data": [[242, 8], [242, 14]]}, "fn_var_occur": {"b_data": [["b_data", "hexlify"], ["self", "assertTrue", "self", "v", "is_encrypted", "b_data", "msg"]]}, "name": "test_is_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertFalse", "self", "v", "is_encrypted", "msg"], ["self", "assertTrue", "self", "v", "is_encrypted", "b_data", "msg"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_is_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_data": ""}, "variables_p": {"b_data": [["str", 0.2940176242225335], ["List[str]", 0.22997928182746452], ["Dict[str, Any]", 0.16616653334932824], ["int", 0.08551430472181384], ["bytes", 0.07393701439834174]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[245, 4], [259, 96]], "fn_var_ln": {"b_ciphertext": [[247, 8], [247, 20]], "b_header": [[252, 8], [252, 16]], "b_header_parts": [[255, 8], [255, 22]], "b_lines": [[249, 8], [249, 15]], "b_vaulttext": [[248, 8], [248, 19]]}, "fn_var_occur": {"b_ciphertext": [["b_vaulttext", "self", "v", "_format_output", "b_ciphertext"]], "b_header": [["b_header", "b_lines"], ["self", "assertTrue", "b_header", "endswith", "msg"], ["b_header_parts", "b_header", "split"]], "b_header_parts": [["b_header_parts", "b_header", "split"], ["self", "assertEqual", "len", "b_header_parts", "msg"], ["self", "assertEqual", "b_header_parts", "msg"], ["self", "assertEqual", "b_header_parts", "self", "v", "b_version", "msg"], ["self", "assertEqual", "b_header_parts", "msg"]], "b_lines": [["b_lines", "b_vaulttext", "split"], ["self", "assertGreater", "len", "b_lines", "msg"], ["b_header", "b_lines"]], "b_vaulttext": [["b_vaulttext", "self", "v", "_format_output", "b_ciphertext"], ["b_lines", "b_vaulttext", "split"]]}, "name": "test_format_output", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "cipher_name"], ["b_vaulttext", "self", "v", "_format_output", "b_ciphertext"], ["self", "assertGreater", "len", "b_lines", "msg"], ["self", "assertTrue", "b_header", "endswith", "msg"], ["self", "assertEqual", "len", "b_header_parts", "msg"], ["self", "assertEqual", "b_header_parts", "msg"], ["self", "assertEqual", "b_header_parts", "self", "v", "b_version", "msg"], ["self", "assertEqual", "b_header_parts", "msg"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_format_output", "ret_exprs": [], "ret_type": "", "variables": {"b_ciphertext": "", "b_header": "", "b_header_parts": "", "b_lines": "", "b_vaulttext": ""}, "variables_p": {"b_ciphertext": [["str", 0.4234295105089945], ["Pattern[str]", 0.12087552468202672], ["List[int]", 0.09243207178159323], ["int", 0.0893328918564669], ["float", 0.08347656818586036]], "b_header": [["list", 0.09322720223310257]], "b_header_parts": [["str", 0.3893415753862935], ["bytes", 0.30099985767801674], ["int", 0.2126732601792701]], "b_lines": [["int", 0.10297440000952564], ["Generator[Any, None, None]", 0.0956407994689575]], "b_vaulttext": [["float", 0.21684280074179207], ["dict", 0.09894347770563068], ["int", 0.09324293942099722]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[261, 4], [267, 86]], "fn_var_ln": {"b_ciphertext": [[263, 8], [263, 20]], "b_lines": [[264, 8], [264, 15]], "b_vaulttext": [[262, 8], [262, 19]]}, "fn_var_occur": {"b_ciphertext": [["b_ciphertext", "self", "v", "_split_header", "b_vaulttext"], ["b_lines", "b_ciphertext", "split"]], "b_lines": [["b_lines", "b_ciphertext", "split"], ["self", "assertEqual", "b_lines", "msg"]], "b_vaulttext": [["b_ciphertext", "self", "v", "_split_header", "b_vaulttext"]]}, "name": "test_split_header", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["b_ciphertext", "self", "v", "_split_header", "b_vaulttext"], ["self", "assertEqual", "b_lines", "msg"], ["self", "assertEqual", "self", "v", "cipher_name", "msg"], ["self", "assertEqual", "self", "v", "b_version", "msg"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_split_header", "ret_exprs": [], "ret_type": "", "variables": {"b_ciphertext": "", "b_lines": "", "b_vaulttext": ""}, "variables_p": {"b_ciphertext": [["Pattern[str]", 0.2257341481629305], ["Callable(os.stat)[[Named(path, Union[Any, Any, bytes, int, str]), KeywordOnly(dir_fd, Optional[int], default), KeywordOnly(follow_symlinks, bool, default)], os.stat_result]", 0.16458842330338025]], "b_lines": [["int", 0.10830759595421792], ["Generator[Any, None, None]", 0.09326020385689125]], "b_vaulttext": [["Pattern[str]", 0.883654691491692], ["Dict[str, List[str]]", 0.11634530850830806]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 4], [282, 73]], "fn_var_ln": {"b_plaintext": [[281, 8], [281, 19]], "b_vaulttext": [[276, 8], [276, 19]]}, "fn_var_occur": {"b_plaintext": [["b_plaintext", "self", "v", "decrypt", "b_vaulttext"], ["self", "assertEqual", "b_plaintext", "msg"]], "b_vaulttext": [["b_plaintext", "self", "v", "decrypt", "b_vaulttext"]]}, "name": "test_encrypt_decrypt_aes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "cipher_name"], ["self", "v", "b_password"], ["b_plaintext", "self", "v", "decrypt", "b_vaulttext"], ["self", "assertEqual", "b_plaintext", "msg"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_encrypt_decrypt_aes", "ret_exprs": [], "ret_type": "", "variables": {"b_plaintext": "", "b_vaulttext": ""}, "variables_p": {"b_plaintext": [["List[Tuple[Any, Any]]", 0.11245162667227511], ["Tuple[Any, Any]", 0.10697558067612577], ["str", 0.09349813653293881], ["List[List[Any]]", 0.09091058476541256], ["List[Union[Any, Any]]", 0.09091058476541256]], "b_vaulttext": [["Pattern[str]", 0.6940144500288385], ["Dict[str, List[str]]", 0.12599358838935504], ["Pattern", 0.09094510585679397], ["int", 0.08904685572501243]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[284, 4], [292, 73]], "fn_var_ln": {"b_plaintext": [[290, 8], [290, 19]], "b_vaulttext": [[289, 8], [289, 19]], "plaintext": [[288, 8], [288, 17]]}, "fn_var_occur": {"b_plaintext": [["b_plaintext", "self", "v", "decrypt", "b_vaulttext"], ["self", "assertEqual", "b_plaintext", "msg"]], "b_vaulttext": [["b_vaulttext", "self", "v", "encrypt", "plaintext"], ["b_plaintext", "self", "v", "decrypt", "b_vaulttext"], ["self", "assertNotEqual", "b_vaulttext", "msg"]], "plaintext": [["b_vaulttext", "self", "v", "encrypt", "plaintext"]]}, "name": "test_encrypt_decrypt_aes256", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "cipher_name"], ["b_vaulttext", "self", "v", "encrypt", "plaintext"], ["b_plaintext", "self", "v", "decrypt", "b_vaulttext"], ["self", "assertNotEqual", "b_vaulttext", "msg"], ["self", "assertEqual", "b_plaintext", "msg"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_encrypt_decrypt_aes256", "ret_exprs": [], "ret_type": "", "variables": {"b_plaintext": "", "b_vaulttext": "", "plaintext": ""}, "variables_p": {"b_plaintext": [["List[Tuple[Any, Any]]", 0.11245162667227511], ["Tuple[Any, Any]", 0.10697558067612577], ["str", 0.09349813653293881], ["List[List[Any]]", 0.09091058476541256], ["List[Union[Any, Any]]", 0.09091058476541256]], "b_vaulttext": [["int", 0.1854836188834073], ["List[int]", 0.09929952519789198], ["tuple", 0.08667596390702337], ["str", 0.08273003473830984], ["Pattern[str]", 0.08253731810984646], ["frozenset[Any]", 0.08101536091257042]], "plaintext": [["List[str]", 0.7022721226964396], ["Pattern[str]", 0.16996440281611974], ["int", 0.12776347448744058]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[294, 4], [311, 80]], "fn_var_ln": {"b_orig_plaintext": [[298, 8], [298, 24]], "b_plaintext": [[310, 8], [310, 19]], "b_vaulttext": [[309, 8], [309, 19]], "vaulttext": [[299, 8], [299, 17]]}, "fn_var_occur": {"b_orig_plaintext": [["self", "assertEqual", "b_plaintext", "b_orig_plaintext", "msg"]], "b_plaintext": [["b_plaintext", "self", "v", "decrypt", "vaulttext"], ["self", "assertEqual", "b_plaintext", "b_plaintext", "msg"], ["b_plaintext", "self", "v", "decrypt", "b_vaulttext"], ["self", "assertEqual", "b_plaintext", "b_orig_plaintext", "msg"]], "b_vaulttext": [["b_vaulttext", "to_bytes", "vaulttext", "encoding", "errors"], ["b_plaintext", "self", "v", "decrypt", "b_vaulttext"]], "vaulttext": [["b_plaintext", "self", "v", "decrypt", "vaulttext"], ["b_vaulttext", "to_bytes", "vaulttext", "encoding", "errors"]]}, "name": "test_encrypt_decrypt_aes256_existing_vault", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "cipher_name"], ["b_plaintext", "self", "v", "decrypt", "vaulttext"], ["self", "assertEqual", "b_plaintext", "b_plaintext", "msg"], ["b_plaintext", "self", "v", "decrypt", "b_vaulttext"], ["self", "assertEqual", "b_plaintext", "b_orig_plaintext", "msg"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_encrypt_decrypt_aes256_existing_vault", "ret_exprs": [], "ret_type": "", "variables": {"b_orig_plaintext": "", "b_plaintext": "", "b_vaulttext": "", "vaulttext": ""}, "variables_p": {"b_orig_plaintext": [["list", 0.615149174477878], ["int", 0.09784004207514493], ["Exception", 0.09400852785541844]], "b_plaintext": [["List[Tuple[Any, Any]]", 0.11543959222859711], ["Tuple[Any, Any]", 0.09622839261545073], ["dict", 0.09572578341815327]], "b_vaulttext": [["bytes", 1.0000000000000002]], "vaulttext": [["str", 0.7038910969180003], ["Set[str]", 0.09400064884949944]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[313, 4], [350, 44]], "fn_var_ln": {"b_ciphertext": [[336, 8], [336, 20]], "b_ciphertext_data": [[344, 8], [344, 25]], "b_data": [[328, 8], [328, 14]], "b_hmac": [[333, 8], [333, 14]], "b_invalid_ciphertext": [[347, 8], [347, 28]], "b_payload": [[345, 8], [345, 17]], "b_salt": [[332, 8], [332, 14]], "enc_data": [[321, 8], [321, 16]], "foo": [[329, 8], [329, 11]], "lines": [[330, 8], [330, 13]]}, "fn_var_occur": {"b_ciphertext": [["b_ciphertext", "binascii", "unhexlify", "b_ciphertext_data"], ["b_ciphertext_data", "binascii", "hexlify", "b_ciphertext"]], "b_ciphertext_data": [["b_ciphertext_data", "join", "lines"], ["b_ciphertext", "binascii", "unhexlify", "b_ciphertext_data"], ["b_ciphertext_data", "binascii", "hexlify", "b_ciphertext"], ["b_payload", "join", "b_salt", "b_hmac", "b_ciphertext_data"]], "b_data": [["b_data", "to_bytes", "enc_data", "errors", "encoding"], ["b_data", "self", "v", "_split_header", "b_data"], ["foo", "binascii", "unhexlify", "b_data"]], "b_hmac": [["b_hmac", "lines"], ["b_payload", "join", "b_salt", "b_hmac", "b_ciphertext_data"]], "b_invalid_ciphertext": [["b_invalid_ciphertext", "self", "v", "_format_output", "b_payload"], ["self", "v", "decrypt", "b_invalid_ciphertext"]], "b_payload": [["b_payload", "join", "b_salt", "b_hmac", "b_ciphertext_data"], ["b_invalid_ciphertext", "self", "v", "_format_output", "b_payload"]], "b_salt": [["b_salt", "lines"], ["b_payload", "join", "b_salt", "b_hmac", "b_ciphertext_data"]], "enc_data": [["b_data", "to_bytes", "enc_data", "errors", "encoding"]], "foo": [["foo", "binascii", "unhexlify", "b_data"], ["lines", "foo", "splitlines"]], "lines": [["lines", "foo", "splitlines"], ["b_salt", "lines"], ["b_hmac", "lines"], ["b_ciphertext_data", "join", "lines"]]}, "name": "test_encrypt_decrypt_aes256_bad_hmac", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "cipher_name"], ["b_data", "self", "v", "_split_header", "b_data"], ["b_invalid_ciphertext", "self", "v", "_format_output", "b_payload"], ["self", "v", "decrypt", "b_invalid_ciphertext"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_encrypt_decrypt_aes256_bad_hmac", "ret_exprs": [], "ret_type": "", "variables": {"b_ciphertext": "", "b_ciphertext_data": "", "b_data": "", "b_hmac": "", "b_invalid_ciphertext": "", "b_payload": "", "b_salt": "", "enc_data": "", "foo": "", "lines": ""}, "variables_p": {"b_ciphertext": [["list", 0.08825374912609238]], "b_ciphertext_data": [["str", 0.5051035055628599], ["bool", 0.12181911260989856], ["list", 0.10475546374672763], ["Dict[str, Literal[-1]]", 0.08935412880632856], ["Dict[str, str]", 0.08898864670979757]], "b_data": [["bytes", 0.39678255463150364], ["str", 0.3698387675349424], ["Dict[str, bytes]", 0.13087996651817357], ["Dict[bytes, bytes]", 0.10249871131538035]], "b_hmac": [["str", 0.3924359569848469], ["List[str]", 0.20855218677589163], ["list", 0.20646772673258978], ["Callable(subprocess.check_output)[..., Any][[[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Literal[True])], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, str), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, str), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), KeywordOnly(universal_newlines, Literal[True]), KeywordOnly(startupinfo, Any, default), KeywordOnly(creationflags, int, default), KeywordOnly(restore_signals, bool, default), KeywordOnly(start_new_session, bool, default), KeywordOnly(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, Literal[False], default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, None, default), KeywordOnly(errors, None, default), KeywordOnly(text, Optional[Literal[False]], default)], bytes][Any, Any]]", 0.10845747715079397], ["List[Dict[str, Any]]", 0.08408665235587767]], "b_invalid_ciphertext": [["List[str]", 0.31112931723503023], ["bool", 0.1719223373588253], ["Callable", 0.08939336416870323], ["str", 0.08181586194327398], ["Tuple[int, int]", 0.08178084095911214], ["list", 0.0812022906466592]], "b_payload": [["io.TextIOWrapper", 0.23741892754318292], ["list", 0.19974277241696448], ["float", 0.1754394804879859], ["int", 0.10066644191586721], ["List[int]", 0.08410665841247991], ["List[str]", 0.08391625545192812]], "b_salt": [["str", 0.3924359569848469], ["List[str]", 0.20855218677589163], ["list", 0.20646772673258978], ["Callable(subprocess.check_output)[..., Any][[[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Literal[True])], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, str), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, str), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), KeywordOnly(universal_newlines, Literal[True]), KeywordOnly(startupinfo, Any, default), KeywordOnly(creationflags, int, default), KeywordOnly(restore_signals, bool, default), KeywordOnly(start_new_session, bool, default), KeywordOnly(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, Literal[False], default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, None, default), KeywordOnly(errors, None, default), KeywordOnly(text, Optional[Literal[False]], default)], bytes][Any, Any]]", 0.10845747715079397], ["List[Dict[str, Any]]", 0.08408665235587767]], "enc_data": [["str", 0.768051546781205], ["bytes", 0.23194845321879504]], "foo": [["str", 0.3015747582267961], ["int", 0.1879138703997225], ["list", 0.1027293732342605], ["Tuple[str, List[str], List[str]]", 0.09974699937269013], ["List[str]", 0.09974699937269013]], "lines": [["list", 0.1984354844437739], ["frozenset[str]", 0.1776827953065295], ["int", 0.09495770978144527], ["str", 0.08941771364221682], ["Counter[str]", 0.0871467910573583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[352, 4], [359, 73]], "fn_var_ln": {"b_vaulttext": [[356, 8], [356, 19]], "vaulttext": [[357, 8], [357, 17]]}, "fn_var_occur": {"b_vaulttext": [["b_vaulttext", "hexlify"], ["vaulttext", "to_text", "b_vaulttext", "errors"], ["self", "assertRaises", "errors", "AnsibleError", "self", "v", "encrypt", "b_vaulttext"]], "vaulttext": [["vaulttext", "to_text", "b_vaulttext", "errors"], ["self", "assertRaises", "errors", "AnsibleError", "self", "v", "encrypt", "vaulttext"]]}, "name": "test_encrypt_encrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "cipher_name"], ["self", "assertRaises", "errors", "AnsibleError", "self", "v", "encrypt", "b_vaulttext"], ["self", "assertRaises", "errors", "AnsibleError", "self", "v", "encrypt", "vaulttext"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_encrypt_encrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_vaulttext": "", "vaulttext": ""}, "variables_p": {"b_vaulttext": [["str", 0.5699048604194611]], "vaulttext": [["str", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[361, 4], [368, 75]], "fn_var_ln": {"b_plaintext": [[367, 8], [367, 19]], "plaintext": [[364, 8], [364, 17]]}, "fn_var_occur": {"b_plaintext": [["self", "assertRaises", "errors", "AnsibleError", "self", "v", "decrypt", "b_plaintext"]], "plaintext": [["self", "assertRaises", "errors", "AnsibleError", "self", "v", "decrypt", "plaintext"]]}, "name": "test_decrypt_decrypted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "errors", "AnsibleError", "self", "v", "decrypt", "plaintext"], ["self", "assertRaises", "errors", "AnsibleError", "self", "v", "decrypt", "b_plaintext"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_decrypt_decrypted", "ret_exprs": [], "ret_type": "", "variables": {"b_plaintext": "", "plaintext": ""}, "variables_p": {"b_plaintext": [["str", 0.282832643281142], ["List[int]", 0.13696166144761707], ["Pattern[str]", 0.11048177046121439], ["Union[Literal, str]", 0.09730829023803773], ["List[str]", 0.0924098915896617], ["tuple", 0.08742208704402793]], "plaintext": [["str", 0.9126071439988823], ["Tuple[str, str, str]", 0.08739285600111767]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[370, 4], [376, 55]], "fn_var_ln": {"plaintext": [[374, 8], [374, 17]]}, "fn_var_occur": {"plaintext": [["self", "v", "encrypt", "plaintext"]]}, "name": "test_cipher_not_set", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "v", "encrypt", "plaintext"], ["self", "assertEquals", "self", "v", "cipher_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVaultLib.test_cipher_not_set", "ret_exprs": [], "ret_type": "", "variables": {"plaintext": ""}, "variables_p": {"plaintext": [["int", 0.3820624414543803], ["str", 0.19131806803280219], ["dict", 0.13964238846361426], ["Type[Tuple[int, int, int]]", 0.09565903401640109]]}}], "name": "TestVaultLib", "q_name": "TestVaultLib", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "six", "binascii", "io", "os", "binascii", "hexlify", "nose", "plugins", "skip", "SkipTest", "ansible", "compat", "tests", "unittest", "ansible", "errors", "ansible", "parsing", "vault", "VaultLib", "ansible", "parsing", "vault", "ansible", "module_utils", "_text", "to_bytes", "to_text", "Crypto", "Util", "Counter", "Crypto", "Protocol", "KDF", "PBKDF2", "Crypto", "Cipher", "AES", "AES"], "mod_var_ln": {"HAS_AES": [[60, 4], [60, 11]], "HAS_COUNTER": [[46, 4], [46, 15]], "HAS_PBKDF2": [[53, 4], [53, 14]], "__metaclass__": [[22, 0], [22, 13]]}, "mod_var_occur": {"HAS_AES": [["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"]], "HAS_COUNTER": [["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"]], "HAS_PBKDF2": [["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"], ["HAS_AES", "HAS_COUNTER", "HAS_PBKDF2"]], "__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 128}, "session_id": "ZQdSsWvTVPUpXpP2HleS3AVY3jp5o3ilOn07_WG9wDU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"HAS_AES": "", "HAS_COUNTER": "", "HAS_PBKDF2": "", "__metaclass__": ""}, "variables_p": {"HAS_AES": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_COUNTER": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "HAS_PBKDF2": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}