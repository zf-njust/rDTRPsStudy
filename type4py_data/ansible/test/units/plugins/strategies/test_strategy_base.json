{"error": null, "response": {"classes": [{"cls_lc": [[39, 0], [519, 25]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 4], [42, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.setUp", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [45, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.tearDown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 8], [50, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_empty", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_init.<locals>._queue_empty", "ret_exprs": ["return len(queue_items) == 0"], "ret_type": "", "ret_type_p": [["bytes", 0.10627465735115638], ["int", 0.09202746634497858], ["str", 0.09202746634497858]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 8], [55, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_get", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_init.<locals>._queue_get", "ret_exprs": ["return queue_items.pop()"], "ret_type": "", "ret_type_p": [["int", 0.553108270318214], ["str", 0.20143106500062968], ["bool", 0.10126741492345763], ["List[int]", 0.07332181702450016], ["float", 0.07087143273319862]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 8], [57, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_put", "params": {"args": "", "item": "", "kwargs": ""}, "params_descr": {"args": "", "item": "", "kwargs": ""}, "params_occur": {"args": [], "item": [["queue_items", "append", "item"]], "kwargs": []}, "params_p": {"args": [], "item": [["int", 0.4011798183448702], ["Callable", 0.08450994637399901], ["str", 0.06774694981376306], ["list", 0.05983285314443672]], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_init.<locals>._queue_put", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [70, 31]], "fn_var_ln": {"_final_q": [[65, 8], [65, 25]], "_listening_handlers": [[68, 8], [68, 36]], "_notified_handlers": [[67, 8], [67, 35]], "_options": [[66, 8], [66, 25]], "mock_queue": [[59, 8], [59, 18]], "mock_tqm": [[64, 8], [64, 16]], "queue_items": [[48, 8], [48, 19]], "strategy_base": [[69, 8], [69, 21]]}, "fn_var_occur": {"_final_q": [["mock_tqm", "_final_q", "mock_queue"]], "_listening_handlers": [["mock_tqm", "_listening_handlers"]], "_notified_handlers": [["mock_tqm", "_notified_handlers"]], "_options": [["mock_tqm", "_options", "MagicMock"]], "mock_queue": [["mock_queue", "MagicMock"], ["mock_queue", "empty", "side_effect", "_queue_empty"], ["mock_queue", "get", "side_effect", "_queue_get"], ["mock_queue", "put", "side_effect", "_queue_put"], ["mock_tqm", "_final_q", "mock_queue"]], "mock_tqm": [["mock_tqm", "MagicMock", "TaskQueueManager"], ["mock_tqm", "_final_q", "mock_queue"], ["mock_tqm", "_options", "MagicMock"], ["mock_tqm", "_notified_handlers"], ["mock_tqm", "_listening_handlers"], ["strategy_base", "StrategyBase", "tqm", "mock_tqm"]], "queue_items": [], "strategy_base": [["strategy_base", "StrategyBase", "tqm", "mock_tqm"], ["strategy_base", "cleanup"]]}, "name": "test_strategy_base_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_init", "ret_exprs": [], "ret_type": "", "variables": {"_final_q": "", "_listening_handlers": "", "_notified_handlers": "", "_options": "", "mock_queue": "", "mock_tqm": "", "queue_items": "", "strategy_base": ""}, "variables_p": {"_final_q": [["str", 0.5550841291921359], ["property", 0.14130392126924907], ["list", 0.06947490790529882], ["alibi.tests.utils.MockPredictor", 0.04616735948346832], ["List[Dict[str, str]]", 0.043474045434524856]], "_listening_handlers": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "_notified_handlers": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "_options": [["tests.utils.MockCoroutine", 0.21218671064972577], ["Dict[Any, Dict[str, Any]]", 0.20645425955158117], ["str", 0.1977251338627531], ["Dict[str, Dict[str, Any]]", 0.10322712977579059], ["Dict[str, int]", 0.09360246171410927], ["Dict[str, Union[Any, int, str]]", 0.09138524634441465]], "mock_queue": [["unittesmock.MagicMock", 0.40457367732398636], ["mock.Mock", 0.22928497232190798], ["str", 0.09725297866936634], ["mock.mock.MagicMock", 0.09158240831030698]], "mock_tqm": [["mock.MagicMock", 0.9999999999999999]], "queue_items": [["str", 0.5], ["property", 0.1], ["Dict[str, str]", 0.1], ["int", 0.1], ["Optional[int]", 0.1], ["Type[Dict[str, Any]]", 0.1]], "strategy_base": [["str", 0.7840780586344515], ["Dict[str, str]", 0.13023031930998644], ["unittesmock.MagicMock", 0.08569162205556206]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 8], [75, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_empty", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_run.<locals>._queue_empty", "ret_exprs": ["return len(queue_items) == 0"], "ret_type": "", "ret_type_p": [["bytes", 0.10627465735115638], ["int", 0.09202746634497858], ["str", 0.09202746634497858]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 8], [80, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_get", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_run.<locals>._queue_get", "ret_exprs": ["return queue_items.pop()"], "ret_type": "", "ret_type_p": [["int", 0.553108270318214], ["str", 0.20143106500062968], ["bool", 0.10126741492345763], ["List[int]", 0.07332181702450016], ["float", 0.07087143273319862]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 8], [82, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_put", "params": {"args": "", "item": "", "kwargs": ""}, "params_descr": {"args": "", "item": "", "kwargs": ""}, "params_occur": {"args": [], "item": [["queue_items", "append", "item"]], "kwargs": []}, "params_p": {"args": [], "item": [["int", 0.4011798183448702], ["Callable", 0.08450994637399901], ["str", 0.06774694981376306], ["list", 0.05983285314443672]], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_run.<locals>._queue_put", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [123, 31]], "fn_var_ln": {"_failed_hosts": [[117, 8], [117, 30]], "_final_q": [[90, 8], [90, 25]], "_listening_handlers": [[109, 8], [109, 36]], "_notified_handlers": [[108, 8], [108, 35]], "_options": [[107, 8], [107, 25]], "_play": [[100, 8], [100, 27]], "_stats": [[91, 8], [91, 23]], "_unreachable_hosts": [[120, 8], [120, 35]], "mock_host": [[112, 8], [112, 17]], "mock_iterator": [[99, 8], [99, 21]], "mock_play_context": [[103, 8], [103, 25]], "mock_queue": [[84, 8], [84, 18]], "mock_tqm": [[89, 8], [89, 16]], "name": [[113, 8], [113, 22]], "queue_items": [[73, 8], [73, 19]], "strategy_base": [[110, 8], [110, 21]]}, "fn_var_occur": {"_failed_hosts": [["mock_tqm", "_failed_hosts", "dict"], ["mock_tqm", "_failed_hosts", "dict", "host1", "True"]], "_final_q": [["mock_tqm", "_final_q", "mock_queue"]], "_listening_handlers": [["mock_tqm", "_listening_handlers"], ["mock_tqm", "_listening_handlers"]], "_notified_handlers": [["mock_tqm", "_notified_handlers"], ["mock_tqm", "_notified_handlers"]], "_options": [["mock_tqm", "_options", "MagicMock"]], "_play": [["mock_iterator", "_play", "MagicMock"], ["mock_iterator", "_play", "handlers"]], "_stats": [["mock_tqm", "_stats", "MagicMock"]], "_unreachable_hosts": [["mock_tqm", "_unreachable_hosts", "dict"], ["mock_tqm", "_unreachable_hosts", "dict", "host1", "True"]], "mock_host": [["mock_host", "MagicMock"], ["mock_host", "name"], ["mock_iterator", "get_failed_hosts", "return_value", "mock_host"]], "mock_iterator": [["mock_iterator", "MagicMock"], ["mock_iterator", "_play", "MagicMock"], ["mock_iterator", "_play", "handlers"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "mock_tqm", "RUN_OK"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "TaskQueueManager", "RUN_ERROR", "mock_tqm", "RUN_ERROR"], ["mock_iterator", "get_failed_hosts", "return_value", "mock_host"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_FAILED_HOSTS"], ["mock_iterator", "get_failed_hosts", "return_value"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_UNREACHABLE_HOSTS"]], "mock_play_context": [["mock_play_context", "MagicMock"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "mock_tqm", "RUN_OK"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "TaskQueueManager", "RUN_ERROR", "mock_tqm", "RUN_ERROR"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_FAILED_HOSTS"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_UNREACHABLE_HOSTS"]], "mock_queue": [["mock_queue", "MagicMock"], ["mock_queue", "empty", "side_effect", "_queue_empty"], ["mock_queue", "get", "side_effect", "_queue_get"], ["mock_queue", "put", "side_effect", "_queue_put"], ["mock_tqm", "_final_q", "mock_queue"]], "mock_tqm": [["mock_tqm", "MagicMock", "TaskQueueManager"], ["mock_tqm", "_final_q", "mock_queue"], ["mock_tqm", "_stats", "MagicMock"], ["mock_tqm", "_notified_handlers"], ["mock_tqm", "_listening_handlers"], ["mock_tqm", "send_callback", "return_value", "None"], ["setattr", "mock_tqm", "attr", "getattr", "TaskQueueManager", "attr"], ["mock_tqm", "_failed_hosts", "dict"], ["mock_tqm", "_unreachable_hosts", "dict"], ["mock_tqm", "_options", "MagicMock"], ["mock_tqm", "_notified_handlers"], ["mock_tqm", "_listening_handlers"], ["strategy_base", "StrategyBase", "tqm", "mock_tqm"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "mock_tqm", "RUN_OK"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "TaskQueueManager", "RUN_ERROR", "mock_tqm", "RUN_ERROR"], ["mock_tqm", "_failed_hosts", "dict", "host1", "True"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_FAILED_HOSTS"], ["mock_tqm", "_unreachable_hosts", "dict", "host1", "True"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_UNREACHABLE_HOSTS"]], "name": [["mock_host", "name"]], "queue_items": [], "strategy_base": [["strategy_base", "StrategyBase", "tqm", "mock_tqm"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "mock_tqm", "RUN_OK"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "TaskQueueManager", "RUN_ERROR", "mock_tqm", "RUN_ERROR"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_FAILED_HOSTS"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_UNREACHABLE_HOSTS"], ["strategy_base", "cleanup"]]}, "name": "test_strategy_base_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "mock_tqm", "RUN_OK"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "TaskQueueManager", "RUN_ERROR", "mock_tqm", "RUN_ERROR"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_FAILED_HOSTS"], ["self", "assertEqual", "strategy_base", "run", "iterator", "mock_iterator", "play_context", "mock_play_context", "result", "False", "mock_tqm", "RUN_UNREACHABLE_HOSTS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_run", "ret_exprs": [], "ret_type": "", "variables": {"_failed_hosts": "", "_final_q": "", "_listening_handlers": "", "_notified_handlers": "", "_options": "", "_play": "", "_stats": "", "_unreachable_hosts": "", "mock_host": "", "mock_iterator": "", "mock_play_context": "", "mock_queue": "", "mock_tqm": "", "name": "", "queue_items": "", "strategy_base": ""}, "variables_p": {"_failed_hosts": [["str", 0.3170339990163522], ["Dict[str, str]", 0.1653400591326808], ["Dict[str, Dict[str, Any]]", 0.13329452666938757], ["Dict[str, Union[int, str]]", 0.09930336308011686], ["Dict[str, Union[Any, Any]]", 0.09596004426388781]], "_final_q": [["str", 0.5550841291921359], ["property", 0.14130392126924907], ["list", 0.06947490790529882], ["alibi.tests.utils.MockPredictor", 0.04616735948346832], ["List[Dict[str, str]]", 0.043474045434524856]], "_listening_handlers": [["str", 0.2766671250355434], ["property", 0.10432924422436797], ["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.09611775419842042], ["list", 0.0930923082364732], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0770420588649601], ["List[Union[Any, Any, Any]]", 0.0770420588649601], ["set", 0.07337352424438628]], "_notified_handlers": [["str", 0.2766671250355434], ["property", 0.10432924422436797], ["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.09611775419842042], ["list", 0.0930923082364732], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0770420588649601], ["List[Union[Any, Any, Any]]", 0.0770420588649601], ["set", 0.07337352424438628]], "_options": [["tests.utils.MockCoroutine", 0.21218671064972577], ["Dict[Any, Dict[str, Any]]", 0.20645425955158117], ["str", 0.1977251338627531], ["Dict[str, Dict[str, Any]]", 0.10322712977579059], ["Dict[str, int]", 0.09360246171410927], ["Dict[str, Union[Any, int, str]]", 0.09138524634441465]], "_play": [["bytes", 0.2601055653776919], ["list", 0.11517256674968658], ["property", 0.07477830881142362], ["set", 0.06822993463162855], ["List[Dict[str, str]]", 0.06194561595839832]], "_stats": [["Dict[int, Dict[str, Any]]", 0.1994173259463115], ["Tuple[Literal, Literal, Literal]", 0.1898025722228424], ["str", 0.18110751490677662], ["property", 0.12979875992072135], ["List[str]", 0.10789706885888636], ["alibi.tests.utils.MockPredictor", 0.10603744246954855], ["mock.MagicMock", 0.08593931567491314]], "_unreachable_hosts": [["str", 0.3170339990163522], ["Dict[str, str]", 0.1653400591326808], ["Dict[str, Dict[str, Any]]", 0.13329452666938757], ["Dict[str, Union[int, str]]", 0.09930336308011686], ["Dict[str, Union[Any, Any]]", 0.09596004426388781]], "mock_host": [["mock.Mock", 0.38778182734299477], ["str", 0.21904696704027285], ["unittesmock.MagicMock", 0.09626529452707146], ["mock.MagicMock", 0.08187171243964952]], "mock_iterator": [["unittesmock.MagicMock", 0.31271407910332394]], "mock_play_context": [["mock.Mock", 0.3366053037933228], ["unittesmock.MagicMock", 0.08428112133039065]], "mock_queue": [["unittesmock.MagicMock", 0.40457367732398636], ["mock.Mock", 0.22928497232190798], ["str", 0.09725297866936634], ["mock.mock.MagicMock", 0.09158240831030698]], "mock_tqm": [["mock.MagicMock", 1.0000000000000002]], "name": [["str", 0.6994101492596789], ["Dict[str, str]", 0.1112620213890281], ["cmk.gui.plugins.views.utils.Command", 0.09552302875709505]], "queue_items": [["str", 0.5], ["property", 0.1], ["Dict[str, str]", 0.1], ["int", 0.1], ["Optional[int]", 0.1], ["Type[Dict[str, Any]]", 0.1]], "strategy_base": [["str", 0.5820915285689634], ["int", 0.11040508256114259]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[127, 8], [128, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_empty", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_get_hosts.<locals>._queue_empty", "ret_exprs": ["return len(queue_items) == 0"], "ret_type": "", "ret_type_p": [["bytes", 0.10627465735115638], ["int", 0.09202746634497858], ["str", 0.09202746634497858]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[129, 8], [133, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_get", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_get_hosts.<locals>._queue_get", "ret_exprs": ["return queue_items.pop()"], "ret_type": "", "ret_type_p": [["int", 0.553108270318214], ["str", 0.20143106500062968], ["bool", 0.10126741492345763], ["List[int]", 0.07332181702450016], ["float", 0.07087143273319862]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[134, 8], [135, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_put", "params": {"args": "", "item": "", "kwargs": ""}, "params_descr": {"args": "", "item": "", "kwargs": ""}, "params_occur": {"args": [], "item": [["queue_items", "append", "item"]], "kwargs": []}, "params_p": {"args": [], "item": [["int", 0.4011798183448702], ["Callable", 0.08450994637399901], ["str", 0.06774694981376306], ["list", 0.05983285314443672]], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_get_hosts.<locals>._queue_put", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[125, 4], [173, 31]], "fn_var_ln": {"_failed_hosts": [[167, 8], [167, 30]], "_final_q": [[153, 8], [153, 25]], "_listening_handlers": [[155, 8], [155, 36]], "_notified_handlers": [[154, 8], [154, 35]], "_unreachable_hosts": [[171, 8], [171, 35]], "has_hostkey": [[146, 12], [146, 33]], "hosts": [[159, 8], [159, 23]], "mock_host": [[144, 12], [144, 21]], "mock_hosts": [[142, 8], [142, 18]], "mock_inventory": [[149, 8], [149, 22]], "mock_play": [[158, 8], [158, 17]], "mock_queue": [[137, 8], [137, 18]], "mock_tqm": [[152, 8], [152, 16]], "name": [[145, 12], [145, 26]], "queue_items": [[126, 8], [126, 19]], "strategy_base": [[161, 8], [161, 21]]}, "fn_var_occur": {"_failed_hosts": [["mock_tqm", "_failed_hosts"], ["mock_tqm", "_failed_hosts"]], "_final_q": [["mock_tqm", "_final_q", "mock_queue"]], "_listening_handlers": [["mock_tqm", "_listening_handlers"]], "_notified_handlers": [["mock_tqm", "_notified_handlers"]], "_unreachable_hosts": [["mock_tqm", "_unreachable_hosts"], ["mock_tqm", "_unreachable_hosts"]], "has_hostkey": [["mock_host", "has_hostkey", "True"]], "hosts": [["mock_play", "hosts", "i", "i", "range"]], "mock_host": [["mock_host", "MagicMock"], ["mock_host", "name", "i"], ["mock_host", "has_hostkey", "True"], ["mock_hosts", "append", "mock_host"]], "mock_hosts": [["mock_hosts", "append", "mock_host"], ["mock_inventory", "get_hosts", "return_value", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_failed_hosts", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"]], "mock_inventory": [["mock_inventory", "MagicMock"], ["mock_inventory", "get_hosts", "return_value", "mock_hosts"], ["mock_tqm", "get_inventory", "return_value", "mock_inventory"]], "mock_play": [["mock_play", "MagicMock"], ["mock_play", "hosts", "i", "i", "range"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_failed_hosts", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"]], "mock_queue": [["mock_queue", "MagicMock"], ["mock_queue", "empty", "side_effect", "_queue_empty"], ["mock_queue", "get", "side_effect", "_queue_get"], ["mock_queue", "put", "side_effect", "_queue_put"], ["mock_tqm", "_final_q", "mock_queue"]], "mock_tqm": [["mock_tqm", "MagicMock"], ["mock_tqm", "_final_q", "mock_queue"], ["mock_tqm", "_notified_handlers"], ["mock_tqm", "_listening_handlers"], ["mock_tqm", "get_inventory", "return_value", "mock_inventory"], ["strategy_base", "StrategyBase", "tqm", "mock_tqm"], ["mock_tqm", "_failed_hosts"], ["mock_tqm", "_unreachable_hosts"], ["mock_tqm", "_failed_hosts"], ["mock_tqm", "_unreachable_hosts"]], "name": [["mock_host", "name", "i"]], "queue_items": [], "strategy_base": [["strategy_base", "StrategyBase", "tqm", "mock_tqm"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_failed_hosts", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["strategy_base", "cleanup"]]}, "name": "test_strategy_base_get_hosts", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_failed_hosts", "play", "mock_play", "mock_hosts"], ["self", "assertEqual", "strategy_base", "get_hosts_remaining", "play", "mock_play", "mock_hosts"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_get_hosts", "ret_exprs": [], "ret_type": "", "variables": {"_failed_hosts": "", "_final_q": "", "_listening_handlers": "", "_notified_handlers": "", "_unreachable_hosts": "", "has_hostkey": "", "hosts": "", "mock_host": "", "mock_hosts": "", "mock_inventory": "", "mock_play": "", "mock_queue": "", "mock_tqm": "", "name": "", "queue_items": "", "strategy_base": ""}, "variables_p": {"_failed_hosts": [["str", 0.5550841291921359], ["property", 0.14130392126924907], ["list", 0.06947490790529882], ["alibi.tests.utils.MockPredictor", 0.04616735948346832], ["List[Dict[str, str]]", 0.043474045434524856]], "_final_q": [["str", 0.5550841291921359], ["property", 0.14130392126924907], ["list", 0.06947490790529882], ["alibi.tests.utils.MockPredictor", 0.04616735948346832], ["List[Dict[str, str]]", 0.043474045434524856]], "_listening_handlers": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "_notified_handlers": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "_unreachable_hosts": [["str", 0.5550841291921359], ["property", 0.14130392126924907], ["list", 0.06947490790529882], ["alibi.tests.utils.MockPredictor", 0.04616735948346832], ["List[Dict[str, str]]", 0.043474045434524856]], "has_hostkey": [["str", 0.41115793144964186]], "hosts": [["str", 0.609714455987988], ["int", 0.09927478936994528], ["List[int]", 0.0981013852589478], ["float", 0.09675653288058012]], "mock_host": [["mock.Mock", 0.22786155756416765], ["str", 0.21991347366501174], ["mock.MagicMock", 0.10561272089988911]], "mock_hosts": [["unittesmock.MagicMock", 0.3678271216988629], ["str", 0.09883253723428685]], "mock_inventory": [["mock.Mock", 0.37448752745721675], ["unittesmock.MagicMock", 0.11925906336495246], ["mock.MagicMock", 0.09255923573699866]], "mock_play": [["mock.Mock", 0.497461754326751], ["unittesmock.MagicMock", 0.16790284452958193], ["mock.MagicMock", 0.08200949964281451]], "mock_queue": [["unittesmock.MagicMock", 0.40457367732398636], ["mock.Mock", 0.22928497232190798], ["str", 0.09725297866936634], ["mock.mock.MagicMock", 0.09158240831030698]], "mock_tqm": [["unittesmock.MagicMock", 0.19770012803920947], ["tests.conftesConfluentAvroConsumerMock", 0.160105308603611], ["Dict[str, Any]", 0.09191098975381565]], "name": [["str", 1.0]], "queue_items": [["str", 0.5], ["property", 0.1], ["Dict[str, str]", 0.1], ["int", 0.1], ["Optional[int]", 0.1], ["Type[Dict[str, Any]]", 0.1]], "strategy_base": [["str", 0.6261713672447695], ["dict", 0.10123281515547053], ["Counter[str]", 0.084810861276277]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[177, 8], [178, 18]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "fake_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_queue_task.<locals>.fake_run", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.0968071651928998], ["Iterable[Hashable]", 0.09351027224400177], ["Iterable[T]", 0.0917575001010836]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [212, 25]], "fn_var_ln": {"fake_loader": [[182, 8], [182, 19]], "has_hostkey": [[185, 8], [185, 29]], "hostvars": [[198, 8], [198, 20]], "mock_host": [[184, 8], [184, 17]], "mock_inventory": [[186, 8], [186, 22]], "mock_options": [[187, 8], [187, 20]], "mock_var_manager": [[183, 8], [183, 24]], "module_path": [[188, 8], [188, 32]], "strategy_base": [[201, 12], [201, 25]], "tqm": [[190, 8], [190, 11]]}, "fn_var_occur": {"fake_loader": [["fake_loader", "DictDataLoader"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_manager", "loader", "fake_loader", "options", "mock_options", "passwords", "None"]], "has_hostkey": [["mock_host", "has_hostkey", "True"]], "hostvars": [["tqm", "hostvars", "dict"]], "mock_host": [["mock_host", "MagicMock"], ["mock_host", "has_hostkey", "True"], ["strategy_base", "_queue_task", "host", "mock_host", "task", "MagicMock", "task_vars", "dict", "play_context", "MagicMock"], ["strategy_base", "_queue_task", "host", "mock_host", "task", "MagicMock", "task_vars", "dict", "play_context", "MagicMock"], ["strategy_base", "_queue_task", "host", "mock_host", "task", "MagicMock", "task_vars", "dict", "play_context", "MagicMock"]], "mock_inventory": [["mock_inventory", "MagicMock"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_manager", "loader", "fake_loader", "options", "mock_options", "passwords", "None"]], "mock_options": [["mock_options", "MagicMock"], ["mock_options", "module_path", "None"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_manager", "loader", "fake_loader", "options", "mock_options", "passwords", "None"]], "mock_var_manager": [["mock_var_manager", "MagicMock"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_manager", "loader", "fake_loader", "options", "mock_options", "passwords", "None"]], "module_path": [["mock_options", "module_path", "None"]], "strategy_base": [["strategy_base", "StrategyBase", "tqm", "tqm"], ["strategy_base", "_queue_task", "host", "mock_host", "task", "MagicMock", "task_vars", "dict", "play_context", "MagicMock"], ["self", "assertEqual", "strategy_base", "_cur_worker"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_queue_task", "host", "mock_host", "task", "MagicMock", "task_vars", "dict", "play_context", "MagicMock"], ["self", "assertEqual", "strategy_base", "_cur_worker"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_queue_task", "host", "mock_host", "task", "MagicMock", "task_vars", "dict", "play_context", "MagicMock"], ["self", "assertEqual", "strategy_base", "_cur_worker"], ["self", "assertEqual", "strategy_base", "_pending_results"]], "tqm": [["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_manager", "loader", "fake_loader", "options", "mock_options", "passwords", "None"], ["tqm", "_initialize_processes"], ["tqm", "hostvars", "dict"], ["strategy_base", "StrategyBase", "tqm", "tqm"], ["tqm", "cleanup"]]}, "name": "test_strategy_base_queue_task", "params": {"mock_worker": "", "self": ""}, "params_descr": {"mock_worker": "", "self": ""}, "params_occur": {"mock_worker": [["mock_worker", "run", "side_effect", "fake_run"]], "self": [["self", "assertEqual", "strategy_base", "_cur_worker"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_cur_worker"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_cur_worker"], ["self", "assertEqual", "strategy_base", "_pending_results"]]}, "params_p": {"args": [], "kwargs": [], "mock_worker": [["unittesmock.MagicMock", 0.5760947810106112], ["mock.MagicMock", 0.10957695920106057]], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_queue_task", "ret_exprs": [], "ret_type": "", "variables": {"fake_loader": "", "has_hostkey": "", "hostvars": "", "mock_host": "", "mock_inventory": "", "mock_options": "", "mock_var_manager": "", "module_path": "", "strategy_base": "", "tqm": ""}, "variables_p": {"fake_loader": [["int", 0.08685965370382401]], "has_hostkey": [["str", 0.41115793144964186]], "hostvars": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "mock_host": [["str", 0.40224451514150766], ["unittesmock.MagicMock", 0.20601851645186828], ["bytes", 0.18794423246566672], ["mock.MagicMock", 0.084859654940701]], "mock_inventory": [["mock.Mock", 0.09223985220713016]], "mock_options": [["str", 0.4046753778724606], ["Dict[str, Any]", 0.0937471465392816], ["unittesmock.MagicMock", 0.09068050832836297]], "mock_var_manager": [["mock.Mock", 0.23605749767396672], ["unittesmock.MagicMock", 0.20120747947220086]], "module_path": [["str", 0.5123434677264509], ["Optional[str]", 0.08235730600828005]], "strategy_base": [], "tqm": [["bytes", 0.22837625509096662]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[225, 8], [226, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_empty", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_process_pending_results.<locals>._queue_empty", "ret_exprs": ["return len(queue_items) == 0"], "ret_type": "", "ret_type_p": [["bytes", 0.10627465735115638], ["int", 0.09202746634497858], ["str", 0.09202746634497858]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[227, 8], [231, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_get", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_process_pending_results.<locals>._queue_get", "ret_exprs": ["return queue_items.pop()"], "ret_type": "", "ret_type_p": [["int", 0.553108270318214], ["str", 0.20143106500062968], ["bool", 0.10126741492345763], ["List[int]", 0.07332181702450016], ["float", 0.07087143273319862]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[232, 8], [233, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_put", "params": {"args": "", "item": "", "kwargs": ""}, "params_descr": {"args": "", "item": "", "kwargs": ""}, "params_occur": {"args": [], "item": [["queue_items", "append", "item"]], "kwargs": []}, "params_p": {"args": [], "item": [["int", 0.4011798183448702], ["Callable", 0.08450994637399901], ["str", 0.06774694981376306], ["list", 0.05983285314443672]], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_process_pending_results.<locals>._queue_put", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[281, 8], [284, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_host", "params": {"host_name": ""}, "params_descr": {"host_name": ""}, "params_occur": {"host_name": []}, "params_p": {"args": [], "host_name": [["str", 0.8999999999999999], ["List[str]", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_process_pending_results.<locals>._get_host", "ret_exprs": ["return mock_host", "return None"], "ret_type": "", "ret_type_p": [["str", 0.31119106366641547], ["Optional[str]", 0.19375107178628032], ["Tuple[int]", 0.10467188532149271], ["bool", 0.09378678797675771], ["Optional[int]", 0.08959211963334157]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[285, 8], [288, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_group", "params": {"group_name": ""}, "params_descr": {"group_name": ""}, "params_occur": {"group_name": []}, "params_p": {"args": [], "group_name": [["str", 0.8999999999999999], ["List[str]", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_process_pending_results.<locals>._get_group", "ret_exprs": ["return mock_group", "return None"], "ret_type": "", "ret_type_p": [["str", 0.31119106366641547], ["Optional[str]", 0.19375107178628032], ["Tuple[int]", 0.10467188532149271], ["bool", 0.09378678797675771], ["Optional[int]", 0.08959211963334157]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[307, 8], [308, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_has_dead_workers", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_process_pending_results.<locals>._has_dead_workers", "ret_exprs": ["return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [398, 31]], "fn_var_ln": {"_blocked_hosts": [[305, 8], [305, 36]], "_failed_hosts": [[218, 8], [218, 30]], "_final_q": [[239, 8], [239, 25]], "_hosts_cache": [[291, 8], [291, 35]], "_inventory": [[303, 8], [303, 32]], "_listening_handlers": [[276, 8], [276, 36]], "_notified_handlers": [[275, 8], [275, 35]], "_pending_results": [[378, 8], [378, 38]], "_play": [[264, 8], [264, 27]], "_role": [[252, 8], [252, 23]], "_stats": [[241, 8], [241, 23]], "_terminated": [[217, 8], [217, 28]], "_unreachable_hosts": [[219, 8], [219, 35]], "_uuid": [[254, 8], [254, 23]], "_variable_manager": [[304, 8], [304, 39]], "action": [[259, 8], [259, 32]], "always": [[272, 8], [272, 33]], "block": [[270, 8], [270, 32]], "handlers": [[273, 8], [273, 26]], "has_hostkey": [[249, 8], [249, 29]], "ignore_errors": [[253, 8], [253, 31]], "loop": [[255, 8], [255, 22]], "mock_group": [[278, 8], [278, 18]], "mock_handler_block": [[269, 8], [269, 26]], "mock_handler_task": [[257, 8], [257, 25]], "mock_host": [[246, 8], [246, 17]], "mock_inventory": [[290, 8], [290, 22]], "mock_iterator": [[263, 8], [263, 21]], "mock_play": [[244, 8], [244, 17]], "mock_queue": [[235, 8], [235, 18]], "mock_task": [[251, 8], [251, 17]], "mock_tqm": [[216, 8], [216, 16]], "mock_var_mgr": [[298, 8], [298, 20]], "name": [[258, 8], [258, 30]], "queue_items": [[224, 8], [224, 19]], "rescue": [[271, 8], [271, 33]], "results": [[379, 8], [379, 15]], "strategy_base": [[302, 8], [302, 21]], "task_result": [[350, 8], [350, 19]], "vars": [[248, 8], [248, 22]]}, "fn_var_occur": {"_blocked_hosts": [["strategy_base", "_blocked_hosts", "True"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"]], "_failed_hosts": [["self", "assertIn", "mock_tqm", "_failed_hosts"], ["mock_tqm", "_failed_hosts"]], "_final_q": [], "_hosts_cache": [], "_inventory": [], "_listening_handlers": [], "_notified_handlers": [["self", "assertIn", "mock_handler_task", "strategy_base", "_notified_handlers"], ["self", "assertIn", "mock_host", "strategy_base", "_notified_handlers", "mock_handler_task"]], "_pending_results": [["strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["strategy_base", "_pending_results"], ["self", "assertEqual", "strategy_base", "_pending_results"]], "_play": [], "_role": [], "_stats": [], "_terminated": [], "_unreachable_hosts": [["self", "assertIn", "mock_tqm", "_unreachable_hosts"], ["mock_tqm", "_unreachable_hosts"]], "_uuid": [["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_host", "dict", "host_name", "new_groups"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_group", "dict", "group_name"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True", "_ansible_notify"]], "_variable_manager": [], "action": [], "always": [], "block": [], "handlers": [], "has_hostkey": [], "ignore_errors": [], "loop": [], "mock_group": [], "mock_handler_block": [], "mock_handler_task": [["self", "assertIn", "mock_handler_task", "strategy_base", "_notified_handlers"], ["self", "assertIn", "mock_host", "strategy_base", "_notified_handlers", "mock_handler_task"]], "mock_host": [["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_host", "dict", "host_name", "new_groups"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_group", "dict", "group_name"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True", "_ansible_notify"], ["self", "assertIn", "mock_host", "strategy_base", "_notified_handlers", "mock_handler_task"]], "mock_inventory": [], "mock_iterator": [["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["mock_iterator", "is_failed", "return_value", "True"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["mock_iterator", "is_failed", "return_value", "False"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"]], "mock_play": [], "mock_queue": [], "mock_task": [["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_host", "dict", "host_name", "new_groups"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_group", "dict", "group_name"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True", "_ansible_notify"]], "mock_tqm": [["self", "assertIn", "mock_tqm", "_failed_hosts"], ["mock_tqm", "_failed_hosts"], ["self", "assertIn", "mock_tqm", "_unreachable_hosts"], ["mock_tqm", "_unreachable_hosts"]], "mock_var_mgr": [], "name": [["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_host", "dict", "host_name", "new_groups"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_group", "dict", "group_name"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True", "_ansible_notify"]], "queue_items": [["queue_items", "append", "task_result"], ["queue_items", "append", "task_result"], ["queue_items", "append", "task_result"], ["queue_items", "append", "task_result"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_host", "dict", "host_name", "new_groups"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "add_group", "dict", "group_name"], ["queue_items", "append", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True", "_ansible_notify"]], "rescue": [], "results": [["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "len", "results"]], "strategy_base": [["strategy_base", "_tqm", "has_dead_workers", "_has_dead_workers"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["strategy_base", "_blocked_hosts", "True"], ["strategy_base", "_pending_results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["strategy_base", "_pending_results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["strategy_base", "_pending_results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["strategy_base", "_pending_results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["strategy_base", "_pending_results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["strategy_base", "_pending_results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["strategy_base", "_blocked_hosts", "True"], ["strategy_base", "_pending_results"], ["results", "strategy_base", "_wait_on_pending_results", "iterator", "mock_iterator"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertIn", "mock_handler_task", "strategy_base", "_notified_handlers"], ["self", "assertIn", "mock_host", "strategy_base", "_notified_handlers", "mock_handler_task"], ["strategy_base", "cleanup"]], "task_result": [["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data", "dict", "changed", "True"], ["queue_items", "append", "task_result"], ["self", "assertEqual", "results", "task_result"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["queue_items", "append", "task_result"], ["self", "assertEqual", "results", "task_result"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["queue_items", "append", "task_result"], ["self", "assertEqual", "results", "task_result"], ["task_result", "TaskResult", "host", "mock_host", "name", "task", "mock_task", "_uuid", "return_data"], ["queue_items", "append", "task_result"], ["self", "assertEqual", "results", "task_result"]], "vars": []}, "name": "test_strategy_base_process_pending_results", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "results"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertIn", "mock_tqm", "_failed_hosts"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertIn", "mock_tqm", "_unreachable_hosts"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "results", "task_result"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertEqual", "len", "results"], ["self", "assertEqual", "strategy_base", "_pending_results"], ["self", "assertNotIn", "strategy_base", "_blocked_hosts"], ["self", "assertIn", "mock_handler_task", "strategy_base", "_notified_handlers"], ["self", "assertIn", "mock_host", "strategy_base", "_notified_handlers", "mock_handler_task"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_process_pending_results", "ret_exprs": [], "ret_type": "", "variables": {"_blocked_hosts": "", "_failed_hosts": "", "_final_q": "", "_hosts_cache": "", "_inventory": "", "_listening_handlers": "", "_notified_handlers": "", "_pending_results": "", "_play": "", "_role": "", "_stats": "", "_terminated": "", "_unreachable_hosts": "", "_uuid": "", "_variable_manager": "", "action": "", "always": "", "block": "", "handlers": "", "has_hostkey": "", "ignore_errors": "", "loop": "", "mock_group": "", "mock_handler_block": "", "mock_handler_task": "", "mock_host": "", "mock_inventory": "", "mock_iterator": "", "mock_play": "", "mock_queue": "", "mock_task": "", "mock_tqm": "", "mock_var_mgr": "", "name": "", "queue_items": "", "rescue": "", "results": "", "strategy_base": "", "task_result": "", "vars": ""}, "variables_p": {"_blocked_hosts": [["dict", 0.7866310705224034]], "_failed_hosts": [["int", 0.6002560805295868], ["float", 0.1020484674644297], ["Tuple[int, int, int, int]", 0.09803520048012268]], "_final_q": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_hosts_cache": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_inventory": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_listening_handlers": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_notified_handlers": [["int", 0.3675983085725034], ["str", 0.2734612085957182], ["Optional[Match[str]]", 0.24253324700234094]], "_pending_results": [["dict", 0.38672860734540493], ["bool", 0.09003306884450349], ["Tuple[Any, Any]", 0.08812394398803368], ["str", 0.0861805161123904], ["List[str]", 0.08139537089237849]], "_play": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_role": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_stats": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_terminated": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_unreachable_hosts": [["int", 0.6002560805295868], ["float", 0.1020484674644297], ["Tuple[int, int, int, int]", 0.09803520048012268]], "_uuid": [["tests.utils.MockFileMetadata", 0.12641174687713097], ["dict", 0.10910508386745783], ["Dict[str, Dict[str, Any]]", 0.10861847379480477], ["str", 0.08796862154421123]], "_variable_manager": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.30000000000000004], ["str", 0.2], ["Tuple[str, str, str, str, str, str, str]", 0.2], ["int", 0.1], ["dict", 0.1]], "action": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "always": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "block": [["str", 0.39999999999999997], ["int", 0.19999999999999998], ["Union[bool, None]", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999]], "handlers": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "has_hostkey": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "ignore_errors": [["int", 0.6], ["str", 0.30000000000000004], ["bool", 0.1]], "loop": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "mock_group": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]], "mock_handler_block": [["str", 0.3872068163205884], ["List[bool]", 0.26911830006311116], ["int", 0.2577561627122254], ["Tuple[str, str]", 0.08591872090407514]], "mock_handler_task": [["str", 0.626021229987494], ["int", 0.1834502756934935], ["List[Dict[str, str]]", 0.10137133036703345]], "mock_host": [["Dict[str, str]", 0.2945694294329913], ["Dict[str, Union[Any, Any]]", 0.1824779964033863], ["dict", 0.16989231719795664], ["List[Dict[str, Any]]", 0.13032873660682265], ["Dict[str, int]", 0.12958075100267297], ["Dict[str, Any]", 0.09315076935617017]], "mock_inventory": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]], "mock_iterator": [["Dict[str, Tuple[str, Any]]", 0.20281683561105782], ["Dict[str, Union[Any, Any]]", 0.20063115757809513], ["Dict[str, str]", 0.11832800153989106], ["Dict[str, int]", 0.10565190226685187], ["Dict[str, Any]", 0.10271516350784182], ["tests.utils.MockCoroutine", 0.09118323271986048], ["unittesmock.MagicMock", 0.08952342990487004]], "mock_play": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]], "mock_queue": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]], "mock_task": [["Dict[Any, Dict[Any, Any]]", 0.28400762697881854], ["List[Dict[str, Any]]", 0.21649589058145008], ["dict", 0.1872635637820897], ["Dict[str, int]", 0.12861116298177372], ["Dict[str, Any]", 0.0874370378449149]], "mock_tqm": [["str", 0.33889827084022695], ["unittesmock.MagicMock", 0.18897908226369017], ["List[Dict[str, str]]", 0.1815229334810019], ["int", 0.17615420419449518]], "mock_var_mgr": [["str", 0.37419311640874675], ["Dict[str, str]", 0.11048500456553183], ["Dict[str, Union[Any, str]]", 0.08633610198110668], ["Pattern[str]", 0.07985011394321967], ["bool", 0.07985011394321967]], "name": [["str", 0.6202132874605456], ["bytes", 0.08896523639214726], ["Dict[str, Any]", 0.08888274437823436]], "queue_items": [["list", 1.0]], "rescue": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "results": [["List[None]", 0.16335602885005895]], "strategy_base": [["bytes", 0.333982722010284], ["str", 0.09743271527371536]], "task_result": [["Dict[str, int]", 0.23974880129656445], ["list", 0.11120237309777029], ["dict", 0.09099674660477633], ["Dict[str, Any]", 0.08839535767166151], ["Counter[Any]", 0.08482720346069753], ["List[Dict[str, Any]]", 0.08323904792218802]], "vars": [["int", 0.49999999999999994], ["List[str]", 0.09999999999999999], ["str", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[410, 8], [411, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_empty", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_load_included_file.<locals>._queue_empty", "ret_exprs": ["return len(queue_items) == 0"], "ret_type": "", "ret_type_p": [["bytes", 0.10627465735115638], ["int", 0.09202746634497858], ["str", 0.09202746634497858]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[412, 8], [416, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_get", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_load_included_file.<locals>._queue_get", "ret_exprs": ["return queue_items.pop()"], "ret_type": "", "ret_type_p": [["int", 0.553108270318214], ["str", 0.20143106500062968], ["bool", 0.10126741492345763], ["List[int]", 0.07332181702450016], ["float", 0.07087143273319862]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[417, 8], [418, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_queue_put", "params": {"args": "", "item": "", "kwargs": ""}, "params_descr": {"args": "", "item": "", "kwargs": ""}, "params_occur": {"args": [], "item": [["queue_items", "append", "item"]], "kwargs": []}, "params_p": {"args": [], "item": [["int", 0.4011798183448702], ["Callable", 0.08450994637399901], ["str", 0.06774694981376306], ["list", 0.05983285314443672]], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_load_included_file.<locals>._queue_put", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[400, 4], [455, 33]], "fn_var_ln": {"_block": [[441, 8], [441, 24]], "_filename": [[453, 8], [453, 31]], "_final_q": [[426, 8], [426, 25]], "_listening_handlers": [[428, 8], [428, 36]], "_loader": [[431, 8], [431, 29]], "_notified_handlers": [[427, 8], [427, 35]], "_play": [[437, 8], [437, 24]], "_role": [[442, 8], [442, 23]], "_task": [[448, 8], [448, 27]], "fake_loader": [[401, 8], [401, 19]], "mock_block": [[436, 8], [436, 18]], "mock_inc_file": [[447, 8], [447, 21]], "mock_iterator": [[444, 8], [444, 21]], "mock_play": [[434, 8], [434, 17]], "mock_queue": [[420, 8], [420, 18]], "mock_task": [[440, 8], [440, 17]], "mock_tqm": [[425, 8], [425, 16]], "queue_items": [[409, 8], [409, 19]], "res": [[454, 8], [454, 11]], "strategy_base": [[430, 8], [430, 21]], "vars": [[438, 8], [438, 23]]}, "fn_var_occur": {"_block": [["mock_task", "_block", "mock_block"]], "_filename": [["mock_inc_file", "_filename"], ["mock_inc_file", "_filename"]], "_final_q": [["mock_tqm", "_final_q", "mock_queue"]], "_listening_handlers": [["mock_tqm", "_listening_handlers"]], "_loader": [["strategy_base", "_loader", "fake_loader"]], "_notified_handlers": [["mock_tqm", "_notified_handlers"]], "_play": [["mock_block", "_play", "mock_play"]], "_role": [["mock_task", "_role", "None"]], "_task": [["mock_inc_file", "_task", "mock_task"]], "fake_loader": [["strategy_base", "_loader", "fake_loader"]], "mock_block": [["mock_block", "MagicMock"], ["mock_block", "_play", "mock_play"], ["mock_block", "vars", "dict"], ["mock_task", "_block", "mock_block"]], "mock_inc_file": [["mock_inc_file", "MagicMock"], ["mock_inc_file", "_task", "mock_task"], ["mock_inc_file", "_filename"], ["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"], ["mock_inc_file", "_filename"], ["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"]], "mock_iterator": [["mock_iterator", "MagicMock"], ["mock_iterator", "mark_host_failed", "return_value", "None"], ["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"], ["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"]], "mock_play": [["mock_play", "MagicMock"], ["mock_block", "_play", "mock_play"]], "mock_queue": [["mock_queue", "MagicMock"], ["mock_queue", "empty", "side_effect", "_queue_empty"], ["mock_queue", "get", "side_effect", "_queue_get"], ["mock_queue", "put", "side_effect", "_queue_put"], ["mock_tqm", "_final_q", "mock_queue"]], "mock_task": [["mock_task", "MagicMock"], ["mock_task", "_block", "mock_block"], ["mock_task", "_role", "None"], ["mock_inc_file", "_task", "mock_task"]], "mock_tqm": [["mock_tqm", "MagicMock"], ["mock_tqm", "_final_q", "mock_queue"], ["mock_tqm", "_notified_handlers"], ["mock_tqm", "_listening_handlers"], ["strategy_base", "StrategyBase", "tqm", "mock_tqm"]], "queue_items": [], "res": [["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"], ["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"], ["self", "assertEqual", "res"]], "strategy_base": [["strategy_base", "StrategyBase", "tqm", "mock_tqm"], ["strategy_base", "_loader", "fake_loader"], ["strategy_base", "cleanup"], ["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"], ["res", "strategy_base", "_load_included_file", "included_file", "mock_inc_file", "iterator", "mock_iterator"]], "vars": [["mock_block", "vars", "dict"]]}, "name": "test_strategy_base_load_included_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "res"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_load_included_file", "ret_exprs": [], "ret_type": "", "variables": {"_block": "", "_filename": "", "_final_q": "", "_listening_handlers": "", "_loader": "", "_notified_handlers": "", "_play": "", "_role": "", "_task": "", "fake_loader": "", "mock_block": "", "mock_inc_file": "", "mock_iterator": "", "mock_play": "", "mock_queue": "", "mock_task": "", "mock_tqm": "", "queue_items": "", "res": "", "strategy_base": "", "vars": ""}, "variables_p": {"_block": [["int", 0.19040686296501852], ["str", 0.18835781530607668], ["Type[DefaultDict[int, Any]]", 0.09568708853835553], ["dict", 0.08775971476002195], ["list", 0.08093623145977329]], "_filename": [["str", 1.0]], "_final_q": [["str", 0.5550841291921359], ["property", 0.14130392126924907], ["list", 0.06947490790529882], ["alibi.tests.utils.MockPredictor", 0.04616735948346832], ["List[Dict[str, str]]", 0.043474045434524856]], "_listening_handlers": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "_loader": [["str", 0.9999999998884033], ["int", 2.056047178505832e-11], ["Dict[str, Any]", 1.98948975959148e-11], ["set", 1.9387251910061224e-11]], "_notified_handlers": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "_play": [["str", 0.24370314133433607], ["property", 0.09401019737078573], ["list", 0.07748227739914827]], "_role": [["list", 0.0987031839520707]], "_task": [["mock._Call", 0.18420084959003888], ["queue.Queue[Any]", 0.14176775987412385], ["Optional[bytes]", 0.11064663486742149], ["Dict[str, int]", 0.10337851864662988], ["mock.Mock", 0.08635010211435402], ["unittesmock.MagicMock", 0.08156175290891736]], "fake_loader": [["str", 0.9999999998884033], ["int", 2.056047178505832e-11], ["Dict[str, Any]", 1.98948975959148e-11], ["set", 1.9387251910061224e-11]], "mock_block": [["unittesmock.MagicMock", 0.7457702782427589]], "mock_inc_file": [["str", 0.5430978686227768], ["Dict[str, Dict[str, Any]]", 0.28853422688810915], ["Dict[str, str]", 0.08546593976982889]], "mock_iterator": [["str", 0.3708295284690013], ["unittesmock.MagicMock", 0.21834078757111292], ["bytes", 0.19883569361598158], ["bool", 0.07427887970458422]], "mock_play": [["mock.Mock", 0.6970504285333835], ["mock.MagicMock", 0.18682015371019567]], "mock_queue": [["unittesmock.MagicMock", 0.40457367732398636], ["mock.Mock", 0.22928497232190798], ["str", 0.09725297866936634], ["mock.mock.MagicMock", 0.09158240831030698]], "mock_task": [["unittesmock.MagicMock", 0.4776587543372133], ["mock.Mock", 0.10105332656637725], ["mock.MagicMock", 0.0938432533965411]], "mock_tqm": [["str", 0.4626960202937139], ["unittesmock.MagicMock", 0.22534748600391133], ["Dict[str, Union[Any, Any]]", 0.1956259729532811]], "queue_items": [["str", 0.5], ["property", 0.1], ["Dict[str, str]", 0.1], ["int", 0.1], ["Optional[int]", 0.1], ["Type[Dict[str, Any]]", 0.1]], "res": [["List[str]", 0.20383585651459707], ["Dict[Any, Union[Any, Any, Any, Any, Any, Any]]", 0.17109624907573856], ["str", 0.16945276028297138], ["Tuple[Any, Any, Any]", 0.10881107917527019], ["Dict[bytes, Any]", 0.09149625034007726]], "strategy_base": [["str", 0.801157251725443], ["int", 0.10405572886858286]], "vars": [["List[bool]", 0.11036120500278249], ["unittesmock.MagicMock", 0.10745433525265942], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.10232229574945191], ["list", 0.09777258685850942], ["Dict[str, int]", 0.09412031357951695], ["dict", 0.09361294594477994], ["Dict[str, float]", 0.09260035491064045], ["str", 0.09059198934734404]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[459, 8], [460, 18]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "fake_run", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_run_handlers.<locals>.fake_run", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.0968071651928998], ["Iterable[Hashable]", 0.09351027224400177], ["Iterable[T]", 0.0917575001010836]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[458, 4], [519, 25]], "fn_var_ln": {"_inventory": [[510, 12], [510, 36]], "_notified_handlers": [[511, 12], [511, 44]], "_play": [[489, 8], [489, 27]], "_role": [[469, 8], [469, 31]], "action": [[465, 8], [465, 32]], "block": [[472, 8], [472, 26]], "fake_loader": [[492, 8], [492, 19]], "handlers": [[476, 8], [476, 26]], "has_hostkey": [[480, 8], [480, 29]], "hostvars": [[505, 8], [505, 20]], "listen": [[468, 8], [468, 32]], "mock_handler": [[471, 8], [471, 20]], "mock_handler_task": [[464, 8], [464, 25]], "mock_host": [[478, 8], [478, 17]], "mock_inventory": [[482, 8], [482, 22]], "mock_iterator": [[488, 8], [488, 21]], "mock_options": [[493, 8], [493, 20]], "mock_play": [[475, 8], [475, 17]], "mock_play_context": [[462, 8], [462, 25]], "mock_var_mgr": [[485, 8], [485, 20]], "module_path": [[494, 8], [494, 32]], "name": [[479, 8], [479, 22]], "result": [[516, 12], [516, 18]], "side_effect": [[461, 8], [461, 31]], "strategy_base": [[508, 12], [508, 25]], "task_result": [[513, 12], [513, 23]], "tqm": [[496, 8], [496, 11]]}, "fn_var_occur": {"_inventory": [["strategy_base", "_inventory", "mock_inventory"]], "_notified_handlers": [["strategy_base", "_notified_handlers", "mock_handler_task", "mock_host"]], "_play": [["mock_iterator", "_play", "mock_play"]], "_role": [["mock_handler_task", "_role", "None"]], "action": [["mock_handler_task", "action"]], "block": [["mock_handler", "block", "mock_handler_task"]], "fake_loader": [["fake_loader", "DictDataLoader"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_mgr", "loader", "fake_loader", "options", "mock_options", "passwords", "None"]], "handlers": [["mock_play", "handlers", "mock_handler"]], "has_hostkey": [["mock_host", "has_hostkey", "True"]], "hostvars": [["tqm", "hostvars", "dict"]], "listen": [["mock_handler_task", "listen", "None"]], "mock_handler": [["mock_handler", "MagicMock"], ["mock_handler", "block", "mock_handler_task"], ["mock_handler", "flag_for_host", "return_value", "False"], ["mock_play", "handlers", "mock_handler"]], "mock_handler_task": [["mock_handler_task", "MagicMock", "Handler"], ["mock_handler_task", "action"], ["mock_handler_task", "get_name", "return_value"], ["mock_handler_task", "has_triggered", "return_value", "False"], ["mock_handler_task", "listen", "None"], ["mock_handler_task", "_role", "None"], ["mock_handler", "block", "mock_handler_task"], ["mock_iterator", "get_original_task", "return_value", "mock_handler_task"], ["strategy_base", "_notified_handlers", "mock_handler_task", "mock_host"]], "mock_host": [["mock_host", "MagicMock", "Host"], ["mock_host", "name"], ["mock_host", "has_hostkey", "True"], ["mock_inventory", "get_hosts", "return_value", "mock_host"], ["strategy_base", "_notified_handlers", "mock_handler_task", "mock_host"]], "mock_inventory": [["mock_inventory", "MagicMock"], ["mock_inventory", "get_hosts", "return_value", "mock_host"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_mgr", "loader", "fake_loader", "options", "mock_options", "passwords", "None"], ["strategy_base", "_inventory", "mock_inventory"]], "mock_iterator": [["mock_iterator", "MagicMock"], ["mock_iterator", "_play", "mock_play"], ["mock_iterator", "get_original_task", "return_value", "mock_handler_task"], ["result", "strategy_base", "run_handlers", "iterator", "mock_iterator", "play_context", "mock_play_context"]], "mock_options": [["mock_options", "MagicMock"], ["mock_options", "module_path", "None"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_mgr", "loader", "fake_loader", "options", "mock_options", "passwords", "None"]], "mock_play": [["mock_play", "MagicMock"], ["mock_play", "handlers", "mock_handler"], ["mock_iterator", "_play", "mock_play"], ["tqm", "_initialize_notified_handlers", "mock_play"]], "mock_play_context": [["mock_play_context", "MagicMock"], ["result", "strategy_base", "run_handlers", "iterator", "mock_iterator", "play_context", "mock_play_context"]], "mock_var_mgr": [["mock_var_mgr", "MagicMock"], ["mock_var_mgr", "get_vars", "return_value", "dict"], ["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_mgr", "loader", "fake_loader", "options", "mock_options", "passwords", "None"]], "module_path": [["mock_options", "module_path", "None"]], "name": [["mock_host", "name"]], "result": [["result", "strategy_base", "run_handlers", "iterator", "mock_iterator", "play_context", "mock_play_context"]], "side_effect": [["mock_worker", "side_effect", "fake_run"]], "strategy_base": [["strategy_base", "StrategyBase", "tqm", "tqm"], ["strategy_base", "_inventory", "mock_inventory"], ["strategy_base", "_notified_handlers", "mock_handler_task", "mock_host"], ["result", "strategy_base", "run_handlers", "iterator", "mock_iterator", "play_context", "mock_play_context"], ["strategy_base", "cleanup"]], "task_result": [["task_result", "TaskResult", "Host", "Handler", "dict", "changed", "False"], ["tqm", "_final_q", "put", "task_result"]], "tqm": [["tqm", "TaskQueueManager", "inventory", "mock_inventory", "variable_manager", "mock_var_mgr", "loader", "fake_loader", "options", "mock_options", "passwords", "None"], ["tqm", "_initialize_processes"], ["tqm", "_initialize_notified_handlers", "mock_play"], ["tqm", "hostvars", "dict"], ["strategy_base", "StrategyBase", "tqm", "tqm"], ["tqm", "_final_q", "put", "task_result"], ["tqm", "cleanup"]]}, "name": "test_strategy_base_run_handlers", "params": {"mock_worker": "", "self": ""}, "params_descr": {"mock_worker": "", "self": ""}, "params_occur": {"mock_worker": [["mock_worker", "side_effect", "fake_run"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_worker": [["unittesmock.MagicMock", 0.8716701346970174], ["mock.Mock", 0.06857025160266175], ["mock.MagicMock", 0.05975961370032081]], "self": []}, "q_name": "TestStrategyBase.test_strategy_base_run_handlers", "ret_exprs": [], "ret_type": "", "variables": {"_inventory": "", "_notified_handlers": "", "_play": "", "_role": "", "action": "", "block": "", "fake_loader": "", "handlers": "", "has_hostkey": "", "hostvars": "", "listen": "", "mock_handler": "", "mock_handler_task": "", "mock_host": "", "mock_inventory": "", "mock_iterator": "", "mock_options": "", "mock_play": "", "mock_play_context": "", "mock_var_mgr": "", "module_path": "", "name": "", "result": "", "side_effect": "", "strategy_base": "", "task_result": "", "tqm": ""}, "variables_p": {"_inventory": [["str", 0.24796414861371008], ["unittesmock.MagicMock", 0.14229924633605057], ["int", 0.08633504010586122], ["Dict[str, Any]", 0.08321488529109677], ["alibi.tests.utils.MockPredictor", 0.08156947255447553]], "_notified_handlers": [["str", 0.3847786600056153], ["Dict[str, Union[Any, Any]]", 0.13803371500058714], ["mock.Mock", 0.10976672931594342], ["Dict[str, Dict[str, Any]]", 0.08271448562553937]], "_play": [["str", 0.4486985846107901], ["property", 0.14874501005132026], ["list", 0.08387036581138226], ["List[Dict[str, str]]", 0.05030744996949173]], "_role": [["str", 0.4973051241390706], ["Dict[str, Union[Any, Any]]", 0.10687518152285858], ["Dict[str, Dict[str, Any]]", 0.09036936494946211], ["mock._patch[Literal]", 0.07423253763190922], ["Dict[str, Union[int, str]]", 0.07326019245783937], ["List[str]", 0.06155529172357769]], "action": [["str", 0.5341535458838748], ["unittesmock.MagicMock", 0.12568550241569273], ["list", 0.11827523510936826], ["property", 0.09620021417537147]], "block": [["list", 0.2], ["dict", 0.1]], "fake_loader": [], "handlers": [["str", 0.379712822130117], ["list", 0.1716022618307828], ["property", 0.10813737104257716], ["Dict[str, Union[Any, Any, Any, Any]]", 0.07793769821297888], ["List[Union[Any, Any, Any]]", 0.07793769821297888]], "has_hostkey": [["str", 0.41115793144964186]], "hostvars": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "listen": [["str", 0.4973051241390706], ["Dict[str, Union[Any, Any]]", 0.10687518152285858], ["Dict[str, Dict[str, Any]]", 0.09036936494946211], ["mock._patch[Literal]", 0.07423253763190922], ["Dict[str, Union[int, str]]", 0.07326019245783937], ["List[str]", 0.06155529172357769]], "mock_handler": [["unittesmock.MagicMock", 0.6745678412545751], ["mock.MagicMock", 0.08737146068092354]], "mock_handler_task": [["Union[mock.AsyncMock, mock.MagicMock]", 0.571974602237911], ["unittesmock.MagicMock", 0.13731796516482983], ["Dict[str, Any]", 0.09044115191817023]], "mock_host": [["mock.Mock", 0.2337674371113999], ["mock.mock.MagicMock", 0.10448775035559654], ["unittesmock.MagicMock", 0.092492951342112]], "mock_inventory": [["mock.Mock", 0.30439991228993035], ["unittesmock.MagicMock", 0.1170701500784178]], "mock_iterator": [["Union[mock.AsyncMock, mock.MagicMock]", 0.6062514602497645], ["List[int]", 0.10360128417668403]], "mock_options": [["str", 0.38856781917779465], ["unittesmock.MagicMock", 0.10485646229511186], ["Dict[str, Any]", 0.09513001237377741]], "mock_play": [["Dict[str, Any]", 0.11572723650067326], ["unittesmock.MagicMock", 0.10993785696071942], ["List[int]", 0.09371337772316168], ["Dict[str, str]", 0.08984716610604254], ["tests.conftesConfluentAvroConsumerMock", 0.08441721087532633]], "mock_play_context": [["mock.Mock", 0.37342510404726525], ["unittesmock.MagicMock", 0.09263116747692036]], "mock_var_mgr": [["unittesmock.MagicMock", 0.38391612551887955], ["str", 0.268846706371925], ["mock.Mock", 0.1720199304379918]], "module_path": [["str", 0.5123434677264509], ["Optional[str]", 0.08235730600828005]], "name": [["str", 0.6994101492596789], ["Dict[str, str]", 0.1112620213890281], ["cmk.gui.plugins.views.utils.Command", 0.09552302875709505]], "result": [["mock._Call", 0.18480585081375867], ["Optional[bytes]", 0.1553543851347304], ["Dict[str, int]", 0.10595866005624821], ["RuntimeError", 0.0870517607310635], ["Dict[str, Any]", 0.08641307296195103], ["Tuple[int, int]", 0.08247262332949684], ["unittesmock.MagicMock", 0.07865085172143861]], "side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "strategy_base": [["str", 0.8214831021635608], ["Counter[str]", 0.09755980467884888], ["bytes", 0.08095709315759039]], "task_result": [["str", 0.18171525041128012], ["Type[Dict[str, Any]]", 0.10891185265827172], ["Dict[str, Union[Any, Any, Any]]", 0.10448713137920701], ["Dict[str, Any]", 0.1035523366488621], ["Dict[Any, Dict[str, Any]]", 0.10300044825939307], ["Dict[str, str]", 0.08439477704894599]], "tqm": [["bytes", 0.19054347569944102], ["raiden.tests.utils.mocks.MockRaidenService", 0.08761695991686753]]}}], "name": "TestStrategyBase", "q_name": "TestStrategyBase", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "uuid", "ansible", "compat", "tests", "unittest", "ansible", "compat", "tests", "mock", "patch", "MagicMock", "ansible", "errors", "AnsibleError", "AnsibleParserError", "ansible", "plugins", "strategy", "StrategyBase", "ansible", "executor", "process", "worker", "WorkerProcess", "ansible", "executor", "task_queue_manager", "TaskQueueManager", "ansible", "executor", "task_result", "TaskResult", "ansible", "playbook", "block", "Block", "ansible", "playbook", "handler", "Handler", "ansible", "inventory", "host", "Host", "six", "moves", "queue", "Queue", "units", "mock", "loader", "DictDataLoader"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 167}, "session_id": "-SRhKjL5RY9MhB64CWx3cj6B31RNEsO11nuYcMIqZPY", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}