{"error": null, "response": {"classes": [{"cls_lc": [[37, 0], [400, 101]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [65, 41]], "fn_var_ln": {"SSHPASS_AVAILABLE": [[59, 12], [59, 33]], "conn": [[42, 8], [42, 12]], "new_stdin": [[41, 8], [41, 17]], "pc": [[40, 8], [40, 10]], "res": [[45, 8], [45, 11]], "return_value": [[60, 12], [60, 26]], "side_effect": [[61, 12], [61, 25]]}, "fn_var_occur": {"SSHPASS_AVAILABLE": [["ssh", "SSHPASS_AVAILABLE", "False"], ["ssh", "SSHPASS_AVAILABLE", "True"], ["ssh", "SSHPASS_AVAILABLE", "None"], ["ssh", "SSHPASS_AVAILABLE", "None"]], "conn": [["conn", "ssh", "Connection", "pc", "new_stdin"], ["res", "conn", "_connect"], ["self", "assertEqual", "conn", "res"], ["self", "assertFalse", "conn", "_sshpass_available"], ["self", "assertTrue", "conn", "_sshpass_available"], ["self", "assertTrue", "conn", "_sshpass_available"], ["self", "assertFalse", "conn", "_sshpass_available"], ["conn", "close"], ["self", "assertFalse", "conn", "_connected"]], "new_stdin": [["new_stdin", "StringIO"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "pc": [["pc", "PlayContext"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "res": [["res", "conn", "_connect"], ["self", "assertEqual", "conn", "res"]], "return_value": [["p", "return_value", "MagicMock"], ["p", "return_value", "None"]], "side_effect": [["p", "side_effect", "OSError"]]}, "name": "test_plugins_connection_ssh_basic", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "conn", "res"], ["self", "assertFalse", "conn", "_sshpass_available"], ["self", "assertTrue", "conn", "_sshpass_available"], ["self", "assertTrue", "conn", "_sshpass_available"], ["self", "assertFalse", "conn", "_sshpass_available"], ["self", "assertFalse", "conn", "_connected"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh_basic", "ret_exprs": [], "ret_type": "", "variables": {"SSHPASS_AVAILABLE": "", "conn": "", "new_stdin": "", "pc": "", "res": "", "return_value": "", "side_effect": ""}, "variables_p": {"SSHPASS_AVAILABLE": [["str", 0.6136361780420189], ["List[str]", 0.09333080158628453]], "conn": [], "new_stdin": [["tests.utilities.factories.FakeCompletedProcess", 0.28200175385677406]], "pc": [["str", 0.09672176846177687], ["MutableMapping[str, Union[None, Any, Any, Any, Any, Any, Any]]", 0.09192682722702274]], "res": [], "return_value": [["int", 0.2393189167587989], ["List[Dict[str, str]]", 0.19883946987237183], ["Optional[bytes]", 0.191717255857911], ["str", 0.09566283783607343], ["Dict[str, Union[Any, Any, Any]]", 0.09202385320707492], ["List[str]", 0.08737366516834065]], "side_effect": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [71, 34]], "fn_var_ln": {"conn": [[70, 8], [70, 12]], "new_stdin": [[69, 8], [69, 17]], "pc": [[68, 8], [68, 10]]}, "fn_var_occur": {"conn": [["conn", "ssh", "Connection", "pc", "new_stdin"], ["conn", "_build_command"]], "new_stdin": [["new_stdin", "StringIO"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "pc": [["pc", "PlayContext"], ["conn", "ssh", "Connection", "pc", "new_stdin"]]}, "name": "test_plugins_connection_ssh__build_command", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__build_command", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "new_stdin": "", "pc": ""}, "variables_p": {"conn": [["List[str]", 0.5037042947360009], ["str", 0.2046167524817747], ["Dict[str, str]", 0.099207975335772], ["Tuple[str, str, str, str, str, str, str, str]", 0.09623548872322621], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09623548872322621]], "new_stdin": [["tests.utilities.factories.FakeCompletedProcess", 0.28200175385677406]], "pc": [["str", 0.09672176846177687], ["MutableMapping[str, Union[None, Any, Any, Any, Any, Any, Any]]", 0.09192682722702274]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [84, 76]], "fn_var_ln": {"_build_command": [[78, 8], [78, 27]], "_run": [[80, 8], [80, 17]], "conn": [[76, 8], [76, 12]], "new_stdin": [[75, 8], [75, 17]], "pc": [[74, 8], [74, 10]], "res": [[84, 8], [84, 11]], "stderr": [[84, 21], [84, 27]], "stdout": [[84, 13], [84, 19]]}, "fn_var_occur": {"_build_command": [["conn", "_build_command", "MagicMock"], ["conn", "_build_command", "return_value"]], "_run": [["conn", "_run", "MagicMock"], ["conn", "_run", "return_value"]], "conn": [["conn", "ssh", "Connection", "pc", "new_stdin"], ["conn", "_build_command", "MagicMock"], ["conn", "_build_command", "return_value"], ["conn", "_run", "MagicMock"], ["conn", "_run", "return_value"], ["res", "stdout", "stderr", "conn", "_exec_command"], ["res", "stdout", "stderr", "conn", "_exec_command"]], "new_stdin": [["new_stdin", "StringIO"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "pc": [["pc", "PlayContext"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "res": [["res", "stdout", "stderr", "conn", "_exec_command"], ["res", "stdout", "stderr", "conn", "_exec_command"]], "stderr": [["res", "stdout", "stderr", "conn", "_exec_command"], ["res", "stdout", "stderr", "conn", "_exec_command"]], "stdout": [["res", "stdout", "stderr", "conn", "_exec_command"], ["res", "stdout", "stderr", "conn", "_exec_command"]]}, "name": "test_plugins_connection_ssh__exec_command", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__exec_command", "ret_exprs": [], "ret_type": "", "variables": {"_build_command": "", "_run": "", "conn": "", "new_stdin": "", "pc": "", "res": "", "stderr": "", "stdout": ""}, "variables_p": {"_build_command": [["str", 0.4916341304592995], ["int", 0.2120272378184102], ["mock.Mock", 0.20460200130491873], ["unittesmock.MagicMock", 0.09173663041737148]], "_run": [["int", 0.8652466898340223]], "conn": [["Counter[str]", 0.09297089063643138], ["edp.plugins.PluginManager", 0.08643004245652039]], "new_stdin": [["tests.utilities.factories.FakeCompletedProcess", 0.28200175385677406]], "pc": [["str", 0.09672176846177687], ["MutableMapping[str, Union[None, Any, Any, Any, Any, Any, Any]]", 0.09192682722702274]], "res": [["bytes", 0.27792144291497534], ["Pattern[str]", 0.20219843840606944], ["Dict[str, Any]", 0.08523931506207401]], "stderr": [["str", 0.5253027375031875], ["Pattern[str]", 0.10570364843059156], ["Dict[str, str]", 0.09224840351655524], ["Dict[str, float]", 0.09224840351655524]], "stdout": [["str", 0.5253027375031875], ["Pattern[str]", 0.10570364843059156], ["Dict[str, str]", 0.09224840351655524], ["Dict[str, float]", 0.09224840351655524]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 8], [120, 34]], "fn_var_ln": {"rvals": [[115, 12], [115, 17]]}, "fn_var_occur": {"rvals": [["rvals", "append", "mock_popen_res", "stdin"], ["rvals", "append", "mock_popen_res", "stderr"]]}, "name": "_mock_select", "params": {"elist": "", "rlist": "", "timeout": "", "wlist": ""}, "params_descr": {"elist": "", "rlist": "", "timeout": "", "wlist": ""}, "params_occur": {"elist": [], "rlist": [["mock_popen_res", "stdin", "rlist"], ["mock_popen_res", "stderr", "rlist"]], "timeout": [], "wlist": []}, "params_p": {"args": [], "elist": [["bool", 0.3942678509042288], ["int", 0.1922055399344041], ["str", 0.1039067651362376], ["constants.HttpVersion", 0.10180631375265418]], "kwargs": [], "rlist": [["bool", 0.38590730514052785], ["int", 0.2095483897931281], ["str", 0.1532491853157375], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.07662459265786875]], "self": [], "timeout": [["bool", 0.3942678509042288], ["int", 0.1922055399344041], ["str", 0.1039067651362376], ["constants.HttpVersion", 0.10180631375265418]], "wlist": [["bool", 0.3942678509042288], ["int", 0.1922055399344041], ["str", 0.1039067651362376], ["constants.HttpVersion", 0.10180631375265418]]}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__run.<locals>._mock_select", "ret_exprs": ["return (rvals, [], [])"], "ret_type": "", "ret_type_p": [["float", 0.9999990174352198], ["Callable[[bytes], None]", 9.817041414000904e-07], ["bool", 4.921578316949067e-10], ["str", 1.42060527209136e-10]], "variables": {"rvals": ""}, "variables_p": {"rvals": [["list", 0.8045089957166698], ["List[str]", 0.19549100428333022]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [160, 28]], "fn_var_ln": {"_examine_output": [[98, 8], [98, 28]], "_send_initial_data": [[97, 8], [97, 31]], "_terminate_process": [[99, 8], [99, 31]], "become": [[143, 8], [143, 17]], "conn": [[96, 8], [96, 12]], "mock_popen_res": [[102, 8], [102, 22]], "new_stdin": [[94, 8], [94, 17]], "password": [[135, 8], [135, 19]], "pc": [[93, 8], [93, 10]], "poll": [[103, 8], [103, 27]], "prompt": [[142, 8], [142, 17]], "return_code": [[111, 8], [111, 34]], "return_value": [[156, 8], [156, 31]], "side_effect": [[157, 8], [157, 30]], "sshpass_pipe": [[100, 8], [100, 25]], "stderr": [[109, 8], [109, 29]], "stdin": [[105, 8], [105, 28]], "stdout": [[107, 8], [107, 29]], "success_key": [[144, 8], [144, 22]], "wait": [[104, 8], [104, 27]]}, "fn_var_occur": {"_examine_output": [], "_send_initial_data": [], "_terminate_process": [], "become": [["pc", "become", "True"]], "conn": [["conn", "_run"], ["conn", "_run"], ["conn", "_run"], ["conn", "_run"], ["conn", "_run"], ["conn", "_run"]], "mock_popen_res": [["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_Popen", "side_effect", "OSError", "mock_popen_res"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"]], "new_stdin": [], "password": [["pc", "password"], ["pc", "password", "None"]], "pc": [["pc", "password"], ["pc", "password", "None"], ["pc", "prompt", "True"], ["pc", "prompt", "False"], ["pc", "become", "True"], ["pc", "success_key"]], "poll": [], "prompt": [["pc", "prompt", "True"], ["pc", "prompt", "False"]], "return_code": [], "return_value": [["mock_openpty", "return_value"], ["mock_Popen", "return_value", "None"]], "side_effect": [["mock_select", "side_effect", "_mock_select"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_Popen", "side_effect", "OSError", "mock_popen_res"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"]], "sshpass_pipe": [], "stderr": [["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"], ["mock_popen_res", "stderr", "read", "side_effect"]], "stdin": [], "stdout": [["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"], ["mock_popen_res", "stdout", "read", "side_effect"]], "success_key": [["pc", "success_key"]], "wait": []}, "name": "test_plugins_connection_ssh__run", "params": {"mock_Popen": "", "mock_fcntl": "", "mock_openpty": "", "mock_osclose": "", "mock_oswrite": "", "mock_select": "", "self": ""}, "params_descr": {"mock_Popen": "", "mock_fcntl": "", "mock_openpty": "", "mock_osclose": "", "mock_oswrite": "", "mock_select": "", "self": ""}, "params_occur": {"mock_Popen": [["mock_Popen", "return_value", "None"], ["mock_Popen", "side_effect", "OSError", "mock_popen_res"]], "mock_fcntl": [], "mock_openpty": [["mock_openpty", "return_value"]], "mock_osclose": [], "mock_oswrite": [], "mock_select": [["mock_select", "side_effect", "_mock_select"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_Popen": [["mock.MagicMock", 0.24128683697464415], ["unittesmock.MagicMock", 0.1945854004421409]], "mock_fcntl": [["mock.Mock", 0.3107414707471201]], "mock_openpty": [["mock.Mock", 0.20720379997509147]], "mock_osclose": [["mock.Mock", 0.3107414707471201]], "mock_oswrite": [["mock.Mock", 0.3107414707471201]], "mock_select": [["mock.Mock", 0.18889089875995507], ["unittesmock.MagicMock", 0.18606807230051853]], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__run", "ret_exprs": [], "ret_type": "", "variables": {"_examine_output": "", "_send_initial_data": "", "_terminate_process": "", "become": "", "conn": "", "mock_popen_res": "", "new_stdin": "", "password": "", "pc": "", "poll": "", "prompt": "", "return_code": "", "return_value": "", "side_effect": "", "sshpass_pipe": "", "stderr": "", "stdin": "", "stdout": "", "success_key": "", "wait": ""}, "variables_p": {"_examine_output": [["str", 0.4000000000000001], ["bool", 0.20000000000000004], ["int", 0.10000000000000002], ["List[bytes]", 0.10000000000000002], ["IO", 0.10000000000000002]], "_send_initial_data": [["str", 0.6], ["int", 0.2], ["cmk.gui.plugins.openapi.livestatus_helpers.types.Column", 0.1], ["Type[bytes]", 0.1]], "_terminate_process": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "become": [["bool", 0.7999999999999999], ["str", 0.1], ["io.BytesIO", 0.1]], "conn": [["str", 0.25249295352341683], ["int", 0.11579901101133279], ["Set[str]", 0.08599810758895139], ["Dict[str, str]", 0.07998649264168053], ["List[Union[Any, Any]]", 0.07938115287492892]], "mock_popen_res": [["int", 0.4563860648872414], ["str", 0.38918639099900554], ["Dict[str, Dict[str, str]]", 0.07709705047595634]], "new_stdin": [["str", 0.5], ["int", 0.2], ["list", 0.1], ["Optional[int]", 0.1]], "password": [["str", 0.6075545475765044]], "pc": [["str", 0.2756739527572917], ["List[str]", 0.12056510134473838], ["list", 0.1056431724970745], ["List[List[str]]", 0.10006109651091831]], "poll": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "prompt": [["float", 0.8333333333142927], ["list", 0.16666666666285854], ["str", 1.1178178999681522e-11], ["Type[int]", 7.944677982197884e-12]], "return_code": [["int", 0.8333333332849613], ["Optional[int]", 0.16666666664102708], ["Tuple[int, int]", 3.4447248223051206e-11]], "return_value": [["Dict[str, Union[Any, Any]]", 0.19398695426223872], ["Dict[str, Dict[str, Any]]", 0.1913050238635574], ["Dict[str, Union[Any, Any, Any]]", 0.10355844036323962], ["Dict[str, Union[int, str]]", 0.09840689317593265], ["List[Dict[str, str]]", 0.09638879830640869], ["unittesmock.MagicMock", 0.08028432736838392]], "side_effect": [["str", 0.21588079247100667], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.1146464832371752], ["List[str]", 0.09694495936586932], ["property", 0.08943547248158737], ["alibi.tests.utils.MockPredictor", 0.08022197456975227], ["tests.core.base_schema_tesMockSchemaCollection", 0.07563939555032038]], "sshpass_pipe": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "stderr": [["str", 0.37699920964015554], ["Dict[str, Any]", 0.208303469641004], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.09681630558156601], ["kippo.tasks.tests.test_task_functions.IssueMock", 0.09383762076321828]], "stdin": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "stdout": [["str", 0.5178803738190091], ["Dict[str, Any]", 0.21229379489503383], ["List[str]", 0.08317577546130389]], "success_key": [["Set[str]", 0.33333333328336195], ["frozenset[str]", 0.3333333332792409], ["str", 0.3333333332792409], ["Type[Tuple[tuple, Any]]", 4.397319910777536e-11], ["List[str]", 3.938496348015714e-11], ["Dict[str, Any]", 3.5263910052004475e-11], ["Tuple[str, str, str, str, str, str, str, str]", 3.5263910052004475e-11], ["Set[int]", 4.270118958601743e-12]], "wait": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[173, 8], [176, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_password_prompt", "params": {"line": ""}, "params_descr": {"line": ""}, "params_occur": {"line": []}, "params_p": {"args": [], "kwargs": [], "line": [["bool", 0.30437235500466664], ["str", 0.26256678486002155], ["List[str]", 0.21653043006765588], ["Optional[float]", 0.13060554145824388], ["Iterable[str]", 0.08592488860941201]], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__examine_output.<locals>._check_password_prompt", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[178, 8], [181, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_become_success", "params": {"line": ""}, "params_descr": {"line": ""}, "params_occur": {"line": []}, "params_p": {"args": [], "kwargs": [], "line": [["List[AnyStr]", 0.49999999999999994], ["str", 0.19999999999999998], ["List[str]", 0.09999999999999999], ["Iterable[str]", 0.09999999999999999], ["Iterable[Sequence[str]]", 0.09999999999999999]], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__examine_output.<locals>._check_become_success", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[183, 8], [186, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_incorrect_password", "params": {"line": ""}, "params_descr": {"line": ""}, "params_occur": {"line": []}, "params_p": {"args": [], "kwargs": [], "line": [["str", 0.3978535996347051], ["Iterable[str]", 0.30107320018264744], ["List[str]", 0.20071546678843163], ["bool", 0.10035773339421582]], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__examine_output.<locals>._check_incorrect_password", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 8], [191, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_missing_password", "params": {"line": ""}, "params_descr": {"line": ""}, "params_occur": {"line": []}, "params_p": {"args": [], "kwargs": [], "line": [["str", 0.3978535996347051], ["Iterable[str]", 0.30107320018264744], ["List[str]", 0.20071546678843163], ["bool", 0.10035773339421582]], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__examine_output.<locals>._check_missing_password", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[162, 4], [267, 61]], "fn_var_ln": {"_flags": [[252, 8], [252, 19]], "check_become_success": [[169, 8], [169, 33]], "check_incorrect_password": [[170, 8], [170, 37]], "check_missing_password": [[171, 8], [171, 35]], "check_password_prompt": [[168, 8], [168, 34]], "conn": [[166, 8], [166, 12]], "new_stdin": [[164, 8], [164, 17]], "output": [[261, 8], [261, 14]], "pc": [[163, 8], [163, 10]], "prompt": [[259, 8], [259, 17]], "success_key": [[260, 8], [260, 22]], "unprocessed": [[261, 16], [261, 27]]}, "fn_var_occur": {"_flags": [["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"]], "check_become_success": [["conn", "check_become_success", "side_effect", "_check_become_success"]], "check_incorrect_password": [["conn", "check_incorrect_password", "side_effect", "_check_incorrect_password"]], "check_missing_password": [["conn", "check_missing_password", "side_effect", "_check_missing_password"]], "check_password_prompt": [["conn", "check_password_prompt", "side_effect", "_check_password_prompt"]], "conn": [["conn", "check_password_prompt", "side_effect", "_check_password_prompt"], ["conn", "check_become_success", "side_effect", "_check_become_success"], ["conn", "check_incorrect_password", "side_effect", "_check_incorrect_password"], ["conn", "check_missing_password", "side_effect", "_check_missing_password"], ["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["output", "unprocessed", "conn", "_examine_output", "False"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["output", "unprocessed", "conn", "_examine_output", "False"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["output", "unprocessed", "conn", "_examine_output", "True"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["conn", "_flags", "dict", "become_prompt", "False", "become_success", "False", "become_error", "False", "become_nopasswd_error", "False"], ["output", "unprocessed", "conn", "_examine_output", "True"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"]], "new_stdin": [], "output": [["output", "unprocessed", "conn", "_examine_output", "False"], ["self", "assertEqual", "output"], ["output", "unprocessed", "conn", "_examine_output", "False"], ["self", "assertEqual", "output"], ["output", "unprocessed", "conn", "_examine_output", "True"], ["self", "assertEqual", "output"], ["output", "unprocessed", "conn", "_examine_output", "True"], ["self", "assertEqual", "output"]], "pc": [["pc", "prompt", "True"], ["pc", "prompt", "False"], ["pc", "success_key"], ["pc", "prompt", "False"], ["pc", "success_key", "None"], ["pc", "prompt", "False"], ["pc", "success_key", "None"]], "prompt": [["pc", "prompt", "True"], ["pc", "prompt", "False"], ["pc", "prompt", "False"], ["pc", "prompt", "False"]], "success_key": [["pc", "success_key"], ["pc", "success_key", "None"], ["pc", "success_key", "None"]], "unprocessed": [["output", "unprocessed", "conn", "_examine_output", "False"], ["self", "assertEqual", "unprocessed"], ["output", "unprocessed", "conn", "_examine_output", "False"], ["self", "assertEqual", "unprocessed"], ["output", "unprocessed", "conn", "_examine_output", "True"], ["self", "assertEqual", "unprocessed"], ["output", "unprocessed", "conn", "_examine_output", "True"], ["self", "assertEqual", "unprocessed"]]}, "name": "test_plugins_connection_ssh__examine_output", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "output"], ["self", "assertEqual", "unprocessed"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertEqual", "output"], ["self", "assertEqual", "unprocessed"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertEqual", "output"], ["self", "assertEqual", "unprocessed"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertEqual", "output"], ["self", "assertEqual", "unprocessed"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertFalse", "conn", "_flags"], ["self", "assertTrue", "conn", "_flags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh__examine_output", "ret_exprs": [], "ret_type": "", "variables": {"_flags": "", "check_become_success": "", "check_incorrect_password": "", "check_missing_password": "", "check_password_prompt": "", "conn": "", "new_stdin": "", "output": "", "pc": "", "prompt": "", "success_key": "", "unprocessed": ""}, "variables_p": {"_flags": [["str", 0.7988106420290122]], "check_become_success": [["str", 0.9999999999999999]], "check_incorrect_password": [["str", 0.9999999999999999]], "check_missing_password": [["str", 0.9999999999999999]], "check_password_prompt": [["str", 0.8498764256521271], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.150123574347873]], "conn": [["str", 0.508053917179608], ["Dict[str, Union[Any, Any]]", 0.11529963844679716], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10381918004878936], ["Dict[str, str]", 0.0876846927960308]], "new_stdin": [["str", 0.5], ["int", 0.2], ["list", 0.1], ["Optional[int]", 0.1]], "output": [["dict", 0.09916419551474524], ["bytes", 0.09145243669860541]], "pc": [["str", 0.8995099136474521], ["Dict[str, Union[bool, str]]", 0.10049008635254773]], "prompt": [["str", 0.9999999999999998]], "success_key": [["Optional[bytes]", 0.29894636027147103], ["str", 0.25930064579396184], ["Optional[str]", 0.1705886187479247], ["bytes", 0.16911573220900306]], "unprocessed": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[270, 4], [296, 75]], "fn_var_ln": {"ANSIBLE_SSH_RETRIES": [[277, 8], [277, 29]], "_build_command": [[274, 8], [274, 27]], "_exec_command": [[275, 8], [275, 26]], "conn": [[273, 8], [273, 12]], "new_stdin": [[272, 8], [272, 17]], "pc": [[271, 8], [271, 10]], "res": [[287, 8], [287, 11]]}, "fn_var_occur": {"ANSIBLE_SSH_RETRIES": [["C", "ANSIBLE_SSH_RETRIES"]], "_build_command": [["conn", "_build_command", "MagicMock"]], "_exec_command": [["conn", "_exec_command", "MagicMock"], ["conn", "_exec_command", "return_value"], ["conn", "_exec_command", "return_value", "None"], ["conn", "_exec_command", "side_effect"], ["conn", "_exec_command", "side_effect"], ["conn", "_exec_command", "side_effect", "Exception"]], "conn": [["conn", "ssh", "Connection", "pc", "new_stdin"], ["conn", "_build_command", "MagicMock"], ["conn", "_exec_command", "MagicMock"], ["conn", "_exec_command", "return_value"], ["res", "conn", "exec_command"], ["conn", "_exec_command", "return_value", "None"], ["conn", "_exec_command", "side_effect"], ["res", "conn", "exec_command"], ["conn", "_exec_command", "side_effect"], ["self", "assertRaises", "AnsibleConnectionFailure", "conn", "exec_command"], ["conn", "_exec_command", "side_effect", "Exception"], ["self", "assertRaises", "Exception", "conn", "exec_command"]], "new_stdin": [["new_stdin", "StringIO"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "pc": [["pc", "PlayContext"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "res": [["res", "conn", "exec_command"], ["self", "assertEquals", "res", "msg"], ["res", "conn", "exec_command"], ["self", "assertEquals", "res", "msg"]]}, "name": "test_plugins_connection_ssh_exec_command", "params": {"mock_sleep": "", "self": ""}, "params_descr": {"mock_sleep": "", "self": ""}, "params_occur": {"mock_sleep": [], "self": [["self", "assertEquals", "res", "msg"], ["self", "assertEquals", "res", "msg"], ["self", "assertRaises", "AnsibleConnectionFailure", "conn", "exec_command"], ["self", "assertRaises", "Exception", "conn", "exec_command"]]}, "params_p": {"args": [], "kwargs": [], "mock_sleep": [["mock.Mock", 0.7777836840202353]], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh_exec_command", "ret_exprs": [], "ret_type": "", "variables": {"ANSIBLE_SSH_RETRIES": "", "_build_command": "", "_exec_command": "", "conn": "", "new_stdin": "", "pc": "", "res": ""}, "variables_p": {"ANSIBLE_SSH_RETRIES": [["TextIO", 0.5089858489279423], ["str", 0.1960985069882144], ["int", 0.08578133279982528]], "_build_command": [["str", 0.3909406609961029], ["int", 0.1279998392939325], ["bool", 0.10182238195477657]], "_exec_command": [["unittesmock.MagicMock", 0.1134729972219697], ["Dict[str, Union[int, str]]", 0.09098334218926202], ["str", 0.0892990573985596], ["List[str]", 0.08165958274285834], ["Dict[int, Dict[str, Any]]", 0.07465088708923734]], "conn": [["edp.plugins.PluginManager", 0.2844275127109238], ["Counter[str]", 0.08643843096094819]], "new_stdin": [["tests.utilities.factories.FakeCompletedProcess", 0.28200175385677406]], "pc": [["str", 0.09672176846177687], ["MutableMapping[str, Union[None, Any, Any, Any, Any, Any, Any]]", 0.09192682722702274]], "res": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [352, 106]], "fn_var_ln": {"DEFAULT_SCP_IF_SSH": [[333, 8], [333, 28]], "_build_command": [[303, 8], [303, 27]], "_run": [[304, 8], [304, 17]], "conn": [[302, 8], [302, 12]], "expected_in_data": [[338, 8], [338, 24]], "host": [[309, 8], [309, 17]], "new_stdin": [[301, 8], [301, 17]], "pc": [[300, 8], [300, 10]], "return_value": [[350, 8], [350, 30]]}, "fn_var_occur": {"DEFAULT_SCP_IF_SSH": [["C", "DEFAULT_SCP_IF_SSH"], ["C", "DEFAULT_SCP_IF_SSH", "True"], ["C", "DEFAULT_SCP_IF_SSH", "False"]], "_build_command": [["conn", "_build_command", "MagicMock"], ["conn", "_build_command", "return_value"]], "_run": [["conn", "_run", "MagicMock"], ["conn", "_run", "return_value"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "side_effect"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "side_effect", "None"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "return_value"], ["conn", "_run", "return_value"]], "conn": [["conn", "ssh", "Connection", "pc", "new_stdin"], ["conn", "_build_command", "MagicMock"], ["conn", "_run", "MagicMock"], ["conn", "_build_command", "return_value"], ["conn", "_run", "return_value"], ["conn", "host"], ["conn", "put_file"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "side_effect"], ["conn", "put_file"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "side_effect", "None"], ["conn", "put_file"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "put_file"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "put_file"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "put_file"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "return_value"], ["self", "assertRaises", "AnsibleError", "conn", "put_file"], ["conn", "_run", "return_value"], ["self", "assertRaises", "AnsibleFileNotFound", "conn", "put_file"]], "expected_in_data": [["expected_in_data", "join", "to_bytes", "pipes", "quote", "to_bytes", "pipes", "quote"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["expected_in_data", "join", "to_bytes", "pipes", "quote", "to_bytes", "pipes", "quote"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["expected_in_data", "join", "to_bytes", "pipes", "quote", "to_bytes", "pipes", "quote"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"]], "host": [["conn", "host"]], "new_stdin": [["new_stdin", "StringIO"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "pc": [["pc", "PlayContext"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "return_value": [["mock_ospe", "return_value", "True"], ["conn", "_build_command", "return_value"], ["conn", "_run", "return_value"], ["conn", "_run", "return_value"], ["mock_ospe", "return_value", "False"], ["conn", "_run", "return_value"]]}, "name": "test_plugins_connection_ssh_put_file", "params": {"mock_ospe": "", "self": ""}, "params_descr": {"mock_ospe": "", "self": ""}, "params_occur": {"mock_ospe": [["mock_ospe", "return_value", "True"], ["mock_ospe", "return_value", "False"]], "self": [["self", "assertRaises", "AnsibleError", "conn", "put_file"], ["self", "assertRaises", "AnsibleFileNotFound", "conn", "put_file"]]}, "params_p": {"args": [], "kwargs": [], "mock_ospe": [["unittesmock.MagicMock", 0.4217189827901596], ["mock.MagicMock", 0.17822909620896543]], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh_put_file", "ret_exprs": [], "ret_type": "", "variables": {"DEFAULT_SCP_IF_SSH": "", "_build_command": "", "_run": "", "conn": "", "expected_in_data": "", "host": "", "new_stdin": "", "pc": "", "return_value": ""}, "variables_p": {"DEFAULT_SCP_IF_SSH": [["int", 0.13196170636676685]], "_build_command": [["str", 0.4916341304592995], ["int", 0.2120272378184102], ["mock.Mock", 0.20460200130491873], ["unittesmock.MagicMock", 0.09173663041737148]], "_run": [["unittesmock.MagicMock", 0.6948334874969063]], "conn": [["edp.plugins.PluginManager", 0.09605019081979568], ["Dict[str, Union[Any, Any, Any]]", 0.09499116550666621]], "expected_in_data": [["bytes", 0.7014128053760752], ["Dict[str, bytes]", 0.1931935831831406], ["int", 0.10539361144078435]], "host": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "new_stdin": [["tests.utilities.factories.FakeCompletedProcess", 0.28200175385677406]], "pc": [["str", 0.09672176846177687], ["MutableMapping[str, Union[None, Any, Any, Any, Any, Any, Any]]", 0.09192682722702274]], "return_value": [["str", 0.6004594736402782], ["Dict[str, Union[int, str]]", 0.11400119551070116], ["Dict[str, str]", 0.09803162952156824], ["unittesmock.MagicMock", 0.09530917373410679], ["int", 0.09219852759334568]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[354, 4], [400, 101]], "fn_var_ln": {"DEFAULT_SCP_IF_SSH": [[387, 8], [387, 28]], "_build_command": [[358, 8], [358, 27]], "_run": [[359, 8], [359, 17]], "conn": [[357, 8], [357, 12]], "expected_in_data": [[392, 8], [392, 24]], "host": [[363, 8], [363, 17]], "new_stdin": [[356, 8], [356, 17]], "pc": [[355, 8], [355, 10]]}, "fn_var_occur": {"DEFAULT_SCP_IF_SSH": [["C", "DEFAULT_SCP_IF_SSH"], ["C", "DEFAULT_SCP_IF_SSH", "True"], ["C", "DEFAULT_SCP_IF_SSH", "False"]], "_build_command": [["conn", "_build_command", "MagicMock"], ["conn", "_build_command", "return_value"]], "_run": [["conn", "_run", "MagicMock"], ["conn", "_run", "return_value"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "side_effect"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "side_effect", "None"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "return_value"]], "conn": [["conn", "ssh", "Connection", "pc", "new_stdin"], ["conn", "_build_command", "MagicMock"], ["conn", "_run", "MagicMock"], ["conn", "_build_command", "return_value"], ["conn", "_run", "return_value"], ["conn", "host"], ["conn", "fetch_file"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "side_effect"], ["conn", "fetch_file"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "_run", "side_effect", "None"], ["conn", "fetch_file"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "fetch_file"], ["conn", "_run", "assert_called_with", "None", "checkrc", "False"], ["conn", "fetch_file"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "fetch_file"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["conn", "_run", "return_value"], ["self", "assertRaises", "AnsibleError", "conn", "fetch_file"]], "expected_in_data": [["expected_in_data", "join", "to_bytes", "pipes", "quote", "to_bytes", "pipes", "quote"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["expected_in_data", "join", "to_bytes", "pipes", "quote", "to_bytes", "pipes", "quote"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"], ["expected_in_data", "join", "to_bytes", "pipes", "quote", "to_bytes", "pipes", "quote"], ["conn", "_run", "assert_called_with", "expected_in_data", "checkrc", "False"]], "host": [["conn", "host"]], "new_stdin": [["new_stdin", "StringIO"], ["conn", "ssh", "Connection", "pc", "new_stdin"]], "pc": [["pc", "PlayContext"], ["conn", "ssh", "Connection", "pc", "new_stdin"]]}, "name": "test_plugins_connection_ssh_fetch_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "AnsibleError", "conn", "fetch_file"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionBaseClass.test_plugins_connection_ssh_fetch_file", "ret_exprs": [], "ret_type": "", "variables": {"DEFAULT_SCP_IF_SSH": "", "_build_command": "", "_run": "", "conn": "", "expected_in_data": "", "host": "", "new_stdin": "", "pc": ""}, "variables_p": {"DEFAULT_SCP_IF_SSH": [["int", 0.13196170636676685]], "_build_command": [["str", 0.4916341304592995], ["int", 0.2120272378184102], ["mock.Mock", 0.20460200130491873], ["unittesmock.MagicMock", 0.09173663041737148]], "_run": [["unittesmock.MagicMock", 0.6948334874969063]], "conn": [["edp.plugins.PluginManager", 0.09605019081979568], ["Dict[str, Union[Any, Any, Any]]", 0.09499116550666621]], "expected_in_data": [["bytes", 0.7014128053760752], ["Dict[str, bytes]", 0.1931935831831406], ["int", 0.10539361144078435]], "host": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "new_stdin": [["tests.utilities.factories.FakeCompletedProcess", 0.28200175385677406]], "pc": [["str", 0.09672176846177687], ["MutableMapping[str, Union[None, Any, Any, Any, Any, Any, Any]]", 0.09192682722702274]]}}], "name": "TestConnectionBaseClass", "q_name": "TestConnectionBaseClass", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "pipes", "io", "StringIO", "ansible", "compat", "tests", "unittest", "ansible", "compat", "tests", "mock", "patch", "MagicMock", "ansible", "constants", "C", "ansible", "errors", "AnsibleError", "AnsibleConnectionFailure", "AnsibleFileNotFound", "ansible", "playbook", "play_context", "PlayContext", "ansible", "plugins", "connection", "ssh", "ansible", "module_utils", "_text", "to_bytes"], "mod_var_ln": {"__metaclass__": [[22, 0], [22, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 105}, "session_id": "UV136Ua1xSpM9HZd01JUIVDQFNuBEiikDoOTSL0eHLs", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}