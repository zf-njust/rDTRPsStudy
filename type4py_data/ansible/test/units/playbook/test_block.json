{"error": null, "response": {"classes": [{"cls_lc": [[26, 0], [76, 47]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[28, 4], [29, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBlock.setUp", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [32, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBlock.tearDown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [35, 19]], "fn_var_ln": {"b": [[35, 8], [35, 9]]}, "fn_var_occur": {"b": [["b", "Block"]]}, "name": "test_construct_empty_block", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBlock.test_construct_empty_block", "ret_exprs": [], "ret_type": "", "variables": {"b": ""}, "variables_p": {"b": [["float", 0.3], ["int", 0.09999999999999999], ["dict", 0.09999999999999999], ["Tuple[int, int]", 0.09999999999999999], ["Iterator[Any]", 0.09999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 4], [38, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_construct_block_with_role", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBlock.test_construct_block_with_role", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [50, 38]], "fn_var_ln": {"b": [[47, 8], [47, 9]], "ds": [[41, 8], [41, 10]]}, "fn_var_occur": {"b": [["b", "Block", "load", "ds"], ["self", "assertEqual", "b", "block"], ["self", "assertEqual", "b", "rescue"], ["self", "assertEqual", "b", "always"]], "ds": [["ds", "dict", "block", "rescue", "always"], ["b", "Block", "load", "ds"]]}, "name": "test_load_block_simple", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "b", "block"], ["self", "assertEqual", "b", "rescue"], ["self", "assertEqual", "b", "always"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBlock.test_load_block_simple", "ret_exprs": [], "ret_type": "", "variables": {"b": "", "ds": ""}, "variables_p": {"b": [], "ds": [["int", 0.23161795436955734], ["float", 0.15285668691454535], ["Tuple[Literal, Literal]", 0.07176462961881379]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [67, 48]], "fn_var_ln": {"b": [[61, 8], [61, 9]], "ds": [[55, 8], [55, 10]]}, "fn_var_occur": {"b": [["b", "Block", "load", "ds"], ["self", "assertEqual", "len", "b", "block"], ["self", "assertIsInstance", "b", "block", "Task"], ["self", "assertEqual", "len", "b", "rescue"], ["self", "assertIsInstance", "b", "rescue", "Task"], ["self", "assertEqual", "len", "b", "always"], ["self", "assertIsInstance", "b", "always", "Task"]], "ds": [["ds", "dict", "block", "dict", "action", "rescue", "dict", "action", "always", "dict", "action"], ["b", "Block", "load", "ds"]]}, "name": "test_load_block_with_tasks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "b", "block"], ["self", "assertIsInstance", "b", "block", "Task"], ["self", "assertEqual", "len", "b", "rescue"], ["self", "assertIsInstance", "b", "rescue", "Task"], ["self", "assertEqual", "len", "b", "always"], ["self", "assertIsInstance", "b", "always", "Task"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBlock.test_load_block_with_tasks", "ret_exprs": [], "ret_type": "", "variables": {"b": "", "ds": ""}, "variables_p": {"b": [["List[List[int]]", 0.11075327879298065], ["float", 0.0975219422686271]], "ds": [["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.12032108253538039], ["Dict[str, str]", 0.10861336520302636], ["Dict[str, Any]", 0.09631003328117266], ["int", 0.09051276955218128]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [76, 47]], "fn_var_ln": {"b": [[74, 8], [74, 9]], "ds": [[73, 8], [73, 10]]}, "fn_var_occur": {"b": [["b", "Block", "load", "ds"], ["self", "assertEqual", "len", "b", "block"], ["self", "assertIsInstance", "b", "block", "Task"]], "ds": [["ds", "dict", "action"], ["b", "Block", "load", "ds"]]}, "name": "test_load_implicit_block", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "b", "block"], ["self", "assertIsInstance", "b", "block", "Task"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBlock.test_load_implicit_block", "ret_exprs": [], "ret_type": "", "variables": {"b": "", "ds": ""}, "variables_p": {"b": [["float", 0.09345042155100707]], "ds": [["str", 0.22274627725033413], ["List[str]", 0.11642409651988202], ["List[int]", 0.09756851191290923], ["Dict[str, str]", 0.09437328353373872], ["dict", 0.0829083163299766]]}}], "name": "TestBlock", "q_name": "TestBlock", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "ansible", "playbook", "block", "Block", "ansible", "playbook", "task", "Task", "ansible", "compat", "tests", "unittest"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 15}, "session_id": "rzpGLM8A2OaL7H-uWYqpkS5iFeHPyYBrQYFp9XFeLJc", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}