{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [140, 40]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [37, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.setUp", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [40, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.tearDown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [44, 36]], "fn_var_ln": {"p": [[43, 8], [43, 9]]}, "fn_var_occur": {"p": [["p", "Play", "load", "dict"], ["self", "assertEqual", "str", "p"]]}, "name": "test_empty_play", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "str", "p"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_empty_play", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [55, 10]], "fn_var_ln": {"p": [[47, 8], [47, 9]]}, "fn_var_occur": {"p": [["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "connection", "remote_user", "become", "True", "become_user"]]}, "name": "test_basic_play", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_basic_play", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": [["str", 0.2973194791974602], ["list", 0.17625466018971692], ["Set[str]", 0.10975422501957093], ["Dict[str, Any]", 0.10363900945859315]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[57, 4], [64, 50]], "fn_var_ln": {"p": [[58, 8], [58, 9]]}, "fn_var_occur": {"p": [["p", "Play", "load", "dict", "name", "hosts", "user", "gather_facts", "False"], ["self", "assertEqual", "p", "remote_user"]]}, "name": "test_play_with_user_conflict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "p", "remote_user"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_with_user_conflict", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": [["str", 0.18623962524737897], ["Counter[Any]", 0.18439655434603058], ["dict", 0.08582756623705837]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[66, 4], [73, 67]], "fn_var_ln": {"play_data": [[67, 8], [67, 17]]}, "fn_var_occur": {"play_data": [["play_data", "dict", "name", "hosts", "user", "remote_user"], ["self", "assertRaises", "AnsibleParserError", "Play", "load", "play_data"]]}, "name": "test_play_with_user_conflict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "AnsibleParserError", "Play", "load", "play_data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_with_user_conflict", "ret_exprs": [], "ret_type": "", "variables": {"play_data": ""}, "variables_p": {"play_data": [["int", 0.3156233886245773], ["list", 0.21596965458953235], ["str", 0.19566451547823305], ["DefaultDict[Any, List[Any]]", 0.09972577430192908], ["List[str]", 0.08920245160871036], ["Tuple[int]", 0.08381421539701799]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [81, 10]], "fn_var_ln": {"p": [[76, 8], [76, 9]]}, "fn_var_occur": {"p": [["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "tasks", "dict", "action"]]}, "name": "test_play_with_tasks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_with_tasks", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": [["Dict[Any, list]", 0.1657542223580573], ["Set[str]", 0.1369082523595052], ["int", 0.12544465183548473], ["bool", 0.09208596786934464], ["Dict[str, str]", 0.08439363725769317], ["dict", 0.0837415171756217]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [89, 10]], "fn_var_ln": {"p": [[84, 8], [84, 9]]}, "fn_var_occur": {"p": [["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "handlers", "dict", "action"]]}, "name": "test_play_with_handlers", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_with_handlers", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": [["Dict[Any, list]", 0.18401336888902523], ["Optional[str]", 0.11784194171378613], ["Optional[float]", 0.10531005659342305], ["dict", 0.09495687853377416], ["str", 0.09039052332421522]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [97, 10]], "fn_var_ln": {"p": [[92, 8], [92, 9]]}, "fn_var_occur": {"p": [["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "pre_tasks", "dict", "action"]]}, "name": "test_play_with_pre_tasks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_with_pre_tasks", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": [["Set[str]", 0.12560913419659459]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [105, 10]], "fn_var_ln": {"p": [[100, 8], [100, 9]]}, "fn_var_occur": {"p": [["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "post_tasks", "dict", "action"]]}, "name": "test_play_with_post_tasks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_with_post_tasks", "ret_exprs": [], "ret_type": "", "variables": {"p": ""}, "variables_p": {"p": [["str", 0.21194523267443474], ["Set[str]", 0.15060676037006637], ["int", 0.09832828692409609], ["List[Union[Any, Any, Any, Any]]", 0.09280987698882581]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[108, 4], [126, 28]], "fn_var_ln": {"blocks": [[126, 8], [126, 14]], "fake_loader": [[109, 8], [109, 19]], "mock_var_manager": [[116, 8], [116, 24]], "p": [[119, 8], [119, 9]]}, "fn_var_occur": {"blocks": [["blocks", "p", "compile"]], "fake_loader": [["fake_loader", "DictDataLoader"], ["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "roles", "loader", "fake_loader", "variable_manager", "mock_var_manager"]], "mock_var_manager": [["mock_var_manager", "MagicMock"], ["mock_var_manager", "get_vars", "return_value", "dict"], ["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "roles", "loader", "fake_loader", "variable_manager", "mock_var_manager"]], "p": [["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "roles", "loader", "fake_loader", "variable_manager", "mock_var_manager"], ["blocks", "p", "compile"]]}, "name": "test_play_with_roles", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_with_roles", "ret_exprs": [], "ret_type": "", "variables": {"blocks": "", "fake_loader": "", "mock_var_manager": "", "p": ""}, "variables_p": {"blocks": [["Set[int]", 0.7999999999999999], ["str", 0.1], ["float", 0.1]], "fake_loader": [["str", 0.139884383567169], ["Mapping", 0.139884383567169], ["dict", 0.09276006700509154], ["Dict[str, Any]", 0.08826427714440349]], "mock_var_manager": [["unittesmock.MagicMock", 0.5856538688030433], ["mock.MagicMock", 0.20408022511277604], ["mock.Mock", 0.11121171685608947]], "p": [["str", 0.11123880675145584], ["Dict[str, Union[Any, Any]]", 0.10846456550209292], ["List[str]", 0.09504658889363128], ["Dict[str, Any]", 0.08946754493555145], ["Type[object]", 0.08776599386941501], ["bool", 0.08699293262690122], ["dict", 0.08396046859451328]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [140, 40]], "fn_var_ln": {"blocks": [[136, 8], [136, 14]], "p": [[129, 8], [129, 9]]}, "fn_var_occur": {"blocks": [["blocks", "p", "compile"], ["self", "assertEqual", "len", "blocks"]], "p": [["p", "Play", "load", "dict", "name", "hosts", "gather_facts", "False", "tasks", "dict", "action"], ["blocks", "p", "compile"]]}, "name": "test_play_compile", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "blocks"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlay.test_play_compile", "ret_exprs": [], "ret_type": "", "variables": {"blocks": "", "p": ""}, "variables_p": {"blocks": [["Dict[str, Any]", 0.09837365455376477], ["int", 0.08084068726771648], ["str", 0.07479384262779926]], "p": [["str", 0.11396873941294083]]}}], "name": "TestPlay", "q_name": "TestPlay", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "print_function", "ansible", "compat", "tests", "unittest", "ansible", "compat", "tests", "mock", "patch", "MagicMock", "ansible", "errors", "AnsibleError", "AnsibleParserError", "ansible", "playbook", "block", "Block", "ansible", "playbook", "play", "Play", "ansible", "playbook", "role", "Role", "units", "mock", "loader", "DictDataLoader", "units", "mock", "path", "mock_unfrackpath_noop"], "mod_var_ln": {"__metaclass__": [[20, 0], [20, 13]]}, "mod_var_occur": {"__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 26}, "session_id": "Akwp0ZIRQfQTB40h-BUnqX77yqjlCzlLBnPX0NgHljY", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"__metaclass__": ""}, "variables_p": {"__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}