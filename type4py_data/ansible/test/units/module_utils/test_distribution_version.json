{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "tests the distribution parsing code of the Facts class", "long_descr": "testsets have\n* a name (for output/debugging only)\n* input files that are faked\n  * those should be complete and also include \"irrelevant\" files that might be mistaken as coming from other distributions\n  * all files that are not listed here are assumed to not exist at all\n* the output of pythons platform.dist()\n* results for the ansible variables distribution* and os_family", "ret": null}, "fn_lc": [[671, 0], [693, 58]], "fn_var_ln": {"args": [[685, 4], [685, 8]], "description": [[692, 12], [692, 46]], "module": [[687, 8], [687, 14]]}, "fn_var_occur": {"args": [["args", "json", "dumps", "dict", "ANSIBLE_MODULE_ARGS"], ["swap_stdin_and_argv", "stdin_data", "args"]], "description": [["_test_one_distribution", "description", "t"]], "module": [["module", "basic", "AnsibleModule", "argument_spec", "dict"], ["_test_one_distribution", "facts", "module", "t"]]}, "name": "test_distribution_version", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_distribution_version", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "description": "", "module": ""}, "variables_p": {"args": [["dict", 0.2611833930697013], ["list", 0.08313417182549396]], "description": [["str", 1.0]], "module": [["Dict[str, Any]", 0.11879333236063712], ["str", 0.08985856153633365]]}}, {"docstring": {"func": "give fake content if it exists, otherwise pretend the file is empty", "long_descr": null, "ret": null}, "fn_lc": [[703, 4], [712, 19]], "fn_var_ln": {"data": [[711, 12], [711, 16]]}, "fn_var_occur": {"data": [["data", "default"], ["data", "testcase", "fname", "strip"], ["strip", "data", "None"], ["data", "data", "strip"]]}, "name": "mock_get_file_content", "params": {"default": "", "fname": "", "strip": ""}, "params_descr": {"default": "", "fname": "", "strip": ""}, "params_occur": {"default": [["data", "default"]], "fname": [["fname", "testcase"], ["print", "fname", "testcase"], ["data", "testcase", "fname", "strip"]], "strip": [["data", "testcase", "fname", "strip"], ["strip", "data", "None"], ["data", "data", "strip"]]}, "params_p": {"args": [], "default": [["str", 0.4426575091263538], ["Callable[[], bool]", 0.23243986655818882], ["List[Dict[str, Any]]", 0.21556183543891125]], "fname": [["dict", 0.19011000618982174], ["List[Dict]", 0.18408745453678976], ["Dict[str, Any]", 0.11443416968742584], ["list", 0.109333514670017], ["Callable", 0.09134381344136946], ["Sequence", 0.09003811864653306]], "kwargs": [], "strip": [["Optional[str]", 0.20411921927249546], ["bytes", 0.19497452082123037], ["str", 0.09338211207660199]]}, "q_name": "_test_one_distribution.<locals>.mock_get_file_content", "ret_exprs": ["return data"], "ret_type": "", "ret_type_p": [["dict", 0.18742167188687403], ["List[List[str]]", 0.1391120489004862], ["Dict[str, Any]", 0.10228015345515731], ["int", 0.10153476812700735], ["Iterable", 0.09062291449768939], ["Dict[str, Union[str, bool]]", 0.08650470150062807]], "variables": {"data": ""}, "variables_p": {"data": [["Optional[str]", 0.11625470661054862], ["Dict[str, str]", 0.11506173471067598], ["Type[Dict[str, Any]]", 0.10934241770466555], ["bytes", 0.10360526301043999], ["str", 0.09638997546971402], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08853652107346023], ["Optional[bytes]", 0.08586954127720334], ["dict", 0.0818786387152313]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[714, 4], [715, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_get_uname_version", "params": {"module": ""}, "params_descr": {"module": ""}, "params_occur": {"module": []}, "params_p": {"args": [], "kwargs": [], "module": [["bool", 0.5080311272821069], ["str", 0.29999289941100904]]}, "q_name": "_test_one_distribution.<locals>.mock_get_uname_version", "ret_exprs": ["return testcase.get('uname_v', None)"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.11835642647743606], ["int", 0.10431376824843065], ["str", 0.10348414253963152], ["Optional[Dict[str, Any]]", 0.09677322782094964], ["Optional[dict]", 0.09402987876445816]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[717, 4], [718, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_path_exists", "params": {"fname": ""}, "params_descr": {"fname": ""}, "params_occur": {"fname": [["fname", "testcase"]]}, "params_p": {"args": [], "fname": [["str", 0.4111809731426439], ["int", 0.0705172198222698], ["bool", 0.06275997443204398]], "kwargs": []}, "q_name": "_test_one_distribution.<locals>.mock_path_exists", "ret_exprs": ["return fname in testcase['input']"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999998]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[720, 4], [725, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_path_getsize", "params": {"fname": ""}, "params_descr": {"fname": ""}, "params_occur": {"fname": [["fname", "testcase"], ["len", "testcase", "fname"]]}, "params_p": {"args": [], "fname": [["str", 0.2854534416531602], ["bool", 0.2668627193610449], ["int", 0.17954680352404265], ["list", 0.11473263549055547], ["List[List[int]]", 0.07864442752959051], ["Sequence[T]", 0.07475997244160636]], "kwargs": []}, "q_name": "_test_one_distribution.<locals>.mock_path_getsize", "ret_exprs": ["return len(testcase['input'][fname])", "return 0"], "ret_type": "", "ret_type_p": [["str", 0.4111809731426439], ["int", 0.0705172198222698], ["bool", 0.06275997443204398]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[727, 4], [728, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_platform_system", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_test_one_distribution.<locals>.mock_platform_system", "ret_exprs": ["return testcase.get('platform.system', 'Linux')"], "ret_type": "", "ret_type_p": [["str", 0.7344695622427917], ["bool", 0.10094022640494124]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[736, 4], [737, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_facts", "params": {"testcase": ""}, "params_descr": {"testcase": ""}, "params_occur": {"testcase": []}, "params_p": {"args": [], "kwargs": [], "testcase": [["bool", 0.39999999999999997], ["str", 0.39999999999999997], ["T", 0.09999999999999999], ["dict", 0.09999999999999999]]}, "q_name": "_test_one_distribution.<locals>.get_facts", "ret_exprs": ["return facts.Facts(module).populate()"], "ret_type": "", "ret_type_p": [["bool", 0.6292838031861585], ["str", 0.2732272346663438]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "run the test on one distribution testcase", "long_descr": "* prepare some mock functions to get the testdata in\n* run Facts()\n* compare with the expected output", "ret": null}, "fn_lc": [[695, 0], [746, 47]], "fn_var_ln": {"generated_facts": [[739, 4], [739, 19]], "msg": [[744, 8], [744, 11]]}, "fn_var_occur": {"generated_facts": [["generated_facts", "get_facts", "testcase"], ["key", "generated_facts"], ["msg", "key", "testcase", "val", "generated_facts", "key"], ["generated_facts", "key", "val", "msg"]], "msg": [["msg", "key", "testcase", "val", "generated_facts", "key"], ["generated_facts", "key", "val", "msg"]]}, "name": "_test_one_distribution", "params": {"facts": "", "module": "", "testcase": ""}, "params_descr": {"facts": "", "module": "", "testcase": ""}, "params_occur": {"facts": [], "module": [], "testcase": [["generated_facts", "get_facts", "testcase"], ["testcase", "items"], ["msg", "key", "testcase", "val", "generated_facts", "key"]]}, "params_p": {"args": [], "facts": [["bool", 0.2657972964518613], ["tests.testmodels.Signals", 0.08312124251756782]], "kwargs": [], "module": [["bool", 0.2657972964518613], ["tests.testmodels.Signals", 0.08312124251756782]], "testcase": [["Callable[[List, bool], None]", 0.6034153540131469]]}, "q_name": "_test_one_distribution", "ret_exprs": [], "ret_type": "", "variables": {"generated_facts": "", "msg": ""}, "variables_p": {"generated_facts": [["dict", 0.711431902135646], ["Dict[str, Set[str]]", 0.10342356442608291], ["Dict[str, str]", 0.09370176025772668]], "msg": [["int", 0.45568445722521045], ["tuple", 0.27765985808071936], ["set", 0.09079759785865427]]}}], "imports": ["__future__", "absolute_import", "division", "sys", "json", "units", "mock", "procenv", "swap_stdin_and_argv", "ansible", "compat", "tests", "unittest", "ansible", "compat", "tests", "mock", "patch", "ansible.module_utils.facts", "facts", "ansible", "module_utils", "basic"], "mod_var_ln": {"TESTSETS": [[37, 0], [37, 8]], "__metaclass__": [[19, 0], [19, 13]]}, "mod_var_occur": {"TESTSETS": [["TESTSETS"]], "__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 26}, "session_id": "8dbTGjQJU4RPn8p8cvLQoxYUcTVJ4TIgHU_ZcD3cKhI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TESTSETS": "", "__metaclass__": ""}, "variables_p": {"TESTSETS": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}