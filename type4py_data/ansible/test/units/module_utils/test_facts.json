{"error": null, "response": {"classes": [{"cls_lc": [[27, 0], [45, 57]], "cls_var_ln": {"fact_class": [[29, 4], [29, 14]], "platform_id": [[28, 4], [28, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[33, 4], [37, 57]], "fn_var_ln": {"inst": [[35, 8], [35, 12]], "return_value": [[34, 8], [34, 34]]}, "fn_var_occur": {"inst": [["inst", "self", "fact_class", "module", "Mock", "load_on_init", "False"], ["self", "assertIsInstance", "inst", "self", "fact_class"], ["self", "assertEqual", "inst", "platform", "self", "platform_id"]], "return_value": [["mock_platform", "return_value", "self", "platform_id"]]}, "name": "test_new", "params": {"mock_platform": "", "self": ""}, "params_descr": {"mock_platform": "", "self": ""}, "params_occur": {"mock_platform": [["mock_platform", "return_value", "self", "platform_id"]], "self": [["mock_platform", "return_value", "self", "platform_id"], ["inst", "self", "fact_class", "module", "Mock", "load_on_init", "False"], ["self", "assertIsInstance", "inst", "self", "fact_class"], ["self", "assertEqual", "inst", "platform", "self", "platform_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_platform": [["unittesmock.Mock", 0.486960164340683], ["mock.MagicMock", 0.0956887557351023]], "self": []}, "q_name": "BaseTestFactsPlatform.test_new", "ret_exprs": [], "ret_type": "", "variables": {"inst": "", "return_value": ""}, "variables_p": {"inst": [["raiden.tests.utils.mocks.MockRaidenService", 0.1670977092608083], ["str", 0.15252766860133996], ["kippo.tasks.tests.test_task_functions.IssueMock", 0.08874871446726773]], "return_value": [["str", 0.39284654937367974], ["unittesmock.Mock", 0.2089765498244054], ["Dict[str, Union[Any, Any]]", 0.17377745359096297], ["int", 0.13415068463201565], ["List[Dict[str, Any]]", 0.09024876257893616]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [45, 57]], "fn_var_ln": {"inst": [[43, 8], [43, 12]]}, "fn_var_occur": {"inst": [["inst", "self", "fact_class", "module", "Mock", "load_on_init", "False"], ["self", "assertIsInstance", "inst", "self", "fact_class"], ["self", "assertEqual", "inst", "platform", "self", "platform_id"]]}, "name": "test_subclass", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "platform_id"], ["inst", "self", "fact_class", "module", "Mock", "load_on_init", "False"], ["self", "assertIsInstance", "inst", "self", "fact_class"], ["self", "assertEqual", "inst", "platform", "self", "platform_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestFactsPlatform.test_subclass", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {"inst": ""}, "variables_p": {"inst": [["raiden.tests.utils.mocks.MockRaidenService", 0.1670977092608083], ["str", 0.15252766860133996], ["kippo.tasks.tests.test_task_functions.IssueMock", 0.08874871446726773]]}}], "name": "BaseTestFactsPlatform", "q_name": "BaseTestFactsPlatform", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[48, 0], [50, 36]], "cls_var_ln": {"fact_class": [[50, 4], [50, 14]], "platform_id": [[49, 4], [49, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestLinuxFactsPlatform", "q_name": "TestLinuxFactsPlatform", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[53, 0], [55, 36]], "cls_var_ln": {"fact_class": [[55, 4], [55, 14]], "platform_id": [[54, 4], [54, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestSunOSHardware", "q_name": "TestSunOSHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[58, 0], [60, 38]], "cls_var_ln": {"fact_class": [[60, 4], [60, 14]], "platform_id": [[59, 4], [59, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestOpenBSDHardware", "q_name": "TestOpenBSDHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[63, 0], [65, 38]], "cls_var_ln": {"fact_class": [[65, 4], [65, 14]], "platform_id": [[64, 4], [64, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestFreeBSDHardware", "q_name": "TestFreeBSDHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[68, 0], [70, 40]], "cls_var_ln": {"fact_class": [[70, 4], [70, 14]], "platform_id": [[69, 4], [69, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestDragonFlyHardware", "q_name": "TestDragonFlyHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[73, 0], [75, 37]], "cls_var_ln": {"fact_class": [[75, 4], [75, 14]], "platform_id": [[74, 4], [74, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestNetBSDHardware", "q_name": "TestNetBSDHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[78, 0], [80, 26]], "cls_var_ln": {"fact_class": [[80, 4], [80, 14]], "platform_id": [[79, 4], [79, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestAIXHardware", "q_name": "TestAIXHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[83, 0], [85, 27]], "cls_var_ln": {"fact_class": [[85, 4], [85, 14]], "platform_id": [[84, 4], [84, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestHPUXHardware", "q_name": "TestHPUXHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[88, 0], [90, 29]], "cls_var_ln": {"fact_class": [[90, 4], [90, 14]], "platform_id": [[89, 4], [89, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestDarwinHardware", "q_name": "TestDarwinHardware", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[93, 0], [95, 30]], "cls_var_ln": {"fact_class": [[95, 4], [95, 14]], "platform_id": [[94, 4], [94, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestGenericNetwork", "q_name": "TestGenericNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[98, 0], [100, 30]], "cls_var_ln": {"fact_class": [[100, 4], [100, 14]], "platform_id": [[99, 4], [99, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestLinuxNetwork", "q_name": "TestLinuxNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[103, 0], [105, 48]], "cls_var_ln": {"fact_class": [[105, 4], [105, 14]], "platform_id": [[104, 4], [104, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestGenericBsdIfconfigNetwork", "q_name": "TestGenericBsdIfconfigNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[108, 0], [110, 34]], "cls_var_ln": {"fact_class": [[110, 4], [110, 14]], "platform_id": [[109, 4], [109, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestHPUXNetwork", "q_name": "TestHPUXNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[113, 0], [115, 36]], "cls_var_ln": {"fact_class": [[115, 4], [115, 14]], "platform_id": [[114, 4], [114, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestDarwinNetwork", "q_name": "TestDarwinNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[118, 0], [120, 37]], "cls_var_ln": {"fact_class": [[120, 4], [120, 14]], "platform_id": [[119, 4], [119, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestFreeBSDNetwork", "q_name": "TestFreeBSDNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[123, 0], [125, 39]], "cls_var_ln": {"fact_class": [[125, 4], [125, 14]], "platform_id": [[124, 4], [124, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestDragonFlyNetwork", "q_name": "TestDragonFlyNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[128, 0], [130, 33]], "cls_var_ln": {"fact_class": [[130, 4], [130, 14]], "platform_id": [[129, 4], [129, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestAIXNetwork", "q_name": "TestAIXNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[133, 0], [135, 37]], "cls_var_ln": {"fact_class": [[135, 4], [135, 14]], "platform_id": [[134, 4], [134, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestOpenBSDNetwork", "q_name": "TestOpenBSDNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[138, 0], [140, 35]], "cls_var_ln": {"fact_class": [[140, 4], [140, 14]], "platform_id": [[139, 4], [139, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestSunOSNetwork", "q_name": "TestSunOSNetwork", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[143, 0], [145, 35]], "cls_var_ln": {"fact_class": [[145, 4], [145, 14]], "platform_id": [[144, 4], [144, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestLinuxVirtual", "q_name": "TestLinuxVirtual", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[148, 0], [150, 37]], "cls_var_ln": {"fact_class": [[150, 4], [150, 14]], "platform_id": [[149, 4], [149, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestFreeBSDVirtual", "q_name": "TestFreeBSDVirtual", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[153, 0], [155, 39]], "cls_var_ln": {"fact_class": [[155, 4], [155, 14]], "platform_id": [[154, 4], [154, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestDragonFlyVirtual", "q_name": "TestDragonFlyVirtual", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[158, 0], [160, 37]], "cls_var_ln": {"fact_class": [[160, 4], [160, 14]], "platform_id": [[159, 4], [159, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestOpenBSDVirtual", "q_name": "TestOpenBSDVirtual", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[163, 0], [165, 34]], "cls_var_ln": {"fact_class": [[165, 4], [165, 14]], "platform_id": [[164, 4], [164, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestHPUXVirtual", "q_name": "TestHPUXVirtual", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[168, 0], [170, 35]], "cls_var_ln": {"fact_class": [[170, 4], [170, 14]], "platform_id": [[169, 4], [169, 15]]}, "cls_var_occur": {"fact_class": [], "platform_id": []}, "funcs": [], "name": "TestSunOSVirtual", "q_name": "TestSunOSVirtual", "variables": {"fact_class": "", "platform_id": ""}, "variables_p": {"fact_class": [["str", 0.49999999999999994], ["Type[benchmarkEVMs.Py-EVM.tests.trinity.core.integration_test_helpers.FakeAsyncChainDB]", 0.09999999999999999]], "platform_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]]}}, {"cls_lc": [[451, 0], [559, 93]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[454, 4], [456, 33]], "fn_var_ln": {"GATHER_TIMEOUT": [[456, 8], [456, 28]]}, "fn_var_occur": {"GATHER_TIMEOUT": [["facts", "GATHER_TIMEOUT"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.setUp", "ret_exprs": [], "ret_type": "", "variables": {"GATHER_TIMEOUT": ""}, "variables_p": {"GATHER_TIMEOUT": [["int", 0.9999999999090581], ["Dict[str, int]", 3.2650676818582226e-11], ["str", 3.1710272850514584e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[458, 4], [459, 35]], "fn_var_ln": {"GATHER_TIMEOUT": [[459, 8], [459, 28]]}, "fn_var_occur": {"GATHER_TIMEOUT": [["facts", "GATHER_TIMEOUT", "None"]]}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.tearDown", "ret_exprs": [], "ret_type": "", "variables": {"GATHER_TIMEOUT": ""}, "variables_p": {"GATHER_TIMEOUT": [["int", 0.7254663259593439], ["str", 0.19870893431863265]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[467, 4], [480, 58]], "fn_var_ln": {"lh": [[473, 8], [473, 10]], "module": [[471, 8], [471, 14]]}, "fn_var_occur": {"lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["lh", "get_mount_facts"], ["self", "assertIsInstance", "lh", "facts", "dict"], ["self", "assertIn", "lh", "facts"], ["self", "assertIsInstance", "lh", "facts", "list"], ["self", "assertIsInstance", "lh", "facts", "dict"]], "module": [["module", "Mock"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_get_mount_facts", "params": {"mock_find_bind_mounts": "", "mock_lsblk_uuid": "", "mock_mtab_entries": "", "self": ""}, "params_descr": {"mock_find_bind_mounts": "", "mock_lsblk_uuid": "", "mock_mtab_entries": "", "self": ""}, "params_occur": {"mock_find_bind_mounts": [], "mock_lsblk_uuid": [], "mock_mtab_entries": [], "self": [["self", "assertIsInstance", "lh", "facts", "dict"], ["self", "assertIn", "lh", "facts"], ["self", "assertIsInstance", "lh", "facts", "list"], ["self", "assertIsInstance", "lh", "facts", "dict"]]}, "params_p": {"args": [], "kwargs": [], "mock_find_bind_mounts": [["mock.Mock", 0.6342781931874631], ["unittesmock.Mock", 0.365721806812537]], "mock_lsblk_uuid": [["mock.Mock", 0.6342781931874631], ["unittesmock.Mock", 0.365721806812537]], "mock_mtab_entries": [["mock.Mock", 0.6342781931874631], ["unittesmock.Mock", 0.365721806812537]], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_get_mount_facts", "ret_exprs": [], "ret_type": "", "variables": {"lh": "", "module": ""}, "variables_p": {"lh": [], "module": [["str", 0.24310871022261366], ["Dict[str, Tuple[str, Any]]", 0.16612161110922535], ["unittesmock.Mock", 0.08148667092876744]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[483, 4], [490, 47]], "fn_var_ln": {"lh": [[486, 8], [486, 10]], "module": [[485, 8], [485, 14]], "mtab_entries": [[487, 8], [487, 20]]}, "fn_var_occur": {"lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["mtab_entries", "lh", "_mtab_entries"]], "module": [["module", "Mock"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]], "mtab_entries": [["mtab_entries", "lh", "_mtab_entries"], ["self", "assertIsInstance", "mtab_entries", "list"], ["self", "assertIsInstance", "mtab_entries", "list"], ["self", "assertEqual", "len", "mtab_entries"]]}, "name": "test_get_mtab_entries", "params": {"mock_get_file_content": "", "self": ""}, "params_descr": {"mock_get_file_content": "", "self": ""}, "params_occur": {"mock_get_file_content": [], "self": [["self", "assertIsInstance", "mtab_entries", "list"], ["self", "assertIsInstance", "mtab_entries", "list"], ["self", "assertEqual", "len", "mtab_entries"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_file_content": [["mock.MagicMock", 0.18014556293374584], ["unittesmock.Mock", 0.1619791975592345]], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_get_mtab_entries", "ret_exprs": [], "ret_type": "", "variables": {"lh": "", "module": "", "mtab_entries": ""}, "variables_p": {"lh": [["int", 0.17574693126601665], ["Dict[str, Union[Any, Any]]", 0.08787346563300832]], "module": [["str", 0.24310871022261366], ["Dict[str, Tuple[str, Any]]", 0.16612161110922535], ["unittesmock.Mock", 0.08148667092876744]], "mtab_entries": [["str", 0.10587775562509262], ["int", 0.09707740596045242], ["List[List[Any]]", 0.09406162653924072], ["list", 0.08857932794226181]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[493, 4], [501, 60]], "fn_var_ln": {"bind_mounts": [[496, 8], [496, 19]], "lh": [[495, 8], [495, 10]], "module": [[494, 8], [494, 14]]}, "fn_var_occur": {"bind_mounts": [["bind_mounts", "lh", "_find_bind_mounts"], ["self", "assertIsInstance", "bind_mounts", "set"], ["self", "assertEqual", "len", "bind_mounts"], ["self", "assertIn", "bind_mounts"]], "lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["bind_mounts", "lh", "_find_bind_mounts"]], "module": [["module", "Mock"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_find_bind_mounts", "params": {"mock_run_findmnt": "", "self": ""}, "params_descr": {"mock_run_findmnt": "", "self": ""}, "params_occur": {"mock_run_findmnt": [], "self": [["self", "assertIsInstance", "bind_mounts", "set"], ["self", "assertEqual", "len", "bind_mounts"], ["self", "assertIn", "bind_mounts"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_findmnt": [["str", 0.19243264734280197], ["int", 0.19243264734280197], ["Dict[str, Any]", 0.10091399373040517]], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_find_bind_mounts", "ret_exprs": [], "ret_type": "", "variables": {"bind_mounts": "", "lh": "", "module": ""}, "variables_p": {"bind_mounts": [["str", 0.20035037368020692]], "lh": [], "module": [["str", 0.24310871022261366], ["Dict[str, Tuple[str, Any]]", 0.16612161110922535], ["unittesmock.Mock", 0.08148667092876744]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[504, 4], [510, 45]], "fn_var_ln": {"bind_mounts": [[507, 8], [507, 19]], "lh": [[506, 8], [506, 10]], "module": [[505, 8], [505, 14]]}, "fn_var_occur": {"bind_mounts": [["bind_mounts", "lh", "_find_bind_mounts"], ["self", "assertIsInstance", "bind_mounts", "set"], ["self", "assertEqual", "len", "bind_mounts"]], "lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["bind_mounts", "lh", "_find_bind_mounts"]], "module": [["module", "Mock"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_find_bind_mounts_non_zero", "params": {"mock_run_findmnt": "", "self": ""}, "params_descr": {"mock_run_findmnt": "", "self": ""}, "params_occur": {"mock_run_findmnt": [], "self": [["self", "assertIsInstance", "bind_mounts", "set"], ["self", "assertEqual", "len", "bind_mounts"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_findmnt": [["Dict[str, Any]", 0.1630707153081914], ["unittesmock.Mock", 0.07538952454721724]], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_find_bind_mounts_non_zero", "ret_exprs": [], "ret_type": "", "variables": {"bind_mounts": "", "lh": "", "module": ""}, "variables_p": {"bind_mounts": [["Dict[str, List[str]]", 0.18350927852291798]], "lh": [], "module": [["str", 0.24310871022261366], ["Dict[str, Tuple[str, Any]]", 0.16612161110922535], ["unittesmock.Mock", 0.08148667092876744]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[512, 4], [519, 45]], "fn_var_ln": {"bind_mounts": [[516, 8], [516, 19]], "get_bin_path": [[514, 8], [514, 27]], "lh": [[515, 8], [515, 10]], "module": [[513, 8], [513, 14]]}, "fn_var_occur": {"bind_mounts": [["bind_mounts", "lh", "_find_bind_mounts"], ["self", "assertIsInstance", "bind_mounts", "set"], ["self", "assertEqual", "len", "bind_mounts"]], "get_bin_path": [["module", "get_bin_path", "Mock", "return_value", "None"]], "lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["bind_mounts", "lh", "_find_bind_mounts"]], "module": [["module", "Mock"], ["module", "get_bin_path", "Mock", "return_value", "None"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_find_bind_mounts_no_findmnts", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertIsInstance", "bind_mounts", "set"], ["self", "assertEqual", "len", "bind_mounts"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_find_bind_mounts_no_findmnts", "ret_exprs": [], "ret_type": "", "variables": {"bind_mounts": "", "get_bin_path": "", "lh": "", "module": ""}, "variables_p": {"bind_mounts": [["Dict[str, List[str]]", 0.18350927852291798]], "get_bin_path": [["unittesmock.Mock", 0.5561347788593252]], "lh": [], "module": [["str", 0.2932831726490946], ["dict", 0.09907430263389799]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[522, 4], [530, 93]], "fn_var_ln": {"lh": [[524, 8], [524, 10]], "lsblk_uuids": [[525, 8], [525, 19]], "module": [[523, 8], [523, 14]]}, "fn_var_occur": {"lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["lsblk_uuids", "lh", "_lsblk_uuid"]], "lsblk_uuids": [["lsblk_uuids", "lh", "_lsblk_uuid"], ["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertEquals", "lsblk_uuids"]], "module": [["module", "Mock"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_lsblk_uuid", "params": {"mock_run_lsblk": "", "self": ""}, "params_descr": {"mock_run_lsblk": "", "self": ""}, "params_occur": {"mock_run_lsblk": [], "self": [["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertEquals", "lsblk_uuids"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_lsblk": [["Callable[[], int]", 0.1856902520340234], ["tests._TestServerFactory", 0.09074905142775173], ["mock.Mock", 0.07404924210391509]], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_lsblk_uuid", "ret_exprs": [], "ret_type": "", "variables": {"lh": "", "lsblk_uuids": "", "module": ""}, "variables_p": {"lh": [["int", 0.17574693126601665], ["Dict[str, Union[Any, Any]]", 0.08787346563300832]], "lsblk_uuids": [], "module": [["str", 0.24310871022261366], ["Dict[str, Tuple[str, Any]]", 0.16612161110922535], ["unittesmock.Mock", 0.08148667092876744]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[533, 4], [539, 46]], "fn_var_ln": {"lh": [[535, 8], [535, 10]], "lsblk_uuids": [[536, 8], [536, 19]], "module": [[534, 8], [534, 14]]}, "fn_var_occur": {"lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["lsblk_uuids", "lh", "_lsblk_uuid"]], "lsblk_uuids": [["lsblk_uuids", "lh", "_lsblk_uuid"], ["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertEquals", "len", "lsblk_uuids"]], "module": [["module", "Mock"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_lsblk_uuid_non_zero", "params": {"mock_run_lsblk": "", "self": ""}, "params_descr": {"mock_run_lsblk": "", "self": ""}, "params_occur": {"mock_run_lsblk": [], "self": [["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertEquals", "len", "lsblk_uuids"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_lsblk": [["Callable[[], int]", 0.18595038220037824], ["tests._TestServerFactory", 0.15870964127852913], ["mock.Mock", 0.07431335561044547]], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_lsblk_uuid_non_zero", "ret_exprs": [], "ret_type": "", "variables": {"lh": "", "lsblk_uuids": "", "module": ""}, "variables_p": {"lh": [["int", 0.17574693126601665], ["Dict[str, Union[Any, Any]]", 0.08787346563300832]], "lsblk_uuids": [], "module": [["str", 0.24310871022261366], ["Dict[str, Tuple[str, Any]]", 0.16612161110922535], ["unittesmock.Mock", 0.08148667092876744]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[541, 4], [548, 46]], "fn_var_ln": {"get_bin_path": [[543, 8], [543, 27]], "lh": [[544, 8], [544, 10]], "lsblk_uuids": [[545, 8], [545, 19]], "module": [[542, 8], [542, 14]]}, "fn_var_occur": {"get_bin_path": [["module", "get_bin_path", "Mock", "return_value", "None"]], "lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["lsblk_uuids", "lh", "_lsblk_uuid"]], "lsblk_uuids": [["lsblk_uuids", "lh", "_lsblk_uuid"], ["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertEquals", "len", "lsblk_uuids"]], "module": [["module", "Mock"], ["module", "get_bin_path", "Mock", "return_value", "None"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_lsblk_uuid_no_lsblk", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertEquals", "len", "lsblk_uuids"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_lsblk_uuid_no_lsblk", "ret_exprs": [], "ret_type": "", "variables": {"get_bin_path": "", "lh": "", "lsblk_uuids": "", "module": ""}, "variables_p": {"get_bin_path": [["unittesmock.Mock", 0.5561347788593252]], "lh": [["int", 0.17574693126601665], ["Dict[str, Union[Any, Any]]", 0.08787346563300832]], "lsblk_uuids": [], "module": [["str", 0.2932831726490946], ["dict", 0.09907430263389799]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[551, 4], [559, 93]], "fn_var_ln": {"lh": [[553, 8], [553, 10]], "lsblk_uuids": [[554, 8], [554, 19]], "module": [[552, 8], [552, 14]]}, "fn_var_occur": {"lh": [["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"], ["lsblk_uuids", "lh", "_lsblk_uuid"]], "lsblk_uuids": [["lsblk_uuids", "lh", "_lsblk_uuid"], ["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertEquals", "lsblk_uuids"], ["self", "assertEquals", "lsblk_uuids"]], "module": [["module", "Mock"], ["lh", "facts", "LinuxHardware", "module", "module", "load_on_init", "False"]]}, "name": "test_lsblk_uuid_dev_with_space_in_name", "params": {"mock_run_lsblk": "", "self": ""}, "params_descr": {"mock_run_lsblk": "", "self": ""}, "params_occur": {"mock_run_lsblk": [], "self": [["self", "assertIsInstance", "lsblk_uuids", "dict"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertIn", "lsblk_uuids"], ["self", "assertEquals", "lsblk_uuids"], ["self", "assertEquals", "lsblk_uuids"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_lsblk": [["bool", 0.1]], "self": []}, "q_name": "TestFactsLinuxHardwareGetMountFacts.test_lsblk_uuid_dev_with_space_in_name", "ret_exprs": [], "ret_type": "", "variables": {"lh": "", "lsblk_uuids": "", "module": ""}, "variables_p": {"lh": [["int", 0.17574693126601665], ["Dict[str, Union[Any, Any]]", 0.08787346563300832]], "lsblk_uuids": [], "module": [["str", 0.24310871022261366], ["Dict[str, Tuple[str, Any]]", 0.16612161110922535], ["unittesmock.Mock", 0.08148667092876744]]}}], "name": "TestFactsLinuxHardwareGetMountFacts", "q_name": "TestFactsLinuxHardwareGetMountFacts", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "absolute_import", "division", "ansible", "compat", "tests", "unittest", "ansible", "compat", "tests", "mock", "Mock", "patch", "ansible", "module_utils", "facts"], "mod_var_ln": {"BIND_MOUNTS": [[406, 0], [406, 11]], "FINDMNT_OUTPUT": [[408, 0], [408, 14]], "LSBLK_OUTPUT": [[173, 0], [173, 12]], "LSBLK_OUTPUT_2": [[190, 0], [190, 14]], "LSBLK_UUIDS": [[202, 0], [202, 11]], "MTAB": [[204, 0], [204, 4]], "MTAB_ENTRIES": [[245, 0], [245, 12]], "__metaclass__": [[18, 0], [18, 13]]}, "mod_var_occur": {"BIND_MOUNTS": [], "FINDMNT_OUTPUT": [], "LSBLK_OUTPUT": [], "LSBLK_OUTPUT_2": [], "LSBLK_UUIDS": [], "MTAB": [], "MTAB_ENTRIES": [], "__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 116}, "session_id": "NlZs-nGJW2pOoBtm1NgCMYnhBlw72QxoyFaHTYFB8x4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BIND_MOUNTS": "", "FINDMNT_OUTPUT": "", "LSBLK_OUTPUT": "", "LSBLK_OUTPUT_2": "", "LSBLK_UUIDS": "", "MTAB": "", "MTAB_ENTRIES": "", "__metaclass__": ""}, "variables_p": {"BIND_MOUNTS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "FINDMNT_OUTPUT": [["str", 0.4000000000000001], ["bool", 0.20000000000000004], ["int", 0.10000000000000002], ["List[bytes]", 0.10000000000000002], ["IO", 0.10000000000000002]], "LSBLK_OUTPUT": [["str", 0.4000000000000001], ["bool", 0.20000000000000004], ["int", 0.10000000000000002], ["List[bytes]", 0.10000000000000002], ["IO", 0.10000000000000002]], "LSBLK_OUTPUT_2": [["str", 0.4000000000000001], ["bool", 0.20000000000000004], ["int", 0.10000000000000002], ["List[bytes]", 0.10000000000000002], ["IO", 0.10000000000000002]], "LSBLK_UUIDS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "MTAB": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "MTAB_ENTRIES": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}