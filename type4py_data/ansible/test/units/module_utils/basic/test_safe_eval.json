{"error": null, "response": {"classes": [{"cls_lc": [[78, 0], [95, 51]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [89, 9]], "fn_var_ln": {"_ANSIBLE_ARGS": [[86, 8], [86, 27]], "am": [[87, 8], [87, 15]], "old_ansible_args": [[84, 8], [84, 29]]}, "fn_var_occur": {"_ANSIBLE_ARGS": [["self", "old_ansible_args", "basic", "_ANSIBLE_ARGS"], ["basic", "_ANSIBLE_ARGS", "None"]], "am": [["self", "am", "basic", "AnsibleModule", "argument_spec", "dict"]], "old_ansible_args": [["self", "old_ansible_args", "basic", "_ANSIBLE_ARGS"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["super", "TestSafeEval", "self", "setUp"], ["self", "old_ansible_args", "basic", "_ANSIBLE_ARGS"], ["self", "am", "basic", "AnsibleModule", "argument_spec", "dict"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSafeEval.setUp", "ret_exprs": [], "ret_type": "", "variables": {"_ANSIBLE_ARGS": "", "am": "", "old_ansible_args": ""}, "variables_p": {"_ANSIBLE_ARGS": [["str", 0.3353837049326791]], "am": [["str", 0.6008686064094617], ["bool", 0.19815286052183845], ["List[str]", 0.10287617081703894], ["dict", 0.09810236225166076]], "old_ansible_args": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [95, 51]], "fn_var_ln": {"_ANSIBLE_ARGS": [[95, 8], [95, 27]]}, "fn_var_occur": {"_ANSIBLE_ARGS": [["basic", "_ANSIBLE_ARGS", "self", "old_ansible_args"]]}, "name": "tearDown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["super", "TestSafeEval", "self", "tearDown"], ["basic", "_ANSIBLE_ARGS", "self", "old_ansible_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSafeEval.tearDown", "ret_exprs": [], "ret_type": "", "variables": {"_ANSIBLE_ARGS": ""}, "variables_p": {"_ANSIBLE_ARGS": [["str", 0.3831054419017587], ["List[str]", 0.2957351008432592], ["Dict[str, Any]", 0.1095514272400937]]}}], "name": "TestSafeEval", "q_name": "TestSafeEval", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 0], [58, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_simple_types", "params": {"code": "", "expected": "", "self": ""}, "params_descr": {"code": "", "expected": "", "self": ""}, "params_occur": {"code": [["self", "assertEqual", "self", "am", "safe_eval", "code", "expected"]], "expected": [["self", "assertEqual", "self", "am", "safe_eval", "code", "expected"]], "self": [["self", "assertEqual", "self", "am", "safe_eval", "code", "expected"]]}, "params_p": {"args": [], "code": [["str", 0.8978371182787949], ["Mapping[str, Any]", 0.10216288172120494]], "expected": [["str", 0.8978371182787949], ["Mapping[str, Any]", 0.10216288172120494]], "kwargs": [], "self": [["str", 0.8978371182787949], ["Mapping[str, Any]", 0.10216288172120494]]}, "q_name": "_check_simple_types", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 0], [62, 88]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_simple_types_with_exceptions", "params": {"code": "", "expected": "", "self": ""}, "params_descr": {"code": "", "expected": "", "self": ""}, "params_occur": {"code": [["self", "assertEqual", "self", "am", "safe_eval", "code", "include_exceptions", "True", "expected", "None"]], "expected": [["self", "assertEqual", "self", "am", "safe_eval", "code", "include_exceptions", "True", "expected", "None"]], "self": [["self", "assertEqual", "self", "am", "safe_eval", "code", "include_exceptions", "True", "expected", "None"]]}, "params_p": {"args": [], "code": [["str", 0.910352853693486], ["Optional[str]", 0.0896471463065138]], "expected": [["str", 0.910352853693486], ["Optional[str]", 0.0896471463065138]], "kwargs": [], "self": [["str", 0.910352853693486], ["Optional[str]", 0.0896471463065138]]}, "q_name": "_check_simple_types_with_exceptions", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 0], [65, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_invalid_strings", "params": {"code": "", "expected": "", "self": ""}, "params_descr": {"code": "", "expected": "", "self": ""}, "params_occur": {"code": [["self", "assertEqual", "self", "am", "safe_eval", "code", "expected"]], "expected": [["self", "assertEqual", "self", "am", "safe_eval", "code", "expected"]], "self": [["self", "assertEqual", "self", "am", "safe_eval", "code", "expected"]]}, "params_p": {"args": [], "code": [["str", 1.0]], "expected": [["str", 1.0]], "kwargs": [], "self": [["str", 1.0]]}, "q_name": "_check_invalid_strings", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 0], [70, 47]], "fn_var_ln": {"res": [[68, 4], [68, 7]]}, "fn_var_occur": {"res": [["res", "self", "am", "safe_eval", "include_exceptions", "True"], ["self", "assertEqual", "res"], ["self", "assertEqual", "type", "res", "SyntaxError"]]}, "name": "_check_invalid_strings_with_exceptions", "params": {"code": "", "exception": "", "expected": "", "self": ""}, "params_descr": {"code": "", "exception": "", "expected": "", "self": ""}, "params_occur": {"code": [], "exception": [], "expected": [], "self": [["res", "self", "am", "safe_eval", "include_exceptions", "True"], ["self", "assertEqual", "res"], ["self", "assertEqual", "type", "res", "SyntaxError"]]}, "params_p": {"args": [], "code": [["str", 0.4023286571672003], ["bool", 0.20582138888508944], ["Optional[str]", 0.1783674657113605]], "exception": [["str", 0.4023286571672003], ["bool", 0.20582138888508944], ["Optional[str]", 0.1783674657113605]], "expected": [["str", 0.4023286571672003], ["bool", 0.20582138888508944], ["Optional[str]", 0.1783674657113605]], "kwargs": [], "self": []}, "q_name": "_check_invalid_strings_with_exceptions", "ret_exprs": [], "ret_type": "", "variables": {"res": ""}, "variables_p": {"res": [["int", 0.09042317419576172], ["List[List[Any]]", 0.08901445814430056], ["List[Union[Any, Any]]", 0.08901445814430056]]}}], "imports": ["__future__", "absolute_import", "division", "sys", "json", "ansible", "compat", "tests", "unittest", "units", "mock", "procenv", "ModuleTestCase", "units", "mock", "generator", "add_method", "ansible", "module_utils", "basic", "ansible", "module_utils", "basic"], "mod_var_ln": {"INVALID_STRINGS": [[48, 0], [48, 15]], "NONSTRINGS": [[42, 0], [42, 10]], "VALID_STRINGS": [[32, 0], [32, 13]], "__metaclass__": [[21, 0], [21, 13]]}, "mod_var_occur": {"INVALID_STRINGS": [], "NONSTRINGS": [], "VALID_STRINGS": [], "__metaclass__": []}, "no_types_annot": {"D": 0, "I": 0, "U": 24}, "session_id": "wz1bHd2TV1Md5ztJ3jhQZPGnrvjQpD22kap00cbSBRg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"INVALID_STRINGS": "", "NONSTRINGS": "", "VALID_STRINGS": "", "__metaclass__": ""}, "variables_p": {"INVALID_STRINGS": [["str", 0.7], ["int", 0.2]], "NONSTRINGS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "VALID_STRINGS": [["str", 0.7803158815505475], ["int", 0.15143165248830348]], "__metaclass__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}