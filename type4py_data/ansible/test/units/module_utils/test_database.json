{"error": null, "response": {"classes": [{"cls_lc": [[36, 0], [121, 168]], "cls_var_ln": {"invalid": [[79, 4], [79, 11]], "valid": [[40, 4], [40, 9]]}, "cls_var_occur": {"invalid": [], "valid": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [94, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_valid_quotes", "params": {"identifier": "", "quoted_identifier": "", "self": ""}, "params_descr": {"identifier": "", "quoted_identifier": "", "self": ""}, "params_occur": {"identifier": [["eq_", "pg_quote_identifier", "identifier", "quoted_identifier"]], "quoted_identifier": [["eq_", "pg_quote_identifier", "identifier", "quoted_identifier"]], "self": []}, "params_p": {"args": [], "identifier": [["int", 0.3228837200284974], ["dict", 0.10013100497546457]], "kwargs": [], "quoted_identifier": [["int", 0.3228837200284974], ["dict", 0.10013100497546457]], "self": []}, "q_name": "TestQuotePgIdentifier.check_valid_quotes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [98, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_valid_quotes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "valid"], ["self", "check_valid_quotes", "identifier", "self", "valid", "identifier"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestQuotePgIdentifier.test_valid_quotes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [101, 93]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_invalid_quotes", "params": {"id_type": "", "identifier": "", "msg": "", "self": ""}, "params_descr": {"id_type": "", "identifier": "", "msg": "", "self": ""}, "params_occur": {"id_type": [["assert_raises_regexp", "SQLParseError", "msg", "pg_quote_identifier", "identifier", "id_type"]], "identifier": [["assert_raises_regexp", "SQLParseError", "msg", "pg_quote_identifier", "identifier", "id_type"]], "msg": [["assert_raises_regexp", "SQLParseError", "msg", "pg_quote_identifier", "identifier", "id_type"]], "self": []}, "params_p": {"args": [], "id_type": [["str", 0.8182126612281048], ["int", 0.0918528197011238]], "identifier": [["str", 0.8182126612281048], ["int", 0.0918528197011238]], "kwargs": [], "msg": [["str", 0.8182126612281048], ["int", 0.0918528197011238]], "self": []}, "q_name": "TestQuotePgIdentifier.check_invalid_quotes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [105, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_invalid_quotes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "invalid"], ["self", "check_invalid_quotes", "test", "test", "self", "invalid", "test"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestQuotePgIdentifier.test_invalid_quotes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [121, 168]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_how_many_dots", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestQuotePgIdentifier.test_how_many_dots", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestQuotePgIdentifier", "q_name": "TestQuotePgIdentifier", "variables": {"invalid": "", "valid": ""}, "variables_p": {"invalid": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "valid": [["Dict[str, Union[Any, Any, Any, Any]]", 0.1], ["str", 0.1], ["Set[str]", 0.1], ["Dict[str, str]", 0.1], ["Tuple[str, str, str]", 0.1], ["List[bytes]", 0.1]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[12, 4], [24, 59]], "fn_var_ln": {"excName": [[23, 18], [23, 25]], "regexp": [[17, 16], [17, 22]]}, "fn_var_occur": {"excName": [["AssertionError", "excName"]], "regexp": [["isinstance", "regexp", "string_types"], ["regexp", "re", "compile", "regexp"], ["regexp", "search", "str", "e"], ["Exception", "regexp", "pattern", "str", "e"]]}, "name": "assert_raises_regexp", "params": {"a": "", "callable": "", "expected": "", "kw": "", "regexp": ""}, "params_descr": {"a": "", "callable": "", "expected": "", "kw": "", "regexp": ""}, "params_occur": {"a": [["callable", "a", "kw"]], "callable": [["callable", "a", "kw"]], "expected": [["hasattr", "expected"]], "kw": [["callable", "a", "kw"]], "regexp": [["isinstance", "regexp", "string_types"], ["regexp", "re", "compile", "regexp"], ["regexp", "search", "str", "e"], ["Exception", "regexp", "pattern", "str", "e"]]}, "params_p": {"a": [["bool", 0.35562989655306354], ["tuple", 0.17000888911390294], ["List[int]", 0.1527406582241864], ["int", 0.095703951281423]], "args": [], "callable": [["bool", 0.35562989655306354], ["tuple", 0.17000888911390294], ["List[int]", 0.1527406582241864], ["int", 0.095703951281423]], "expected": [["float", 0.2947197089768723], ["List[int]", 0.10058908834978529], ["tuple", 0.09497908686353619], ["int", 0.09063760245571463]], "kw": [["bool", 0.35562989655306354], ["tuple", 0.17000888911390294], ["List[int]", 0.1527406582241864], ["int", 0.095703951281423]], "kwargs": [], "regexp": [["str", 0.47184085729397807]]}, "q_name": "assert_raises_regexp", "ret_exprs": [], "ret_type": "", "variables": {"excName": "", "regexp": ""}, "variables_p": {"excName": [["str", 0.8888087351716509], ["Dict[str, Any]", 0.11119126482834898]], "regexp": [["List[str]", 0.39995023917975586], ["Dict[str, List[str]]", 0.2137953593217057], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.18615487985805015], ["list", 0.09917996741382942]]}}], "imports": ["collections", "os", "re", "nose", "tools", "eq_", "nose", "tools", "assert_raises_regexp", "ansible", "compat", "six", "string_types", "ansible", "compat", "tests", "mock", "ansible", "module_utils", "database", "pg_quote_identifier", "SQLParseError"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 19}, "session_id": "TKE4KSXXA-R8ZyD1JA6D6aPtzrfq81atEdOWQY3nsmg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}