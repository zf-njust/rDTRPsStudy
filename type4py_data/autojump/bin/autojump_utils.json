{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Creates a directory atomically.", "long_descr": null, "ret": null}, "fn_lc": [[21, 0], [27, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_dir", "params": {"path": ""}, "params_descr": {"path": ""}, "params_occur": {"path": [["os", "makedirs", "path"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.6505735606735005], ["int", 0.15149397222708116]]}, "q_name": "create_dir", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Converts string into user's preferred encoding.", "long_descr": null, "ret": null}, "fn_lc": [[30, 0], [34, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "encode_local", "params": {"string": ""}, "params_descr": {"string": ""}, "params_occur": {"string": [["string", "encode", "sys", "getfilesystemencoding"]]}, "params_p": {"args": [], "kwargs": [], "string": [["str", 0.9999999999999999]]}, "q_name": "encode_local", "ret_exprs": ["return string", "return string.encode(sys.getfilesystemencoding() or 'utf-8')"], "ret_type": "", "ret_type_p": [["str", 0.7101802861375615]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 0], [44, 19]], "fn_var_ln": {"it": [[38, 4], [38, 6]]}, "fn_var_occur": {"it": [["it", "iter", "xs"], ["it", "__next__"], ["it", "next"]]}, "name": "first", "params": {"xs": ""}, "params_descr": {"xs": ""}, "params_occur": {"xs": [["it", "iter", "xs"]]}, "params_p": {"args": [], "kwargs": [], "xs": [["Iterable[Iterable[float]]", 0.1]]}, "q_name": "first", "ret_exprs": ["return it.__next__()", "return it.next()", "return None"], "ret_type": "", "ret_type_p": [["str", 0.4881861460529342], ["Exception", 0.13490922140048286], ["Optional[str]", 0.09357510704110912]], "variables": {"it": ""}, "variables_p": {"it": [["bytes", 0.39329199699215084], ["float", 0.13694894908983274], ["int", 0.10214905927226632], ["List[int]", 0.10175332928688688], ["list", 0.09118372844781346], ["Dict[str, Tuple[int, ...]]", 0.08758979342886719], ["str", 0.08708314348218268]]}}, {"docstring": {"func": "Given a tab entry in the following format return needle, index, and path:", "long_descr": "[needle]__[index]__[path]", "ret": null}, "fn_lc": [[47, 0], [70, 30]], "fn_var_ln": {"index": [[65, 8], [65, 13]], "match_index": [[56, 4], [56, 15]], "match_needle": [[55, 4], [55, 16]], "match_path": [[57, 4], [57, 14]], "needle": [[62, 8], [62, 14]], "path": [[68, 8], [68, 12]]}, "fn_var_occur": {"index": [["needle", "index", "path", "None", "None", "None"], ["index", "int", "match_index", "group"], ["needle", "index", "path"]], "match_index": [["match_index", "re", "search", "separator", "entry"], ["index", "int", "match_index", "group"]], "match_needle": [["match_needle", "re", "search", "separator", "entry"], ["needle", "match_needle", "group"]], "match_path": [["match_path", "re", "search", "separator", "separator", "entry"], ["path", "match_path", "group"]], "needle": [["needle", "index", "path", "None", "None", "None"], ["needle", "match_needle", "group"], ["needle", "index", "path"]], "path": [["needle", "index", "path", "None", "None", "None"], ["path", "match_path", "group"], ["needle", "index", "path"]]}, "name": "get_tab_entry_info", "params": {"entry": "", "separator": ""}, "params_descr": {"entry": "", "separator": ""}, "params_occur": {"entry": [["match_needle", "re", "search", "separator", "entry"], ["match_index", "re", "search", "separator", "entry"], ["match_path", "re", "search", "separator", "separator", "entry"]], "separator": [["match_needle", "re", "search", "separator", "entry"], ["match_index", "re", "search", "separator", "entry"], ["match_path", "re", "search", "separator", "separator", "entry"]]}, "params_p": {"args": [], "entry": [["str", 0.9236727676835982], ["int", 0.0763272323164016]], "kwargs": [], "separator": [["str", 0.9236727676835982], ["int", 0.0763272323164016]]}, "q_name": "get_tab_entry_info", "ret_exprs": ["return needle, index, path"], "ret_type": "", "ret_type_p": [["str", 0.5280534491154774]], "variables": {"index": "", "match_index": "", "match_needle": "", "match_path": "", "needle": "", "path": ""}, "variables_p": {"index": [["Optional[str]", 0.19067792893420052], ["str", 0.10162183108962516], ["frozenset[str]", 0.09533896446710026], ["ImportError", 0.09533896446710026]], "match_index": [["Pattern[str]", 0.5439484172209794], ["Optional[Match[str]]", 0.45605158277902064]], "match_needle": [["Pattern[str]", 0.8409613274011613], ["str", 0.08030853857052059]], "match_path": [["List[str]", 0.2701477968540312], ["str", 0.222228554236151], ["Optional[str]", 0.11210885418937187]], "needle": [["List[str]", 0.21709427262735204], ["Tuple[Hashable]", 0.1037992185335896], ["dict", 0.09592525766398761], ["int", 0.08940946185142874]], "path": [["Optional[str]", 0.3798717496232497], ["Dict[str, Any]", 0.18817783878040456], ["str", 0.11205467552045109], ["Pattern", 0.07462018164147836]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 0], [78, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_pwd", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_pwd", "ret_exprs": ["return os.getcwdu()"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 0], [84, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "has_uppercase", "params": {"string": ""}, "params_descr": {"string": ""}, "params_occur": {"string": [["any", "ch", "isupper", "ch", "string"], ["any", "unicodedata", "category", "c", "c", "unicode", "string"]]}, "params_p": {"args": [], "kwargs": [], "string": [["str", 0.7102546247769612], ["List[str]", 0.18499311498455207]]}, "q_name": "has_uppercase", "ret_exprs": ["return any(ch.isupper() for ch in string)", "return any(unicodedata.category(c) == 'Lu' for c in unicode(string))"], "ret_type": "", "ret_type_p": [["str", 0.9999999999999997]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 0], [88, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "in_bash", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "in_bash", "ret_exprs": ["return 'bash' in os.getenv('SHELL')"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 0], [92, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_autojump_sourced", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_autojump_sourced", "ret_exprs": ["return '1' == os.getenv('AUTOJUMP_SOURCED')"], "ret_type": "", "ret_type_p": [["str", 0.9022771897329119]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 0], [96, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_python2", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_python2", "ret_exprs": ["return sys.version_info[0] == 2"], "ret_type": "", "ret_type_p": [["str", 0.16927791177374465], ["dict", 0.13295465939965334], ["int", 0.08516626546347876]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 0], [100, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_python3", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_python3", "ret_exprs": ["return sys.version_info[0] == 3"], "ret_type": "", "ret_type_p": [["str", 0.16927791177374465], ["dict", 0.13295465939965334], ["int", 0.08516626546347876]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 0], [104, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_linux", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_linux", "ret_exprs": ["return platform.system() == 'Linux'"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["int", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 0], [108, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_osx", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_osx", "ret_exprs": ["return platform.system() == 'Darwin'"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["int", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[111, 0], [112, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_windows", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_windows", "ret_exprs": ["return platform.system() == 'Windows'"], "ret_type": "", "ret_type_p": [["int", 0.22712669114108985], ["str", 0.17324399838400714], ["Optional[str]", 0.1280157040596235], ["List[List[int]]", 0.08668632001282062]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 0], [126, 18]], "fn_var_ln": {"it": [[116, 4], [116, 6]], "tmp": [[124, 16], [124, 19]]}, "fn_var_occur": {"it": [["it", "iter", "xs"], ["tmp", "it", "__next__"], ["tmp", "it", "next"]], "tmp": [["tmp", "None"], ["tmp", "it", "__next__"], ["tmp", "it", "next"]]}, "name": "last", "params": {"xs": ""}, "params_descr": {"xs": ""}, "params_occur": {"xs": [["it", "iter", "xs"]]}, "params_p": {"args": [], "kwargs": [], "xs": [["str", 0.22201188984870435], ["bool", 0.21093693399235625], ["type", 0.16732150812111063], ["Dict[str, Dict[str, Any]]", 0.11089666704842421]]}, "q_name": "last", "ret_exprs": ["return tmp"], "ret_type": "", "ret_type_p": [["str", 1.9600656390868772e-10], ["int", 1.9276578523020203e-10]], "variables": {"it": "", "tmp": ""}, "variables_p": {"it": [["list", 0.21128966307593897], ["float", 0.20293257782661975], ["int", 0.1176703841762635], ["str", 0.10037194162578719], ["Dict[str, Any]", 0.09159408800738382]], "tmp": [["str", 0.1764952964944962], ["Dict[str, Literal]", 0.13599178895646588], ["int", 0.11028693299519209], ["Set[str]", 0.08612952308108926], ["Optional[Dict[str, int]]", 0.08334418849509856], ["Optional[Dict[str, str]]", 0.08334418849509856], ["Optional[str]", 0.07905991143769138]]}}, {"docstring": {"func": "Atomically move file.", "long_descr": "Windows does not allow for atomic file renaming (which is used by\nos.rename / shutil.move) so destination paths must first be deleted.", "ret": null}, "fn_lc": [[129, 0], [139, 25]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "move_file", "params": {"dst": "", "src": ""}, "params_descr": {"dst": "", "src": ""}, "params_occur": {"dst": [["is_windows", "os", "path", "exists", "dst"], ["os", "remove", "dst"], ["shutil", "move", "src", "dst"]], "src": [["shutil", "move", "src", "dst"]]}, "params_p": {"args": [], "dst": [["str", 0.7061662811192783]], "kwargs": [], "src": [["str", 0.8223490700069939], ["list", 0.04441273249825153]]}, "q_name": "move_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[142, 0], [143, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "print_entry", "params": {"entry": ""}, "params_descr": {"entry": ""}, "params_occur": {"entry": [["print_local", "entry", "weight", "entry", "path"]]}, "params_p": {"args": [], "entry": [["str", 0.15764049582235162], ["bool", 0.08366814691430371], ["Iterable[T]", 0.07927057995287194]], "kwargs": []}, "q_name": "print_entry", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[146, 0], [147, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "print_local", "params": {"string": ""}, "params_descr": {"string": ""}, "params_occur": {"string": [["print", "encode_local", "string"]]}, "params_p": {"args": [], "kwargs": [], "string": [["str", 0.7109156193423991]]}, "q_name": "print_local", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Prints the tab completion menu according to the following format:", "long_descr": "[needle]__[index]__[possible_match]\n\nThe needle (search pattern) and index are necessary to recreate the results\non subsequent calls.", "ret": null}, "fn_lc": [[150, 0], [166, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "print_tab_menu", "params": {"needle": "", "separator": "", "tab_entries": ""}, "params_descr": {"needle": "", "separator": "", "tab_entries": ""}, "params_occur": {"needle": [["print_local", "needle", "separator", "i", "separator", "entry", "path"]], "separator": [["print_local", "needle", "separator", "i", "separator", "entry", "path"]], "tab_entries": [["enumerate", "tab_entries"]]}, "params_p": {"args": [], "kwargs": [], "needle": [["str", 0.37575835763673887], ["bytes", 0.20100443648015884], ["dict", 0.107353402307807]], "separator": [["str", 0.37575835763673887], ["bytes", 0.20100443648015884], ["dict", 0.107353402307807]], "tab_entries": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]]}, "q_name": "print_tab_menu", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[169, 0], [172, 41]], "fn_var_ln": {"clean": [[171, 4], [171, 9]]}, "fn_var_occur": {"clean": [["clean", "x", "unico", "x", "x", "os", "sep", "unico", "x", "rstrip", "os", "sep"], ["list", "imap", "clean", "directories"]]}, "name": "sanitize", "params": {"directories": ""}, "params_descr": {"directories": ""}, "params_occur": {"directories": [["list", "imap", "clean", "directories"]]}, "params_p": {"args": [], "directories": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "kwargs": []}, "q_name": "sanitize", "ret_exprs": ["return list(imap(clean, directories))"], "ret_type": "", "ret_type_p": [["List[Dict]", 0.48922192996338243], ["List[str]", 0.1506805603134889], ["List[int]", 0.10492541506728884], ["str", 0.09375584973338762], ["List[List[Any]]", 0.05192543787021419]], "variables": {"clean": ""}, "variables_p": {"clean": [["Dict[str, str]", 0.12902772900413978], ["List[List[str]]", 0.12133089263298495], ["int", 0.0945234789315756], ["Dict[bytes, bytes]", 0.09052325133073372], ["List[str]", 0.09041160432714831], ["bytes", 0.09028476642405234]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[175, 0], [185, 19]], "fn_var_ln": {"it": [[176, 4], [176, 6]]}, "fn_var_occur": {"it": [["it", "iter", "xs"], ["it", "next"], ["it", "next"], ["next", "it"], ["next", "it"]]}, "name": "second", "params": {"xs": ""}, "params_descr": {"xs": ""}, "params_occur": {"xs": [["it", "iter", "xs"]]}, "params_p": {"args": [], "kwargs": [], "xs": [["Iterable[Iterable[float]]", 0.1]]}, "q_name": "second", "ret_exprs": ["return it.next()", "return next(it)", "return None"], "ret_type": "", "ret_type_p": [["str", 0.4881861460529342], ["Exception", 0.13490922140048286], ["Optional[str]", 0.09357510704110912]], "variables": {"it": ""}, "variables_p": {"it": [["bytes", 0.1972170858603692], ["Dict[str, int]", 0.142151565664856], ["List[int]", 0.1005109402613142], ["list", 0.0949235949642273], ["List[List[str]]", 0.09220134086496502]]}}, {"docstring": {"func": "Bash has problems dealing with certain paths so we're surrounding all", "long_descr": "path outputs with quotes.", "ret": null}, "fn_lc": [[188, 0], [196, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "surround_quotes", "params": {"string": ""}, "params_descr": {"string": ""}, "params_occur": {"string": [["in_bash", "string"], ["format", "string"]]}, "params_p": {"args": [], "kwargs": [], "string": [["str", 0.7766806014460959], ["Sequence[str]", 0.13536350770866235]]}, "q_name": "surround_quotes", "ret_exprs": ["return '\"{0}\"'.format(string)", "return string"], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return first n items of an iterable.", "long_descr": null, "ret": null}, "fn_lc": [[199, 0], [201, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "take", "params": {"iterable": "", "n": ""}, "params_descr": {"iterable": "", "n": ""}, "params_occur": {"iterable": [["islice", "iterable", "n"]], "n": [["islice", "iterable", "n"]]}, "params_p": {"args": [], "iterable": [["int", 0.8999999999999999]], "kwargs": [], "n": [["int", 0.8999999999999999]]}, "q_name": "take", "ret_exprs": ["return islice(iterable, n)"], "ret_type": "", "ret_type_p": [["int", 0.530814790455509], ["str", 0.37406284461676487]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Converts into Unicode string.", "long_descr": null, "ret": null}, "fn_lc": [[204, 0], [208, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "unico", "params": {"string": ""}, "params_descr": {"string": ""}, "params_occur": {"string": [["is_python2", "isinstance", "string", "unicode"], ["unicode", "string", "encoding", "errors"]]}, "params_p": {"args": [], "kwargs": [], "string": [["str", 1.0000000000000002]]}, "q_name": "unico", "ret_exprs": ["return unicode(string, encoding='utf-8', errors='replace')", "return string"], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "print_function", "errno", "os", "platform", "re", "shutil", "sys", "unicodedata", "itertools", "islice", "itertools", "imap"], "mod_var_ln": {"getcwdu": [[16, 4], [16, 14]], "imap": [[15, 4], [15, 8]]}, "mod_var_occur": {"getcwdu": [["os", "getcwdu"]], "imap": [["itertools", "imap"], ["list", "imap", "clean", "directories"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 56}, "session_id": "SkLIZfdQCxfssf5Li1-MJoMPpdjF1TItaXMQasYuYSM", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"getcwdu": "", "imap": ""}, "variables_p": {"getcwdu": [["bytes", 0.19999999999999998], ["str", 0.19999999999999998], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09999999999999999], ["int", 0.09999999999999999]], "imap": [["str", 0.6666666665161676], ["Generator[int, None, None]", 0.3333333332580838], ["list", 1.9032917147590676e-10], ["int", 1.684910019327471e-11]]}}}