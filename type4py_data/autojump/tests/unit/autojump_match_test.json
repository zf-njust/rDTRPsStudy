{"error": null, "response": {"classes": [{"cls_lc": [[14, 0], [67, 77]], "cls_var_ln": {"entry1": [[16, 4], [16, 10]], "entry2": [[17, 4], [17, 10]], "entry3": [[18, 4], [18, 10]], "entry4": [[19, 4], [19, 10]], "entry5": [[20, 4], [20, 10]], "win_entry1": [[21, 4], [21, 14]], "win_entry2": [[22, 4], [22, 14]], "win_entry3": [[23, 4], [23, 14]]}, "cls_var_occur": {"entry1": [], "entry2": [], "entry3": [], "entry4": [], "entry5": [], "win_entry1": [], "win_entry2": [], "win_entry3": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[26, 4], [33, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "haystack", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "entry1", "self", "entry2", "self", "entry3", "self", "entry4", "self", "entry5"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMatchAnywhere.haystack", "ret_exprs": ["return [ self.entry1, self.entry2, self.entry3, self.entry4, self.entry5,]"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [37, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "windows_haystack", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "win_entry1", "self", "win_entry2", "self", "win_entry3"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMatchAnywhere.windows_haystack", "ret_exprs": ["return [self.win_entry1, self.win_entry2, self.win_entry3]"], "ret_type": "", "ret_type_p": [["str", 0.4116430612861659], ["bool", 0.1050421256492536], ["Optional[str]", 0.09526150025764966], ["int", 0.09522324928453989]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [40, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_single_needle", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_anywhere", "haystack", "self", "entry1", "self", "entry2"]], "self": [["list", "match_anywhere", "haystack", "self", "entry1", "self", "entry2"]]}, "params_p": {"args": [], "haystack": [["str", 0.1011202184497233]], "kwargs": [], "self": []}, "q_name": "TestMatchAnywhere.test_single_needle", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [45, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_consecutive", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_anywhere", "haystack", "self", "entry1", "self", "entry2"], ["list", "match_anywhere", "haystack"]], "self": [["list", "match_anywhere", "haystack", "self", "entry1", "self", "entry2"]]}, "params_p": {"args": [], "haystack": [["str", 0.2018082117665118], ["bool", 0.09675506954729235], ["int", 0.09675506954729235]], "kwargs": [], "self": []}, "q_name": "TestMatchAnywhere.test_consecutive", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [49, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_skip", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_anywhere", "haystack", "self", "entry2"], ["list", "match_anywhere", "haystack", "self", "entry4"]], "self": [["list", "match_anywhere", "haystack", "self", "entry2"], ["list", "match_anywhere", "haystack", "self", "entry4"]]}, "params_p": {"args": [], "haystack": [["str", 0.08743115734644885], ["bool", 0.08743115734644885], ["int", 0.08743115734644885]], "kwargs": [], "self": []}, "q_name": "TestMatchAnywhere.test_skip", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [53, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_ignore_case", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_anywhere", "haystack", "ignore_case", "True", "self", "entry2"]], "self": [["list", "match_anywhere", "haystack", "ignore_case", "True", "self", "entry2"]]}, "params_p": {"args": [], "haystack": [["Callable", 0.0930723693852582]], "kwargs": [], "self": []}, "q_name": "TestMatchAnywhere.test_ignore_case", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [62, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_backslashes_for_windows_paths", "params": {"self": "", "windows_haystack": ""}, "params_descr": {"self": "", "windows_haystack": ""}, "params_occur": {"self": [["list", "match_anywhere", "windows_haystack", "self", "win_entry1"], ["list", "match_anywhere", "windows_haystack", "True", "self", "win_entry2"], ["list", "match_anywhere", "windows_haystack", "True", "self", "win_entry3"]], "windows_haystack": [["list", "match_anywhere", "windows_haystack", "self", "win_entry1"], ["list", "match_anywhere", "windows_haystack", "True", "self", "win_entry2"], ["list", "match_anywhere", "windows_haystack", "True", "self", "win_entry3"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "windows_haystack": [["str", 0.1170855652368859], ["int", 0.10664601387045441], ["dict", 0.10586691740465601], ["List[str]", 0.10586691740465601], ["List[dict]", 0.09670889300147438], ["NamedTuple", 0.08985870445024353]]}, "q_name": "TestMatchAnywhere.test_backslashes_for_windows_paths", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [67, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_wildcard_in_needle", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_anywhere", "haystack"], ["list", "match_anywhere", "haystack", "self", "entry5"]], "self": [["list", "match_anywhere", "haystack", "self", "entry5"]]}, "params_p": {"args": [], "haystack": [["int", 0.1907596340362664], ["Optional[Union[bool, Any]]", 0.10534353326754307], ["str", 0.096784275582871]], "kwargs": [], "self": []}, "q_name": "TestMatchAnywhere.test_wildcard_in_needle", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMatchAnywhere", "q_name": "TestMatchAnywhere", "variables": {"entry1": "", "entry2": "", "entry3": "", "entry4": "", "entry5": "", "win_entry1": "", "win_entry2": "", "win_entry3": ""}, "variables_p": {"entry1": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry2": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry3": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry4": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry5": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "win_entry1": [["bool", 0.3], ["str", 0.19999999999999998], ["int", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[List[int]]", 0.09999999999999999]], "win_entry2": [["bool", 0.3], ["str", 0.19999999999999998], ["int", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[List[int]]", 0.09999999999999999]], "win_entry3": [["bool", 0.3], ["str", 0.19999999999999998], ["int", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[List[int]]", 0.09999999999999999]]}}, {"cls_lc": [[70, 0], [131, 88]], "cls_var_ln": {"entry1": [[72, 4], [72, 10]], "entry2": [[73, 4], [73, 10]], "entry3": [[74, 4], [74, 10]], "entry4": [[75, 4], [75, 10]], "entry5": [[76, 4], [76, 10]], "entry6": [[77, 4], [77, 10]], "win_entry1": [[78, 4], [78, 14]], "win_entry2": [[79, 4], [79, 14]], "win_entry3": [[80, 4], [80, 14]]}, "cls_var_occur": {"entry1": [], "entry2": [], "entry3": [], "entry4": [], "entry5": [], "entry6": [], "win_entry1": [], "win_entry2": [], "win_entry3": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [90, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "haystack", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "entry1", "self", "entry2", "self", "entry3", "self", "entry4", "self", "entry5"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMatchConsecutive.haystack", "ret_exprs": ["return [ self.entry1, self.entry2, self.entry3, self.entry4, self.entry5,]"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [94, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "windows_haystack", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "win_entry1", "self", "win_entry2", "self", "win_entry3"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMatchConsecutive.windows_haystack", "ret_exprs": ["return [self.win_entry1, self.win_entry2, self.win_entry3]"], "ret_type": "", "ret_type_p": [["str", 0.4116430612861659], ["bool", 0.1050421256492536], ["Optional[str]", 0.09526150025764966], ["int", 0.09522324928453989]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [98, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_single_needle", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_consecutive", "haystack", "self", "entry1", "self", "entry3"], ["list", "match_consecutive", "haystack", "self", "entry5"]], "self": [["list", "match_consecutive", "haystack", "self", "entry1", "self", "entry3"], ["list", "match_consecutive", "haystack", "self", "entry5"]]}, "params_p": {"args": [], "haystack": [["str", 0.2018082117665118], ["bool", 0.09675506954729235], ["int", 0.09675506954729235]], "kwargs": [], "self": []}, "q_name": "TestMatchConsecutive.test_single_needle", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [104, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_consecutive", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_consecutive", "haystack", "self", "entry1"], ["list", "match_consecutive", "haystack", "self", "entry2"], ["list", "match_consecutive", "haystack", "self", "entry4"], ["list", "match_consecutive", "haystack"]], "self": [["list", "match_consecutive", "haystack", "self", "entry1"], ["list", "match_consecutive", "haystack", "self", "entry2"], ["list", "match_consecutive", "haystack", "self", "entry4"]]}, "params_p": {"args": [], "haystack": [["int", 0.2017209602256925], ["str", 0.09428068183440591]], "kwargs": [], "self": []}, "q_name": "TestMatchConsecutive.test_consecutive", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [108, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_ignore_case", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_consecutive", "haystack", "ignore_case", "True", "self", "entry2"]], "self": [["list", "match_consecutive", "haystack", "ignore_case", "True", "self", "entry2"]]}, "params_p": {"args": [], "haystack": [["Callable", 0.0930723693852582]], "kwargs": [], "self": []}, "q_name": "TestMatchConsecutive.test_ignore_case", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [111, 93]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_windows_ignore_case", "params": {"self": "", "windows_haystack": ""}, "params_descr": {"self": "", "windows_haystack": ""}, "params_occur": {"self": [["list", "match_consecutive", "windows_haystack", "True", "self", "win_entry2"]], "windows_haystack": [["list", "match_consecutive", "windows_haystack", "True", "self", "win_entry2"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "windows_haystack": [["bool", 0.10934878128028276]]}, "q_name": "TestMatchConsecutive.test_windows_ignore_case", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [116, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_backslashes_for_windows_paths", "params": {"self": "", "windows_haystack": ""}, "params_descr": {"self": "", "windows_haystack": ""}, "params_occur": {"self": [["list", "match_consecutive", "windows_haystack", "True", "self", "win_entry2"]], "windows_haystack": [["list", "match_consecutive", "windows_haystack", "True", "self", "win_entry2"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "windows_haystack": [["Callable", 0.4138213936113624], ["Dict[str, Any]", 0.09167759310299828], ["str", 0.09167759310299828]]}, "q_name": "TestMatchConsecutive.test_backslashes_for_windows_paths", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[119, 4], [121, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_foo_bar_baz", "params": {"self": "", "windows_haystack": ""}, "params_descr": {"self": "", "windows_haystack": ""}, "params_occur": {"self": [["list", "match_consecutive", "windows_haystack", "ignore_case", "True", "self", "win_entry1"]], "windows_haystack": [["list", "match_consecutive", "windows_haystack", "ignore_case", "True", "self", "win_entry1"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "windows_haystack": [["bool", 0.11645986207134], ["Dict[str, Any]", 0.09893007941373423], ["dict", 0.09059305004861176]]}, "q_name": "TestMatchConsecutive.test_foo_bar_baz", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [126, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_thing", "params": {"self": "", "windows_haystack": ""}, "params_descr": {"self": "", "windows_haystack": ""}, "params_occur": {"self": [["list", "match_consecutive", "windows_haystack", "True", "self", "win_entry3"]], "windows_haystack": [["list", "match_consecutive", "windows_haystack", "True", "self", "win_entry3"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "windows_haystack": [["bool", 0.10934878128028276]]}, "q_name": "TestMatchConsecutive.test_thing", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[129, 4], [131, 88]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_wildcard_in_needle", "params": {"haystack": "", "self": ""}, "params_descr": {"haystack": "", "self": ""}, "params_occur": {"haystack": [["list", "match_consecutive", "haystack"], ["list", "match_consecutive", "haystack", "self", "entry6"]], "self": [["list", "match_consecutive", "haystack", "self", "entry6"]]}, "params_p": {"args": [], "haystack": [["int", 0.1907596340362664], ["Optional[Union[bool, Any]]", 0.10534353326754307], ["str", 0.096784275582871]], "kwargs": [], "self": []}, "q_name": "TestMatchConsecutive.test_wildcard_in_needle", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMatchConsecutive", "q_name": "TestMatchConsecutive", "variables": {"entry1": "", "entry2": "", "entry3": "", "entry4": "", "entry5": "", "entry6": "", "win_entry1": "", "win_entry2": "", "win_entry3": ""}, "variables_p": {"entry1": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry2": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry3": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry4": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry5": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "entry6": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "win_entry1": [["bool", 0.3], ["str", 0.19999999999999998], ["int", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[List[int]]", 0.09999999999999999]], "win_entry2": [["bool", 0.3], ["str", 0.19999999999999998], ["int", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[List[int]]", 0.09999999999999999]], "win_entry3": [["bool", 0.3], ["str", 0.19999999999999998], ["int", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[List[int]]", 0.09999999999999999]]}}], "funcs": [], "imports": ["os", "sys", "pytest", "autojump_data", "Entry", "autojump_match", "match_anywhere", "autojump_match", "match_consecutive"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 49}, "session_id": "Xo0F3K8rzqulOAzreRVCqelchP_nRGUHDYaoMI-N2Lw", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}