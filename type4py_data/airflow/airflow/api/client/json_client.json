{"error": null, "response": {"classes": [{"cls_lc": [[26, 0], [151, 30]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Make a request to the Json API server.", "long_descr": null, "ret": "A dictionary containing the JSON response from the server."}, "fn_lc": [[33, 4], [55, 26]], "fn_var_ln": {"data": [[53, 16], [53, 20]], "params": [[42, 8], [42, 14]], "resp": [[47, 8], [47, 12]]}, "fn_var_occur": {"data": [["data", "resp", "json"], ["OSError", "data", "get"]], "params": [["params", "url"], ["params", "json"], ["resp", "getattr", "self", "_session", "method", "lower", "params"]], "resp": [["resp", "getattr", "self", "_session", "method", "lower", "params"], ["resp", "is_error"], ["data", "resp", "json"], ["resp", "json"]]}, "name": "_request", "params": {"json": "", "method": "builtins.str", "self": "", "url": "builtins.str"}, "params_descr": {"json": "A dictionary containing JSON data to send in the request body.", "method": "The HTTP method to use (e.g. \"GET\", \"POST\", \"DELETE\").", "self": "", "url": "The URL to send the request to."}, "params_occur": {"json": [["json", "None"], ["params", "json"], ["data", "resp", "json"], ["resp", "json"]], "method": [["resp", "getattr", "self", "_session", "method", "lower", "params"]], "self": [["resp", "getattr", "self", "_session", "method", "lower", "params"]], "url": [["params", "url"]]}, "params_p": {"args": [], "json": [["Optional[str]", 0.4813784938289887], ["dict", 0.18936314866670817], ["Optional[List[str]]", 0.0839528281854953]], "kwargs": [], "method": [["str", 0.24848082851878556], ["bytes", 0.11151654918793856]], "self": [], "url": [["str", 0.4837929831808477], ["float", 0.09922418933074194], ["List[str]", 0.09769127699787475]]}, "q_name": "Client._request", "ret_exprs": ["return resp.json()"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.2922747219984692], ["dict", 0.18886847609886068], ["Exception", 0.10148391087464279], ["Optional[Dict[str, str]]", 0.09583364884357848]], "variables": {"data": "", "params": "", "resp": ""}, "variables_p": {"data": [["dict", 0.27979920449586876], ["str", 0.24348517077282197], ["list", 0.10365918680217873], ["Dict[str, None]", 0.10365918680217873], ["Dict[str, Any]", 0.10165100951144695], ["Dict[int, List[str]]", 0.08526263071698177], ["Dict[str, int]", 0.08248361089852317]], "params": [["List[str]", 0.21830596436923402], ["str", 0.21039417761251522], ["BinaryIO", 0.10532381362315187], ["Dict[Any, str]", 0.09389273468525645], ["Dict[int, str]", 0.08551983621835148], ["Dict[str, float]", 0.08247129368154746]], "resp": [["dict", 0.5283278056226173], ["str", 0.1858510703431614], ["Dict[str, str]", 0.09702144514379785], ["Dict[int, str]", 0.0877883978501478]]}}, {"docstring": {"func": "Trigger a DAG run.", "long_descr": null, "ret": "A message indicating the status of the DAG run trigger."}, "fn_lc": [[57, 4], [75, 70]], "fn_var_ln": {"data": [[69, 8], [69, 12]], "endpoint": [[67, 8], [67, 16]], "url": [[68, 8], [68, 11]]}, "fn_var_occur": {"data": [["data", "run_id", "conf", "execution_date", "replace_microseconds"], ["self", "_request", "url", "method", "json", "data"]], "endpoint": [["endpoint", "dag_id"], ["url", "urljoin", "self", "_api_base_url", "endpoint"]], "url": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["self", "_request", "url", "method", "json", "data"]]}, "name": "trigger_dag", "params": {"conf": "", "dag_id": "", "execution_date": "", "replace_microseconds": "", "run_id": "", "self": ""}, "params_descr": {"conf": "A dictionary containing configuration data to pass to the DAG run.", "dag_id": "The ID of the DAG to trigger.", "execution_date": "The execution date for the DAG run, in the format \"YYYY-MM-DDTHH:MM:SS\".", "replace_microseconds": "Whether to replace microseconds in the execution date with zeros.", "run_id": "The ID of the DAG run to create. If not provided, a default ID will be generated.", "self": ""}, "params_occur": {"conf": [["data", "run_id", "conf", "execution_date", "replace_microseconds"]], "dag_id": [["endpoint", "dag_id"]], "execution_date": [["data", "run_id", "conf", "execution_date", "replace_microseconds"]], "replace_microseconds": [["data", "run_id", "conf", "execution_date", "replace_microseconds"]], "run_id": [["data", "run_id", "conf", "execution_date", "replace_microseconds"]], "self": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["self", "_request", "url", "method", "json", "data"]]}, "params_p": {"args": [], "conf": [["Optional[Dict[str, Any]]", 0.17527117667802322], ["str", 0.10165023911760944], ["Optional[str]", 0.08966940517815543]], "dag_id": [["str", 0.8307480288733369], ["int", 0.08297253903378722]], "execution_date": [["Optional[Dict[str, Any]]", 0.17527117667802322], ["str", 0.10165023911760944], ["Optional[str]", 0.08966940517815543]], "kwargs": [], "replace_microseconds": [["Optional[Dict[str, Any]]", 0.17527117667802322], ["str", 0.10165023911760944], ["Optional[str]", 0.08966940517815543]], "run_id": [["Optional[Dict[str, Any]]", 0.17527117667802322], ["str", 0.10165023911760944], ["Optional[str]", 0.08966940517815543]], "self": []}, "q_name": "Client.trigger_dag", "ret_exprs": ["return self._request(url, method=\"POST\", json=data)[\"message\"]"], "ret_type": "", "ret_type_p": [["Union[str, List[str]]", 0.26070386459568845], ["int", 0.13878221050960146], ["List[str]", 0.11339616154098615], ["Dict[str, Any]", 0.10166968246287707], ["Dict[str, str]", 0.09903036670081347], ["bool", 0.0948011284500078]], "variables": {"data": "", "endpoint": "", "url": ""}, "variables_p": {"data": [["Dict[str, Any]", 0.18891353088825394], ["List[bool]", 0.14677380271537152], ["dict", 0.09449549817704885], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08325666870833374], ["List[str]", 0.08231413999646861]], "endpoint": [["dict", 0.19929947155154693], ["Dict[str, Union[Any, Any]]", 0.09447724826584888], ["Dict[str, str]", 0.09308981203048762]], "url": [["Dict[str, str]", 0.4942970778373644], ["str", 0.22337740372833953]]}}, {"docstring": {"func": "Delete a DAG.", "long_descr": null, "ret": "A message indicating the status of the DAG delete operation."}, "fn_lc": [[77, 4], [86, 30]], "fn_var_ln": {"data": [[85, 8], [85, 12]], "endpoint": [[83, 8], [83, 16]], "url": [[84, 8], [84, 11]]}, "fn_var_occur": {"data": [["data", "self", "_request", "url", "method"]], "endpoint": [["endpoint", "dag_id"], ["url", "urljoin", "self", "_api_base_url", "endpoint"]], "url": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["data", "self", "_request", "url", "method"]]}, "name": "delete_dag", "params": {"dag_id": "builtins.str", "self": ""}, "params_descr": {"dag_id": "The ID of the DAG to delete.", "self": ""}, "params_occur": {"dag_id": [["endpoint", "dag_id"]], "self": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["data", "self", "_request", "url", "method"]]}, "params_p": {"args": [], "dag_id": [["str", 0.7889817155466703], ["int", 0.21101828445332957]], "kwargs": [], "self": []}, "q_name": "Client.delete_dag", "ret_exprs": ["return data[\"message\"]"], "ret_type": "", "ret_type_p": [["str", 0.1987957379705007], ["Dict[str, Any]", 0.15070375030451863], ["Callable", 0.10276062620568449], ["Optional[str]", 0.1017941347484548], ["dict", 0.08881769342067859], ["Callable[[str], T]", 0.07952730945799467]], "variables": {"data": "", "endpoint": "", "url": ""}, "variables_p": {"data": [["str", 0.7549985026034802], ["List[str]", 0.24500149739651977]], "endpoint": [["dict", 0.19929947155154693], ["Dict[str, Union[Any, Any]]", 0.09447724826584888], ["Dict[str, str]", 0.09308981203048762]], "url": [["str", 0.9121397339095306], ["List[str]", 0.08786026609046943]]}}, {"docstring": {"func": "Get information about a specific pool.", "long_descr": null, "ret": "A tuple containing the name of the pool, the number of\nslots in the pool, and a description of the pool."}, "fn_lc": [[88, 4], [98, 63]], "fn_var_ln": {"endpoint": [[95, 8], [95, 16]], "pool": [[97, 8], [97, 12]], "url": [[96, 8], [96, 11]]}, "fn_var_occur": {"endpoint": [["endpoint", "name"], ["url", "urljoin", "self", "_api_base_url", "endpoint"]], "pool": [["pool", "self", "_request", "url"], ["pool", "pool", "pool"]], "url": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["pool", "self", "_request", "url"]]}, "name": "get_pool", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "The name of the pool to retrieve information for.", "self": ""}, "params_occur": {"name": [["endpoint", "name"]], "self": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["pool", "self", "_request", "url"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.8571428571563524]], "self": []}, "q_name": "Client.get_pool", "ret_exprs": ["return pool[\"pool\"], pool[\"slots\"], pool[\"description\"]"], "ret_type": "", "ret_type_p": [["bool", 0.175787672659887], ["str", 0.175787672659887], ["int", 0.16593720134145928], ["bytes", 0.09529608000932523]], "variables": {"endpoint": "", "pool": "", "url": ""}, "variables_p": {"endpoint": [["Dict[str, str]", 0.3907141391270824], ["int", 0.10449958028586208]], "pool": [["str", 0.5401836876933038], ["int", 0.09742034421621809], ["Optional[str]", 0.09450466342989507]], "url": [["str", 0.35665946556740974], ["Dict[str, str]", 0.15684105119781439], ["List[str]", 0.11686931672880019], ["int", 0.11233740245947428], ["Tuple[str, str]", 0.09419128881950822]]}}, {"docstring": {"func": "Get a list of all pools.", "long_descr": null, "ret": "A list of tuples, each containing the name of a pool,\nthe number of slots in the pool, and a description of the pool."}, "fn_lc": [[100, 4], [109, 73]], "fn_var_ln": {"endpoint": [[106, 8], [106, 16]], "pools": [[108, 8], [108, 13]], "url": [[107, 8], [107, 11]]}, "fn_var_occur": {"endpoint": [["url", "urljoin", "self", "_api_base_url", "endpoint"]], "pools": [["pools", "self", "_request", "url"], ["p", "p", "p", "p", "pools"]], "url": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["pools", "self", "_request", "url"]]}, "name": "get_pools", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["pools", "self", "_request", "url"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Client.get_pools", "ret_exprs": ["return [(p[\"pool\"], p[\"slots\"], p[\"description\"]) for p in pools]"], "ret_type": "", "ret_type_p": [["int", 0.6135437984650086], ["bool", 0.19528185291194414], ["float", 0.09617172433044506], ["str", 0.09500262429260231]], "variables": {"endpoint": "", "pools": "", "url": ""}, "variables_p": {"endpoint": [["str", 0.29646029554424086], ["Dict[str, str]", 0.2089181855351869], ["bool", 0.10537780290714309], ["Optional[str]", 0.10537780290714309]], "pools": [["str", 0.5401836876933038], ["int", 0.09742034421621809], ["Optional[str]", 0.09450466342989507]], "url": [["str", 0.35665946556740974], ["Dict[str, str]", 0.15684105119781439], ["List[str]", 0.11686931672880019], ["int", 0.11233740245947428], ["Tuple[str, str]", 0.09419128881950822]]}}, {"docstring": {"func": "Create a new pool.", "long_descr": null, "ret": "A tuple containing the name of the pool, the number of slots in the pool,\nand a description of the pool."}, "fn_lc": [[111, 4], [127, 75]], "fn_var_ln": {"data": [[121, 8], [121, 12]], "endpoint": [[120, 8], [120, 16]], "response": [[126, 8], [126, 16]]}, "fn_var_occur": {"data": [["data", "name", "slots", "description"], ["response", "self", "_request", "urljoin", "self", "_api_base_url", "endpoint", "method", "json", "data"]], "endpoint": [["response", "self", "_request", "urljoin", "self", "_api_base_url", "endpoint", "method", "json", "data"]], "response": [["response", "self", "_request", "urljoin", "self", "_api_base_url", "endpoint", "method", "json", "data"], ["response", "response", "response"]]}, "name": "create_pool", "params": {"description": "builtins.str", "name": "builtins.str", "self": "", "slots": "builtins.int"}, "params_descr": {"description": "A description of the pool.", "name": "The name of the pool to create.", "self": "", "slots": "The number of slots in the pool."}, "params_occur": {"description": [["data", "name", "slots", "description"]], "name": [["data", "name", "slots", "description"]], "self": [["response", "self", "_request", "urljoin", "self", "_api_base_url", "endpoint", "method", "json", "data"]], "slots": [["data", "name", "slots", "description"]]}, "params_p": {"args": [], "description": [["str", 0.4959420624615619], ["bool", 0.4038753800461764]], "kwargs": [], "name": [["str", 0.4959420624615619], ["bool", 0.4038753800461764]], "self": [], "slots": [["str", 0.4959420624615619], ["bool", 0.4038753800461764]]}, "q_name": "Client.create_pool", "ret_exprs": ["return response[\"pool\"], response[\"slots\"], response[\"description\"]"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.19884313043523133], ["bool", 0.18661216285901244], ["Dict[str, Any]", 0.12591690175160497]], "variables": {"data": "", "endpoint": "", "response": ""}, "variables_p": {"data": [["dict", 0.5301652331061965], ["Dict[str, Any]", 0.10496348226421846], ["Dict[str, None]", 0.10046491406307628], ["Dict[Any, Dict[Any, Any]]", 0.09150224757362735], ["Dict[str, Dict]", 0.08626401530612636]], "endpoint": [["dict", 0.3860555341397935], ["bool", 0.3019331695656623], ["Dict[str, Union[Any, Any, Any]]", 0.12857108516326726], ["Dict[str, Any]", 0.09504469506014113], ["set", 0.08839551607113592]], "response": [["Dict[str, str]", 0.09680645792708086]]}}, {"docstring": {"func": "Delete a pool.", "long_descr": null, "ret": "A tuple containing the name of the pool, the number\nof slots in the pool, and a description of the pool."}, "fn_lc": [[129, 4], [139, 63]], "fn_var_ln": {"endpoint": [[136, 8], [136, 16]], "pool": [[138, 8], [138, 12]], "url": [[137, 8], [137, 11]]}, "fn_var_occur": {"endpoint": [["endpoint", "name"], ["url", "urljoin", "self", "_api_base_url", "endpoint"]], "pool": [["pool", "self", "_request", "url", "method"], ["pool", "pool", "pool"]], "url": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["pool", "self", "_request", "url", "method"]]}, "name": "delete_pool", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "The name of the pool to delete.", "self": ""}, "params_occur": {"name": [["endpoint", "name"]], "self": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["pool", "self", "_request", "url", "method"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 1.0000000000000002]], "self": []}, "q_name": "Client.delete_pool", "ret_exprs": ["return pool[\"pool\"], pool[\"slots\"], pool[\"description\"]"], "ret_type": "", "ret_type_p": [["bool", 0.21709912738671563], ["str", 0.21709912738671563], ["bytes", 0.10802713811075912], ["List[str]", 0.09878442381800731], ["int", 0.0963897846206123], ["dict", 0.0831896757785486]], "variables": {"endpoint": "", "pool": "", "url": ""}, "variables_p": {"endpoint": [["Dict[str, str]", 0.3907141391270824], ["int", 0.10449958028586208]], "pool": [["str", 0.6251974159623845], ["dict", 0.09279993180419442], ["Optional[str]", 0.09273339836190952]], "url": [["str", 0.9049398900488169]]}}, {"docstring": {"func": "Get the lineage of a DAG run.", "long_descr": null, "ret": "A message indicating the status of the lineage request."}, "fn_lc": [[141, 4], [151, 30]], "fn_var_ln": {"data": [[150, 8], [150, 12]], "endpoint": [[148, 8], [148, 16]], "url": [[149, 8], [149, 11]]}, "fn_var_occur": {"data": [["data", "self", "_request", "url", "method"]], "endpoint": [["endpoint", "dag_id", "execution_date"], ["url", "urljoin", "self", "_api_base_url", "endpoint"]], "url": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["data", "self", "_request", "url", "method"]]}, "name": "get_lineage", "params": {"dag_id": "builtins.str", "execution_date": "builtins.str", "self": ""}, "params_descr": {"dag_id": "The ID of the DAG.", "execution_date": "The execution date of the DAG run, in the format \"YYYY-MM-DDTHH:MM:SS\".", "self": ""}, "params_occur": {"dag_id": [["endpoint", "dag_id", "execution_date"]], "execution_date": [["endpoint", "dag_id", "execution_date"]], "self": [["url", "urljoin", "self", "_api_base_url", "endpoint"], ["data", "self", "_request", "url", "method"]]}, "params_p": {"args": [], "dag_id": [["int", 1.0000000000000002]], "execution_date": [["int", 1.0000000000000002]], "kwargs": [], "self": []}, "q_name": "Client.get_lineage", "ret_exprs": ["return data[\"message\"]"], "ret_type": "", "ret_type_p": [["bytes", 0.25217530015099227], ["Dict[str, Any]", 0.1863552036711391], ["str", 0.17376474983525128], ["Callable", 0.10715616918042037], ["Optional[str]", 0.0963230717235924], ["Callable[[str], T]", 0.0949807916101908]], "variables": {"data": "", "endpoint": "", "url": ""}, "variables_p": {"data": [["str", 0.7549985026034802], ["List[str]", 0.24500149739651977]], "endpoint": [["str", 0.28072121861174276], ["dict", 0.11573703592951333], ["float", 0.11039269412269533], ["Dict[str, Dict[str, Any]]", 0.09145437497425717], ["urllib.requesOpenerDirector", 0.08861011267197236]], "url": [["str", 0.9121397339095306], ["List[str]", 0.08786026609046943]]}}], "name": "Client", "q_name": "Client", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "urllib", "parse", "urljoin", "airflow", "api", "client", "api_client"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 11, "I": 0, "U": 37}, "session_id": "Mclx8U8AMqDsDnO1b9ZXDLYOgwSgkErCwNcV-FXH8aA", "set": null, "tc": [false, null], "type_annot_cove": 0.23, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}