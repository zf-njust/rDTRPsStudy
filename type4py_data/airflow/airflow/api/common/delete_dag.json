{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Delete a DAG by a dag_id.", "long_descr": ":param dag_id: the dag_id of the DAG to delete\n:param keep_records_in_log: whether keep records of the given dag_id\n    in the Log table in the backend database (for reasons like auditing).\n    The default value is True.\n:param session: session used\n:return count of deleted dags", "ret": null}, "fn_lc": [[38, 0], [105, 16]], "fn_var_ln": {"count": [[79, 4], [79, 9]], "dag": [[58, 4], [58, 7]], "dags_to_delete": [[72, 4], [72, 18]], "dags_to_delete_query": [[63, 4], [63, 24]], "parent_dag_id": [[91, 8], [91, 21]], "running_tis": [[50, 4], [50, 15]], "task_id": [[91, 23], [91, 30]]}, "fn_var_occur": {"count": [["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "in_", "dags_to_delete", "execution_options", "synchronize_session", "rowcount"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "parent_dag_id", "model", "task_id", "task_id", "rowcount"]], "dag": [["dag", "session", "scalar", "select", "DagModel", "where", "DagModel", "dag_id", "dag_id", "limit"], ["dag", "None"], ["dag", "is_subdag"], ["session", "execute", "delete", "models", "ImportError", "where", "models", "ImportError", "filename", "dag", "fileloc", "execution_options", "synchronize_session"]], "dags_to_delete": [["dags_to_delete", "dag_id", "dag_id", "dags_to_delete_query"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "in_", "dags_to_delete", "execution_options", "synchronize_session", "rowcount"]], "dags_to_delete_query": [["dags_to_delete_query", "session", "execute", "select", "DagModel", "dag_id", "where", "or_", "DagModel", "dag_id", "dag_id", "and_", "DagModel", "dag_id", "like", "dag_id", "DagModel", "is_subdag"], ["dags_to_delete", "dag_id", "dag_id", "dags_to_delete_query"]], "parent_dag_id": [["parent_dag_id", "task_id", "dag_id", "rsplit"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "parent_dag_id", "model", "task_id", "task_id", "rowcount"]], "running_tis": [["running_tis", "session", "scalar", "select", "models", "TaskInstance", "state", "where", "models", "TaskInstance", "dag_id", "dag_id", "where", "models", "TaskInstance", "state", "State", "RUNNING", "limit"]], "task_id": [["parent_dag_id", "task_id", "dag_id", "rsplit"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "parent_dag_id", "model", "task_id", "task_id", "rowcount"]]}, "name": "delete_dag", "params": {"dag_id": "builtins.str", "keep_records_in_log": "builtins.bool", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_id": "", "keep_records_in_log": "", "session": ""}, "params_occur": {"dag_id": [["log", "info", "dag_id"], ["running_tis", "session", "scalar", "select", "models", "TaskInstance", "state", "where", "models", "TaskInstance", "dag_id", "dag_id", "where", "models", "TaskInstance", "state", "State", "RUNNING", "limit"], ["dag", "session", "scalar", "select", "DagModel", "where", "DagModel", "dag_id", "dag_id", "limit"], ["DagNotFound", "dag_id"], ["dags_to_delete_query", "session", "execute", "select", "DagModel", "dag_id", "where", "or_", "DagModel", "dag_id", "dag_id", "and_", "DagModel", "dag_id", "like", "dag_id", "DagModel", "is_subdag"], ["dags_to_delete", "dag_id", "dag_id", "dags_to_delete_query"], ["SerializedDagModel", "has_dag", "dag_id", "dag_id", "session", "session"], ["SerializedDagModel", "remove_dag", "dag_id", "dag_id", "session", "session"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "in_", "dags_to_delete", "execution_options", "synchronize_session", "rowcount"], ["parent_dag_id", "task_id", "dag_id", "rsplit"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "parent_dag_id", "model", "task_id", "task_id", "rowcount"]], "keep_records_in_log": [["keep_records_in_log", "model", "__name__"]], "session": [["running_tis", "session", "scalar", "select", "models", "TaskInstance", "state", "where", "models", "TaskInstance", "dag_id", "dag_id", "where", "models", "TaskInstance", "state", "State", "RUNNING", "limit"], ["dag", "session", "scalar", "select", "DagModel", "where", "DagModel", "dag_id", "dag_id", "limit"], ["dags_to_delete_query", "session", "execute", "select", "DagModel", "dag_id", "where", "or_", "DagModel", "dag_id", "dag_id", "and_", "DagModel", "dag_id", "like", "dag_id", "DagModel", "is_subdag"], ["SerializedDagModel", "has_dag", "dag_id", "dag_id", "session", "session"], ["SerializedDagModel", "remove_dag", "dag_id", "dag_id", "session", "session"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "in_", "dags_to_delete", "execution_options", "synchronize_session", "rowcount"], ["count", "session", "execute", "delete", "model", "where", "model", "dag_id", "parent_dag_id", "model", "task_id", "task_id", "rowcount"], ["session", "execute", "delete", "models", "ImportError", "where", "models", "ImportError", "filename", "dag", "fileloc", "execution_options", "synchronize_session"]]}, "params_p": {"args": [], "dag_id": [["bool", 0.3025339110957127], ["zerver.models.UserProfile", 0.14317263879273284], ["int", 0.09060584669876952], ["str", 0.07915181241492868]], "keep_records_in_log": [["Optional[bool]", 0.20934262808140267], ["bool", 0.20934262808140267], ["str", 0.20088314760371506], ["Optional[int]", 0.10467131404070133], ["Optional[float]", 0.10467131404070133], ["Callable", 0.0886785319511231], ["Optional[List[int]]", 0.0824104362009538]], "kwargs": [], "session": [["bool", 0.19954956136992863], ["str", 0.19774341004667084], ["int", 0.19060177907703202], ["Optional[str]", 0.08611615855155544]]}, "q_name": "delete_dag", "ret_exprs": ["return count"], "ret_type": "builtins.int", "ret_type_p": [["str", 0.5], ["int", 0.2], ["sqlalchemy.orm.Session", 0.1]], "variables": {"count": "", "dag": "", "dags_to_delete": "", "dags_to_delete_query": "", "parent_dag_id": "", "running_tis": "", "task_id": ""}, "variables_p": {"count": [["int", 0.1855283973188771], ["str", 0.12051467485128309], ["notifications.models.Notification", 0.06979823359760011]], "dag": [["str", 0.18668296393528916], ["List[str]", 0.12950386435226896]], "dags_to_delete": [["list", 0.19991310448966454], ["Dict[str, Union[int, str]]", 0.16767311412460167], ["dict", 0.164000814201247], ["List[str]", 0.14063676237594716], ["Dict[str, Any]", 0.08354911608179866], ["List[Tuple[Any, str]]", 0.08246485387881336], ["List[Tuple[Any, Any, Any]]", 0.07490398310950458]], "dags_to_delete_query": [["Dict[str, Union[float, str]]", 0.17087702506549432], ["List[Dict[str, Any]]", 0.1018611267779779], ["list", 0.0985243193393226], ["set", 0.0930518724876435], ["Dict[int, Any]", 0.08680032116447406]], "parent_dag_id": [["int", 0.18534607504745482], ["cmk.utils.type_defs.UserId", 0.11245458929889543], ["list", 0.08978505475483073], ["str", 0.0893683283476015]], "running_tis": [["int", 0.2865115092413487], ["Dict[str, Dict[str, Any]]", 0.12723482794990038], ["list", 0.12480310596385491], ["Pattern[str]", 0.11227440527642325]], "task_id": [["Set[int]", 0.32580453620958977], ["str", 0.1856292107712135], ["Dict[str, int]", 0.12534014304644067], ["cmk.utils.type_defs.UserId", 0.10966622664678663], ["int", 0.08164620415808493]]}}], "imports": ["__future__", "annotations", "logging", "sqlalchemy", "and_", "delete", "or_", "select", "sqlalchemy", "orm", "Session", "airflow", "models", "airflow", "exceptions", "AirflowException", "DagNotFound", "airflow", "models", "DagModel", "TaskFail", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "utils", "db", "get_sqla_model_classes", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "airflow", "utils", "state", "State"], "mod_var_ln": {"log": [[34, 0], [34, 3]]}, "mod_var_occur": {"log": [["log", "info", "dag_id"]]}, "no_types_annot": {"D": 4, "I": 0, "U": 8}, "session_id": "fzyD6WFKC8233IkOtKkRM4MQu5usl-iPV8vudWcPCAU", "set": null, "tc": [false, null], "type_annot_cove": 0.33, "typed_seq": "", "untyped_seq": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.9999999999999999]]}}}