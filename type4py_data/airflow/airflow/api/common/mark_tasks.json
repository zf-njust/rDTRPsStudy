{"error": null, "response": {"classes": [{"cls_lc": [[39, 0], [41, 71]], "cls_var_ln": {"data_interval": [[41, 4], [41, 17]], "logical_date": [[40, 4], [40, 16]]}, "cls_var_occur": {"data_interval": [], "logical_date": []}, "funcs": [], "name": "_DagRunInfo", "q_name": "_DagRunInfo", "variables": {"data_interval": "builtins.tuple[datetime.datetime, datetime.datetime]", "logical_date": "datetime.datetime"}, "variables_p": {"data_interval": [["str", 0.4000000000000001], ["bool", 0.10000000000000002], ["list", 0.10000000000000002], ["dict", 0.10000000000000002], ["Type[backend.recordbin.models.record.RecordSerializer]", 0.10000000000000002], ["Type[eventstore.models.ChannelSwitch]", 0.10000000000000002]], "logical_date": [["Optional[datetime.date]", 0.2], ["str", 0.2], ["Optional[datetime.datetime]", 0.1], ["Type[leasing.models.decision.Decision]", 0.1]]}}], "funcs": [{"docstring": {"func": "Infers from data intervals which DAG runs need to be created and does so.", "long_descr": null, "ret": "Newly created and existing dag runs for the execution dates supplied."}, "fn_lc": [[44, 0], [75, 28]], "fn_var_ln": {"dag_runs": [[59, 4], [59, 12]]}, "fn_var_occur": {"dag_runs": [["dag_runs", "run", "logical_date", "run", "run", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "info", "logical_date", "info", "infos"], ["info", "logical_date", "dag_runs"], ["dag_runs", "info", "logical_date", "dag", "create_dagrun", "execution_date", "info", "logical_date", "data_interval", "info", "data_interval", "start_date", "timezone", "utcnow", "external_trigger", "False", "state", "state", "run_type", "run_type"], ["dag_runs", "values"]]}, "name": "_create_dagruns", "params": {"dag": "airflow.models.dag.DAG", "infos": "typing.Iterable[_DagRunInfo]", "run_type": "airflow.utils.types.DagRunType", "state": "airflow.utils.state.DagRunState"}, "params_descr": {"dag": "The DAG to create runs for.", "infos": "List of logical dates and data intervals to evaluate.", "run_type": "The prefix will be used to construct dag run id: ``{run_id_prefix}__{execution_date}``.", "state": "The state to set the dag run to"}, "params_occur": {"dag": [["dag_runs", "run", "logical_date", "run", "run", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "info", "logical_date", "info", "infos"], ["dag_runs", "info", "logical_date", "dag", "create_dagrun", "execution_date", "info", "logical_date", "data_interval", "info", "data_interval", "start_date", "timezone", "utcnow", "external_trigger", "False", "state", "state", "run_type", "run_type"]], "infos": [["dag_runs", "run", "logical_date", "run", "run", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "info", "logical_date", "info", "infos"]], "run_type": [["dag_runs", "info", "logical_date", "dag", "create_dagrun", "execution_date", "info", "logical_date", "data_interval", "info", "data_interval", "start_date", "timezone", "utcnow", "external_trigger", "False", "state", "state", "run_type", "run_type"]], "state": [["dag_runs", "info", "logical_date", "dag", "create_dagrun", "execution_date", "info", "logical_date", "data_interval", "info", "data_interval", "start_date", "timezone", "utcnow", "external_trigger", "False", "state", "state", "run_type", "run_type"]]}, "params_p": {"args": [], "dag": [["zerver.models.Realm", 0.18619753498753233], ["str", 0.11925956277935092], ["tartare.core.models.Contributor", 0.11215579620871854], ["Set[str]", 0.0948752925979043], ["app.models.user.User", 0.09282459520376525]], "infos": [["zerver.models.Realm", 0.18619753498753233], ["str", 0.11925956277935092], ["tartare.core.models.Contributor", 0.11215579620871854], ["Set[str]", 0.0948752925979043], ["app.models.user.User", 0.09282459520376525]], "kwargs": [], "run_type": [["models.Project", 0.13859260681014535], ["models.Record", 0.09136955112288037], ["str", 0.09112680584042548], ["Callable[[Any], str]", 0.09112680584042548], ["web3.types.Nonce", 0.0887981719209158], ["int", 0.0887981719209158]], "state": [["models.Project", 0.13859260681014535], ["models.Record", 0.09136955112288037], ["str", 0.09112680584042548], ["Callable[[Any], str]", 0.09112680584042548], ["web3.types.Nonce", 0.0887981719209158], ["int", 0.0887981719209158]]}, "q_name": "_create_dagruns", "ret_exprs": ["return dag_runs.values()"], "ret_type": "typing.Iterable[airflow.models.dagrun.DagRun]", "ret_type_p": [["str", 0.2776155948002746], ["int", 0.19229701210993144], ["bool", 0.13868587416862116], ["Optional[str]", 0.10124668565380875], ["django.db.models.query.QuerySet", 0.09857909300976062]], "variables": {"dag_runs": ""}, "variables_p": {"dag_runs": [["int", 0.19473276005003765], ["raiden.utils.PaymentID", 0.10858636123305197], ["raiden.utils.MessageID", 0.10231248465024503], ["str", 0.10151766009439699], ["Dict[str, str]", 0.09683970919651487]]}}, {"docstring": {"func": "Set the state of a task instance and if needed its relatives.", "long_descr": "Can set state for future tasks (calculated from run_id) and retroactively\nfor past tasks. Will verify integrity of past dag runs in order to create\ntasks that did not exist. It will not create dag runs that are missing\non the schedule (but it will, as for subdag, dag runs if needed).", "ret": "list of tasks that have been created and updated"}, "fn_lc": [[79, 0], [167, 22]], "fn_var_ln": {"confirmed_dates": [[140, 4], [140, 19]], "confirmed_infos": [[139, 4], [139, 19]], "dag": [[126, 4], [126, 7]], "dag_run_ids": [[135, 4], [135, 15]], "qry_dag": [[148, 4], [148, 11]], "qry_sub_dag": [[165, 12], [165, 23]], "run_id": [[131, 8], [131, 14]], "sub_dag_run_ids": [[142, 4], [142, 19]], "task_dags": [[123, 4], [123, 13]], "task_id_map_index_list": [[136, 4], [136, 26]], "task_ids": [[137, 4], [137, 12]], "tis_altered": [[163, 8], [163, 19]]}, "fn_var_occur": {"confirmed_dates": [["confirmed_dates", "info", "logical_date", "info", "confirmed_infos"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"]], "confirmed_infos": [["confirmed_infos", "list", "_iter_existing_dag_run_infos", "dag", "dag_run_ids", "session", "session"], ["confirmed_dates", "info", "logical_date", "info", "confirmed_infos"], ["sub_dag_run_ids", "list", "_iter_subdag_run_ids", "dag", "session", "DagRunState", "state", "task_ids", "commit", "confirmed_infos"]], "dag": [["task_dags", "task", "dag", "isinstance", "task", "tuple", "task", "dag", "task", "tasks"], ["dag", "next", "iter", "task_dags"], ["dag", "None"], ["run_id", "dag", "get_dagrun", "execution_date", "execution_date", "session", "session", "run_id"], ["dag_run_ids", "get_run_ids", "dag", "run_id", "future", "past", "session", "session"], ["confirmed_infos", "list", "_iter_existing_dag_run_infos", "dag", "dag_run_ids", "session", "session"], ["sub_dag_run_ids", "list", "_iter_subdag_run_ids", "dag", "session", "DagRunState", "state", "task_ids", "commit", "confirmed_infos"], ["qry_dag", "get_all_dag_task_query", "dag", "session", "state", "task_id_map_index_list", "dag_run_ids"]], "dag_run_ids": [["dag_run_ids", "get_run_ids", "dag", "run_id", "future", "past", "session", "session"], ["confirmed_infos", "list", "_iter_existing_dag_run_infos", "dag", "dag_run_ids", "session", "session"], ["qry_dag", "get_all_dag_task_query", "dag", "session", "state", "task_id_map_index_list", "dag_run_ids"]], "qry_dag": [["qry_dag", "get_all_dag_task_query", "dag", "session", "state", "task_id_map_index_list", "dag_run_ids"], ["tis_altered", "session", "scalars", "qry_dag", "with_for_update", "all"], ["tis_altered", "session", "scalars", "qry_dag", "all"]], "qry_sub_dag": [["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"], ["tis_altered", "session", "scalars", "qry_sub_dag", "with_for_update", "all"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"], ["tis_altered", "session", "scalars", "qry_sub_dag", "all"]], "run_id": [["exactly_one", "execution_date", "run_id"], ["run_id", "dag", "get_dagrun", "execution_date", "execution_date", "session", "session", "run_id"], ["dag_run_ids", "get_run_ids", "dag", "run_id", "future", "past", "session", "session"]], "sub_dag_run_ids": [["sub_dag_run_ids", "list", "_iter_subdag_run_ids", "dag", "session", "DagRunState", "state", "task_ids", "commit", "confirmed_infos"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"]], "task_dags": [["task_dags", "task", "dag", "isinstance", "task", "tuple", "task", "dag", "task", "tasks"], ["len", "task_dags"], ["ValueError", "task_dags"], ["dag", "next", "iter", "task_dags"]], "task_id_map_index_list": [["task_id_map_index_list", "list", "find_task_relatives", "tasks", "downstream", "upstream"], ["task_ids", "task_id", "isinstance", "task_id", "str", "task_id", "task_id", "task_id_map_index_list"], ["qry_dag", "get_all_dag_task_query", "dag", "session", "state", "task_id_map_index_list", "dag_run_ids"]], "task_ids": [["task_ids", "task_id", "isinstance", "task_id", "str", "task_id", "task_id", "task_id_map_index_list"], ["sub_dag_run_ids", "list", "_iter_subdag_run_ids", "dag", "session", "DagRunState", "state", "task_ids", "commit", "confirmed_infos"]], "tis_altered": [["tis_altered", "session", "scalars", "qry_dag", "with_for_update", "all"], ["tis_altered", "session", "scalars", "qry_sub_dag", "with_for_update", "all"], ["tis_altered", "session", "scalars", "qry_dag", "all"], ["tis_altered", "session", "scalars", "qry_sub_dag", "all"]]}, "name": "set_state", "params": {"commit": "builtins.bool", "downstream": "builtins.bool", "execution_date": "datetime | None", "future": "builtins.bool", "past": "builtins.bool", "run_id": "str | None", "session": "sqlalchemy.orm.Session", "state": "airflow.utils.state.TaskInstanceState", "tasks": "typing.Collection[Operator | tuple[Operator, int]]", "upstream": "builtins.bool"}, "params_descr": {"commit": "Commit tasks to be altered to the database", "downstream": "Mark all siblings (downstream tasks) of task_id, including SubDags", "execution_date": "the execution date from which to start looking (deprecated)", "future": "Mark all future tasks on the interval of the dag up until\nlast execution date.", "past": "Retroactively mark all tasks starting from start_date of the DAG", "run_id": "the run_id of the dagrun to start looking from", "session": "database session", "state": "State to which the tasks need to be set", "tasks": "the iterable of tasks or (task, map_index) tuples from which to work.\n``task.dag`` needs to be set", "upstream": "Mark all parents (upstream tasks)"}, "params_occur": {"commit": [["sub_dag_run_ids", "list", "_iter_subdag_run_ids", "dag", "session", "DagRunState", "state", "task_ids", "commit", "confirmed_infos"]], "downstream": [["task_id_map_index_list", "list", "find_task_relatives", "tasks", "downstream", "upstream"]], "execution_date": [["exactly_one", "execution_date", "run_id"], ["execution_date", "timezone", "is_localized", "execution_date"], ["ValueError", "execution_date"], ["run_id", "dag", "get_dagrun", "execution_date", "execution_date", "session", "session", "run_id"]], "future": [["dag_run_ids", "get_run_ids", "dag", "run_id", "future", "past", "session", "session"]], "past": [["dag_run_ids", "get_run_ids", "dag", "run_id", "future", "past", "session", "session"]], "run_id": [["exactly_one", "execution_date", "run_id"], ["run_id", "dag", "get_dagrun", "execution_date", "execution_date", "session", "session", "run_id"], ["dag_run_ids", "get_run_ids", "dag", "run_id", "future", "past", "session", "session"]], "session": [["run_id", "dag", "get_dagrun", "execution_date", "execution_date", "session", "session", "run_id"], ["dag_run_ids", "get_run_ids", "dag", "run_id", "future", "past", "session", "session"], ["confirmed_infos", "list", "_iter_existing_dag_run_infos", "dag", "dag_run_ids", "session", "session"], ["sub_dag_run_ids", "list", "_iter_subdag_run_ids", "dag", "session", "DagRunState", "state", "task_ids", "commit", "confirmed_infos"], ["qry_dag", "get_all_dag_task_query", "dag", "session", "state", "task_id_map_index_list", "dag_run_ids"], ["tis_altered", "session", "scalars", "qry_dag", "with_for_update", "all"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"], ["tis_altered", "session", "scalars", "qry_sub_dag", "with_for_update", "all"], ["task_instance", "set_state", "state", "session", "session"], ["session", "flush"], ["tis_altered", "session", "scalars", "qry_dag", "all"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"], ["tis_altered", "session", "scalars", "qry_sub_dag", "all"]], "state": [["sub_dag_run_ids", "list", "_iter_subdag_run_ids", "dag", "session", "DagRunState", "state", "task_ids", "commit", "confirmed_infos"], ["qry_dag", "get_all_dag_task_query", "dag", "session", "state", "task_id_map_index_list", "dag_run_ids"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"], ["task_instance", "state", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["task_instance", "set_state", "state", "session", "session"], ["qry_sub_dag", "all_subdag_tasks_query", "sub_dag_run_ids", "session", "state", "confirmed_dates"]], "tasks": [["task_dags", "task", "dag", "isinstance", "task", "tuple", "task", "dag", "task", "tasks"], ["task_id_map_index_list", "list", "find_task_relatives", "tasks", "downstream", "upstream"]], "upstream": [["task_id_map_index_list", "list", "find_task_relatives", "tasks", "downstream", "upstream"]]}, "params_p": {"args": [], "commit": [["int", 0.2868063921602921], ["List[List[str]]", 0.21650573779528048], ["List[str]", 0.11262318011975722], ["dict", 0.10069704876893311], ["Optional[str]", 0.08756014808045896]], "downstream": [["str", 0.49562686402268663], ["Optional[Dict[str, Any]]", 0.10928837335922957], ["Optional[str]", 0.1055906661593759], ["bool", 0.1055906661593759], ["Dict[str, str]", 0.09199234367466227], ["int", 0.09191108662466983]], "execution_date": [["Optional[datetime.datetime]", 0.30195491650988804], ["str", 0.20287099076983078], ["datetime.date", 0.10302087791395857], ["Dict[datetime.date, Dict[str, Any]]", 0.09800379407952126], ["datetime.datetime", 0.09582271672236296]], "future": [["Optional[str]", 0.4068890853862071], ["str", 0.40511867778247623]], "kwargs": [], "past": [["Optional[str]", 0.4068890853862071], ["str", 0.40511867778247623]], "run_id": [["datetime.datetime", 0.307457461218426], ["str", 0.1955462626050471], ["int", 0.10421402813110839], ["Optional[datetime.datetime]", 0.09473042794242591]], "session": [["bool", 0.3176272345771346], ["Optional[str]", 0.1008994113413096], ["Optional[int]", 0.08510082149443911]], "state": [["bool", 0.18131597933236976], ["List[int]", 0.1258216651456469], ["dict", 0.10226055172640588], ["int", 0.10226055172640588], ["Sequence[str]", 0.10097320657280338], ["Optional[List[str]]", 0.09472568465572086], ["List[annofabapi.models.Task]", 0.08679723122354284], ["str", 0.0863816107572244]], "tasks": [["dict", 0.10827135568633361], ["tracim.models.data.UserRoleInWorkspace", 0.10171641412456131], ["list", 0.1003248238112956], ["int", 0.09994463086709562]], "upstream": [["str", 0.49562686402268663], ["Optional[Dict[str, Any]]", 0.10928837335922957], ["Optional[str]", 0.1055906661593759], ["bool", 0.1055906661593759], ["Dict[str, str]", 0.09199234367466227], ["int", 0.09191108662466983]]}, "q_name": "set_state", "ret_exprs": ["return []", "return tis_altered"], "ret_type": "builtins.list[airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["str", 0.6065719364316037], ["bool", 0.07641618528568749], ["dict", 0.06990540694076008], ["int", 0.05759860997401194], ["List[Dict]", 0.04739054122740118]], "variables": {"confirmed_dates": "", "confirmed_infos": "", "dag": "", "dag_run_ids": "", "qry_dag": "", "qry_sub_dag": "", "run_id": "", "sub_dag_run_ids": "", "task_dags": "", "task_id_map_index_list": "", "task_ids": "", "tis_altered": ""}, "variables_p": {"confirmed_dates": [["datetime.date", 0.20501455817804176], ["sqlalchemy.Column", 0.20102179634020362], ["str", 0.1088372614597954], ["bool", 0.0925537863302089], ["int", 0.09243581030424491], ["Optional[Dict[str, Any]]", 0.08949236356031873]], "confirmed_infos": [["Dict[str, Any]", 0.3288550948226564], ["Dict[str, float]", 0.0903796600634409], ["Dict[str, Union[Any, Any, Any]]", 0.0866053495192659], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08301357054911535], ["List[str]", 0.0809574013718117]], "dag": [["raiden.utils.List", 0.07161654108647553]], "dag_run_ids": [["str", 0.6305420037869498], ["int", 0.1708671389584323], ["taxonomy.db.models.base.EnumField", 0.11798561440919643], ["Set[int]", 0.08060524284542155]], "qry_dag": [["int", 0.5168813345582793], ["str", 0.2017729713671201], ["raiden.utils.PaymentID", 0.11725790256811089], ["zerver.models.Realm", 0.08409018238243104]], "qry_sub_dag": [["geode.models.common.Address", 0.1464767454568738], ["asgard.models.app.AppStats", 0.09958602338240789], ["List[Tuple[str, str, Any, Any, str]]", 0.07850939340302683], ["str", 0.07198399604387554]], "run_id": [["str", 0.26987135260181716], ["int", 0.1582084097124495], ["models.File", 0.10728755953018897]], "sub_dag_run_ids": [["int", 0.30113107125189836], ["list", 0.2717234058890929], ["List[Tuple[str, Any, Any]]", 0.09403628777579964], ["List[str]", 0.0902128582731477], ["str", 0.08223708207422063], ["KeysView[str]", 0.08108821998098291], ["Set[str]", 0.07957107475485783]], "task_dags": [["int", 0.11245079097783067], ["pyshgp.push.state.PushState", 0.10505142271397742]], "task_id_map_index_list": [["str", 0.7061246577546622], ["int", 0.19737086918032376], ["bool", 0.096504473065014]], "task_ids": [["str", 0.8998361583014252], ["int", 0.10016384169857476]], "tis_altered": [["str", 0.08770286720252479], ["zerver.models.Realm", 0.08044660775070937]]}}, {"docstring": {"func": "Get *all* tasks of the sub dags.", "long_descr": null, "ret": null}, "fn_lc": [[170, 0], [182, 22]], "fn_var_ln": {"qry_sub_dag": [[177, 4], [177, 15]]}, "fn_var_occur": {"qry_sub_dag": [["qry_sub_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "in_", "sub_dag_run_ids", "TaskInstance", "execution_date", "in_", "confirmed_dates", "where", "or_", "TaskInstance", "state", "is_", "None", "TaskInstance", "state", "state"]]}, "name": "all_subdag_tasks_query", "params": {"confirmed_dates": "typing.Iterable[datetime.datetime]", "session": "sqlalchemy.orm.Session", "state": "airflow.utils.state.TaskInstanceState", "sub_dag_run_ids": "builtins.list[builtins.str]"}, "params_descr": {"confirmed_dates": "", "session": "", "state": "", "sub_dag_run_ids": ""}, "params_occur": {"confirmed_dates": [["qry_sub_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "in_", "sub_dag_run_ids", "TaskInstance", "execution_date", "in_", "confirmed_dates", "where", "or_", "TaskInstance", "state", "is_", "None", "TaskInstance", "state", "state"]], "session": [], "state": [["qry_sub_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "in_", "sub_dag_run_ids", "TaskInstance", "execution_date", "in_", "confirmed_dates", "where", "or_", "TaskInstance", "state", "is_", "None", "TaskInstance", "state", "state"]], "sub_dag_run_ids": [["qry_sub_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "in_", "sub_dag_run_ids", "TaskInstance", "execution_date", "in_", "confirmed_dates", "where", "or_", "TaskInstance", "state", "is_", "None", "TaskInstance", "state", "state"]]}, "params_p": {"args": [], "confirmed_dates": [["str", 0.33639529128591916], ["memoryview", 0.09417257103763217], ["raiden.utils.Address", 0.09221443019536654]], "kwargs": [], "session": [["str", 0.3097185923963038], ["List[int]", 0.19150882071275047], ["bool", 0.18281047305355438], ["int", 0.133151640783837]], "state": [["str", 0.33639529128591916], ["memoryview", 0.09417257103763217], ["raiden.utils.Address", 0.09221443019536654]], "sub_dag_run_ids": [["str", 0.33639529128591916], ["memoryview", 0.09417257103763217], ["raiden.utils.Address", 0.09221443019536654]]}, "q_name": "all_subdag_tasks_query", "ret_exprs": ["return qry_sub_dag"], "ret_type": "", "ret_type_p": [["str", 0.16681577968576564], ["bool", 0.1661127854787458], ["List[Dict]", 0.12739676018573443], ["Mapping[str, Any]", 0.08668556837558868], ["Callable", 0.07689317498094336], ["Callable[[None, None], bool]", 0.07689317498094336]], "variables": {"qry_sub_dag": ""}, "variables_p": {"qry_sub_dag": [["str", 0.3419665895534289], ["zerver.models.Realm", 0.0967161748827803]]}}, {"docstring": {"func": "Get all tasks of the main dag that will be affected by a state change.", "long_descr": null, "ret": null}, "fn_lc": [[185, 0], [202, 18]], "fn_var_ln": {"qry_dag": [[199, 4], [199, 11]]}, "fn_var_occur": {"qry_dag": [["qry_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "in_", "run_ids", "TaskInstance", "ti_selector_condition", "task_ids"], ["qry_dag", "qry_dag", "where", "or_", "TaskInstance", "state", "is_", "None", "TaskInstance", "state", "state", "options", "lazyload", "TaskInstance", "dag_run"]]}, "name": "get_all_dag_task_query", "params": {"dag": "airflow.models.dag.DAG", "run_ids": "typing.Iterable[builtins.str]", "session": "sqlalchemy.orm.Session", "state": "airflow.utils.state.TaskInstanceState", "task_ids": "builtins.list[str | tuple[str, int]]"}, "params_descr": {"dag": "", "run_ids": "", "session": "", "state": "", "task_ids": ""}, "params_occur": {"dag": [["qry_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "in_", "run_ids", "TaskInstance", "ti_selector_condition", "task_ids"]], "run_ids": [["qry_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "in_", "run_ids", "TaskInstance", "ti_selector_condition", "task_ids"]], "session": [], "state": [["qry_dag", "qry_dag", "where", "or_", "TaskInstance", "state", "is_", "None", "TaskInstance", "state", "state", "options", "lazyload", "TaskInstance", "dag_run"]], "task_ids": [["qry_dag", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "in_", "run_ids", "TaskInstance", "ti_selector_condition", "task_ids"]]}, "params_p": {"args": [], "dag": [["str", 0.37852898220133707], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09795313245536698], ["zerver.models.UserProfile", 0.09496271093869249], ["clients.models.Client", 0.09311541029795216]], "kwargs": [], "run_ids": [["str", 0.37852898220133707], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09795313245536698], ["zerver.models.UserProfile", 0.09496271093869249], ["clients.models.Client", 0.09311541029795216]], "session": [["str", 0.4748893739832143], ["Optional[bool]", 0.12037018025108856], ["Optional[int]", 0.12037018025108856], ["Optional[float]", 0.12037018025108856]], "state": [["str", 0.6060292236481224], ["int", 0.2978156182458489]], "task_ids": [["str", 0.37852898220133707], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09795313245536698], ["zerver.models.UserProfile", 0.09496271093869249], ["clients.models.Client", 0.09311541029795216]]}, "q_name": "get_all_dag_task_query", "ret_exprs": ["return qry_dag"], "ret_type": "", "ret_type_p": [["bool", 0.2893983152647003], ["Mapping[str, Any]", 0.10082938173251979], ["Dict[str, Any]", 0.08944063417562989], ["List[Dict]", 0.08682584231645844], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.07580106725731513]], "variables": {"qry_dag": ""}, "variables_p": {"qry_dag": [["owlmixin.TList[jumeaux.models.Request]", 0.10126985560250117], ["zerver.models.Realm", 0.0977906158463088]]}}, {"docstring": {"func": "Go through subdag operators and create dag runs.", "long_descr": "We only work within the scope of the subdag. A subdag does not propagate to\nits parent DAG, but parent propagates to subdags.", "ret": null}, "fn_lc": [[205, 0], [242, 48]], "fn_var_ln": {"current_dag": [[220, 8], [220, 19]], "current_task": [[225, 12], [225, 24]], "dag_runs": [[232, 16], [232, 24]], "dags": [[218, 4], [218, 8]]}, "fn_var_occur": {"current_dag": [["current_dag", "dags", "pop"], ["current_dag", "has_task", "task_id"], ["current_task", "current_dag", "get_task", "task_id"]], "current_task": [["current_task", "current_dag", "get_task", "task_id"], ["isinstance", "current_task", "SubDagOperator", "current_task", "task_type"], ["current_task", "subdag"], ["dag_runs", "_create_dagruns", "current_task", "subdag", "infos", "confirmed_infos", "state", "DagRunState", "RUNNING", "run_type", "DagRunType", "BACKFILL_JOB"], ["verify_dagruns", "dag_runs", "commit", "state", "session", "current_task"], ["dags", "append", "current_task", "subdag"], ["current_task", "subdag", "dag_id"]], "dag_runs": [["dag_runs", "_create_dagruns", "current_task", "subdag", "infos", "confirmed_infos", "state", "DagRunState", "RUNNING", "run_type", "DagRunType", "BACKFILL_JOB"], ["verify_dagruns", "dag_runs", "commit", "state", "session", "current_task"]], "dags": [["dags", "dag"], ["current_dag", "dags", "pop"], ["dags", "append", "current_task", "subdag"]]}, "name": "_iter_subdag_run_ids", "params": {"commit": "builtins.bool", "confirmed_infos": "typing.Iterable[_DagRunInfo]", "dag": "airflow.models.dag.DAG", "session": "sqlalchemy.orm.Session", "state": "airflow.utils.state.DagRunState", "task_ids": "builtins.list[builtins.str]"}, "params_descr": {"commit": "", "confirmed_infos": "", "dag": "", "session": "", "state": "", "task_ids": ""}, "params_occur": {"commit": [["verify_dagruns", "dag_runs", "commit", "state", "session", "current_task"]], "confirmed_infos": [["dag_runs", "_create_dagruns", "current_task", "subdag", "infos", "confirmed_infos", "state", "DagRunState", "RUNNING", "run_type", "DagRunType", "BACKFILL_JOB"]], "dag": [["dags", "dag"]], "session": [["verify_dagruns", "dag_runs", "commit", "state", "session", "current_task"]], "state": [["dag_runs", "_create_dagruns", "current_task", "subdag", "infos", "confirmed_infos", "state", "DagRunState", "RUNNING", "run_type", "DagRunType", "BACKFILL_JOB"], ["verify_dagruns", "dag_runs", "commit", "state", "session", "current_task"]], "task_ids": []}, "params_p": {"args": [], "commit": [["Optional[bool]", 0.30707899374011155], ["Optional[str]", 0.30126138728366936], ["str", 0.10012604933948491], ["bool", 0.0960686797737469]], "confirmed_infos": [["str", 0.6787516589963629], ["Optional[str]", 0.1558575467260098]], "dag": [["str", 0.5964211812598357], ["id3c.db.session.DatabaseSession", 0.12600853501029444], ["Dict[str, str]", 0.11751904493187126], ["dict", 0.08104610260797018]], "kwargs": [], "session": [["Optional[bool]", 0.30707899374011155], ["Optional[str]", 0.30126138728366936], ["str", 0.10012604933948491], ["bool", 0.0960686797737469]], "state": [["str", 0.6787516589963629], ["Optional[str]", 0.1558575467260098]], "task_ids": [["models.EntityId", 0.431312917336853], ["models.Tag", 0.21565645866842648], ["List[Dict[str, Any]]", 0.15975982121480362], ["models.PermissionLookup", 0.10274615032101655], ["str", 0.09052465245890023]]}, "q_name": "_iter_subdag_run_ids", "ret_exprs": [], "ret_type": "typing.Iterator[builtins.str]", "variables": {"current_dag": "", "current_task": "", "dag_runs": "", "dags": ""}, "variables_p": {"current_dag": [["Dict[str, Any]", 0.12961229711681643], ["str", 0.10453675787063695]], "current_task": [["kippo.tasks.models.KippoTask", 0.21131481113574346], ["Dict[str, Union[Any, bool, str]]", 0.19336703459308954], ["str", 0.10538236666794011], ["taskiapplication.models.task.Task", 0.10454971508601912]], "dag_runs": [["str", 0.775595732886028], ["List[int]", 0.13777505504995477], ["Optional[Dict[str, Any]]", 0.08662921206401705]], "dags": [["str", 0.3696616145389723], ["int", 0.11933633034322999], ["viewer.models.Gallery", 0.09297914678069942]]}}, {"docstring": {"func": "Verify integrity of dag_runs.", "long_descr": null, "ret": null}, "fn_lc": [[245, 0], [265, 34]], "fn_var_ln": {"dag": [[261, 8], [261, 19]], "state": [[264, 12], [264, 25]]}, "fn_var_occur": {"dag": [["dag_run", "dag", "current_task", "subdag"]], "state": [["dag_run", "state", "state"]]}, "name": "verify_dagruns", "params": {"commit": "builtins.bool", "current_task": "airflow.models.operator.Operator", "dag_runs": "typing.Iterable[airflow.models.dagrun.DagRun]", "session": "sqlalchemy.orm.Session", "state": "airflow.utils.state.DagRunState"}, "params_descr": {"commit": "whether dag runs state should be updated", "current_task": "current task", "dag_runs": "dag runs to verify", "session": "session to use", "state": "state of the dag_run to set if commit is True"}, "params_occur": {"commit": [], "current_task": [["dag_run", "dag", "current_task", "subdag"]], "dag_runs": [], "session": [["session", "merge", "dag_run"]], "state": [["dag_run", "state", "state"]]}, "params_p": {"args": [], "commit": [["dict", 0.30192545971842405], ["str", 0.0940043559710547]], "current_task": [["str", 0.25304908539977056], ["homeassistancore.State", 0.08847378452051087], ["Dict[str, Any]", 0.08559173135837202], ["Callable", 0.07417833622070233]], "dag_runs": [["dict", 0.30192545971842405], ["str", 0.0940043559710547]], "kwargs": [], "session": [["str", 0.3122092090093477], ["Dict[str, Any]", 0.1844626526772548], ["Tuple[List, List, List]", 0.10515519518643046], ["Optional[int]", 0.09764323767094925], ["dict", 0.08975177395418278]], "state": [["str", 0.3122092090093477], ["Dict[str, Any]", 0.1844626526772548], ["Tuple[List, List, List]", 0.10515519518643046], ["Optional[int]", 0.09764323767094925], ["dict", 0.08975177395418278]]}, "q_name": "verify_dagruns", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "state": ""}, "variables_p": {"dag": [["str", 0.2691687369279712], ["int", 0.2209173284686174], ["List[Dict[str, str]]", 0.10950839366681006], ["bool", 0.1004657952276726]], "state": [["str", 0.7999999999999999], ["Dict[str, str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[268, 0], [272, 83]], "fn_var_ln": {"dag": [[270, 8], [270, 19]]}, "fn_var_occur": {"dag": [["DagRun", "find", "dag_id", "dag", "dag_id", "run_id", "run_ids", "session", "session"], ["dag_run", "dag", "dag"], ["_DagRunInfo", "dag_run", "logical_date", "dag", "get_run_data_interval", "dag_run"]]}, "name": "_iter_existing_dag_run_infos", "params": {"dag": "airflow.models.dag.DAG", "run_ids": "builtins.list[builtins.str]", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag": "", "run_ids": "", "session": ""}, "params_occur": {"dag": [["DagRun", "find", "dag_id", "dag", "dag_id", "run_id", "run_ids", "session", "session"], ["dag_run", "dag", "dag"], ["_DagRunInfo", "dag_run", "logical_date", "dag", "get_run_data_interval", "dag_run"]], "run_ids": [["DagRun", "find", "dag_id", "dag", "dag_id", "run_id", "run_ids", "session", "session"]], "session": [["DagRun", "find", "dag_id", "dag", "dag_id", "run_id", "run_ids", "session", "session"], ["dag_run", "verify_integrity", "session", "session"]]}, "params_p": {"args": [], "dag": [["Union['KspNativeControl', int]", 0.20604702080795706], ["corporate.models.CustomerPlan", 0.1192764189138884], ["int", 0.11143623778405454], ["str", 0.08758973955508816], ["raiden.transfer.state.NettingChannelState", 0.08426282665339348]], "kwargs": [], "run_ids": [["int", 0.33308594587155366], ["Union['KspNativeControl', int]", 0.18262500965252995], ["str", 0.11880533766585824], ["ocspdash.models.Responder", 0.08968172893790952]], "session": [["Union['KspNativeControl', int]", 0.22032802016316566], ["int", 0.18177155535440415], ["sqlalchemy.orm.Session", 0.09240891446379253], ["List[int]", 0.09203357481808963], ["str", 0.08743234457940348]]}, "q_name": "_iter_existing_dag_run_infos", "ret_exprs": [], "ret_type": "typing.Iterator[_DagRunInfo]", "variables": {"dag": ""}, "variables_p": {"dag": [["Dict[str, str]", 0.11423290784545469], ["list", 0.08723903095610012], ["int", 0.0834892777508393]]}}, {"docstring": {"func": "Yield task ids and optionally ancestor and descendant ids.", "long_descr": null, "ret": null}, "fn_lc": [[275, 0], [289, 38]], "fn_var_ln": {"map_index": [[279, 18], [279, 27]], "task": [[282, 12], [282, 16]]}, "fn_var_occur": {"map_index": [["task", "map_index", "item"], ["task", "task_id", "map_index"]], "task": [["task", "map_index", "item"], ["task", "task_id", "map_index"], ["task", "item"], ["task", "task_id"], ["task", "get_flat_relatives", "upstream", "False"], ["task", "get_flat_relatives", "upstream", "True"]]}, "name": "find_task_relatives", "params": {"downstream": "", "tasks": "", "upstream": ""}, "params_descr": {"downstream": "", "tasks": "", "upstream": ""}, "params_occur": {"downstream": [], "tasks": [], "upstream": [["task", "get_flat_relatives", "upstream", "False"], ["task", "get_flat_relatives", "upstream", "True"]]}, "params_p": {"args": [], "downstream": [["taskiapplication.models.task.Task", 0.3034924847136606], ["Callable", 0.1946101098266995], ["Dict[str, Any]", 0.15997530409211008], ["dict", 0.13771306590424304], ["bool", 0.10633023817923039]], "kwargs": [], "tasks": [["taskiapplication.models.task.Task", 0.3034924847136606], ["Callable", 0.1946101098266995], ["Dict[str, Any]", 0.15997530409211008], ["dict", 0.13771306590424304], ["bool", 0.10633023817923039]], "upstream": []}, "q_name": "find_task_relatives", "ret_exprs": [], "ret_type": "", "variables": {"map_index": "", "task": ""}, "variables_p": {"map_index": [["str", 0.35041382161807155], ["int", 0.27595246702358583], ["Type[List[Any]]", 0.09679756081252516], ["Dict[str, Any]", 0.08640052160703891]], "task": [["List[str]", 0.13178650223045177], ["str", 0.12776853045559816], ["list", 0.08010199905720342], ["int", 0.07875207233240536]]}}, {"docstring": {"func": "Return DAG execution dates.", "long_descr": null, "ret": null}, "fn_lc": [[293, 0], [319, 16]], "fn_var_ln": {"dag_runs": [[311, 8], [311, 16]], "dates": [[316, 8], [316, 13]], "end_date": [[302, 4], [302, 12]], "execution_date": [[300, 4], [300, 18]], "latest_execution_date": [[297, 4], [297, 25]], "start_date": [[307, 4], [307, 14]]}, "fn_var_occur": {"dag_runs": [["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date"], ["dates", "sorted", "d", "execution_date", "d", "dag_runs"]], "dates": [["dates", "sorted", "d", "execution_date", "d", "dag_runs"], ["dates", "start_date"], ["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"]], "end_date": [["end_date", "latest_execution_date", "future", "execution_date"], ["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date"], ["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"]], "execution_date": [["ValueError", "execution_date"], ["execution_date", "timezone", "coerce_datetime", "execution_date"], ["end_date", "latest_execution_date", "future", "execution_date"], ["start_date", "execution_date"], ["start_date", "execution_date", "past", "start_date"], ["dates", "sorted", "d", "execution_date", "d", "dag_runs"]], "latest_execution_date": [["latest_execution_date", "dag", "get_latest_execution_date", "session", "session"], ["latest_execution_date", "None"], ["end_date", "latest_execution_date", "future", "execution_date"]], "start_date": [["dag", "start_date"], ["start_date", "dag", "start_date"], ["start_date", "execution_date"], ["start_date", "execution_date", "past", "start_date"], ["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date"], ["dates", "start_date"], ["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"]]}, "name": "get_execution_dates", "params": {"dag": "airflow.models.dag.DAG", "execution_date": "datetime.datetime", "future": "builtins.bool", "past": "builtins.bool", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag": "", "execution_date": "", "future": "", "past": "", "session": ""}, "params_occur": {"dag": [["latest_execution_date", "dag", "get_latest_execution_date", "session", "session"], ["dag", "start_date"], ["start_date", "dag", "start_date"], ["dag", "timetable", "can_be_scheduled"], ["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date"], ["dag", "timetable", "periodic"], ["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"]], "execution_date": [["ValueError", "execution_date"], ["execution_date", "timezone", "coerce_datetime", "execution_date"], ["end_date", "latest_execution_date", "future", "execution_date"], ["start_date", "execution_date"], ["start_date", "execution_date", "past", "start_date"], ["dates", "sorted", "d", "execution_date", "d", "dag_runs"]], "future": [["end_date", "latest_execution_date", "future", "execution_date"]], "past": [["start_date", "execution_date", "past", "start_date"]], "session": [["latest_execution_date", "dag", "get_latest_execution_date", "session", "session"]]}, "params_p": {"args": [], "dag": [["str", 0.3794179548975205], ["Union[int, str, datetime.datetime]", 0.11351683265442433], ["int", 0.10875011593887332], ["datetime.date", 0.10155927863939798], ["list", 0.09152216135684395]], "execution_date": [["str", 0.28738141288968316], ["datetime.date", 0.19264080384955917], ["datetime.datetime", 0.10330887887128368], ["int", 0.10293579234130855], ["datetime", 0.09352705036969317]], "future": [["datetime.date", 0.3960969833410348], ["str", 0.34920701778165336], ["Optional[str]", 0.16979733258487442], ["Optional[datetime.date]", 0.08489866629243721]], "kwargs": [], "past": [["datetime.date", 0.3641810982101385], ["datetime.datetime", 0.19768688786479144], ["str", 0.12232607602606392], ["bool", 0.1218818672084739], ["Optional[str]", 0.11265352553176261], ["int", 0.08127054515876965]], "session": [["str", 0.6225216629484991], ["Optional[str]", 0.161966458627373], ["datetime.date", 0.11955270447391983], ["list", 0.09595917395020798]]}, "q_name": "get_execution_dates", "ret_exprs": ["return dates"], "ret_type": "builtins.list[datetime.datetime]", "ret_type_p": [["datetime.date", 0.18288798750777083], ["recidiviz.calculator.pipeline.utils.incarceration_period_index.IncarcerationPeriodIndex", 0.12814578877825344], ["str", 0.12753543545702792], ["int", 0.12212946550082382], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.09020833118993954], ["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.09020833118993954], ["Optional[datetime.date]", 0.08757908161532207], ["datetime.datetime", 0.08508821037188918]], "variables": {"dag_runs": "", "dates": "", "end_date": "", "execution_date": "", "latest_execution_date": "", "start_date": ""}, "variables_p": {"dag_runs": [["int", 0.3056679027542928], ["str", 0.1800221410361587], ["backend.api.models.group.Group", 0.1159670465697966], ["datetime.datetime.datetime", 0.11258202859375666], ["list", 0.10223579096498012], ["float", 0.09628227677241163], ["TextIO", 0.08724281330860341]], "dates": [["datetime.datetime", 0.49450421640700426], ["datetime.date", 0.30633784216685284], ["datetime.date.time.date", 0.10515527827857711], ["datetime.datetime.datetime", 0.09400266314756578]], "end_date": [["datetime.datetime", 0.39201423849111017], ["datetime.date", 0.19224510097030717], ["Optional[datetime.date]", 0.17604655067062275], ["str", 0.13780998800269342]], "execution_date": [["datetime.datetime", 0.22020352141926297], ["str", 0.20654072535240817], ["int", 0.18853108901314364], ["Type[prm.journals.models.moods.Mood]", 0.10100286858952569], ["datetime.date", 0.09132618430817793]], "latest_execution_date": [["str", 0.4994936233452902], ["Type[prm.journals.models.moods.Mood]", 0.11064606097882], ["datetime.timedelta", 0.10786846341947445], ["datetime.datetime", 0.09665752584239437], ["datetime.date", 0.09420909110896354], ["datetime.datetime.date", 0.09112523530505733]], "start_date": [["datetime.timedelta", 0.38625972497943756], ["datetime.date", 0.2025912681360072], ["datetime.datetime", 0.2021305832877243], ["datetime.timezone", 0.10595152495829459], ["Type[leasing.models.vaVat]", 0.10306689863853641]]}}, {"docstring": {"func": "Return DAG executions' run_ids.", "long_descr": null, "ret": null}, "fn_lc": [[323, 0], [349, 18]], "fn_var_ln": {"current_dagrun": [[326, 4], [326, 18]], "dag_runs": [[340, 8], [340, 16]], "dates": [[345, 8], [345, 13]], "end_date": [[335, 4], [335, 12]], "first_dagrun": [[327, 4], [327, 16]], "last_dagrun": [[325, 4], [325, 15]], "run_ids": [[348, 8], [348, 15]], "start_date": [[336, 4], [336, 14]]}, "fn_var_occur": {"current_dagrun": [["current_dagrun", "dag", "get_dagrun", "run_id", "run_id", "session", "session"], ["end_date", "last_dagrun", "logical_date", "future", "current_dagrun", "logical_date"], ["start_date", "current_dagrun", "logical_date", "past", "first_dagrun", "logical_date"]], "dag_runs": [["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date", "session", "session"], ["run_ids", "sorted", "d", "run_id", "d", "dag_runs"]], "dates": [["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"], ["run_ids", "dr", "run_id", "dr", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "dates", "session", "session"]], "end_date": [["end_date", "last_dagrun", "logical_date", "future", "current_dagrun", "logical_date"], ["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date", "session", "session"], ["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"]], "first_dagrun": [["first_dagrun", "session", "scalar", "select", "DagRun", "filter", "DagRun", "dag_id", "dag", "dag_id", "order_by", "DagRun", "execution_date", "asc", "limit"], ["start_date", "current_dagrun", "logical_date", "past", "first_dagrun", "logical_date"]], "last_dagrun": [["last_dagrun", "dag", "get_last_dagrun", "include_externally_triggered", "True", "session", "session"], ["last_dagrun", "None"], ["end_date", "last_dagrun", "logical_date", "future", "current_dagrun", "logical_date"]], "run_ids": [["run_ids", "sorted", "d", "run_id", "d", "dag_runs"], ["run_ids", "run_id"], ["run_ids", "dr", "run_id", "dr", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "dates", "session", "session"]], "start_date": [["start_date", "current_dagrun", "logical_date", "past", "first_dagrun", "logical_date"], ["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date", "session", "session"], ["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"]]}, "name": "get_run_ids", "params": {"dag": "airflow.models.dag.DAG", "future": "builtins.bool", "past": "builtins.bool", "run_id": "builtins.str", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag": "", "future": "", "past": "", "run_id": "", "session": ""}, "params_occur": {"dag": [["last_dagrun", "dag", "get_last_dagrun", "include_externally_triggered", "True", "session", "session"], ["current_dagrun", "dag", "get_dagrun", "run_id", "run_id", "session", "session"], ["first_dagrun", "session", "scalar", "select", "DagRun", "filter", "DagRun", "dag_id", "dag", "dag_id", "order_by", "DagRun", "execution_date", "asc", "limit"], ["ValueError", "dag", "dag_id"], ["dag", "timetable", "can_be_scheduled"], ["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date", "session", "session"], ["dag", "timetable", "periodic"], ["dates", "info", "logical_date", "info", "dag", "iter_dagrun_infos_between", "start_date", "end_date", "align", "False"], ["run_ids", "dr", "run_id", "dr", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "dates", "session", "session"]], "future": [["end_date", "last_dagrun", "logical_date", "future", "current_dagrun", "logical_date"]], "past": [["start_date", "current_dagrun", "logical_date", "past", "first_dagrun", "logical_date"]], "run_id": [["current_dagrun", "dag", "get_dagrun", "run_id", "run_id", "session", "session"], ["run_ids", "sorted", "d", "run_id", "d", "dag_runs"], ["run_ids", "run_id"], ["run_ids", "dr", "run_id", "dr", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "dates", "session", "session"]], "session": [["last_dagrun", "dag", "get_last_dagrun", "include_externally_triggered", "True", "session", "session"], ["current_dagrun", "dag", "get_dagrun", "run_id", "run_id", "session", "session"], ["first_dagrun", "session", "scalar", "select", "DagRun", "filter", "DagRun", "dag_id", "dag", "dag_id", "order_by", "DagRun", "execution_date", "asc", "limit"], ["dag_runs", "dag", "get_dagruns_between", "start_date", "start_date", "end_date", "end_date", "session", "session"], ["run_ids", "dr", "run_id", "dr", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "dates", "session", "session"]]}, "params_p": {"args": [], "dag": [["str", 0.22507380872097937], ["int", 0.19574587729577347], ["bool", 0.19554100853564427], ["zerver.models.UserProfile", 0.09697789404942025], ["Union[str, int]", 0.09436708953092174], ["Optional[List[str]]", 0.09349377157404493]], "future": [["int", 0.5413979119834146], ["str", 0.2734255740784945], ["Optional[int]", 0.09550247116442152], ["float", 0.08967404277366946]], "kwargs": [], "past": [["int", 0.5161017070180045], ["str", 0.20028815216408394], ["float", 0.19670102623090385]], "run_id": [["str", 0.5007224032438564], ["sqlalchemy.orm.Session", 0.20579649033061082], ["int", 0.0894449663183371]], "session": [["str", 0.22507380872097937], ["int", 0.19574587729577347], ["bool", 0.19554100853564427], ["zerver.models.UserProfile", 0.09697789404942025], ["Union[str, int]", 0.09436708953092174], ["Optional[List[str]]", 0.09349377157404493]]}, "q_name": "get_run_ids", "ret_exprs": ["return run_ids"], "ret_type": "", "ret_type_p": [["str", 0.9115885703977418], ["Union[Literal, Literal]", 0.0884114296022585]], "variables": {"current_dagrun": "", "dag_runs": "", "dates": "", "end_date": "", "first_dagrun": "", "last_dagrun": "", "run_ids": "", "start_date": ""}, "variables_p": {"current_dagrun": [["grpy.core.models.Grouping", 0.39800110966660485], ["float", 0.11271391684654747], ["dict", 0.09888428509754751], ["byceps.services.user.transfer.models.User", 0.0902807701415088]], "dag_runs": [["str", 0.12475151273167416], ["TextIO", 0.11328766461547692], ["float", 0.09915287045908805], ["list", 0.09881936085913869], ["int", 0.09569015256598269], ["List[Pattern]", 0.0948268302297755]], "dates": [["str", 0.31545490120484465], ["datetime.datetime", 0.2001441375590292], ["datetime.datetime.date", 0.1898059440514853], ["Pattern[str]", 0.1086747359327437], ["datetime.timedelta", 0.09437782779204486], ["datetime.date", 0.09154245345985224]], "end_date": [["datetime.datetime", 0.2713589563633877], ["str", 0.23372019989491774], ["datetime.date", 0.2205714582397151], ["Pattern[str]", 0.0924602347332044], ["list", 0.08911565601945584]], "first_dagrun": [["int", 0.3090610820223198], ["notifications.models.Notification", 0.12189007648789008], ["Union[Literal, int]", 0.11918333833417605], ["List[int]", 0.1034828690613592], ["Optional[passzero.models.documents.EncryptedDocument]", 0.09096873419521932], ["set", 0.0885594739528584], ["List[str]", 0.0811876997393068]], "last_dagrun": [["str", 0.2979024391794151], ["datetime.date.time.timedelta", 0.20173018732022763], ["Dict[str, Any]", 0.19135545031430648], ["datetime.date.time.date", 0.1180455665214615]], "run_ids": [["int", 0.4017915699210662], ["str", 0.2249423401147017], ["List[int]", 0.11267106407999984], ["list", 0.09339037403730575], ["Optional[int]", 0.08282287164445105]], "start_date": [["datetime.datetime", 0.2048707400637766], ["datetime.date", 0.10817669145827577], ["Type[leasing.models.vaVat]", 0.10151914383475633], ["Dict[Any, List[str]]", 0.09532548600254649], ["datetime.datetime.datetime", 0.0869429423388575]]}}, {"docstring": {"func": "Set dag run state in the DB.", "long_descr": null, "ret": null}, "fn_lc": [[352, 0], [370, 26]], "fn_var_ln": {"dag_run": [[361, 4], [361, 11]], "end_date": [[369, 8], [369, 24]], "start_date": [[366, 8], [366, 26]], "state": [[364, 4], [364, 17]]}, "fn_var_occur": {"dag_run": [["dag_run", "session", "execute", "select", "DagRun", "where", "DagRun", "dag_id", "dag_id", "DagRun", "run_id", "run_id", "scalar_one"], ["dag_run", "state", "state"], ["dag_run", "start_date", "timezone", "utcnow"], ["dag_run", "end_date", "None"], ["dag_run", "end_date", "timezone", "utcnow"], ["session", "merge", "dag_run"]], "end_date": [["dag_run", "end_date", "None"], ["dag_run", "end_date", "timezone", "utcnow"]], "start_date": [["dag_run", "start_date", "timezone", "utcnow"]], "state": [["dag_run", "state", "state"], ["state", "State", "RUNNING"]]}, "name": "_set_dag_run_state", "params": {"dag_id": "builtins.str", "run_id": "builtins.str", "session": "sqlalchemy.orm.Session", "state": "airflow.utils.state.DagRunState"}, "params_descr": {"dag_id": "dag_id of target dag run", "run_id": "run id of target dag run", "session": "database session", "state": "target state"}, "params_occur": {"dag_id": [["dag_run", "session", "execute", "select", "DagRun", "where", "DagRun", "dag_id", "dag_id", "DagRun", "run_id", "run_id", "scalar_one"]], "run_id": [["dag_run", "session", "execute", "select", "DagRun", "where", "DagRun", "dag_id", "dag_id", "DagRun", "run_id", "run_id", "scalar_one"]], "session": [["dag_run", "session", "execute", "select", "DagRun", "where", "DagRun", "dag_id", "dag_id", "DagRun", "run_id", "run_id", "scalar_one"], ["session", "merge", "dag_run"]], "state": [["dag_run", "state", "state"], ["state", "State", "RUNNING"]]}, "params_p": {"args": [], "dag_id": [["str", 0.38205150106003405], ["Dict[int, Dict[str, float]]", 0.0988980981244199], ["int", 0.09870846980253321], ["dict", 0.09870846980253321], ["bytes", 0.09683655278761653], ["Optional[str]", 0.09471535233879928]], "kwargs": [], "run_id": [["str", 0.38205150106003405], ["Dict[int, Dict[str, float]]", 0.0988980981244199], ["int", 0.09870846980253321], ["dict", 0.09870846980253321], ["bytes", 0.09683655278761653], ["Optional[str]", 0.09471535233879928]], "session": [["str", 0.38205150106003405], ["Dict[int, Dict[str, float]]", 0.0988980981244199], ["int", 0.09870846980253321], ["dict", 0.09870846980253321], ["bytes", 0.09683655278761653], ["Optional[str]", 0.09471535233879928]], "state": [["str", 0.47369122378755696], ["List[int]", 0.17680919809754347], ["bytes", 0.09273475842083183], ["int", 0.08731488604128591], ["Tuple[float, float]", 0.08515595729970575], ["float", 0.08429397635307596]]}, "q_name": "_set_dag_run_state", "ret_exprs": [], "ret_type": "", "variables": {"dag_run": "", "end_date": "", "start_date": "", "state": ""}, "variables_p": {"dag_run": [["int", 0.6916129367015716], ["datetime.datetime", 0.10177079916532861], ["str", 0.09862191070178962]], "end_date": [["datetime.datetime", 0.2508661502146275], ["datetime.datetime.datetime", 0.19541698785970754], ["Pattern[str]", 0.17389881020513887], ["str", 0.09944035588201514], ["int", 0.07491836499115485], ["datetime.date", 0.06910720643591332], ["Dict[Any, List[str]]", 0.06886485046885309]], "start_date": [["datetime.datetime", 0.4193931427637714], ["datetime.date", 0.2882000891282121], ["float", 0.10936479160373115], ["datetime.datetime.datetime", 0.09493475670807126], ["int", 0.08810721979621403]], "state": [["str", 0.7999999999999999], ["Dict[str, str]", 0.1]]}}, {"docstring": {"func": "Set the dag run's state to success.", "long_descr": "Set for a specific execution date and its task instances to success.", "ret": "If commit is true, list of tasks that have been updated,\notherwise list of tasks that will be updated"}, "fn_lc": [[374, 0], [418, 105]], "fn_var_ln": {"dag": [[417, 8], [417, 16]], "dag_run": [[405, 8], [405, 15]], "run_id": [[408, 8], [408, 14]]}, "fn_var_occur": {"dag": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "SUCCESS", "session"], ["dag", "tasks"], ["task", "dag", "dag"], ["set_state", "tasks", "dag", "tasks", "run_id", "run_id", "state", "State", "SUCCESS", "commit", "commit", "session", "session"]], "dag_run": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["run_id", "dag_run", "run_id"]], "run_id": [["exactly_one", "execution_date", "run_id"], ["run_id", "dag_run", "run_id"], ["ValueError", "run_id"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "SUCCESS", "session"], ["set_state", "tasks", "dag", "tasks", "run_id", "run_id", "state", "State", "SUCCESS", "commit", "commit", "session", "session"]]}, "name": "set_dag_run_state_to_success", "params": {"commit": "builtins.bool", "dag": "airflow.models.dag.DAG", "execution_date": "datetime | None", "run_id": "str | None", "session": "sqlalchemy.orm.Session"}, "params_descr": {"commit": "commit DAG and tasks to be altered to the database", "dag": "the DAG of which to alter state", "execution_date": "the execution date from which to start looking(deprecated)", "run_id": "the run_id to start looking from", "session": "database session"}, "params_occur": {"commit": [["set_state", "tasks", "dag", "tasks", "run_id", "run_id", "state", "State", "SUCCESS", "commit", "commit", "session", "session"]], "dag": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "SUCCESS", "session"], ["dag", "tasks"], ["task", "dag", "dag"], ["set_state", "tasks", "dag", "tasks", "run_id", "run_id", "state", "State", "SUCCESS", "commit", "commit", "session", "session"]], "execution_date": [["exactly_one", "execution_date", "run_id"], ["timezone", "is_localized", "execution_date"], ["ValueError", "execution_date"], ["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["ValueError", "execution_date"]], "run_id": [["exactly_one", "execution_date", "run_id"], ["run_id", "dag_run", "run_id"], ["ValueError", "run_id"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "SUCCESS", "session"], ["set_state", "tasks", "dag", "tasks", "run_id", "run_id", "state", "State", "SUCCESS", "commit", "commit", "session", "session"]], "session": [["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "SUCCESS", "session"], ["set_state", "tasks", "dag", "tasks", "run_id", "run_id", "state", "State", "SUCCESS", "commit", "commit", "session", "session"]]}, "params_p": {"args": [], "commit": [["str", 0.30337872900517326], ["Dict[str, Any]", 0.11209361667578854], ["cg_sqlalchemy_helpers.types.DbColumn[bool]", 0.0984004171236876], ["Optional[dict]", 0.09009919871518472]], "dag": [["datetime.datetime", 0.3813305592900349], ["str", 0.2670572171431366], ["datetime.date", 0.08593560730238367], ["recidiviz.persistence.entity.state.entities.SentenceType", 0.08423601976158263]], "execution_date": [["datetime.date", 0.10710770478001753], ["Set[str]", 0.10710770478001753], ["list", 0.09871160223000608], ["str", 0.09871160223000608], ["Dict[datetime.date, Dict[str, Any]]", 0.0963421370218944], ["Optional[datetime.date]", 0.08502316273035858]], "kwargs": [], "run_id": [["Optional[int]", 0.3021595332827279], ["str", 0.29856031114484805], ["Optional[str]", 0.10071984442757596], ["int", 0.09892023335863603]], "session": [["Optional[int]", 0.17199659459324657], ["Optional[annofabapi.models.InspectionStatus]", 0.10482280203736417], ["sqlalchemy.exdeclarative.DeclarativeMeta", 0.09520084079290037], ["sqlalchemy.orm.session.Session", 0.08813607394744571], ["List[Dict[str, Any]]", 0.08333387680773068], ["str", 0.081869252658651]]}, "q_name": "set_dag_run_state_to_success", "ret_exprs": ["return []", "return []", "return set_state(tasks=dag.tasks, run_id=run_id, state=State.SUCCESS, commit=commit, session=session)"], "ret_type": "builtins.list[airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["str", 0.31701123860154046], ["cmk.utils.type_defs.ServiceName", 0.10697769141672445], ["Optional[Dict[str, Any]]", 0.0960800876480097], ["lms.lmsdb.models.User", 0.09175564152201353], ["Optional[int]", 0.09175564152201353], ["Optional[str]", 0.09175564152201353]], "variables": {"dag": "", "dag_run": "", "run_id": ""}, "variables_p": {"dag": [["raiden.utils.SecretHash", 0.30328385730743057], ["list", 0.11351527221279856], ["raiden.utils.FeeAmount", 0.10624547888932089], ["raiden.utils.TargetAddress", 0.10624547888932089], ["Dict[str, Any]", 0.09880053705961991], ["ofxtools.models.signon.SONRS", 0.09415997165659841], ["buza.models.Subject", 0.08749377223811416]], "dag_run": [["int", 0.20705065702301034], ["Optional[magic.models.deck.Deck]", 0.1908138419279938], ["magic.models.card.Card", 0.11694045350173002], ["byceps.services.user.transfer.models.User", 0.09897963422900166]], "run_id": [["int", 0.6367908444265249], ["list", 0.10197635513193766], ["Pattern[Any]", 0.09449778786036571], ["Set[str]", 0.08444986459918649]]}}, {"docstring": {"func": "Set the dag run's state to failed.", "long_descr": "Set for a specific execution date and its task instances to failed.", "ret": "If commit is true, list of tasks that have been updated,\notherwise list of tasks that will be updated"}, "fn_lc": [[422, 0], [499, 106]], "fn_var_ln": {"dag": [[481, 8], [481, 16]], "dag_run": [[452, 8], [452, 15]], "run_id": [[455, 8], [455, 14]], "task_ids": [[465, 4], [465, 12]], "task_ids_of_running_tis": [[475, 4], [475, 27]], "tasks": [[477, 4], [477, 9]], "tis": [[494, 4], [494, 7]]}, "fn_var_occur": {"dag": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "FAILED", "session"], ["task_ids", "task", "task_id", "task", "dag", "tasks"], ["tis", "session", "scalars", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "task_id", "in_", "task_ids", "TaskInstance", "state", "in_", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["dag", "tasks"], ["task", "dag", "dag"], ["tis", "session", "scalars", "select", "TaskInstance", "filter", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "state", "not_in", "State", "finished", "TaskInstance", "state", "not_in", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"]], "dag_run": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["run_id", "dag_run", "run_id"]], "run_id": [["exactly_one", "execution_date", "run_id"], ["run_id", "dag_run", "run_id"], ["ValueError", "run_id"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "FAILED", "session"], ["tis", "session", "scalars", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "task_id", "in_", "task_ids", "TaskInstance", "state", "in_", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["tis", "session", "scalars", "select", "TaskInstance", "filter", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "state", "not_in", "State", "finished", "TaskInstance", "state", "not_in", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["tis", "set_state", "tasks", "tasks", "run_id", "run_id", "state", "State", "FAILED", "commit", "commit", "session", "session"]], "task_ids": [["task_ids", "task", "task_id", "task", "dag", "tasks"], ["tis", "session", "scalars", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "task_id", "in_", "task_ids", "TaskInstance", "state", "in_", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"]], "task_ids_of_running_tis": [["task_ids_of_running_tis", "task_instance", "task_id", "task_instance", "tis"], ["task", "task_id", "task_ids_of_running_tis"]], "tasks": [["task_ids", "task", "task_id", "task", "dag", "tasks"], ["dag", "tasks"], ["tasks", "append", "task"], ["tis", "set_state", "tasks", "tasks", "run_id", "run_id", "state", "State", "FAILED", "commit", "commit", "session", "session"]], "tis": [["tis", "session", "scalars", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "task_id", "in_", "task_ids", "TaskInstance", "state", "in_", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["task_ids_of_running_tis", "task_instance", "task_id", "task_instance", "tis"], ["tis", "session", "scalars", "select", "TaskInstance", "filter", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "state", "not_in", "State", "finished", "TaskInstance", "state", "not_in", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["tis", "ti", "ti", "tis"], ["tis", "set_state", "tasks", "tasks", "run_id", "run_id", "state", "State", "FAILED", "commit", "commit", "session", "session"]]}, "name": "set_dag_run_state_to_failed", "params": {"commit": "builtins.bool", "dag": "airflow.models.dag.DAG", "execution_date": "datetime | None", "run_id": "str | None", "session": "sqlalchemy.orm.Session"}, "params_descr": {"commit": "commit DAG and tasks to be altered to the database", "dag": "the DAG of which to alter state", "execution_date": "the execution date from which to start looking(deprecated)", "run_id": "the DAG run_id to start looking from", "session": "database session"}, "params_occur": {"commit": [["tis", "set_state", "tasks", "tasks", "run_id", "run_id", "state", "State", "FAILED", "commit", "commit", "session", "session"]], "dag": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "FAILED", "session"], ["task_ids", "task", "task_id", "task", "dag", "tasks"], ["tis", "session", "scalars", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "task_id", "in_", "task_ids", "TaskInstance", "state", "in_", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["dag", "tasks"], ["task", "dag", "dag"], ["tis", "session", "scalars", "select", "TaskInstance", "filter", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "state", "not_in", "State", "finished", "TaskInstance", "state", "not_in", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"]], "execution_date": [["exactly_one", "execution_date", "run_id"], ["timezone", "is_localized", "execution_date"], ["ValueError", "execution_date"], ["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["ValueError", "execution_date"]], "run_id": [["exactly_one", "execution_date", "run_id"], ["run_id", "dag_run", "run_id"], ["ValueError", "run_id"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "FAILED", "session"], ["tis", "session", "scalars", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "task_id", "in_", "task_ids", "TaskInstance", "state", "in_", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["tis", "session", "scalars", "select", "TaskInstance", "filter", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "state", "not_in", "State", "finished", "TaskInstance", "state", "not_in", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["tis", "set_state", "tasks", "tasks", "run_id", "run_id", "state", "State", "FAILED", "commit", "commit", "session", "session"]], "session": [["_set_dag_run_state", "dag", "dag_id", "run_id", "DagRunState", "FAILED", "session"], ["tis", "session", "scalars", "select", "TaskInstance", "where", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "task_id", "in_", "task_ids", "TaskInstance", "state", "in_", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["tis", "session", "scalars", "select", "TaskInstance", "filter", "TaskInstance", "dag_id", "dag", "dag_id", "TaskInstance", "run_id", "run_id", "TaskInstance", "state", "not_in", "State", "finished", "TaskInstance", "state", "not_in", "State", "RUNNING", "State", "DEFERRED", "State", "UP_FOR_RESCHEDULE"], ["tis", "set_state", "tasks", "tasks", "run_id", "run_id", "state", "State", "FAILED", "commit", "commit", "session", "session"]]}, "params_p": {"args": [], "commit": [["str", 0.6770174739921617], ["Dict[str, Any]", 0.1188453559554611], ["int", 0.11549799877406919]], "dag": [["datetime.datetime", 0.3813305592900349], ["str", 0.2670572171431366], ["datetime.date", 0.08593560730238367], ["recidiviz.persistence.entity.state.entities.SentenceType", 0.08423601976158263]], "execution_date": [["datetime.date", 0.10710770478001753], ["Set[str]", 0.10710770478001753], ["list", 0.09871160223000608], ["str", 0.09871160223000608], ["Dict[datetime.date, Dict[str, Any]]", 0.0963421370218944], ["Optional[datetime.date]", 0.08502316273035858]], "kwargs": [], "run_id": [["Optional[int]", 0.3021595332827279], ["str", 0.29856031114484805], ["Optional[str]", 0.10071984442757596], ["int", 0.09892023335863603]], "session": [["str", 0.329290949835886], ["Optional[int]", 0.12932293404332604], ["Optional[annofabapi.models.InspectionStatus]", 0.101670146218737], ["sqlalchemy.orm.session.Session", 0.09231778742008884], ["aw_core.models.Event", 0.08304441846192025]]}, "q_name": "set_dag_run_state_to_failed", "ret_exprs": ["return []", "return []", "return tis + set_state(tasks=tasks, run_id=run_id, state=State.FAILED, commit=commit, session=session)"], "ret_type": "builtins.list[airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["str", 0.20979310300304194], ["bool", 0.20214539036868578], ["zerver.models.UserProfile", 0.10198135221876485], ["Optional[cmk.utils.type_defs.HostAddress]", 0.10163813915187411], ["dict", 0.10163813915187411], ["cmk.utils.type_defs.HostName", 0.10163813915187411]], "variables": {"dag": "", "dag_run": "", "run_id": "", "task_ids": "", "task_ids_of_running_tis": "", "tasks": "", "tis": ""}, "variables_p": {"dag": [["raiden.utils.SecretHash", 0.30328385730743057], ["list", 0.11351527221279856], ["raiden.utils.FeeAmount", 0.10624547888932089], ["raiden.utils.TargetAddress", 0.10624547888932089], ["Dict[str, Any]", 0.09880053705961991], ["ofxtools.models.signon.SONRS", 0.09415997165659841], ["buza.models.Subject", 0.08749377223811416]], "dag_run": [["int", 0.20705065702301034], ["Optional[magic.models.deck.Deck]", 0.1908138419279938], ["magic.models.card.Card", 0.11694045350173002], ["byceps.services.user.transfer.models.User", 0.09897963422900166]], "run_id": [["int", 0.6367908444265249], ["list", 0.10197635513193766], ["Pattern[Any]", 0.09449778786036571], ["Set[str]", 0.08444986459918649]], "task_ids": [["str", 0.7726387484460163], ["Optional[str]", 0.14403640627480718], ["int", 0.08332484527917655]], "task_ids_of_running_tis": [["str", 0.8164975844173862], ["Pattern[str]", 0.09022414623502185]], "tasks": [["str", 0.33507039424200935], ["Dict[str, str]", 0.18842974909502824], ["Dict[str, Union[Any, Any]]", 0.08633821509654045], ["Dict[str, Any]", 0.07606060307504073]], "tis": [["str", 0.8217326351874564], ["dict", 0.08899755162973373]]}}, {"docstring": {"func": "Set the dag run for a specific execution date to running.", "long_descr": null, "ret": "If commit is true, list of tasks that have been updated,\notherwise list of tasks that will be updated"}, "fn_lc": [[502, 0], [545, 14]], "fn_var_ln": {"dag_run": [[534, 8], [534, 15]], "res": [[522, 4], [522, 7]], "run_id": [[537, 8], [537, 14]]}, "fn_var_occur": {"dag_run": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["run_id", "dag_run", "run_id"]], "res": [["res", "builtins", "list", "airflow", "models", "taskinstance", "TaskInstance"]], "run_id": [["execution_date", "None", "run_id", "None"], ["run_id", "dag_run", "run_id"], ["ValueError", "run_id"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "new_state", "session"]]}, "name": "__set_dag_run_state_to_running_or_queued", "params": {"commit": "builtins.bool", "dag": "airflow.models.dag.DAG", "execution_date": "datetime | None", "new_state": "airflow.utils.state.DagRunState", "run_id": "str | None", "session": "sqlalchemy.orm.Session"}, "params_descr": {"commit": "commit DAG and tasks to be altered to the database", "dag": "the DAG of which to alter state", "execution_date": "the execution date from which to start looking", "new_state": "", "run_id": "the id of the DagRun", "session": "database session"}, "params_occur": {"commit": [], "dag": [["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "new_state", "session"]], "execution_date": [["execution_date", "None", "run_id", "None"], ["timezone", "is_localized", "execution_date"], ["ValueError", "execution_date"], ["dag_run", "dag", "get_dagrun", "execution_date", "execution_date"], ["ValueError", "execution_date"]], "new_state": [["_set_dag_run_state", "dag", "dag_id", "run_id", "new_state", "session"]], "run_id": [["execution_date", "None", "run_id", "None"], ["run_id", "dag_run", "run_id"], ["ValueError", "run_id"], ["_set_dag_run_state", "dag", "dag_id", "run_id", "new_state", "session"]], "session": [["_set_dag_run_state", "dag", "dag_id", "run_id", "new_state", "session"]]}, "params_p": {"args": [], "commit": [["bool", 0.47508444324989996], ["List[str]", 0.2066335290442599], ["str", 0.11757098960408749], ["List[Tuple[str, str]]", 0.11757098960408749], ["Optional[Callable]", 0.08314004849766503]], "dag": [["Optional[raiden.utils.TokenNetworkAddress]", 0.37794516531078465], ["Union[str, datetime.datetime, None]", 0.11905948170313473], ["Dict[datetime.date, Dict[str, Any]]", 0.10923730411880404], ["datetime.date", 0.10446520154299146], ["List[datetime.datetime]", 0.09965225937028858], ["Optional[raiden.transfer.state.TokenNetworkState]", 0.09505413812389744], ["excars.models.user.User", 0.0945864498300992]], "execution_date": [["Optional[str]", 0.47871181223921505], ["int", 0.10236116825089302], ["Optional[datetime.date]", 0.09817964739938362], ["Optional[bool]", 0.09250620642029421]], "kwargs": [], "new_state": [["bytes", 0.1738950904960575], ["bool", 0.08853240492050225], ["List[annofabapi.models.Task]", 0.08745699671327853], ["tracim.models.auth.User", 0.08566474600619178]], "run_id": [["Optional[str]", 0.7702180144739466], ["Optional[List[int]]", 0.2297819855260535]], "session": [["bytes", 0.1738950904960575], ["bool", 0.08853240492050225], ["List[annofabapi.models.Task]", 0.08745699671327853], ["tracim.models.auth.User", 0.08566474600619178]]}, "q_name": "__set_dag_run_state_to_running_or_queued", "ret_exprs": ["return res", "return res", "return res"], "ret_type": "builtins.list[airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["bool", 0.4922716710804081], ["str", 0.11481471591831678], ["List[Tuple[str, ...]]", 0.09531316662780141]], "variables": {"dag_run": "", "res": "builtins.list[airflow.models.taskinstance.TaskInstance]", "run_id": ""}, "variables_p": {"dag_run": [["int", 0.20705065702301034], ["Optional[magic.models.deck.Deck]", 0.1908138419279938], ["magic.models.card.Card", 0.11694045350173002], ["byceps.services.user.transfer.models.User", 0.09897963422900166]], "res": [["list", 0.9999999999999998]], "run_id": [["int", 0.1689889411670717], ["dict", 0.08573144150141218], ["Optional[str]", 0.08052255271413152], ["Generator[Any, None, None]", 0.07259192767963334]]}}, {"docstring": {"func": "Set the dag run's state to running.", "long_descr": "Set for a specific execution date and its task instances to running.", "ret": null}, "fn_lc": [[549, 0], [569, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "set_dag_run_state_to_running", "params": {"commit": "builtins.bool", "dag": "airflow.models.dag.DAG", "execution_date": "datetime | None", "run_id": "str | None", "session": "sqlalchemy.orm.Session"}, "params_descr": {"commit": "", "dag": "", "execution_date": "", "run_id": "", "session": ""}, "params_occur": {"commit": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "RUNNING", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "dag": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "RUNNING", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "execution_date": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "RUNNING", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "run_id": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "RUNNING", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "session": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "RUNNING", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]]}, "params_p": {"args": [], "commit": [["str", 0.41408325517048655], ["int", 0.19047515118644764], ["sqlalchemy.orm.Session", 0.17708422343787994], ["float", 0.12883674574788317]], "dag": [["str", 0.41408325517048655], ["int", 0.19047515118644764], ["sqlalchemy.orm.Session", 0.17708422343787994], ["float", 0.12883674574788317]], "execution_date": [["str", 0.41408325517048655], ["int", 0.19047515118644764], ["sqlalchemy.orm.Session", 0.17708422343787994], ["float", 0.12883674574788317]], "kwargs": [], "run_id": [["str", 0.41408325517048655], ["int", 0.19047515118644764], ["sqlalchemy.orm.Session", 0.17708422343787994], ["float", 0.12883674574788317]], "session": [["str", 0.41408325517048655], ["int", 0.19047515118644764], ["sqlalchemy.orm.Session", 0.17708422343787994], ["float", 0.12883674574788317]]}, "q_name": "set_dag_run_state_to_running", "ret_exprs": ["return __set_dag_run_state_to_running_or_queued( new_state=DagRunState.RUNNING, dag=dag, execution_date=execution_date, run_id=run_id, commit=commit, session=session,)"], "ret_type": "builtins.list[airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["\"Config\"", 0.17007790134711945], ["Mapping[str, str]", 0.10820067284709144], ["int", 0.09005915851175736]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Set the dag run's state to queued.", "long_descr": "Set for a specific execution date and its task instances to queued.", "ret": null}, "fn_lc": [[573, 0], [593, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "set_dag_run_state_to_queued", "params": {"commit": "builtins.bool", "dag": "airflow.models.dag.DAG", "execution_date": "datetime | None", "run_id": "str | None", "session": "sqlalchemy.orm.Session"}, "params_descr": {"commit": "", "dag": "", "execution_date": "", "run_id": "", "session": ""}, "params_occur": {"commit": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "QUEUED", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "dag": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "QUEUED", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "execution_date": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "QUEUED", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "run_id": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "QUEUED", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]], "session": [["__set_dag_run_state_to_running_or_queued", "new_state", "DagRunState", "QUEUED", "dag", "dag", "execution_date", "execution_date", "run_id", "run_id", "commit", "commit", "session", "session"]]}, "params_p": {"args": [], "commit": [["int", 0.20456040851349722], ["str", 0.09489706811566108], ["Optional[int]", 0.09489706811566108], ["sqlalchemy.orm.Session", 0.09131772513820408]], "dag": [["int", 0.20456040851349722], ["str", 0.09489706811566108], ["Optional[int]", 0.09489706811566108], ["sqlalchemy.orm.Session", 0.09131772513820408]], "execution_date": [["int", 0.20456040851349722], ["str", 0.09489706811566108], ["Optional[int]", 0.09489706811566108], ["sqlalchemy.orm.Session", 0.09131772513820408]], "kwargs": [], "run_id": [["int", 0.20456040851349722], ["str", 0.09489706811566108], ["Optional[int]", 0.09489706811566108], ["sqlalchemy.orm.Session", 0.09131772513820408]], "session": [["int", 0.20456040851349722], ["str", 0.09489706811566108], ["Optional[int]", 0.09489706811566108], ["sqlalchemy.orm.Session", 0.09131772513820408]]}, "q_name": "set_dag_run_state_to_queued", "ret_exprs": ["return __set_dag_run_state_to_running_or_queued( new_state=DagRunState.QUEUED, dag=dag, execution_date=execution_date, run_id=run_id, commit=commit, session=session,)"], "ret_type": "builtins.list[airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["\"Step\"", 0.09716282549389062], ["Dict[str, Any]", 0.0950742241357822]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "datetime", "datetime", "typing", "TYPE_CHECKING", "Collection", "Iterable", "Iterator", "NamedTuple", "sqlalchemy", "or_", "select", "sqlalchemy", "orm", "Session", "SASession", "lazyload", "airflow", "models", "dag", "DAG", "airflow", "models", "dagrun", "DagRun", "airflow", "models", "operator", "Operator", "airflow", "models", "taskinstance", "TaskInstance", "airflow", "operators", "subdag", "SubDagOperator", "airflow", "utils", "timezone", "airflow", "utils", "helpers", "exactly_one", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "airflow", "utils", "state", "DagRunState", "State", "TaskInstanceState", "airflow", "utils", "types", "DagRunType"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 80, "I": 0, "U": 63}, "session_id": "iEYncDYwrdJeSmD0e8Gzavag0I89rYqhJTgkm8uF79U", "set": null, "tc": [false, null], "type_annot_cove": 0.56, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}