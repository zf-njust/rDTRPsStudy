{"error": null, "response": {"classes": [{"cls_lc": [[32, 0], [51, 11]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Check if the instance is valid under the current schema.", "long_descr": null, "ret": null}, "fn_lc": [[41, 4], [43, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_valid", "params": {"instance": "", "self": ""}, "params_descr": {"instance": "", "self": ""}, "params_occur": {"instance": [], "self": []}, "params_p": {"args": [], "instance": [["str", 0.3333333332359648], ["Sequence[Any]", 0.166666666574772], ["int", 0.166666666574772], ["Dict[str, Set[str]]", 0.166666666574772]], "kwargs": [], "self": []}, "q_name": "Validator.is_valid", "ret_exprs": [], "ret_type": "builtins.bool", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if the instance is valid under the current schema, raising validation error if not.", "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [47, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "validate", "params": {"instance": "", "self": ""}, "params_descr": {"instance": "", "self": ""}, "params_occur": {"instance": [], "self": []}, "params_p": {"args": [], "instance": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "Validator.validate", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Lazily yield each of the validation errors in the given instance.", "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [51, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "iter_errors", "params": {"instance": "", "self": ""}, "params_descr": {"instance": "", "self": ""}, "params_occur": {"instance": [], "self": []}, "params_p": {"args": [], "instance": [["list", 0.9999999959395703], ["Sequence[str]", 3.0997087716878204e-10], ["bool", 3.030953232742605e-10], ["int", 2.69326793298957e-10], ["Callable[[], bytes]", 2.4861811043434745e-10]], "kwargs": [], "self": []}, "q_name": "Validator.iter_errors", "ret_exprs": [], "ret_type": "typing.Iterable[jsonschema.exceptions.ValidationError]", "variables": {}, "variables_p": {}}], "name": "Validator", "q_name": "Validator", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Load & return Json Schema for DAG as Python dict.", "long_descr": null, "ret": null}, "fn_lc": [[54, 0], [63, 17]], "fn_var_ln": {"schema": [[62, 4], [62, 10]], "schema_file": [[57, 4], [57, 15]], "schema_file_name": [[56, 4], [56, 20]]}, "fn_var_occur": {"schema": [["schema", "json", "loads", "schema_file", "decode"]], "schema_file": [["schema_file", "pkgutil", "get_data", "__name__", "schema_file_name"], ["schema_file", "None"], ["schema", "json", "loads", "schema_file", "decode"]], "schema_file_name": [["schema_file", "pkgutil", "get_data", "__name__", "schema_file_name"], ["AirflowException", "schema_file_name"]]}, "name": "load_dag_schema_dict", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "load_dag_schema_dict", "ret_exprs": ["return schema"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.576983565704106], ["bool", 0.1610766920764225], ["List[str]", 0.09139040368952803]], "variables": {"schema": "", "schema_file": "", "schema_file_name": ""}, "variables_p": {"schema": [["str", 0.3493132145873719], ["Dict[str, Union[Any, Any]]", 0.17828932094185287], ["Set[Tuple[str, str]]", 0.0985220225977099], ["Dict[str, str]", 0.08427639602293888], ["dict", 0.08287020786819801]], "schema_file": [["str", 0.5554278112906489], ["Dict[str, Dict[str, str]]", 0.08751071451082748]], "schema_file_name": [["str", 0.8193212698169171], ["Union[Literal, str]", 0.08631062559848743]]}}, {"docstring": {"func": "Load & Validate Json Schema for DAG.", "long_descr": null, "ret": null}, "fn_lc": [[66, 0], [71, 45]], "fn_var_ln": {"schema": [[70, 4], [70, 10]]}, "fn_var_occur": {"schema": [["schema", "load_dag_schema_dict"], ["jsonschema", "Draft7Validator", "schema"]]}, "name": "load_dag_schema", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "load_dag_schema", "ret_exprs": ["return jsonschema.Draft7Validator(schema)"], "ret_type": "Validator", "ret_type_p": [["str", 0.6], ["bool", 0.19999999999999998]], "variables": {"schema": ""}, "variables_p": {"schema": [["List[int]", 0.20030159931650457], ["str", 0.163052818937055], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08994762393707476]]}}], "imports": ["__future__", "annotations", "pkgutil", "typing", "TYPE_CHECKING", "Iterable", "airflow", "exceptions", "AirflowException", "airflow", "settings", "json", "airflow", "typing_compat", "Protocol", "jsonschema", "jsonschema"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 5, "I": 0, "U": 7}, "session_id": "DioYnEIAjTfR6mTXjXpfGjRSgr_xfJLh4ZrmmB-QOCg", "set": null, "tc": [false, null], "type_annot_cove": 0.42, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}