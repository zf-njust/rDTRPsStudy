{"error": null, "response": {"classes": [{"cls_lc": [[60, 4], [63, 23]], "cls_var_ln": {"orm_mode": [[63, 8], [63, 16]]}, "cls_var_occur": {"orm_mode": []}, "funcs": [], "name": "Config", "q_name": "TaskInstancePydantic.Config", "variables": {"orm_mode": ""}, "variables_p": {"orm_mode": [["bool", 0.3], ["str", 0.19999999999999998], ["bytes", 0.09999999999999999], ["List[str]", 0.09999999999999999], ["Callable[[], Any]", 0.09999999999999999]]}}, {"cls_lc": [[27, 0], [114, 35]], "cls_var_ln": {"dag_id": [[31, 4], [31, 10]], "duration": [[37, 4], [37, 12]], "end_date": [[35, 4], [35, 12]], "execution_date": [[36, 4], [36, 18]], "external_executor_id": [[53, 4], [53, 24]], "hostname": [[41, 4], [41, 12]], "job_id": [[43, 4], [43, 10]], "map_index": [[33, 4], [33, 13]], "max_tries": [[40, 4], [40, 13]], "next_kwargs": [[57, 4], [57, 15]], "next_method": [[56, 4], [56, 15]], "operator": [[48, 4], [48, 12]], "pid": [[51, 4], [51, 7]], "pool": [[44, 4], [44, 8]], "pool_slots": [[45, 4], [45, 14]], "priority_weight": [[47, 4], [47, 19]], "queue": [[46, 4], [46, 9]], "queued_by_job_id": [[50, 4], [50, 20]], "queued_dttm": [[49, 4], [49, 15]], "run_as_user": [[58, 4], [58, 15]], "run_id": [[32, 4], [32, 10]], "start_date": [[34, 4], [34, 14]], "state": [[38, 4], [38, 9]], "task_id": [[30, 4], [30, 11]], "trigger_id": [[54, 4], [54, 14]], "trigger_timeout": [[55, 4], [55, 19]], "try_number": [[39, 4], [39, 14]], "unixname": [[42, 4], [42, 12]], "updated_at": [[52, 4], [52, 14]]}, "cls_var_occur": {"dag_id": [], "duration": [], "end_date": [], "execution_date": [], "external_executor_id": [], "hostname": [], "job_id": [], "map_index": [], "max_tries": [], "next_kwargs": [], "next_method": [], "operator": [], "pid": [], "pool": [], "pool_slots": [], "priority_weight": [], "queue": [], "queued_by_job_id": [], "queued_dttm": [], "run_as_user": [], "run_id": [], "start_date": [], "state": [], "task_id": [], "trigger_id": [], "trigger_timeout": [], "try_number": [], "unixname": [], "updated_at": []}, "funcs": [{"docstring": {"func": "Pull an XCom value for this task instance.", "long_descr": "TODO: make it works for AIP-44", "ret": "Xcom value"}, "fn_lc": [[65, 4], [88, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "xcom_pull", "params": {"dag_id": "typing.Optional[builtins.str]", "default": "typing.Any", "include_prior_dates": "builtins.bool", "key": "builtins.str", "map_indexes": "typing.Optional[typing.Union[builtins.int, typing.Iterable[builtins.int]]]", "self": "", "task_ids": "typing.Optional[typing.Union[builtins.str, typing.Iterable[builtins.str]]]"}, "params_descr": {"dag_id": "dag id, if None, the dag_id of the current task is used", "default": "the default value to return if the XCom value does not exist", "include_prior_dates": "whether to include prior execution dates", "key": "the key to identify the XCom value", "map_indexes": "map index or list of map indexes, if None, the map_index of the current task\nis used", "self": "", "task_ids": "task id or list of task ids, if None, the task_id of the current task is used"}, "params_occur": {"dag_id": [], "default": [], "include_prior_dates": [], "key": [], "map_indexes": [], "self": [], "task_ids": []}, "params_p": {"args": [], "dag_id": [["Mapping[Any, str]", 0.404999261736941], ["str", 0.2024996308684705], ["List[str]", 0.10035190335777704], ["bool", 0.09590555022842685], ["Optional[Dict[str, Any]]", 0.09499383837414928]], "default": [["Mapping[Any, str]", 0.404999261736941], ["str", 0.2024996308684705], ["List[str]", 0.10035190335777704], ["bool", 0.09590555022842685], ["Optional[Dict[str, Any]]", 0.09499383837414928]], "include_prior_dates": [["Mapping[Any, str]", 0.404999261736941], ["str", 0.2024996308684705], ["List[str]", 0.10035190335777704], ["bool", 0.09590555022842685], ["Optional[Dict[str, Any]]", 0.09499383837414928]], "key": [["Mapping[Any, str]", 0.404999261736941], ["str", 0.2024996308684705], ["List[str]", 0.10035190335777704], ["bool", 0.09590555022842685], ["Optional[Dict[str, Any]]", 0.09499383837414928]], "kwargs": [], "map_indexes": [["Mapping[Any, str]", 0.404999261736941], ["str", 0.2024996308684705], ["List[str]", 0.10035190335777704], ["bool", 0.09590555022842685], ["Optional[Dict[str, Any]]", 0.09499383837414928]], "self": [], "task_ids": [["Mapping[Any, str]", 0.404999261736941], ["str", 0.2024996308684705], ["List[str]", 0.10035190335777704], ["bool", 0.09590555022842685], ["Optional[Dict[str, Any]]", 0.09499383837414928]]}, "q_name": "TaskInstancePydantic.xcom_pull", "ret_exprs": ["return None"], "ret_type": "typing.Any", "ret_type_p": [["Optional[int]", 0.31319560413106795], ["list", 0.0973989390623143], ["Optional[str]", 0.09378724453621337], ["bool", 0.09271571411460648]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Push an XCom value for this task instance.", "long_descr": "TODO: make it works for AIP-44", "ret": null}, "fn_lc": [[90, 4], [104, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "xcom_push", "params": {"execution_date": "typing.Optional[datetime.datetime]", "key": "builtins.str", "self": "", "value": "typing.Any"}, "params_descr": {"execution_date": "the execution date to push the XCom for", "key": "the key to identify the XCom value", "self": "", "value": "the value of the XCom"}, "params_occur": {"execution_date": [], "key": [], "self": [], "value": []}, "params_p": {"args": [], "execution_date": [["bool", 0.20336137588635161], ["datetime.date", 0.18758552301440373], ["Union[Mapping[str, Any], str, None]", 0.11805723148488952], ["Sequence[str]", 0.10456238078267628], ["T", 0.08798765509798162], ["datetime.datetime", 0.08498136080364183]], "key": [["bool", 0.20336137588635161], ["datetime.date", 0.18758552301440373], ["Union[Mapping[str, Any], str, None]", 0.11805723148488952], ["Sequence[str]", 0.10456238078267628], ["T", 0.08798765509798162], ["datetime.datetime", 0.08498136080364183]], "kwargs": [], "self": [], "value": [["bool", 0.20336137588635161], ["datetime.date", 0.18758552301440373], ["Union[Mapping[str, Any], str, None]", 0.11805723148488952], ["Sequence[str]", 0.10456238078267628], ["T", 0.08798765509798162], ["datetime.datetime", 0.08498136080364183]]}, "q_name": "TaskInstancePydantic.xcom_push", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get the DagRun for this task instance.", "long_descr": "TODO: make it works for AIP-44", "ret": "Pydantic serialized version of DaGrun"}, "fn_lc": [[106, 4], [114, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_dagrun", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TaskInstancePydantic.get_dagrun", "ret_exprs": [], "ret_type": "airflow.serialization.pydantic.dag_run.DagRunPydantic", "variables": {}, "variables_p": {}}], "name": "TaskInstancePydantic", "q_name": "TaskInstancePydantic", "variables": {"dag_id": "builtins.str", "duration": "typing.Optional[builtins.float]", "end_date": "typing.Optional[datetime.datetime]", "execution_date": "typing.Optional[datetime.datetime]", "external_executor_id": "typing.Optional[builtins.str]", "hostname": "builtins.str", "job_id": "typing.Optional[builtins.int]", "map_index": "builtins.int", "max_tries": "builtins.int", "next_kwargs": "typing.Optional[builtins.dict]", "next_method": "typing.Optional[builtins.str]", "operator": "builtins.str", "pid": "typing.Optional[builtins.int]", "pool": "builtins.str", "pool_slots": "builtins.int", "priority_weight": "typing.Optional[builtins.int]", "queue": "builtins.str", "queued_by_job_id": "typing.Optional[builtins.int]", "queued_dttm": "typing.Optional[builtins.str]", "run_as_user": "typing.Optional[builtins.str]", "run_id": "builtins.str", "start_date": "typing.Optional[datetime.datetime]", "state": "typing.Optional[builtins.str]", "task_id": "builtins.str", "trigger_id": "typing.Optional[builtins.int]", "trigger_timeout": "typing.Optional[datetime.datetime]", "try_number": "builtins.int", "unixname": "builtins.str", "updated_at": "typing.Optional[datetime.datetime]"}, "variables_p": {"dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]], "duration": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "end_date": [["Optional[datetime.date]", 0.2], ["str", 0.2], ["Optional[datetime.datetime]", 0.1]], "execution_date": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "external_executor_id": [["Optional[str]", 0.3], ["int", 0.3], ["str", 0.19999999999999998], ["Optional[int]", 0.09999999999999999]], "hostname": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "job_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]], "map_index": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "max_tries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "next_kwargs": [["dict", 0.49999999999999994], ["Dict[str, Dict[str, bool]]", 0.39999999999999997], ["Dict[str, Dict[str, int]]", 0.09999999999999999]], "next_method": [["List[str]", 0.19999999999999998], ["int", 0.09999999999999999], ["Final", 0.09999999999999999], ["Tuple[str, str, str, str]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[str]", 0.09999999999999999], ["staticmethod", 0.09999999999999999], ["FrozenSet[str]", 0.09999999999999999]], "operator": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pid": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool_slots": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "priority_weight": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "queue": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "queued_by_job_id": [["int", 0.6], ["str", 0.2], ["Optional[str]", 0.2]], "queued_dttm": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "run_as_user": [["str", 0.6806186295339406], ["Type[str]", 0.10592877833039643], ["dict", 0.0857286303496467]], "run_id": [["str", 0.4], ["int", 0.2]], "start_date": [["str", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["datetime.datetime", 0.10000000000000002], ["Optional[datetime.date]", 0.10000000000000002], ["datetime.date", 0.10000000000000002]], "state": [["str", 0.29999999999999993], ["bool", 0.19999999999999996], ["Optional[\"StateResourceIdentifier\"]", 0.09999999999999998], ["Optional[str]", 0.09999999999999998]], "task_id": [["str", 0.4], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "trigger_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]], "trigger_timeout": [["int", 0.5], ["raiden.utils.BlockTimeout", 0.30000000000000004], ["Optional[float]", 0.1]], "try_number": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "unixname": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "updated_at": [["str", 0.2], ["Optional[datetime.datetime]", 0.1], ["datetime.timedelta", 0.1]]}}], "funcs": [], "imports": ["datetime", "datetime", "typing", "Any", "Iterable", "Optional", "Union", "pydantic", "BaseModel", "BaseModelPydantic", "airflow", "serialization", "pydantic", "dag_run", "DagRunPydantic", "airflow", "utils", "xcom", "XCOM_RETURN_KEY"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 41, "I": 0, "U": 1}, "session_id": "Vw4J4igiUrMYbfcpt5s9mJEWjYNIXyICqqQtCjj25D8", "set": null, "tc": [false, null], "type_annot_cove": 0.98, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}