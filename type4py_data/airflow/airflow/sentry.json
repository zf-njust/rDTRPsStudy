{"error": null, "response": {"classes": [{"cls_lc": [[36, 0], [53, 49]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Blank function for tagging.", "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [41, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_tagging", "params": {"cls": "", "task_instance": ""}, "params_descr": {"cls": "", "task_instance": ""}, "params_occur": {"cls": [], "task_instance": []}, "params_p": {"args": [], "cls": [["str", 0.4197423361702348], ["Union[str, bytes]", 0.10396765759621956], ["List[Dict[str, str]]", 0.09685672976286429], ["bool", 0.09267967286361203]], "kwargs": [], "self": [], "task_instance": [["str", 0.4197423361702348], ["Union[str, bytes]", 0.10396765759621956], ["List[Dict[str, str]]", 0.09685672976286429], ["bool", 0.09267967286361203]]}, "q_name": "DummySentry.add_tagging", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Blank function for breadcrumbs.", "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [45, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_breadcrumbs", "params": {"cls": "", "session": "Session | None", "task_instance": ""}, "params_descr": {"cls": "", "session": "", "task_instance": ""}, "params_occur": {"cls": [], "session": [], "task_instance": []}, "params_p": {"args": [], "cls": [["Dict[str, Any]", 0.23372916795123022], ["bool", 0.1429896411221731], ["prefecengine.state.Cached", 0.0751615386065927], ["Callable", 0.06464921965374403]], "kwargs": [], "self": [], "session": [["Dict[str, Any]", 0.23372916795123022], ["bool", 0.1429896411221731], ["prefecengine.state.Cached", 0.0751615386065927], ["Callable", 0.06464921965374403]], "task_instance": [["Dict[str, Any]", 0.23372916795123022], ["bool", 0.1429896411221731], ["prefecengine.state.Cached", 0.0751615386065927], ["Callable", 0.06464921965374403]]}, "q_name": "DummySentry.add_breadcrumbs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Blank function for formatting a TaskInstance._run_raw_task.", "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [50, 18]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "enrich_errors", "params": {"cls": "", "run": ""}, "params_descr": {"cls": "", "run": ""}, "params_occur": {"cls": [], "run": []}, "params_p": {"args": [], "cls": [["Optional[Iterable[str]]", 0.20218842520255664], ["bool", 0.20070344619826458], ["str", 0.10109421260127832], ["int", 0.10109421260127832]], "kwargs": [], "run": [["Optional[Iterable[str]]", 0.20218842520255664], ["bool", 0.20070344619826458], ["str", 0.10109421260127832], ["int", 0.10109421260127832]], "self": []}, "q_name": "DummySentry.enrich_errors", "ret_exprs": ["return run"], "ret_type": "", "ret_type_p": [["bool", 0.7333451206709505], ["str", 0.18141528807954033], ["Optional[bool]", 0.08523959124950922]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Blank function for flushing errors.", "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [53, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "flush", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DummySentry.flush", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "DummySentry", "q_name": "DummySentry", "variables": {}, "variables_p": {}}, {"cls_lc": [[65, 4], [194, 30]], "cls_var_ln": {"SCOPE_CRUMBS": [[70, 8], [70, 20]], "SCOPE_DAG_RUN_TAGS": [[68, 8], [68, 26]], "SCOPE_TASK_INSTANCE_TAGS": [[69, 8], [69, 32]], "UNSUPPORTED_SENTRY_OPTIONS": [[72, 8], [72, 34]]}, "cls_var_occur": {"SCOPE_CRUMBS": [], "SCOPE_DAG_RUN_TAGS": [], "SCOPE_TASK_INSTANCE_TAGS": [], "UNSUPPORTED_SENTRY_OPTIONS": []}, "funcs": [{"docstring": {"func": "Initialize the Sentry SDK.", "long_descr": null, "ret": null}, "fn_lc": [[82, 8], [123, 80]], "fn_var_ln": {"_": [[91, 28], [91, 29]], "dsn": [[106, 16], [106, 19]], "executor_class": [[91, 12], [91, 26]], "integrations": [[89, 12], [89, 24]], "new_way_dsn": [[104, 16], [104, 27]], "old_way_dsn": [[103, 16], [103, 27]], "sentry_celery": [[96, 16], [96, 29]], "sentry_config_opts": [[100, 12], [100, 30]], "sentry_flask": [[86, 12], [86, 24]], "unsupported_options": [[108, 16], [108, 35]]}, "fn_var_occur": {"_": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"]], "dsn": [["dsn", "None"], ["dsn", "old_way_dsn", "new_way_dsn"], ["sentry_sdk", "init", "dsn", "dsn", "integrations", "integrations", "sentry_config_opts"]], "executor_class": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"], ["executor_class", "supports_sentry"]], "integrations": [["integrations", "sentry_flask"], ["sentry_sdk", "integrations", "celery", "CeleryIntegration"], ["integrations", "append", "sentry_celery"], ["sentry_sdk", "init", "dsn", "dsn", "integrations", "integrations", "sentry_config_opts"], ["sentry_sdk", "init", "integrations", "integrations", "sentry_config_opts"]], "new_way_dsn": [["new_way_dsn", "sentry_config_opts", "pop", "None"], ["dsn", "old_way_dsn", "new_way_dsn"]], "old_way_dsn": [["old_way_dsn", "sentry_config_opts", "pop", "None"], ["dsn", "old_way_dsn", "new_way_dsn"]], "sentry_celery": [["sentry_celery", "CeleryIntegration"], ["integrations", "append", "sentry_celery"]], "sentry_config_opts": [["sentry_config_opts", "conf", "getsection"], ["sentry_config_opts", "pop"], ["old_way_dsn", "sentry_config_opts", "pop", "None"], ["new_way_dsn", "sentry_config_opts", "pop", "None"], ["unsupported_options", "self", "UNSUPPORTED_SENTRY_OPTIONS", "intersection", "sentry_config_opts", "keys"], ["sentry_config_opts", "conf", "getimport", "fallback", "None"], ["sentry_config_opts", "conf", "getimport", "fallback", "None"], ["sentry_sdk", "init", "dsn", "dsn", "integrations", "integrations", "sentry_config_opts"], ["sentry_sdk", "init", "integrations", "integrations", "sentry_config_opts"]], "sentry_flask": [["sentry_flask", "FlaskIntegration"], ["integrations", "sentry_flask"]], "unsupported_options": [["unsupported_options", "self", "UNSUPPORTED_SENTRY_OPTIONS", "intersection", "sentry_config_opts", "keys"], ["log", "warning", "join", "unsupported_options"]]}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["unsupported_options", "self", "UNSUPPORTED_SENTRY_OPTIONS", "intersection", "sentry_config_opts", "keys"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ConfiguredSentry.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_": "", "dsn": "", "executor_class": "", "integrations": "", "new_way_dsn": "", "old_way_dsn": "", "sentry_celery": "", "sentry_config_opts": "", "sentry_flask": "", "unsupported_options": ""}, "variables_p": {"_": [["str", 0.6986583503136683], ["float", 0.08684538395083312]], "dsn": [["str", 0.18037815579768568], ["List[None]", 0.08200598197612702], ["bool", 0.0793646495282185]], "executor_class": [["str", 1.0]], "integrations": [], "new_way_dsn": [["str", 0.20053479697467985], ["List[str]", 0.09732551901919968], ["functools.partial[None]", 0.09692320315742904]], "old_way_dsn": [["str", 0.22542958898389873], ["list", 0.1021340975918388], ["functools.partial[None]", 0.08741728405059072], ["Tuple[str, str, str, str, str, str, str, str]", 0.08541510018137433]], "sentry_celery": [["list", 0.8999999999999999]], "sentry_config_opts": [["Dict[Any, str]", 0.20365475734884098], ["Dict[str, Dict[str, Any]]", 0.19573256582475773], ["Dict[Any, Union[Any, str]]", 0.1110713660018074], ["Dict[str, Any]", 0.10126810334229552], ["Dict[Any, Dict[str, Any]]", 0.0984276842995355], ["Dict[str, str]", 0.09586991251272313]], "sentry_flask": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["Callable(functools.wraps)[[Named(wrapped, Callable[..., Any]), Named(assigned, Sequence[str], default), Named(updated, Sequence[str], default)], Callable[Any, Any]]", 0.1], ["str", 0.1]], "unsupported_options": [["Set[str]", 0.2795913730753198], ["List[str]", 0.14093507664005783], ["dict", 0.13798189636677183], ["int", 0.09054866665390121], ["Final", 0.0884014163934062], ["Dict[str, Union[Any, str]]", 0.08691416184496184], ["Dict[Any, List[str]]", 0.08638953879986193]]}}, {"docstring": {"func": "Function to add tagging for a task_instance.", "long_descr": null, "ret": null}, "fn_lc": [[125, 8], [137, 66]], "fn_var_ln": {"attribute": [[135, 20], [135, 29]], "dag_run": [[127, 12], [127, 19]], "task": [[128, 12], [128, 16]]}, "fn_var_occur": {"attribute": [["attribute", "getattr", "task_instance", "tag_name"], ["scope", "set_tag", "tag_name", "attribute"], ["attribute", "getattr", "dag_run", "tag_name"], ["scope", "set_tag", "tag_name", "attribute"]], "dag_run": [["dag_run", "task_instance", "dag_run"], ["attribute", "getattr", "dag_run", "tag_name"]], "task": [["task", "task_instance", "task"], ["scope", "set_tag", "task", "__class__", "__name__"]]}, "name": "add_tagging", "params": {"self": "", "task_instance": ""}, "params_descr": {"self": "", "task_instance": ""}, "params_occur": {"self": [["self", "SCOPE_TASK_INSTANCE_TAGS"], ["self", "SCOPE_DAG_RUN_TAGS"]], "task_instance": [["dag_run", "task_instance", "dag_run"], ["task", "task_instance", "task"], ["attribute", "getattr", "task_instance", "tag_name"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_instance": []}, "q_name": "ConfiguredSentry.add_tagging", "ret_exprs": [], "ret_type": "", "variables": {"attribute": "", "dag_run": "", "task": ""}, "variables_p": {"attribute": [["str", 0.4123845413687873], ["Dict[str, str]", 0.19434797956990665], ["dict", 0.11429394473109089], ["List[str]", 0.0834753207411918]], "dag_run": [["str", 0.26716376430220873], ["List[int]", 0.23478148981760988], ["dict", 0.12073187082992386], ["Counter[str]", 0.11045065044264028], ["bool", 0.10088024034387921], ["List[List[int]]", 0.08660270733465791]], "task": [["Dict[str, str]", 0.11832240752221727], ["str", 0.09727050938543219], ["Dict[str, Union[Any, Any]]", 0.09640681756693908], ["dict", 0.09213434229096923]]}}, {"docstring": {"func": "Function to add breadcrumbs inside of a task_instance.", "long_descr": null, "ret": null}, "fn_lc": [[140, 8], [155, 94]], "fn_var_ln": {"data": [[151, 16], [151, 20]], "dr": [[144, 12], [144, 14]], "task_instances": [[145, 12], [145, 26]]}, "fn_var_occur": {"data": [["data", "crumb_tag", "getattr", "ti", "crumb_tag"], ["sentry_sdk", "add_breadcrumb", "category", "data", "data", "level"]], "dr": [["dr", "task_instance", "get_dagrun", "session"], ["task_instances", "dr", "get_task_instances", "state", "State", "SUCCESS", "State", "FAILED", "session", "session"]], "task_instances": [["task_instances", "dr", "get_task_instances", "state", "State", "SUCCESS", "State", "FAILED", "session", "session"]]}, "name": "add_breadcrumbs", "params": {"self": "", "session": "", "task_instance": ""}, "params_descr": {"self": "", "session": "", "task_instance": ""}, "params_occur": {"self": [["self", "SCOPE_CRUMBS"]], "session": [["session", "None"], ["dr", "task_instance", "get_dagrun", "session"], ["task_instances", "dr", "get_task_instances", "state", "State", "SUCCESS", "State", "FAILED", "session", "session"]], "task_instance": [["dr", "task_instance", "get_dagrun", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["Dict[str, Any]", 0.29634284388403664], ["sqlalchemy.orm.session.Session", 0.10101590559360393]], "task_instance": [["Optional[str]", 0.10981868586825776], ["sqlalchemy.orm.session.Session", 0.09751520929299076], ["utils.clienClient", 0.09253480957676555]]}, "q_name": "ConfiguredSentry.add_breadcrumbs", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [], "variables": {"data": "", "dr": "", "task_instances": ""}, "variables_p": {"data": [["dict", 0.47608921123154635], ["set", 0.18599479667134394], ["str", 0.09547326698089581]], "dr": [["str", 0.1687432561322224], ["List[dict]", 0.15486279668258873], ["Optional[Dict[str, str]]", 0.11495435521785091], ["Dict[str, Any]", 0.09143632856322861], ["flask.blueprints.Blueprint", 0.09034256898551639], ["raiden.utils.FeeAmount", 0.08176765362988578]], "task_instances": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[167, 12], [189, 29]], "fn_var_ln": {"session": [[174, 20], [174, 27]], "task_instance": [[182, 28], [182, 41]]}, "fn_var_occur": {"session": [["session", "kwargs", "get", "args", "session_args_idx"], ["session", "None"], ["self", "add_breadcrumbs", "task_instance", "session", "session"]], "task_instance": [["task_instance", "_self", "task_instance"], ["task_instance", "_self"], ["self", "add_tagging", "task_instance"], ["self", "add_breadcrumbs", "task_instance", "session", "session"]]}, "name": "wrapper", "params": {"_self": "", "args": "", "kwargs": ""}, "params_descr": {"_self": "", "args": "", "kwargs": ""}, "params_occur": {"_self": [["hasattr", "_self"], ["task_instance", "_self", "task_instance"], ["task_instance", "_self"], ["func", "_self", "args", "kwargs"]], "args": [["session", "kwargs", "get", "args", "session_args_idx"], ["func", "_self", "args", "kwargs"]], "kwargs": [["session", "kwargs", "get", "args", "session_args_idx"], ["func", "_self", "args", "kwargs"]]}, "params_p": {"_self": [["dict", 0.1878266903865654], ["Dict[str, Any]", 0.09941572887582707], ["Dict[str, str]", 0.09123372733383307]], "args": [], "kwargs": [], "self": []}, "q_name": "ConfiguredSentry.enrich_errors.<locals>.wrapper", "ret_exprs": ["return func(_self, *args, **kwargs)"], "ret_type": "", "ret_type_p": [["str", 0.1751779395717941], ["int", 0.13117656167161254], ["Dict[str, Any]", 0.09157879590708093], ["Mapping[str, Sequence[str]]", 0.08554615917485008]], "variables": {"session": "", "task_instance": ""}, "variables_p": {"session": [["Dict[str, Any]", 0.22142230564156348], ["requests.sessions.Session", 0.18195979612379978], ["Dict[str, Optional[dict]]", 0.08430773286611534], ["dict", 0.06921938174428544]], "task_instance": [["Dict[str, dict]", 0.10540855318656735], ["List[Dict[str, Any]]", 0.09183999099515212]]}}, {"docstring": {"func": "Decorate errors.", "long_descr": "Wrap TaskInstance._run_raw_task and LocalTaskJob._run_mini_scheduler_on_child_tasks\nto support task specific tags and breadcrumbs.", "ret": null}, "fn_lc": [[157, 8], [191, 26]], "fn_var_ln": {"session_args_idx": [[164, 12], [164, 28]]}, "fn_var_occur": {"session_args_idx": []}, "name": "enrich_errors", "params": {"func": "", "self": ""}, "params_descr": {"func": "", "self": ""}, "params_occur": {"func": [], "self": []}, "params_p": {"args": [], "func": [["Callable[[], Any]", 0.30000000000000004], ["Callable", 0.1]], "kwargs": [], "self": []}, "q_name": "ConfiguredSentry.enrich_errors", "ret_exprs": ["return wrapper"], "ret_type": "", "ret_type_p": [["str", 0.4805077411603105], ["sqlalchemy.engine.base.Engine", 0.010306284132775725], ["Sequence", 0.003456888962259662]], "variables": {"session_args_idx": ""}, "variables_p": {"session_args_idx": [["str", 0.47260536339634696], ["property", 0.11815134084908674], ["int", 0.11815134084908674], ["list", 0.05914814296210299]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[193, 8], [194, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "flush", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ConfiguredSentry.flush", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "ConfiguredSentry", "q_name": "ConfiguredSentry", "variables": {"SCOPE_CRUMBS": "", "SCOPE_DAG_RUN_TAGS": "", "SCOPE_TASK_INSTANCE_TAGS": "", "UNSUPPORTED_SENTRY_OPTIONS": ""}, "variables_p": {"SCOPE_CRUMBS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "SCOPE_DAG_RUN_TAGS": [["Optional[str]", 0.27031428583694445], ["list", 0.2129059541725461], ["int", 0.17273208772432774], ["str", 0.10116858096189713]], "SCOPE_TASK_INSTANCE_TAGS": [["int", 0.5396759168994623], ["str", 0.30924822741647384], ["list", 0.15107585568406381]], "UNSUPPORTED_SENTRY_OPTIONS": [["int", 0.2], ["Dict[str, Union[bool, str]]", 0.2], ["Tuple[Tuple[str, str], Tuple[str, str], Tuple[str, str], Tuple[str, str]]", 0.1], ["Dict[str, int]", 0.1], ["Dict[str, None]", 0.1], ["Dict[str, Union[int, str]]", 0.1], ["str", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "functools", "wraps", "typing", "TYPE_CHECKING", "airflow", "configuration", "conf", "airflow", "executors", "executor_loader", "ExecutorLoader", "airflow", "utils", "session", "find_session_idx", "provide_session", "airflow", "utils", "state", "State", "sqlalchemy", "orm", "Session", "sentry_sdk", "blinker", "signal", "sentry_sdk", "integrations", "flask", "FlaskIntegration", "sentry_sdk", "integrations", "logging", "ignore_logger", "sentry_sdk", "integrations", "celery", "CeleryIntegration"], "mod_var_ln": {"Sentry": [[196, 4], [196, 10]], "log": [[33, 0], [33, 3]]}, "mod_var_occur": {"Sentry": [], "log": [["log", "warning", "join", "unsupported_options"], ["log", "debug"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 48}, "session_id": "Y-D1Xu3xGcG6DW1TXgZwbmM2jfQcUXY7x2IN67rUw7g", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"Sentry": "", "log": ""}, "variables_p": {"Sentry": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "log": [["logging.Logger", 0.9999999999999999]]}}}