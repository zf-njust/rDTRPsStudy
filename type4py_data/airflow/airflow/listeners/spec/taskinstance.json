{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Called when task state changes to RUNNING. Previous_state can be State.NONE.", "long_descr": null, "ret": null}, "fn_lc": [[34, 0], [37, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "on_task_instance_running", "params": {"previous_state": "airflow.utils.state.TaskInstanceState", "session": "Session | None", "task_instance": "airflow.models.taskinstance.TaskInstance"}, "params_descr": {"previous_state": "", "session": "", "task_instance": ""}, "params_occur": {"previous_state": [], "session": [], "task_instance": []}, "params_p": {"args": [], "kwargs": [], "previous_state": [["Dict[str, Any]", 0.20020536162059152], ["Iterable[str]", 0.10033723631674654], ["prefecengine.state.Cached", 0.10010268081029576]], "session": [["Dict[str, Any]", 0.20020536162059152], ["Iterable[str]", 0.10033723631674654], ["prefecengine.state.Cached", 0.10010268081029576]], "task_instance": [["Dict[str, Any]", 0.20020536162059152], ["Iterable[str]", 0.10033723631674654], ["prefecengine.state.Cached", 0.10010268081029576]]}, "q_name": "on_task_instance_running", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Called when task state changes to SUCCESS. Previous_state can be State.NONE.", "long_descr": null, "ret": null}, "fn_lc": [[41, 0], [44, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "on_task_instance_success", "params": {"previous_state": "airflow.utils.state.TaskInstanceState", "session": "Session | None", "task_instance": "airflow.models.taskinstance.TaskInstance"}, "params_descr": {"previous_state": "", "session": "", "task_instance": ""}, "params_occur": {"previous_state": [], "session": [], "task_instance": []}, "params_p": {"args": [], "kwargs": [], "previous_state": [["Iterable[str]", 0.09325082988007247], ["Dict[str, Any]", 0.08452355372220213], ["prefecengine.state.Cached", 0.08452355372220213]], "session": [["Iterable[str]", 0.09325082988007247], ["Dict[str, Any]", 0.08452355372220213], ["prefecengine.state.Cached", 0.08452355372220213]], "task_instance": [["Iterable[str]", 0.09325082988007247], ["Dict[str, Any]", 0.08452355372220213], ["prefecengine.state.Cached", 0.08452355372220213]]}, "q_name": "on_task_instance_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Called when task state changes to FAIL. Previous_state can be State.NONE.", "long_descr": null, "ret": null}, "fn_lc": [[48, 0], [51, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "on_task_instance_failed", "params": {"previous_state": "airflow.utils.state.TaskInstanceState", "session": "Session | None", "task_instance": "airflow.models.taskinstance.TaskInstance"}, "params_descr": {"previous_state": "", "session": "", "task_instance": ""}, "params_occur": {"previous_state": [], "session": [], "task_instance": []}, "params_p": {"args": [], "kwargs": [], "previous_state": [["Iterable[str]", 0.09325082988007247], ["Dict[str, Any]", 0.08452355372220213], ["prefecengine.state.Cached", 0.08452355372220213]], "session": [["Iterable[str]", 0.09325082988007247], ["Dict[str, Any]", 0.08452355372220213], ["prefecengine.state.Cached", 0.08452355372220213]], "task_instance": [["Iterable[str]", 0.09325082988007247], ["Dict[str, Any]", 0.08452355372220213], ["prefecengine.state.Cached", 0.08452355372220213]]}, "q_name": "on_task_instance_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "typing", "TYPE_CHECKING", "pluggy", "HookspecMarker", "sqlalchemy", "orm", "session", "Session", "airflow", "models", "taskinstance", "TaskInstance", "airflow", "utils", "state", "TaskInstanceState"], "mod_var_ln": {"hookspec": [[30, 0], [30, 8]]}, "mod_var_occur": {"hookspec": []}, "no_types_annot": {"D": 9, "I": 0, "U": 4}, "session_id": "3dEdbUpmjHR4HFWVDee6XPI30wMmmEdZIO63Ri6bHS0", "set": null, "tc": [false, null], "type_annot_cove": 0.69, "typed_seq": "", "untyped_seq": "", "variables": {"hookspec": ""}, "variables_p": {"hookspec": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}