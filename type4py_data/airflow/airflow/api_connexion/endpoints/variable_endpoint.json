{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Delete variable.", "long_descr": null, "ret": null}, "fn_lc": [[49, 0], [53, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "delete_variable", "params": {"variable_key": "builtins.str"}, "params_descr": {"variable_key": ""}, "params_occur": {"variable_key": [["Variable", "delete", "variable_key"]]}, "params_p": {"args": [], "kwargs": [], "variable_key": [["str", 0.47677204296633446], ["type", 0.11966936164044488], ["bytes", 0.11572460125304186]]}, "q_name": "delete_variable", "ret_exprs": ["return Response(status=HTTPStatus.NO_CONTENT)"], "ret_type": "flask.Response", "ret_type_p": [["asgard.models.user.User", 0.2008675370853547], ["int", 0.1010903690350665], ["Mapping[str, Any]", 0.09805907321762193], ["dict", 0.0944318863305828]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get a variable by key.", "long_descr": null, "ret": null}, "fn_lc": [[58, 0], [63, 36]], "fn_var_ln": {"var": [[60, 4], [60, 7]]}, "fn_var_occur": {"var": [["var", "session", "scalar", "select", "Variable", "where", "Variable", "key", "variable_key", "limit"], ["variable_schema", "dump", "var"]]}, "name": "get_variable", "params": {"session": "sqlalchemy.orm.Session", "variable_key": "builtins.str"}, "params_descr": {"session": "", "variable_key": ""}, "params_occur": {"session": [["var", "session", "scalar", "select", "Variable", "where", "Variable", "key", "variable_key", "limit"]], "variable_key": [["var", "session", "scalar", "select", "Variable", "where", "Variable", "key", "variable_key", "limit"]]}, "params_p": {"args": [], "kwargs": [], "session": [["str", 0.8011872701598797], ["Sequence[str]", 0.09940636492006028], ["Sequence[List[Any]]", 0.09940636492006028]], "variable_key": [["str", 0.8011872701598797], ["Sequence[str]", 0.09940636492006028], ["Sequence[List[Any]]", 0.09940636492006028]]}, "q_name": "get_variable", "ret_exprs": ["return variable_schema.dump(var)"], "ret_type": "flask.Response", "ret_type_p": [["str", 0.5491938620611027], ["Iterable[cmk.utils.type_defs.SectionName]", 0.1713072423575868], ["\"VersionedAnalyzer\"", 0.10287179550860152], ["Dict[str, str]", 0.09160418377233427], ["Set[str]", 0.0850229163003748]], "variables": {"var": ""}, "variables_p": {"var": [["Pattern[str]", 0.18583678125560796], ["Optional[str]", 0.11562769902672314], ["Set[str]", 0.11554425897455328], ["tkinter.Variable", 0.10361165736740542]]}}, {"docstring": {"func": "Get all variable values.", "long_descr": null, "ret": null}, "fn_lc": [[69, 0], [88, 5]], "fn_var_ln": {"allowed_filter_attrs": [[79, 4], [79, 24]], "query": [[81, 4], [81, 9]], "to_replace": [[78, 4], [78, 14]], "total_entries": [[77, 4], [77, 17]], "variables": [[82, 4], [82, 13]]}, "fn_var_occur": {"allowed_filter_attrs": [["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"]], "query": [["query", "select", "Variable"], ["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"], ["variables", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]], "to_replace": [["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"]], "total_entries": [["total_entries", "session", "execute", "select", "func", "count", "Variable", "id", "scalar"], ["variable_collection_schema", "dump", "variables", "total_entries"]], "variables": [["variables", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"], ["variable_collection_schema", "dump", "variables", "total_entries"]]}, "name": "get_variables", "params": {"limit": "int | None", "offset": "int | None", "order_by": "builtins.str", "session": "sqlalchemy.orm.Session"}, "params_descr": {"limit": "", "offset": "", "order_by": "", "session": ""}, "params_occur": {"limit": [["variables", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]], "offset": [["variables", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]], "order_by": [["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"]], "session": [["total_entries", "session", "execute", "select", "func", "count", "Variable", "id", "scalar"], ["variables", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]]}, "params_p": {"args": [], "kwargs": [], "limit": [["str", 0.18469918779612501], ["sqlalchemy.engine.base.Engine", 0.17965666564119226]], "offset": [["str", 0.18469918779612501], ["sqlalchemy.engine.base.Engine", 0.17965666564119226]], "order_by": [["str", 0.3777126126367366], ["List[str]", 0.23150878254924778], ["bool", 0.18819528157442716], ["Callable", 0.10401954348371455]], "session": [["sqlalchemy.orm.session.Session", 0.19835962965994544], ["str", 0.17870967633744292], ["Optional[str]", 0.17520909221644262], ["cmk.utils.type_defs.HostName", 0.09060061383664562], ["recidiviz.persistence.database.session.Session", 0.09006560518307442], ["int", 0.08935483816872146], ["models.user.User", 0.0870999307610819]]}, "q_name": "get_variables", "ret_exprs": ["return variable_collection_schema.dump( { \"variables\": variables, \"total_entries\": total_entries, })"], "ret_type": "flask.Response", "ret_type_p": [["str", 0.611180360513718], ["bool", 0.1962660502496743], ["dict", 0.09833276187552814]], "variables": {"allowed_filter_attrs": "", "query": "", "to_replace": "", "total_entries": "", "variables": ""}, "variables_p": {"allowed_filter_attrs": [["int", 0.21628636392540512], ["Set[str]", 0.20840860807276326], ["List[str]", 0.19672964598111423], ["Counter[Any]", 0.10680191606683512], ["str", 0.09475545461669245], ["dict", 0.08913646311664064]], "query": [["set", 0.5510295159372739], ["labelbox.orm.query.Query", 0.1682484350367875], ["Set[frozenset[Any]]", 0.0979649029919233], ["DefaultDict[Any, Set]", 0.09628837502233256], ["KeysView[Any]", 0.08646877101168281]], "to_replace": [["str", 0.28847260208841297], ["int", 0.21384891361654157], ["Dict[str, str]", 0.11315325620759861], ["Dict[str, Union[Any, Any, Any, str]]", 0.08511620502381573], ["list", 0.08421706679084424]], "total_entries": [["List[Tuple[str, int]]", 0.21790006652896365], ["int", 0.1773973277150684], ["str", 0.145776411969088], ["Optional[\"Lecture\"]", 0.10480650071561971], ["Callable(strucpack)[[Named(fmt, Union[bytes, str]), Variable(Any)], bytes]", 0.10019837133235487], ["Set[str]", 0.08363621167874433]], "variables": [["Type[int]", 0.27521484411259295], ["list", 0.1934163950774829], ["str", 0.09706263763923846], ["Dict[str, int]", 0.08897174469398982], ["Dict[str, Any]", 0.08674208060529084], ["app.models.user.User", 0.08650105726435407]]}}, {"docstring": {"func": "Update a variable by key.", "long_descr": null, "ret": null}, "fn_lc": [[99, 0], [120, 41]], "fn_var_ln": {"data": [[116, 8], [116, 12]], "non_update_fields": [[113, 4], [113, 21]], "variable": [[114, 4], [114, 12]]}, "fn_var_occur": {"data": [["data", "variable_schema", "load", "get_json_request_dict"], ["data", "variable_key"], ["data", "extract_update_mask_data", "update_mask", "non_update_fields", "data"], ["data", "items"]], "non_update_fields": [["data", "extract_update_mask_data", "update_mask", "non_update_fields", "data"]], "variable": [["variable", "session", "scalar", "select", "Variable", "filter_by", "key", "variable_key", "limit"], ["setattr", "variable", "key", "val"], ["session", "add", "variable"], ["variable_schema", "dump", "variable"]]}, "name": "patch_variable", "params": {"session": "sqlalchemy.orm.Session", "update_mask": "airflow.api_connexion.types.UpdateMask", "variable_key": "builtins.str"}, "params_descr": {"session": "", "update_mask": "", "variable_key": ""}, "params_occur": {"session": [["variable", "session", "scalar", "select", "Variable", "filter_by", "key", "variable_key", "limit"], ["session", "add", "variable"]], "update_mask": [["data", "extract_update_mask_data", "update_mask", "non_update_fields", "data"]], "variable_key": [["data", "variable_key"], ["variable", "session", "scalar", "select", "Variable", "filter_by", "key", "variable_key", "limit"]]}, "params_p": {"args": [], "kwargs": [], "session": [["str", 0.43664888052090334], ["Callable", 0.09419918949158769], ["Sequence[str]", 0.09076815184140823], ["Sequence[List[Any]]", 0.09076815184140823], ["Dict[str, Any]", 0.08498210729812389]], "update_mask": [["str", 0.2760623192274585], ["bool", 0.22930849635963277], ["List[str]", 0.08313506913606004]], "variable_key": [["str", 0.36274480267326226], ["Optional[str]", 0.17215176029715018], ["Optional[Container[str]]", 0.09358616766628822], ["Sequence[str]", 0.09023032683834788], ["Sequence[List[Any]]", 0.09023032683834788]]}, "q_name": "patch_variable", "ret_exprs": ["return variable_schema.dump(variable)"], "ret_type": "flask.Response", "ret_type_p": [["mypy.types.Type", 0.3913222060605079], ["int", 0.14476590636958922], ["bool", 0.09785644323460667], ["Dict[str, type]", 0.09338848783982524], ["types.GraphQLType", 0.0916684581730364], ["marshmallow.Schema", 0.0901114178452583]], "variables": {"data": "", "non_update_fields": "", "variable": ""}, "variables_p": {"data": [["List[str]", 0.2954877202438228], ["T", 0.23683469834808857], ["Dict[str, Dict[str, Any]]", 0.16322477850307576], ["str", 0.07638694609089261], ["Type[Dict[str, Any]]", 0.07361108300876197]], "non_update_fields": [["str", 0.37704205611740943], ["int", 0.09308509689505691], ["dict", 0.09280367992353088], ["Pattern[str]", 0.08987694541624708], ["FrozenSet", 0.08865557510590855], ["List[str]", 0.08466211680898766]], "variable": [["Dict[str, Tuple[int]]", 0.6628168313798767], ["str", 0.15512524517107973], ["Mapping[str, str]", 0.09683654216937217], ["Dict[Tuple[cmk.utils.type_defs.CheckPluginName, Any], cmk.base.check_utils.Service]", 0.08522138127967135]]}}, {"docstring": {"func": "Create a variable.", "long_descr": null, "ret": null}, "fn_lc": [[130, 0], [138, 37]], "fn_var_ln": {"data": [[133, 8], [133, 12]]}, "fn_var_occur": {"data": [["data", "variable_schema", "load", "get_json_request_dict"], ["Variable", "set", "data", "data"], ["variable_schema", "dump", "data"]]}, "name": "post_variables", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "post_variables", "ret_exprs": ["return variable_schema.dump(data)"], "ret_type": "flask.Response", "ret_type_p": [["str", 0.3881540846428074], ["Dict[str, List[str]]", 0.1117954534493394], ["starfish.types.Axes", 0.10658500728496262], ["zam_repondeur.models.Lecture", 0.10512776909658737], ["bool", 0.096256900880847], ["dict", 0.09590970835794205]], "variables": {"data": ""}, "variables_p": {"data": [["dict", 0.2546719743351634], ["List[Dict[str, Any]]", 0.13940003960886732], ["str", 0.1390357825708237], ["List[str]", 0.10561109992254822], ["KeysView[str]", 0.08030755523427786]]}}], "imports": ["__future__", "annotations", "http", "HTTPStatus", "flask", "Response", "marshmallow", "ValidationError", "sqlalchemy", "func", "select", "sqlalchemy", "orm", "Session", "airflow", "api_connexion", "security", "airflow", "api_connexion", "endpoints", "request_dict", "get_json_request_dict", "airflow", "api_connexion", "endpoints", "update_mask", "extract_update_mask_data", "airflow", "api_connexion", "exceptions", "BadRequest", "NotFound", "airflow", "api_connexion", "parameters", "apply_sorting", "check_limit", "format_parameters", "airflow", "api_connexion", "schemas", "variable_schema", "variable_collection_schema", "variable_schema", "airflow", "api_connexion", "types", "UpdateMask", "airflow", "models", "Variable", "airflow", "security", "permissions", "airflow", "utils", "log", "action_logger", "action_event_from_permission", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "airflow", "www", "decorators", "action_logging"], "mod_var_ln": {"RESOURCE_EVENT_PREFIX": [[39, 0], [39, 21]]}, "mod_var_occur": {"RESOURCE_EVENT_PREFIX": []}, "no_types_annot": {"D": 15, "I": 0, "U": 11}, "session_id": "JtzRqafZhWUnJOd7VMbp6QBKZnUrMlEiCRjSIvjOJqk", "set": null, "tc": [false, null], "type_annot_cove": 0.58, "typed_seq": "", "untyped_seq": "", "variables": {"RESOURCE_EVENT_PREFIX": ""}, "variables_p": {"RESOURCE_EVENT_PREFIX": [["cmk.gui.plugins.openapi.livestatus_helpers.types.Column", 0.19999999999999998], ["dict", 0.09999999999999999], ["str", 0.09999999999999999], ["bool", 0.09999999999999999]]}}}