{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Delete a connection entry.", "long_descr": null, "ret": null}, "fn_lc": [[60, 0], [69, 43]], "fn_var_ln": {"connection": [[62, 4], [62, 14]]}, "fn_var_occur": {"connection": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "connection_id"], ["connection", "None"], ["session", "delete", "connection"]]}, "name": "delete_connection", "params": {"connection_id": "builtins.str", "session": "sqlalchemy.orm.Session"}, "params_descr": {"connection_id": "", "session": ""}, "params_occur": {"connection_id": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "connection_id"], ["NotFound", "detail", "connection_id"]], "session": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "connection_id"], ["session", "delete", "connection"]]}, "params_p": {"args": [], "connection_id": [["str", 0.3782615724970565], ["int", 0.20921826434239094], ["Optional[int]", 0.11410269713328537], ["Optional[float]", 0.09996238637838943], ["transfer.models.ItemID", 0.09943721727257593], ["core.types.FBUserID", 0.09901786237630193]], "kwargs": [], "session": [["str", 0.20754104416405006], ["int", 0.1835349307023013], ["core.types.FBUserID", 0.12405704194967074], ["Optional[int]", 0.11287035674095927], ["raiden_contracts.utils.type_aliases.ChainID", 0.10721213671437613], ["verification_token.models.Token", 0.0981395920762747], ["sqlalchemy.orm.scoping.scoped_session", 0.08343887439974025], ["django.conf.settings.AUTH_USER_MODEL", 0.08320602325262738]]}, "q_name": "delete_connection", "ret_exprs": ["return NoContent, HTTPStatus.NO_CONTENT"], "ret_type": "airflow.api_connexion.types.APIResponse", "ret_type_p": [["str", 0.6956528318422459], ["Type[Any]", 0.10420538682390258], ["List[str]", 0.09819110077305077]], "variables": {"connection": ""}, "variables_p": {"connection": [["str", 0.21472543934208393], ["List[dict]", 0.12443347939141215], ["dict", 0.11141012060447861], ["int", 0.09253110875966715], ["List[str]", 0.08826832854675166], ["geode.models.common.Address", 0.08427572199243577], ["Dict[str, str]", 0.08200826173156793]]}}, {"docstring": {"func": "Get a connection entry.", "long_descr": null, "ret": null}, "fn_lc": [[74, 0], [82, 45]], "fn_var_ln": {"connection": [[76, 4], [76, 14]]}, "fn_var_occur": {"connection": [["connection", "session", "scalar", "select", "Connection", "where", "Connection", "conn_id", "connection_id"], ["connection", "None"], ["connection_schema", "dump", "connection"]]}, "name": "get_connection", "params": {"connection_id": "builtins.str", "session": "sqlalchemy.orm.Session"}, "params_descr": {"connection_id": "", "session": ""}, "params_occur": {"connection_id": [["connection", "session", "scalar", "select", "Connection", "where", "Connection", "conn_id", "connection_id"], ["NotFound", "detail", "connection_id"]], "session": [["connection", "session", "scalar", "select", "Connection", "where", "Connection", "conn_id", "connection_id"]]}, "params_p": {"args": [], "connection_id": [["int", 0.4244228008504401], ["str", 0.1815543847793015], ["Optional[float]", 0.1194452630712851], ["tracim.models.data.Content", 0.09278479579758227]], "kwargs": [], "session": [["str", 0.4851971310200462], ["dict", 0.1343358810491484], ["Optional[float]", 0.10683662915471455], ["int", 0.10683662915471455], ["Optional[int]", 0.08281179890798752]]}, "q_name": "get_connection", "ret_exprs": ["return connection_schema.dump(connection)"], "ret_type": "airflow.api_connexion.types.APIResponse", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"connection": ""}, "variables_p": {"connection": [["str", 0.286241831887106], ["List[str]", 0.2638910666487777], ["int", 0.19106795923304548], ["list", 0.08897589051835286]]}}, {"docstring": {"func": "Get all connection entries.", "long_descr": null, "ret": null}, "fn_lc": [[88, 0], [105, 5]], "fn_var_ln": {"allowed_filter_attrs": [[97, 4], [97, 24]], "connections": [[102, 4], [102, 15]], "query": [[101, 4], [101, 9]], "to_replace": [[96, 4], [96, 14]], "total_entries": [[99, 4], [99, 17]]}, "fn_var_occur": {"allowed_filter_attrs": [["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"]], "connections": [["connections", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"], ["connection_collection_schema", "dump", "ConnectionCollection", "connections", "connections", "total_entries", "total_entries"]], "query": [["query", "select", "Connection"], ["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"], ["connections", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]], "to_replace": [["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"]], "total_entries": [["total_entries", "session", "execute", "select", "func", "count", "Connection", "id", "scalar_one"], ["connection_collection_schema", "dump", "ConnectionCollection", "connections", "connections", "total_entries", "total_entries"]]}, "name": "get_connections", "params": {"limit": "builtins.int", "offset": "builtins.int", "order_by": "builtins.str", "session": "sqlalchemy.orm.Session"}, "params_descr": {"limit": "", "offset": "", "order_by": "", "session": ""}, "params_occur": {"limit": [["connections", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]], "offset": [["connections", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]], "order_by": [["query", "apply_sorting", "query", "order_by", "to_replace", "allowed_filter_attrs"]], "session": [["total_entries", "session", "execute", "select", "func", "count", "Connection", "id", "scalar_one"], ["connections", "session", "scalars", "query", "offset", "offset", "limit", "limit", "all"]]}, "params_p": {"args": [], "kwargs": [], "limit": [["sqlalchemy.orm.session.Session", 0.13498738569519927], ["sqlalchemy.orm.Session", 0.12432814496408826], ["sqlalchemy.orm.scoped_session", 0.09995443153250833], ["zerver.models.UserProfile", 0.08244791984079172], ["str", 0.08244791984079172], ["int", 0.08031869885136003]], "offset": [["sqlalchemy.orm.session.Session", 0.13498738569519927], ["sqlalchemy.orm.Session", 0.12432814496408826], ["sqlalchemy.orm.scoped_session", 0.09995443153250833], ["zerver.models.UserProfile", 0.08244791984079172], ["str", 0.08244791984079172], ["int", 0.08031869885136003]], "order_by": [["bool", 0.33243773813328187], ["str", 0.193107611249501], ["int", 0.11727374534597054], ["Dict[str, Set[str]]", 0.09278203281991075], ["raiden.utils.PaymentAmount", 0.08863130291766229], ["raiden.utils.FeeAmount", 0.08863130291766229]], "session": [["sqlalchemy.orm.session.Session", 0.1324805311218707], ["zerver.models.UserProfile", 0.09237175154218741], ["str", 0.09237175154218741], ["Type[T]", 0.09171369881464365], ["Optional[str]", 0.09145918114340956]]}, "q_name": "get_connections", "ret_exprs": ["return connection_collection_schema.dump( ConnectionCollection(connections=connections, total_entries=total_entries))"], "ret_type": "airflow.api_connexion.types.APIResponse", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"allowed_filter_attrs": "", "connections": "", "query": "", "to_replace": "", "total_entries": ""}, "variables_p": {"allowed_filter_attrs": [["int", 0.21628636392540512], ["Set[str]", 0.20840860807276326], ["List[str]", 0.19672964598111423], ["Counter[Any]", 0.10680191606683512], ["str", 0.09475545461669245], ["dict", 0.08913646311664064]], "connections": [["str", 0.3883284941079621], ["Dict[str, Any]", 0.10283869977761871], ["Dict[int, str]", 0.10208800893190369], ["int", 0.0905515331239873], ["dict", 0.08544920658051071], ["List[int]", 0.08505808497436382]], "query": [["Callable[..., str]", 0.17738805035511912]], "to_replace": [["str", 0.28847260208841297], ["int", 0.21384891361654157], ["Dict[str, str]", 0.11315325620759861], ["Dict[str, Union[Any, Any, Any, str]]", 0.08511620502381573], ["list", 0.08421706679084424]], "total_entries": [["viewer.models.Gallery", 0.12492050484101831], ["golem.rpc.session.Publisher", 0.10986960971390622], ["Dict[str, Any]", 0.10267453437823672], ["bool", 0.09922554706867294], ["Optional[\"Lecture\"]", 0.08601395161926265], ["List[Union[Any, Any, Any, Any]]", 0.082100111972489]]}}, {"docstring": {"func": "Update a connection entry.", "long_descr": null, "ret": null}, "fn_lc": [[116, 0], [143, 45]], "fn_var_ln": {"connection": [[129, 4], [129, 14]], "data": [[138, 8], [138, 12]], "non_update_fields": [[128, 4], [128, 21]]}, "fn_var_occur": {"connection": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "connection_id", "limit"], ["connection", "None"], ["data", "get", "connection", "conn_id", "data"], ["setattr", "connection", "key", "data", "key"], ["session", "add", "connection"], ["connection_schema", "dump", "connection"]], "data": [["data", "connection_schema", "load", "request", "json", "partial", "True"], ["data", "get", "connection", "conn_id", "data"], ["data", "extract_update_mask_data", "update_mask", "non_update_fields", "data"], ["setattr", "connection", "key", "data", "key"]], "non_update_fields": [["data", "extract_update_mask_data", "update_mask", "non_update_fields", "data"]]}, "name": "patch_connection", "params": {"connection_id": "builtins.str", "session": "sqlalchemy.orm.Session", "update_mask": "airflow.api_connexion.types.UpdateMask"}, "params_descr": {"connection_id": "", "session": "", "update_mask": ""}, "params_occur": {"connection_id": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "connection_id", "limit"], ["NotFound", "detail", "connection_id"]], "session": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "connection_id", "limit"], ["session", "add", "connection"], ["session", "commit"]], "update_mask": [["data", "extract_update_mask_data", "update_mask", "non_update_fields", "data"]]}, "params_p": {"args": [], "connection_id": [["int", 0.6067629023673774], ["sqlalchemy.orm.Session", 0.2077121000828649], ["Optional[int]", 0.09528676826563019]], "kwargs": [], "session": [["int", 0.48870963712900606], ["sqlalchemy.orm.Session", 0.20673592462172674], ["str", 0.2053094629072637]], "update_mask": [["str", 0.303135352011123], ["int", 0.2989759820309948], ["zerver.models.UserProfile", 0.09933006688062324], ["Optional[qiskiproviders.ibmq.utils.utils.RefreshQueue]", 0.0977310995243248], ["bytes", 0.09014234956443021]]}, "q_name": "patch_connection", "ret_exprs": ["return connection_schema.dump(connection)"], "ret_type": "airflow.api_connexion.types.APIResponse", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"connection": "", "data": "", "non_update_fields": ""}, "variables_p": {"connection": [["str", 0.4956269976413183], ["List[str]", 0.10476811310916474], ["geode.models.common.Address", 0.10069637112722016], ["int", 0.09282888770526843]], "data": [["dict", 0.45078926737106934], ["phial.wrappers.Response", 0.2666208699447587], ["Dict[str, str]", 0.09205153497067065], ["Dict[str, Dict[str, Any]]", 0.08287681205098035]], "non_update_fields": [["str", 0.37704205611740943], ["int", 0.09308509689505691], ["dict", 0.09280367992353088], ["Pattern[str]", 0.08987694541624708], ["FrozenSet", 0.08865557510590855], ["List[str]", 0.08466211680898766]]}}, {"docstring": {"func": "Create connection entry.", "long_descr": null, "ret": null}, "fn_lc": [[154, 0], [172, 74]], "fn_var_ln": {"body": [[156, 4], [156, 8]], "conn_id": [[161, 4], [161, 11]], "connection": [[168, 8], [168, 18]], "data": [[158, 8], [158, 12]]}, "fn_var_occur": {"body": [["body", "request", "json"], ["data", "connection_schema", "load", "body"]], "conn_id": [["conn_id", "data"], ["helpers", "validate_key", "conn_id", "max_length"], ["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "conn_id", "limit"], ["AlreadyExists", "detail", "conn_id"]], "connection": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "conn_id", "limit"], ["connection", "Connection", "data"], ["session", "add", "connection"], ["connection_schema", "dump", "connection"]], "data": [["data", "connection_schema", "load", "body"], ["conn_id", "data"], ["connection", "Connection", "data"]]}, "name": "post_connection", "params": {"session": "sqlalchemy.orm.Session"}, "params_descr": {"session": ""}, "params_occur": {"session": [["connection", "session", "scalar", "select", "Connection", "filter_by", "conn_id", "conn_id", "limit"], ["session", "add", "connection"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "session": [["sqlalchemy.orm.Session", 0.4577619225752739], ["sqlalchemy.orm.scoping.scoped_session", 0.28396990722502263], ["int", 0.1636656499805556], ["sqlalchemy.orm.session.Session", 0.09460252021914795]]}, "q_name": "post_connection", "ret_exprs": ["return connection_schema.dump(connection)"], "ret_type": "airflow.api_connexion.types.APIResponse", "ret_type_p": [["Optional[Type]", 0.2499999998904522], ["dict", 6.359195661917437e-11]], "variables": {"body": "", "conn_id": "", "connection": "", "data": ""}, "variables_p": {"body": [["str", 0.8861277209492269], ["Dict[int, Any]", 0.1138722790507731]], "conn_id": [["str", 0.4217422703312429], ["Optional[str]", 0.20268921511608085], ["int", 0.1892483103631502]], "connection": [["str", 0.27892394876497695], ["int", 0.24315177656764705], ["notifications.models.Notification", 0.09669327761447417], ["List[str]", 0.08787837292731172]], "data": [["dict", 0.2755641212335753], ["Dict[str, str]", 0.14657141093046033], ["Dict[str, Any]", 0.10047522097713617], ["List[Dict[str, Any]]", 0.09951853837388747], ["Dict[str, Union[int, str]]", 0.09250599059895334], ["Dict[str, object]", 0.09060281942106806], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.08603282918945222]]}}, {"docstring": {"func": "Test an API connection.", "long_descr": "This method first creates an in-memory transient conn_id & exports that to an\nenv var, as some hook classes tries to find out the conn from their __init__ method & errors out\nif not found. It also deletes the conn id env variable after the test.", "ret": null}, "fn_lc": [[176, 0], [205, 40]], "fn_var_ln": {"body": [[191, 4], [191, 8]], "conn": [[197, 8], [197, 12]], "conn_env_var": [[193, 4], [193, 16]], "data": [[195, 8], [195, 12]], "message": [[199, 16], [199, 23]], "status": [[199, 8], [199, 14]], "transient_conn_id": [[192, 4], [192, 21]]}, "fn_var_occur": {"body": [["body", "request", "json"], ["data", "connection_schema", "load", "body"]], "conn": [["conn", "Connection", "data"], ["os", "environ", "conn_env_var", "conn", "get_uri"], ["status", "message", "conn", "test_connection"]], "conn_env_var": [["conn_env_var", "CONN_ENV_PREFIX", "transient_conn_id", "upper"], ["os", "environ", "conn_env_var", "conn", "get_uri"], ["conn_env_var", "os", "environ"], ["os", "environ", "conn_env_var"]], "data": [["data", "connection_schema", "load", "body"], ["data", "transient_conn_id"], ["conn", "Connection", "data"]], "message": [["status", "message", "conn", "test_connection"], ["connection_test_schema", "dump", "status", "message"]], "status": [["status", "message", "conn", "test_connection"], ["connection_test_schema", "dump", "status", "message"]], "transient_conn_id": [["transient_conn_id", "get_random_string"], ["conn_env_var", "CONN_ENV_PREFIX", "transient_conn_id", "upper"], ["data", "transient_conn_id"]]}, "name": "test_connection", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_connection", "ret_exprs": ["return Response( \"Testing connections is disabled in Airflow configuration. Contact your deployment admin to \" \"enable it.\", 403,)", "return connection_test_schema.dump({\"status\": status, \"message\": message})"], "ret_type": "airflow.api_connexion.types.APIResponse", "ret_type_p": [["int", 0.10175483925085915], ["rouver.types.WSGIApplication", 0.09451641801712019]], "variables": {"body": "", "conn": "", "conn_env_var": "", "data": "", "message": "", "status": "", "transient_conn_id": ""}, "variables_p": {"body": [["str", 0.8861277209492269], ["Dict[int, Any]", 0.1138722790507731]], "conn": [["str", 0.3845239379452298], ["int", 0.20714177492592872], ["List[Dict[str, str]]", 0.10275661795681974], ["Tuple[int, int, int, int]", 0.09463995765186299], ["list", 0.09316754570144058]], "conn_env_var": [["str", 0.5625222368114143], ["Pattern[str]", 0.09372351082250932], ["Optional[str]", 0.09095540742222541]], "data": [["str", 0.5072653922591821], ["Dict[str, str]", 0.18531049456489102], ["dict", 0.11137639212211205], ["list", 0.10398565588430977], ["Dict[str, int]", 0.09206206516950516]], "message": [["int", 0.6061097682105744], ["str", 0.09879483002858844], ["List[dict]", 0.09488222914508737]], "status": [["str", 0.4979921843153285], ["int", 0.2040920224064631], ["medtagger.types.SliceID", 0.20362944781219322], ["Optional[int]", 0.09428634546601529]], "transient_conn_id": [["str", 0.5418833749687422], ["int", 0.17123535122826528], ["Pattern[Any]", 0.10472229784043123]]}}], "imports": ["__future__", "annotations", "os", "http", "HTTPStatus", "connexion", "NoContent", "flask", "Response", "request", "marshmallow", "ValidationError", "sqlalchemy", "func", "select", "sqlalchemy", "orm", "Session", "airflow", "api_connexion", "security", "airflow", "api_connexion", "endpoints", "update_mask", "extract_update_mask_data", "airflow", "api_connexion", "exceptions", "AlreadyExists", "BadRequest", "NotFound", "airflow", "api_connexion", "parameters", "apply_sorting", "check_limit", "format_parameters", "airflow", "api_connexion", "schemas", "connection_schema", "ConnectionCollection", "connection_collection_schema", "connection_schema", "connection_test_schema", "airflow", "api_connexion", "types", "APIResponse", "UpdateMask", "airflow", "configuration", "conf", "airflow", "models", "Connection", "airflow", "secrets", "environment_variables", "CONN_ENV_PREFIX", "airflow", "security", "permissions", "airflow", "utils", "helpers", "airflow", "utils", "log", "action_logger", "action_event_from_permission", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "airflow", "utils", "strings", "get_random_string", "airflow", "www", "decorators", "action_logging"], "mod_var_ln": {"RESOURCE_EVENT_PREFIX": [[49, 0], [49, 21]]}, "mod_var_occur": {"RESOURCE_EVENT_PREFIX": []}, "no_types_annot": {"D": 18, "I": 0, "U": 22}, "session_id": "3l_vvx63V-ra33TzcgDiBdI6Bq2MPjOJSZkoeMYKTDo", "set": null, "tc": [false, null], "type_annot_cove": 0.45, "typed_seq": "", "untyped_seq": "", "variables": {"RESOURCE_EVENT_PREFIX": ""}, "variables_p": {"RESOURCE_EVENT_PREFIX": [["cmk.gui.plugins.openapi.livestatus_helpers.types.Column", 0.19999999999999998], ["dict", 0.09999999999999999], ["str", 0.09999999999999999], ["bool", 0.09999999999999999]]}}}