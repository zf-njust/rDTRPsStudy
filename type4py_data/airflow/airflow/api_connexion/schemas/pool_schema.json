{"error": null, "response": {"classes": [{"cls_lc": [[30, 4], [33, 20]], "cls_var_ln": {"model": [[33, 8], [33, 13]]}, "cls_var_occur": {"model": []}, "funcs": [], "name": "Meta", "q_name": "PoolSchema.Meta", "variables": {"model": ""}, "variables_p": {"model": [["Type[apps.blog.models.Post]", 0.1], ["Type[ajapaik.ajapaik.models.GeoTag]", 0.1], ["Type[thanks_python.contributions.models.Commit]", 0.1], ["Type[expressmanage.customers.models.Customer]", 0.1], ["Type[data_capture.models.SubmittedPriceList]", 0.1], ["Type[users.models.User]", 0.1], ["Type[backend.main.models.models.Comment]", 0.1], ["Type[hypha.apply.categories.models.Category]", 0.1], ["Type[backend.seminars.models.SeminarComment]", 0.1]]}}, {"cls_lc": [[27, 0], [67, 31]], "cls_var_ln": {"description": [[42, 4], [42, 15]], "name": [[35, 4], [35, 8]], "occupied_slots": [[37, 4], [37, 18]], "open_slots": [[41, 4], [41, 14]], "queued_slots": [[39, 4], [39, 16]], "running_slots": [[38, 4], [38, 17]], "scheduled_slots": [[40, 4], [40, 19]], "slots": [[36, 4], [36, 9]]}, "cls_var_occur": {"description": [], "name": [], "occupied_slots": [], "open_slots": [], "queued_slots": [], "running_slots": [], "scheduled_slots": [], "slots": []}, "funcs": [{"docstring": {"func": "Returns the occupied slots of the pool.", "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [47, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_occupied_slots", "params": {"obj": "airflow.models.pool.Pool"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "occupied_slots"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "self": []}, "q_name": "PoolSchema.get_occupied_slots", "ret_exprs": ["return obj.occupied_slots()"], "ret_type": "builtins.int", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns the running slots of the pool.", "long_descr": null, "ret": null}, "fn_lc": [[50, 4], [52, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_running_slots", "params": {"obj": "airflow.models.pool.Pool"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "running_slots"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.40351445101981764]], "self": []}, "q_name": "PoolSchema.get_running_slots", "ret_exprs": ["return obj.running_slots()"], "ret_type": "builtins.int", "ret_type_p": [["bool", 0.8499771054634043], ["str", 0.07270734640893708]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns the queued slots of the pool.", "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [57, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_queued_slots", "params": {"obj": "airflow.models.pool.Pool"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "queued_slots"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "self": []}, "q_name": "PoolSchema.get_queued_slots", "ret_exprs": ["return obj.queued_slots()"], "ret_type": "builtins.int", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns the scheduled slots of the pool.", "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [62, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_scheduled_slots", "params": {"obj": "airflow.models.pool.Pool"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "scheduled_slots"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "self": []}, "q_name": "PoolSchema.get_scheduled_slots", "ret_exprs": ["return obj.scheduled_slots()"], "ret_type": "builtins.int", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns the open slots of the pool.", "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [67, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_open_slots", "params": {"obj": "airflow.models.pool.Pool"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "open_slots"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.40763242641008657], ["List[List[int]]", 0.10746777472886009], ["list", 0.09688084650736535], ["List[str]", 0.0958901035059438]], "self": []}, "q_name": "PoolSchema.get_open_slots", "ret_exprs": ["return obj.open_slots()"], "ret_type": "builtins.float", "ret_type_p": [["str", 0.42458953359023377], ["Dict[Optional[str], Set[abilian.services.security.models.Role]]", 0.09293701822992406], ["abilian.core.models.subjects.Principal", 0.09293701822992406], ["fonduer.parser.models.Document", 0.08470987996943326]], "variables": {}, "variables_p": {}}], "name": "PoolSchema", "q_name": "PoolSchema", "variables": {"description": "", "name": "", "occupied_slots": "", "open_slots": "", "queued_slots": "", "running_slots": "", "scheduled_slots": "", "slots": ""}, "variables_p": {"description": [["str", 0.6999999999999998], ["Optional[\"LocalizedString\"]", 0.09999999999999998], ["\"LocalizedString\"", 0.09999999999999998], ["Optional[str]", 0.09999999999999998]], "name": [["str", 0.8999999999999999]], "occupied_slots": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "open_slots": [["str", 0.4000000000000001], ["frozenset[str]", 0.10000000000000002], ["Tuple[int, int]", 0.10000000000000002], ["Type[ajapaik.ajapaik.models.Album]", 0.10000000000000002], ["Type[my_wallestocks.models.Prices]", 0.10000000000000002]], "queued_slots": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "running_slots": [["int", 0.7], ["bool", 0.1], ["str", 0.1]], "scheduled_slots": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "slots": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[70, 0], [74, 31]], "cls_var_ln": {"pools": [[73, 4], [73, 9]], "total_entries": [[74, 4], [74, 17]]}, "cls_var_occur": {"pools": [], "total_entries": []}, "funcs": [], "name": "PoolCollection", "q_name": "PoolCollection", "variables": {"pools": "builtins.list[airflow.models.pool.Pool]", "total_entries": "builtins.int"}, "variables_p": {"pools": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[77, 0], [81, 32]], "cls_var_ln": {"pools": [[80, 4], [80, 9]], "total_entries": [[81, 4], [81, 17]]}, "cls_var_occur": {"pools": [], "total_entries": []}, "funcs": [], "name": "PoolCollectionSchema", "q_name": "PoolCollectionSchema", "variables": {"pools": "", "total_entries": ""}, "variables_p": {"pools": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "NamedTuple", "marshmallow", "Schema", "fields", "marshmallow_sqlalchemy", "SQLAlchemySchema", "auto_field", "airflow", "models", "pool", "Pool"], "mod_var_ln": {"pool_collection_schema": [[84, 0], [84, 22]], "pool_schema": [[85, 0], [85, 11]]}, "mod_var_occur": {"pool_collection_schema": [], "pool_schema": []}, "no_types_annot": {"D": 12, "I": 0, "U": 13}, "session_id": "lf_xq1hX8scu15CG3i_gWdGJOYVBE4ZL2t8jSdVY4ME", "set": null, "tc": [false, null], "type_annot_cove": 0.48, "typed_seq": "", "untyped_seq": "", "variables": {"pool_collection_schema": "", "pool_schema": ""}, "variables_p": {"pool_collection_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}