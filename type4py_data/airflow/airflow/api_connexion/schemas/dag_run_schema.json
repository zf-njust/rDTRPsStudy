{"error": null, "response": {"classes": [{"cls_lc": [[38, 0], [49, 20]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 4], [44, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_serialize", "params": {"attr": "", "kwargs": "", "obj": "", "self": "", "value": ""}, "params_descr": {"attr": "", "kwargs": "", "obj": "", "self": "", "value": ""}, "params_occur": {"attr": [], "kwargs": [], "obj": [], "self": [], "value": [["json", "loads", "value", "isinstance", "value", "str", "value"]]}, "params_p": {"args": [], "attr": [["str", 0.9999999999999999]], "kwargs": [], "obj": [["str", 0.9999999999999999]], "self": [], "value": [["str", 0.29271650623386836], ["dict", 0.11784169817314033], ["Sequence[str]", 0.09915867932598607], ["Optional[str]", 0.09657019152575279]]}, "q_name": "ConfObject._serialize", "ret_exprs": ["return {}", "return json.loads(value) if isinstance(value, str) else value"], "ret_type": "", "ret_type_p": [["str", 0.10799881716524126], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationPeriod]", 0.1021695798019573]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [49, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_deserialize", "params": {"attr": "", "data": "", "kwargs": "", "self": "", "value": ""}, "params_descr": {"attr": "", "data": "", "kwargs": "", "self": "", "value": ""}, "params_occur": {"attr": [], "data": [], "kwargs": [], "self": [], "value": [["isinstance", "value", "str"], ["json", "loads", "value"]]}, "params_p": {"args": [], "attr": [["dict", 0.7], ["str", 0.30000000000000004]], "data": [["dict", 0.7], ["str", 0.30000000000000004]], "kwargs": [], "self": [], "value": [["Dict[str, Any]", 0.4258746941720265], ["dict", 0.2954782091675298], ["str", 0.177069805890065]]}, "q_name": "ConfObject._deserialize", "ret_exprs": ["return json.loads(value)", "return value"], "ret_type": "", "ret_type_p": [["bool", 0.17946537539855534], ["Dict[str, int]", 0.16426362619984713]], "variables": {}, "variables_p": {}}], "name": "ConfObject", "q_name": "ConfObject", "variables": {}, "variables_p": {}}, {"cls_lc": [[58, 4], [62, 26]], "cls_var_ln": {"dateformat": [[62, 8], [62, 18]], "model": [[61, 8], [61, 13]]}, "cls_var_occur": {"dateformat": [], "model": []}, "funcs": [], "name": "Meta", "q_name": "DAGRunSchema.Meta", "variables": {"dateformat": "", "model": ""}, "variables_p": {"dateformat": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "model": [["Type[apps.blog.models.Post]", 0.1], ["Type[ajapaik.ajapaik.models.GeoTag]", 0.1], ["Type[thanks_python.contributions.models.Commit]", 0.1], ["Type[expressmanage.customers.models.Customer]", 0.1], ["Type[data_capture.models.SubmittedPriceList]", 0.1], ["Type[users.models.User]", 0.1], ["Type[backend.main.models.models.Comment]", 0.1], ["Type[hypha.apply.categories.models.Category]", 0.1], ["Type[backend.seminars.models.SeminarComment]", 0.1]]}}, {"cls_lc": [[55, 0], [112, 19]], "cls_var_ln": {"conf": [[71, 4], [71, 8]], "dag_id": [[65, 4], [65, 10]], "data_interval_end": [[73, 4], [73, 21]], "data_interval_start": [[72, 4], [72, 23]], "end_date": [[68, 4], [68, 12]], "execution_date": [[66, 4], [66, 18]], "external_trigger": [[70, 4], [70, 20]], "last_scheduling_decision": [[74, 4], [74, 28]], "note": [[76, 4], [76, 8]], "run_id": [[64, 4], [64, 10]], "run_type": [[75, 4], [75, 12]], "start_date": [[67, 4], [67, 14]], "state": [[69, 4], [69, 9]]}, "cls_var_occur": {"conf": [], "dag_id": [], "data_interval_end": [], "data_interval_start": [], "end_date": [], "execution_date": [], "external_trigger": [], "last_scheduling_decision": [], "note": [], "run_id": [], "run_type": [], "start_date": [], "state": []}, "funcs": [{"docstring": {"func": "Auto generate run_id and logical_date if they are not provided.", "long_descr": "For compatibility, if `execution_date` is submitted, it is converted\nto `logical_date`.", "ret": null}, "fn_lc": [[79, 4], [106, 19]], "fn_var_ln": {"execution_date": [[86, 8], [86, 22]], "logical_date": [[85, 8], [85, 20]]}, "fn_var_occur": {"execution_date": [["execution_date", "data", "pop", "_MISSING"], ["logical_date", "execution_date", "_MISSING"], ["data", "execution_date"], ["execution_date", "_MISSING"], ["logical_date", "execution_date"], ["BadRequest", "detail", "logical_date", "execution_date"]], "logical_date": [["logical_date", "data", "get", "_MISSING"], ["logical_date", "execution_date", "_MISSING"], ["logical_date", "_MISSING"], ["logical_date", "execution_date"], ["BadRequest", "detail", "logical_date", "execution_date"]]}, "name": "autogenerate", "params": {"data": "", "kwargs": "", "self": ""}, "params_descr": {"data": "", "kwargs": "", "self": ""}, "params_occur": {"data": [["logical_date", "data", "get", "_MISSING"], ["execution_date", "data", "pop", "_MISSING"], ["data", "str", "timezone", "utcnow"], ["data", "execution_date"], ["data", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "timezone", "parse", "data"]], "kwargs": [], "self": []}, "params_p": {"args": [], "data": [["str", 0.4663330080751036], ["int", 0.2926502825280438], ["List[str]", 0.09396154226727631]], "kwargs": [], "self": []}, "q_name": "DAGRunSchema.autogenerate", "ret_exprs": ["return data"], "ret_type": "", "ret_type_p": [["str", 0.2618957145135596], ["raiden.utils.signer.Signer", 0.17499926704194727], ["Optional[float]", 0.16455688318651607], ["int", 0.10872215137970408], ["List[Dict[str, Any]]", 0.10515277519084046], ["Dict[str, str]", 0.0958053345631056], ["bool", 0.0888678741243269]], "variables": {"execution_date": "", "logical_date": ""}, "variables_p": {"execution_date": [["str", 0.410912216986719]], "logical_date": [["str", 0.196904923437162], ["list", 0.14118175322266316], ["Dict[Any, List[str]]", 0.08193575984754047]]}}, {"docstring": {"func": "Populate execution_date from logical_date for compatibility.", "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [112, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "autofill", "params": {"data": "", "kwargs": "", "self": ""}, "params_descr": {"data": "", "kwargs": "", "self": ""}, "params_occur": {"data": [["data", "data"]], "kwargs": [], "self": []}, "params_p": {"args": [], "data": [["Dict[str, Any]", 0.9999999997594826], ["bytes", 8.737601718309271e-11], ["list", 3.280855083019591e-11], ["str", 3.280855083019591e-11], ["Optional[Dict[str, Any]]", 2.9659555808142475e-11], ["dict", 2.5183451331606913e-11]], "kwargs": [], "self": []}, "q_name": "DAGRunSchema.autofill", "ret_exprs": ["return data"], "ret_type": "", "ret_type_p": [["str", 0.2618957145135596], ["raiden.utils.signer.Signer", 0.17499926704194727], ["Optional[float]", 0.16455688318651607], ["int", 0.10872215137970408], ["List[Dict[str, Any]]", 0.10515277519084046], ["Dict[str, str]", 0.0958053345631056], ["bool", 0.0888678741243269]], "variables": {}, "variables_p": {}}], "name": "DAGRunSchema", "q_name": "DAGRunSchema", "variables": {"conf": "", "dag_id": "", "data_interval_end": "", "data_interval_start": "", "end_date": "", "execution_date": "", "external_trigger": "", "last_scheduling_decision": "", "note": "", "run_id": "", "run_type": "", "start_date": "", "state": ""}, "variables_p": {"conf": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "data_interval_end": [["str", 0.4000000000000001], ["bool", 0.10000000000000002], ["list", 0.10000000000000002], ["dict", 0.10000000000000002], ["Type[backend.recordbin.models.record.RecordSerializer]", 0.10000000000000002], ["Type[eventstore.models.ChannelSwitch]", 0.10000000000000002]], "data_interval_start": [["str", 0.30564311205290795], ["bool", 0.29811180013565036], ["int", 0.10124104042605651], ["list", 0.10038856068653638], ["Type[server.openslides.assignments.models.Assignment]", 0.09928480638752135]], "end_date": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "execution_date": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "external_trigger": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "last_scheduling_decision": [["str", 0.2], ["Optional[\"LastModifiedBy\"]", 0.1], ["property", 0.1], ["dict", 0.1]], "note": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "run_id": [["str", 0.4], ["int", 0.2]], "run_type": [["str", 0.5489397944704434], ["List[Tuple[str, str]]", 0.169155778884081], ["Type[leasing.models.basis_of_renBasisOfRentRate]", 0.0994983444207719], ["leasing.serializers.utils.InstanceDictPrimaryKeyRelatedField", 0.0994983444207719], ["Dict[str, Type[Any]]", 0.08290773780393175]], "start_date": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "state": [["str", 0.29999999999999993], ["bool", 0.19999999999999996], ["Optional[\"StateResourceIdentifier\"]", 0.09999999999999998], ["Optional[str]", 0.09999999999999998], ["Type[demoboapp.models.Group]", 0.09999999999999998]]}}, {"cls_lc": [[115, 0], [122, 5]], "cls_var_ln": {"state": [[118, 4], [118, 9]]}, "cls_var_occur": {"state": []}, "funcs": [], "name": "SetDagRunStateFormSchema", "q_name": "SetDagRunStateFormSchema", "variables": {"state": ""}, "variables_p": {"state": [["str", 0.29999999999999993], ["bool", 0.19999999999999996], ["Optional[\"StateResourceIdentifier\"]", 0.09999999999999998], ["Optional[str]", 0.09999999999999998], ["Type[demoboapp.models.Group]", 0.09999999999999998]]}}, {"cls_lc": [[125, 0], [128, 47]], "cls_var_ln": {"dry_run": [[128, 4], [128, 11]]}, "cls_var_occur": {"dry_run": []}, "funcs": [], "name": "ClearDagRunStateFormSchema", "q_name": "ClearDagRunStateFormSchema", "variables": {"dry_run": ""}, "variables_p": {"dry_run": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]]}}, {"cls_lc": [[131, 0], [135, 31]], "cls_var_ln": {"dag_runs": [[134, 4], [134, 12]], "total_entries": [[135, 4], [135, 17]]}, "cls_var_occur": {"dag_runs": [], "total_entries": []}, "funcs": [], "name": "DAGRunCollection", "q_name": "DAGRunCollection", "variables": {"dag_runs": "builtins.list[airflow.models.dagrun.DagRun]", "total_entries": "builtins.int"}, "variables_p": {"dag_runs": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[138, 0], [142, 32]], "cls_var_ln": {"dag_runs": [[141, 4], [141, 12]], "total_entries": [[142, 4], [142, 17]]}, "cls_var_occur": {"dag_runs": [], "total_entries": []}, "funcs": [], "name": "DAGRunCollectionSchema", "q_name": "DAGRunCollectionSchema", "variables": {"dag_runs": "", "total_entries": ""}, "variables_p": {"dag_runs": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[148, 4], [152, 21]], "cls_var_ln": {"datetimeformat": [[151, 8], [151, 22]], "strict": [[152, 8], [152, 14]]}, "cls_var_occur": {"datetimeformat": [], "strict": []}, "funcs": [], "name": "Meta", "q_name": "DagRunsBatchFormSchema.Meta", "variables": {"datetimeformat": "", "strict": ""}, "variables_p": {"datetimeformat": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "strict": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[145, 0], [166, 85]], "cls_var_ln": {"dag_ids": [[157, 4], [157, 11]], "end_date_gte": [[163, 4], [163, 16]], "end_date_lte": [[164, 4], [164, 16]], "execution_date_gte": [[159, 4], [159, 22]], "execution_date_lte": [[160, 4], [160, 22]], "order_by": [[154, 4], [154, 12]], "page_limit": [[156, 4], [156, 14]], "page_offset": [[155, 4], [155, 15]], "start_date_gte": [[161, 4], [161, 18]], "start_date_lte": [[162, 4], [162, 18]], "states": [[158, 4], [158, 10]], "updated_at_gte": [[165, 4], [165, 18]], "updated_at_lte": [[166, 4], [166, 18]]}, "cls_var_occur": {"dag_ids": [], "end_date_gte": [], "end_date_lte": [], "execution_date_gte": [], "execution_date_lte": [], "order_by": [], "page_limit": [], "page_offset": [], "start_date_gte": [], "start_date_lte": [], "states": [], "updated_at_gte": [], "updated_at_lte": []}, "funcs": [], "name": "DagRunsBatchFormSchema", "q_name": "DagRunsBatchFormSchema", "variables": {"dag_ids": "", "end_date_gte": "", "end_date_lte": "", "execution_date_gte": "", "execution_date_lte": "", "order_by": "", "page_limit": "", "page_offset": "", "start_date_gte": "", "start_date_lte": "", "states": "", "updated_at_gte": "", "updated_at_lte": ""}, "variables_p": {"dag_ids": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "end_date_gte": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "end_date_lte": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "execution_date_gte": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "execution_date_lte": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "order_by": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "page_limit": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "page_offset": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "start_date_gte": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "start_date_lte": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "states": [["str", 0.29999999999999993], ["bool", 0.19999999999999996], ["Optional[\"StateResourceIdentifier\"]", 0.09999999999999998], ["Optional[str]", 0.09999999999999998], ["Type[demoboapp.models.Group]", 0.09999999999999998]], "updated_at_gte": [["str", 0.2], ["Type[schedule.models.events.Occurrence]", 0.1], ["Type[zanhu.users.models.User]", 0.1], ["Type[Python.Django.Django-2-by-Example.Chapter13.educa.courses.models.ItemBase]", 0.1], ["Type[app.models.BaseModelMixin]", 0.1], ["Type[backend.apps.wikipages.models.WikiPage]", 0.1], ["Type[newsletter.models.SignUp]", 0.1]], "updated_at_lte": [["str", 0.2], ["Type[schedule.models.events.Occurrence]", 0.1], ["Type[zanhu.users.models.User]", 0.1], ["Type[Python.Django.Django-2-by-Example.Chapter13.educa.courses.models.ItemBase]", 0.1], ["Type[app.models.BaseModelMixin]", 0.1], ["Type[backend.apps.wikipages.models.WikiPage]", 0.1], ["Type[newsletter.models.SignUp]", 0.1]]}}, {"cls_lc": [[169, 0], [172, 77]], "cls_var_ln": {"note": [[172, 4], [172, 8]]}, "cls_var_occur": {"note": []}, "funcs": [], "name": "SetDagRunNoteFormSchema", "q_name": "SetDagRunNoteFormSchema", "variables": {"note": ""}, "variables_p": {"note": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "json", "typing", "NamedTuple", "marshmallow", "fields", "post_dump", "pre_load", "validate", "marshmallow", "schema", "Schema", "marshmallow", "validate", "Range", "marshmallow_sqlalchemy", "SQLAlchemySchema", "auto_field", "pendulum", "parsing", "ParserError", "airflow", "api_connexion", "exceptions", "BadRequest", "airflow", "api_connexion", "parameters", "validate_istimezone", "airflow", "api_connexion", "schemas", "enum_schemas", "DagStateField", "airflow", "models", "dagrun", "DagRun", "airflow", "utils", "timezone", "airflow", "utils", "state", "DagRunState", "airflow", "utils", "types", "DagRunType"], "mod_var_ln": {"_MISSING": [[52, 0], [52, 8]], "clear_dagrun_form_schema": [[178, 0], [178, 24]], "dagrun_collection_schema": [[176, 0], [176, 24]], "dagrun_schema": [[175, 0], [175, 13]], "dagruns_batch_form_schema": [[179, 0], [179, 25]], "set_dagrun_note_form_schema": [[180, 0], [180, 27]], "set_dagrun_state_form_schema": [[177, 0], [177, 28]]}, "mod_var_occur": {"_MISSING": [["logical_date", "data", "get", "_MISSING"], ["execution_date", "data", "pop", "_MISSING"], ["logical_date", "execution_date", "_MISSING"], ["logical_date", "_MISSING"], ["execution_date", "_MISSING"]], "clear_dagrun_form_schema": [], "dagrun_collection_schema": [], "dagrun_schema": [], "dagruns_batch_form_schema": [], "set_dagrun_note_form_schema": [], "set_dagrun_state_form_schema": []}, "no_types_annot": {"D": 2, "I": 0, "U": 60}, "session_id": "iV3itm-jq6crIkGd0Nd8NvHGwZwDkvVkwC1jdEeMRYs", "set": null, "tc": [false, null], "type_annot_cove": 0.03, "typed_seq": "", "untyped_seq": "", "variables": {"_MISSING": "", "clear_dagrun_form_schema": "", "dagrun_collection_schema": "", "dagrun_schema": "", "dagruns_batch_form_schema": "", "set_dagrun_note_form_schema": "", "set_dagrun_state_form_schema": ""}, "variables_p": {"_MISSING": [["str", 0.14414755311081887], ["Dict[str, Any]", 0.13597462177811143], ["list", 0.11591769503367148], ["List[int]", 0.11104391662860917], ["dict", 0.10530959928211045], ["float", 0.08293317745653232]], "clear_dagrun_form_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dagrun_collection_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dagrun_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dagruns_batch_form_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "set_dagrun_note_form_schema": [["str", 0.7], ["Tuple[str, str, str, str]", 0.09999999999999999], ["bool", 0.09999999999999999]], "set_dagrun_state_form_schema": [["str", 0.7861340001642746], ["Tuple[str, str, str, str]", 0.12008378909661586], ["List[str]", 0.09378221073910953]]}}}