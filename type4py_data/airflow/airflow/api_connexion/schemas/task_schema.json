{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [83, 46]], "cls_var_ln": {"class_ref": [[37, 4], [37, 13]], "depends_on_past": [[47, 4], [47, 19]], "downstream_task_ids": [[62, 4], [62, 23]], "end_date": [[42, 4], [42, 12]], "execution_timeout": [[53, 4], [53, 21]], "extra_links": [[44, 4], [44, 15]], "is_mapped": [[64, 4], [64, 13]], "operator_name": [[38, 4], [38, 17]], "owner": [[40, 4], [40, 9]], "params": [[63, 4], [63, 10]], "pool": [[51, 4], [51, 8]], "pool_slots": [[52, 4], [52, 14]], "priority_weight": [[56, 4], [56, 19]], "queue": [[50, 4], [50, 9]], "retries": [[49, 4], [49, 11]], "retry_delay": [[54, 4], [54, 15]], "retry_exponential_backoff": [[55, 4], [55, 29]], "start_date": [[41, 4], [41, 14]], "sub_dag": [[61, 4], [61, 11]], "task_id": [[39, 4], [39, 11]], "template_fields": [[60, 4], [60, 19]], "trigger_rule": [[43, 4], [43, 16]], "ui_color": [[58, 4], [58, 12]], "ui_fgcolor": [[59, 4], [59, 14]], "wait_for_downstream": [[48, 4], [48, 23]], "weight_rule": [[57, 4], [57, 15]]}, "cls_var_occur": {"class_ref": [], "depends_on_past": [], "downstream_task_ids": [], "end_date": [], "execution_timeout": [], "extra_links": [], "is_mapped": [], "operator_name": [], "owner": [], "params": [], "pool": [], "pool_slots": [], "priority_weight": [], "queue": [], "retries": [], "retry_delay": [], "retry_exponential_backoff": [], "start_date": [], "sub_dag": [], "task_id": [], "template_fields": [], "trigger_rule": [], "ui_color": [], "ui_fgcolor": [], "wait_for_downstream": [], "weight_rule": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [69, 65]], "fn_var_ln": {"result": [[68, 8], [68, 14]]}, "fn_var_occur": {"result": [["result", "ClassReferenceSchema", "dump", "obj"], ["result", "data", "hasattr", "result", "result"]]}, "name": "_get_class_reference", "params": {"obj": ""}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["result", "ClassReferenceSchema", "dump", "obj"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.9153315904169007], ["Optional[str]", 0.08466840958309932]], "self": []}, "q_name": "TaskSchema._get_class_reference", "ret_exprs": ["return result.data if hasattr(result, \"data\") else result"], "ret_type": "", "ret_type_p": [["str", 0.6008109464682543], ["List[str]", 0.1985857930277628]], "variables": {"result": ""}, "variables_p": {"result": [["Dict[str, Any]", 0.3915389415269499], ["dict", 0.20945960284569298], ["Dict[str, str]", 0.07371514284876642], ["OrderedDict[str, Any]", 0.07089960809912281]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [73, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_operator_name", "params": {"obj": ""}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "operator_name"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.4113849430549299], ["int", 0.10613725129759129], ["MutableMapping[str, str]", 0.09747848244093099], ["MutableMapping[str, Any]", 0.08601541893576177], ["Set[str]", 0.08527883195052821]], "self": []}, "q_name": "TaskSchema._get_operator_name", "ret_exprs": ["return obj.operator_name"], "ret_type": "", "ret_type_p": [["str", 0.3984954494835321], ["Dict[str, Type]", 0.19773895265630892], ["int", 0.10252393519471764], ["Optional[str]", 0.09980752946657465]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get the Params defined in a Task.", "long_descr": null, "ret": null}, "fn_lc": [[76, 4], [79, 55]], "fn_var_ln": {"params": [[78, 8], [78, 14]]}, "fn_var_occur": {"params": [["params", "obj", "params"], ["k", "v", "dump", "k", "v", "params", "items"]]}, "name": "_get_params", "params": {"obj": ""}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["params", "obj", "params"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "self": []}, "q_name": "TaskSchema._get_params", "ret_exprs": ["return {k: v.dump() for k, v in params.items()}"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.2954855998963885], ["int", 0.11122749806182558], ["str", 0.11020880979147148], ["bool", 0.09644074166025113], ["Callable[[str], bool]", 0.08781979141713812]], "variables": {"params": ""}, "variables_p": {"params": [["dict", 0.19943851365730653], ["set", 0.13758024420027146], ["frozenset[str]", 0.10275937170122221], ["Dict[str, Any]", 0.10212888971403054], ["bool", 0.09778859252424134], ["Tuple[Any, Literal]", 0.09531251055065702], ["str", 0.08621599304887387]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [83, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_is_mapped", "params": {"obj": ""}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["isinstance", "obj", "MappedOperator"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.3540167980938837], ["bool", 0.2747571713497115], ["Tuple[int, int, int]", 0.10184002466860698]], "self": []}, "q_name": "TaskSchema._get_is_mapped", "ret_exprs": ["return isinstance(obj, MappedOperator)"], "ret_type": "", "ret_type_p": [["str", 0.3540167980938837], ["bool", 0.2747571713497115], ["Tuple[int, int, int]", 0.10184002466860698]], "variables": {}, "variables_p": {}}], "name": "TaskSchema", "q_name": "TaskSchema", "variables": {"class_ref": "", "depends_on_past": "", "downstream_task_ids": "", "end_date": "", "execution_timeout": "", "extra_links": "", "is_mapped": "", "operator_name": "", "owner": "", "params": "", "pool": "", "pool_slots": "", "priority_weight": "", "queue": "", "retries": "", "retry_delay": "", "retry_exponential_backoff": "", "start_date": "", "sub_dag": "", "task_id": "", "template_fields": "", "trigger_rule": "", "ui_color": "", "ui_fgcolor": "", "wait_for_downstream": "", "weight_rule": ""}, "variables_p": {"class_ref": [["str", 0.3264742637432417], ["Type[university.models.Class]", 0.16130655393580123], ["Type[django.applications.catmaid.models.ClassClass]", 0.08814474040685549], ["ClassVar[int]", 0.08579287511407911], ["int", 0.08579287511407911]], "depends_on_past": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "downstream_task_ids": [["int", 0.49999999931338557], ["Optional[str]", 0.4999999991140603], ["str", 1.1269540992908152e-09], ["list", 4.45600062475243e-10]], "end_date": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "execution_timeout": [["int", 0.5143422532208791], ["Callable", 0.10749789294860396]], "extra_links": [["str", 0.3], ["int", 0.19999999999999998], ["bool", 0.09999999999999999], ["Optional[str]", 0.09999999999999999], ["Type[spotcrew_backend.users.models.User]", 0.09999999999999999], ["List[str]", 0.09999999999999999], ["Type[src.uk_improv_guide.uk_improv_guide.models.evenEvent]", 0.09999999999999999]], "is_mapped": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "operator_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]], "owner": [["zerver.models.UserProfile", 0.10000000000000002], ["Type[assets.models.MarineVessel]", 0.10000000000000002], ["Dict[object, Dict[str, Any]]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["int", 0.10000000000000002]], "params": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool_slots": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "priority_weight": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "queue": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "retries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "retry_delay": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "retry_exponential_backoff": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "start_date": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "sub_dag": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "task_id": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "template_fields": [["Tuple[str, str, str, str, str, str]", 0.2857142856828355], ["Tuple[str, str, str]", 0.2857142856828355], ["Tuple[str, str, str, str]", 0.2857142856828355], ["Tuple[str, str, str, str, str]", 0.14285714284141776], ["Dict[str, str]", 7.42502725571635e-11]], "trigger_rule": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "ui_color": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "ui_fgcolor": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "wait_for_downstream": [["str", 0.5], ["bool", 0.2], ["Optional[Union[int, float]]", 0.1], ["Optional[bool]", 0.1], ["Optional[str]", 0.1]], "weight_rule": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[86, 0], [90, 31]], "cls_var_ln": {"tasks": [[89, 4], [89, 9]], "total_entries": [[90, 4], [90, 17]]}, "cls_var_occur": {"tasks": [], "total_entries": []}, "funcs": [], "name": "TaskCollection", "q_name": "TaskCollection", "variables": {"tasks": "builtins.list[airflow.models.operator.Operator]", "total_entries": "builtins.int"}, "variables_p": {"tasks": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[93, 0], [97, 32]], "cls_var_ln": {"tasks": [[96, 4], [96, 9]], "total_entries": [[97, 4], [97, 17]]}, "cls_var_occur": {"tasks": [], "total_entries": []}, "funcs": [], "name": "TaskCollectionSchema", "q_name": "TaskCollectionSchema", "variables": {"tasks": "", "total_entries": ""}, "variables_p": {"tasks": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "NamedTuple", "marshmallow", "Schema", "fields", "airflow", "api_connexion", "schemas", "common_schema", "ClassReferenceSchema", "ColorField", "TimeDeltaSchema", "WeightRuleField", "airflow", "api_connexion", "schemas", "dag_schema", "DAGSchema", "airflow", "models", "mappedoperator", "MappedOperator", "airflow", "models", "operator", "Operator"], "mod_var_ln": {"task_collection_schema": [[101, 0], [101, 22]], "task_schema": [[100, 0], [100, 11]]}, "mod_var_occur": {"task_collection_schema": [], "task_schema": []}, "no_types_annot": {"D": 2, "I": 0, "U": 40}, "session_id": "IJv25YXujbn29UrJ02hPPXH5Grxjd4Nxajw0XOCuPp8", "set": null, "tc": [false, null], "type_annot_cove": 0.05, "typed_seq": "", "untyped_seq": "", "variables": {"task_collection_schema": "", "task_schema": ""}, "variables_p": {"task_collection_schema": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "task_schema": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]]}}}