{"error": null, "response": {"classes": [{"cls_lc": [[34, 4], [37, 22]], "cls_var_ln": {"model": [[37, 8], [37, 13]]}, "cls_var_occur": {"model": []}, "funcs": [], "name": "Meta", "q_name": "DagTagSchema.Meta", "variables": {"model": ""}, "variables_p": {"model": [["Type[apps.blog.models.Post]", 0.1], ["Type[ajapaik.ajapaik.models.GeoTag]", 0.1], ["Type[thanks_python.contributions.models.Commit]", 0.1], ["Type[expressmanage.customers.models.Customer]", 0.1], ["Type[data_capture.models.SubmittedPriceList]", 0.1], ["Type[users.models.User]", 0.1], ["Type[backend.main.models.models.Comment]", 0.1], ["Type[hypha.apply.categories.models.Category]", 0.1], ["Type[backend.seminars.models.SeminarComment]", 0.1]]}}, {"cls_lc": [[31, 0], [39, 23]], "cls_var_ln": {"name": [[39, 4], [39, 8]]}, "cls_var_occur": {"name": []}, "funcs": [], "name": "DagTagSchema", "q_name": "DagTagSchema", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.8999999999999999]]}}, {"cls_lc": [[45, 4], [48, 24]], "cls_var_ln": {"model": [[48, 8], [48, 13]]}, "cls_var_occur": {"model": []}, "funcs": [], "name": "Meta", "q_name": "DAGSchema.Meta", "variables": {"model": ""}, "variables_p": {"model": [["Type[apps.blog.models.Post]", 0.1], ["Type[ajapaik.ajapaik.models.GeoTag]", 0.1], ["Type[thanks_python.contributions.models.Commit]", 0.1], ["Type[expressmanage.customers.models.Customer]", 0.1], ["Type[data_capture.models.SubmittedPriceList]", 0.1], ["Type[users.models.User]", 0.1], ["Type[backend.main.models.models.Comment]", 0.1], ["Type[hypha.apply.categories.models.Category]", 0.1], ["Type[backend.seminars.models.SeminarComment]", 0.1]]}}, {"cls_lc": [[42, 0], [88, 44]], "cls_var_ln": {"dag_id": [[50, 4], [50, 10]], "default_view": [[60, 4], [60, 16]], "description": [[64, 4], [64, 15]], "file_token": [[62, 4], [62, 14]], "fileloc": [[61, 4], [61, 11]], "has_import_errors": [[71, 4], [71, 21]], "has_task_concurrency_limits": [[70, 4], [70, 31]], "is_active": [[53, 4], [53, 13]], "is_paused": [[52, 4], [52, 13]], "is_subdag": [[54, 4], [54, 13]], "last_expired": [[57, 4], [57, 16]], "last_parsed_time": [[55, 4], [55, 20]], "last_pickled": [[56, 4], [56, 16]], "max_active_runs": [[69, 4], [69, 19]], "max_active_tasks": [[68, 4], [68, 20]], "next_dagrun": [[72, 4], [72, 15]], "next_dagrun_create_after": [[75, 4], [75, 28]], "next_dagrun_data_interval_end": [[74, 4], [74, 33]], "next_dagrun_data_interval_start": [[73, 4], [73, 35]], "owners": [[63, 4], [63, 10]], "pickle_id": [[59, 4], [59, 13]], "root_dag_id": [[51, 4], [51, 15]], "schedule_interval": [[65, 4], [65, 21]], "scheduler_lock": [[58, 4], [58, 18]], "tags": [[67, 4], [67, 8]], "timetable_description": [[66, 4], [66, 25]]}, "cls_var_occur": {"dag_id": [], "default_view": [], "description": [], "file_token": [], "fileloc": [], "has_import_errors": [], "has_task_concurrency_limits": [], "is_active": [], "is_paused": [], "is_subdag": [], "last_expired": [], "last_parsed_time": [], "last_pickled": [], "max_active_runs": [], "max_active_tasks": [], "next_dagrun": [], "next_dagrun_create_after": [], "next_dagrun_data_interval_end": [], "next_dagrun_data_interval_start": [], "owners": [], "pickle_id": [], "root_dag_id": [], "schedule_interval": [], "scheduler_lock": [], "tags": [], "timetable_description": []}, "funcs": [{"docstring": {"func": "Convert owners attribute to DAG representation.", "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [82, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_owners", "params": {"obj": "airflow.models.dag.DagModel"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["getattr", "obj", "None"], ["obj", "owners", "split"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["Optional[str]", 0.30428601720912646], ["str", 0.1990861292034878], ["int", 0.16500901317663916]], "self": []}, "q_name": "DAGSchema.get_owners", "ret_exprs": ["return []", "return obj.owners.split(\",\")"], "ret_type": "", "ret_type_p": [["int", 0.23463314942675306], ["str", 0.19077132093570792], ["Dict[str, Any]", 0.10786413065535103]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return file token.", "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [88, 44]], "fn_var_ln": {"serializer": [[87, 8], [87, 18]]}, "fn_var_occur": {"serializer": [["serializer", "URLSafeSerializer", "conf", "get_mandatory_value"], ["serializer", "dumps", "obj", "fileloc"]]}, "name": "get_token", "params": {"obj": "airflow.models.dag.DagModel"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["serializer", "dumps", "obj", "fileloc"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["dict", 0.1814869777425557], ["List[dict]", 0.09918010835408281], ["Dict[str, models.DeviceRow]", 0.06887466862714557], ["Dict[str, Dict[str, Any]]", 0.06857181880110257]], "self": []}, "q_name": "DAGSchema.get_token", "ret_exprs": ["return serializer.dumps(obj.fileloc)"], "ret_type": "", "ret_type_p": [["str", 0.20428670619377054], ["List[str]", 0.19009465179358376], ["Dict[str, Any]", 0.10400524998847606], ["Tuple[Any, Any, Any]", 0.09647516660546385], ["Dict[str, dict]", 0.09639966999547048], ["Union[List, Dict]", 0.09599202432997143]], "variables": {"serializer": ""}, "variables_p": {"serializer": [["list", 0.6999999999999998], ["List[str]", 0.19999999999999996], ["Dict[str, List[Any]]", 0.09999999999999998]]}}], "name": "DAGSchema", "q_name": "DAGSchema", "variables": {"dag_id": "", "default_view": "", "description": "", "file_token": "", "fileloc": "", "has_import_errors": "", "has_task_concurrency_limits": "", "is_active": "", "is_paused": "", "is_subdag": "", "last_expired": "", "last_parsed_time": "", "last_pickled": "", "max_active_runs": "", "max_active_tasks": "", "next_dagrun": "", "next_dagrun_create_after": "", "next_dagrun_data_interval_end": "", "next_dagrun_data_interval_start": "", "owners": "", "pickle_id": "", "root_dag_id": "", "schedule_interval": "", "scheduler_lock": "", "tags": "", "timetable_description": ""}, "variables_p": {"dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "default_view": [["str", 0.4], ["int", 0.30000000000000004], ["List[Tuple[str, int]]", 0.1]], "description": [["str", 0.6999999999999998], ["Optional[\"LocalizedString\"]", 0.09999999999999998], ["\"LocalizedString\"", 0.09999999999999998], ["Optional[str]", 0.09999999999999998]], "file_token": [["int", 0.1720197500016577], ["Tuple[Tuple[Literal, Any], Tuple[Literal, Any], Tuple[Literal, Any], Tuple[Literal, Any], Tuple[Literal, Any]]", 0.12101113773930805], ["Type[AbstractSet[Any]]", 0.11411751074102405], ["Optional[str]", 0.1012054307377257], ["List[str]", 0.08907819585090004], ["Dict[str, str]", 0.07487306600329652]], "fileloc": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "has_import_errors": [["int", 0.6], ["str", 0.3], ["Type[ValueError]", 0.09999999999999999]], "has_task_concurrency_limits": [["bool", 0.5], ["int", 0.2], ["Iterable[str]", 0.1], ["float", 0.1], ["str", 0.1]], "is_active": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "is_paused": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "is_subdag": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "last_expired": [["str", 0.2], ["Optional[\"LastModifiedBy\"]", 0.1], ["property", 0.1], ["dict", 0.1]], "last_parsed_time": [["float", 0.2], ["str", 0.1], ["Dict[Tuple[int, int], float]", 0.1]], "last_pickled": [["str", 0.2], ["Optional[\"LastModifiedBy\"]", 0.1], ["property", 0.1], ["dict", 0.1]], "max_active_runs": [["str", 0.6], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["bool", 0.09999999999999999]], "max_active_tasks": [["str", 0.3], ["int", 0.3], ["bool", 0.19999999999999998], ["Optional[int]", 0.09999999999999999], ["list", 0.09999999999999999]], "next_dagrun": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "next_dagrun_create_after": [["int", 0.7], ["str", 0.3]], "next_dagrun_data_interval_end": [["str", 0.6], ["int", 0.2], ["Type[bytes]", 0.1]], "next_dagrun_data_interval_start": [["int", 0.8136629299011027], ["str", 0.10145839375840032]], "owners": [["zerver.models.UserProfile", 0.10000000000000002], ["Type[assets.models.MarineVessel]", 0.10000000000000002], ["Dict[object, Dict[str, Any]]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["int", 0.10000000000000002]], "pickle_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "root_dag_id": [["str", 0.8767651771292272], ["int", 0.12323482287077298]], "schedule_interval": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "scheduler_lock": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "tags": [["str", 0.4], ["int", 0.2], ["Type[mingflix.videos.models.Video]", 0.1], ["Optional[Dict[str, Any]]", 0.1], ["Type[kippo.tasks.models.KippoTaskStatus]", 0.1], ["Type[nomadgram.images.models.Image]", 0.1]], "timetable_description": [["str", 0.4], ["int", 0.4], ["Optional[\"LocalizedString\"]", 0.1], ["List[str]", 0.1]]}}, {"cls_lc": [[91, 0], [147, 55]], "cls_var_ln": {"catchup": [[96, 4], [96, 11]], "concurrency": [[98, 4], [98, 15]], "dag_run_timeout": [[101, 4], [101, 19]], "default_view": [[103, 4], [103, 16]], "doc_md": [[102, 4], [102, 10]], "end_date": [[109, 4], [109, 12]], "is_active": [[107, 4], [107, 13]], "is_paused": [[106, 4], [106, 13]], "is_paused_upon_creation": [[108, 4], [108, 27]], "last_loaded": [[112, 4], [112, 15]], "max_active_tasks": [[99, 4], [99, 20]], "orientation": [[97, 4], [97, 15]], "owners": [[94, 4], [94, 10]], "params": [[104, 4], [104, 10]], "render_template_as_native_obj": [[111, 4], [111, 33]], "start_date": [[100, 4], [100, 14]], "tags": [[105, 4], [105, 8]], "template_search_path": [[110, 4], [110, 24]], "timezone": [[95, 4], [95, 12]]}, "cls_var_occur": {"catchup": [], "concurrency": [], "dag_run_timeout": [], "default_view": [], "doc_md": [], "end_date": [], "is_active": [], "is_paused": [], "is_paused_upon_creation": [], "last_loaded": [], "max_active_tasks": [], "orientation": [], "owners": [], "params": [], "render_template_as_native_obj": [], "start_date": [], "tags": [], "template_search_path": [], "timezone": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [116, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_concurrency", "params": {"obj": "airflow.DAG"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "max_active_tasks"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["int", 0.9999999997500109], ["float", 9.470330144236786e-11]], "self": []}, "q_name": "DAGDetailSchema.get_concurrency", "ret_exprs": ["return obj.max_active_tasks"], "ret_type": "", "ret_type_p": [["int", 0.1836050856977531], ["Dict[str, Any]", 0.09935880550638854], ["str", 0.09334221660710162]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Dumps tags as objects.", "long_descr": null, "ret": null}, "fn_lc": [[119, 4], [124, 17]], "fn_var_ln": {"tags": [[121, 8], [121, 12]]}, "fn_var_occur": {"tags": [["tags", "obj", "tags"], ["DagTagSchema", "dump", "dict", "name", "tag", "tag", "tags"]]}, "name": "get_tags", "params": {"obj": "airflow.DAG"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["tags", "obj", "tags"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.2893483115538432], ["Optional[str]", 0.1012221613753645]], "self": []}, "q_name": "DAGDetailSchema.get_tags", "ret_exprs": ["return [DagTagSchema().dump(dict(name=tag)) for tag in tags]", "return []"], "ret_type": "", "ret_type_p": [["str", 0.4502598197837715], ["Optional[str]", 0.1644645464175357], ["dict", 0.15114520888266905], ["List[str]", 0.15114520888266905]], "variables": {"tags": ""}, "variables_p": {"tags": [["str", 0.2781958649287016], ["int", 0.21592970320926175], ["dict", 0.1445221052083246], ["Final", 0.09560368936747982], ["Dict[str, str]", 0.09494172091404848], ["Dict[bytes, bytes]", 0.0793067691063543]]}}, {"docstring": {"func": "Convert owners attribute to DAG representation.", "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [131, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_owners", "params": {"obj": "airflow.DAG"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["getattr", "obj", "None"], ["obj", "owner", "split"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["Optional[str]", 0.30428601720912646], ["str", 0.1990861292034878], ["int", 0.16500901317663916]], "self": []}, "q_name": "DAGDetailSchema.get_owners", "ret_exprs": ["return []", "return obj.owner.split(\",\")"], "ret_type": "", "ret_type_p": [["int", 0.23463314942675306], ["str", 0.19077132093570792], ["Dict[str, Any]", 0.10786413065535103]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Checks entry in DAG table to see if this DAG is paused.", "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [136, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_is_paused", "params": {"obj": "airflow.DAG"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "get_is_paused"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["int", 0.4372483494034937], ["salon.models.Stylist", 0.05026081954182994]], "self": []}, "q_name": "DAGDetailSchema.get_is_paused", "ret_exprs": ["return obj.get_is_paused()"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.10744352096967263], ["zerver.models.UserProfile", 0.09782174336332886], ["Optional[str]", 0.09645587313867511], ["bool", 0.08961434948223351]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Checks entry in DAG table to see if this DAG is active.", "long_descr": null, "ret": null}, "fn_lc": [[139, 4], [141, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_is_active", "params": {"obj": "airflow.DAG"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["obj", "get_is_active"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["int", 0.4372483494034937], ["salon.models.Stylist", 0.05026081954182994]], "self": []}, "q_name": "DAGDetailSchema.get_is_active", "ret_exprs": ["return obj.get_is_active()"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.10744352096967263], ["zerver.models.UserProfile", 0.09782174336332886], ["Optional[str]", 0.09645587313867511], ["bool", 0.08961434948223351]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get the Params defined in a DAG.", "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [147, 55]], "fn_var_ln": {"params": [[146, 8], [146, 14]]}, "fn_var_occur": {"params": [["params", "obj", "params"], ["k", "v", "dump", "k", "v", "params", "items"]]}, "name": "get_params", "params": {"obj": "airflow.DAG"}, "params_descr": {"obj": ""}, "params_occur": {"obj": [["params", "obj", "params"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "self": []}, "q_name": "DAGDetailSchema.get_params", "ret_exprs": ["return {k: v.dump() for k, v in params.items()}"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.2954855998963885], ["int", 0.11122749806182558], ["str", 0.11020880979147148], ["bool", 0.09644074166025113], ["Callable[[str], bool]", 0.08781979141713812]], "variables": {"params": ""}, "variables_p": {"params": [["dict", 0.19943851365730653], ["set", 0.13758024420027146], ["frozenset[str]", 0.10275937170122221], ["Dict[str, Any]", 0.10212888971403054], ["bool", 0.09778859252424134], ["Tuple[Any, Literal]", 0.09531251055065702], ["str", 0.08621599304887387]]}}], "name": "DAGDetailSchema", "q_name": "DAGDetailSchema", "variables": {"catchup": "", "concurrency": "", "dag_run_timeout": "", "default_view": "", "doc_md": "", "end_date": "", "is_active": "", "is_paused": "", "is_paused_upon_creation": "", "last_loaded": "", "max_active_tasks": "", "orientation": "", "owners": "", "params": "", "render_template_as_native_obj": "", "start_date": "", "tags": "", "template_search_path": "", "timezone": ""}, "variables_p": {"catchup": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "concurrency": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dag_run_timeout": [["bool", 0.6569687029766969], ["str", 0.13139374059533937], ["int", 0.08488626499662888]], "default_view": [["str", 0.4], ["int", 0.30000000000000004], ["List[Tuple[str, int]]", 0.1]], "doc_md": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "end_date": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "is_active": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "is_paused": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "is_paused_upon_creation": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "last_loaded": [["Type[Tuple[int, Any]]", 0.13228597462711172], ["Type[weather.models.AirPollution]", 0.09641266948587648], ["Type[orders.models.Order]", 0.09641266948587648], ["str", 0.09641266948587648], ["Type[projeccore.models.LoadSource]", 0.09641266948587648]], "max_active_tasks": [["str", 0.3], ["int", 0.3], ["bool", 0.19999999999999998], ["Optional[int]", 0.09999999999999999], ["list", 0.09999999999999999]], "orientation": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "owners": [["zerver.models.UserProfile", 0.10000000000000002], ["Type[assets.models.MarineVessel]", 0.10000000000000002], ["Dict[object, Dict[str, Any]]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["int", 0.10000000000000002]], "params": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "render_template_as_native_obj": [["str", 0.6305657054832502], ["Set[str]", 0.1056251540797547], ["List[Union[Any, Any, Any]]", 0.08150587512890271], ["Dict[int, str]", 0.08150587512890271]], "start_date": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "tags": [["str", 0.4], ["int", 0.2], ["Type[mingflix.videos.models.Video]", 0.1], ["Optional[Dict[str, Any]]", 0.1], ["Type[kippo.tasks.models.KippoTaskStatus]", 0.1], ["Type[nomadgram.images.models.Image]", 0.1]], "template_search_path": [["str", 0.8746959002915343], ["bool", 0.06265204985423298], ["List[str]", 0.06265204985423298]], "timezone": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[150, 0], [154, 31]], "cls_var_ln": {"dags": [[153, 4], [153, 8]], "total_entries": [[154, 4], [154, 17]]}, "cls_var_occur": {"dags": [], "total_entries": []}, "funcs": [], "name": "DAGCollection", "q_name": "DAGCollection", "variables": {"dags": "builtins.list[airflow.models.dag.DagModel]", "total_entries": "builtins.int"}, "variables_p": {"dags": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[157, 0], [161, 32]], "cls_var_ln": {"dags": [[160, 4], [160, 8]], "total_entries": [[161, 4], [161, 17]]}, "cls_var_occur": {"dags": [], "total_entries": []}, "funcs": [], "name": "DAGCollectionSchema", "q_name": "DAGCollectionSchema", "variables": {"dags": "", "total_entries": ""}, "variables_p": {"dags": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "NamedTuple", "itsdangerous", "URLSafeSerializer", "marshmallow", "Schema", "fields", "marshmallow_sqlalchemy", "SQLAlchemySchema", "auto_field", "airflow", "DAG", "airflow", "api_connexion", "schemas", "common_schema", "ScheduleIntervalSchema", "TimeDeltaSchema", "TimezoneField", "airflow", "configuration", "conf", "airflow", "models", "dag", "DagModel", "DagTag"], "mod_var_ln": {"dag_detail_schema": [[167, 0], [167, 17]], "dag_schema": [[165, 0], [165, 10]], "dags_collection_schema": [[164, 0], [164, 22]]}, "mod_var_occur": {"dag_detail_schema": [], "dag_schema": [], "dags_collection_schema": []}, "no_types_annot": {"D": 10, "I": 0, "U": 63}, "session_id": "kw-azL6t4WDqQDLOzWwOhcicewnGhYrdr1N5QynuWLg", "set": null, "tc": [false, null], "type_annot_cove": 0.14, "typed_seq": "", "untyped_seq": "", "variables": {"dag_detail_schema": "", "dag_schema": "", "dags_collection_schema": ""}, "variables_p": {"dag_detail_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dag_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dags_collection_schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}