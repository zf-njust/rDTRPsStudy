{"error": null, "response": {"classes": [{"cls_lc": [[39, 4], [42, 28]], "cls_var_ln": {"model": [[42, 8], [42, 13]]}, "cls_var_occur": {"model": []}, "funcs": [], "name": "Meta", "q_name": "TaskInstanceSchema.Meta", "variables": {"model": ""}, "variables_p": {"model": [["Type[apps.blog.models.Post]", 0.1], ["Type[ajapaik.ajapaik.models.GeoTag]", 0.1], ["Type[thanks_python.contributions.models.Commit]", 0.1], ["Type[expressmanage.customers.models.Customer]", 0.1], ["Type[data_capture.models.SubmittedPriceList]", 0.1], ["Type[users.models.User]", 0.1], ["Type[backend.main.models.models.Comment]", 0.1], ["Type[hypha.apply.categories.models.Category]", 0.1], ["Type[backend.seminars.models.SeminarComment]", 0.1]]}}, {"cls_lc": [[36, 0], [80, 47]], "cls_var_ln": {"_try_number": [[53, 4], [53, 15]], "dag_id": [[45, 4], [45, 10]], "duration": [[51, 4], [51, 12]], "end_date": [[50, 4], [50, 12]], "execution_date": [[48, 4], [48, 18]], "executor_config": [[64, 4], [64, 19]], "hostname": [[55, 4], [55, 12]], "map_index": [[47, 4], [47, 13]], "max_tries": [[54, 4], [54, 13]], "note": [[65, 4], [65, 8]], "operator": [[61, 4], [61, 12]], "pid": [[63, 4], [63, 7]], "pool": [[57, 4], [57, 8]], "pool_slots": [[58, 4], [58, 14]], "priority_weight": [[60, 4], [60, 19]], "queue": [[59, 4], [59, 9]], "queued_dttm": [[62, 4], [62, 15]], "rendered_fields": [[67, 4], [67, 19]], "run_id": [[46, 4], [46, 10]], "sla_miss": [[66, 4], [66, 12]], "start_date": [[49, 4], [49, 14]], "state": [[52, 4], [52, 9]], "task_id": [[44, 4], [44, 11]], "trigger": [[68, 4], [68, 11]], "triggerer_job": [[69, 4], [69, 17]], "unixname": [[56, 4], [56, 12]]}, "cls_var_occur": {"_try_number": [], "dag_id": [], "duration": [], "end_date": [], "execution_date": [], "executor_config": [], "hostname": [], "map_index": [], "max_tries": [], "note": [], "operator": [], "pid": [], "pool": [], "pool_slots": [], "priority_weight": [], "queue": [], "queued_dttm": [], "rendered_fields": [], "run_id": [], "sla_miss": [], "start_date": [], "state": [], "task_id": [], "trigger": [], "triggerer_job": [], "unixname": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [80, 47]], "fn_var_ln": {"slamiss_instance": [[76, 12], [76, 28]]}, "fn_var_occur": {"slamiss_instance": [["slamiss_instance", "obj"], ["get_value", "slamiss_instance", "attr", "default"]]}, "name": "get_attribute", "params": {"attr": "", "default": "", "obj": "", "self": ""}, "params_descr": {"attr": "", "default": "", "obj": "", "self": ""}, "params_occur": {"attr": [["get_value", "slamiss_instance", "attr", "default"], ["get_value", "obj", "attr", "default"]], "default": [["get_value", "slamiss_instance", "attr", "default"], ["get_value", "obj", "default"], ["get_value", "obj", "attr", "default"]], "obj": [["slamiss_instance", "obj"], ["get_value", "obj", "default"], ["get_value", "obj", "attr", "default"]], "self": []}, "params_p": {"args": [], "attr": [["str", 0.44823016167119867], ["Type[T]", 0.13477050638146812], ["Optional[str]", 0.10066991799398317], ["bool", 0.09573056272894231]], "default": [["zerver.models.UserProfile", 0.18760495549187153], ["int", 0.10257796981488682], ["bool", 0.09829647567803544]], "kwargs": [], "obj": [["str", 0.31325137302259853], ["dict", 0.19879010729059587], ["utils.clienClient", 0.09830762174878563], ["Optional[str]", 0.09728055317326419], ["bool", 0.09728055317326419]], "self": []}, "q_name": "TaskInstanceSchema.get_attribute", "ret_exprs": ["return get_value(slamiss_instance, attr, default)", "return get_value(obj[0], \"rendered_task_instance_fields.rendered_fields\", default)", "return get_value(obj[0], attr, default)"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.11360855944768539], ["Optional[bool]", 0.113541752395412], ["str", 0.11157795110093603], ["excars.models.user.User", 0.09795957374180712], ["zerver.models.UserProfile", 0.09737655615385593], ["Iterable[str]", 0.09714216249320898], ["core.models.User", 0.09574677611737978], ["tracim.models.User", 0.09400214038126904], ["Dict[str, Any]", 0.09013424908229219], ["bool", 0.08891027908615358]], "variables": {"slamiss_instance": ""}, "variables_p": {"slamiss_instance": [["str", 0.1809838628957426], ["Optional[List[Any]]", 0.12402189152261234], ["legistar.models.MatterHistory", 0.09966657227163503], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09934034347038341]]}}], "name": "TaskInstanceSchema", "q_name": "TaskInstanceSchema", "variables": {"_try_number": "", "dag_id": "", "duration": "", "end_date": "", "execution_date": "", "executor_config": "", "hostname": "", "map_index": "", "max_tries": "", "note": "", "operator": "", "pid": "", "pool": "", "pool_slots": "", "priority_weight": "", "queue": "", "queued_dttm": "", "rendered_fields": "", "run_id": "", "sla_miss": "", "start_date": "", "state": "", "task_id": "", "trigger": "", "triggerer_job": "", "unixname": ""}, "variables_p": {"_try_number": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "duration": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "end_date": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "execution_date": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "executor_config": [["bool", 0.30000000000000004], ["Dict[str, Union[Any, int, str]]", 0.1], ["str", 0.1], ["Dict[str, Union[Any, Any, Any]]", 0.1], ["Dict[str, Union[int, str]]", 0.1], ["Dict[str, Union[None, float, str]]", 0.1], ["Dict[str, Dict[str, Any]]", 0.1]], "hostname": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "map_index": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "max_tries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "note": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "operator": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pid": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool_slots": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "priority_weight": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "queue": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "queued_dttm": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "rendered_fields": [["str", 0.7], ["Dict[str, str]", 0.1], ["int", 0.1], ["Tuple[str]", 0.1]], "run_id": [["str", 0.4], ["int", 0.2]], "sla_miss": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "start_date": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "state": [["str", 0.29999999999999993], ["bool", 0.19999999999999996], ["Optional[\"StateResourceIdentifier\"]", 0.09999999999999998], ["Optional[str]", 0.09999999999999998], ["Type[demoboapp.models.Group]", 0.09999999999999998]], "task_id": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "trigger": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "triggerer_job": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "unixname": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[83, 0], [87, 31]], "cls_var_ln": {"task_instances": [[86, 4], [86, 18]], "total_entries": [[87, 4], [87, 17]]}, "cls_var_occur": {"task_instances": [], "total_entries": []}, "funcs": [], "name": "TaskInstanceCollection", "q_name": "TaskInstanceCollection", "variables": {"task_instances": "builtins.list[builtins.tuple[airflow.models.TaskInstance, SlaMiss | None]]", "total_entries": "builtins.int"}, "variables_p": {"task_instances": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[90, 0], [94, 32]], "cls_var_ln": {"task_instances": [[93, 4], [93, 18]], "total_entries": [[94, 4], [94, 17]]}, "cls_var_occur": {"task_instances": [], "total_entries": []}, "funcs": [], "name": "TaskInstanceCollectionSchema", "q_name": "TaskInstanceCollectionSchema", "variables": {"task_instances": "", "total_entries": ""}, "variables_p": {"task_instances": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "total_entries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[97, 0], [113, 56]], "cls_var_ln": {"dag_ids": [[102, 4], [102, 11]], "duration_gte": [[109, 4], [109, 16]], "duration_lte": [[110, 4], [110, 16]], "end_date_gte": [[107, 4], [107, 16]], "end_date_lte": [[108, 4], [108, 16]], "execution_date_gte": [[103, 4], [103, 22]], "execution_date_lte": [[104, 4], [104, 22]], "page_limit": [[101, 4], [101, 14]], "page_offset": [[100, 4], [100, 15]], "pool": [[112, 4], [112, 8]], "queue": [[113, 4], [113, 9]], "start_date_gte": [[105, 4], [105, 18]], "start_date_lte": [[106, 4], [106, 18]], "state": [[111, 4], [111, 9]]}, "cls_var_occur": {"dag_ids": [], "duration_gte": [], "duration_lte": [], "end_date_gte": [], "end_date_lte": [], "execution_date_gte": [], "execution_date_lte": [], "page_limit": [], "page_offset": [], "pool": [], "queue": [], "start_date_gte": [], "start_date_lte": [], "state": []}, "funcs": [], "name": "TaskInstanceBatchFormSchema", "q_name": "TaskInstanceBatchFormSchema", "variables": {"dag_ids": "", "duration_gte": "", "duration_lte": "", "end_date_gte": "", "end_date_lte": "", "execution_date_gte": "", "execution_date_lte": "", "page_limit": "", "page_offset": "", "pool": "", "queue": "", "start_date_gte": "", "start_date_lte": "", "state": ""}, "variables_p": {"dag_ids": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "duration_gte": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "duration_lte": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "end_date_gte": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "end_date_lte": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "execution_date_gte": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "execution_date_lte": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "page_limit": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "page_offset": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "pool": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "queue": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "start_date_gte": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "start_date_lte": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "state": [["str", 0.29999999999999993], ["bool", 0.19999999999999996], ["Optional[\"StateResourceIdentifier\"]", 0.09999999999999998], ["Optional[str]", 0.09999999999999998], ["Type[demoboapp.models.Group]", 0.09999999999999998]]}}, {"cls_lc": [[116, 0], [147, 91]], "cls_var_ln": {"dag_run_id": [[128, 4], [128, 14]], "dry_run": [[119, 4], [119, 11]], "end_date": [[121, 4], [121, 12]], "include_downstream": [[130, 4], [130, 22]], "include_future": [[131, 4], [131, 18]], "include_parentdag": [[125, 4], [125, 21]], "include_past": [[132, 4], [132, 16]], "include_subdags": [[124, 4], [124, 19]], "include_upstream": [[129, 4], [129, 20]], "only_failed": [[122, 4], [122, 15]], "only_running": [[123, 4], [123, 16]], "reset_dag_runs": [[126, 4], [126, 18]], "start_date": [[120, 4], [120, 14]], "task_ids": [[127, 4], [127, 12]]}, "cls_var_occur": {"dag_run_id": [], "dry_run": [], "end_date": [], "include_downstream": [], "include_future": [], "include_parentdag": [], "include_past": [], "include_subdags": [], "include_upstream": [], "only_failed": [], "only_running": [], "reset_dag_runs": [], "start_date": [], "task_ids": []}, "funcs": [{"docstring": {"func": "Validates clear task instance form.", "long_descr": null, "ret": null}, "fn_lc": [[135, 4], [147, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "validate_form", "params": {"data": "", "kwargs": "", "self": ""}, "params_descr": {"data": "", "kwargs": "", "self": ""}, "params_occur": {"data": [["data", "data"], ["data", "data"], ["data", "data"], ["data", "data", "data"], ["data", "data"], ["data", "data"]], "kwargs": [], "self": []}, "params_p": {"args": [], "data": [["dict", 0.4765235614607894], ["Union[Dict, None]", 0.1555746083785135], ["List[str]", 0.09935346536579025], ["str", 0.08974343978392253], ["List[Tuple]", 0.08704600998105531]], "kwargs": [], "self": []}, "q_name": "ClearTaskInstanceFormSchema.validate_form", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "ClearTaskInstanceFormSchema", "q_name": "ClearTaskInstanceFormSchema", "variables": {"dag_run_id": "", "dry_run": "", "end_date": "", "include_downstream": "", "include_future": "", "include_parentdag": "", "include_past": "", "include_subdags": "", "include_upstream": "", "only_failed": "", "only_running": "", "reset_dag_runs": "", "start_date": "", "task_ids": ""}, "variables_p": {"dag_run_id": [["str", 0.5980153549176938], ["int", 0.11822325771466384], ["Optional[str]", 0.11822325771466384]], "dry_run": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "end_date": [["str", 0.2], ["Type[leasing.models.decision.Decision]", 0.1]], "include_downstream": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_future": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_parentdag": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_past": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_subdags": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_upstream": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "only_failed": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "only_running": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "reset_dag_runs": [["str", 0.6], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["bool", 0.09999999999999999]], "start_date": [["str", 0.10000000000000002], ["Type[app.models.entity.EntityToEntityRel]", 0.10000000000000002], ["Optional[str]", 0.10000000000000002], ["Type[leasing.models.renContractRent]", 0.10000000000000002], ["Type[leasing.models.renIndexAdjustedRent]", 0.10000000000000002], ["Type[finances.models.DiscountBase]", 0.10000000000000002], ["Type[guild_calendar.models.Event]", 0.10000000000000002]], "task_ids": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}, {"cls_lc": [[150, 0], [172, 97]], "cls_var_ln": {"dag_run_id": [[156, 4], [156, 14]], "dry_run": [[153, 4], [153, 11]], "execution_date": [[155, 4], [155, 18]], "include_downstream": [[158, 4], [158, 22]], "include_future": [[159, 4], [159, 18]], "include_past": [[160, 4], [160, 16]], "include_upstream": [[157, 4], [157, 20]], "new_state": [[161, 4], [161, 13]], "task_id": [[154, 4], [154, 11]]}, "cls_var_occur": {"dag_run_id": [], "dry_run": [], "execution_date": [], "include_downstream": [], "include_future": [], "include_past": [], "include_upstream": [], "new_state": [], "task_id": []}, "funcs": [{"docstring": {"func": "Validates set task instance state form.", "long_descr": null, "ret": null}, "fn_lc": [[169, 4], [172, 97]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "validate_form", "params": {"data": "", "kwargs": "", "self": ""}, "params_descr": {"data": "", "kwargs": "", "self": ""}, "params_occur": {"data": [["exactly_one", "data", "get", "data", "get"]], "kwargs": [], "self": []}, "params_p": {"args": [], "data": [["dict", 0.816349739349413], ["Dict[str, Any]", 0.121534558270824], ["List[str]", 0.0621157023797631]], "kwargs": [], "self": []}, "q_name": "SetTaskInstanceStateFormSchema.validate_form", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "SetTaskInstanceStateFormSchema", "q_name": "SetTaskInstanceStateFormSchema", "variables": {"dag_run_id": "", "dry_run": "", "execution_date": "", "include_downstream": "", "include_future": "", "include_past": "", "include_upstream": "", "new_state": "", "task_id": ""}, "variables_p": {"dag_run_id": [["str", 0.5980153549176938], ["int", 0.11822325771466384], ["Optional[str]", 0.11822325771466384]], "dry_run": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "execution_date": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "include_downstream": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_future": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_past": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "include_upstream": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "new_state": [["\"StateReference\"", 0.33333333328770043], ["str", 0.16666666667540306], ["Dict[str, Any]", 0.16666666664385021], ["Optional[str]", 0.16666666664385021], ["raiden.transfer.mediated_transfer.state.TargetTransferState", 0.16666666664385021], ["int", 3.251287002433023e-11], ["dict", 3.0937928923376636e-11]], "task_id": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}, {"cls_lc": [[175, 0], [184, 5]], "cls_var_ln": {"dry_run": [[178, 4], [178, 11]], "new_state": [[179, 4], [179, 13]]}, "cls_var_occur": {"dry_run": [], "new_state": []}, "funcs": [], "name": "SetSingleTaskInstanceStateFormSchema", "q_name": "SetSingleTaskInstanceStateFormSchema", "variables": {"dry_run": "", "new_state": ""}, "variables_p": {"dry_run": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "new_state": [["\"StateReference\"", 0.33333333328770043], ["str", 0.16666666667540306], ["Dict[str, Any]", 0.16666666664385021], ["Optional[str]", 0.16666666664385021], ["raiden.transfer.mediated_transfer.state.TargetTransferState", 0.16666666664385021], ["int", 3.251287002433023e-11], ["dict", 3.0937928923376636e-11]]}}, {"cls_lc": [[187, 0], [193, 38]], "cls_var_ln": {"dag_id": [[192, 4], [192, 10]], "execution_date": [[193, 4], [193, 18]], "run_id": [[191, 4], [191, 10]], "task_id": [[190, 4], [190, 11]]}, "cls_var_occur": {"dag_id": [], "execution_date": [], "run_id": [], "task_id": []}, "funcs": [], "name": "TaskInstanceReferenceSchema", "q_name": "TaskInstanceReferenceSchema", "variables": {"dag_id": "", "execution_date": "", "run_id": "", "task_id": ""}, "variables_p": {"dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "execution_date": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "run_id": [["str", 0.4], ["int", 0.2]], "task_id": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}, {"cls_lc": [[196, 0], [199, 92]], "cls_var_ln": {"task_instances": [[199, 4], [199, 18]]}, "cls_var_occur": {"task_instances": []}, "funcs": [], "name": "TaskInstanceReferenceCollection", "q_name": "TaskInstanceReferenceCollection", "variables": {"task_instances": "builtins.list[builtins.tuple[airflow.models.TaskInstance, builtins.str]]"}, "variables_p": {"task_instances": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]]}}, {"cls_lc": [[202, 0], [205, 76]], "cls_var_ln": {"task_instances": [[205, 4], [205, 18]]}, "cls_var_occur": {"task_instances": []}, "funcs": [], "name": "TaskInstanceReferenceCollectionSchema", "q_name": "TaskInstanceReferenceCollectionSchema", "variables": {"task_instances": ""}, "variables_p": {"task_instances": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]]}}, {"cls_lc": [[208, 0], [213, 77]], "cls_var_ln": {"map_index": [[212, 4], [212, 13]], "note": [[213, 4], [213, 8]]}, "cls_var_occur": {"map_index": [], "note": []}, "funcs": [], "name": "SetTaskInstanceNoteFormSchema", "q_name": "SetTaskInstanceNoteFormSchema", "variables": {"map_index": "", "note": ""}, "variables_p": {"map_index": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "note": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "NamedTuple", "marshmallow", "Schema", "ValidationError", "fields", "validate", "validates_schema", "marshmallow", "utils", "get_value", "marshmallow_sqlalchemy", "SQLAlchemySchema", "auto_field", "airflow", "api_connexion", "parameters", "validate_istimezone", "airflow", "api_connexion", "schemas", "common_schema", "JsonObjectField", "airflow", "api_connexion", "schemas", "enum_schemas", "TaskInstanceStateField", "airflow", "api_connexion", "schemas", "job_schema", "JobSchema", "airflow", "api_connexion", "schemas", "sla_miss_schema", "SlaMissSchema", "airflow", "api_connexion", "schemas", "trigger_schema", "TriggerSchema", "airflow", "models", "SlaMiss", "TaskInstance", "airflow", "utils", "helpers", "exactly_one", "airflow", "utils", "state", "TaskInstanceState"], "mod_var_ln": {"clear_task_instance_form": [[219, 0], [219, 24]], "set_single_task_instance_state_form": [[221, 0], [221, 35]], "set_task_instance_note_form_schema": [[224, 0], [224, 34]], "set_task_instance_state_form": [[220, 0], [220, 28]], "task_instance_batch_form": [[218, 0], [218, 24]], "task_instance_collection_schema": [[217, 0], [217, 31]], "task_instance_reference_collection_schema": [[223, 0], [223, 41]], "task_instance_reference_schema": [[222, 0], [222, 30]], "task_instance_schema": [[216, 0], [216, 20]]}, "mod_var_occur": {"clear_task_instance_form": [], "set_single_task_instance_state_form": [], "set_task_instance_note_form_schema": [], "set_task_instance_state_form": [], "task_instance_batch_form": [], "task_instance_collection_schema": [], "task_instance_reference_collection_schema": [], "task_instance_reference_schema": [], "task_instance_schema": []}, "no_types_annot": {"D": 3, "I": 0, "U": 95}, "session_id": "6MZj9W_q_f3lFMlADESoX6mF2EDqD-6rGngpLbJE1u0", "set": null, "tc": [false, null], "type_annot_cove": 0.03, "typed_seq": "", "untyped_seq": "", "variables": {"clear_task_instance_form": "", "set_single_task_instance_state_form": "", "set_task_instance_note_form_schema": "", "set_task_instance_state_form": "", "task_instance_batch_form": "", "task_instance_collection_schema": "", "task_instance_reference_collection_schema": "", "task_instance_reference_schema": "", "task_instance_schema": ""}, "variables_p": {"clear_task_instance_form": [["bool", 0.5], ["int", 0.2], ["Iterable[str]", 0.1], ["float", 0.1], ["str", 0.1]], "set_single_task_instance_state_form": [["str", 0.7646969207353393], ["int", 0.11610005297524204], ["List[str]", 0.06773638591028268], ["Type[List[str]]", 0.05146664037913582]], "set_task_instance_note_form_schema": [["List[str]", 0.16846182647762228], ["set", 0.1318318356395423], ["int", 0.08338457942891059], ["str", 0.06421421410072542], ["Dict[Any, str]", 0.06110214145985784], ["Dict[str, Union[Any, Any, Any, Any]]", 0.05490313714007894]], "set_task_instance_state_form": [["str", 0.21562778681439965], ["bool", 0.1860244112682486], ["Type[todo.models.Task]", 0.14369284161432788], ["List[Dict[str, str]]", 0.14369284161432788], ["list", 0.14369284161432788], ["mode.utils.Counter[str]", 0.09896524029209935], ["List[str]", 0.06830403678226868]], "task_instance_batch_form": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "task_instance_collection_schema": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "task_instance_reference_collection_schema": [["str", 0.5989655079459723], ["Dict[str, Union[Any, Any]]", 0.1015517380810418]], "task_instance_reference_schema": [["str", 0.5989655079459723], ["Dict[str, Union[Any, Any]]", 0.1015517380810418]], "task_instance_schema": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]]}}}