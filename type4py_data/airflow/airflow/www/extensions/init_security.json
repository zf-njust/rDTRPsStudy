{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [44, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "apply_caching", "params": {"response": ""}, "params_descr": {"response": ""}, "params_occur": {"response": [["response", "headers"]]}, "params_p": {"args": [], "kwargs": [], "response": [["flask.Response", 0.999999999955918], ["Dict[str, Any]", 6.65809566434637e-12], ["MutableMapping", 6.626826375611562e-12], ["str", 6.204023737333613e-12]]}, "q_name": "init_xframe_protection.<locals>.apply_caching", "ret_exprs": ["return response"], "ret_type": "", "ret_type_p": [["bytes", 0.3221031681578195], ["dict", 0.20773024809892454], ["flask.Response", 0.1914421181092092]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Add X-Frame-Options header. Use it to avoid click-jacking attacks, by ensuring that their content is not", "long_descr": "embedded into other sites.\n\nSee also: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "ret": null}, "fn_lc": [[31, 0], [46, 36]], "fn_var_ln": {"x_frame_enabled": [[38, 4], [38, 19]]}, "fn_var_occur": {"x_frame_enabled": []}, "name": "init_xframe_protection", "params": {"app": ""}, "params_descr": {"app": ""}, "params_occur": {"app": [["app", "after_request", "apply_caching"]]}, "params_p": {"app": [["flask.Flask", 0.3763236739244935], ["Callable", 0.08482103773436629]], "args": [], "kwargs": []}, "q_name": "init_xframe_protection", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Dict[str, Dict[str, int]]", 0.19197634121147913], ["str", 0.18382899801765326], ["Dict[str, Any]", 0.10215857691796175], ["Union[tuple, list]", 0.09042019172440315]], "variables": {"x_frame_enabled": ""}, "variables_p": {"x_frame_enabled": [["int", 0.4], ["List[int]", 0.1], ["Union[int, str]", 0.1], ["str", 0.1], ["Optional[str]", 0.1], ["Tuple[int]", 0.1]]}}, {"docstring": {"func": "Loads authentication backends.", "long_descr": null, "ret": null}, "fn_lc": [[49, 0], [65, 39]], "fn_var_ln": {"api_auth": [[57, 4], [57, 16]], "auth": [[60, 12], [60, 16]], "auth_backends": [[53, 8], [53, 21]]}, "fn_var_occur": {"api_auth": [["app", "api_auth"], ["app", "api_auth", "append", "auth"]], "auth": [["auth", "import_module", "backend", "strip"], ["auth", "init_app", "app"], ["app", "api_auth", "append", "auth"]], "auth_backends": [["auth_backends", "conf", "get"], ["auth_backends", "split"]]}, "name": "init_api_experimental_auth", "params": {"app": ""}, "params_descr": {"app": ""}, "params_occur": {"app": [["app", "api_auth"], ["auth", "init_app", "app"], ["app", "api_auth", "append", "auth"]]}, "params_p": {"app": [["flask.Flask", 0.3058459057096434]], "args": [], "kwargs": []}, "q_name": "init_api_experimental_auth", "ret_exprs": [], "ret_type": "", "variables": {"api_auth": "", "auth": "", "auth_backends": ""}, "variables_p": {"api_auth": [["Dict[str, List[Any]]", 0.3175135701694855], ["Dict[str, Union[Any, Any, Any]]", 0.10583785672316183], ["dict", 0.10413547686412958], ["Dict[str, Union[Any, Any]]", 0.09794902226872544], ["bytes", 0.09638243880529687], ["List[bool]", 0.09409917416346963], ["Dict[str, Union[bool, str]]", 0.0927494439391701], ["Dict[int, Any]", 0.09133301706656109]], "auth": [], "auth_backends": [["Dict[str, str]", 0.808400025533239], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.0971898799972634], ["Dict[str, dict]", 0.09441009446949765]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[70, 4], [73, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_user_active", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "init_check_user_active.<locals>.check_user_active", "ret_exprs": ["return redirect(url_for(app.appbuilder.sm.auth_view.endpoint + \".login\"))"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.29345218932006967], ["bool", 0.19145973223940962], ["Dict[str, str]", 0.118655624009833]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 0], [73, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "init_check_user_active", "params": {"app": ""}, "params_descr": {"app": ""}, "params_occur": {"app": []}, "params_p": {"app": [["dict", 0.11502963309269075], ["Optional[flask.Flask]", 0.10750227155652191], ["int", 0.10444832175660296], ["Sequence[int]", 0.08613101333775366], ["bool", 0.08443342040455128]], "args": [], "kwargs": []}, "q_name": "init_check_user_active", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "logging", "importlib", "import_module", "flask", "g", "redirect", "url_for", "flask_login", "logout_user", "airflow", "configuration", "conf", "airflow", "exceptions", "AirflowConfigException", "AirflowException"], "mod_var_ln": {"log": [[28, 0], [28, 3]]}, "mod_var_occur": {"log": [["log", "critical", "backend", "err"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 14}, "session_id": "YSEESbJQS7nzQFCotRP5DoqmpO4IMitInBv_FaAAFf8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.6727749467143156], ["logging.Formatter", 0.17075899549896809], ["bool", 0.08444093042276818]]}}}