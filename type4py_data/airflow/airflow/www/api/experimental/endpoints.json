{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [51, 70]], "fn_var_ln": {"auth": [[50, 8], [50, 12]]}, "fn_var_occur": {"auth": [["auth", "current_app", "api_auth"], ["auth", "requires_authentication", "function", "args", "kwargs"]]}, "name": "decorated", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [["auth", "requires_authentication", "function", "args", "kwargs"]], "kwargs": [["auth", "requires_authentication", "function", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "requires_authentication.<locals>.decorated", "ret_exprs": ["return auth.requires_authentication(function)(*args, **kwargs)"], "ret_type": "", "ret_type_p": [["str", 0.09921945954402608], ["Sequence[Any]", 0.08762432735574356]], "variables": {"auth": ""}, "variables_p": {"auth": [["dict", 0.28830926000682894], ["List[List[int]]", 0.14173753493335364], ["Type[ValueError]", 0.11391592826378406], ["Dict[str, str]", 0.10006901200810966]]}}, {"docstring": {"func": "Decorator for functions that require authentication.", "long_descr": null, "ret": null}, "fn_lc": [[45, 0], [53, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "requires_authentication", "params": {"function": "T"}, "params_descr": {"function": ""}, "params_occur": {"function": []}, "params_p": {"args": [], "function": [["Callable", 0.2], ["bool", 0.1], ["vimiv.utils.customtypes.FuncT", 0.1], ["Callable[[T], Any]", 0.1]], "kwargs": []}, "q_name": "requires_authentication", "ret_exprs": ["return cast(T, decorated)"], "ret_type": "", "ret_type_p": [["str", 0.09030972048965474]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Add `Deprecation HTTP Header Field", "long_descr": "<https://tools.ietf.org/id/draft-dalal-deprecation-header-03.html>`__.", "ret": null}, "fn_lc": [[59, 0], [72, 19]], "fn_var_ln": {"deprecation_link": [[66, 4], [66, 20]], "doc_url": [[65, 4], [65, 11]]}, "fn_var_occur": {"deprecation_link": [["deprecation_link", "doc_url"], ["response", "headers", "deprecation_link"], ["response", "headers", "deprecation_link"]], "doc_url": [["doc_url", "get_docs_url"], ["deprecation_link", "doc_url"]]}, "name": "add_deprecation_headers", "params": {"response": "flask.Response"}, "params_descr": {"response": ""}, "params_occur": {"response": [["response", "headers"], ["response", "headers"], ["response", "headers", "deprecation_link"], ["response", "headers", "deprecation_link"]]}, "params_p": {"args": [], "kwargs": [], "response": [["requests.Response", 0.22303176265822983], ["flask.Response", 0.18575183103486048], ["Dict[str, Any]", 0.1782579346537005]]}, "q_name": "add_deprecation_headers", "ret_exprs": ["return response"], "ret_type": "", "ret_type_p": [["int", 0.26085149231984023], ["str", 0.17769867079419172], ["Dict[str, str]", 0.09440463048023526], ["dict", 0.09362795991838725], ["Exception", 0.09245871033620642], ["tartare.core.models.Job", 0.09245871033620642]], "variables": {"deprecation_link": "", "doc_url": ""}, "variables_p": {"deprecation_link": [["requests.Response", 0.2993759041912612], ["str", 0.24727159173182653], ["requests.models.Response", 0.17568979686333275], ["list", 0.09652443413581956], ["werkzeug.wrappers.Response", 0.09356835510409547], ["phial.wrappers.Response", 0.08756991797366435]], "doc_url": [["str", 0.8655332416873819], ["Optional[str]", 0.13446675831261803]]}}, {"docstring": {"func": "Trigger a new dag run for a Dag with an execution date of now unless", "long_descr": "specified in the data.", "ret": null}, "fn_lc": [[81, 0], [138, 19]], "fn_var_ln": {"conf": [[94, 8], [94, 12]], "data": [[86, 4], [86, 8]], "dr": [[125, 8], [125, 10]], "error_message": [[111, 12], [111, 25]], "execution_date": [[108, 12], [108, 26]], "replace_microseconds": [[122, 8], [122, 28]], "response": [[135, 4], [135, 12]], "run_id": [[90, 8], [90, 14]], "status_code": [[129, 8], [129, 28]]}, "fn_var_occur": {"conf": [["conf", "None"], ["conf", "data"], ["isinstance", "conf", "dict"], ["dr", "trigger", "trigger_dag", "dag_id", "run_id", "conf", "execution_date", "replace_microseconds"]], "data": [["data", "request", "get_json", "force", "True"], ["run_id", "data"], ["conf", "data"], ["data", "data", "None"], ["execution_date", "data"], ["replace_microseconds", "to_boolean", "data"]], "dr": [["dr", "trigger", "trigger_dag", "dag_id", "run_id", "conf", "execution_date", "replace_microseconds"], ["log", "info", "g", "user", "dr"], ["response", "jsonify", "message", "dr", "execution_date", "dr", "execution_date", "isoformat", "run_id", "dr", "run_id"]], "error_message": [["log", "error", "error_message"], ["response", "jsonify", "error_message"], ["error_message", "execution_date"], ["response", "jsonify", "error_message"]], "execution_date": [["execution_date", "None"], ["execution_date", "data"], ["execution_date", "timezone", "parse", "execution_date"], ["error_message", "execution_date"], ["replace_microseconds", "execution_date", "None"], ["dr", "trigger", "trigger_dag", "dag_id", "run_id", "conf", "execution_date", "replace_microseconds"], ["response", "jsonify", "message", "dr", "execution_date", "dr", "execution_date", "isoformat", "run_id", "dr", "run_id"]], "replace_microseconds": [["replace_microseconds", "execution_date", "None"], ["replace_microseconds", "to_boolean", "data"], ["dr", "trigger", "trigger_dag", "dag_id", "run_id", "conf", "execution_date", "replace_microseconds"]], "response": [["response", "jsonify", "error_message"], ["response", "status_code"], ["response", "jsonify", "error_message"], ["response", "status_code"], ["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"], ["response", "jsonify", "message", "dr", "execution_date", "dr", "execution_date", "isoformat", "run_id", "dr", "run_id"]], "run_id": [["run_id", "None"], ["run_id", "data"], ["dr", "trigger", "trigger_dag", "dag_id", "run_id", "conf", "execution_date", "replace_microseconds"], ["response", "jsonify", "message", "dr", "execution_date", "dr", "execution_date", "isoformat", "run_id", "dr", "run_id"]], "status_code": [["response", "status_code"], ["response", "status_code"], ["response", "status_code", "err", "status_code"]]}, "name": "trigger_dag", "params": {"dag_id": ""}, "params_descr": {"dag_id": ""}, "params_occur": {"dag_id": [["dr", "trigger", "trigger_dag", "dag_id", "run_id", "conf", "execution_date", "replace_microseconds"]]}, "params_p": {"args": [], "dag_id": [["int", 0.20183590100643292], ["Optional[bool]", 0.19515818226928944], ["str", 0.10473819958619204], ["Optional[int]", 0.10177343114823334], ["authentication.session.models.current_user.CurrentUser", 0.10091795050321646], ["transfer.models.BoardID", 0.10091795050321646], ["bytes", 0.09707929384877463]], "kwargs": []}, "q_name": "trigger_dag", "ret_exprs": ["return response", "return response", "return response", "return response"], "ret_type": "", "ret_type_p": [["str", 0.09838629226173153], ["Dict[str, Any]", 0.09336208350420122], ["dict", 0.09248019881569991]], "variables": {"conf": "", "data": "", "dr": "", "error_message": "", "execution_date": "", "replace_microseconds": "", "response": "", "run_id": "", "status_code": ""}, "variables_p": {"conf": [["dict", 0.17514680811974923], ["str", 0.1699389870842852], ["float", 0.10681306852896474], ["list", 0.08943629192741957], ["Dict[str, Union[int, str]]", 0.0879878167014911], ["int", 0.08527605960327955]], "data": [["str", 0.22541055432634766], ["List[Union[Any, Any, Any]]", 0.19908409043331446], ["raiden.utils.Dict[str, raiden.utils.Any]", 0.10447921172489197], ["Dict[str, Any]", 0.09372195475964422], ["dict", 0.08390077374832693]], "dr": [["int", 0.19458987950928058], ["str", 0.10652306650127526], ["decksite.data.models.person.Person", 0.09107135050995441]], "error_message": [["classmethod", 0.7339794328834208], ["Dict[int, str]", 0.17427313800615174], ["Exception", 0.0917474291104276]], "execution_date": [["str", 0.3760418135808835], ["Type[prm.journals.models.moods.Mood]", 0.12878528169398482], ["dict", 0.10011359873168006]], "replace_microseconds": [["raiden.utils.SecretHash", 0.1723007996820366], ["dict", 0.13619557002123522], ["Optional[decksite.data.models.person.Person]", 0.11656611376383545], ["Optional[cmk.gui.plugins.userdb.utils.UserConnector]", 0.11570184673114178], ["Optional[aw_core.models.Event]", 0.08832074496699494], ["byceps.services.user.transfer.models.User", 0.08653066784002188], ["raiden.utils.FeeAmount", 0.0861503998410183], ["raiden.utils.TargetAddress", 0.0861503998410183]], "response": [["requests.Response", 0.7155961592179301], ["http_server.responses.Response", 0.10203923875449848], ["fastapi.Response", 0.09346442082637446], ["requests.models.Response", 0.08890018120119697]], "run_id": [["Generator[Any, None, None]", 0.21778465862179414], ["str", 0.17731842961627614], ["int", 0.11968734271885488]], "status_code": [["int", 0.9392250545875509], ["Tuple[Any, Any, Literal]", 0.06077494541244905]]}}, {"docstring": {"func": "Delete all DB records related to the specified Dag.", "long_descr": null, "ret": null}, "fn_lc": [[143, 0], [152, 69]], "fn_var_ln": {"count": [[146, 8], [146, 13]], "response": [[149, 8], [149, 16]], "status_code": [[150, 8], [150, 28]]}, "fn_var_occur": {"count": [["count", "delete", "delete_dag", "dag_id"], ["jsonify", "message", "count", "count", "count"]], "response": [["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code", "err", "status_code"]]}, "name": "delete_dag", "params": {"dag_id": ""}, "params_descr": {"dag_id": ""}, "params_occur": {"dag_id": [["count", "delete", "delete_dag", "dag_id"]]}, "params_p": {"args": [], "dag_id": [["int", 0.9999999994622804], ["str", 5.377196452067589e-10]], "kwargs": []}, "q_name": "delete_dag", "ret_exprs": ["return response", "return jsonify(message=f\"Removed {count} record(s)\", count=count)"], "ret_type": "", "ret_type_p": [["int", 0.23339629350805552], ["bool", 0.20215180351893133], ["Dict[str, str]", 0.08814511447825503], ["str", 0.08802803079592952], ["dict", 0.08760629042062237], ["zerver.models.UserProfile", 0.08528058548733748]], "variables": {"count": "", "response": "", "status_code": ""}, "variables_p": {"count": [["str", 0.3290901384178819], ["int", 0.13004070147385985], ["dict", 0.09680670719625788], ["Tuple[int, int, int, int]", 0.0959079174267388], ["List[int]", 0.09148182852816283], ["Dict[str, Union[Any, Any]]", 0.09002303475354173]], "response": [["int", 0.4889262851512961], ["List[Dict[str, str]]", 0.12219827329706102], ["cmk.gui.http.Response", 0.10107336023931773], ["str", 0.0970263281132344], ["dict", 0.09560337044059615], ["Dict[str, int]", 0.09517238275849459]], "status_code": [["int", 0.6506418256475279], ["Set[int]", 0.12355962767297834], ["Dict[int, bytes]", 0.10223891900651536]]}}, {"docstring": {"func": "Returns a list of Dag Runs for a specific DAG ID.", "long_descr": null, "ret": "List of DAG runs of a DAG with requested state,\nor all runs if the state is not specified"}, "fn_lc": [[157, 0], [177, 27]], "fn_var_ln": {"dagruns": [[170, 8], [170, 15]], "response": [[173, 8], [173, 16]], "state": [[169, 8], [169, 13]], "status_code": [[174, 8], [174, 28]]}, "fn_var_occur": {"dagruns": [["dagruns", "get_dag_runs", "dag_id", "state"], ["jsonify", "dagruns"]], "response": [["response", "jsonify", "error", "err"], ["response", "status_code"]], "state": [["state", "request", "args", "get"], ["dagruns", "get_dag_runs", "dag_id", "state"]], "status_code": [["response", "status_code"]]}, "name": "dag_runs", "params": {"dag_id": ""}, "params_descr": {"dag_id": "String identifier of a DAG"}, "params_occur": {"dag_id": [["dagruns", "get_dag_runs", "dag_id", "state"]]}, "params_p": {"args": [], "dag_id": [["str", 0.4067733462294414], ["int", 0.28922746841893776], ["Optional[str]", 0.12490651643857931], ["bool", 0.09389383481334819]], "kwargs": []}, "q_name": "dag_runs", "ret_exprs": ["return response", "return jsonify(dagruns)"], "ret_type": "", "ret_type_p": [["bytes", 0.2909547412301415], ["flask.Response", 0.2160359916629913], ["dict", 0.10033057059043761], ["Dict[str, Any]", 0.09795325956183923]], "variables": {"dagruns": "", "response": "", "state": "", "status_code": ""}, "variables_p": {"dagruns": [["str", 0.3932947192747148], ["Dict[str, str]", 0.111575469989087], ["List[int]", 0.0967465792216668], ["int", 0.09641132248610657], ["List[str]", 0.08487624228287509], ["abilian.web.blueprints.Blueprint", 0.07957164292787192]], "response": [["dict", 0.3377478575613037], ["phial.wrappers.Response", 0.10014673649370655], ["Pattern[str]", 0.09069374485609809], ["Dict[str, Union[bytes, str]]", 0.0906288783979069], ["list", 0.08928658084203556]], "state": [["str", 0.3258737610679776], ["cmk.utils.type_defs.UserId", 0.2503344440179969], ["Dict[str, str]", 0.24202319170484013], ["Dict[str, Any]", 0.18176860320918542]], "status_code": [["int", 0.3477481137026018], ["List[int]", 0.2005213624357815], ["Dict[int, bytes]", 0.18599700152737064], ["List[Tuple[Any, str]]", 0.08936090893080435], ["Set[int]", 0.08887963446956011], ["frozenset[int]", 0.08749297893388158]]}}, {"docstring": {"func": "Test endpoint to check authentication.", "long_descr": null, "ret": null}, "fn_lc": [[182, 0], [184, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test", "ret_exprs": ["return jsonify(status=\"OK\")"], "ret_type": "", "ret_type_p": [["zerver.models.UserMessage", 0.1928520845758548], ["str", 0.09451435994947767]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get Airflow Version.", "long_descr": null, "ret": null}, "fn_lc": [[189, 0], [191, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "info", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "info", "ret_exprs": ["return jsonify(version=version)"], "ret_type": "", "ret_type_p": [["zerver.models.DefaultStreamGroup", 0.13167378019582354], ["Callable", 0.0998232734388894], ["django.contrib.auth.models.User", 0.09643885838792422], ["int", 0.09548945575426462], ["Optional[str]", 0.09505686327181723], ["Type", 0.09081194151690043], ["str", 0.0882680854130671]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return python code of a given dag_id.", "long_descr": null, "ret": null}, "fn_lc": [[196, 0], [204, 23]], "fn_var_ln": {"response": [[202, 8], [202, 16]], "status_code": [[203, 8], [203, 28]]}, "fn_var_occur": {"response": [["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code", "err", "status_code"]]}, "name": "get_dag_code", "params": {"dag_id": ""}, "params_descr": {"dag_id": ""}, "params_occur": {"dag_id": [["get_code", "dag_id"]]}, "params_p": {"args": [], "dag_id": [["str", 0.4822274997135672], ["int", 0.3282120231450729], ["List[int]", 0.09428281721757871]], "kwargs": []}, "q_name": "get_dag_code", "ret_exprs": ["return get_code(dag_id)", "return response"], "ret_type": "", "ret_type_p": [["str", 0.3789813106975116], ["int", 0.12074197447474723], ["bytes", 0.09264352817021529]], "variables": {"response": "", "status_code": ""}, "variables_p": {"response": [["int", 0.4889262851512961], ["List[Dict[str, str]]", 0.12219827329706102], ["cmk.gui.http.Response", 0.10107336023931773], ["str", 0.0970263281132344], ["dict", 0.09560337044059615], ["Dict[str, int]", 0.09517238275849459]], "status_code": [["int", 0.6506418256475279], ["Set[int]", 0.12355962767297834], ["Dict[int, bytes]", 0.10223891900651536]]}}, {"docstring": {"func": "Returns a JSON with a task's public instance variables.", "long_descr": null, "ret": null}, "fn_lc": [[209, 0], [221, 26]], "fn_var_ln": {"fields": [[220, 4], [220, 10]], "response": [[215, 8], [215, 16]], "status_code": [[216, 8], [216, 28]], "t_info": [[212, 8], [212, 14]]}, "fn_var_occur": {"fields": [["fields", "k", "str", "v", "k", "v", "vars", "t_info", "items", "k", "startswith"], ["jsonify", "fields"]], "response": [["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code", "err", "status_code"]], "t_info": [["t_info", "get_task", "dag_id", "task_id"], ["fields", "k", "str", "v", "k", "v", "vars", "t_info", "items", "k", "startswith"]]}, "name": "task_info", "params": {"dag_id": "", "task_id": ""}, "params_descr": {"dag_id": "", "task_id": ""}, "params_occur": {"dag_id": [["t_info", "get_task", "dag_id", "task_id"]], "task_id": [["t_info", "get_task", "dag_id", "task_id"]]}, "params_p": {"args": [], "dag_id": [["str", 0.3532378938506359], ["int", 0.25390795526569887]], "kwargs": [], "task_id": [["str", 0.3532378938506359], ["int", 0.25390795526569887]]}, "q_name": "task_info", "ret_exprs": ["return response", "return jsonify(fields)"], "ret_type": "", "ret_type_p": [["int", 0.21750750975328315], ["Optional[str]", 0.15614548443147225], ["List[str]", 0.12849023338704055], ["Dict[str, str]", 0.10943703717730004], ["flask.wrappers.Response", 0.0786771095170324], ["Dict[str, Any]", 0.07566425601995305], ["jumeaux.models.Request", 0.07289083195409021]], "variables": {"fields": "", "response": "", "status_code": "", "t_info": ""}, "variables_p": {"fields": [["List[str]", 0.19269625454422834], ["dict", 0.16308698951518225], ["List[shromazdeni.reports.utils.Field]", 0.11648374032073723], ["Set[str]", 0.08984546708759723], ["List[Tuple[str, Any]]", 0.0852045170404257], ["str", 0.08389186567105215], ["Dict[str, Any]", 0.08104988116953045]], "response": [["int", 0.4889262851512961], ["List[Dict[str, str]]", 0.12219827329706102], ["cmk.gui.http.Response", 0.10107336023931773], ["str", 0.0970263281132344], ["dict", 0.09560337044059615], ["Dict[str, int]", 0.09517238275849459]], "status_code": [["int", 0.6506418256475279], ["Set[int]", 0.12355962767297834], ["Dict[int, bytes]", 0.10223891900651536]], "t_info": [["list", 0.11840171417184665], ["OrderedDict[str, grouper.models.user.User]", 0.09588131328349564], ["Callable(id)[[object], int]", 0.09363939360513829], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09355482018904251], ["Dict[str, Any]", 0.09328718692304894], ["Dict[str, Union[Any, Any]]", 0.09121490905320391]]}}, {"docstring": {"func": "(Un)pauses a dag.", "long_descr": null, "ret": null}, "fn_lc": [[227, 0], [235, 38]], "fn_var_ln": {"is_paused": [[229, 4], [229, 13]]}, "fn_var_occur": {"is_paused": [["is_paused", "bool", "paused"], ["models", "DagModel", "get_dagmodel", "dag_id", "set_is_paused", "is_paused", "is_paused"]]}, "name": "dag_paused", "params": {"dag_id": "", "paused": ""}, "params_descr": {"dag_id": "", "paused": ""}, "params_occur": {"dag_id": [["models", "DagModel", "get_dagmodel", "dag_id", "set_is_paused", "is_paused", "is_paused"]], "paused": [["is_paused", "bool", "paused"]]}, "params_p": {"args": [], "dag_id": [["str", 0.4047457823493531], ["int", 0.19975575279446894], ["Optional[bool]", 0.09876398968295674], ["Optional[int]", 0.09876398968295674]], "kwargs": [], "paused": [["bool", 0.29370824192299394], ["Optional[int]", 0.11548965419812508], ["Iterable[List[Any]]", 0.1080914304886771], ["Optional[List[str]]", 0.1006546539277074], ["List[str]", 0.1006546539277074], ["str", 0.09239893406757915], ["int", 0.09239893406757915]]}, "q_name": "dag_paused", "ret_exprs": ["return jsonify({\"response\": \"ok\"})"], "ret_type": "", "ret_type_p": [["List[str]", 0.2586531460493081], ["Dict[str, Any]", 0.17818212622892465], ["raiden.utils.Dict[str, raiden.utils.Any]", 0.152534379968423], ["Dict[str, dict]", 0.0852461907845093], ["str", 0.07943271602697886], ["bool", 0.07906946345389575]], "variables": {"is_paused": ""}, "variables_p": {"is_paused": [["bool", 0.26046521459740946], ["int", 0.22866683772803503], ["Type[django.applications.catmaid.models.DataView]", 0.1583916424514916], ["Optional[str]", 0.10679124649179918], ["Tuple[Tuple[str, str], Tuple[str, str]]", 0.08848354759253092]]}}, {"docstring": {"func": "Get paused state of a dag.", "long_descr": null, "ret": null}, "fn_lc": [[240, 0], [244, 44]], "fn_var_ln": {"is_paused": [[242, 4], [242, 13]]}, "fn_var_occur": {"is_paused": [["is_paused", "models", "DagModel", "get_dagmodel", "dag_id", "is_paused"], ["jsonify", "is_paused"]]}, "name": "dag_is_paused", "params": {"dag_id": ""}, "params_descr": {"dag_id": ""}, "params_occur": {"dag_id": [["is_paused", "models", "DagModel", "get_dagmodel", "dag_id", "is_paused"]]}, "params_p": {"args": [], "dag_id": [["int", 0.552985856676259], ["str", 0.3535489849997493], ["bool", 0.09346515832399158]], "kwargs": []}, "q_name": "dag_is_paused", "ret_exprs": ["return jsonify({\"is_paused\": is_paused})"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"is_paused": ""}, "variables_p": {"is_paused": [["str", 0.2993993436453479], ["bool", 0.20698435923543873], ["List[float]", 0.10585020053523533], ["Dict[str, int]", 0.10190813836814057], ["int", 0.1011341587002034], ["list", 0.09337672431793122], ["Optional[Callable]", 0.09134707519770276]]}}, {"docstring": {"func": "Returns a JSON with a task instance's public instance variables.", "long_descr": "The format for the exec_date is expected to be\n\"YYYY-mm-DDTHH:MM:SS\", for example: \"2016-11-16T11:34:15\". This will\nof course need to have been encoded for URL in the request.", "ret": null}, "fn_lc": [[251, 0], [282, 26]], "fn_var_ln": {"error_message": [[263, 8], [263, 21]], "execution_date": [[260, 8], [260, 22]], "fields": [[281, 4], [281, 10]], "response": [[276, 8], [276, 16]], "status_code": [[277, 8], [277, 28]], "ti_info": [[273, 8], [273, 15]]}, "fn_var_occur": {"error_message": [["error_message", "execution_date"], ["response", "jsonify", "error_message"]], "execution_date": [["execution_date", "timezone", "parse", "execution_date"], ["error_message", "execution_date"], ["ti_info", "get_task_instance", "dag_id", "task_id", "execution_date"]], "fields": [["fields", "k", "str", "v", "k", "v", "vars", "ti_info", "items", "k", "startswith"], ["jsonify", "fields"]], "response": [["response", "jsonify", "error_message"], ["response", "status_code"], ["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code"], ["response", "status_code", "err", "status_code"]], "ti_info": [["ti_info", "get_task_instance", "dag_id", "task_id", "execution_date"], ["fields", "k", "str", "v", "k", "v", "vars", "ti_info", "items", "k", "startswith"]]}, "name": "task_instance_info", "params": {"dag_id": "", "execution_date": "", "task_id": ""}, "params_descr": {"dag_id": "", "execution_date": "", "task_id": ""}, "params_occur": {"dag_id": [["ti_info", "get_task_instance", "dag_id", "task_id", "execution_date"]], "execution_date": [["execution_date", "timezone", "parse", "execution_date"], ["error_message", "execution_date"], ["ti_info", "get_task_instance", "dag_id", "task_id", "execution_date"]], "task_id": [["ti_info", "get_task_instance", "dag_id", "task_id", "execution_date"]]}, "params_p": {"args": [], "dag_id": [["str", 0.5626224396946801], ["int", 0.11540248171464551]], "execution_date": [["str", 1.0]], "kwargs": [], "task_id": [["str", 0.5626224396946801], ["int", 0.11540248171464551]]}, "q_name": "task_instance_info", "ret_exprs": ["return response", "return response", "return jsonify(fields)"], "ret_type": "", "ret_type_p": [["bool", 0.2339021193816271], ["core_lib.core.models.Event", 0.12131974913214974], ["Dict[str, str]", 0.11165933200535376], ["str", 0.09064081041632302], ["[dict]", 0.08667870363886541]], "variables": {"error_message": "", "execution_date": "", "fields": "", "response": "", "status_code": "", "ti_info": ""}, "variables_p": {"error_message": [["str", 0.4985785250908189], ["Dict[int, int]", 0.13255960967466962], ["Dict[str, str]", 0.0999452962824643], ["cmk.base.api.agent_based.checking_classes.state", 0.09415855966388359], ["List[Dict[str, str]]", 0.08873706679020527], ["Type[str]", 0.08602094249795822]], "execution_date": [["str", 1.0]], "fields": [["Dict[str, Any]", 0.17385978111451214], ["list", 0.14298633797789903], ["dict", 0.13313820326519113], ["List[shromazdeni.reports.utils.Field]", 0.09976926397732172], ["str", 0.09724402871918487], ["set", 0.09045680313475588], ["Tuple[Literal, Literal, Literal]", 0.08462893138733335]], "response": [["flask.Response", 0.7354603908572308], ["requests.Response", 0.1659524789477808], ["fastapi.Response", 0.09858713019498834]], "status_code": [["int", 1.0]], "ti_info": [["str", 0.2806111483777992], ["List[Union[Any, Any, Any]]", 0.12419684641926354], ["Optional[str]", 0.10386617775068988], ["dict", 0.09241151634360957]]}}, {"docstring": {"func": "Returns a JSON with a dag_run's public instance variables.", "long_descr": "The format for the exec_date is expected to be\n\"YYYY-mm-DDTHH:MM:SS\", for example: \"2016-11-16T11:34:15\". This will\nof course need to have been encoded for URL in the request.", "ret": null}, "fn_lc": [[287, 0], [316, 27]], "fn_var_ln": {"dr_info": [[309, 8], [309, 15]], "error_message": [[299, 8], [299, 21]], "execution_date": [[296, 8], [296, 22]], "response": [[312, 8], [312, 16]], "status_code": [[313, 8], [313, 28]]}, "fn_var_occur": {"dr_info": [["dr_info", "get_dag_run_state", "dag_id", "execution_date"], ["jsonify", "dr_info"]], "error_message": [["error_message", "execution_date"], ["response", "jsonify", "error_message"]], "execution_date": [["execution_date", "timezone", "parse", "execution_date"], ["error_message", "execution_date"], ["dr_info", "get_dag_run_state", "dag_id", "execution_date"]], "response": [["response", "jsonify", "error_message"], ["response", "status_code"], ["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code"], ["response", "status_code", "err", "status_code"]]}, "name": "dag_run_status", "params": {"dag_id": "", "execution_date": ""}, "params_descr": {"dag_id": "", "execution_date": ""}, "params_occur": {"dag_id": [["dr_info", "get_dag_run_state", "dag_id", "execution_date"]], "execution_date": [["execution_date", "timezone", "parse", "execution_date"], ["error_message", "execution_date"], ["dr_info", "get_dag_run_state", "dag_id", "execution_date"]]}, "params_p": {"args": [], "dag_id": [["str", 0.2799583340155016], ["int", 0.21838142051651274], ["Optional[Exception]", 0.12041860044830087]], "execution_date": [["str", 0.6785820136270686], ["int", 0.17420061529834543]], "kwargs": []}, "q_name": "dag_run_status", "ret_exprs": ["return response", "return response", "return jsonify(dr_info)"], "ret_type": "", "ret_type_p": [["dict", 0.2933965388857958], ["str", 0.12056215600236835], ["bool", 0.10206014765849569], ["medtagger.database.models.Slice", 0.0977317446587963], ["Dict[str, Any]", 0.0927948408840525], ["asgard.models.job.ScheduledJob", 0.0923459306640944]], "variables": {"dr_info": "", "error_message": "", "execution_date": "", "response": "", "status_code": ""}, "variables_p": {"dr_info": [["alerta.models.user.User", 0.23830119581629444], ["Dict[Optional[str], str]", 0.11440991032024032], ["Optional[alerta.models.user.User]", 0.09660682036692628], ["metaswitch_tinder.database.models.User", 0.08485633291307082]], "error_message": [["str", 0.4985785250908189], ["Dict[int, int]", 0.13255960967466962], ["Dict[str, str]", 0.0999452962824643], ["cmk.base.api.agent_based.checking_classes.state", 0.09415855966388359], ["List[Dict[str, str]]", 0.08873706679020527], ["Type[str]", 0.08602094249795822]], "execution_date": [["str", 0.6895240505631858], ["Pattern[str]", 0.12124405158938267]], "response": [["flask.Response", 0.7354603908572308], ["requests.Response", 0.1659524789477808], ["fastapi.Response", 0.09858713019498834]], "status_code": [["int", 1.0]]}}, {"docstring": {"func": "Returns the latest DagRun for each DAG formatted for the UI.", "long_descr": null, "ret": null}, "fn_lc": [[321, 0], [339, 33]], "fn_var_ln": {"dagruns": [[325, 4], [325, 11]], "payload": [[326, 4], [326, 11]]}, "fn_var_occur": {"dagruns": [["dagruns", "DagRun", "get_latest_runs"]], "payload": [["payload", "append", "dagrun", "dag_id", "dagrun", "execution_date", "isoformat", "dagrun", "start_date", "dagrun", "start_date", "isoformat", "url_for", "dag_id", "dagrun", "dag_id", "execution_date", "dagrun", "execution_date"], ["jsonify", "items", "payload"]]}, "name": "latest_dag_runs", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "latest_dag_runs", "ret_exprs": ["return jsonify(items=payload)"], "ret_type": "", "ret_type_p": [["int", 0.8347068957781314], ["str", 0.06838342827955744], ["frozenset", 0.04845483797115558], ["bool", 0.04845483797115558]], "variables": {"dagruns": "", "payload": ""}, "variables_p": {"dagruns": [["Tuple[Literal, Literal, Literal]", 0.166666666664164], ["Optional[gardnr.models.Grow]", 0.166666666664164], ["int", 6.787451833966716e-12], ["Dict[str, int]", 4.834950806013953e-12], ["str", 3.393725916983358e-12]], "payload": [["list", 0.41273529776528595], ["models.groups.Groups", 0.29441883809227226], ["models.profiles.Profiles", 0.09720528862392118], ["int", 0.08780786023442692]]}}, {"docstring": {"func": "Get pool by a given name.", "long_descr": null, "ret": null}, "fn_lc": [[344, 0], [354, 38]], "fn_var_ln": {"pool": [[347, 8], [347, 12]], "response": [[350, 8], [350, 16]], "status_code": [[351, 8], [351, 28]]}, "fn_var_occur": {"pool": [["pool", "pool_api", "get_pool", "name", "name"], ["jsonify", "pool", "to_json"]], "response": [["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code", "err", "status_code"]]}, "name": "get_pool", "params": {"name": ""}, "params_descr": {"name": ""}, "params_occur": {"name": [["pool", "pool_api", "get_pool", "name", "name"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.5083812232633009], ["list", 0.12609406415909186], ["Optional[str]", 0.0882776462858412]]}, "q_name": "get_pool", "ret_exprs": ["return response", "return jsonify(pool.to_json())"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.29430126890206093], ["str", 0.19231270161739722]], "variables": {"pool": "", "response": "", "status_code": ""}, "variables_p": {"pool": [["str", 0.1956333098229462], ["float", 0.0885545208265726], ["List[str]", 0.0885545208265726]], "response": [["int", 0.4889262851512961], ["List[Dict[str, str]]", 0.12219827329706102], ["cmk.gui.http.Response", 0.10107336023931773], ["str", 0.0970263281132344], ["dict", 0.09560337044059615], ["Dict[str, int]", 0.09517238275849459]], "status_code": [["int", 0.6506418256475279], ["Set[int]", 0.12355962767297834], ["Dict[int, bytes]", 0.10223891900651536]]}}, {"docstring": {"func": "Get all pools.", "long_descr": null, "ret": null}, "fn_lc": [[359, 0], [369, 52]], "fn_var_ln": {"pools": [[362, 8], [362, 13]], "response": [[365, 8], [365, 16]], "status_code": [[366, 8], [366, 28]]}, "fn_var_occur": {"pools": [["pools", "pool_api", "get_pools"], ["jsonify", "p", "to_json", "p", "pools"]], "response": [["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code", "err", "status_code"]]}, "name": "get_pools", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_pools", "ret_exprs": ["return response", "return jsonify([p.to_json() for p in pools])"], "ret_type": "", "ret_type_p": [["str", 0.2979043422005473], ["dict", 0.19601536677961168], ["\"User\"", 0.09512201737919612]], "variables": {"pools": "", "response": "", "status_code": ""}, "variables_p": {"pools": [["str", 0.26261089593821635], ["Dict[str, str]", 0.19305954608213916], ["Dict[str, Union[Any, Any]]", 0.11507416313865479]], "response": [["int", 0.4889262851512961], ["List[Dict[str, str]]", 0.12219827329706102], ["cmk.gui.http.Response", 0.10107336023931773], ["str", 0.0970263281132344], ["dict", 0.09560337044059615], ["Dict[str, int]", 0.09517238275849459]], "status_code": [["int", 0.6506418256475279], ["Set[int]", 0.12355962767297834], ["Dict[int, bytes]", 0.10223891900651536]]}}, {"docstring": {"func": "Create a pool.", "long_descr": null, "ret": null}, "fn_lc": [[374, 0], [385, 38]], "fn_var_ln": {"params": [[376, 4], [376, 10]], "pool": [[378, 8], [378, 12]], "response": [[381, 8], [381, 16]], "status_code": [[382, 8], [382, 28]]}, "fn_var_occur": {"params": [["params", "request", "get_json", "force", "True"], ["pool", "pool_api", "create_pool", "params"]], "pool": [["pool", "pool_api", "create_pool", "params"], ["jsonify", "pool", "to_json"]], "response": [["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code", "err", "status_code"]]}, "name": "create_pool", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "create_pool", "ret_exprs": ["return response", "return jsonify(pool.to_json())"], "ret_type": "", "ret_type_p": [["asgard.models.job.ScheduledJob", 0.20221220761464], ["bool", 0.1982705621382353], ["Dict[str, Any]", 0.11255436828507713], ["Dict[str, str]", 0.10713766536472047], ["List[recidiviz.persistence.entity.state.entities.StateSupervisionViolation.Response]", 0.10162847122415], ["dict", 0.09481594234223784], ["str", 0.08888023806169575]], "variables": {"params": "", "pool": "", "response": "", "status_code": ""}, "variables_p": {"params": [["str", 0.1934647411639593], ["Dict[str, List[Any]]", 0.12358904817482019]], "pool": [["str", 0.24984603840018196], ["Callable", 0.1132802468302837], ["List[float]", 0.09126131173261866], ["int", 0.08079410530363794]], "response": [["int", 0.4889262851512961], ["List[Dict[str, str]]", 0.12219827329706102], ["cmk.gui.http.Response", 0.10107336023931773], ["str", 0.0970263281132344], ["dict", 0.09560337044059615], ["Dict[str, int]", 0.09517238275849459]], "status_code": [["int", 0.6506418256475279], ["Set[int]", 0.12355962767297834], ["Dict[int, bytes]", 0.10223891900651536]]}}, {"docstring": {"func": "Delete pool.", "long_descr": null, "ret": null}, "fn_lc": [[390, 0], [400, 38]], "fn_var_ln": {"pool": [[393, 8], [393, 12]], "response": [[396, 8], [396, 16]], "status_code": [[397, 8], [397, 28]]}, "fn_var_occur": {"pool": [["pool", "pool_api", "delete_pool", "name", "name"], ["jsonify", "pool", "to_json"]], "response": [["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code", "err", "status_code"]]}, "name": "delete_pool", "params": {"name": ""}, "params_descr": {"name": ""}, "params_occur": {"name": [["pool", "pool_api", "delete_pool", "name", "name"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7518356031169962], ["int", 0.1667841363398837], ["Optional[str]", 0.08138026054312024]]}, "q_name": "delete_pool", "ret_exprs": ["return response", "return jsonify(pool.to_json())"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.21133314382032034], ["bool", 0.20297456064738278], ["str", 0.19277736564982567], ["zerver.models.UserProfile", 0.09599744740827505]], "variables": {"pool": "", "response": "", "status_code": ""}, "variables_p": {"pool": [["pydcop.utils.expressionfunction.ExpressionFunction", 0.1945062537039317], ["str", 0.10434233964486556]], "response": [["int", 0.4889262851512961], ["List[Dict[str, str]]", 0.12219827329706102], ["cmk.gui.http.Response", 0.10107336023931773], ["str", 0.0970263281132344], ["dict", 0.09560337044059615], ["Dict[str, int]", 0.09517238275849459]], "status_code": [["int", 0.6506418256475279], ["Set[int]", 0.12355962767297834], ["Dict[int, bytes]", 0.10223891900651536]]}}, {"docstring": {"func": "Get Lineage details for a DagRun.", "long_descr": null, "ret": null}, "fn_lc": [[405, 0], [429, 31]], "fn_var_ln": {"error_message": [[412, 8], [412, 21]], "execution_dt": [[409, 8], [409, 20]], "lineage": [[422, 8], [422, 15]], "response": [[425, 8], [425, 16]], "status_code": [[426, 8], [426, 28]]}, "fn_var_occur": {"error_message": [["error_message", "execution_date"], ["response", "jsonify", "error_message"]], "execution_dt": [["execution_dt", "timezone", "parse", "execution_date"], ["lineage", "get_lineage_api", "dag_id", "dag_id", "execution_date", "execution_dt"]], "lineage": [["lineage", "get_lineage_api", "dag_id", "dag_id", "execution_date", "execution_dt"], ["jsonify", "lineage"]], "response": [["response", "jsonify", "error_message"], ["response", "status_code"], ["response", "jsonify", "error", "err"], ["response", "status_code", "err", "status_code"]], "status_code": [["response", "status_code"], ["response", "status_code", "err", "status_code"]]}, "name": "get_lineage", "params": {"dag_id": "builtins.str", "execution_date": "builtins.str"}, "params_descr": {"dag_id": "", "execution_date": ""}, "params_occur": {"dag_id": [["lineage", "get_lineage_api", "dag_id", "dag_id", "execution_date", "execution_dt"]], "execution_date": [["execution_dt", "timezone", "parse", "execution_date"], ["error_message", "execution_date"], ["lineage", "get_lineage_api", "dag_id", "dag_id", "execution_date", "execution_dt"]]}, "params_p": {"args": [], "dag_id": [["str", 0.19534132742703558], ["Optional[str]", 0.192537616143355], ["Optional[int]", 0.09907251935535807]], "execution_date": [["str", 0.30646860542059806], ["int", 0.18533845155293113], ["list", 0.12953279109304308], ["Sequence[str]", 0.08894231695565462]], "kwargs": []}, "q_name": "get_lineage", "ret_exprs": ["return response", "return response", "return jsonify(lineage)"], "ret_type": "", "ret_type_p": [["str", 0.17296561747763428], ["dict", 0.13069852619919586], ["Dict[str, str]", 0.11836670894039719], ["core.models.User", 0.09669918230492931], ["Tuple[bytes, bytes]", 0.094046867041175], ["bytes", 0.09354177546039447], ["Dict[str, Any]", 0.08893681203250993], ["bool", 0.08137636842779268]], "variables": {"error_message": "", "execution_dt": "", "lineage": "", "response": "", "status_code": ""}, "variables_p": {"error_message": [["str", 0.4985785250908189], ["Dict[int, int]", 0.13255960967466962], ["Dict[str, str]", 0.0999452962824643], ["cmk.base.api.agent_based.checking_classes.state", 0.09415855966388359], ["List[Dict[str, str]]", 0.08873706679020527], ["Type[str]", 0.08602094249795822]], "execution_dt": [["int", 0.4832982996655475], ["str", 0.29657983567744706], ["Pattern[str]", 0.11555150945397347], ["set", 0.10457035520303198]], "lineage": [["int", 0.3853945878453418], ["str", 0.2959578712684867], ["backend.api.models.group.Group", 0.10682342777683869]], "response": [["flask.Response", 0.7354603908572308], ["requests.Response", 0.1659524789477808], ["fastapi.Response", 0.09858713019498834]], "status_code": [["int", 1.0]]}}], "imports": ["__future__", "annotations", "logging", "functools", "wraps", "typing", "Callable", "TypeVar", "cast", "flask", "Blueprint", "Response", "current_app", "g", "jsonify", "request", "url_for", "airflow", "models", "airflow", "api", "common", "experimental", "delete_dag", "delete", "pool", "pool_api", "trigger_dag", "trigger", "airflow", "api", "common", "experimental", "get_code", "get_code", "airflow", "api", "common", "experimental", "get_dag_run_state", "get_dag_run_state", "airflow", "api", "common", "experimental", "get_dag_runs", "get_dag_runs", "airflow", "api", "common", "experimental", "get_lineage", "get_lineage", "get_lineage_api", "airflow", "api", "common", "experimental", "get_task", "get_task", "airflow", "api", "common", "experimental", "get_task_instance", "get_task_instance", "airflow", "exceptions", "AirflowException", "airflow", "utils", "timezone", "airflow", "utils", "docs", "get_docs_url", "airflow", "utils", "strings", "to_boolean", "airflow", "version", "version", "airflow", "models", "DagRun"], "mod_var_ln": {"T": [[42, 0], [42, 1]], "api_experimental": [[56, 0], [56, 16]], "log": [[40, 0], [40, 3]]}, "mod_var_occur": {"T": [["cast", "T", "decorated"]], "api_experimental": [["api_experimental", "after_request", "add_deprecation_headers"]], "log": [["log", "error", "error_message"], ["log", "error"], ["log", "error", "err"], ["log", "info", "g", "user", "dr"], ["log", "error", "err"], ["log", "info", "err"], ["log", "info", "err"], ["log", "info", "err"], ["log", "error"], ["log", "info", "err"], ["log", "error"], ["log", "info", "err"], ["log", "error", "err"], ["log", "error", "err"], ["log", "error", "err"], ["log", "error", "err"], ["log", "error"], ["log", "error", "err"]]}, "no_types_annot": {"D": 4, "I": 0, "U": 97}, "session_id": "4QM5IGwx0c4Ya-YNbnOir4unoWMaACIQUelyKwo_ffA", "set": null, "tc": [false, null], "type_annot_cove": 0.04, "typed_seq": "", "untyped_seq": "", "variables": {"T": "", "api_experimental": "", "log": ""}, "variables_p": {"T": [["str", 0.5979074089625228], ["float", 0.13184430808531328], ["Pattern[str]", 0.08921733463801028]], "api_experimental": [["str", 0.11521736546557516], ["Optional[str]", 0.08434003908481022]], "log": [["logging.Logger", 1.0]]}}}