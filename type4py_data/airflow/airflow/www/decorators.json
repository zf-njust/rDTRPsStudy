{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "The variable requests values and args comes in this form:", "long_descr": "[('key', 'key_content'),('val', 'val_content'), ('description', 'description_content')]\nSo we need to mask the 'val_content' field if 'key_content' is in the mask list.", "ret": null}, "fn_lc": [[41, 0], [59, 17]], "fn_var_ln": {"keyname": [[56, 12], [56, 19]], "result": [[47, 4], [47, 10]], "x": [[54, 12], [54, 13]]}, "fn_var_occur": {"keyname": [["keyname", "None"], ["keyname", "v"], ["keyname", "k"], ["x", "secrets_masker", "redact", "v", "keyname"], ["keyname", "None"]], "result": [["result", "append", "k", "v"], ["result", "append", "k", "x"], ["result", "append", "k", "v"]], "x": [["x", "secrets_masker", "redact", "v", "keyname"], ["result", "append", "k", "x"]]}, "name": "_mask_variable_fields", "params": {"extra_fields": ""}, "params_descr": {"extra_fields": ""}, "params_occur": {"extra_fields": []}, "params_p": {"args": [], "extra_fields": [["type", 0.22737693192971933], ["set", 0.13026996992467044], ["List[Tuple[int, str]]", 0.130029589487581], ["bool", 0.09138411676403768], ["Exception", 0.07231034797482126], ["models.Variable", 0.059673319666964326]], "kwargs": []}, "q_name": "_mask_variable_fields", "ret_exprs": ["return result"], "ret_type": "", "ret_type_p": [["deeplearning.ml4pl.models.batch.Results", 0.209566557412863], ["Tuple[Dict[str, object], Dict[str, str]]", 0.17643957773587293], ["int", 0.11464857515845452], ["List[str]", 0.10494247268519262], ["\"Parameter\"", 0.08984180066985353]], "variables": {"keyname": "", "result": "", "x": ""}, "variables_p": {"keyname": [["int", 0.3001007703602746], ["list", 0.18877351752037716], ["Tuple[Any, Any, Any, Any]", 0.1144549388392742], ["str", 0.10572644502286734]], "result": [["List[object]", 0.4660762602361076], ["list", 0.28991358204531414], ["List[str]", 0.12457299830364056], ["List[List]", 0.11943715941493781]], "x": [["float", 0.12984279850056385], ["int", 0.08751701050228695]]}}, {"docstring": {"func": "Mask connection fields.", "long_descr": null, "ret": null}, "fn_lc": [[62, 0], [75, 17]], "fn_var_ln": {"extra": [[69, 16], [69, 21]], "result": [[64, 4], [64, 10]]}, "fn_var_occur": {"extra": [["extra", "json", "loads", "v"], ["extra", "k", "secrets_masker", "redact", "v", "k", "k", "v", "extra", "items"], ["result", "append", "k", "json", "dumps", "dict", "extra"]], "result": [["result", "append", "k", "json", "dumps", "dict", "extra"], ["result", "append", "k"], ["result", "append", "k", "secrets_masker", "redact", "v", "k"]]}, "name": "_mask_connection_fields", "params": {"extra_fields": ""}, "params_descr": {"extra_fields": ""}, "params_occur": {"extra_fields": []}, "params_p": {"args": [], "extra_fields": [["Iterable[str]", 0.30005044301058564], ["faustypes.models.ModelT", 0.22231619245472498], ["str", 0.14821079496981665]], "kwargs": []}, "q_name": "_mask_connection_fields", "ret_exprs": ["return result"], "ret_type": "", "ret_type_p": [["bool", 0.10553438744042425], ["Tuple[int, Dict[str, Any]]", 0.09811559917060203], ["zerver.models.Realm", 0.09731848404390135]], "variables": {"extra": "", "result": ""}, "variables_p": {"extra": [["dict", 0.6309029859739307], ["Type[str]", 0.17860228718035864], ["str", 0.09780755307080313], ["Dict[str, Union[Any, Any]]", 0.09268717377490747]], "result": [["list", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 8], [125, 37]], "fn_var_ln": {"__tracebackhide__": [[84, 12], [84, 29]], "execution_date": [[117, 24], [117, 42]], "execution_date_value": [[115, 20], [115, 40]], "extra_fields": [[101, 20], [101, 32]], "fields_skip_logging": [[92, 16], [92, 35]], "log": [[105, 16], [105, 19]], "params": [[103, 16], [103, 22]], "user": [[90, 20], [90, 24]]}, "fn_var_occur": {"__tracebackhide__": [["__tracebackhide__", "True"]], "execution_date": [["log", "execution_date", "pendulum", "parse", "execution_date_value", "strict", "False"]], "execution_date_value": [["execution_date_value", "request", "values", "get"], ["log", "execution_date", "pendulum", "parse", "execution_date_value", "strict", "False"], ["logger", "exception", "execution_date_value"]], "extra_fields": [["extra_fields", "k", "secrets_masker", "redact", "v", "k", "k", "v", "chain", "request", "values", "items", "multi", "True", "request", "view_args", "items", "k", "fields_skip_logging"], ["extra_fields", "_mask_variable_fields", "extra_fields"], ["extra_fields", "_mask_connection_fields", "extra_fields"], ["log", "Log", "event", "event", "f", "__name__", "task_instance", "None", "owner", "user", "extra", "str", "extra_fields", "task_id", "params", "get", "dag_id", "params", "get"]], "fields_skip_logging": [["extra_fields", "k", "secrets_masker", "redact", "v", "k", "k", "v", "chain", "request", "values", "items", "multi", "True", "request", "view_args", "items", "k", "fields_skip_logging"]], "log": [["log", "Log", "event", "event", "f", "__name__", "task_instance", "None", "owner", "user", "extra", "str", "extra_fields", "task_id", "params", "get", "dag_id", "params", "get"], ["log", "execution_date", "pendulum", "parse", "execution_date_value", "strict", "False"], ["session", "add", "log"]], "params": [["params", "k", "v", "k", "v", "chain", "request", "values", "items", "request", "view_args", "items"], ["log", "Log", "event", "event", "f", "__name__", "task_instance", "None", "owner", "user", "extra", "str", "extra_fields", "task_id", "params", "get", "dag_id", "params", "get"]], "user": [["g", "user", "is_anonymous"], ["user", "g", "user", "username", "g", "user", "get_full_name"], ["log", "Log", "event", "event", "f", "__name__", "task_instance", "None", "owner", "user", "extra", "str", "extra_fields", "task_id", "params", "get", "dag_id", "params", "get"]]}, "name": "wrapper", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [["f", "args", "kwargs"]], "kwargs": [["f", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "action_logging.<locals>.log_action.<locals>.wrapper", "ret_exprs": ["return f(*args, **kwargs)"], "ret_type": "", "ret_type_p": [["str", 0.8169801481133986], ["Iterable[str]", 0.08558710696068339]], "variables": {"__tracebackhide__": "", "execution_date": "", "execution_date_value": "", "extra_fields": "", "fields_skip_logging": "", "log": "", "params": "", "user": ""}, "variables_p": {"__tracebackhide__": [["Dict[str, Any]", 0.49999999999999994], ["List[bool]", 0.19999999999999998], ["Dict[str, bool]", 0.09999999999999999], ["Dict[str, Dict[str, Any]]", 0.09999999999999999], ["float", 0.09999999999999999]], "execution_date": [["str", 0.2227028926258729], ["Type[prm.journals.models.moods.Mood]", 0.10189858300434816], ["Type[hypha.apply.projects.models.Report]", 0.10119543530802533]], "execution_date_value": [["str", 0.6875059033798436], ["Optional[str]", 0.11536252906293835], ["List[Dict[str, Any]]", 0.09956388027040171]], "extra_fields": [["dict", 0.2841878025340391], ["Dict[str, Any]", 0.17519573764197868], ["Dict[str, str]", 0.1265156991980799], ["Dict[str, Tuple[str, str]]", 0.09640613287459227], ["Mapping[str, Type[Any]]", 0.09640613287459227]], "fields_skip_logging": [["dict", 0.2740072717514228], ["str", 0.12591232023096852], ["Dict[str, int]", 0.10072449147689255], ["Dict[str, Literal]", 0.09874247206440907], ["List[Tuple[str, int]]", 0.09760172813281233], ["Set[str]", 0.09755166973969759]], "log": [["logging.Logger", 0.6017643716276885], ["str", 0.24746003976550496], ["Union[Literal, str]", 0.1507755886068065]], "params": [["List[str]", 0.21540075031339784], ["dict", 0.18492186408469613], ["str", 0.18342569937608902], ["int", 0.11451551011220333], ["Dict[int, Union[Any, Any, Any, Any, Any, Any]]", 0.10815774806206574]], "user": [["str", 0.08631007238558225]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [127, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "log_action", "params": {"f": "T"}, "params_descr": {"f": ""}, "params_occur": {"f": []}, "params_p": {"args": [], "f": [["Callable", 0.9999999983658743], ["Iterable[str]", 2.0426572102224083e-10], ["T", 2.0426572102224083e-10]], "kwargs": []}, "q_name": "action_logging.<locals>.log_action", "ret_exprs": ["return cast(T, wrapper)"], "ret_type": "T", "ret_type_p": [["str", 0.20161374965351436]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Decorator to log user actions.", "long_descr": null, "ret": null}, "fn_lc": [[78, 0], [131, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "action_logging", "params": {"event": "str | None", "func": "Callable | None"}, "params_descr": {"event": "", "func": ""}, "params_occur": {"event": [], "func": [["log_action", "func"]]}, "params_p": {"args": [], "event": [["bool", 0.22084342545291397], ["str", 0.19808042420451075], ["float", 0.10350521617022408], ["dict", 0.10125976317012021], ["List[annofabapi.models.Inspection]", 0.09408580211606749]], "func": [["str", 0.2905493906473049], ["TextIO", 0.12450985212480402], ["bool", 0.10240088272279664], ["float", 0.09146788448613426], ["int", 0.08970083659834747]], "kwargs": []}, "q_name": "action_logging", "ret_exprs": ["return log_action(func)", "return log_action"], "ret_type": "typing.Callable[[T], T]", "ret_type_p": [["bool", 0.5998042024491158], ["MutableSet[T]", 0.19988571966508675]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 8], [164, 27]], "fn_var_ln": {"accept_encoding": [[141, 12], [141, 27]], "data": [[159, 12], [159, 25]], "direct_passthrough": [[146, 12], [146, 39]], "gzip_buffer": [[154, 12], [154, 23]], "gzip_file": [[155, 12], [155, 21]]}, "fn_var_occur": {"accept_encoding": [["accept_encoding", "request", "headers", "get"], ["accept_encoding", "lower"]], "data": [["gzip_file", "write", "response", "data"], ["response", "data", "gzip_buffer", "getvalue"], ["response", "headers", "len", "response", "data"]], "direct_passthrough": [["response", "direct_passthrough", "False"]], "gzip_buffer": [["gzip_buffer", "IO"], ["gzip_file", "gzip", "GzipFile", "mode", "fileobj", "gzip_buffer"], ["response", "data", "gzip_buffer", "getvalue"]], "gzip_file": [["gzip_file", "gzip", "GzipFile", "mode", "fileobj", "gzip_buffer"], ["gzip_file", "write", "response", "data"], ["gzip_file", "close"]]}, "name": "zipper", "params": {"response": ""}, "params_descr": {"response": ""}, "params_occur": {"response": [["response", "direct_passthrough", "False"], ["response", "status_code", "response", "status_code", "response", "headers"], ["gzip_file", "write", "response", "data"], ["response", "data", "gzip_buffer", "getvalue"], ["response", "headers"], ["response", "headers"], ["response", "headers", "len", "response", "data"]]}, "params_p": {"args": [], "kwargs": [], "response": [["flask.Response", 0.09761883581798408], ["purplship.core.utils.serializable.Deserializable[str]", 0.08774126023164583]]}, "q_name": "gzipped.<locals>.view_func.<locals>.zipper", "ret_exprs": ["return response", "return response", "return response"], "ret_type": "", "ret_type_p": [["str", 0.11086641267625559], ["Optional[models.User]", 0.09179677257123156], ["Dict[str, Any]", 0.09054576774310995], ["dict", 0.09005575823362405]], "variables": {"accept_encoding": "", "data": "", "direct_passthrough": "", "gzip_buffer": "", "gzip_file": ""}, "variables_p": {"accept_encoding": [["str", 0.4690457326721885], ["list", 0.2144990533756401], ["Dict[str, str]", 0.11568398374684434], ["dict", 0.10288181829794606], ["Dict[int, Any]", 0.09788941190738105]], "data": [["dict", 0.4237478008246265], ["Dict[str, str]", 0.14877093250368115], ["Type[Dict[str, Any]]", 0.10529455387445288], ["requests.models.Response", 0.09140943161151437], ["Tuple[str, str, str]", 0.0785528188543892], ["bytes", 0.07838387107850409], ["Dict[str, Dict[str, Any]]", 0.07384059125283167]], "direct_passthrough": [["List[str]", 0.25659220819341494], ["Type[Dict[Any, Any]]", 0.1020708487493117], ["Dict[str, bool]", 0.06099805481028358], ["bool", 0.06099805481028358]], "gzip_buffer": [["io.StringIO", 0.43303248910884656], ["io.BufferedReader", 0.30080991016681147], ["io.BufferedWriter", 0.0885043184564053]], "gzip_file": [["str", 0.2730859305579799], ["io.TextIOWrapper", 0.17809173645618503], ["gzip.GzipFile", 0.17722461068831363], ["io.BufferedWriter", 0.08279469848355596], ["dict", 0.07750796669008211]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [166, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "view_func", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [["f", "args", "kwargs"]], "kwargs": [["f", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "gzipped.<locals>.view_func", "ret_exprs": ["return f(*args, **kwargs)"], "ret_type": "", "ret_type_p": [["str", 0.6005620288790682]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Decorator to make a view compressed.", "long_descr": null, "ret": null}, "fn_lc": [[134, 0], [168, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "gzipped", "params": {"f": "T"}, "params_descr": {"f": ""}, "params_occur": {"f": []}, "params_p": {"args": [], "f": [["Iterable[str]", 0.1], ["Callable", 0.1], ["T", 0.1]], "kwargs": []}, "q_name": "gzipped", "ret_exprs": ["return cast(T, view_func)"], "ret_type": "T", "ret_type_p": [["float", 0.22224874308110454], ["int", 0.11658983299972858], ["tuple", 0.07345969652075768]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "functools", "gzip", "json", "logging", "io", "BytesIO", "IO", "itertools", "chain", "typing", "Callable", "TypeVar", "cast", "pendulum", "flask", "after_this_request", "g", "request", "pendulum", "parsing", "exceptions", "ParserError", "airflow", "models", "Log", "airflow", "utils", "log", "secrets_masker", "airflow", "utils", "session", "create_session"], "mod_var_ln": {"T": [[36, 0], [36, 1]], "logger": [[38, 0], [38, 6]]}, "mod_var_occur": {"T": [["cast", "T", "wrapper"], ["cast", "T", "view_func"]], "logger": [["logger", "exception", "execution_date_value"]]}, "no_types_annot": {"D": 7, "I": 0, "U": 32}, "session_id": "VKR7WS9GeF0QeVY4MkvKJQ_S2MQ3ZqsNEqrVOIWvC6g", "set": null, "tc": [false, null], "type_annot_cove": 0.18, "typed_seq": "", "untyped_seq": "", "variables": {"T": "", "logger": ""}, "variables_p": {"T": [["float", 0.5409926385841521], ["str", 0.13264183939363183]], "logger": [["logging.Logger", 0.9190586110868021], ["vimiv.utils.log.LazyLogger", 0.08094138891319799]]}}}