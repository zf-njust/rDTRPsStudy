{"error": null, "response": {"classes": [{"cls_lc": [[43, 0], [582, 43]], "cls_var_ln": {"action_model": [[56, 4], [56, 16]], "permission_model": [[58, 4], [58, 20]], "registeruser_model": [[59, 4], [59, 22]], "resource_model": [[57, 4], [57, 18]], "role_model": [[54, 4], [54, 14]], "user_model": [[52, 4], [52, 14]]}, "cls_var_occur": {"action_model": [], "permission_model": [], "registeruser_model": [], "resource_model": [], "role_model": [], "user_model": []}, "funcs": [{"docstring": {"func": "Class constructor.", "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [89, 24]], "fn_var_ln": {"user_datamodel": [[68, 8], [68, 22]]}, "fn_var_occur": {"user_datamodel": [["user_datamodel", "SQLAInterface", "self", "user_model"], ["self", "userdbmodelview", "datamodel", "user_datamodel"], ["self", "userldapmodelview", "datamodel", "user_datamodel"], ["self", "useroidmodelview", "datamodel", "user_datamodel"], ["self", "useroauthmodelview", "datamodel", "user_datamodel"], ["self", "userremoteusermodelview", "datamodel", "user_datamodel"], ["self", "userstatschartview", "datamodel", "user_datamodel"]]}, "name": "__init__", "params": {"appbuilder": "", "self": ""}, "params_descr": {"appbuilder": "F.A.B AppBuilder main object", "self": ""}, "params_occur": {"appbuilder": [["super", "__init__", "appbuilder"]], "self": [["user_datamodel", "SQLAInterface", "self", "user_model"], ["self", "auth_type", "c", "AUTH_DB"], ["self", "userdbmodelview", "datamodel", "user_datamodel"], ["self", "auth_type", "c", "AUTH_LDAP"], ["self", "userldapmodelview", "datamodel", "user_datamodel"], ["self", "auth_type", "c", "AUTH_OID"], ["self", "useroidmodelview", "datamodel", "user_datamodel"], ["self", "auth_type", "c", "AUTH_OAUTH"], ["self", "useroauthmodelview", "datamodel", "user_datamodel"], ["self", "auth_type", "c", "AUTH_REMOTE_USER"], ["self", "userremoteusermodelview", "datamodel", "user_datamodel"], ["self", "userstatschartview"], ["self", "userstatschartview", "datamodel", "user_datamodel"], ["self", "auth_user_registration"], ["self", "registerusermodelview", "datamodel", "SQLAInterface", "self", "registeruser_model"], ["self", "rolemodelview", "datamodel", "SQLAInterface", "self", "role_model"], ["self", "actionmodelview", "datamodel", "SQLAInterface", "self", "action_model"], ["self", "resourcemodelview", "datamodel", "SQLAInterface", "self", "resource_model"], ["self", "permissionmodelview", "datamodel", "SQLAInterface", "self", "permission_model"], ["self", "create_db"]]}, "params_p": {"appbuilder": [["bool", 0.1], ["Dict[str, Any]", 0.1], ["Callable[[Any, Any], bool]", 0.1]], "args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.__init__", "ret_exprs": [], "ret_type": "", "variables": {"user_datamodel": ""}, "variables_p": {"user_datamodel": [["dict", 0.11500277727130571], ["crypto.CryptoTrader.User", 0.10475150979709702], ["Dict[str, Union[int, str]]", 0.10250815610731452], ["Optional[str]", 0.09108547478804897]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [93, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_session", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "appbuilder", "get_session"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.get_session", "ret_exprs": ["return self.appbuilder.get_session"], "ret_type": "", "ret_type_p": [["str", 0.4982220341712329], ["Callable", 0.18449997662353268], ["Set[str]", 0.1107308866651223], ["bool", 0.10327355127005604], ["int", 0.10327355127005604]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [96, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "register_views", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.register_views", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [109, 19]], "fn_var_ln": {"engine": [[100, 12], [100, 18]], "inspector": [[101, 12], [101, 21]]}, "fn_var_occur": {"engine": [["engine", "self", "get_session", "get_bind", "mapper", "None", "clause", "None"], ["inspector", "inspect", "engine"], ["Base", "metadata", "create_all", "engine"]], "inspector": [["inspector", "inspect", "engine"], ["inspector", "get_table_names"]]}, "name": "create_db", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["engine", "self", "get_session", "get_bind", "mapper", "None", "clause", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.create_db", "ret_exprs": [], "ret_type": "", "variables": {"engine": "", "inspector": ""}, "variables_p": {"engine": [["str", 0.18904853302190763], ["List[int]", 0.14411603566922304], ["Optional[float]", 0.10663682924590834], ["Optional[int]", 0.1022222270454554], ["List[None]", 0.0997119991793892], ["Tuple[int]", 0.09753723897368168], ["Union[Literal, Literal]", 0.08265938573040049]], "inspector": [["str", 0.3248049903949279], ["Optional[str]", 0.09755036569140915], ["NamedTuple", 0.09755036569140915], ["Dict[str, int]", 0.09625581595525869], ["Set[str]", 0.09369496852778514], ["dict", 0.09314072785452786]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[111, 4], [116, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "find_register_user", "params": {"registration_hash": "", "self": ""}, "params_descr": {"registration_hash": "", "self": ""}, "params_occur": {"registration_hash": [["self", "get_session", "query", "self", "registeruser_model", "filter", "self", "registeruser_model", "registration_hash", "registration_hash", "scalar"]], "self": [["self", "get_session", "query", "self", "registeruser_model", "filter", "self", "registeruser_model", "registration_hash", "registration_hash", "scalar"]]}, "params_p": {"args": [], "kwargs": [], "registration_hash": [["str", 0.3443856434470841], ["int", 0.22921477997845882], ["Dict[str, Any]", 0.14997414571962858], ["db.models.Name", 0.09995618380863767]], "self": []}, "q_name": "SecurityManager.find_register_user", "ret_exprs": ["return ( self.get_session.query(self.registeruser_model) .filter(self.registeruser_model.registration_hash == registration_hash) .scalar())"], "ret_type": "", "ret_type_p": [["dict", 0.2985543584154008], ["str", 0.11071894313488481], ["Dict[int, Dict[int, Any]]", 0.09909785043782691], ["Dict[str, Dict[str, Any]]", 0.09416290462487223], ["users.models.User", 0.09110300285106523]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Add a registration request for the user.", "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [141, 23]], "fn_var_ln": {"email": [[126, 8], [126, 27]], "first_name": [[127, 8], [127, 32]], "last_name": [[128, 8], [128, 31]], "password": [[132, 12], [132, 34]], "register_user": [[124, 8], [124, 21]], "registration_hash": [[133, 8], [133, 39]], "username": [[125, 8], [125, 30]]}, "fn_var_occur": {"email": [["register_user", "email", "email"]], "first_name": [["register_user", "first_name", "first_name"]], "last_name": [["register_user", "last_name", "last_name"]], "password": [["register_user", "password", "hashed_password"], ["register_user", "password", "generate_password_hash", "password"]], "register_user": [["register_user", "self", "registeruser_model"], ["register_user", "username", "username"], ["register_user", "email", "email"], ["register_user", "first_name", "first_name"], ["register_user", "last_name", "last_name"], ["register_user", "password", "hashed_password"], ["register_user", "password", "generate_password_hash", "password"], ["register_user", "registration_hash", "str", "uuid", "uuid1"], ["self", "get_session", "add", "register_user"]], "registration_hash": [["register_user", "registration_hash", "str", "uuid", "uuid1"]], "username": [["register_user", "username", "username"]]}, "name": "add_register_user", "params": {"email": "", "first_name": "", "hashed_password": "", "last_name": "", "password": "", "self": "", "username": ""}, "params_descr": {"email": "", "first_name": "", "hashed_password": "", "last_name": "", "password": "", "self": "", "username": ""}, "params_occur": {"email": [["register_user", "email", "email"]], "first_name": [["register_user", "first_name", "first_name"]], "hashed_password": [["register_user", "password", "hashed_password"]], "last_name": [["register_user", "last_name", "last_name"]], "password": [["register_user", "password", "hashed_password"], ["register_user", "password", "generate_password_hash", "password"]], "self": [["register_user", "self", "registeruser_model"], ["self", "get_session", "add", "register_user"], ["self", "get_session", "commit"], ["self", "appbuilder", "get_session", "rollback"]], "username": [["register_user", "username", "username"]]}, "params_p": {"args": [], "email": [["str", 0.810662907907722], ["Optional[\"LocalizedString\"]", 0.09676989918867109]], "first_name": [["str", 0.902662240447672]], "hashed_password": [["str", 1.0]], "kwargs": [], "last_name": [["str", 0.902662240447672]], "password": [["str", 0.9068107870058625], ["int", 0.09318921299413763]], "self": [], "username": [["str", 0.9999999999999999]]}, "q_name": "SecurityManager.add_register_user", "ret_exprs": ["return register_user", "return None"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.21396457099692695], ["str", 0.19036139026045457], ["server.models.User", 0.10672351011665292], ["Iterable[T]", 0.10068583771624605], ["int", 0.09982726108220694]], "variables": {"email": "", "first_name": "", "last_name": "", "password": "", "register_user": "", "registration_hash": "", "username": ""}, "variables_p": {"email": [["str", 0.9999999999999999]], "first_name": [["str", 0.8959732412040101], ["Set[str]", 0.10402675879599001]], "last_name": [["str", 0.5669198127725258], ["Set[str]", 0.1830356999549591], ["List[str]", 0.17110305191984115], ["Dict[str, str]", 0.07894143535267407]], "password": [["str", 1.0000000000000002]], "register_user": [["str", 0.10130574057042045], ["DefaultDict[Any, None]", 0.09108507588548781], ["securedrop_cliendb.User", 0.0894936793439303], ["list", 0.08835928466841611], ["Dict[str, str]", 0.08802972992963418], ["Optional[grpy.core.models.User]", 0.08442744769119993]], "registration_hash": [["str", 0.5918299800126228], ["Dict[int, str]", 0.11970740450985445], ["Tuple[Literal, Literal, Literal]", 0.10246003862909464], ["Type[str]", 0.10095556249250746], ["Dict[str, str]", 0.08504701435592078]], "username": [["str", 0.2499737647820399], ["List[str]", 0.0983190757049693]]}}, {"docstring": {"func": "Deletes registration object from database.", "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [156, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "del_register_user", "params": {"register_user": "", "self": ""}, "params_descr": {"register_user": "RegisterUser object to delete", "self": ""}, "params_occur": {"register_user": [["self", "get_session", "delete", "register_user"]], "self": [["self", "get_session", "delete", "register_user"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "register_user": [["str", 0.36372863083218343], ["bob_emploi.frontend.api.user_pb2.User", 0.09835091387683484]], "self": []}, "q_name": "SecurityManager.del_register_user", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Finds user by username or email.", "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [182, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "find_user", "params": {"email": "", "self": "", "username": ""}, "params_descr": {"email": "", "self": "", "username": ""}, "params_occur": {"email": [["self", "get_session", "query", "self", "user_model", "filter_by", "email", "email", "one_or_none"], ["log", "error", "email"]], "self": [["self", "auth_username_ci"], ["self", "get_session", "query", "self", "user_model", "filter", "func", "lower", "self", "user_model", "username", "func", "lower", "username", "one_or_none"], ["self", "get_session", "query", "self", "user_model", "filter", "func", "lower", "self", "user_model", "username", "func", "lower", "username", "one_or_none"], ["self", "get_session", "query", "self", "user_model", "filter_by", "email", "email", "one_or_none"]], "username": [["self", "get_session", "query", "self", "user_model", "filter", "func", "lower", "self", "user_model", "username", "func", "lower", "username", "one_or_none"], ["self", "get_session", "query", "self", "user_model", "filter", "func", "lower", "self", "user_model", "username", "func", "lower", "username", "one_or_none"], ["log", "error", "username"]]}, "params_p": {"args": [], "email": [["str", 0.9082753372933838], ["int", 0.09172466270661604]], "kwargs": [], "self": [], "username": [["str", 0.7223872236865279], ["zerver.models.UserProfile", 0.10716591130868124], ["Optional[str]", 0.08522343250239549]]}, "q_name": "SecurityManager.find_user", "ret_exprs": ["return ( self.get_session.query(self.user_model) .filter(func.lower(self.user_model.username) == func.lower(username)) .one_or_none())", "return ( self.get_session.query(self.user_model) .filter(func.lower(self.user_model.username) == func.lower(username)) .one_or_none())", "return None", "return self.get_session.query(self.user_model).filter_by(email=email).one_or_none()", "return None"], "ret_type": "", "ret_type_p": [["Dict[str, Set[str]]", 0.1843570596594318], ["Dict[int, Dict[int, Any]]", 0.11287405797721513], ["Dict[str, Any]", 0.10089885634771124], ["dict", 0.09458428721458927], ["Dict[str, str]", 0.09200501072951565]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [185, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_all_users", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "get_session", "query", "self", "user_model", "all"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.get_all_users", "ret_exprs": ["return self.get_session.query(self.user_model).all()"], "ret_type": "", "ret_type_p": [["str", 0.11227000624098832], ["users.models.User", 0.1077068401373103], ["Dict[str, Dict[str, str]]", 0.09890568946905073], ["Dict[str, Any]", 0.09415600743462964], ["Iterable[str]", 0.09324491229471582]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Generic function to create user.", "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [217, 24]], "fn_var_ln": {"active": [[204, 12], [204, 23]], "email": [[203, 12], [203, 22]], "first_name": [[200, 12], [200, 27]], "last_name": [[201, 12], [201, 26]], "password": [[209, 16], [209, 29]], "roles": [[205, 12], [205, 22]], "user": [[199, 12], [199, 16]], "username": [[202, 12], [202, 25]]}, "fn_var_occur": {"active": [["user", "active", "True"]], "email": [["user", "email", "email"]], "first_name": [["user", "first_name", "first_name"]], "last_name": [["user", "last_name", "last_name"]], "password": [["user", "password", "hashed_password"], ["user", "password", "generate_password_hash", "password"]], "roles": [["user", "roles", "role", "isinstance", "role", "list", "role"]], "user": [["user", "self", "user_model"], ["user", "first_name", "first_name"], ["user", "last_name", "last_name"], ["user", "username", "username"], ["user", "email", "email"], ["user", "active", "True"], ["user", "roles", "role", "isinstance", "role", "list", "role"], ["user", "password", "hashed_password"], ["user", "password", "generate_password_hash", "password"], ["self", "get_session", "add", "user"]], "username": [["user", "username", "username"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_USER", "format", "username"]]}, "name": "add_user", "params": {"email": "", "first_name": "", "hashed_password": "", "last_name": "", "password": "", "role": "", "self": "", "username": ""}, "params_descr": {"email": "", "first_name": "", "hashed_password": "", "last_name": "", "password": "", "role": "", "self": "", "username": ""}, "params_occur": {"email": [["user", "email", "email"]], "first_name": [["user", "first_name", "first_name"]], "hashed_password": [["user", "password", "hashed_password"]], "last_name": [["user", "last_name", "last_name"]], "password": [["user", "password", "hashed_password"], ["user", "password", "generate_password_hash", "password"]], "role": [["user", "roles", "role", "isinstance", "role", "list", "role"]], "self": [["user", "self", "user_model"], ["self", "get_session", "add", "user"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]], "username": [["user", "username", "username"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_USER", "format", "username"]]}, "params_p": {"args": [], "email": [["str", 0.5917647943102626], ["List[str]", 0.19758461233376332], ["Optional[str]", 0.12738802256620319], ["Dict[Any, list]", 0.08326257078977077]], "first_name": [["str", 0.915606760380222], ["Optional[str]", 0.08439323961977808]], "hashed_password": [["zerver.models.Realm", 0.21664206421280469], ["List[str]", 0.20760554241449597], ["Optional[str]", 0.09915530963524906], ["list", 0.0854478468381479], ["int", 0.0817938655473368]], "kwargs": [], "last_name": [["str", 0.915606760380222], ["Optional[str]", 0.08439323961977808]], "password": [["str", 0.7204159435362099], ["int", 0.0945173605829733], ["list", 0.08722535489190689]], "role": [["List[str]", 0.2886663423711819], ["Dict[str, str]", 0.21701342923102748], ["Callable", 0.107098606550514], ["str", 0.09855527947609469]], "self": [], "username": [["str", 0.7649904769758024], ["int", 0.10410472075739617]]}, "q_name": "SecurityManager.add_user", "ret_exprs": ["return user", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.8113964820736109], ["Optional[str]", 0.18860351792638896]], "variables": {"active": "", "email": "", "first_name": "", "last_name": "", "password": "", "roles": "", "user": "", "username": ""}, "variables_p": {"active": [["bool", 0.7999999999999999], ["str", 0.1]], "email": [["str", 0.9999999999683966], ["bytes", 1.070203466170578e-11], ["List[str]", 1.026660768499196e-11]], "first_name": [["str", 0.9999999998205793], ["Set[str]", 1.1961379211875693e-10], ["bool", 2.990344802968923e-11], ["Dict[str, Any]", 2.990344802968923e-11]], "last_name": [["str", 0.4307647137124565], ["Set[str]", 0.37949019085836233], ["bool", 0.09487254771459058], ["Dict[str, Any]", 0.09487254771459058]], "password": [["str", 0.18508360730170498], ["Counter[str]", 0.13202595463003203], ["Dict[str, str]", 0.10590188842872542], ["Dict[Any, Tuple[str, str]]", 0.09953350077859505], ["set", 0.09823284680782224], ["int", 0.09538639063259702], ["Tuple[Literal, Literal, Literal, Literal]", 0.09422018118668397], ["Pattern[str]", 0.09028470391147239]], "roles": [["Tuple[Literal, Literal, Literal, Literal]", 0.08940434707611186], ["List[str]", 0.08585700691288399], ["int", 0.08376596607923335]], "user": [["str", 0.49061310188522533], ["Type[bootcamp.news.models.News]", 0.12475578652102975], ["Dict[str, str]", 0.1049486996544364], ["Dict[str, Tuple[str, str]]", 0.09923948041479118], ["List[Union[Any, Any, Any]]", 0.09223133534886511]], "username": [["str", 0.5408380812524867], ["int", 0.17801591488371388], ["logging.handlers.QueueListener", 0.09699079325724626], ["Optional[Match[str]]", 0.09007604156917194]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[219, 4], [220, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "count_users", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "get_session", "query", "func", "count", "self", "user_model", "id", "scalar"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.count_users", "ret_exprs": ["return self.get_session.query(func.count(self.user_model.id)).scalar()"], "ret_type": "", "ret_type_p": [["dict", 0.13692898740106366], ["arxiv.users.domain.User", 0.09857197364459791], ["zerver.models.UserProfile", 0.09337408977078074], ["models.User", 0.0913198075898936], ["Dict[str, Any]", 0.09056932769456699]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[222, 4], [230, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "update_user", "params": {"self": "", "user": ""}, "params_descr": {"self": "", "user": ""}, "params_occur": {"self": [["self", "get_session", "merge", "user"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]], "user": [["self", "get_session", "merge", "user"], ["log", "info", "c", "LOGMSG_INF_SEC_UPD_USER", "format", "user"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "user": [["str", 0.7989503414585409], ["arxiv.users.domain.User", 0.10068307111134245], ["sqlalchemy.orm.Session", 0.10036658743011663]]}, "q_name": "SecurityManager.update_user", "ret_exprs": ["return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[232, 4], [233, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_user_by_id", "params": {"pk": "", "self": ""}, "params_descr": {"pk": "", "self": ""}, "params_occur": {"pk": [["self", "get_session", "get", "self", "user_model", "pk"]], "self": [["self", "get_session", "get", "self", "user_model", "pk"]]}, "params_p": {"args": [], "kwargs": [], "pk": [["str", 0.5746823455728478], ["werkzeug.datastructures.ImmutableMultiDict", 0.09155784026400901], ["zerver.models.Realm", 0.08302849239641466], ["Union[server.models.User, int]", 0.08214226108290722]], "self": []}, "q_name": "SecurityManager.get_user_by_id", "ret_exprs": ["return self.get_session.get(self.user_model, pk)"], "ret_type": "", "ret_type_p": [["str", 0.1905265606057382], ["Optional[Any]", 0.1255920449221297], ["User", 0.09412538983803254], ["zerver.models.UserProfile", 0.09395463917796085]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[235, 4], [248, 19]], "fn_var_ln": {"name": [[240, 16], [240, 25]], "role": [[239, 16], [239, 20]]}, "fn_var_occur": {"name": [["role", "self", "find_role", "name"], ["role", "name", "name"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_ROLE", "format", "name"]], "role": [["role", "self", "find_role", "name"], ["role", "None"], ["role", "self", "role_model"], ["role", "name", "name"], ["self", "get_session", "add", "role"]]}, "name": "add_role", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["role", "self", "find_role", "name"], ["role", "name", "name"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_ROLE", "format", "name"]], "self": [["role", "self", "find_role", "name"], ["role", "self", "role_model"], ["self", "get_session", "add", "role"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.8254540424725308], ["Sequence[str]", 0.08842518262288743]], "self": []}, "q_name": "SecurityManager.add_role", "ret_exprs": ["return role", "return role"], "ret_type": "airflow.www.fab_security.sqla.models.Role", "ret_type_p": [["int", 0.3], ["Optional[str]", 0.09999999999999999]], "variables": {"name": "", "role": ""}, "variables_p": {"name": [["str", 1.0]], "role": [["Dict[str, str]", 0.2702206342531115], ["str", 0.09755611056378426]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[250, 4], [263, 19]], "fn_var_ln": {"name": [[255, 12], [255, 21]], "role": [[251, 8], [251, 12]]}, "fn_var_occur": {"name": [["role", "name", "name"]], "role": [["role", "self", "get_session", "get", "self", "role_model", "role_id"], ["role", "name", "name"], ["self", "get_session", "merge", "role"], ["log", "info", "c", "LOGMSG_INF_SEC_UPD_ROLE", "format", "role"]]}, "name": "update_role", "params": {"name": "builtins.str", "role_id": "", "self": ""}, "params_descr": {"name": "", "role_id": "", "self": ""}, "params_occur": {"name": [["role", "name", "name"]], "role_id": [["role", "self", "get_session", "get", "self", "role_model", "role_id"]], "self": [["role", "self", "get_session", "get", "self", "role_model", "role_id"], ["self", "get_session", "merge", "role"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 1.0000000000000002]], "role_id": [["str", 1.0000000000000002]], "self": []}, "q_name": "SecurityManager.update_role", "ret_exprs": ["return None", "return None", "return role"], "ret_type": "Role | None", "ret_type_p": [["Optional[bool]", 0.22472130079574337], ["bool", 0.19435198004767978], ["Optional[float]", 0.09957620072060888], ["str", 0.09758138074411749], ["Optional[int]", 0.09450719657893304], ["List[str]", 0.09040309095718926]], "variables": {"name": "", "role": ""}, "variables_p": {"name": [["dict", 0.9999999996804222], ["str", 2.201275414401971e-10], ["Dict[str, str]", 3.2277902367291697e-11], ["Optional[str]", 3.0485879282208145e-11]], "role": [["int", 0.19621962845912455], ["str", 0.17571788876982253], ["list", 0.16980763870364324], ["dict", 0.16621243602798294], ["List[Tuple[Any, Any]]", 0.10082825142557357], ["Dict[str, Union[Any, Any]]", 0.09398140573191043]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[265, 4], [266, 89]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "find_role", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "get_session", "query", "self", "role_model", "filter_by", "name", "name", "one_or_none"]], "self": [["self", "get_session", "query", "self", "role_model", "filter_by", "name", "name", "one_or_none"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.4027344284410451], ["bool", 0.190220922269661], ["django.db.models.Model", 0.11189694556517268], ["List[str]", 0.1049267814544603]], "self": []}, "q_name": "SecurityManager.find_role", "ret_exprs": ["return self.get_session.query(self.role_model).filter_by(name=name).one_or_none()"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.28260603318747224], ["Dict[str, Any]", 0.20430929339004816], ["Dict[str, Set[str]]", 0.18414814465799434], ["Dict[int, Dict[int, Any]]", 0.10083026564454797]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[268, 4], [269, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_all_roles", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "get_session", "query", "self", "role_model", "all"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.get_all_roles", "ret_exprs": ["return self.get_session.query(self.role_model).all()"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.28457660142006386], ["str", 0.10362013235517255], ["Dict[str, Dict[str, str]]", 0.09912094959758676], ["Dict[str, Any]", 0.09366029476927971]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [272, 106]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_public_role", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "get_session", "query", "self", "role_model", "filter_by", "name", "self", "auth_role_public", "one_or_none"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.get_public_role", "ret_exprs": ["return self.get_session.query(self.role_model).filter_by(name=self.auth_role_public).one_or_none()"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.19420142806712268], ["Dict[str, str]", 0.1886767506019257], ["Dict[str, Dict[str, str]]", 0.10253428669909868], ["dict", 0.09592064969660948], ["List[int]", 0.09396338827922034]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Gets an existing action record.", "long_descr": null, "ret": "Action record, if it exists"}, "fn_lc": [[274, 4], [281, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_action", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "name", "self": ""}, "params_occur": {"name": [["self", "get_session", "query", "self", "action_model", "filter_by", "name", "name", "one_or_none"]], "self": [["self", "get_session", "query", "self", "action_model", "filter_by", "name", "name", "one_or_none"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7248768970456074], ["List[str]", 0.11949122475489246], ["bool", 0.07781593909974996], ["django.db.models.Model", 0.07781593909974996]], "self": []}, "q_name": "SecurityManager.get_action", "ret_exprs": ["return self.get_session.query(self.action_model).filter_by(name=name).one_or_none()"], "ret_type": "airflow.www.fab_security.sqla.models.Action", "ret_type_p": [["Dict[str, Any]", 0.19420142806712268], ["Dict[str, str]", 0.1886767506019257], ["Dict[str, Dict[str, str]]", 0.10253428669909868], ["dict", 0.09592064969660948], ["List[int]", 0.09396338827922034]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Method to efficiently check if a certain permission exists", "long_descr": "on a list of role id's. This is used by `has_access`.", "ret": "Boolean"}, "fn_lc": [[283, 4], [314, 60]], "fn_var_ln": {"q": [[295, 8], [295, 9]]}, "fn_var_occur": {"q": [["q", "self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "resource_model", "name", "resource_name", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "exists"], ["self", "appbuilder", "get_session", "query", "literal", "True", "filter", "q", "scalar"], ["self", "appbuilder", "get_session", "query", "q", "scalar"]]}, "name": "permission_exists_in_one_or_more_roles", "params": {"action_name": "builtins.str", "resource_name": "builtins.str", "role_ids": "builtins.list[builtins.int]", "self": ""}, "params_descr": {"action_name": "The permission name to check if exists", "resource_name": "The view's name to check if exists on one of the roles", "role_ids": "a list of Role ids", "self": ""}, "params_occur": {"action_name": [["q", "self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "resource_model", "name", "resource_name", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "exists"]], "resource_name": [["q", "self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "resource_model", "name", "resource_name", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "exists"]], "role_ids": [["q", "self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "resource_model", "name", "resource_name", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "exists"]], "self": [["q", "self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "resource_model", "name", "resource_name", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "exists"], ["self", "appbuilder", "get_session", "bind", "dialect", "name"], ["self", "appbuilder", "get_session", "query", "literal", "True", "filter", "q", "scalar"], ["self", "appbuilder", "get_session", "query", "q", "scalar"]]}, "params_p": {"action_name": [["str", 0.6065839776614483], ["bool", 0.1118242253974125], ["Optional[str]", 0.10265688316323136], ["int", 0.09487359021583133]], "args": [], "kwargs": [], "resource_name": [["str", 0.6065839776614483], ["bool", 0.1118242253974125], ["Optional[str]", 0.10265688316323136], ["int", 0.09487359021583133]], "role_ids": [["str", 0.6065839776614483], ["bool", 0.1118242253974125], ["Optional[str]", 0.10265688316323136], ["int", 0.09487359021583133]], "self": []}, "q_name": "SecurityManager.permission_exists_in_one_or_more_roles", "ret_exprs": ["return self.appbuilder.get_session.query(literal(True)).filter(q).scalar()", "return self.appbuilder.get_session.query(q).scalar()"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.41451534174988997], ["zerver.models.CustomProfileField", 0.10376707790118192], ["Tuple[List[Any], int]", 0.10312090278146448], ["Optional[str]", 0.10021064654645252], ["Dict[str, Any]", 0.09278691035541631], ["Optional[Dict[str, str]]", 0.09222083128427541]], "variables": {"q": ""}, "variables_p": {"q": [["str", 0.18223374185959523], ["List[str]", 0.11453563359982681], ["list", 0.0990404427365533], ["bool", 0.09297615251884533], ["Optional[str]", 0.08925758934074988], ["Dict[str, Any]", 0.08925758934074988]]}}, {"docstring": {"func": "Find roles with permission.", "long_descr": null, "ret": null}, "fn_lc": [[316, 4], [331, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "filter_roles_by_perm_with_action", "params": {"action_name": "builtins.str", "role_ids": "builtins.list[builtins.int]", "self": ""}, "params_descr": {"action_name": "", "role_ids": "", "self": ""}, "params_occur": {"action_name": [["self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "all"]], "role_ids": [["self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "all"]], "self": [["self", "appbuilder", "get_session", "query", "self", "permission_model", "join", "assoc_permission_role", "and_", "self", "permission_model", "id", "assoc_permission_role", "c", "permission_view_id", "join", "self", "role_model", "join", "self", "action_model", "join", "self", "resource_model", "filter", "self", "action_model", "name", "action_name", "self", "role_model", "id", "in_", "role_ids", "all"]]}, "params_p": {"action_name": [["str", 0.5679103830785319], ["int", 0.20087473704129685], ["bool", 0.09166124234651195]], "args": [], "kwargs": [], "role_ids": [["str", 0.5679103830785319], ["int", 0.20087473704129685], ["bool", 0.09166124234651195]], "self": []}, "q_name": "SecurityManager.filter_roles_by_perm_with_action", "ret_exprs": ["return ( self.appbuilder.get_session.query(self.permission_model) .join( assoc_permission_role, and_(self.permission_model.id == assoc_permission_role.c.permission_view_id), ) .join(self.role_model) .join(self.action_model) .join(self.resource_model) .filter( self.action_model.name == action_name, self.role_model.id.in_(role_ids), )).all()"], "ret_type": "", "ret_type_p": [["Iterable['Notification']", 0.10687548276035555], ["Iterable[Any]", 0.09756141730382703], ["dict", 0.09244428194854695]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Adds an action to the backend, model action.", "long_descr": null, "ret": null}, "fn_lc": [[333, 4], [351, 21]], "fn_var_ln": {"action": [[343, 16], [343, 22]], "name": [[344, 16], [344, 27]]}, "fn_var_occur": {"action": [["action", "self", "get_action", "name"], ["action", "None"], ["action", "self", "action_model"], ["action", "name", "name"], ["self", "get_session", "add", "action"]], "name": [["action", "self", "get_action", "name"], ["action", "name", "name"]]}, "name": "create_action", "params": {"name": "", "self": ""}, "params_descr": {"name": "name of the action: 'can_add','can_edit' etc...", "self": ""}, "params_occur": {"name": [["action", "self", "get_action", "name"], ["action", "name", "name"]], "self": [["action", "self", "get_action", "name"], ["action", "self", "action_model"], ["self", "get_session", "add", "action"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.6433971789810562], ["Union[int, float]", 0.0903262128202976], ["bool", 0.0903262128202976]], "self": []}, "q_name": "SecurityManager.create_action", "ret_exprs": ["return action", "return action"], "ret_type": "", "ret_type_p": [["bool", 0.5], ["float", 0.1]], "variables": {"action": "", "name": ""}, "variables_p": {"action": [["str", 0.17601482452433234], ["Set[str]", 0.15189975175012463], ["dict", 0.10534261433050235]], "name": [["str", 0.7142249980322166], ["Type[taxonomy.db.models.name.Name]", 0.08939066713080421]]}}, {"docstring": {"func": "Deletes a permission action.", "long_descr": null, "ret": "Whether or not delete was successful."}, "fn_lc": [[353, 4], [379, 24]], "fn_var_ln": {"action": [[360, 8], [360, 14]], "perms": [[365, 12], [365, 17]]}, "fn_var_occur": {"action": [["action", "self", "get_action", "name"], ["perms", "self", "get_session", "query", "self", "permission_model", "filter", "self", "permission_model", "action", "action", "all"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERM_PVM", "format", "action", "perms"], ["self", "get_session", "delete", "action"]], "perms": [["perms", "self", "get_session", "query", "self", "permission_model", "filter", "self", "permission_model", "action", "action", "all"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERM_PVM", "format", "action", "perms"]]}, "name": "delete_action", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "Name of action to delete (e.g. can_read).", "self": ""}, "params_occur": {"name": [["action", "self", "get_action", "name"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERMISSION", "format", "name"]], "self": [["action", "self", "get_action", "name"], ["perms", "self", "get_session", "query", "self", "permission_model", "filter", "self", "permission_model", "action", "action", "all"], ["self", "get_session", "delete", "action"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 1.0]], "self": []}, "q_name": "SecurityManager.delete_action", "ret_exprs": ["return False", "return False", "return True", "return False"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"action": "", "perms": ""}, "variables_p": {"action": [["str", 0.903899910682116], ["dict", 0.09610008931788394]], "perms": [["List[Dict[str, str]]", 0.13142100676380297], ["List[str]", 0.11006558918842504], ["str", 0.09755819659935785], ["Tuple[int, int]", 0.09563123393865226], ["Dict[str, str]", 0.0926980254501838], ["Dict[str, Dict[str, Any]]", 0.08743308652304214], ["int", 0.08737038470764028]]}}, {"docstring": {"func": "Returns a resource record by name, if it exists.", "long_descr": null, "ret": "Resource record"}, "fn_lc": [[381, 4], [388, 93]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_resource", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "Name of resource", "self": ""}, "params_occur": {"name": [["self", "get_session", "query", "self", "resource_model", "filter_by", "name", "name", "one_or_none"]], "self": [["self", "get_session", "query", "self", "resource_model", "filter_by", "name", "name", "one_or_none"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 1.0000000000000002]], "self": []}, "q_name": "SecurityManager.get_resource", "ret_exprs": ["return self.get_session.query(self.resource_model).filter_by(name=name).one_or_none()"], "ret_type": "airflow.www.fab_security.sqla.models.Resource", "ret_type_p": [["Dict[str, Any]", 0.19420142806712268], ["Dict[str, str]", 0.1886767506019257], ["Dict[str, Dict[str, str]]", 0.10253428669909868], ["dict", 0.09592064969660948], ["List[int]", 0.09396338827922034]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Gets all existing resource records.", "long_descr": null, "ret": "List of all resources"}, "fn_lc": [[390, 4], [396, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_all_resources", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "get_session", "query", "self", "resource_model", "all"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SecurityManager.get_all_resources", "ret_exprs": ["return self.get_session.query(self.resource_model).all()"], "ret_type": "builtins.list[airflow.www.fab_security.sqla.models.Resource]", "ret_type_p": [["Optional[str]", 0.28457660142006386], ["str", 0.10362013235517255], ["Dict[str, Dict[str, str]]", 0.09912094959758676], ["Dict[str, Any]", 0.09366029476927971]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create a resource with the given name.", "long_descr": null, "ret": "The FAB resource created."}, "fn_lc": [[398, 4], [416, 23]], "fn_var_ln": {"name": [[409, 16], [409, 29]], "resource": [[408, 16], [408, 24]]}, "fn_var_occur": {"name": [["resource", "self", "get_resource", "name"], ["resource", "name", "name"]], "resource": [["resource", "self", "get_resource", "name"], ["resource", "None"], ["resource", "self", "resource_model"], ["resource", "name", "name"], ["self", "get_session", "add", "resource"]]}, "name": "create_resource", "params": {"name": "", "self": ""}, "params_descr": {"name": "The name of the resource to create created.", "self": ""}, "params_occur": {"name": [["resource", "self", "get_resource", "name"], ["resource", "name", "name"]], "self": [["resource", "self", "get_resource", "name"], ["resource", "self", "resource_model"], ["self", "get_session", "add", "resource"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.6983821448524264]], "self": []}, "q_name": "SecurityManager.create_resource", "ret_exprs": ["return resource", "return resource"], "ret_type": "airflow.www.fab_security.sqla.models.Resource", "ret_type_p": [["bool", 0.5], ["float", 0.1]], "variables": {"name": "", "resource": ""}, "variables_p": {"name": [["str", 0.4193659799734041]], "resource": [["str", 0.13119866370311606], ["list", 0.09151046576853625]]}}, {"docstring": {"func": "Deletes a Resource from the backend.", "long_descr": null, "ret": null}, "fn_lc": [[418, 4], [444, 24]], "fn_var_ln": {"perms": [[430, 12], [430, 17]], "resource": [[425, 8], [425, 16]]}, "fn_var_occur": {"perms": [["perms", "self", "get_session", "query", "self", "permission_model", "filter", "self", "permission_model", "resource", "resource", "all"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_VIEWMENU_PVM", "format", "resource", "perms"]], "resource": [["resource", "self", "get_resource", "name"], ["perms", "self", "get_session", "query", "self", "permission_model", "filter", "self", "permission_model", "resource", "resource", "all"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_VIEWMENU_PVM", "format", "resource", "perms"], ["self", "get_session", "delete", "resource"]]}, "name": "delete_resource", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "name of the resource", "self": ""}, "params_occur": {"name": [["resource", "self", "get_resource", "name"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_VIEWMENU", "format", "name"]], "self": [["resource", "self", "get_resource", "name"], ["perms", "self", "get_session", "query", "self", "permission_model", "filter", "self", "permission_model", "resource", "resource", "all"], ["self", "get_session", "delete", "resource"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 1.0]], "self": []}, "q_name": "SecurityManager.delete_resource", "ret_exprs": ["return False", "return False", "return True", "return False"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"perms": "", "resource": ""}, "variables_p": {"perms": [["float", 0.2280919846146036], ["List[str]", 0.12157458322836277], ["int", 0.10493052338310431], ["List[Dict[str, str]]", 0.08707616799305366], ["dict", 0.08577185671080735], ["Callable(inspecgetargspec)[[Named(func, object)], inspecArgSpec]", 0.08408038780388848]], "resource": [["float", 0.40676113071810116], ["bool", 0.19752525758401893], ["int", 0.10291748311241852], ["str", 0.09876262879200946]]}}, {"docstring": {"func": "Gets a permission made with the given action->resource pair, if the permission already exists.", "long_descr": null, "ret": "The existing permission"}, "fn_lc": [[452, 4], [472, 19]], "fn_var_ln": {"action": [[464, 8], [464, 14]], "resource": [[465, 8], [465, 16]]}, "fn_var_occur": {"action": [["action", "self", "get_action", "action_name"], ["action", "resource"], ["self", "get_session", "query", "self", "permission_model", "filter_by", "action", "action", "resource", "resource", "one_or_none"]], "resource": [["resource", "self", "get_resource", "resource_name"], ["action", "resource"], ["self", "get_session", "query", "self", "permission_model", "filter_by", "action", "action", "resource", "resource", "one_or_none"]]}, "name": "get_permission", "params": {"action_name": "builtins.str", "resource_name": "builtins.str", "self": ""}, "params_descr": {"action_name": "Name of action", "resource_name": "Name of resource", "self": ""}, "params_occur": {"action_name": [["action", "self", "get_action", "action_name"]], "resource_name": [["resource", "self", "get_resource", "resource_name"]], "self": [["action", "self", "get_action", "action_name"], ["resource", "self", "get_resource", "resource_name"], ["self", "get_session", "query", "self", "permission_model", "filter_by", "action", "action", "resource", "resource", "one_or_none"]]}, "params_p": {"action_name": [["str", 0.9203894016586148], ["Optional[str]", 0.07961059834138517]], "args": [], "kwargs": [], "resource_name": [["str", 1.0]], "self": []}, "q_name": "SecurityManager.get_permission", "ret_exprs": ["return ( self.get_session.query(self.permission_model) .filter_by(action=action, resource=resource) .one_or_none())", "return None"], "ret_type": "Permission | None", "ret_type_p": [["List[str]", 0.11270549829371515], ["User", 0.10652930694119257], ["bob_emploi.frontend.api.user_pb2.User", 0.10052754522237119], ["tuple", 0.09376671679918448], ["Dict[str, object]", 0.08805452270371829], ["bool", 0.08691717383081247], ["str", 0.086700422570495], ["users.models.CustomUser", 0.08506850715406288]], "variables": {"action": "", "resource": ""}, "variables_p": {"action": [["Dict[str, str]", 0.401796037114482], ["Tuple[Literal, Literal, Literal]", 0.20882813682980622], ["List[Union[Any, Any, Any, Any]]", 0.10564514965325021], ["str", 0.09267256416255676]], "resource": [["dict", 0.27711858254182403], ["Dict[str, Any]", 0.21123415185034394], ["Dict[str, str]", 0.18780823630535268], ["Dict[str, List[str]]", 0.11254070966689483], ["str", 0.10455928625225876]]}}, {"docstring": {"func": "Retrieve permission pairs associated with a specific resource object.", "long_descr": null, "ret": "Action objects representing resource->action pair"}, "fn_lc": [[474, 4], [481, 101]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_resource_permissions", "params": {"resource": "airflow.www.fab_security.sqla.models.Resource", "self": ""}, "params_descr": {"resource": "Object representing a single resource.", "self": ""}, "params_occur": {"resource": [["self", "get_session", "query", "self", "permission_model", "filter_by", "resource_id", "resource", "id", "all"]], "self": [["self", "get_session", "query", "self", "permission_model", "filter_by", "resource_id", "resource", "id", "all"]]}, "params_p": {"args": [], "kwargs": [], "resource": [["int", 0.21114400119502083], ["Dict[int, dict]", 0.17983137000734523], ["List[deeplearning.ml4pl.models.log_database.Batch]", 0.08898994410347699]], "self": []}, "q_name": "SecurityManager.get_resource_permissions", "ret_exprs": ["return self.get_session.query(self.permission_model).filter_by(resource_id=resource.id).all()"], "ret_type": "airflow.www.fab_security.sqla.models.Permission", "ret_type_p": [["models.User", 0.19825873787292192], ["str", 0.19764697384202434], ["User", 0.133764068025222], ["Iterable[str]", 0.09986631212409397], ["zerver.models.UserProfile", 0.09376967728663334], ["Dict[str, str]", 0.09281013907518747], ["Tuple[str]", 0.08984358097974972]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Adds a permission on a resource to the backend.", "long_descr": null, "ret": null}, "fn_lc": [[483, 4], [509, 23]], "fn_var_ln": {"action": [[498, 8], [498, 14]], "action_id": [[500, 31], [500, 40]], "perm": [[499, 8], [499, 12]], "resource": [[497, 8], [497, 16]], "resource_id": [[500, 13], [500, 24]]}, "fn_var_occur": {"action": [["action", "self", "create_action", "action_name"], ["perm", "resource_id", "perm", "action_id", "resource", "id", "action", "id"]], "action_id": [["perm", "resource_id", "perm", "action_id", "resource", "id", "action", "id"]], "perm": [["perm", "self", "get_permission", "action_name", "resource_name"], ["perm", "self", "permission_model"], ["perm", "resource_id", "perm", "action_id", "resource", "id", "action", "id"], ["self", "get_session", "add", "perm"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_PERMVIEW", "format", "str", "perm"]], "resource": [["resource", "self", "create_resource", "resource_name"], ["perm", "resource_id", "perm", "action_id", "resource", "id", "action", "id"]], "resource_id": [["perm", "resource_id", "perm", "action_id", "resource", "id", "action", "id"]]}, "name": "create_permission", "params": {"action_name": "", "resource_name": "", "self": ""}, "params_descr": {"action_name": "name of the action to add: 'can_add','can_edit' etc...", "resource_name": "name of the resource to add", "self": ""}, "params_occur": {"action_name": [["action_name", "resource_name"], ["perm", "self", "get_permission", "action_name", "resource_name"], ["action", "self", "create_action", "action_name"]], "resource_name": [["action_name", "resource_name"], ["perm", "self", "get_permission", "action_name", "resource_name"], ["resource", "self", "create_resource", "resource_name"]], "self": [["perm", "self", "get_permission", "action_name", "resource_name"], ["resource", "self", "create_resource", "resource_name"], ["action", "self", "create_action", "action_name"], ["perm", "self", "permission_model"], ["self", "get_session", "add", "perm"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"action_name": [["str", 0.9087862806709144], ["Optional[str]", 0.09121371932908555]], "args": [], "kwargs": [], "resource_name": [["str", 0.8196030684016996]], "self": []}, "q_name": "SecurityManager.create_permission", "ret_exprs": ["return None", "return perm", "return perm", "return None"], "ret_type": "Permission | None", "ret_type_p": [["Optional[bool]", 0.5639440904344217], ["str", 0.10309499020272787], ["Optional[str]", 0.09399068173907028]], "variables": {"action": "", "action_id": "", "perm": "", "resource": "", "resource_id": ""}, "variables_p": {"action": [["dict", 0.33666019359831256], ["alerta.models.alerAlert", 0.16280933288433252], ["Dict[Any, str]", 0.0861783143408546], ["list", 0.08085386909521547], ["List[int]", 0.0792601102813664]], "action_id": [["int", 0.488688365838299], ["uuid.UUID", 0.18283570907173086], ["str", 0.10313928922843843], ["Optional[str]", 0.06732222996130488]], "perm": [["list", 0.29640253532464045], ["dict", 0.22683824891607238], ["str", 0.09519281114173643], ["uuid.UUID", 0.08887163154790381], ["Dict[str, Type[Any]]", 0.08755538507727333]], "resource": [["alerta.models.alerAlert", 0.31855706932083605], ["list", 0.08829631339875339], ["dict", 0.08676247791367644], ["List[Dict[str, Any]]", 0.08305600810039239], ["int", 0.07912033969062864], ["Dict[int, Set[Any]]", 0.07592559948787213]], "resource_id": [["int", 0.488688365838299], ["uuid.UUID", 0.18283570907173086], ["str", 0.10313928922843843], ["Optional[str]", 0.06732222996130488]]}}, {"docstring": {"func": "Deletes the permission linking an action->resource pair. Doesn't delete the", "long_descr": "underlying action or resource.", "ret": "None"}, "fn_lc": [[511, 4], [541, 39]], "fn_var_ln": {"perm": [[522, 8], [522, 12]], "roles": [[525, 8], [525, 13]]}, "fn_var_occur": {"perm": [["perm", "self", "get_permission", "action_name", "resource_name"], ["roles", "self", "get_session", "query", "self", "role_model", "filter", "self", "role_model", "permissions", "contains", "perm", "first"], ["self", "get_session", "delete", "perm"], ["self", "get_session", "query", "self", "permission_model", "filter_by", "action", "perm", "action", "all"], ["self", "delete_action", "perm", "action", "name"]], "roles": [["roles", "self", "get_session", "query", "self", "role_model", "filter", "self", "role_model", "permissions", "contains", "perm", "first"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERMVIEW", "format", "resource_name", "action_name", "roles"]]}, "name": "delete_permission", "params": {"action_name": "builtins.str", "resource_name": "builtins.str", "self": ""}, "params_descr": {"action_name": "Name of existing action", "resource_name": "Name of existing resource", "self": ""}, "params_occur": {"action_name": [["action_name", "resource_name"], ["perm", "self", "get_permission", "action_name", "resource_name"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERMVIEW", "format", "resource_name", "action_name", "roles"], ["log", "info", "c", "LOGMSG_INF_SEC_DEL_PERMVIEW", "format", "action_name", "resource_name"]], "resource_name": [["action_name", "resource_name"], ["perm", "self", "get_permission", "action_name", "resource_name"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERMVIEW", "format", "resource_name", "action_name", "roles"], ["log", "info", "c", "LOGMSG_INF_SEC_DEL_PERMVIEW", "format", "action_name", "resource_name"]], "self": [["perm", "self", "get_permission", "action_name", "resource_name"], ["roles", "self", "get_session", "query", "self", "role_model", "filter", "self", "role_model", "permissions", "contains", "perm", "first"], ["self", "get_session", "delete", "perm"], ["self", "get_session", "commit"], ["self", "get_session", "query", "self", "permission_model", "filter_by", "action", "perm", "action", "all"], ["self", "delete_action", "perm", "action", "name"], ["self", "get_session", "rollback"]]}, "params_p": {"action_name": [["str", 0.9136774574704805], ["float", 0.08632254252951961]], "args": [], "kwargs": [], "resource_name": [["str", 0.9136774574704805], ["float", 0.08632254252951961]], "self": []}, "q_name": "SecurityManager.delete_permission", "ret_exprs": ["return", "return", "return"], "ret_type": "None", "ret_type_p": [], "variables": {"perm": "", "roles": ""}, "variables_p": {"perm": [["Dict[str, str]", 0.4302584032264457], ["list", 0.09945848226576212], ["Dict[str, List[str]]", 0.08499914453457287]], "roles": [["str", 0.17159944744174957], ["float", 0.14615246519362465], ["List[str]", 0.10192214149073384], ["int", 0.0887533703554632]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[543, 4], [547, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "perms_include_action", "params": {"action_name": "", "perms": "", "self": ""}, "params_descr": {"action_name": "", "perms": "", "self": ""}, "params_occur": {"action_name": [["perm", "action", "perm", "action", "name", "action_name"]], "perms": [], "self": []}, "params_p": {"action_name": [["str", 0.2121461894764629], ["Optional[List[str]]", 0.1511012331141677], ["List[Union[\"PipeChain\", str]]", 0.10061463577835722], ["Callable", 0.09398579043827092], ["List[str]", 0.08435195396932489]], "args": [], "kwargs": [], "perms": [["str", 0.4], ["bool", 0.30000000000000004], ["List[Union[int, Any]]", 0.1], ["Optional[str]", 0.1]], "self": []}, "q_name": "SecurityManager.perms_include_action", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Add an existing permission pair to a role.", "long_descr": null, "ret": "None"}, "fn_lc": [[549, 4], [565, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_permission_to_role", "params": {"permission": "Permission | None", "role": "airflow.www.fab_security.sqla.models.Role", "self": ""}, "params_descr": {"permission": "The permission pair to add to a role.", "role": "The role about to get a new permission.", "self": ""}, "params_occur": {"permission": [["permission", "permission", "role", "permissions"], ["role", "permissions", "append", "permission"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_PERMROLE", "format", "str", "permission", "role", "name"]], "role": [["permission", "permission", "role", "permissions"], ["role", "permissions", "append", "permission"], ["self", "get_session", "merge", "role"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_PERMROLE", "format", "str", "permission", "role", "name"]], "self": [["self", "get_session", "merge", "role"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "permission": [["str", 0.49631003164685056], ["superseconnectors.base.models.BaseDatasource", 0.16105031340354078], ["abilian.services.security.models.Permission", 0.1213943884392045], ["abilian.services.security.models.Role", 0.1213943884392045]], "role": [["str", 0.7055950920705334], ["List[str]", 0.09965275356068257], ["django.db.models.query.QuerySet", 0.09654180001921062]], "self": []}, "q_name": "SecurityManager.add_permission_to_role", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Remove a permission pair from a role.", "long_descr": null, "ret": null}, "fn_lc": [[567, 4], [582, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "remove_permission_from_role", "params": {"permission": "airflow.www.fab_security.sqla.models.Permission", "role": "airflow.www.fab_security.sqla.models.Role", "self": ""}, "params_descr": {"permission": "Object representing resource-> action pair", "role": "User role containing permissions.", "self": ""}, "params_occur": {"permission": [["permission", "role", "permissions"], ["role", "permissions", "remove", "permission"], ["log", "info", "c", "LOGMSG_INF_SEC_DEL_PERMROLE", "format", "str", "permission", "role", "name"]], "role": [["permission", "role", "permissions"], ["role", "permissions", "remove", "permission"], ["self", "get_session", "merge", "role"], ["log", "info", "c", "LOGMSG_INF_SEC_DEL_PERMROLE", "format", "str", "permission", "role", "name"]], "self": [["self", "get_session", "merge", "role"], ["self", "get_session", "commit"], ["self", "get_session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "permission": [["str", 0.5901873039132126]], "role": [["str", 0.21488575688625805], ["sqlalchemy.orm.Session", 0.121363495737441], ["Dict[str, Any]", 0.0762942759134234], ["bool", 0.0762348922304234]], "self": []}, "q_name": "SecurityManager.remove_permission_from_role", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "SecurityManager", "q_name": "SecurityManager", "variables": {"action_model": "", "permission_model": "", "registeruser_model": "", "resource_model": "", "role_model": "", "user_model": ""}, "variables_p": {"action_model": [["str", 0.5000000000000001], ["Dict[str, Union[int, str, Any, Any, Any]]", 0.20000000000000004], ["List[Dict[str, Any]]", 0.10000000000000002], ["float", 0.10000000000000002], ["Dict[str, Union[float, str, Any, Any]]", 0.10000000000000002]], "permission_model": [["str", 0.3], ["Tuple[Tuple[Literal, Literal], Tuple[Literal, Literal], Tuple[Literal, None]]", 0.19999999999999998], ["Tuple[Tuple[Literal, None], Tuple[Literal, None]]", 0.19999999999999998], ["Tuple[Tuple[Literal, Literal], Tuple[Literal, None], Tuple[Literal, Literal]]", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999]], "registeruser_model": [["str", 0.5000000000000001], ["Dict[str, Union[int, str, Any, Any, Any]]", 0.20000000000000004], ["List[Dict[str, Any]]", 0.10000000000000002], ["float", 0.10000000000000002], ["Dict[str, Union[float, str, Any, Any]]", 0.10000000000000002]], "resource_model": [["str", 0.5000000000000001], ["Dict[str, Union[int, str, Any, Any, Any]]", 0.20000000000000004], ["List[Dict[str, Any]]", 0.10000000000000002], ["float", 0.10000000000000002], ["Dict[str, Union[float, str, Any, Any]]", 0.10000000000000002]], "role_model": [["str", 0.5000000000000001], ["Dict[str, Union[int, str, Any, Any, Any]]", 0.20000000000000004], ["List[Dict[str, Any]]", 0.10000000000000002], ["float", 0.10000000000000002], ["Dict[str, Union[float, str, Any, Any]]", 0.10000000000000002]], "user_model": [["bool", 0.7365308538046753], ["List[Tuple[str, str, str]]", 0.21955762182943728], ["List[Tuple]", 0.04391152436588745]]}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "uuid", "flask_appbuilder", "const", "c", "flask_appbuilder", "models", "sqla", "Base", "flask_appbuilder", "models", "sqla", "interface", "SQLAInterface", "sqlalchemy", "and_", "func", "inspect", "literal", "sqlalchemy", "orm", "exc", "MultipleResultsFound", "werkzeug", "security", "generate_password_hash", "airflow", "www", "fab_security", "manager", "BaseSecurityManager", "airflow", "www", "fab_security", "sqla", "models", "Action", "Permission", "RegisterUser", "Resource", "Role", "User", "assoc_permission_role"], "mod_var_ln": {"log": [[40, 0], [40, 3]]}, "mod_var_occur": {"log": [["log", "info", "c", "LOGMSG_INF_SEC_NO_DB"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_DB"], ["log", "error", "c", "LOGMSG_ERR_SEC_CREATE_DB", "format", "str", "e"], ["log", "error", "c", "LOGMSG_ERR_SEC_ADD_REGISTER_USER", "format", "str", "e"], ["log", "error", "c", "LOGMSG_ERR_SEC_DEL_REGISTER_USER", "format", "str", "e"], ["log", "error", "username"], ["log", "error", "email"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_USER", "format", "username"], ["log", "error", "c", "LOGMSG_ERR_SEC_ADD_USER", "format", "str", "e"], ["log", "info", "c", "LOGMSG_INF_SEC_UPD_USER", "format", "user"], ["log", "error", "c", "LOGMSG_ERR_SEC_UPD_USER", "format", "str", "e"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_ROLE", "format", "name"], ["log", "error", "c", "LOGMSG_ERR_SEC_ADD_ROLE", "format", "str", "e"], ["log", "info", "c", "LOGMSG_INF_SEC_UPD_ROLE", "format", "role"], ["log", "error", "c", "LOGMSG_ERR_SEC_UPD_ROLE", "format", "str", "e"], ["log", "error", "c", "LOGMSG_ERR_SEC_ADD_PERMISSION", "format", "str", "e"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERMISSION", "format", "name"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERM_PVM", "format", "action", "perms"], ["log", "error", "c", "LOGMSG_ERR_SEC_DEL_PERMISSION", "format", "str", "e"], ["log", "error", "c", "LOGMSG_ERR_SEC_ADD_VIEWMENU", "format", "str", "e"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_VIEWMENU", "format", "name"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_VIEWMENU_PVM", "format", "resource", "perms"], ["log", "error", "c", "LOGMSG_ERR_SEC_DEL_PERMISSION", "format", "str", "e"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_PERMVIEW", "format", "str", "perm"], ["log", "error", "c", "LOGMSG_ERR_SEC_ADD_PERMVIEW", "format", "str", "e"], ["log", "warning", "c", "LOGMSG_WAR_SEC_DEL_PERMVIEW", "format", "resource_name", "action_name", "roles"], ["log", "info", "c", "LOGMSG_INF_SEC_DEL_PERMVIEW", "format", "action_name", "resource_name"], ["log", "error", "c", "LOGMSG_ERR_SEC_DEL_PERMVIEW", "format", "str", "e"], ["log", "info", "c", "LOGMSG_INF_SEC_ADD_PERMROLE", "format", "str", "permission", "role", "name"], ["log", "error", "c", "LOGMSG_ERR_SEC_ADD_PERMROLE", "format", "str", "e"], ["log", "info", "c", "LOGMSG_INF_SEC_DEL_PERMROLE", "format", "str", "permission", "role", "name"], ["log", "error", "c", "LOGMSG_ERR_SEC_DEL_PERMROLE", "format", "str", "e"]]}, "no_types_annot": {"D": 33, "I": 0, "U": 82}, "session_id": "UpUtCk0sHXSPwmRy1Ucvc6hNCy0k8hVGbq8R6Jpwa2I", "set": null, "tc": [false, null], "type_annot_cove": 0.29, "typed_seq": "", "untyped_seq": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.906451912256921]]}}}