{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [93, 90]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 4], [53, 25]], "fn_var_ln": {"holidays": [[48, 16], [48, 24]], "next_start": [[50, 20], [50, 30]]}, "fn_var_occur": {"holidays": [["holidays", "holiday_calendar", "holidays", "start", "next_start", "end", "next_start", "to_pydatetime"], ["next_start", "holidays"]], "next_start": [["next_start", "d"], ["next_start", "weekday"], ["next_start", "next_start", "incr", "timedelta", "days"], ["holidays", "holiday_calendar", "holidays", "start", "next_start", "end", "next_start", "to_pydatetime"], ["next_start", "holidays"], ["next_start", "next_start", "incr", "timedelta", "days"]]}, "name": "get_next_workday", "params": {"d": "pendulum.DateTime", "incr": "", "self": ""}, "params_descr": {"d": "", "incr": "", "self": ""}, "params_occur": {"d": [["next_start", "d"]], "incr": [["next_start", "next_start", "incr", "timedelta", "days"], ["next_start", "next_start", "incr", "timedelta", "days"]], "self": []}, "params_p": {"args": [], "d": [["int", 0.13401469872624827], ["Dict[str, Any]", 0.1154628580287832], ["List[int]", 0.10606948939666477], ["dict", 0.07907951372903665], ["Sequence[T]", 0.07761995488504007], ["bool", 0.07497496270064848]], "incr": [["int", 0.5015406453363205], ["list", 0.1984222203851294], ["Union[pandas.Series, pandas.DataFrame]", 0.1080370393543856]], "kwargs": [], "self": []}, "q_name": "AfterWorkdayTimetable.get_next_workday", "ret_exprs": ["return next_start"], "ret_type": "pendulum.DateTime", "ret_type_p": [["str", 0.3052060600989198], ["int", 0.23892844223748888], ["List[int]", 0.09227348075373147], ["Dict[str, Any]", 0.08642929889855874]], "variables": {"holidays": "", "next_start": ""}, "variables_p": {"holidays": [["Dict[str, str]", 0.097596523759807], ["str", 0.09586850850127283]], "next_start": [["int", 0.7878267529782342], ["str", 0.10648937376479593], ["float", 0.10568387325696975]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [60, 73]], "fn_var_ln": {"start": [[59, 8], [59, 13]]}, "fn_var_occur": {"start": [["start", "DateTime", "combine", "run_after", "timedelta", "days", "date", "Time", "min", "replace", "tzinfo", "UTC"], ["start", "self", "get_next_workday", "start", "incr"], ["DataInterval", "start", "start", "end", "start", "timedelta", "days"]]}, "name": "infer_manual_data_interval", "params": {"run_after": "pendulum.DateTime", "self": ""}, "params_descr": {"run_after": "", "self": ""}, "params_occur": {"run_after": [["start", "DateTime", "combine", "run_after", "timedelta", "days", "date", "Time", "min", "replace", "tzinfo", "UTC"]], "self": [["start", "self", "get_next_workday", "start", "incr"]]}, "params_p": {"args": [], "kwargs": [], "run_after": [["pandas.Series", 0.18062177482668001], ["str", 0.15296483876878797], ["int", 0.1445178332345892], ["Dict[datetime.date, Dict[str, Any]]", 0.07754991526645238]], "self": []}, "q_name": "AfterWorkdayTimetable.infer_manual_data_interval", "ret_exprs": ["return DataInterval(start=start, end=(start + timedelta(days=1)))"], "ret_type": "airflow.timetables.base.DataInterval", "ret_type_p": [["T", 1.0]], "variables": {"start": ""}, "variables_p": {"start": [["datetime.timedelta", 0.5182524702038804], ["datetime.datetime", 0.16895367085581023], ["timedelta", 0.12615561850306417], ["Optional[datetime.datetime]", 0.10409482215726405], ["Dict[int, Tuple[int, str]]", 0.08254341827998093]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [93, 90]], "fn_var_ln": {"last_start": [[72, 12], [72, 22]], "next_start": [[89, 8], [89, 18]]}, "fn_var_occur": {"last_start": [["last_start", "last_automated_data_interval", "start"], ["next_start", "DateTime", "combine", "last_start", "timedelta", "days", "date", "Time", "min", "replace", "tzinfo", "UTC"]], "next_start": [["next_start", "DateTime", "combine", "last_start", "timedelta", "days", "date", "Time", "min", "replace", "tzinfo", "UTC"], ["next_start", "restriction", "earliest"], ["next_start", "None"], ["next_start", "max", "next_start", "DateTime", "combine", "Date", "today", "Time", "min", "replace", "tzinfo", "UTC"], ["next_start", "time", "Time", "min"], ["next_start", "DateTime", "combine", "next_start", "date", "timedelta", "days", "Time", "min", "replace", "tzinfo", "UTC"], ["next_start", "self", "get_next_workday", "next_start"], ["restriction", "latest", "None", "next_start", "restriction", "latest"], ["DagRunInfo", "interval", "start", "next_start", "end", "next_start", "timedelta", "days"]]}, "name": "next_dagrun_info", "params": {"last_automated_data_interval": "DataInterval | None", "restriction": "airflow.timetables.base.TimeRestriction", "self": ""}, "params_descr": {"last_automated_data_interval": "", "restriction": "", "self": ""}, "params_occur": {"last_automated_data_interval": [["last_automated_data_interval", "None"], ["last_start", "last_automated_data_interval", "start"]], "restriction": [["next_start", "restriction", "earliest"], ["restriction", "catchup"], ["restriction", "latest", "None", "next_start", "restriction", "latest"]], "self": [["next_start", "self", "get_next_workday", "next_start"]]}, "params_p": {"args": [], "kwargs": [], "last_automated_data_interval": [["bool", 0.45381074203289296], ["Dict[str, Any]", 0.0966106641351801], ["str", 0.08587584111080865]], "restriction": [["list", 0.19257497153089628], ["int", 0.12667095068449857], ["Iterable[Iterable[str]]", 0.11415548888022592], ["Callable", 0.09541320199101104], ["List[str]", 0.08948088783486578]], "self": []}, "q_name": "AfterWorkdayTimetable.next_dagrun_info", "ret_exprs": ["return None", "return None", "return DagRunInfo.interval(start=next_start, end=(next_start + timedelta(days=1)))"], "ret_type": "DagRunInfo | None", "ret_type_p": [["Optional[int]", 0.19297879291625564], ["str", 0.10928265723467079], ["List[str]", 0.10164497363980325], ["Callable", 0.09398648072319124]], "variables": {"last_start": "", "next_start": ""}, "variables_p": {"last_start": [["int", 0.6176754415301884], ["float", 0.09725299762230782], ["List[int]", 0.08642870517626693]], "next_start": [["datetime.timedelta", 0.541132475819422], ["timedelta", 0.13105977345194156], ["datetime.datetime.timedelta", 0.09113379234375438], ["Dict[int, Tuple[int, str]]", 0.08260062657910859], ["datetime.datetime", 0.07214270658580106]]}}], "name": "AfterWorkdayTimetable", "q_name": "AfterWorkdayTimetable", "variables": {}, "variables_p": {}}, {"cls_lc": [[98, 0], [100, 40]], "cls_var_ln": {"name": [[99, 4], [99, 8]], "timetables": [[100, 4], [100, 14]]}, "cls_var_occur": {"name": [], "timetables": []}, "funcs": [], "name": "WorkdayTimetablePlugin", "q_name": "WorkdayTimetablePlugin", "variables": {"name": "", "timetables": ""}, "variables_p": {"name": [["str", 0.8999999999999999]], "timetables": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "datetime", "timedelta", "pendulum", "UTC", "Date", "DateTime", "Time", "airflow", "plugins_manager", "AirflowPlugin", "airflow", "timetables", "base", "DagRunInfo", "DataInterval", "TimeRestriction", "Timetable", "pandas", "tseries", "holiday", "USFederalHolidayCalendar"], "mod_var_ln": {"holiday_calendar": [[37, 4], [37, 20]], "log": [[30, 0], [30, 3]]}, "mod_var_occur": {"holiday_calendar": [["holiday_calendar", "None"], ["holidays", "holiday_calendar", "holidays", "start", "next_start", "end", "next_start", "to_pydatetime"]], "log": [["log", "warning"]]}, "no_types_annot": {"D": 7, "I": 0, "U": 10}, "session_id": "QqMo9aYAEhXTUtifx_kQT3wZwENKh9da8YEwWCqNRg0", "set": null, "tc": [false, null], "type_annot_cove": 0.41, "typed_seq": "", "untyped_seq": "", "variables": {"holiday_calendar": "", "log": ""}, "variables_p": {"holiday_calendar": [["int", 0.1306064128189233], ["Dict[str, Optional[float]]", 0.1206940714451004], ["str", 0.09277750793755157], ["Optional[str]", 0.09117097201753592], ["Type[Dict[Any, Any]]", 0.08729388194036884]], "log": [["logging.Logger", 0.8999999999999999], ["Dict[str, Union[Any, Any, Any, Any]]", 0.1]]}}}