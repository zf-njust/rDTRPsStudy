{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[32, 4], [33, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_condition", "params": {"condition": ""}, "params_descr": {"condition": ""}, "params_occur": {"condition": []}, "params_p": {"args": [], "condition": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "example_short_circuit_decorator.<locals>.check_condition", "ret_exprs": ["return condition"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[29, 0], [56, 86]], "fn_var_ln": {"condition_is_false": [[39, 4], [39, 22]], "condition_is_true": [[38, 4], [38, 21]], "ds_false": [[36, 4], [36, 12]], "ds_true": [[35, 4], [35, 11]], "short_circuit": [[52, 4], [52, 17]], "task_7": [[50, 4], [50, 10]]}, "fn_var_occur": {"condition_is_false": [["condition_is_false", "check_condition", "override", "task_id", "condition", "False"], ["chain", "condition_is_false", "ds_false"]], "condition_is_true": [["condition_is_true", "check_condition", "override", "task_id", "condition", "True"], ["chain", "condition_is_true", "ds_true"]], "ds_false": [["ds_false", "EmptyOperator", "task_id", "str", "i", "i"], ["chain", "condition_is_false", "ds_false"]], "ds_true": [["ds_true", "EmptyOperator", "task_id", "str", "i", "i"], ["chain", "condition_is_true", "ds_true"]], "short_circuit": [["short_circuit", "check_condition", "override", "task_id", "ignore_downstream_trigger_rules", "False", "condition", "False"], ["chain", "task_1", "task_2", "short_circuit", "task_3", "task_4", "task_5", "task_6", "task_7"]], "task_7": [["task_7", "EmptyOperator", "task_id", "trigger_rule", "TriggerRule", "ALL_DONE"], ["chain", "task_1", "task_2", "short_circuit", "task_3", "task_4", "task_5", "task_6", "task_7"]]}, "name": "example_short_circuit_decorator", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "example_short_circuit_decorator", "ret_exprs": [], "ret_type": "", "variables": {"condition_is_false": "", "condition_is_true": "", "ds_false": "", "ds_true": "", "short_circuit": "", "task_7": ""}, "variables_p": {"condition_is_false": [["str", 0.11167858226047313], ["int", 0.11142204080582713], ["Set[str]", 0.11115013078674636], ["Pattern[Any]", 0.10371299534133997], ["Dict[str, Dict[str, str]]", 0.09282636548633684], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.09250925422272789], ["Dict[str, Any]", 0.09220625654052568], ["List[Optional[int]]", 0.09218134236961938]], "condition_is_true": [["staticmethod", 0.18099744484756888], ["str", 0.1757265282640928], ["List[Tuple[Any, str]]", 0.12611093080699748], ["dict", 0.11300476720712319]], "ds_false": [["int", 0.30928589344070107], ["core.arxiv.submission.services.classic.models.Submission", 0.09000960932680921]], "ds_true": [["str", 0.3946358519061756], ["list", 0.11013428621289008], ["Dict[str, Union[Any, Any]]", 0.10757005870633325], ["bool", 0.09824773733594257], ["List[str]", 0.09780493056394188], ["Type[bootcamp.news.models.News]", 0.09103678271125933]], "short_circuit": [["int", 0.10413403588886765], ["List[int]", 0.09917346418917615], ["str", 0.09557151338593217], ["List[Dict[str, Any]]", 0.09271662018513442]], "task_7": [["apps.rendering.task.renderingtaskstate.RenderingTaskDefinition", 0.28715964350072676], ["apps.core.task.coretaskstate.TaskDefinition", 0.18746271085698735], ["golem.task.task_api.EnvironmentTaskApiService", 0.10318304498613233]]}}], "imports": ["__future__", "annotations", "pendulum", "airflow", "decorators", "dag", "task", "airflow", "models", "baseoperator", "chain", "airflow", "operators", "empty", "EmptyOperator", "airflow", "utils", "trigger_rule", "TriggerRule"], "mod_var_ln": {"example_dag": [[60, 0], [60, 11]]}, "mod_var_occur": {"example_dag": []}, "no_types_annot": {"D": 0, "I": 0, "U": 10}, "session_id": "vTYVb-KzwD828m9W3PlxI7LJMcRYMBdg1FJdQqa7zAg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"example_dag": ""}, "variables_p": {"example_dag": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}