{"error": null, "response": {"classes": [{"cls_lc": [[55, 0], [322, 21]], "cls_var_ln": {"conn_name_attr": [[58, 4], [58, 18]], "conn_type": [[60, 4], [60, 13]], "default_conn_name": [[59, 4], [59, 21]], "hook_name": [[61, 4], [61, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [68, 65]], "fn_var_ln": {"connection": [[65, 8], [65, 23]], "extras": [[66, 8], [66, 14]], "project": [[68, 8], [68, 20]], "workspace": [[67, 8], [67, 22]]}, "fn_var_occur": {"connection": [["self", "connection", "self", "get_connection", "conn_id"], ["extras", "self", "connection", "extra_dejson"]], "extras": [["extras", "self", "connection", "extra_dejson"], ["self", "workspace", "self", "_get_field", "extras", "None"], ["self", "project", "self", "_get_field", "extras", "None"]], "project": [["self", "project", "self", "_get_field", "extras", "None"]], "workspace": [["self", "workspace", "self", "_get_field", "extras", "None"]]}, "name": "__init__", "params": {"args": "", "conn_id": "builtins.str", "kwargs": "", "self": ""}, "params_descr": {"args": "", "conn_id": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "__init__", "args", "kwargs"]], "conn_id": [["self", "connection", "self", "get_connection", "conn_id"]], "kwargs": [["super", "__init__", "args", "kwargs"]], "self": [["self", "connection", "self", "get_connection", "conn_id"], ["extras", "self", "connection", "extra_dejson"], ["self", "workspace", "self", "_get_field", "extras", "None"], ["self", "project", "self", "_get_field", "extras", "None"]]}, "params_p": {"args": [], "conn_id": [["str", 0.45487213056851944], ["int", 0.3407859723843864], ["bytes", 0.08476004487294417]], "kwargs": [], "self": []}, "q_name": "AsanaHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"connection": "", "extras": "", "project": "", "workspace": ""}, "variables_p": {"connection": [["int", 0.6826285332345086], ["str", 0.3173714667654915]], "extras": [["str", 0.5484424576467909], ["Tuple[Type[int], Type[float], Type[complex]]", 0.08564928006351377], ["bool", 0.08480634578005321], ["int", 0.08407790078959586]], "project": [["List[int]", 0.11179755923096932], ["int", 0.10281723700304143], ["str", 0.0964221468177281], ["list", 0.08528311906477762]], "workspace": [["bool", 0.09484275437343855]]}}, {"docstring": {"func": "Get field from extra, first checking short name, then for backcompat we check for prefixed name.", "long_descr": null, "ret": null}, "fn_lc": [[70, 4], [81, 48]], "fn_var_ln": {"backcompat_prefix": [[72, 8], [72, 25]], "prefixed_name": [[80, 8], [80, 21]]}, "fn_var_occur": {"backcompat_prefix": [["ValueError", "field_name", "backcompat_prefix"], ["prefixed_name", "backcompat_prefix", "field_name"]], "prefixed_name": [["prefixed_name", "backcompat_prefix", "field_name"], ["extras", "get", "prefixed_name", "None"]]}, "name": "_get_field", "params": {"extras": "builtins.dict", "field_name": "builtins.str", "self": ""}, "params_descr": {"extras": "", "field_name": "", "self": ""}, "params_occur": {"extras": [["field_name", "extras"], ["extras", "field_name", "None"], ["extras", "get", "prefixed_name", "None"]], "field_name": [["field_name", "startswith"], ["ValueError", "field_name", "backcompat_prefix"], ["field_name", "extras"], ["extras", "field_name", "None"], ["prefixed_name", "backcompat_prefix", "field_name"]], "self": []}, "params_p": {"args": [], "extras": [["str", 0.20801647810907567], ["Optional[str]", 0.20801647810907567]], "field_name": [["str", 0.8077848861074525], ["Dict[str, str]", 0.10857652145943386]], "kwargs": [], "self": []}, "q_name": "AsanaHook._get_field", "ret_exprs": ["return extras[field_name] or None", "return extras.get(prefixed_name) or None"], "ret_type": "", "ret_type_p": [["str", 0.28344023667206636], ["dict", 0.13100531377895994], ["List[str]", 0.13100531377895994], ["bool", 0.09077444893733463], ["Mapping[str, Any]", 0.08627148430874293]], "variables": {"backcompat_prefix": "", "prefixed_name": ""}, "variables_p": {"backcompat_prefix": [["str", 0.5641749104024144], ["Union[Literal, str]", 0.2905500597317236], ["bool", 0.1452750298658618]], "prefixed_name": [["str", 0.33965903457329055], ["Dict[str, str]", 0.2312534411004658], ["List[str]", 0.09513116847276748], ["Tuple[Literal, Literal]", 0.08747998178683225], ["Dict[Any, str]", 0.08248071573591241], ["Dict[int, str]", 0.08195660625662192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [84, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AsanaHook.get_conn", "ret_exprs": ["return self.client"], "ret_type": "asana.Client", "ret_type_p": [["baseplate.lib.metrics.Client", 0.10458669376849823], ["str", 0.0831271183484144]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns connection widgets to add to connection form.", "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [96, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection_form_widgets", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AsanaHook.get_connection_form_widgets", "ret_exprs": ["return { \"workspace\": StringField(lazy_gettext(\"Workspace\"), widget=BS3TextFieldWidget()), \"project\": StringField(lazy_gettext(\"Project\"), widget=BS3TextFieldWidget()),}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.7888551086422632], ["bool", 0.11514109423386046], ["Tuple[Tuple[int, ...]]", 0.09600379712387633]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns custom field behaviour.", "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [110, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_ui_field_behaviour", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AsanaHook.get_ui_field_behaviour", "ret_exprs": ["return { \"hidden_fields\": [\"port\", \"host\", \"login\", \"schema\"], \"relabeling\": {}, \"placeholders\": { \"password\": \"Asana personal access token\", \"workspace\": \"Asana workspace gid\", \"project\": \"Asana project gid\", },}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.26840508666723273], ["bool", 0.06666744759841305]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Instantiates python-asana Client.", "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [121, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "client", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "connection", "password"], ["Client", "access_token", "self", "connection", "password"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AsanaHook.client", "ret_exprs": ["return Client.access_token(self.connection.password)"], "ret_type": "asana.Client", "ret_type_p": [["dict", 0.13712372531620418]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates an Asana task.", "long_descr": null, "ret": "A dict of attributes of the created task, including its gid"}, "fn_lc": [[123, 4], [135, 23]], "fn_var_ln": {"merged_params": [[132, 8], [132, 21]], "response": [[134, 8], [134, 16]]}, "fn_var_occur": {"merged_params": [["merged_params", "self", "_merge_create_task_parameters", "task_name", "params"], ["self", "_validate_create_task_parameters", "merged_params"], ["response", "self", "client", "tasks", "create", "params", "merged_params"]], "response": [["response", "self", "client", "tasks", "create", "params", "merged_params"]]}, "name": "create_task", "params": {"params": "dict | None", "self": "", "task_name": "builtins.str"}, "params_descr": {"params": "Other task attributes, such as due_on, parent, and notes. For a complete list\nof possible parameters, see https://developers.asana.com/docs/create-a-task", "self": "", "task_name": "Name of the new task"}, "params_occur": {"params": [["merged_params", "self", "_merge_create_task_parameters", "task_name", "params"], ["response", "self", "client", "tasks", "create", "params", "merged_params"]], "self": [["merged_params", "self", "_merge_create_task_parameters", "task_name", "params"], ["self", "_validate_create_task_parameters", "merged_params"], ["response", "self", "client", "tasks", "create", "params", "merged_params"]], "task_name": [["merged_params", "self", "_merge_create_task_parameters", "task_name", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["str", 0.5914779748125224], ["Dict[str, Any]", 0.10367159799702515]], "self": [], "task_name": [["str", 0.9050331834332376], ["bool", 0.09496681656676248]]}, "q_name": "AsanaHook.create_task", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.23511158957027783], ["dict", 0.16635044853164743], ["Optional[str]", 0.1576278157268881], ["Dict[str, Any]", 0.15103124175230262], ["List[str]", 0.12997755767366395], ["Dict[str, str]", 0.08579517251727392], ["List[dict]", 0.07410617422794627]], "variables": {"merged_params": "", "response": ""}, "variables_p": {"merged_params": [["Dict[str, str]", 0.40334686047716917], ["list", 0.2049651742685561], ["Dict[str, Any]", 0.10621528404460966], ["Dict[str, Literal]", 0.10160835153161554], ["dict", 0.09393945082034373], ["int", 0.08992487885770578]], "response": [["str", 0.5070589746793719], ["int", 0.20210935836553834], ["Dict[str, str]", 0.10523329263592283], ["Dict[str, Literal]", 0.0943009300968046], ["List[str]", 0.09129744422236229]]}}, {"docstring": {"func": "Merge create_task parameters with default params from the connection.", "long_descr": null, "ret": "A dict of merged parameters to use in the new task"}, "fn_lc": [[137, 4], [153, 28]], "fn_var_ln": {"merged_params": [[145, 8], [145, 21]]}, "fn_var_occur": {"merged_params": [["merged_params", "builtins", "dict", "builtins", "str", "typing", "Any", "task_name"], ["merged_params", "self", "project"], ["merged_params", "self", "workspace"], ["merged_params", "update", "task_params"]]}, "name": "_merge_create_task_parameters", "params": {"self": "", "task_name": "builtins.str", "task_params": "dict | None"}, "params_descr": {"self": "", "task_name": "Name of the task", "task_params": "Other task parameters which should override defaults from the connection"}, "params_occur": {"self": [["self", "project"], ["merged_params", "self", "project"], ["self", "workspace", "task_params", "task_params"], ["merged_params", "self", "workspace"]], "task_name": [["merged_params", "builtins", "dict", "builtins", "str", "typing", "Any", "task_name"]], "task_params": [["self", "workspace", "task_params", "task_params"], ["merged_params", "update", "task_params"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_name": [["str", 0.5139160721056912], ["int", 0.2], ["Dict[str, Any]", 0.17216785578861765], ["bool", 0.1139160721056912]], "task_params": [["bool", 0.19513944529336283], ["Optional[str]", 0.09756972264668141], ["asgard.backends.base.Orchestrator", 0.09531930026355791], ["str", 0.09196793668814598]]}, "q_name": "AsanaHook._merge_create_task_parameters", "ret_exprs": ["return merged_params"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.29143225407536827], ["Dict[str, Any]", 0.14812890233629816], ["List[Dict]", 0.10616744478919578], ["Mapping[str, Any]", 0.10347490864640276], ["bool", 0.09666556447957948], ["Tuple[int, int, int]", 0.08719800733786331]], "variables": {"merged_params": "builtins.dict[builtins.str, typing.Any]"}, "variables_p": {"merged_params": [["Dict[str, Any]", 0.4684705872795777], ["Dict[str, Sequence[Any]]", 0.2241675928338584], ["str", 0.11111206301531996]]}}, {"docstring": {"func": "Check that user provided minimal parameters for task creation.", "long_descr": null, "ret": "None; raises ValueError if `params` doesn't contain required parameters"}, "fn_lc": [[156, 4], [167, 13]], "fn_var_ln": {"required_parameters": [[163, 8], [163, 27]]}, "fn_var_occur": {"required_parameters": [["required_parameters", "isdisjoint", "params"], ["ValueError", "required_parameters"]]}, "name": "_validate_create_task_parameters", "params": {"params": "builtins.dict"}, "params_descr": {"params": "A dict of attributes the task to be created should have"}, "params_occur": {"params": [["required_parameters", "isdisjoint", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["str", 0.29143225407536827], ["Dict[str, Any]", 0.14812890233629816], ["List[Dict]", 0.10616744478919578], ["Mapping[str, Any]", 0.10347490864640276], ["bool", 0.09666556447957948], ["Tuple[int, int, int]", 0.08719800733786331]], "self": []}, "q_name": "AsanaHook._validate_create_task_parameters", "ret_exprs": [], "ret_type": "None", "variables": {"required_parameters": ""}, "variables_p": {"required_parameters": [["str", 0.9999999999999999]]}}, {"docstring": {"func": "Deletes an Asana task.", "long_descr": null, "ret": "A dict containing the response from Asana"}, "fn_lc": [[169, 4], [181, 21]], "fn_var_ln": {"response": [[177, 12], [177, 20]]}, "fn_var_occur": {"response": [["response", "self", "client", "tasks", "delete_task", "task_id"]]}, "name": "delete_task", "params": {"self": "", "task_id": "builtins.str"}, "params_descr": {"self": "", "task_id": "Asana GID of the task to delete"}, "params_occur": {"self": [["response", "self", "client", "tasks", "delete_task", "task_id"], ["self", "log", "info", "task_id"]], "task_id": [["response", "self", "client", "tasks", "delete_task", "task_id"], ["self", "log", "info", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_id": [["str", 0.7710395614785601], ["Optional[str]", 0.12418685068411242]]}, "q_name": "AsanaHook.delete_task", "ret_exprs": ["return response", "return {}"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.25193786994311584], ["Optional[str]", 0.15524453393976295], ["List[str]", 0.14618933779411328], ["Dict[str, Any]", 0.13636291882988288], ["Dict[str, str]", 0.08772736260305497], ["dict", 0.08733033091284534]], "variables": {"response": ""}, "variables_p": {"response": [["Dict[str, str]", 0.26702313560840496], ["Dict[str, float]", 0.23622638190671957], ["dict", 0.10038130275193319], ["list", 0.09145349684478728]]}}, {"docstring": {"func": "Retrieves a list of Asana tasks that match search parameters.", "long_descr": null, "ret": "A list of dicts containing attributes of matching Asana tasks"}, "fn_lc": [[183, 4], [194, 29]], "fn_var_ln": {"merged_params": [[191, 8], [191, 21]], "response": [[193, 8], [193, 16]]}, "fn_var_occur": {"merged_params": [["merged_params", "self", "_merge_find_task_parameters", "params"], ["self", "_validate_find_task_parameters", "merged_params"], ["response", "self", "client", "tasks", "find_all", "params", "merged_params"]], "response": [["response", "self", "client", "tasks", "find_all", "params", "merged_params"], ["list", "response"]]}, "name": "find_task", "params": {"params": "dict | None", "self": ""}, "params_descr": {"params": "Attributes that matching tasks should have. For a list of possible parameters,\nsee https://developers.asana.com/docs/get-multiple-tasks", "self": ""}, "params_occur": {"params": [["merged_params", "self", "_merge_find_task_parameters", "params"], ["response", "self", "client", "tasks", "find_all", "params", "merged_params"]], "self": [["merged_params", "self", "_merge_find_task_parameters", "params"], ["self", "_validate_find_task_parameters", "merged_params"], ["response", "self", "client", "tasks", "find_all", "params", "merged_params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["Dict[str, Any]", 0.21444259626011725], ["bytes", 0.11637200221746871], ["Optional[Exception]", 0.09609462130479268], ["Sequence[int]", 0.09379727880561942]], "self": []}, "q_name": "AsanaHook.find_task", "ret_exprs": ["return list(response)"], "ret_type": "builtins.list", "ret_type_p": [["bool", 0.6233834288090393], ["cmk.base.config.HostConfig", 0.07364005038043492]], "variables": {"merged_params": "", "response": ""}, "variables_p": {"merged_params": [["str", 0.2643875822736395], ["int", 0.10227348485383371]], "response": [["Dict[str, str]", 0.5117827978629307], ["List[bytes]", 0.09777303515745533], ["list", 0.09777303515745533], ["Dict[Any, Union[Any, Any]]", 0.09286322249419211]]}}, {"docstring": {"func": "Merge find_task parameters with default params from the connection.", "long_descr": null, "ret": "A dict of merged parameters to use in the search"}, "fn_lc": [[196, 4], [212, 28]], "fn_var_ln": {"merged_params": [[204, 8], [204, 21]]}, "fn_var_occur": {"merged_params": [["merged_params", "self", "project"], ["merged_params", "self", "workspace"], ["merged_params", "update", "search_parameters"]]}, "name": "_merge_find_task_parameters", "params": {"search_parameters": "dict | None", "self": ""}, "params_descr": {"search_parameters": "Attributes that tasks matching the search should have; these override\ndefaults from the connection", "self": ""}, "params_occur": {"search_parameters": [["self", "workspace", "search_parameters", "search_parameters"], ["merged_params", "update", "search_parameters"]], "self": [["self", "project"], ["merged_params", "self", "project"], ["self", "workspace", "search_parameters", "search_parameters"], ["merged_params", "self", "workspace"]]}, "params_p": {"args": [], "kwargs": [], "search_parameters": [["int", 0.2603217576456182], ["bytes", 0.192513068808356], ["Dict[str, Any]", 0.17103375406195565]], "self": []}, "q_name": "AsanaHook._merge_find_task_parameters", "ret_exprs": ["return merged_params"], "ret_type": "builtins.dict", "ret_type_p": [["Optional[str]", 0.1254469028907135], ["str", 0.1016274342561071]], "variables": {"merged_params": ""}, "variables_p": {"merged_params": [["timeserio.multimodel.base.MultiModel", 0.34360689436622793], ["float", 0.11240081686056137], ["Dict[Any, Type[Any]]", 0.10291057037356727], ["Dict[Any, Optional[Any]]", 0.10291057037356727], ["dict", 0.09018723599310412]]}}, {"docstring": {"func": "Check that the user provided minimal search parameters.", "long_descr": null, "ret": "None; raises ValueError if search parameters do not contain minimum required attributes"}, "fn_lc": [[215, 4], [230, 13]], "fn_var_ln": {"both_of_list": [[223, 8], [223, 20]], "contains_both": [[224, 8], [224, 21]], "contains_one": [[225, 8], [225, 20]], "one_of_list": [[222, 8], [222, 19]]}, "fn_var_occur": {"both_of_list": [["contains_both", "both_of_list", "issubset", "params"], ["ValueError", "one_of_list", "both_of_list"]], "contains_both": [["contains_both", "both_of_list", "issubset", "params"], ["contains_both", "contains_one"]], "contains_one": [["contains_one", "one_of_list", "isdisjoint", "params"], ["contains_both", "contains_one"]], "one_of_list": [["contains_one", "one_of_list", "isdisjoint", "params"], ["ValueError", "one_of_list", "both_of_list"]]}, "name": "_validate_find_task_parameters", "params": {"params": "builtins.dict"}, "params_descr": {"params": "Dict of parameters to be used in the search"}, "params_occur": {"params": [["contains_both", "both_of_list", "issubset", "params"], ["contains_one", "one_of_list", "isdisjoint", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["list", 0.12851009908031089], ["Optional[Union[str, Any, Any, Any]]", 0.10131243668815784], ["List[Dict[str, str]]", 0.09288491822189501], ["List[dict]", 0.08714145451359677], ["str", 0.08515193953307168], ["List[str]", 0.08451150728060093]], "self": []}, "q_name": "AsanaHook._validate_find_task_parameters", "ret_exprs": [], "ret_type": "None", "variables": {"both_of_list": "", "contains_both": "", "contains_one": "", "one_of_list": ""}, "variables_p": {"both_of_list": [["str", 0.8807364888638393], ["bool", 0.11926351113616078]], "contains_both": [["Dict[str, str]", 0.6390840618614323], ["Dict[str, Any]", 0.15735685970527707], ["Type[List[Any]]", 0.04957410042807476], ["list", 0.0492872695952466]], "contains_one": [["list", 0.6924717636895543], ["List[Tuple[str, str]]", 0.09536926267733382], ["str", 0.0850907488870472]], "one_of_list": [["list", 0.28610383010192697], ["str", 0.276389961480626], ["List[str]", 0.11575706508274598], ["Type[List[int]]", 0.11300325169597944], ["Pattern[str]", 0.10928160904790027], ["int", 0.09946428259082128]]}}, {"docstring": {"func": "Updates an existing Asana task.", "long_descr": null, "ret": "A dict containing the updated task's attributes"}, "fn_lc": [[232, 4], [242, 23]], "fn_var_ln": {"response": [[241, 8], [241, 16]]}, "fn_var_occur": {"response": [["response", "self", "client", "tasks", "update", "task_id", "params"]]}, "name": "update_task", "params": {"params": "builtins.dict", "self": "", "task_id": "builtins.str"}, "params_descr": {"params": "New values of the task's attributes. For a list of possible parameters, see\nhttps://developers.asana.com/docs/update-a-task", "self": "", "task_id": "Asana GID of task to update"}, "params_occur": {"params": [["response", "self", "client", "tasks", "update", "task_id", "params"]], "self": [["response", "self", "client", "tasks", "update", "task_id", "params"]], "task_id": [["response", "self", "client", "tasks", "update", "task_id", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["int", 0.47189617570406206], ["str", 0.3588738792267671], ["bytes", 0.08527696954279705]], "self": [], "task_id": [["int", 0.47189617570406206], ["str", 0.3588738792267671], ["bytes", 0.08527696954279705]]}, "q_name": "AsanaHook.update_task", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.2399460194083235], ["Dict[str, Any]", 0.1582586412424804], ["Optional[str]", 0.14800473469564834], ["List[str]", 0.12299909607841743], ["dict", 0.09491371961993535], ["Dict[str, str]", 0.08442016120823152], ["List[dict]", 0.07585067661529253]], "variables": {"response": ""}, "variables_p": {"response": [["Dict[Any, int]", 0.18843052344677758], ["DefaultDict[Any, int]", 0.1112295171144788], ["Dict[str, str]", 0.10808648482922256], ["KeysView[str]", 0.10488495725642176], ["dict", 0.10033007060980356], ["Set[str]", 0.09917411393098541], ["list", 0.09428968010547638], ["List[Dict[str, Any]]", 0.08918955892381739]]}}, {"docstring": {"func": "Creates a new project.", "long_descr": null, "ret": "A dict containing the new project's attributes, including its GID."}, "fn_lc": [[244, 4], [256, 23]], "fn_var_ln": {"merged_params": [[253, 8], [253, 21]], "response": [[255, 8], [255, 16]]}, "fn_var_occur": {"merged_params": [["merged_params", "self", "_merge_project_parameters", "params"], ["self", "_validate_create_project_parameters", "merged_params"], ["response", "self", "client", "projects", "create", "merged_params"]], "response": [["response", "self", "client", "projects", "create", "merged_params"]]}, "name": "create_project", "params": {"params": "builtins.dict", "self": ""}, "params_descr": {"params": "Attributes that the new project should have. See\nhttps://developers.asana.com/docs/create-a-project#create-a-project-parameters\nfor a list of possible parameters.", "self": ""}, "params_occur": {"params": [["merged_params", "self", "_merge_project_parameters", "params"]], "self": [["merged_params", "self", "_merge_project_parameters", "params"], ["self", "_validate_create_project_parameters", "merged_params"], ["response", "self", "client", "projects", "create", "merged_params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["str", 0.5517273193996131], ["List[str]", 0.18275178205939374]], "self": []}, "q_name": "AsanaHook.create_project", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.25404680408258906], ["dict", 0.11152894795399512], ["Dict[str, Union[str, int]]", 0.09687910242501037], ["Dict[str, Type[Any]]", 0.08402502743356786], ["Dict[str, str]", 0.08151894263078718]], "variables": {"merged_params": "", "response": ""}, "variables_p": {"merged_params": [["int", 0.44317417172126783], ["str", 0.3058944499325603], ["bool", 0.08372876567039651], ["Dict[str, Union[bool, str]]", 0.08327718229088135]], "response": [["dict", 0.1285516676976398], ["str", 0.10060295510605942], ["Dict[str, Any]", 0.09986481234222663], ["Dict[str, str]", 0.09209520135459369], ["Dict[Any, str]", 0.09145301373022044], ["bytes", 0.08732808519766294], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08587783611186889]]}}, {"docstring": {"func": "Check that user provided the minimum required parameters for project creation.", "long_descr": null, "ret": "None; raises a ValueError if `params` does not contain the minimum required attributes."}, "fn_lc": [[259, 4], [270, 13]], "fn_var_ln": {"required_parameters": [[266, 8], [266, 27]]}, "fn_var_occur": {"required_parameters": [["required_parameters", "isdisjoint", "params"], ["ValueError", "required_parameters"]]}, "name": "_validate_create_project_parameters", "params": {"params": "builtins.dict"}, "params_descr": {"params": "Attributes that the new project should have"}, "params_occur": {"params": [["required_parameters", "isdisjoint", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["str", 0.500695682081945], ["int", 0.10633921117042527], ["Tuple[int, int]", 0.094977859730916], ["float", 0.094977859730916]], "self": []}, "q_name": "AsanaHook._validate_create_project_parameters", "ret_exprs": [], "ret_type": "None", "variables": {"required_parameters": ""}, "variables_p": {"required_parameters": [["str", 0.9999999999999999]]}}, {"docstring": {"func": "Merge parameters passed into a project method with default params from the connection.", "long_descr": null, "ret": "A dict of merged parameters"}, "fn_lc": [[272, 4], [282, 28]], "fn_var_ln": {"merged_params": [[280, 8], [280, 21]]}, "fn_var_occur": {"merged_params": [["merged_params", "self", "workspace", "None", "self", "workspace"], ["merged_params", "update", "params"]]}, "name": "_merge_project_parameters", "params": {"params": "builtins.dict", "self": ""}, "params_descr": {"params": "Parameters passed into one of the project methods, which should override\ndefaults from the connection", "self": ""}, "params_occur": {"params": [["merged_params", "update", "params"]], "self": [["merged_params", "self", "workspace", "None", "self", "workspace"]]}, "params_p": {"args": [], "kwargs": [], "params": [["bytes", 0.2238964751565641], ["Dict[str, Any]", 0.202261839725402], ["Optional[Dict[str, str]]", 0.11030906940752709], ["dict", 0.08370987376940019], ["int", 0.0827937062210677]], "self": []}, "q_name": "AsanaHook._merge_project_parameters", "ret_exprs": ["return merged_params"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.17629038884588732], ["Optional[str]", 0.17629038884588732], ["str", 0.09143271199493615]], "variables": {"merged_params": ""}, "variables_p": {"merged_params": []}}, {"docstring": {"func": "Retrieves a list of Asana projects that match search parameters.", "long_descr": null, "ret": "A list of dicts containing attributes of matching Asana projects"}, "fn_lc": [[284, 4], [295, 29]], "fn_var_ln": {"merged_params": [[293, 8], [293, 21]], "response": [[294, 8], [294, 16]]}, "fn_var_occur": {"merged_params": [["merged_params", "self", "_merge_project_parameters", "params"], ["response", "self", "client", "projects", "find_all", "merged_params"]], "response": [["response", "self", "client", "projects", "find_all", "merged_params"], ["list", "response"]]}, "name": "find_project", "params": {"params": "builtins.dict", "self": ""}, "params_descr": {"params": "Attributes which matching projects should have. See\nhttps://developers.asana.com/docs/get-multiple-projects\nfor a list of possible parameters.", "self": ""}, "params_occur": {"params": [["merged_params", "self", "_merge_project_parameters", "params"]], "self": [["merged_params", "self", "_merge_project_parameters", "params"], ["response", "self", "client", "projects", "find_all", "merged_params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["str", 0.5524587183310972], ["bool", 0.08402298500959471]], "self": []}, "q_name": "AsanaHook.find_project", "ret_exprs": ["return list(response)"], "ret_type": "builtins.list", "ret_type_p": [["bool", 0.5780898009660161], ["cmk.base.config.HostConfig", 0.11497464964459317]], "variables": {"merged_params": "", "response": ""}, "variables_p": {"merged_params": [["str", 0.4778880793671684], ["Dict[str, Type[Any]]", 0.09047038894012126], ["Dict[str, str]", 0.09047038894012126], ["dict", 0.09047038894012126]], "response": [["dict", 0.21911940400946636], ["Union[List[Any], List[str]]", 0.18969040051787672], ["bytes", 0.18711530037398572], ["Dict[str, Optional[int]]", 0.1129943354778376], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09520460660010666], ["int", 0.09503818835882985]]}}, {"docstring": {"func": "Updates an existing project.", "long_descr": null, "ret": "A dict containing the updated project's attributes"}, "fn_lc": [[297, 4], [308, 23]], "fn_var_ln": {"response": [[307, 8], [307, 16]]}, "fn_var_occur": {"response": [["response", "self", "client", "projects", "update", "project_id", "params"]]}, "name": "update_project", "params": {"params": "builtins.dict", "project_id": "builtins.str", "self": ""}, "params_descr": {"params": "New attributes that the project should have. See\nhttps://developers.asana.com/docs/update-a-project#update-a-project-parameters\nfor a list of possible parameters", "project_id": "Asana GID of the project to update", "self": ""}, "params_occur": {"params": [["response", "self", "client", "projects", "update", "project_id", "params"]], "project_id": [["response", "self", "client", "projects", "update", "project_id", "params"]], "self": [["response", "self", "client", "projects", "update", "project_id", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["str", 0.8065267811228236], ["int", 0.19347321887717647]], "project_id": [["str", 0.8065267811228236], ["int", 0.19347321887717647]], "self": []}, "q_name": "AsanaHook.update_project", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.2114124634142635], ["dict", 0.20050936687867182], ["Dict[str, Union[str, int]]", 0.11948970348119546], ["Dict[str, Union[str, bool]]", 0.10022930497040265], ["Dict[str, Any]", 0.09499113533603339], ["bool", 0.09430720455432197], ["Dict[str, Dict[str, str]]", 0.09039360213935516], ["List[List[str]]", 0.08866721922575625]], "variables": {"response": ""}, "variables_p": {"response": [["List[str]", 0.12629405513799544], ["Dict[str, None]", 0.10307367676634065], ["str", 0.09827056738423634], ["Dict[str, Dict[str, Any]]", 0.09802748211412234], ["Dict[str, str]", 0.0964096569260339], ["Dict[str, Any]", 0.09427934926236063], ["list", 0.0888730014201193]]}}, {"docstring": {"func": "Deletes a project.", "long_descr": null, "ret": "A dict containing the response from Asana"}, "fn_lc": [[310, 4], [322, 21]], "fn_var_ln": {"response": [[318, 12], [318, 20]]}, "fn_var_occur": {"response": [["response", "self", "client", "projects", "delete", "project_id"]]}, "name": "delete_project", "params": {"project_id": "builtins.str", "self": ""}, "params_descr": {"project_id": "Asana GID of the project to delete", "self": ""}, "params_occur": {"project_id": [["response", "self", "client", "projects", "delete", "project_id"], ["self", "log", "info", "project_id"]], "self": [["response", "self", "client", "projects", "delete", "project_id"], ["self", "log", "info", "project_id"]]}, "params_p": {"args": [], "kwargs": [], "project_id": [["str", 1.0]], "self": []}, "q_name": "AsanaHook.delete_project", "ret_exprs": ["return response", "return {}"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.455682426539139], ["List[str]", 0.13532316518996448], ["Dict[str, str]", 0.10472899264959591], ["Optional[Dict[str, Any]]", 0.10472088650054152], ["Dict[str, Union[str, Set]]", 0.09684597406334856]], "variables": {"response": ""}, "variables_p": {"response": [["int", 0.1295710965226473], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any]]", 0.06697760337732618], ["Dict[str, int]", 0.061027085376095566], ["Dict[str, str]", 0.05987714549823763]]}}], "name": "AsanaHook", "q_name": "AsanaHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 12], [43, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_ensure_prefix", "params": {"field": ""}, "params_descr": {"field": ""}, "params_occur": {"field": [["field", "conn_attrs", "field", "startswith"], ["conn_type", "field"]]}, "params_p": {"args": [], "field": [["str", 0.21598068269202075], ["bytes", 0.09685948390948863], ["type", 0.09642622982746019], ["dict", 0.09516659262998839], ["Callable", 0.09308159469840512]], "kwargs": []}, "q_name": "_ensure_prefixes.<locals>.dec.<locals>.inner.<locals>._ensure_prefix", "ret_exprs": ["return f\"extra__{conn_type}__{field}\"", "return field"], "ret_type": "", "ret_type_p": [["str", 0.3847633952199308], ["dict", 0.08854205711760782]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 8], [48, 34]], "fn_var_ln": {"conn_attrs": [[37, 12], [37, 22]], "field_behaviors": [[36, 12], [36, 27]], "placeholders": [[46, 16], [46, 28]]}, "fn_var_occur": {"conn_attrs": [], "field_behaviors": [["placeholders", "field_behaviors"], ["field_behaviors", "_ensure_prefix", "k", "v", "k", "v", "placeholders", "items"]], "placeholders": [["placeholders", "field_behaviors"], ["field_behaviors", "_ensure_prefix", "k", "v", "k", "v", "placeholders", "items"]]}, "name": "inner", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_ensure_prefixes.<locals>.dec.<locals>.inner", "ret_exprs": ["return field_behaviors"], "ret_type": "", "ret_type_p": [["List[str]", 0.3060297189220665], ["str", 0.21396079358905573], ["Sequence[str]", 0.11677580458257081]], "variables": {"conn_attrs": "", "field_behaviors": "", "placeholders": ""}, "variables_p": {"conn_attrs": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "field_behaviors": [["list", 0.20742656076077715], ["List[int]", 0.17797030915024295], ["Tuple[Sequence[Any]]", 0.1291510821384613], ["Dict[str, List[str]]", 0.11500109773862414], ["dict", 0.10810324803442775], ["int", 0.0894637192639857]], "placeholders": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[33, 4], [50, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dec", "params": {"func": ""}, "params_descr": {"func": ""}, "params_occur": {"func": []}, "params_p": {"args": [], "func": [["Callable", 0.6], ["Callable[..., None]", 0.09999999999999999]], "kwargs": []}, "q_name": "_ensure_prefixes.<locals>.dec", "ret_exprs": ["return inner"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Remove when provider min airflow version >= 2.5.0 since this is now handled by provider manager.", "long_descr": null, "ret": null}, "fn_lc": [[30, 0], [52, 14]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_ensure_prefixes", "params": {"conn_type": ""}, "params_descr": {"conn_type": ""}, "params_occur": {"conn_type": []}, "params_p": {"args": [], "conn_type": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "kwargs": []}, "q_name": "_ensure_prefixes", "ret_exprs": ["return dec"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "functools", "cached_property", "wraps", "typing", "Any", "asana", "Client", "asana", "error", "NotFoundError", "airflow", "hooks", "base", "BaseHook", "flask_appbuilder", "fieldwidgets", "BS3TextFieldWidget", "flask_babel", "lazy_gettext", "wtforms", "StringField"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 41, "I": 0, "U": 43}, "session_id": "_1y4dIekeaFswbElDYdqX7u9TWub_h_AhAYJUjBmxJ0", "set": null, "tc": [false, null], "type_annot_cove": 0.49, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}