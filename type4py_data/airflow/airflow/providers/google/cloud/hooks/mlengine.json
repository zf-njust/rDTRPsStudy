{"error": null, "response": {"classes": [{"cls_lc": [[79, 0], [537, 61]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [93, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [["kwargs", "get", "None"], ["super", "__init__", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MLEngineHook.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Retrieves the connection to MLEngine.", "long_descr": null, "ret": "Google MLEngine services object."}, "fn_lc": [[95, 4], [102, 73]], "fn_var_ln": {"authed_http": [[101, 8], [101, 19]]}, "fn_var_occur": {"authed_http": [["authed_http", "self", "_authorize"], ["build", "http", "authed_http", "cache_discovery", "False"]]}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["authed_http", "self", "_authorize"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MLEngineHook.get_conn", "ret_exprs": ["return build(\"ml\", \"v1\", http=authed_http, cache_discovery=False)"], "ret_type": "googleapiclient.discovery.Resource", "ret_type_p": [["str", 0.27418925484013573], ["int", 0.1207317084742105], ["Hashable", 0.1207317084742105], ["Tuple[str, str]", 0.09526544340824503]], "variables": {"authed_http": ""}, "variables_p": {"authed_http": [["str", 0.2456553905991789], ["int", 0.2198217399832305], ["float", 0.08964732990321976], ["Dict[str, Dict[str, Any]]", 0.07996609783583118], ["Dict[str, Union[Any, Any, Any]]", 0.07375817774512998]]}}, {"docstring": {"func": "Launches a MLEngine job and wait for it to reach a terminal state.", "long_descr": null, "ret": "The MLEngine job object if the job successfully reach a\nterminal state (which might be FAILED or CANCELLED state)."}, "fn_lc": [[105, 4], [160, 58]], "fn_var_ln": {"existing_job": [[147, 20], [147, 32]], "hook": [[133, 8], [133, 12]], "job_id": [[139, 8], [139, 14]], "request": [[138, 8], [138, 15]]}, "fn_var_occur": {"existing_job": [["existing_job", "self", "get_job", "project_id", "job_id"], ["use_existing_job_fn", "existing_job"], ["self", "log", "error", "job_id", "existing_job"]], "hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "job"]], "job_id": [["job_id", "job"], ["existing_job", "self", "get_job", "project_id", "job_id"], ["self", "log", "error", "job_id", "existing_job"], ["self", "log", "info", "job_id"], ["self", "_wait_for_job_done", "project_id", "job_id"]], "request": [["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "job"], ["request", "execute", "num_retries", "self", "num_retries"]]}, "name": "create_job", "params": {"job": "builtins.dict", "project_id": "builtins.str", "self": "", "use_existing_job_fn": "Callable | None"}, "params_descr": {"job": "MLEngine Job object that should be provided to the MLEngine\nAPI, such as: ::\n\n{\n  'jobId': 'my_job_id',\n  'trainingInput': {\n    'scaleTier': 'STANDARD_1',\n    ...\n  }\n}", "project_id": "The Google Cloud project id within which MLEngine\njob will be launched. If set to None or missing, the default project_id from the Google Cloud\nconnection is used.", "self": "", "use_existing_job_fn": "In case that a MLEngine job with the same\njob_id already exist, this method (if provided) will decide whether\nwe should use this existing job, continue waiting for it to finish\nand returning the job object. It should accepts a MLEngine job\nobject, and returns a boolean value indicating whether it is OK to\nreuse the existing job. If 'use_existing_job_fn' is not provided,\nwe by default reuse the existing MLEngine job."}, "params_occur": {"job": [["self", "_append_label", "job"], ["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "job"], ["job_id", "job"]], "project_id": [["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "job"], ["existing_job", "self", "get_job", "project_id", "job_id"], ["self", "_wait_for_job_done", "project_id", "job_id"]], "self": [["hook", "self", "get_conn"], ["self", "_append_label", "job"], ["self", "log", "info"], ["request", "execute", "num_retries", "self", "num_retries"], ["existing_job", "self", "get_job", "project_id", "job_id"], ["self", "log", "error", "job_id", "existing_job"], ["self", "log", "info", "job_id"], ["self", "log", "error", "e"], ["self", "_wait_for_job_done", "project_id", "job_id"]], "use_existing_job_fn": [["use_existing_job_fn", "None"], ["use_existing_job_fn", "existing_job"]]}, "params_p": {"args": [], "job": [["Optional[str]", 0.2346318751478405], ["apicliendiscovery.Resource", 0.1062130466043692], ["str", 0.10205190597687352], ["Optional[int]", 0.09497197137414039], ["List[str]", 0.09473460143931982], ["aiohttp.ClientSession", 0.09122173579883201]], "kwargs": [], "project_id": [["str", 0.5990211688412692]], "self": [], "use_existing_job_fn": [["Optional[bool]", 0.20700082509366294], ["Optional[str]", 0.19998204594499439], ["bool", 0.19958052668624804], ["int", 0.1967183011375473], ["str", 0.09835915056877365]]}, "q_name": "MLEngineHook.create_job", "ret_exprs": ["return self._wait_for_job_done(project_id, job_id)"], "ret_type": "builtins.dict", "ret_type_p": [["Optional[str]", 0.1105200443793222], ["Optional[Sequence[Any]]", 0.10700257431325791]], "variables": {"existing_job": "", "hook": "", "job_id": "", "request": ""}, "variables_p": {"existing_job": [["Optional[str]", 0.4547678245943736], ["str", 0.36824794559578244], ["list", 0.08849211490492201]], "hook": [["str", 0.21050782385419967], ["Optional[str]", 0.09712475141621586], ["Dict[str, Union[dict, Any, Any, Any]]", 0.08638711257515133]], "job_id": [["int", 0.16022668580724256], ["Type[Dict[Any, Any]]", 0.10806982847936726], ["Optional[str]", 0.07400760171708347], ["bytes", 0.06942431787417074]], "request": [["aiohttp.ClientSession", 0.10721652898412026], ["dict", 0.1038148038590807], ["solo.vendor.old_session.old_session.Session", 0.0917550890156042], ["users.arxiv.users.domain.Session", 0.08694968865191605]]}}, {"docstring": {"func": "Launches a MLEngine job and wait for it to reach a terminal state.", "long_descr": null, "ret": "The MLEngine job_id of the object if the job successfully reach a\nterminal state (which might be FAILED or CANCELLED state)."}, "fn_lc": [[163, 4], [193, 21]], "fn_var_ln": {"hook": [[187, 8], [187, 12]], "job_id": [[191, 8], [191, 14]], "request": [[190, 8], [190, 15]]}, "fn_var_occur": {"hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "body"]], "job_id": [["job_id", "body"]], "request": [["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "body"], ["request", "execute", "num_retries", "self", "num_retries"]]}, "name": "create_job_without_waiting_result", "params": {"body": "builtins.dict", "project_id": "builtins.str", "self": ""}, "params_descr": {"body": "MLEngine Job object that should be provided to the MLEngine\nAPI, such as: ::\n\n{\n  'jobId': 'my_job_id',\n  'trainingInput': {\n    'scaleTier': 'STANDARD_1',\n    ...\n  }\n}", "project_id": "The Google Cloud project id within which MLEngine\njob will be launched. If set to None or missing, the default project_id from the Google Cloud\nconnection is used.", "self": ""}, "params_occur": {"body": [["self", "_append_label", "body"], ["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "body"], ["job_id", "body"]], "project_id": [["request", "hook", "projects", "jobs", "create", "parent", "project_id", "body", "body"]], "self": [["hook", "self", "get_conn"], ["self", "_append_label", "body"], ["request", "execute", "num_retries", "self", "num_retries"]]}, "params_p": {"args": [], "body": [["starlette.requests.Request", 0.18444611904319927], ["str", 0.09283693227999085]], "kwargs": [], "project_id": [["str", 0.3729836827795162], ["Optional[str]", 0.08911903877640784], ["Optional[int]", 0.08911903877640784], ["apistar.backends.django_orm.Session", 0.08331290433809165]], "self": []}, "q_name": "MLEngineHook.create_job_without_waiting_result", "ret_exprs": ["return job_id"], "ret_type": "", "ret_type_p": [["int", 0.636165463610385], ["str", 0.2189395430910286]], "variables": {"hook": "", "job_id": "", "request": ""}, "variables_p": {"hook": [["str", 0.21050782385419967], ["Optional[str]", 0.09712475141621586], ["Dict[str, Union[dict, Any, Any, Any]]", 0.08638711257515133]], "job_id": [["list", 0.9999999999346639], ["Dict[str, str]", 4.019599861980666e-11], ["str", 1.2569949116379228e-11], ["int", 6.284974558189614e-12], ["Optional[str]", 6.284974558189614e-12]], "request": [["aiohttp.ClientSession", 0.3595642190455177], ["solo.vendor.old_session.old_session.Session", 0.1337193807789587], ["users.arxiv.users.domain.Session", 0.09762337951428537]]}}, {"docstring": {"func": "Cancels a MLEngine job.", "long_descr": null, "ret": "Empty dict if cancelled successfully"}, "fn_lc": [[196, 4], [227, 21]], "fn_var_ln": {"hook": [[212, 8], [212, 12]], "request": [[214, 8], [214, 15]]}, "fn_var_occur": {"hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "jobs", "cancel", "name", "project_id", "job_id"]], "request": [["request", "hook", "projects", "jobs", "cancel", "name", "project_id", "job_id"], ["request", "execute", "num_retries", "self", "num_retries"]]}, "name": "cancel_job", "params": {"job_id": "builtins.str", "project_id": "builtins.str", "self": ""}, "params_descr": {"job_id": "A unique id for the want-to-be cancelled Google MLEngine training job.", "project_id": "The Google Cloud project id within which MLEngine\njob will be cancelled. If set to None or missing, the default project_id from the Google Cloud\nconnection is used.", "self": ""}, "params_occur": {"job_id": [["request", "hook", "projects", "jobs", "cancel", "name", "project_id", "job_id"], ["self", "log", "error", "job_id"], ["self", "log", "info", "job_id"]], "project_id": [["request", "hook", "projects", "jobs", "cancel", "name", "project_id", "job_id"]], "self": [["hook", "self", "get_conn"], ["request", "execute", "num_retries", "self", "num_retries"], ["self", "log", "error", "job_id"], ["self", "log", "info", "job_id"], ["self", "log", "error", "e"]]}, "params_p": {"args": [], "job_id": [["str", 0.7212146300319433], ["Optional[annofabcli.common.dataclasses.WaitOptions]", 0.09631583866173495], ["int", 0.08996903218398718]], "kwargs": [], "project_id": [["str", 0.5203697386803725], ["int", 0.29429393199858256], ["Optional[str]", 0.0926681646605225]], "self": []}, "q_name": "MLEngineHook.cancel_job", "ret_exprs": ["return request.execute(num_retries=self.num_retries)", "return {}"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.6278291709809204], ["float", 0.17012025867281866], ["int", 0.10095024088067989]], "variables": {"hook": "", "request": ""}, "variables_p": {"hook": [["list", 0.5012784544278057], ["str", 0.11928341711966364], ["Dict[str, List[str]]", 0.10616631069954716], ["Dict[str, Union[list, str]]", 0.08998436960954517], ["TextIO", 0.08308891169389399]], "request": [["Dict[str, int]", 0.1783162779894609], ["Optional[str]", 0.14846236321017464], ["Dict[str, Optional[str]]", 0.12118993045991075], ["Dict[str, dict]", 0.0925931160562174], ["Dict[str, Dict[str, Any]]", 0.0925931160562174]]}}, {"docstring": {"func": "Gets a MLEngine job based on the job id.", "long_descr": null, "ret": "MLEngine job object if succeed."}, "fn_lc": [[229, 4], [251, 25]], "fn_var_ln": {"hook": [[239, 8], [239, 12]], "job_name": [[240, 8], [240, 16]], "request": [[241, 8], [241, 15]]}, "fn_var_occur": {"hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "jobs", "get", "name", "job_name"]], "job_name": [["job_name", "project_id", "job_id"], ["request", "hook", "projects", "jobs", "get", "name", "job_name"]], "request": [["request", "hook", "projects", "jobs", "get", "name", "job_name"], ["request", "execute", "num_retries", "self", "num_retries"]]}, "name": "get_job", "params": {"job_id": "builtins.str", "project_id": "builtins.str", "self": ""}, "params_descr": {"job_id": "A unique id for the Google MLEngine job. (templated)", "project_id": "The project in which the Job is located. If set to None or missing, the default\nproject_id from the Google Cloud connection is used. (templated)", "self": ""}, "params_occur": {"job_id": [["job_name", "project_id", "job_id"]], "project_id": [["job_name", "project_id", "job_id"]], "self": [["hook", "self", "get_conn"], ["request", "execute", "num_retries", "self", "num_retries"], ["self", "log", "error", "e"]]}, "params_p": {"args": [], "job_id": [["str", 0.7171087134482936], ["int", 0.09284300406574998]], "kwargs": [], "project_id": [["str", 0.7171087134482936], ["int", 0.09284300406574998]], "self": []}, "q_name": "MLEngineHook.get_job", "ret_exprs": ["return request.execute(num_retries=self.num_retries)"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.6965147670159038], ["Dict[str, str]", 0.09721628411213096]], "variables": {"hook": "", "job_name": "", "request": ""}, "variables_p": {"hook": [["Dict[str, str]", 0.28542960522321925], ["list", 0.11076184399839326], ["Tuple[Any, Any, Any]", 0.1036495635772463], ["KeysView[str]", 0.1034337586740757], ["requests.models.Response", 0.10305942511928402], ["Dict[str, Any]", 0.0984318628802357], ["Dict[str, Union[int, str]]", 0.09761697026377289], ["dict", 0.09761697026377289]], "job_name": [["str", 0.7132843740425877], ["list", 0.09882328726884669], ["Union[Literal, Literal]", 0.09750198277469829]], "request": [["Dict[str, Any]", 0.28374848279735126], ["aiohttp.ClientSession", 0.12342230425227732], ["users.arxiv.users.domain.Session", 0.09645557908897824], ["dict", 0.09603374461301387], ["requests.models.Response", 0.09367729868517195], ["Dict[str, str]", 0.09168099357132355]]}}, {"docstring": {"func": "Waits for the Job to reach a terminal state.", "long_descr": "This method will periodically check the job state until the job reach\na terminal state.", "ret": null}, "fn_lc": [[253, 4], [274, 32]], "fn_var_ln": {"job": [[271, 12], [271, 15]]}, "fn_var_occur": {"job": [["job", "self", "get_job", "project_id", "job_id"]]}, "name": "_wait_for_job_done", "params": {"interval": "builtins.int", "job_id": "builtins.str", "project_id": "builtins.str", "self": ""}, "params_descr": {"interval": "Time expressed in seconds after which the job status is checked again. (templated)", "job_id": "A unique id for the Google MLEngine job. (templated)", "project_id": "The project in which the Job is located. If set to None or missing, the default\nproject_id from the Google Cloud connection is used. (templated)", "self": ""}, "params_occur": {"interval": [["time", "sleep", "interval"]], "job_id": [["self", "log", "info", "job_id"], ["job", "self", "get_job", "project_id", "job_id"]], "project_id": [["job", "self", "get_job", "project_id", "job_id"]], "self": [["self", "log", "info", "job_id"], ["job", "self", "get_job", "project_id", "job_id"]]}, "params_p": {"args": [], "interval": [["str", 0.6730065477548739], ["int", 0.17483631501854693]], "job_id": [["str", 0.6800289058302377], ["Optional[IO[str]]", 0.11394154759953244]], "kwargs": [], "project_id": [["str", 0.777904700215823], ["Optional[str]", 0.11402202958813029]], "self": []}, "q_name": "MLEngineHook._wait_for_job_done", "ret_exprs": ["return job"], "ret_type": "", "ret_type_p": [["Iterable[Iterable[T]]", 0.1186544020862507], ["Dict[str, str]", 0.10436461110202391], ["Optional[recidiviz.common.constants.state.state_supervision_period.StateSupervisionPeriodTerminationReason]", 0.10436461110202391], ["List[str]", 0.07531646878764853], ["str", 0.07531646878764853], ["float", 0.07531646878764853]], "variables": {"job": ""}, "variables_p": {"job": [["str", 0.20452152670110202], ["Set[str]", 0.11824893803157883], ["Dict[str, List[Any]]", 0.09318682779635346], ["Dict[str, str]", 0.0925731849329539], ["List[Dict[str, str]]", 0.0912812219444873], ["List[Dict[str, Any]]", 0.08961435050390353]]}}, {"docstring": {"func": "Creates the Version on Google Cloud ML Engine.", "long_descr": null, "ret": "If the version was created successfully, returns the operation.\nOtherwise raises an error ."}, "fn_lc": [[277, 4], [310, 9]], "fn_var_ln": {"create_request": [[300, 8], [300, 22]], "get_request": [[302, 8], [302, 19]], "hook": [[295, 8], [295, 12]], "parent_name": [[296, 8], [296, 19]], "response": [[301, 8], [301, 16]]}, "fn_var_occur": {"create_request": [["create_request", "hook", "projects", "models", "versions", "create", "parent", "parent_name", "body", "version_spec"], ["response", "create_request", "execute", "num_retries", "self", "num_retries"]], "get_request": [["get_request", "hook", "projects", "operations", "get", "name", "response"], ["_poll_with_exponential_delay", "request", "get_request", "execute_num_retries", "self", "num_retries", "max_n", "is_done_func", "resp", "resp", "get", "False", "is_error_func", "resp", "resp", "get", "None", "None"]], "hook": [["hook", "self", "get_conn"], ["create_request", "hook", "projects", "models", "versions", "create", "parent", "parent_name", "body", "version_spec"], ["get_request", "hook", "projects", "operations", "get", "name", "response"]], "parent_name": [["parent_name", "project_id", "model_name"], ["create_request", "hook", "projects", "models", "versions", "create", "parent", "parent_name", "body", "version_spec"]], "response": [["response", "create_request", "execute", "num_retries", "self", "num_retries"], ["get_request", "hook", "projects", "operations", "get", "name", "response"]]}, "name": "create_version", "params": {"model_name": "builtins.str", "project_id": "builtins.str", "self": "", "version_spec": "builtins.dict"}, "params_descr": {"model_name": "The name of the Google Cloud ML Engine model that the version belongs to.\n(templated)", "project_id": "The Google Cloud project name to which MLEngine model belongs.\nIf set to None or missing, the default project_id from the Google Cloud connection is used.\n(templated)", "self": "", "version_spec": "A dictionary containing the information about the version. (templated)"}, "params_occur": {"model_name": [["parent_name", "project_id", "model_name"]], "project_id": [["parent_name", "project_id", "model_name"]], "self": [["hook", "self", "get_conn"], ["self", "_append_label", "version_spec"], ["response", "create_request", "execute", "num_retries", "self", "num_retries"], ["_poll_with_exponential_delay", "request", "get_request", "execute_num_retries", "self", "num_retries", "max_n", "is_done_func", "resp", "resp", "get", "False", "is_error_func", "resp", "resp", "get", "None", "None"]], "version_spec": [["self", "_append_label", "version_spec"], ["create_request", "hook", "projects", "models", "versions", "create", "parent", "parent_name", "body", "version_spec"]]}, "params_p": {"args": [], "kwargs": [], "model_name": [["str", 0.8206006891973958], ["Optional[str]", 0.09086764796078692], ["int", 0.08853166284181696]], "project_id": [["str", 0.8206006891973958], ["Optional[str]", 0.09086764796078692], ["int", 0.08853166284181696]], "self": [], "version_spec": [["str", 0.7840087491026757]]}, "q_name": "MLEngineHook.create_version", "ret_exprs": ["return _poll_with_exponential_delay( request=get_request, execute_num_retries=self.num_retries, max_n=9, is_done_func=lambda resp: resp.get(\"done\", False), is_error_func=lambda resp: resp.get(\"error\", None) is not None,)"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.09919385506732857], ["str", 0.09919385506732857]], "variables": {"create_request": "", "get_request": "", "hook": "", "parent_name": "", "response": ""}, "variables_p": {"create_request": [["Dict[str, Union[Any, Any, Any]]", 0.11729162436112059]], "get_request": [["requests.structures.CaseInsensitiveDict[requests.compastr]", 0.118482743319692], ["Dict[str, Any]", 0.07981274937934764]], "hook": [], "parent_name": [["str", 0.6470934834108764], ["Set[str]", 0.09296933405609317], ["list", 0.09188728277232713], ["List[str]", 0.08690067499398019], ["Dict[str, str]", 0.08114922476672322]], "response": [["List[str]", 0.11130147591784224]]}}, {"docstring": {"func": "Sets a version to be the default. Blocks until finished.", "long_descr": null, "ret": "If successful, return an instance of Version.\nOtherwise raises an error."}, "fn_lc": [[313, 4], [342, 17]], "fn_var_ln": {"full_version_name": [[332, 8], [332, 25]], "hook": [[331, 8], [331, 12]], "request": [[334, 8], [334, 15]], "response": [[337, 12], [337, 20]]}, "fn_var_occur": {"full_version_name": [["full_version_name", "project_id", "model_name", "version_name"], ["request", "hook", "projects", "models", "versions", "setDefault", "name", "full_version_name", "body"]], "hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "models", "versions", "setDefault", "name", "full_version_name", "body"]], "request": [["request", "hook", "projects", "models", "versions", "setDefault", "name", "full_version_name", "body"], ["response", "request", "execute", "num_retries", "self", "num_retries"]], "response": [["response", "request", "execute", "num_retries", "self", "num_retries"], ["self", "log", "info", "response"]]}, "name": "set_default_version", "params": {"model_name": "builtins.str", "project_id": "builtins.str", "self": "", "version_name": "builtins.str"}, "params_descr": {"model_name": "The name of the Google Cloud ML Engine model that the version belongs to.\n(templated)", "project_id": "The Google Cloud project name to which MLEngine model belongs. If set to None\nor missing, the default project_id from the Google Cloud connection is used. (templated)", "self": "", "version_name": "A name to use for the version being operated upon. (templated)"}, "params_occur": {"model_name": [["full_version_name", "project_id", "model_name", "version_name"]], "project_id": [["full_version_name", "project_id", "model_name", "version_name"]], "self": [["hook", "self", "get_conn"], ["response", "request", "execute", "num_retries", "self", "num_retries"], ["self", "log", "info", "response"], ["self", "log", "error", "e"]], "version_name": [["full_version_name", "project_id", "model_name", "version_name"]]}, "params_p": {"args": [], "kwargs": [], "model_name": [["str", 0.9999999999999999]], "project_id": [["str", 0.9999999999999999]], "self": [], "version_name": [["str", 0.9999999999999999]]}, "q_name": "MLEngineHook.set_default_version", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["dict", 0.33687157502230664], ["int", 0.1469925943332797], ["Optional[str]", 0.13464028992934268], ["List[str]", 0.11820798090645403], ["bool", 0.09213881132033112], ["List[dict]", 0.08777466741886646]], "variables": {"full_version_name": "", "hook": "", "request": "", "response": ""}, "variables_p": {"full_version_name": [["str", 0.5159784669032571], ["dict", 0.17936147458389312], ["Iterator[Any]", 0.1148857626540038], ["int", 0.10311936862416746]], "hook": [["guillotina.annotations.AnnotationData", 0.10884306284004486]], "request": [], "response": [["cmk.gui.http.Response", 0.17966548214460906], ["Dict[str, Union[Any, Any, str]]", 0.17834112976523622], ["List[List[int]]", 0.17389022308012617], ["List[Tuple[Any, Any]]", 0.08543253569052699], ["int", 0.07621160745706858]]}}, {"docstring": {"func": "Lists all available versions of a model. Blocks until finished.", "long_descr": null, "ret": "return an list of instance of Version."}, "fn_lc": [[345, 4], [377, 21]], "fn_var_ln": {"full_parent_name": [[362, 8], [362, 24]], "hook": [[360, 8], [360, 12]], "request": [[370, 12], [370, 19]], "response": [[367, 12], [367, 20]], "result": [[361, 8], [361, 14]]}, "fn_var_occur": {"full_parent_name": [["full_parent_name", "project_id", "model_name"], ["request", "hook", "projects", "models", "versions", "list", "parent", "full_parent_name", "pageSize"]], "hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "models", "versions", "list", "parent", "full_parent_name", "pageSize"], ["request", "hook", "projects", "models", "versions", "list_next", "previous_request", "request", "previous_response", "response"]], "request": [["request", "hook", "projects", "models", "versions", "list", "parent", "full_parent_name", "pageSize"], ["request", "None"], ["response", "request", "execute", "num_retries", "self", "num_retries"], ["request", "hook", "projects", "models", "versions", "list_next", "previous_request", "request", "previous_response", "response"]], "response": [["response", "request", "execute", "num_retries", "self", "num_retries"], ["result", "extend", "response", "get"], ["request", "hook", "projects", "models", "versions", "list_next", "previous_request", "request", "previous_response", "response"]], "result": [["result", "builtins", "list", "builtins", "dict"], ["result", "extend", "response", "get"]]}, "name": "list_versions", "params": {"model_name": "builtins.str", "project_id": "builtins.str", "self": ""}, "params_descr": {"model_name": "The name of the Google Cloud ML Engine model that the version\nbelongs to. (templated)", "project_id": "The Google Cloud project name to which MLEngine model belongs. If set to None or\nmissing, the default project_id from the Google Cloud connection is used. (templated)", "self": ""}, "params_occur": {"model_name": [["full_parent_name", "project_id", "model_name"]], "project_id": [["full_parent_name", "project_id", "model_name"]], "self": [["hook", "self", "get_conn"], ["response", "request", "execute", "num_retries", "self", "num_retries"]]}, "params_p": {"args": [], "kwargs": [], "model_name": [["str", 0.8989643453184111], ["int", 0.10103565468158876]], "project_id": [["str", 0.8989643453184111], ["int", 0.10103565468158876]], "self": []}, "q_name": "MLEngineHook.list_versions", "ret_exprs": ["return result"], "ret_type": "builtins.list[builtins.dict]", "ret_type_p": [["str", 0.21355287505569803], ["object", 0.09830589061803774], ["list", 0.09830589061803774], ["List[str]", 0.09830589061803774], ["Callable[..., None]", 0.09830589061803774], ["dict", 0.09830589061803774]], "variables": {"full_parent_name": "", "hook": "", "request": "", "response": "", "result": "builtins.list[builtins.dict]"}, "variables_p": {"full_parent_name": [["str", 0.6196462953301203], ["Set[str]", 0.12158656946118718], ["list", 0.09684856651142185]], "hook": [["Dict[str, Any]", 0.10770918111717785], ["list", 0.09008598294437176]], "request": [["dict", 0.34819416216424853], ["list", 0.10682871705009793]], "response": [["Response", 0.31476210957668715], ["requests.auth.HTTPBasicAuth", 0.15999848852404983], ["requests.Response", 0.07567898657631861], ["vendor.requests.cookies.RequestsCookieJar", 0.07479267008974913]], "result": [["list", 0.9193458897303294]]}}, {"docstring": {"func": "Deletes the given version of a model. Blocks until finished.", "long_descr": null, "ret": "If the version was deleted successfully, returns the operation.\nOtherwise raises an error."}, "fn_lc": [[380, 4], [409, 9]], "fn_var_ln": {"delete_request": [[399, 8], [399, 22]], "full_name": [[398, 8], [398, 17]], "get_request": [[401, 8], [401, 19]], "hook": [[397, 8], [397, 12]], "response": [[400, 8], [400, 16]]}, "fn_var_occur": {"delete_request": [["delete_request", "hook", "projects", "models", "versions", "delete", "name", "full_name"], ["response", "delete_request", "execute", "num_retries", "self", "num_retries"]], "full_name": [["full_name", "project_id", "model_name", "version_name"], ["delete_request", "hook", "projects", "models", "versions", "delete", "name", "full_name"]], "get_request": [["get_request", "hook", "projects", "operations", "get", "name", "response"], ["_poll_with_exponential_delay", "request", "get_request", "execute_num_retries", "self", "num_retries", "max_n", "is_done_func", "resp", "resp", "get", "False", "is_error_func", "resp", "resp", "get", "None", "None"]], "hook": [["hook", "self", "get_conn"], ["delete_request", "hook", "projects", "models", "versions", "delete", "name", "full_name"], ["get_request", "hook", "projects", "operations", "get", "name", "response"]], "response": [["response", "delete_request", "execute", "num_retries", "self", "num_retries"], ["get_request", "hook", "projects", "operations", "get", "name", "response"]]}, "name": "delete_version", "params": {"model_name": "builtins.str", "project_id": "builtins.str", "self": "", "version_name": "builtins.str"}, "params_descr": {"model_name": "The name of the Google Cloud ML Engine model that the version\nbelongs to. (templated)", "project_id": "The Google Cloud project name to which MLEngine\nmodel belongs.", "self": "", "version_name": "A name to use for the version being operated upon. (templated)"}, "params_occur": {"model_name": [["full_name", "project_id", "model_name", "version_name"]], "project_id": [["full_name", "project_id", "model_name", "version_name"]], "self": [["hook", "self", "get_conn"], ["response", "delete_request", "execute", "num_retries", "self", "num_retries"], ["_poll_with_exponential_delay", "request", "get_request", "execute_num_retries", "self", "num_retries", "max_n", "is_done_func", "resp", "resp", "get", "False", "is_error_func", "resp", "resp", "get", "None", "None"]], "version_name": [["full_name", "project_id", "model_name", "version_name"]]}, "params_p": {"args": [], "kwargs": [], "model_name": [["str", 0.8999660996529564], ["bool", 0.10003390034704383]], "project_id": [["str", 0.8999660996529564], ["bool", 0.10003390034704383]], "self": [], "version_name": [["str", 0.8999660996529564], ["bool", 0.10003390034704383]]}, "q_name": "MLEngineHook.delete_version", "ret_exprs": ["return _poll_with_exponential_delay( request=get_request, execute_num_retries=self.num_retries, max_n=9, is_done_func=lambda resp: resp.get(\"done\", False), is_error_func=lambda resp: resp.get(\"error\", None) is not None,)"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.10840622299601674], ["str", 0.10840622299601674]], "variables": {"delete_request": "", "full_name": "", "get_request": "", "hook": "", "response": ""}, "variables_p": {"delete_request": [["users.arxiv.users.domain.Session", 0.22711716541010235], ["Dict[str, Any]", 0.10762168851544109], ["Dict[str, str]", 0.09896219238758752], ["requests.sessions.Session", 0.09196174995981704]], "full_name": [["str", 0.8177168700916271], ["Set[str]", 0.10229665833113877], ["list", 0.07998647157723414]], "get_request": [["requests.structures.CaseInsensitiveDict[requests.compastr]", 0.118482743319692], ["Dict[str, Any]", 0.07981274937934764]], "hook": [["list", 0.19194890864838582], ["int", 0.10629672230463581], ["Dict[str, List[str]]", 0.1055877590089003], ["Set[str]", 0.10493551423941429], ["str", 0.10038604383512514], ["Dict[str, Any]", 0.09486436885726945], ["OrderedDict[str, Any]", 0.0924482399870067]], "response": [["aiohttp.web_response.Response", 0.11324335916213062], ["Dict[str, float]", 0.09282224294256583]]}}, {"docstring": {"func": "Create a Model. Blocks until finished.", "long_descr": null, "ret": "If the version was created successfully, returns the instance of Model.\nOtherwise raises an error."}, "fn_lc": [[412, 4], [458, 23]], "fn_var_ln": {"error_detail": [[443, 12], [443, 24]], "field_violation": [[450, 12], [450, 27]], "hook": [[427, 8], [427, 12]], "project": [[430, 8], [430, 15]], "request": [[434, 12], [434, 19]], "response": [[456, 12], [456, 20]]}, "fn_var_occur": {"error_detail": [["error_detail", "e", "error_details"], ["error_detail", "len", "error_detail"], ["field_violation", "error_detail"]], "field_violation": [["field_violation", "error_detail"], ["field_violation", "field_violation"]], "hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "models", "create", "parent", "project", "body", "model"]], "project": [["project", "project_id"], ["request", "hook", "projects", "models", "create", "parent", "project", "body", "model"]], "request": [["request", "hook", "projects", "models", "create", "parent", "project", "body", "model"], ["response", "request", "execute", "num_retries", "self", "num_retries"]], "response": [["response", "request", "execute", "num_retries", "self", "num_retries"], ["response", "self", "get_model", "model_name", "model", "project_id", "project_id"]]}, "name": "create_model", "params": {"model": "builtins.dict", "project_id": "builtins.str", "self": ""}, "params_descr": {"model": "A dictionary containing the information about the model.", "project_id": "The Google Cloud project name to which MLEngine model belongs. If set to None or\nmissing, the default project_id from the Google Cloud connection is used. (templated)", "self": ""}, "params_occur": {"model": [["model", "model"], ["self", "_append_label", "model"], ["request", "hook", "projects", "models", "create", "parent", "project", "body", "model"], ["response", "self", "get_model", "model_name", "model", "project_id", "project_id"]], "project_id": [["project", "project_id"], ["response", "self", "get_model", "model_name", "model", "project_id", "project_id"]], "self": [["hook", "self", "get_conn"], ["self", "_append_label", "model"], ["response", "request", "execute", "num_retries", "self", "num_retries"], ["response", "self", "get_model", "model_name", "model", "project_id", "project_id"]]}, "params_p": {"args": [], "kwargs": [], "model": [["str", 0.277703039589619], ["bool", 0.09546410373518194], ["tracim.models.auth.User", 0.09266461362955987], ["Union[str, int, None]", 0.08512786180912384]], "project_id": [["int", 0.5101244330569102], ["str", 0.29485656901016394], ["labm8.py.sqlutil.Session", 0.09782643428172451], ["bool", 0.09719256365120146]], "self": []}, "q_name": "MLEngineHook.create_model", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.28599896646813305], ["Dict[str, Any]", 0.17247315888751358], ["bool", 0.1611369906625385], ["List[str]", 0.11271572039257806], ["Optional[str]", 0.10057369171001385], ["Dict[str, str]", 0.08754245782396437], ["Tuple[allennlp.data.Instance, allennlp.common.util.JsonDict]", 0.07955901405525871]], "variables": {"error_detail": "", "field_violation": "", "hook": "", "project": "", "request": "", "response": ""}, "variables_p": {"error_detail": [["list", 0.3419396970259094], ["int", 0.2942874963137558], ["Set[str]", 0.1658937577567543], ["List[float]", 0.11084568146328429], ["List[str]", 0.08703336744029622]], "field_violation": [["set", 0.4999999998641855], ["int", 0.4999999998641855], ["Type[Iterator[Any]]", 1.358145877907077e-10], ["list", 1.0186094084303077e-10], ["List[int]", 3.3953646947676925e-11]], "hook": [["int", 0.4967101377301142], ["dict", 0.1960695593378099], ["Dict[str, Union[Any, Any, str]]", 0.1221447651633817]], "project": [["str", 0.6164869117783763], ["Set[str]", 0.10100245995138854], ["int", 0.10073642068206755]], "request": [["kobin.requests.Request", 0.20149562656069955]], "response": [["requests.Response", 0.19418913016928196], ["pyatv.suppormdns.Response", 0.11673765747443644], ["str", 0.10768160997824394], ["bytes", 0.10363653541871848], ["int", 0.09654522487278645]]}}, {"docstring": {"func": "Gets a Model. Blocks until finished.", "long_descr": null, "ret": "If the model exists, returns the instance of Model.\nOtherwise return None."}, "fn_lc": [[461, 4], [487, 17]], "fn_var_ln": {"full_model_name": [[479, 8], [479, 23]], "hook": [[476, 8], [476, 12]], "request": [[480, 8], [480, 15]]}, "fn_var_occur": {"full_model_name": [["full_model_name", "project_id", "model_name"], ["request", "hook", "projects", "models", "get", "name", "full_model_name"]], "hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "models", "get", "name", "full_model_name"]], "request": [["request", "hook", "projects", "models", "get", "name", "full_model_name"], ["request", "execute", "num_retries", "self", "num_retries"]]}, "name": "get_model", "params": {"model_name": "builtins.str", "project_id": "builtins.str", "self": ""}, "params_descr": {"model_name": "The name of the model.", "project_id": "The Google Cloud project name to which MLEngine model belongs. If set to None\nor missing, the default project_id from the Google Cloud connection is used. (templated)", "self": ""}, "params_occur": {"model_name": [["full_model_name", "project_id", "model_name"]], "project_id": [["full_model_name", "project_id", "model_name"]], "self": [["hook", "self", "get_conn"], ["request", "execute", "num_retries", "self", "num_retries"], ["self", "log", "error", "e"]]}, "params_p": {"args": [], "kwargs": [], "model_name": [["str", 0.7814387495818125], ["List[str]", 0.09805660337882528]], "project_id": [["str", 0.7814387495818125], ["List[str]", 0.09805660337882528]], "self": []}, "q_name": "MLEngineHook.get_model", "ret_exprs": ["return request.execute(num_retries=self.num_retries)", "return None"], "ret_type": "dict | None", "ret_type_p": [["str", 0.2930384633489618], ["int", 0.22699927819388496], ["Optional[str]", 0.1874674674950651]], "variables": {"full_model_name": "", "hook": "", "request": ""}, "variables_p": {"full_model_name": [["str", 0.5531082371908856], ["Dict[str, str]", 0.16675988673231168], ["int", 0.09732863824557243], ["bool", 0.08924467506139312]], "hook": [["Dict[str, dict]", 0.6810754220376107], ["KeysView[str]", 0.1117583427074322]], "request": [["Dict[str, Any]", 0.3837916186596839], ["requests.sessions.Session", 0.12115109097528547], ["aiohttp.ClientSession", 0.11160612623805223], ["users.arxiv.users.domain.Session", 0.10313257329858656], ["Dict[str, str]", 0.0966266055977021], ["dict", 0.09645341915693706]]}}, {"docstring": {"func": "Delete a Model. Blocks until finished.", "long_descr": null, "ret": null}, "fn_lc": [[490, 4], [521, 17]], "fn_var_ln": {"hook": [[507, 8], [507, 12]], "model_path": [[511, 8], [511, 18]], "request": [[514, 8], [514, 15]]}, "fn_var_occur": {"hook": [["hook", "self", "get_conn"], ["request", "hook", "projects", "models", "delete", "name", "model_path"]], "model_path": [["model_path", "project_id", "model_name"], ["request", "hook", "projects", "models", "delete", "name", "model_path"]], "request": [["request", "hook", "projects", "models", "delete", "name", "model_path"], ["request", "execute", "num_retries", "self", "num_retries"]]}, "name": "delete_model", "params": {"delete_contents": "builtins.bool", "model_name": "builtins.str", "project_id": "builtins.str", "self": ""}, "params_descr": {"delete_contents": "Whether to force the deletion even if the models is not empty.\nWill delete all version (if any) in the dataset if set to True.\nThe default value is False.", "model_name": "The name of the model.", "project_id": "The Google Cloud project name to which MLEngine model belongs. If set to None\nor missing, the default project_id from the Google Cloud connection is used. (templated)", "self": ""}, "params_occur": {"delete_contents": [], "model_name": [["model_path", "project_id", "model_name"], ["self", "_delete_all_versions", "model_name", "project_id"]], "project_id": [["model_path", "project_id", "model_name"], ["self", "_delete_all_versions", "model_name", "project_id"]], "self": [["hook", "self", "get_conn"], ["self", "_delete_all_versions", "model_name", "project_id"], ["request", "execute", "num_retries", "self", "num_retries"], ["self", "log", "error", "e"]]}, "params_p": {"args": [], "delete_contents": [["str", 0.6164544171158273], ["bool", 0.19923031962155835], ["float", 0.09215763163130722]], "kwargs": [], "model_name": [["str", 0.9106325095338479], ["Optional[str]", 0.08936749046615212]], "project_id": [["str", 0.9106325095338479], ["Optional[str]", 0.08936749046615212]], "self": []}, "q_name": "MLEngineHook.delete_model", "ret_exprs": ["return"], "ret_type": "None", "ret_type_p": [["str", 0.1923315798151885], ["Union[tuple, list]", 0.10319164729651255], ["Dict[str, Any]", 0.08978363735398441]], "variables": {"hook": "", "model_path": "", "request": ""}, "variables_p": {"hook": [["dict", 0.19698054413472535], ["Dict[str, Any]", 0.10105914935078117], ["Dict[str, Optional[str]]", 0.0861286128040637]], "model_path": [["str", 0.9043037241737235]], "request": [["usbmon.capture_session.Session", 0.10103006077151036]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[523, 4], [533, 104]], "fn_var_ln": {"_": [[532, 15], [532, 16]], "default_versions": [[530, 8], [530, 24]], "non_default_versions": [[526, 8], [526, 28]], "version_name": [[532, 18], [532, 30]], "versions": [[524, 8], [524, 16]]}, "fn_var_occur": {"_": [["_", "_", "version_name", "version", "rpartition"], ["_", "_", "version_name", "version", "rpartition"]], "default_versions": [["default_versions", "version", "version", "versions", "version", "get", "False"]], "non_default_versions": [["non_default_versions", "version", "version", "versions", "version", "get", "False"]], "version_name": [["_", "_", "version_name", "version", "rpartition"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"], ["_", "_", "version_name", "version", "rpartition"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"]], "versions": [["versions", "self", "list_versions", "project_id", "project_id", "model_name", "model_name"], ["non_default_versions", "version", "version", "versions", "version", "get", "False"], ["default_versions", "version", "version", "versions", "version", "get", "False"]]}, "name": "_delete_all_versions", "params": {"model_name": "builtins.str", "project_id": "builtins.str", "self": ""}, "params_descr": {"model_name": "", "project_id": "", "self": ""}, "params_occur": {"model_name": [["versions", "self", "list_versions", "project_id", "project_id", "model_name", "model_name"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"]], "project_id": [["versions", "self", "list_versions", "project_id", "project_id", "model_name", "model_name"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"]], "self": [["versions", "self", "list_versions", "project_id", "project_id", "model_name", "model_name"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"], ["self", "delete_version", "project_id", "project_id", "model_name", "model_name", "version_name", "version_name"]]}, "params_p": {"args": [], "kwargs": [], "model_name": [["str", 1.0]], "project_id": [["str", 1.0]], "self": []}, "q_name": "MLEngineHook._delete_all_versions", "ret_exprs": [], "ret_type": "", "variables": {"_": "", "default_versions": "", "non_default_versions": "", "version_name": "", "versions": ""}, "variables_p": {"_": [["str", 0.46763975873449787], ["set", 0.15784774167155663], ["int", 0.10021491791015408], ["Final", 0.09249991437007082]], "default_versions": [["Dict[str, str]", 0.2657588314081473], ["Dict[Any, float]", 0.21179464419119984], ["Pattern[str]", 0.12489531115209568], ["str", 0.09949444508382943], ["Dict[str, List[int]]", 0.08827939500580176], ["Dict[str, Tuple[Any, str]]", 0.08365724194505872]], "non_default_versions": [["str", 0.28984844806744203], ["DefaultDict[str, int]", 0.1889621406040325], ["Dict[Tuple[str, str], Dict[str, int]]", 0.11430657673388896], ["Dict[Any, bool]", 0.11357643066390284], ["Dict[str, int]", 0.10363474075220774], ["int", 0.09664521795890255], ["dict", 0.09302644521962349]], "version_name": [["str", 0.9114939734390872], ["Optional[str]", 0.08850602656091291]], "versions": [["str", 0.523573442110234], ["Dict[str, str]", 0.17868106443587722], ["dict", 0.10226591927556135], ["Dict[str, Tuple[str, Any]]", 0.09863997228386887], ["Set[str]", 0.09683960189445831]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[535, 4], [537, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_append_label", "params": {"model": "builtins.dict", "self": ""}, "params_descr": {"model": "", "self": ""}, "params_occur": {"model": [["model", "model", "get"], ["model", "_AIRFLOW_VERSION"]], "self": []}, "params_p": {"args": [], "kwargs": [], "model": [["str", 0.2033370869804447], ["int", 0.08508598436203836], ["float", 0.08508598436203836]], "self": []}, "q_name": "MLEngineHook._append_label", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "MLEngineHook", "q_name": "MLEngineHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[540, 0], [605, 29]], "cls_var_ln": {"scopes": [[544, 4], [544, 10]], "sync_hook_class": [[543, 4], [543, 19]]}, "cls_var_occur": {"scopes": [], "sync_hook_class": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[546, 4], [554, 100]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_fileds", "params": {"job_id": "builtins.str", "project_id": "str | None", "self": ""}, "params_descr": {"job_id": "", "project_id": "", "self": ""}, "params_occur": {"job_id": [], "project_id": [], "self": []}, "params_p": {"args": [], "job_id": [["str", 0.2967215489192353], ["int", 0.18474863887971216], ["bool", 0.1505154289133986], ["list", 0.08726023988757553], ["Dict[str, Any]", 0.08313285331944219]], "kwargs": [], "project_id": [["str", 0.2967215489192353], ["int", 0.18474863887971216], ["bool", 0.1505154289133986], ["list", 0.08726023988757553], ["Dict[str, Any]", 0.08313285331944219]], "self": []}, "q_name": "MLEngineAsyncHook._check_fileds", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[556, 4], [567, 18]], "fn_var_ln": {"headers": [[559, 12], [559, 19]], "job": [[563, 16], [563, 19]], "session_aio": [[558, 12], [558, 23]]}, "fn_var_occur": {"headers": [["headers", "token", "get"], ["job", "session_aio", "get", "url", "url", "headers", "headers"]], "job": [["job", "session_aio", "get", "url", "url", "headers", "headers"]], "session_aio": [["session_aio", "AioSession", "session"], ["job", "session_aio", "get", "url", "url", "headers", "headers"]]}, "name": "_get_link", "params": {"self": "", "session": "requests.Session", "url": "builtins.str"}, "params_descr": {"self": "", "session": "", "url": ""}, "params_occur": {"self": [["Token", "scopes", "self", "scopes", "token"]], "session": [["session_aio", "AioSession", "session"]], "url": [["job", "session_aio", "get", "url", "url", "headers", "headers"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.Session", 0.11278514789367036], ["str", 0.08057609168768526]], "url": [["str", 0.3914670626080886], ["Optional[dict]", 0.18992044400595207], ["aiohttp.ClientSession", 0.18500899529058426], ["Dict[str, Any]", 0.11680174904768749]]}, "q_name": "MLEngineAsyncHook._get_link", "ret_exprs": ["return job"], "ret_type": "", "ret_type_p": [["Optional[str]", 6.34957706064358e-10], ["List[str]", 2.1256555863787188e-10]], "variables": {"headers": "", "job": "", "session_aio": ""}, "variables_p": {"headers": [["Dict[str, str]", 0.42992071839834345], ["str", 0.3891347885283401]], "job": [["str", 0.4177768806628108], ["Dict[str, Union[Any, Any, Any]]", 0.1759888788598078], ["Dict[str, str]", 0.17419035401497818], ["Dict[str, Union[Any, Any]]", 0.12522831427183528], ["int", 0.10681557219056789]], "session_aio": [["Dict[str, Any]", 0.18340579890611322], ["aiohttp.ClientSession", 0.14241624468481012], ["sqlalchemy.orm.session.Session", 0.10982371299771748], ["usbmon.capture_session.Session", 0.10146108619709521], ["users.arxiv.users.domain.Session", 0.09899733252751619], ["Dict[str, str]", 0.08980851783667503], ["requests.sessions.Session", 0.08969637835073895]]}}, {"docstring": {"func": "Get the specified job resource by job ID and project ID.", "long_descr": null, "ret": null}, "fn_lc": [[569, 4], [574, 61]], "fn_var_ln": {"url": [[573, 8], [573, 11]]}, "fn_var_occur": {"url": [["url", "project_id", "job_id"], ["self", "_get_link", "url", "url", "session", "session"]]}, "name": "get_job", "params": {"job_id": "builtins.str", "project_id": "str | None", "self": "", "session": "requests.Session"}, "params_descr": {"job_id": "", "project_id": "", "self": "", "session": ""}, "params_occur": {"job_id": [["self", "_check_fileds", "project_id", "project_id", "job_id", "job_id"], ["url", "project_id", "job_id"]], "project_id": [["self", "_check_fileds", "project_id", "project_id", "job_id", "job_id"], ["url", "project_id", "job_id"]], "self": [["self", "_check_fileds", "project_id", "project_id", "job_id", "job_id"], ["self", "_get_link", "url", "url", "session", "session"]], "session": [["self", "_get_link", "url", "url", "session", "session"]]}, "params_p": {"args": [], "job_id": [["str", 0.9053833331376876], ["Optional[List[str]]", 0.09461666686231222]], "kwargs": [], "project_id": [["str", 0.9053833331376876], ["Optional[List[str]]", 0.09461666686231222]], "self": [], "session": [["str", 0.7050951431138643], ["Optional[str]", 0.29490485688613566]]}, "q_name": "MLEngineAsyncHook.get_job", "ret_exprs": ["return await self._get_link(url=url, session=session)"], "ret_type": "", "ret_type_p": [["str", 0.18278201653063925], ["int", 0.12656845046953466], ["bool", 0.10281267457874811], ["Dict[str, str]", 0.10090692645676842], ["tuple", 0.09104095268957763], ["Dict[str, Any]", 0.08752138202636928], ["List[str]", 0.08742187116055711]], "variables": {"url": ""}, "variables_p": {"url": [["str", 0.48965159071639536], ["List[Union[Any, Any, Any, Any]]", 0.09690599480128752], ["Dict[str, Set[str]]", 0.08542467919006586], ["Dict[str, Tuple[Any, Any]]", 0.07915463729342125], ["Dict[str, List[str]]", 0.07837852122540287]]}}, {"docstring": {"func": "Polls for job status asynchronously using gcloud-aio.", "long_descr": "Note that an OSError is raised when Job results are still pending.\nException means that Job finished with errors", "ret": null}, "fn_lc": [[576, 4], [605, 29]], "fn_var_ln": {"job": [[593, 16], [593, 19]], "job_status": [[604, 16], [604, 26]]}, "fn_var_occur": {"job": [["job", "self", "get_job", "project_id", "project_id", "job_id", "job_id", "session", "session"], ["job", "job", "json", "content_type", "None"], ["self", "log", "info", "job"]], "job_status": [["job_status", "str", "e"]]}, "name": "get_job_status", "params": {"job_id": "builtins.str", "project_id": "str | None", "self": ""}, "params_descr": {"job_id": "", "project_id": "", "self": ""}, "params_occur": {"job_id": [["self", "_check_fileds", "project_id", "project_id", "job_id", "job_id"], ["job", "self", "get_job", "project_id", "project_id", "job_id", "job_id", "session", "session"]], "project_id": [["self", "_check_fileds", "project_id", "project_id", "job_id", "job_id"], ["job", "self", "get_job", "project_id", "project_id", "job_id", "job_id", "session", "session"]], "self": [["self", "_check_fileds", "project_id", "project_id", "job_id", "job_id"], ["job", "self", "get_job", "project_id", "project_id", "job_id", "job_id", "session", "session"], ["self", "log", "info", "job"], ["self", "log", "info"]]}, "params_p": {"args": [], "job_id": [["str", 0.9999999999999996]], "kwargs": [], "project_id": [["str", 0.9999999999999996]], "self": []}, "q_name": "MLEngineAsyncHook.get_job_status", "ret_exprs": ["return job_status"], "ret_type": "str | None", "ret_type_p": [["str", 0.3150913768748966], ["int", 0.1788710149433519], ["List[Dict[str, Any]]", 0.12396749849640276]], "variables": {"job": "", "job_status": ""}, "variables_p": {"job": [["str", 0.3842993095943155], ["Optional[str]", 0.11640757701425619], ["int", 0.11477280523500585]], "job_status": [["int", 0.17249898369504282], ["str", 0.1679832732949944], ["Type[str]", 0.14323032467987087], ["Pattern[str]", 0.13986759039042934], ["Dict[str, Any]", 0.10618455730773015], ["list", 0.08875816206630188], ["Dict[int, str]", 0.08138786192237686]]}}], "name": "MLEngineAsyncHook", "q_name": "MLEngineAsyncHook", "variables": {"scopes": "", "sync_hook_class": ""}, "variables_p": {"scopes": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "sync_hook_class": [["bool", 0.19999999999999998], ["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["List[str]", 0.09999999999999999], ["Set[str]", 0.09999999999999999]]}}], "funcs": [{"docstring": {"func": "Execute request with exponential delay.", "long_descr": "This method is intended to handle and retry in case of api-specific errors,\nsuch as 429 \"Too Many Requests\", unlike the `request.execute` which handles\nlower level errors like `ConnectionError`/`socket.timeout`/`ssl.SSLError`.", "ret": "response"}, "fn_lc": [[42, 0], [76, 83]], "fn_var_ln": {"response": [[61, 12], [61, 20]]}, "fn_var_occur": {"response": [["response", "request", "execute", "num_retries", "execute_num_retries"], ["is_error_func", "response"], ["ValueError", "response"], ["is_done_func", "response"], ["log", "info", "response"]]}, "name": "_poll_with_exponential_delay", "params": {"execute_num_retries": "", "is_done_func": "", "is_error_func": "", "max_n": "", "request": ""}, "params_descr": {"execute_num_retries": "num_retries for `request.execute` method.", "is_done_func": "callable to determine if operation is done.", "is_error_func": "callable to determine if operation is failed.", "max_n": "number of times to retry request in this method.", "request": "request to be executed."}, "params_occur": {"execute_num_retries": [["response", "request", "execute", "num_retries", "execute_num_retries"]], "is_done_func": [["is_done_func", "response"]], "is_error_func": [["is_error_func", "response"]], "max_n": [["range", "max_n"], ["ValueError", "max_n"]], "request": [["response", "request", "execute", "num_retries", "execute_num_retries"]]}, "params_p": {"args": [], "execute_num_retries": [["Optional[list]", 0.11530028744543185], ["Dict[str, str]", 0.0974687041455367], ["Set[int]", 0.09689375022767638], ["int", 0.09657769719292579]], "is_done_func": [["Optional[str]", 0.4209243033542713], ["Optional[List[Any]]", 0.16802741464705412], ["Optional[Callable[[], bool]]", 0.08689774118987352], ["Optional[Dict[str, Any]]", 0.0861764498944966], ["int", 0.08037834633724908], ["Optional[Mapping]", 0.07864557884551764]], "is_error_func": [["Optional[str]", 0.4209243033542713], ["Optional[List[Any]]", 0.16802741464705412], ["Optional[Callable[[], bool]]", 0.08689774118987352], ["Optional[Dict[str, Any]]", 0.0861764498944966], ["int", 0.08037834633724908], ["Optional[Mapping]", 0.07864557884551764]], "kwargs": [], "max_n": [["int", 0.400427062162114], ["Optional[int]", 0.18921670194928814], ["bytes", 0.11266952657983258], ["bool", 0.1112691791380699]], "request": [["Optional[list]", 0.11530028744543185], ["Dict[str, str]", 0.0974687041455367], ["Set[int]", 0.09689375022767638], ["int", 0.09657769719292579]]}, "q_name": "_poll_with_exponential_delay", "ret_exprs": ["return response"], "ret_type": "httplib2.Response", "ret_type_p": [["bytes", 0.3221031681578195], ["dict", 0.20773024809892454], ["flask.Response", 0.1914421181092092]], "variables": {"response": ""}, "variables_p": {"response": [["requests.auth.HTTPDigestAuth", 0.42622860153718084], ["Response", 0.2273922431375914], ["requests.models.Response", 0.16011240566172968]]}}], "imports": ["__future__", "annotations", "logging", "random", "time", "typing", "Callable", "aiohttp", "ClientSession", "gcloud", "aio", "auth", "AioSession", "Token", "googleapiclient", "discovery", "Resource", "build", "googleapiclient", "errors", "HttpError", "httplib2", "Response", "requests", "Session", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "common", "hooks", "base_google", "GoogleBaseAsyncHook", "GoogleBaseHook", "airflow", "version", "version", "airflow_version"], "mod_var_ln": {"_AIRFLOW_VERSION": [[39, 0], [39, 16]], "log": [[37, 0], [37, 3]]}, "mod_var_occur": {"_AIRFLOW_VERSION": [["model", "_AIRFLOW_VERSION"]], "log": [["log", "info", "response"], ["log", "info", "format", "e"], ["self", "log", "info"], ["self", "log", "error", "job_id", "existing_job"], ["self", "log", "info", "job_id"], ["self", "log", "error", "e"], ["self", "log", "error", "job_id"], ["self", "log", "info", "job_id"], ["self", "log", "error", "e"], ["self", "log", "error", "e"], ["self", "log", "info", "job_id"], ["self", "log", "info", "response"], ["self", "log", "error", "e"], ["self", "log", "error", "e"], ["self", "log", "error", "e"], ["self", "log", "info", "job"], ["self", "log", "info"]]}, "no_types_annot": {"D": 57, "I": 0, "U": 73}, "session_id": "l_ILBvVIDu9McRn12ubfoPgr7YSsKMHRpMTCtsmd6D8", "set": null, "tc": [false, null], "type_annot_cove": 0.44, "typed_seq": "", "untyped_seq": "", "variables": {"_AIRFLOW_VERSION": "", "log": ""}, "variables_p": {"_AIRFLOW_VERSION": [["Tuple[int]", 0.49999999999999994], ["int", 0.3], ["PyLibs.aiohttp.http_writer.HttpVersion", 0.09999999999999999], ["str", 0.09999999999999999]], "log": [["logging.Logger", 1.0]]}}}