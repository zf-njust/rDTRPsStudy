{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [406, 30]], "cls_var_ln": {"conn_name_attr": [[63, 4], [63, 18]], "conn_type": [[65, 4], [65, 13]], "default_conn_name": [[64, 4], [64, 21]], "hook_name": [[66, 4], [66, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [77, 30]], "fn_var_ln": {"conn_id": [[75, 8], [75, 20]], "session": [[77, 8], [77, 20]], "session_id": [[76, 8], [76, 23]]}, "fn_var_occur": {"conn_id": [["self", "conn_id", "salesforce_conn_id"]], "session": [["self", "session", "session"]], "session_id": [["self", "session_id", "session_id"]]}, "name": "__init__", "params": {"salesforce_conn_id": "builtins.str", "self": "", "session": "Session | None", "session_id": "str | None"}, "params_descr": {"salesforce_conn_id": "", "self": "", "session": "", "session_id": ""}, "params_occur": {"salesforce_conn_id": [["self", "conn_id", "salesforce_conn_id"]], "self": [["self", "conn_id", "salesforce_conn_id"], ["self", "session_id", "session_id"], ["self", "session", "session"]], "session": [["self", "session", "session"]], "session_id": [["self", "session_id", "session_id"]]}, "params_p": {"args": [], "kwargs": [], "salesforce_conn_id": [["str", 0.2400891523541212], ["Set[str]", 0.23753878956540797], ["dict", 0.2047454649222394], ["Dict[str, Any]", 0.07561741248925685], ["int", 0.07340023007654016]], "self": [], "session": [["str", 0.16190469046035416], ["Optional[bool]", 0.13265608764066786], ["Optional[str]", 0.13265608764066786], ["int", 0.0846978254410961], ["bool", 0.0774262279444067]], "session_id": [["str", 0.4029606010224341], ["int", 0.2779004054856209], ["Optional[int]", 0.09167891205333945]]}, "q_name": "SalesforceHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"conn_id": "", "session": "", "session_id": ""}, "variables_p": {"conn_id": [["int", 0.7764564279050963], ["str", 0.2235435720949038]], "session": [["Optional[str]", 0.20771837579185262], ["sqlalchemy.orm.session.Session", 0.11235204429842463]], "session_id": [["int", 0.5153325244709026], ["str", 0.38585768353961636]]}}, {"docstring": {"func": "Get field from extra, first checking short name, then for backcompat we check for prefixed name.", "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [90, 48]], "fn_var_ln": {"backcompat_prefix": [[81, 8], [81, 25]], "prefixed_name": [[89, 8], [89, 21]]}, "fn_var_occur": {"backcompat_prefix": [["ValueError", "field_name", "backcompat_prefix"], ["prefixed_name", "backcompat_prefix", "field_name"]], "prefixed_name": [["prefixed_name", "backcompat_prefix", "field_name"], ["extras", "get", "prefixed_name", "None"]]}, "name": "_get_field", "params": {"extras": "builtins.dict", "field_name": "builtins.str", "self": ""}, "params_descr": {"extras": "", "field_name": "", "self": ""}, "params_occur": {"extras": [["field_name", "extras"], ["extras", "field_name", "None"], ["extras", "get", "prefixed_name", "None"]], "field_name": [["field_name", "startswith"], ["ValueError", "field_name", "backcompat_prefix"], ["field_name", "extras"], ["extras", "field_name", "None"], ["prefixed_name", "backcompat_prefix", "field_name"]], "self": []}, "params_p": {"args": [], "extras": [["str", 0.20801647810907567], ["Optional[str]", 0.20801647810907567]], "field_name": [["str", 0.8077848861074525], ["Dict[str, str]", 0.10857652145943386], ["pandas.DataFrame", 0.08363859243311379]], "kwargs": [], "self": []}, "q_name": "SalesforceHook._get_field", "ret_exprs": ["return extras[field_name] or None", "return extras.get(prefixed_name) or None"], "ret_type": "", "ret_type_p": [["str", 0.28344023667206636], ["dict", 0.13100531377895994], ["List[str]", 0.13100531377895994], ["bool", 0.09077444893733463], ["Mapping[str, Any]", 0.08627148430874293]], "variables": {"backcompat_prefix": "", "prefixed_name": ""}, "variables_p": {"backcompat_prefix": [["str", 0.5641749104024144], ["Union[Literal, str]", 0.2905500597317236], ["bool", 0.1452750298658618]], "prefixed_name": [["str", 0.33965903457329055], ["Dict[str, str]", 0.2312534411004658], ["List[str]", 0.09513116847276748], ["Tuple[Literal, Literal]", 0.08747998178683225], ["Dict[Any, str]", 0.08248071573591241], ["Dict[int, str]", 0.08195660625662192]]}}, {"docstring": {"func": "Returns connection widgets to add to connection form.", "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [113, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection_form_widgets", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SalesforceHook.get_connection_form_widgets", "ret_exprs": ["return { \"security_token\": PasswordField(lazy_gettext(\"Security Token\"), widget=BS3PasswordFieldWidget()), \"domain\": StringField(lazy_gettext(\"Domain\"), widget=BS3TextFieldWidget()), \"consumer_key\": StringField(lazy_gettext(\"Consumer Key\"), widget=BS3TextFieldWidget()), \"private_key_file_path\": PasswordField( lazy_gettext(\"Private Key File Path\"), widget=BS3PasswordFieldWidget() ), \"private_key\": PasswordField(lazy_gettext(\"Private Key\"), widget=BS3PasswordFieldWidget()), \"organization_id\": StringField(lazy_gettext(\"Organization ID\"), widget=BS3TextFieldWidget()), \"instance\": StringField(lazy_gettext(\"Instance\"), widget=BS3TextFieldWidget()), \"instance_url\": StringField(lazy_gettext(\"Instance URL\"), widget=BS3TextFieldWidget()), \"proxies\": StringField(lazy_gettext(\"Proxies\"), widget=BS3TextFieldWidget()), \"version\": StringField(lazy_gettext(\"API Version\"), widget=BS3TextFieldWidget()), \"client_id\": StringField(lazy_gettext(\"Client ID\"), widget=BS3TextFieldWidget()),}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["bool", 0.27279636410128866], ["bytes", 0.11023086200389114], ["int", 0.09983125484705964], ["Dict[str, int]", 0.09763729882826645]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns custom field behaviour.", "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [123, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_ui_field_behaviour", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SalesforceHook.get_ui_field_behaviour", "ret_exprs": ["return { \"hidden_fields\": [\"schema\", \"port\", \"extra\", \"host\"], \"relabeling\": { \"login\": \"Username\", },}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.26840508666723273], ["bool", 0.06666744759841305]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns a Salesforce instance. (cached).", "long_descr": null, "ret": null}, "fn_lc": [[126, 4], [152, 19]], "fn_var_ln": {"conn": [[135, 8], [135, 12]], "connection": [[128, 8], [128, 18]], "extras": [[129, 8], [129, 14]]}, "fn_var_occur": {"conn": [["conn", "Salesforce", "username", "connection", "login", "password", "connection", "password", "security_token", "self", "_get_field", "extras", "None", "domain", "self", "_get_field", "extras", "None", "session_id", "self", "session_id", "instance", "self", "_get_field", "extras", "None", "instance_url", "self", "_get_field", "extras", "None", "organizationId", "self", "_get_field", "extras", "None", "version", "self", "_get_field", "extras", "api", "DEFAULT_API_VERSION", "proxies", "self", "_get_field", "extras", "None", "session", "self", "session", "client_id", "self", "_get_field", "extras", "None", "consumer_key", "self", "_get_field", "extras", "None", "privatekey_file", "self", "_get_field", "extras", "None", "privatekey", "self", "_get_field", "extras", "None"]], "connection": [["connection", "self", "get_connection", "self", "conn_id"], ["extras", "connection", "extra_dejson"], ["conn", "Salesforce", "username", "connection", "login", "password", "connection", "password", "security_token", "self", "_get_field", "extras", "None", "domain", "self", "_get_field", "extras", "None", "session_id", "self", "session_id", "instance", "self", "_get_field", "extras", "None", "instance_url", "self", "_get_field", "extras", "None", "organizationId", "self", "_get_field", "extras", "None", "version", "self", "_get_field", "extras", "api", "DEFAULT_API_VERSION", "proxies", "self", "_get_field", "extras", "None", "session", "self", "session", "client_id", "self", "_get_field", "extras", "None", "consumer_key", "self", "_get_field", "extras", "None", "privatekey_file", "self", "_get_field", "extras", "None", "privatekey", "self", "_get_field", "extras", "None"]], "extras": [["extras", "connection", "extra_dejson"], ["conn", "Salesforce", "username", "connection", "login", "password", "connection", "password", "security_token", "self", "_get_field", "extras", "None", "domain", "self", "_get_field", "extras", "None", "session_id", "self", "session_id", "instance", "self", "_get_field", "extras", "None", "instance_url", "self", "_get_field", "extras", "None", "organizationId", "self", "_get_field", "extras", "None", "version", "self", "_get_field", "extras", "api", "DEFAULT_API_VERSION", "proxies", "self", "_get_field", "extras", "None", "session", "self", "session", "client_id", "self", "_get_field", "extras", "None", "consumer_key", "self", "_get_field", "extras", "None", "privatekey_file", "self", "_get_field", "extras", "None", "privatekey", "self", "_get_field", "extras", "None"]]}, "name": "conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["connection", "self", "get_connection", "self", "conn_id"], ["conn", "Salesforce", "username", "connection", "login", "password", "connection", "password", "security_token", "self", "_get_field", "extras", "None", "domain", "self", "_get_field", "extras", "None", "session_id", "self", "session_id", "instance", "self", "_get_field", "extras", "None", "instance_url", "self", "_get_field", "extras", "None", "organizationId", "self", "_get_field", "extras", "None", "version", "self", "_get_field", "extras", "api", "DEFAULT_API_VERSION", "proxies", "self", "_get_field", "extras", "None", "session", "self", "session", "client_id", "self", "_get_field", "extras", "None", "consumer_key", "self", "_get_field", "extras", "None", "privatekey_file", "self", "_get_field", "extras", "None", "privatekey", "self", "_get_field", "extras", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SalesforceHook.conn", "ret_exprs": ["return conn"], "ret_type": "simple_salesforce.api.Salesforce", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"conn": "", "connection": "", "extras": ""}, "variables_p": {"conn": [["grpy.repo.base.Connection", 0.09565411872006102]], "connection": [["dict", 0.12990613497152984], ["Dict[str, Any]", 0.11351488288066632], ["str", 0.08362408061120184]], "extras": [["Iterator[Any]", 0.10833166668169723]]}}, {"docstring": {"func": "Returns a Salesforce instance. (cached).", "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [156, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SalesforceHook.get_conn", "ret_exprs": ["return self.conn"], "ret_type": "simple_salesforce.api.Salesforce", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Make a query to Salesforce.", "long_descr": null, "ret": "The query result."}, "fn_lc": [[158, 4], [177, 28]], "fn_var_ln": {"conn": [[167, 8], [167, 12]], "query_params": [[170, 8], [170, 20]], "query_results": [[171, 8], [171, 21]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["query_results", "conn", "query_all", "query", "include_deleted", "include_deleted", "query_params"]], "query_params": [["query_params", "query_params"], ["query_results", "conn", "query_all", "query", "include_deleted", "include_deleted", "query_params"]], "query_results": [["query_results", "conn", "query_all", "query", "include_deleted", "include_deleted", "query_params"], ["self", "log", "info", "query_results", "query_results"]]}, "name": "make_query", "params": {"include_deleted": "builtins.bool", "query": "builtins.str", "query_params": "dict | None", "self": ""}, "params_descr": {"include_deleted": "True if the query should include deleted records.", "query": "The query to make to Salesforce.", "query_params": "Additional optional arguments", "self": ""}, "params_occur": {"include_deleted": [["query_results", "conn", "query_all", "query", "include_deleted", "include_deleted", "query_params"]], "query": [["query_results", "conn", "query_all", "query", "include_deleted", "include_deleted", "query_params"]], "query_params": [["query_params", "query_params"], ["query_results", "conn", "query_all", "query", "include_deleted", "include_deleted", "query_params"]], "self": [["conn", "self", "get_conn"], ["self", "log", "info"], ["self", "log", "info", "query_results", "query_results"]]}, "params_p": {"args": [], "include_deleted": [["str", 0.09737243652170921], ["Iterable[Tuple[Any, Any]]", 0.0939701087110054], ["list", 0.08734479003214309]], "kwargs": [], "query": [["str", 0.09737243652170921], ["Iterable[Tuple[Any, Any]]", 0.0939701087110054], ["list", 0.08734479003214309]], "query_params": [["str", 0.2586855457072796], ["pandas.DataFrame", 0.09541808126075624], ["int", 0.0822631704219616]], "self": []}, "q_name": "SalesforceHook.make_query", "ret_exprs": ["return query_results"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, bool]", 0.1825889061978007], ["int", 0.11146845584174049], ["Dict[str, float]", 0.09607126189450314], ["str", 0.09184286554728364]], "variables": {"conn": "", "query_params": "", "query_results": ""}, "variables_p": {"conn": [["set", 0.26693319816891675], ["List[float]", 0.12119620977033412], ["DefaultDict[Any, Set[Any]]", 0.11017348708952061], ["int", 0.10642179178943727], ["Callable(pow)[..., Any][[[Named(base, int), Named(exp, int), Named(mod, None, default)], Any][[Named(base, int), Named(exp, int), Named(mod, int)], int][[Named(base, float), Named(exp, float), Named(mod, None, default)], float][[Named(base, _SupportsPow2[Variable[_E](contravariant), Variable[_T_co](covariant)]), Named(exp, Variable[_E](contravariant))], Variable[_T_co](covariant)][Any, Any]]", 0.0971749452978795], ["Type[Tuple[int, int]]", 0.08569044516188477]], "query_params": [["Pattern[str]", 0.6215974100658309], ["frozenset[Any]", 0.08937831554836728]], "query_results": [["list", 0.43290181132098093], ["set", 0.18076481348262116], ["Set[frozenset[Any]]", 0.08954540007377905]]}}, {"docstring": {"func": "Get the description of an object from Salesforce.", "long_descr": "This description is the object's schema and\nsome extra metadata that Salesforce stores for each object.", "ret": "the description of the Salesforce object."}, "fn_lc": [[179, 4], [191, 47]], "fn_var_ln": {"conn": [[189, 8], [189, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "__getattr__", "obj", "describe"]]}, "name": "describe_object", "params": {"obj": "builtins.str", "self": ""}, "params_descr": {"obj": "The name of the Salesforce object that we are getting a description of.", "self": ""}, "params_occur": {"obj": [["conn", "__getattr__", "obj", "describe"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["Optional[str]", 0.9999999996653863], ["str", 7.316395970571082e-11], ["BaseException", 3.768428240950734e-11], ["Callable", 3.6199199765024986e-11]], "self": []}, "q_name": "SalesforceHook.describe_object", "ret_exprs": ["return conn.__getattr__(obj).describe()"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"conn": ""}, "variables_p": {"conn": [["List[Tuple[int, int, int, int, int, int]]", 0.1998349346531841], ["int", 0.1998349346531841]]}}, {"docstring": {"func": "Get a list of all available fields for an object.", "long_descr": null, "ret": "the names of the fields."}, "fn_lc": [[193, 4], [202, 69]], "fn_var_ln": {"obj_description": [[200, 8], [200, 23]]}, "fn_var_occur": {"obj_description": [["obj_description", "self", "describe_object", "obj"], ["field", "field", "obj_description"]]}, "name": "get_available_fields", "params": {"obj": "builtins.str", "self": ""}, "params_descr": {"obj": "The name of the Salesforce object that we are getting a description of.", "self": ""}, "params_occur": {"obj": [["obj_description", "self", "describe_object", "obj"]], "self": [["obj_description", "self", "describe_object", "obj"]]}, "params_p": {"args": [], "kwargs": [], "obj": [["int", 0.35362898759163663], ["str", 0.0843685131849433]], "self": []}, "q_name": "SalesforceHook.get_available_fields", "ret_exprs": ["return [field[\"name\"] for field in obj_description[\"fields\"]]"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["List[str]", 0.6895733771542168], ["Iterable[str]", 0.11255028115485537], ["List[Tuple[str, Any]]", 0.10641168209422351]], "variables": {"obj_description": ""}, "variables_p": {"obj_description": [["Type[bytes]", 0.22387452064966165], ["int", 0.21431132000690795], ["float", 0.11320928923691506], ["Set[str]", 0.09907917995063574], ["str", 0.08706471221455726], ["Dict[str, Any]", 0.08697172542973566], ["dict", 0.08449155433503745]]}}, {"docstring": {"func": "Get all instances of the `object` from Salesforce.", "long_descr": "For each model, only get the fields specified in fields.\n\nAll we really do underneath the hood is run:\n    SELECT <fields> FROM <obj>;", "ret": "all instances of the object from Salesforce."}, "fn_lc": [[204, 4], [224, 37]], "fn_var_ln": {"query": [[217, 8], [217, 13]]}, "fn_var_occur": {"query": [["query", "join", "fields", "obj"], ["self", "log", "info", "query", "len", "query", "join", "query", "query"], ["self", "make_query", "query"]]}, "name": "get_object_from_salesforce", "params": {"fields": "typing.Iterable[builtins.str]", "obj": "builtins.str", "self": ""}, "params_descr": {"fields": "The fields to get from the object.", "obj": "The object name to get from Salesforce.", "self": ""}, "params_occur": {"fields": [["query", "join", "fields", "obj"]], "obj": [["query", "join", "fields", "obj"]], "self": [["self", "log", "info", "query", "len", "query", "join", "query", "query"], ["self", "make_query", "query"]]}, "params_p": {"args": [], "fields": [["List[str]", 0.2903629037064678], ["str", 0.1932212990560265], ["Optional[str]", 0.10838253912482272], ["Collection[str]", 0.10408268076924955]], "kwargs": [], "obj": [["List[str]", 0.2903629037064678], ["str", 0.1932212990560265], ["Optional[str]", 0.10838253912482272], ["Collection[str]", 0.10408268076924955]], "self": []}, "q_name": "SalesforceHook.get_object_from_salesforce", "ret_exprs": ["return self.make_query(query)"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.5172151928749581], ["Dict[str, Dict[str, Any]]", 0.09998350554752292]], "variables": {"query": ""}, "variables_p": {"query": [["str", 0.5926685236662924], ["List[str]", 0.17912888370033064], ["Optional[str]", 0.09349902080761864]]}}, {"docstring": {"func": "Convert a column of a dataframe to UNIX timestamps if applicable.", "long_descr": null, "ret": "a new series that maintains the same index as the original"}, "fn_lc": [[227, 4], [260, 55]], "fn_var_ln": {"column": [[244, 12], [244, 18]], "converted": [[253, 8], [253, 17]]}, "fn_var_occur": {"column": [["column", "pd", "to_datetime", "column"], ["log", "error", "column", "name"], ["pd", "Series", "converted", "index", "column", "index"]], "converted": [["converted", "append", "value", "timestamp"], ["converted", "append", "pd", "np", "NaN"], ["pd", "Series", "converted", "index", "column", "index"]]}, "name": "_to_timestamp", "params": {"cls": "", "column": "pandas.Series"}, "params_descr": {"cls": "", "column": "A Series object representing a column of a dataframe."}, "params_occur": {"cls": [], "column": [["column", "pd", "to_datetime", "column"], ["log", "error", "column", "name"], ["pd", "Series", "converted", "index", "column", "index"]]}, "params_p": {"args": [], "cls": [["bool", 0.21235947694424603], ["Callable", 0.1813288983529198], ["pandas.DataFrame", 0.10232232557258718], ["Iterable[str]", 0.09089654066138224], ["str", 0.09086505902927505], ["list", 0.08632165129121273], ["Type[T]", 0.08448086218952831]], "column": [["str", 0.23002963026961384], ["bool", 0.1689966631344121], ["int", 0.11662103310732697], ["Dict[str, Any]", 0.09670377669244518]], "kwargs": [], "self": []}, "q_name": "SalesforceHook._to_timestamp", "ret_exprs": ["return column", "return pd.Series(converted, index=column.index)"], "ret_type": "pandas.Series", "ret_type_p": [["Optional[Dict[str, int]]", 0.197210029664138], ["float", 0.1750295268810627], ["int", 0.1320731511050573], ["Type", 0.09032644331069609]], "variables": {"column": "", "converted": ""}, "variables_p": {"column": [["int", 0.1958218887524206], ["datetime.date.time.datetime", 0.10325890734524956], ["str", 0.0963410042251789], ["float", 0.09113320974398804]], "converted": [["list", 0.7645097382131618], ["List[str]", 0.08412009210575302], ["tuple", 0.07588023186302068], ["str", 0.07548993781806439]]}}, {"docstring": {"func": "Write query results to file.", "long_descr": "Acceptable formats are:\n    - csv:\n        comma-separated-values file. This is the default format.\n    - json:\n        JSON array. Each element in the array is a different row.\n    - ndjson:\n        JSON array but each element is new-line delimited instead of comma delimited like in `json`\n\nThis requires a significant amount of cleanup.\nPandas doesn't handle output to CSV and json in a uniform way.\nThis is especially painful for datetime types.\nPandas wants to write them as strings in CSV, but as millisecond Unix timestamps.\n\nBy default, this function will try and leave all values as they are represented in Salesforce.\nYou use the `coerce_to_timestamp` flag to force all datetimes to become Unix timestamps (UTC).\nThis is can be greatly beneficial as it will make all of your datetime fields look the same,\nand makes it easier to work with in other database environments", "ret": "the dataframe that gets written to the file."}, "fn_lc": [[262, 4], [337, 17]], "fn_var_ln": {"df": [[305, 8], [305, 10]], "fmt": [[301, 8], [301, 11]], "possible_strings": [[324, 12], [324, 28]]}, "fn_var_occur": {"df": [["df", "self", "object_to_df", "query_results", "query_results", "coerce_to_timestamp", "coerce_to_timestamp", "record_time_added", "record_time_added"], ["possible_strings", "df", "columns", "df", "dtypes"], ["df", "possible_strings", "df", "possible_strings", "astype", "str", "apply", "x", "x", "str", "replace", "str", "replace"], ["df", "to_csv", "filename", "index", "False"], ["df", "to_json", "filename", "date_unit"], ["df", "to_json", "filename", "lines", "True", "date_unit"]], "fmt": [["fmt", "fmt", "lower"], ["ValueError", "fmt"]], "possible_strings": [["possible_strings", "df", "columns", "df", "dtypes"], ["df", "possible_strings", "df", "possible_strings", "astype", "str", "apply", "x", "x", "str", "replace", "str", "replace"]]}, "name": "write_object_to_file", "params": {"coerce_to_timestamp": "builtins.bool", "filename": "builtins.str", "fmt": "builtins.str", "query_results": "builtins.list[builtins.dict]", "record_time_added": "builtins.bool", "self": ""}, "params_descr": {"coerce_to_timestamp": "True if you want all datetime fields to be converted into Unix timestamps.\nFalse if you want them to be left in the same format as they were in Salesforce.\nLeaving the value as False will result in datetimes being strings. Default: False", "filename": "the name of the file where the data should be dumped to", "fmt": "the format you want the output in. Default:  'csv'", "query_results": "the results from a SQL query", "record_time_added": "True if you want to add a Unix timestamp field\nto the resulting data that marks when the data was fetched from Salesforce. Default: False", "self": ""}, "params_occur": {"coerce_to_timestamp": [["df", "self", "object_to_df", "query_results", "query_results", "coerce_to_timestamp", "coerce_to_timestamp", "record_time_added", "record_time_added"]], "filename": [["df", "to_csv", "filename", "index", "False"], ["df", "to_json", "filename", "date_unit"], ["df", "to_json", "filename", "lines", "True", "date_unit"]], "fmt": [["fmt", "fmt", "lower"], ["ValueError", "fmt"]], "query_results": [["df", "self", "object_to_df", "query_results", "query_results", "coerce_to_timestamp", "coerce_to_timestamp", "record_time_added", "record_time_added"]], "record_time_added": [["df", "self", "object_to_df", "query_results", "query_results", "coerce_to_timestamp", "coerce_to_timestamp", "record_time_added", "record_time_added"]], "self": [["df", "self", "object_to_df", "query_results", "query_results", "coerce_to_timestamp", "coerce_to_timestamp", "record_time_added", "record_time_added"], ["self", "log", "info"]]}, "params_p": {"args": [], "coerce_to_timestamp": [["Callable", 0.12231303129858032], ["Optional[float]", 0.11336854013167486], ["int", 0.09436568856578313], ["str", 0.09041376155655988]], "filename": [["str", 0.5924123870084678], ["Optional[str]", 0.3013208571106686]], "fmt": [["str", 1.0000000000000002]], "kwargs": [], "query_results": [["Callable", 0.12231303129858032], ["Optional[float]", 0.11336854013167486], ["int", 0.09436568856578313], ["str", 0.09041376155655988]], "record_time_added": [["Callable", 0.12231303129858032], ["Optional[float]", 0.11336854013167486], ["int", 0.09436568856578313], ["str", 0.09041376155655988]], "self": []}, "q_name": "SalesforceHook.write_object_to_file", "ret_exprs": ["return df"], "ret_type": "pandas.DataFrame", "ret_type_p": [["str", 0.38756171262099454], ["int", 0.10000381876509587], ["List[str]", 0.09151089037545171], ["bool", 0.08334595539339494]], "variables": {"df": "", "fmt": "", "possible_strings": ""}, "variables_p": {"df": [["int", 0.10032233801115265], ["set", 0.09430136962440827], ["dict", 0.08850933667543937], ["List[List[None]]", 0.08810806723439642], ["Dict[str, Union[dict, Any]]", 0.0844610536477964]], "fmt": [["str", 0.7015356906660664], ["Set[str]", 0.2086349525436028]], "possible_strings": [["Set[str]", 0.6110866520912648], ["Type[Optional[str]]", 0.09552830657913448]]}}, {"docstring": {"func": "Export query results to dataframe.", "long_descr": "By default, this function will try and leave all values as they are represented in Salesforce.\nYou use the `coerce_to_timestamp` flag to force all datetimes to become Unix timestamps (UTC).\nThis is can be greatly beneficial as it will make all of your datetime fields look the same,\nand makes it easier to work with in other database environments", "ret": "the dataframe."}, "fn_lc": [[339, 4], [394, 17]], "fn_var_ln": {"columns": [[364, 8], [364, 18]], "df": [[362, 8], [362, 10]], "fetched_time": [[391, 12], [391, 24]], "object_name": [[374, 12], [374, 23]], "possible_timestamp_cols": [[383, 12], [383, 35]], "schema": [[378, 12], [378, 18]]}, "fn_var_occur": {"columns": [["df", "columns", "column", "lower", "column", "df", "columns"], ["possible_timestamp_cols", "field", "lower", "field", "schema", "field", "field", "lower", "df", "columns"]], "df": [["df", "pd", "DataFrame", "from_records", "query_results", "exclude"], ["df", "columns", "column", "lower", "column", "df", "columns"], ["coerce_to_timestamp", "df", "shape"], ["possible_timestamp_cols", "field", "lower", "field", "schema", "field", "field", "lower", "df", "columns"], ["df", "possible_timestamp_cols", "df", "possible_timestamp_cols", "apply", "self", "_to_timestamp"], ["df", "fetched_time"]], "fetched_time": [["fetched_time", "time", "time"], ["df", "fetched_time"]], "object_name": [["object_name", "query_results"], ["self", "log", "info", "object_name"], ["schema", "self", "describe_object", "object_name"]], "possible_timestamp_cols": [["possible_timestamp_cols", "field", "lower", "field", "schema", "field", "field", "lower", "df", "columns"], ["df", "possible_timestamp_cols", "df", "possible_timestamp_cols", "apply", "self", "_to_timestamp"]], "schema": [["schema", "self", "describe_object", "object_name"], ["possible_timestamp_cols", "field", "lower", "field", "schema", "field", "field", "lower", "df", "columns"]]}, "name": "object_to_df", "params": {"coerce_to_timestamp": "builtins.bool", "query_results": "builtins.list[builtins.dict]", "record_time_added": "builtins.bool", "self": ""}, "params_descr": {"coerce_to_timestamp": "True if you want all datetime fields to be converted into Unix timestamps.\nFalse if you want them to be left in the same format as they were in Salesforce.\nLeaving the value as False will result in datetimes being strings. Default: False", "query_results": "the results from a SQL query", "record_time_added": "True if you want to add a Unix timestamp field\nto the resulting data that marks when the data was fetched from Salesforce. Default: False", "self": ""}, "params_occur": {"coerce_to_timestamp": [["coerce_to_timestamp", "df", "shape"]], "query_results": [["df", "pd", "DataFrame", "from_records", "query_results", "exclude"], ["object_name", "query_results"]], "record_time_added": [], "self": [["self", "log", "info", "object_name"], ["schema", "self", "describe_object", "object_name"], ["df", "possible_timestamp_cols", "df", "possible_timestamp_cols", "apply", "self", "_to_timestamp"]]}, "params_p": {"args": [], "coerce_to_timestamp": [["Union[List, Dict, None]", 0.2849425322736449], ["dict", 0.11447873160280861], ["Type[\"SerializationDialect\"]", 0.1046787122549437], ["Optional[int]", 0.10104620307984574], ["Iterable[str]", 0.09959216300967012], ["Callable", 0.09780031451249532], ["Optional[pandas.DataFrame]", 0.09725654873523316]], "kwargs": [], "query_results": [["str", 0.5764733792526581], ["bytes", 0.11945382411214733], ["List[str]", 0.10735611578734318], ["Optional[str]", 0.09663394074743469]], "record_time_added": [["bool", 0.5587236309758884], ["Optional[Dict[str, Any]]", 0.15314207497737617], ["Optional[bool]", 0.08092258901140084], ["str", 0.07657103748868808]], "self": []}, "q_name": "SalesforceHook.object_to_df", "ret_exprs": ["return df"], "ret_type": "pandas.DataFrame", "ret_type_p": [["bytes", 0.2], ["int", 0.1], ["IO", 0.1], ["List[str]", 0.1], ["str", 0.1]], "variables": {"columns": "", "df": "", "fetched_time": "", "object_name": "", "possible_timestamp_cols": "", "schema": ""}, "variables_p": {"columns": [["Set[str]", 0.3821789982383424], ["List[int]", 0.10667242748947552], ["List[str]", 0.09992709587303286], ["int", 0.09890798335065315], ["list", 0.09880903265550278]], "df": [["Pattern[str]", 0.28133722617487933], ["Dict[str, str]", 0.19831142907389546], ["list", 0.18882899662652997], ["Dict[str, List[Any]]", 0.09212764980687509]], "fetched_time": [["float", 1.0]], "object_name": [["str", 0.6297295714921123], ["List[str]", 0.27822002441283156], ["Optional[str]", 0.09205040409505609]], "possible_timestamp_cols": [["str", 0.6892016749642514], ["Dict[str, str]", 0.21943652206038988], ["Type[Dict[str, Any]]", 0.09136180297535856]], "schema": [["str", 0.17627026504185384], ["Dict[Any, Dict[str, Any]]", 0.10397822076648254], ["dict", 0.10001340871319019], ["Dict[str, Tuple[str, str]]", 0.0882031575020261]]}}, {"docstring": {"func": "Test the Salesforce connectivity.", "long_descr": null, "ret": null}, "fn_lc": [[396, 4], [406, 30]], "fn_var_ln": {"message": [[404, 12], [404, 19]], "status": [[403, 12], [403, 18]]}, "fn_var_occur": {"message": [["message", "str", "e"], ["status", "message"]], "status": [["status", "True"], ["status", "False"], ["status", "message"]]}, "name": "test_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "describe_object"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SalesforceHook.test_connection", "ret_exprs": ["return status, message"], "ret_type": "", "ret_type_p": [["str", 0.11132540159615353]], "variables": {"message": "", "status": ""}, "variables_p": {"message": [["int", 0.6302983050026929], ["Iterator[Any]", 0.10323439140012651], ["Tuple[int, int, int]", 0.09777426162403452], ["float", 0.08834879658331857]], "status": [["str", 0.5522728491913246], ["List[str]", 0.09074179379685232], ["Pattern[Any]", 0.08915451938613941]]}}], "name": "SalesforceHook", "q_name": "SalesforceHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "time", "functools", "cached_property", "typing", "Any", "Iterable", "pandas", "pd", "requests", "Session", "simple_salesforce", "Salesforce", "api", "airflow", "hooks", "base", "BaseHook", "flask_appbuilder", "fieldwidgets", "BS3PasswordFieldWidget", "BS3TextFieldWidget", "flask_babel", "lazy_gettext", "wtforms", "PasswordField", "StringField"], "mod_var_ln": {"log": [[37, 0], [37, 3]]}, "mod_var_occur": {"log": [["self", "log", "info"], ["self", "log", "info", "query_results", "query_results"], ["self", "log", "info", "query", "len", "query", "join", "query", "query"], ["log", "error", "column", "name"], ["self", "log", "info"], ["self", "log", "info", "object_name"]]}, "no_types_annot": {"D": 28, "I": 0, "U": 35}, "session_id": "72TmYp-8WtBWzcjBa7vwRkyxfHQsMLLDBsiiSZvowCM", "set": null, "tc": [false, null], "type_annot_cove": 0.44, "typed_seq": "", "untyped_seq": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.3913570307302382], ["List[Tuple[Any, int]]", 0.31643658686937914], ["Union[Literal, str]", 0.10376794066173073], ["logging.Formatter", 0.09328673509006073]]}}}