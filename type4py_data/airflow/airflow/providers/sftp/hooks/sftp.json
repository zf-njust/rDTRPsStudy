{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [400, 28]], "cls_var_ln": {"conn_name_attr": [[58, 4], [58, 18]], "conn_type": [[60, 4], [60, 13]], "default_conn_name": [[59, 4], [59, 21]], "hook_name": [[61, 4], [61, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [70, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_ui_field_behaviour", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SFTPHook.get_ui_field_behaviour", "ret_exprs": ["return { \"hidden_fields\": [\"schema\"], \"relabeling\": { \"login\": \"Username\", },}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.26840508666723273], ["bool", 0.06666744759841305]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [110, 41]], "fn_var_ln": {"conn": [[79, 8], [79, 17]], "ftp_conn_id": [[98, 8], [98, 19]], "ssh_conn_id": [[108, 8], [108, 24]], "ssh_hook": [[82, 8], [82, 21]]}, "fn_var_occur": {"conn": [["self", "conn", "paramiko", "SFTPClient", "None", "None"]], "ftp_conn_id": [["ftp_conn_id", "kwargs", "pop", "None"], ["ssh_conn_id", "ftp_conn_id"]], "ssh_conn_id": [["self", "ssh_conn_id", "self", "ssh_hook", "ssh_conn_id"], ["ssh_conn_id", "ftp_conn_id"], ["kwargs", "ssh_conn_id"], ["self", "ssh_conn_id", "ssh_conn_id"]], "ssh_hook": [["self", "ssh_hook", "ssh_hook"], ["self", "ssh_hook", "None"], ["isinstance", "self", "ssh_hook", "SSHHook"], ["AirflowException", "type", "self", "ssh_hook"], ["self", "ssh_conn_id", "self", "ssh_hook", "ssh_conn_id"]]}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": "", "ssh_conn_id": "str | None", "ssh_hook": "SSHHook | None"}, "params_descr": {"args": "", "kwargs": "", "self": "", "ssh_conn_id": "", "ssh_hook": ""}, "params_occur": {"args": [["super", "__init__", "args", "kwargs"]], "kwargs": [["ftp_conn_id", "kwargs", "pop", "None"], ["kwargs", "ssh_conn_id"], ["super", "__init__", "args", "kwargs"]], "self": [["self", "conn", "paramiko", "SFTPClient", "None", "None"], ["self", "ssh_hook", "ssh_hook"], ["self", "ssh_hook", "None"], ["isinstance", "self", "ssh_hook", "SSHHook"], ["AirflowException", "type", "self", "ssh_hook"], ["self", "log", "info"], ["self", "ssh_conn_id", "self", "ssh_hook", "ssh_conn_id"], ["self", "ssh_conn_id", "ssh_conn_id"]], "ssh_conn_id": [["self", "ssh_conn_id", "self", "ssh_hook", "ssh_conn_id"], ["ssh_conn_id", "ftp_conn_id"], ["kwargs", "ssh_conn_id"], ["self", "ssh_conn_id", "ssh_conn_id"]], "ssh_hook": [["self", "ssh_hook", "ssh_hook"], ["self", "ssh_hook", "None"], ["isinstance", "self", "ssh_hook", "SSHHook"], ["AirflowException", "type", "self", "ssh_hook"], ["self", "ssh_conn_id", "self", "ssh_hook", "ssh_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ssh_conn_id": [["int", 0.1891900049509434], ["bytes", 0.09988987037312161]], "ssh_hook": [["int", 0.12883254009934142], ["List[str]", 0.11505739179709663], ["bytes", 0.103479180640271], ["Optional[\"Frame\"]", 0.09980988775875031], ["T", 0.08244903860204629]]}, "q_name": "SFTPHook.__init__", "ret_exprs": ["return"], "ret_type": "None", "ret_type_p": [["Dict[str, Dict[str, int]]", 0.19197634121147913], ["str", 0.18382899801765326], ["Dict[str, Any]", 0.10215857691796175], ["Union[tuple, list]", 0.09042019172440315]], "variables": {"conn": "paramiko.SFTPClient | None", "ftp_conn_id": "", "ssh_conn_id": "", "ssh_hook": ""}, "variables_p": {"conn": [["str", 0.32954665974038466], ["Optional[str]", 0.2028649457649882], ["Callable", 0.19728577586557178], ["Type[Callable[Any, Any]]", 0.0968299697418551], ["Type[str]", 0.0810692912369063]], "ftp_conn_id": [["Dict[str, str]", 0.698607531013311], ["int", 0.2145251401219085], ["bytes", 0.08686732886478048]], "ssh_conn_id": [["int", 0.6763831145038597], ["str", 0.12401031835963162], ["List[int]", 0.1183021739512431], ["Optional[str]", 0.08130439318526557]], "ssh_hook": [["Dict[str, str]", 0.5228840655244521], ["str", 0.4771159344755479]]}}, {"docstring": {"func": "Opens an SFTP connection to the remote host.", "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [120, 24]], "fn_var_ln": {"conn": [[119, 16], [119, 25]]}, "fn_var_occur": {"conn": [["self", "conn", "None"], ["self", "conn", "self", "ssh_hook", "get_conn", "open_sftp"], ["self", "conn", "super", "get_conn", "open_sftp"], ["self", "conn"]]}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn", "None"], ["self", "ssh_hook", "None"], ["self", "conn", "self", "ssh_hook", "get_conn", "open_sftp"], ["self", "conn", "super", "get_conn", "open_sftp"], ["self", "conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SFTPHook.get_conn", "ret_exprs": ["return self.conn"], "ret_type": "paramiko.SFTPClient", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"conn": ""}, "variables_p": {"conn": [["dict", 0.11788804288187975], ["Sized", 0.0837014188855046]]}}, {"docstring": {"func": "Closes the SFTP connection.", "long_descr": null, "ret": null}, "fn_lc": [[122, 4], [126, 28]], "fn_var_ln": {"conn": [[126, 12], [126, 21]]}, "fn_var_occur": {"conn": [["self", "conn", "None"], ["self", "conn", "close"], ["self", "conn", "None"]]}, "name": "close_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn", "None"], ["self", "conn", "close"], ["self", "conn", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SFTPHook.close_conn", "ret_exprs": [], "ret_type": "None", "variables": {"conn": ""}, "variables_p": {"conn": [["int", 0.26340059933028237], ["Optional[int]", 0.07529492369257235], ["set", 0.0752252187309128], ["Set[str]", 0.0752252187309128], ["Dict[Optional[str], str]", 0.07240330755132662]]}}, {"docstring": {"func": "Get file information in a directory on the remote system.", "long_descr": "The return format is ``{filename: {attributes}}``. The remote system\nsupport the MLSD command.", "ret": null}, "fn_lc": [[128, 4], [146, 20]], "fn_var_ln": {"conn": [[136, 8], [136, 12]], "files": [[138, 8], [138, 13]], "flist": [[137, 8], [137, 13]], "modify": [[140, 12], [140, 18]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["flist", "sorted", "conn", "listdir_attr", "path", "key", "x", "x", "filename"]], "files": [["files", "f", "filename", "f", "st_size", "stat", "S_ISDIR", "f", "st_mode", "modify"]], "flist": [["flist", "sorted", "conn", "listdir_attr", "path", "key", "x", "x", "filename"]], "modify": [["modify", "datetime", "datetime", "fromtimestamp", "f", "st_mtime", "strftime"], ["files", "f", "filename", "f", "st_size", "stat", "S_ISDIR", "f", "st_mode", "modify"]]}, "name": "describe_directory", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote directory", "self": ""}, "params_occur": {"path": [["flist", "sorted", "conn", "listdir_attr", "path", "key", "x", "x", "filename"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["List[str]", 0.5527562098175953], ["str", 0.2245050481056108], ["list", 0.12056713361873715]], "self": []}, "q_name": "SFTPHook.describe_directory", "ret_exprs": ["return files"], "ret_type": "builtins.dict[builtins.str, builtins.dict[builtins.str, str | int | None]]", "ret_type_p": [["str", 0.3440520928292925], ["TextIO", 0.10191144883579861], ["BinaryIO", 0.10191144883579861]], "variables": {"conn": "", "files": "", "flist": "", "modify": ""}, "variables_p": {"conn": [["list", 0.24115734116562093], ["List[str]", 0.22647168653111027], ["Dict[int, Union[Any, Any]]", 0.10495692296394102], ["int", 0.0822679329793462], ["Dict[str, str]", 0.08193596948666046], ["dict", 0.08054830169607047]], "files": [["int", 0.49444466331280523], ["bytes", 0.10323740647094727], ["list", 0.08957283825212747]], "flist": [["list", 0.6139490386877056], ["List[str]", 0.21764715800290002], ["dict", 0.08584952557943289], ["range", 0.08255427772996148]], "modify": [["datetime.datetime.timedelta", 0.8981861314399141], ["datetime.datetime", 0.101813868560086]]}}, {"docstring": {"func": "List files in a directory on the remote system.", "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [155, 20]], "fn_var_ln": {"conn": [[153, 8], [153, 12]], "files": [[154, 8], [154, 13]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["files", "sorted", "conn", "listdir", "path"]], "files": [["files", "sorted", "conn", "listdir", "path"]]}, "name": "list_directory", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote directory to list", "self": ""}, "params_occur": {"path": [["files", "sorted", "conn", "listdir", "path"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["List[str]", 0.3683175145978293], ["List[Tuple[int, int]]", 0.10691037060249062], ["Iterator[Tuple[str, Any, Any]]", 0.09506965030794287], ["bool", 0.08224650987875674], ["List[Tuple[str, str, str]]", 0.0792622356834]], "self": []}, "q_name": "SFTPHook.list_directory", "ret_exprs": ["return files"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.502922292043923], ["Tuple[float, float]", 0.09803509444965039]], "variables": {"conn": "", "files": ""}, "variables_p": {"conn": [["str", 0.48601903766302], ["Dict[str, str]", 0.09846445695760682], ["List[int]", 0.09515064081503276]], "files": [["list", 0.560698075116377], ["List[str]", 0.35386427064597537]]}}, {"docstring": {"func": "Create a directory on the remote system.", "long_descr": "The default mode is ``0o777``, but on some systems, the current umask\nvalue may be first masked out.", "ret": null}, "fn_lc": [[157, 4], [167, 35]], "fn_var_ln": {"conn": [[166, 8], [166, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "mkdir", "path", "mode", "mode"]]}, "name": "mkdir", "params": {"mode": "builtins.int", "path": "builtins.str", "self": ""}, "params_descr": {"mode": "int permissions of octal mode for directory", "path": "full path to the remote directory to create", "self": ""}, "params_occur": {"mode": [["conn", "mkdir", "path", "mode", "mode"]], "path": [["conn", "mkdir", "path", "mode", "mode"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mode": [["str", 0.5880663013651111], ["Optional[str]", 0.2285054458505227], ["int", 0.08783600519353607]], "path": [["str", 0.5880663013651111], ["Optional[str]", 0.2285054458505227], ["int", 0.08783600519353607]], "self": []}, "q_name": "SFTPHook.mkdir", "ret_exprs": [], "ret_type": "None", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.9060423333732611], ["datetime.datetime", 0.0939576666267388]]}}, {"docstring": {"func": "Check if the path provided is a directory.", "long_descr": null, "ret": null}, "fn_lc": [[169, 4], [179, 21]], "fn_var_ln": {"conn": [[174, 8], [174, 12]], "result": [[178, 12], [178, 18]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["result", "stat", "S_ISDIR", "conn", "stat", "path", "st_mode"]], "result": [["result", "stat", "S_ISDIR", "conn", "stat", "path", "st_mode"], ["result", "False"]]}, "name": "isdir", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote directory to check", "self": ""}, "params_occur": {"path": [["result", "stat", "S_ISDIR", "conn", "stat", "path", "st_mode"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.7152929638128748], ["Union[str, List]", 0.09787587125402905]], "self": []}, "q_name": "SFTPHook.isdir", "ret_exprs": ["return result"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.16408864410171026], ["Optional[Union[str, Any]]", 0.08753798278800795]], "variables": {"conn": "", "result": ""}, "variables_p": {"conn": [["str", 0.8890144699814662], ["Dict[str, int]", 0.11098553001853388]], "result": [["str", 0.31538743743039666], ["Pattern[str]", 0.13496987851710124], ["List[str]", 0.09522884631638172], ["Dict[str, int]", 0.0871914550000426], ["Dict[str, Any]", 0.08714643197823453], ["Dict[str, List[str]]", 0.08163843814491428]]}}, {"docstring": {"func": "Check if the path provided is a file.", "long_descr": null, "ret": null}, "fn_lc": [[181, 4], [191, 21]], "fn_var_ln": {"conn": [[186, 8], [186, 12]], "result": [[190, 12], [190, 18]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["result", "stat", "S_ISREG", "conn", "stat", "path", "st_mode"]], "result": [["result", "stat", "S_ISREG", "conn", "stat", "path", "st_mode"], ["result", "False"]]}, "name": "isfile", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote file to check", "self": ""}, "params_occur": {"path": [["result", "stat", "S_ISREG", "conn", "stat", "path", "st_mode"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.7152929638128748], ["Union[str, List]", 0.09787587125402905]], "self": []}, "q_name": "SFTPHook.isfile", "ret_exprs": ["return result"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.16408864410171026], ["Optional[Union[str, Any]]", 0.08753798278800795]], "variables": {"conn": "", "result": ""}, "variables_p": {"conn": [["str", 0.8890144699814662], ["Dict[str, int]", 0.11098553001853388]], "result": [["str", 0.31538743743039666], ["Pattern[str]", 0.13496987851710124], ["List[str]", 0.09522884631638172], ["Dict[str, int]", 0.0871914550000426], ["Dict[str, Any]", 0.08714643197823453], ["Dict[str, List[str]]", 0.08163843814491428]]}}, {"docstring": {"func": "Create a directory on the remote system.", "long_descr": "The default mode is ``0o777``, but on some systems, the current umask\nvalue may be first masked out. Different from :func:`.mkdir`, this\nfunction attempts to create parent directories if needed, and returns\nsilently if the target directory already exists.", "ret": null}, "fn_lc": [[193, 4], [216, 43]], "fn_var_ln": {"basename": [[211, 21], [211, 29]], "conn": [[204, 8], [204, 12]], "dirname": [[211, 12], [211, 19]]}, "fn_var_occur": {"basename": [["dirname", "basename", "os", "path", "split", "path"]], "conn": [["conn", "self", "get_conn"], ["conn", "mkdir", "path", "mode", "mode"]], "dirname": [["dirname", "basename", "os", "path", "split", "path"], ["dirname", "self", "isdir", "dirname"], ["self", "create_directory", "dirname", "mode"]]}, "name": "create_directory", "params": {"mode": "builtins.int", "path": "builtins.str", "self": ""}, "params_descr": {"mode": "int permissions of octal mode for directory", "path": "full path to the remote directory to create", "self": ""}, "params_occur": {"mode": [["self", "create_directory", "dirname", "mode"], ["conn", "mkdir", "path", "mode", "mode"]], "path": [["self", "isdir", "path"], ["self", "log", "info", "path"], ["self", "isfile", "path"], ["AirflowException", "path"], ["dirname", "basename", "os", "path", "split", "path"], ["self", "log", "info", "path"], ["conn", "mkdir", "path", "mode", "mode"]], "self": [["conn", "self", "get_conn"], ["self", "isdir", "path"], ["self", "log", "info", "path"], ["self", "isfile", "path"], ["dirname", "self", "isdir", "dirname"], ["self", "create_directory", "dirname", "mode"], ["self", "log", "info", "path"]]}, "params_p": {"args": [], "kwargs": [], "mode": [["str", 0.7135792021653911], ["List[str]", 0.09825111522512345]], "path": [["str", 0.2846001121339025]], "self": []}, "q_name": "SFTPHook.create_directory", "ret_exprs": ["return"], "ret_type": "None", "ret_type_p": [["str", 0.42554072886516237], ["Sequence[str]", 0.09218681742980801], ["bool", 0.09205006712259603]], "variables": {"basename": "", "conn": "", "dirname": ""}, "variables_p": {"basename": [["str", 0.7281809200537079], ["Optional[int]", 0.10728423995447872]], "conn": [["str", 0.9060423333732611], ["datetime.datetime", 0.0939576666267388]], "dirname": [["str", 0.8627200905744886], ["int", 0.1372799094255115]]}}, {"docstring": {"func": "Delete a directory on the remote system.", "long_descr": null, "ret": null}, "fn_lc": [[218, 4], [224, 24]], "fn_var_ln": {"conn": [[223, 8], [223, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "rmdir", "path"]]}, "name": "delete_directory", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote directory to delete", "self": ""}, "params_occur": {"path": [["conn", "rmdir", "path"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.7465683364943381]], "self": []}, "q_name": "SFTPHook.delete_directory", "ret_exprs": [], "ret_type": "None", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.9999999999999998]]}}, {"docstring": {"func": "Transfer the remote file to a local location.", "long_descr": "If local_full_path is a string path, the file will be put\nat that location.", "ret": null}, "fn_lc": [[226, 4], [236, 51]], "fn_var_ln": {"conn": [[235, 8], [235, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "get", "remote_full_path", "local_full_path"]]}, "name": "retrieve_file", "params": {"local_full_path": "builtins.str", "remote_full_path": "builtins.str", "self": ""}, "params_descr": {"local_full_path": "full path to the local file", "remote_full_path": "full path to the remote file", "self": ""}, "params_occur": {"local_full_path": [["conn", "get", "remote_full_path", "local_full_path"]], "remote_full_path": [["conn", "get", "remote_full_path", "local_full_path"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "local_full_path": [["str", 0.8329685672363932]], "remote_full_path": [["str", 0.8329685672363932]], "self": []}, "q_name": "SFTPHook.retrieve_file", "ret_exprs": [], "ret_type": "None", "variables": {"conn": ""}, "variables_p": {"conn": [["list", 0.2736702643906387], ["Dict[str, Union[float, str]]", 0.16446205413158915], ["Dict[str, Union[dict, str]]", 0.1636083743563752], ["dict", 0.0963530719214464], ["str", 0.08707297224995184], ["Dict[str, Type[Any]]", 0.08684977746791779]]}}, {"docstring": {"func": "Transfer a local file to the remote location.", "long_descr": "If local_full_path_or_buffer is a string path, the file will be read\nfrom that location.", "ret": null}, "fn_lc": [[238, 4], [248, 68]], "fn_var_ln": {"conn": [[247, 8], [247, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "put", "local_full_path", "remote_full_path", "confirm", "confirm"]]}, "name": "store_file", "params": {"confirm": "builtins.bool", "local_full_path": "builtins.str", "remote_full_path": "builtins.str", "self": ""}, "params_descr": {"confirm": "", "local_full_path": "full path to the local file", "remote_full_path": "full path to the remote file", "self": ""}, "params_occur": {"confirm": [["conn", "put", "local_full_path", "remote_full_path", "confirm", "confirm"]], "local_full_path": [["conn", "put", "local_full_path", "remote_full_path", "confirm", "confirm"]], "remote_full_path": [["conn", "put", "local_full_path", "remote_full_path", "confirm", "confirm"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "confirm": [["str", 0.49362273452695554]], "kwargs": [], "local_full_path": [["str", 0.49362273452695554]], "remote_full_path": [["str", 0.49362273452695554]], "self": []}, "q_name": "SFTPHook.store_file", "ret_exprs": [], "ret_type": "None", "variables": {"conn": ""}, "variables_p": {"conn": [["int", 0.2228225874312322], ["float", 0.10179197039483687], ["list", 0.09421803108217355], ["str", 0.09134388134778487], ["List[str]", 0.0874233118287254], ["List[Tuple[str, int]]", 0.08594617777311793]]}}, {"docstring": {"func": "Remove a file on the server.", "long_descr": null, "ret": null}, "fn_lc": [[250, 4], [256, 25]], "fn_var_ln": {"conn": [[255, 8], [255, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "remove", "path"]]}, "name": "delete_file", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote file", "self": ""}, "params_occur": {"path": [["conn", "remove", "path"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.8756620924408168]], "self": []}, "q_name": "SFTPHook.delete_file", "ret_exprs": [], "ret_type": "None", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.9999999999999998]]}}, {"docstring": {"func": "Get an entry's modification time.", "long_descr": null, "ret": null}, "fn_lc": [[258, 4], [265, 81]], "fn_var_ln": {"conn": [[263, 8], [263, 12]], "ftp_mdtm": [[264, 8], [264, 16]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["ftp_mdtm", "conn", "stat", "path", "st_mtime"]], "ftp_mdtm": [["ftp_mdtm", "conn", "stat", "path", "st_mtime"], ["datetime", "datetime", "fromtimestamp", "ftp_mdtm", "strftime"]]}, "name": "get_mod_time", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote file", "self": ""}, "params_occur": {"path": [["ftp_mdtm", "conn", "stat", "path", "st_mtime"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.807901980961939]], "self": []}, "q_name": "SFTPHook.get_mod_time", "ret_exprs": ["return datetime.datetime.fromtimestamp(ftp_mdtm).strftime(\"%Y%m%d%H%M%S\")"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.4742330608502367], ["datetime.datetime", 0.32981568482218826], ["int", 0.09797562716378756], ["Sequence[str]", 0.09797562716378756]], "variables": {"conn": "", "ftp_mdtm": ""}, "variables_p": {"conn": [["str", 0.7240472011368093], ["dict", 0.18064358198181615], ["Dict[str, str]", 0.09530921688137449]], "ftp_mdtm": [["float", 0.19326821958519746], ["str", 0.19074582771895862], ["Optional[Match[str]]", 0.10178782088217601], ["datetime.date", 0.10158198347882823], ["int", 0.09619572546440422], ["bool", 0.09585068494413607]]}}, {"docstring": {"func": "Whether a remote entity exists.", "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [277, 19]], "fn_var_ln": {"conn": [[272, 8], [272, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "stat", "path"]]}, "name": "path_exists", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path to the remote file or directory", "self": ""}, "params_occur": {"path": [["conn", "stat", "path"]], "self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.8099139516653578]], "self": []}, "q_name": "SFTPHook.path_exists", "ret_exprs": ["return False", "return True"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.9999999999999999]]}}, {"docstring": {"func": "Whether given path starts with ``prefix`` (if set) and ends with ``delimiter`` (if set).", "long_descr": null, "ret": "bool"}, "fn_lc": [[280, 4], [292, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_is_path_match", "params": {"delimiter": "str | None", "path": "builtins.str", "prefix": "str | None"}, "params_descr": {"delimiter": "if set path will be checked is ending with suffix", "path": "path to be checked", "prefix": "if set path will be checked is starting with prefix"}, "params_occur": {"delimiter": [["delimiter", "None", "path", "endswith", "delimiter"]], "path": [["prefix", "None", "path", "startswith", "prefix"], ["delimiter", "None", "path", "endswith", "delimiter"]], "prefix": [["prefix", "None", "path", "startswith", "prefix"]]}, "params_p": {"args": [], "delimiter": [["Optional[str]", 0.48406726476873113], ["str", 0.1848702814692269]], "kwargs": [], "path": [["str", 0.49519936971887674], ["Optional[str]", 0.30245775314411966]], "prefix": [["str", 0.5531068253266985], ["Optional[str]", 0.4468931746733015]], "self": []}, "q_name": "SFTPHook._is_path_match", "ret_exprs": ["return False", "return False", "return True"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Recursively descend, depth first, the directory tree at ``path``.", "long_descr": "This calls discrete callback functions for each regular file, directory,\nand unknown file type.", "ret": null}, "fn_lc": [[294, 4], [335, 35]], "fn_var_ln": {"conn": [[320, 8], [320, 12]], "mode": [[323, 12], [323, 16]], "pathname": [[322, 12], [322, 20]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["mode", "conn", "stat", "pathname", "st_mode"]], "mode": [["mode", "conn", "stat", "pathname", "st_mode"], ["stat", "S_ISDIR", "mode"], ["stat", "S_ISREG", "mode"]], "pathname": [["pathname", "os", "path", "join", "path", "entry"], ["mode", "conn", "stat", "pathname", "st_mode"], ["dcallback", "pathname"], ["self", "walktree", "pathname", "fcallback", "dcallback", "ucallback"], ["fcallback", "pathname"], ["ucallback", "pathname"]]}, "name": "walktree", "params": {"dcallback": "typing.Callable[[builtins.str], Any | None]", "fcallback": "typing.Callable[[builtins.str], Any | None]", "path": "builtins.str", "recurse": "builtins.bool", "self": "", "ucallback": "typing.Callable[[builtins.str], Any | None]"}, "params_descr": {"dcallback": "callback function to invoke for a directory. (form: ``func(str)``)", "fcallback": "callback function to invoke for a regular file.\n(form: ``func(str)``)", "path": "root of remote directory to descend, use '.' to start at\n:attr:`.pwd`", "recurse": "*Default: True* - should it recurse", "self": "", "ucallback": "callback function to invoke for an unknown file type.\n(form: ``func(str)``)"}, "params_occur": {"dcallback": [["dcallback", "pathname"], ["self", "walktree", "pathname", "fcallback", "dcallback", "ucallback"]], "fcallback": [["self", "walktree", "pathname", "fcallback", "dcallback", "ucallback"], ["fcallback", "pathname"]], "path": [["self", "list_directory", "path"], ["pathname", "os", "path", "join", "path", "entry"]], "recurse": [], "self": [["conn", "self", "get_conn"], ["self", "list_directory", "path"], ["self", "walktree", "pathname", "fcallback", "dcallback", "ucallback"]], "ucallback": [["self", "walktree", "pathname", "fcallback", "dcallback", "ucallback"], ["ucallback", "pathname"]]}, "params_p": {"args": [], "dcallback": [["Dict[str, Any]", 0.4999999989987796], ["bool", 0.24999999977778742], ["Set[str]", 0.2499999994993898], ["str", 1.0367081638820086e-09], ["int", 5.339451295741592e-10]], "fcallback": [["Dict[str, Any]", 0.4999999989987796], ["bool", 0.24999999977778742], ["Set[str]", 0.2499999994993898], ["str", 1.0367081638820086e-09], ["int", 5.339451295741592e-10]], "kwargs": [], "path": [["str", 0.6853334779851332]], "recurse": [["str", 0.30000000000000004], ["bool", 0.1]], "self": [], "ucallback": [["Dict[str, Any]", 0.4999999989987796], ["bool", 0.24999999977778742], ["Set[str]", 0.2499999994993898], ["str", 1.0367081638820086e-09], ["int", 5.339451295741592e-10]]}, "q_name": "SFTPHook.walktree", "ret_exprs": [], "ret_type": "None", "variables": {"conn": "", "mode": "", "pathname": ""}, "variables_p": {"conn": [["int", 0.4063739008550949], ["str", 0.12328543583366933], ["float", 0.10703378786466432], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10134499882907706]], "mode": [["int", 0.41193325286596555], ["str", 0.30794969825597884], ["Dict[str, Optional[Any]]", 0.09607025042959297], ["bytes", 0.09300866065522638], ["TextIO", 0.09103813779323622]], "pathname": [["str", 0.8304607075935474], ["int", 0.08251387499038991]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[353, 8], [354, 108]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "append_matching_path_callback", "params": {"list_": "builtins.list[builtins.str]"}, "params_descr": {"list_": ""}, "params_occur": {"list_": [["item", "list_", "append", "item", "self", "_is_path_match", "item", "prefix", "delimiter", "None"]]}, "params_p": {"args": [], "kwargs": [], "list_": [["str", 0.4827125876756725], ["AnyStr", 0.11197344289072006], ["int", 0.10720722657469582], ["List[str]", 0.08431978282204348]], "self": []}, "q_name": "SFTPHook.get_tree_map.<locals>.append_matching_path_callback", "ret_exprs": ["return lambda item: list_.append(item) if self._is_path_match(item, prefix, delimiter) else None"], "ret_type": "typing.Callable", "ret_type_p": [["str", 0.43981319646012385], ["bool", 0.19610152482553017]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get tuple with recursive lists of files, directories and unknown paths.", "long_descr": "It is possible to filter results by giving prefix and/or delimiter parameters.", "ret": "tuple with list of files, dirs and unknown items"}, "fn_lc": [[337, 4], [364, 36]], "fn_var_ln": {"dirs": [[350, 8], [350, 12]], "files": [[349, 8], [349, 13]], "unknowns": [[351, 8], [351, 16]]}, "fn_var_occur": {"dirs": [["self", "walktree", "path", "path", "fcallback", "append_matching_path_callback", "files", "dcallback", "append_matching_path_callback", "dirs", "ucallback", "append_matching_path_callback", "unknowns", "recurse", "True"], ["files", "dirs", "unknowns"]], "files": [["self", "walktree", "path", "path", "fcallback", "append_matching_path_callback", "files", "dcallback", "append_matching_path_callback", "dirs", "ucallback", "append_matching_path_callback", "unknowns", "recurse", "True"], ["files", "dirs", "unknowns"]], "unknowns": [["self", "walktree", "path", "path", "fcallback", "append_matching_path_callback", "files", "dcallback", "append_matching_path_callback", "dirs", "ucallback", "append_matching_path_callback", "unknowns", "recurse", "True"], ["files", "dirs", "unknowns"]]}, "name": "get_tree_map", "params": {"delimiter": "str | None", "path": "builtins.str", "prefix": "str | None", "self": ""}, "params_descr": {"delimiter": "if set paths will be added if end with delimiter", "path": "path from which tree will be built", "prefix": "if set paths will be added if start with prefix", "self": ""}, "params_occur": {"delimiter": [], "path": [["self", "walktree", "path", "path", "fcallback", "append_matching_path_callback", "files", "dcallback", "append_matching_path_callback", "dirs", "ucallback", "append_matching_path_callback", "unknowns", "recurse", "True"]], "prefix": [], "self": [["self", "walktree", "path", "path", "fcallback", "append_matching_path_callback", "files", "dcallback", "append_matching_path_callback", "dirs", "ucallback", "append_matching_path_callback", "unknowns", "recurse", "True"]]}, "params_p": {"args": [], "delimiter": [["str", 0.15981334937524472]], "kwargs": [], "path": [["str", 0.9077744736381098], ["int", 0.09222552636189045]], "prefix": [["str", 0.15981334937524472]], "self": []}, "q_name": "SFTPHook.get_tree_map", "ret_exprs": ["return files, dirs, unknowns"], "ret_type": "builtins.tuple[builtins.list[builtins.str], builtins.list[builtins.str], builtins.list[builtins.str]]", "ret_type_p": [["str", 0.3652335772043554], ["TextIO", 0.07773593680835593], ["BinaryIO", 0.07773593680835593], ["Dict[str, Any]", 0.07245713055270815]], "variables": {"dirs": "builtins.list[builtins.str]", "files": "builtins.list[builtins.str]", "unknowns": "builtins.list[builtins.str]"}, "variables_p": {"dirs": [["str", 0.4369841643084885], ["int", 0.08554603695614538], ["Type[str]", 0.08370435202210671], ["List[List[int]]", 0.08370435202210671]], "files": [["str", 0.7966467724950307], ["int", 0.08794776540453045]], "unknowns": [["str", 0.4369841643084885], ["int", 0.08554603695614538], ["Type[str]", 0.08370435202210671], ["List[List[int]]", 0.08370435202210671]]}}, {"docstring": {"func": "Test the SFTP connection by calling path with directory.", "long_descr": null, "ret": null}, "fn_lc": [[366, 4], [373, 32]], "fn_var_ln": {"conn": [[369, 12], [369, 16]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["conn", "normalize"]]}, "name": "test_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SFTPHook.test_connection", "ret_exprs": ["return True, \"Connection successfully tested\"", "return False, str(e)"], "ret_type": "builtins.tuple[builtins.bool, builtins.str]", "ret_type_p": [["str", 0.49430304753151344], ["bool", 0.1856181583141694]], "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.9999999999129658], ["Dict[str, Dict[str, Any]]", 1.2995365658296409e-11], ["Dict[str,str]", 1.2475381865816897e-11], ["float", 1.2357826181677691e-11], ["List[int]", 1.2070081032497876e-11]]}}, {"docstring": {"func": "Get the first matching file based on the given fnmatch type pattern.", "long_descr": null, "ret": "string containing the first found file, or an empty string if none matched"}, "fn_lc": [[375, 4], [386, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_file_by_pattern", "params": {"fnmatch_pattern": "", "path": "", "self": ""}, "params_descr": {"fnmatch_pattern": "The pattern that will be matched with `fnmatch`", "path": "path to be checked", "self": ""}, "params_occur": {"fnmatch_pattern": [["fnmatch", "file", "fnmatch_pattern"]], "path": [["self", "list_directory", "path"]], "self": [["self", "list_directory", "path"]]}, "params_p": {"args": [], "fnmatch_pattern": [["str", 0.7232121084045724]], "kwargs": [], "path": [["str", 0.7354927768376048]], "self": []}, "q_name": "SFTPHook.get_file_by_pattern", "ret_exprs": ["return file", "return \"\""], "ret_type": "builtins.str", "ret_type_p": [["str", 0.21784178516252864]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get all matching files based on the given fnmatch type pattern.", "long_descr": null, "ret": "list of string containing the found files, or an empty list if none matched"}, "fn_lc": [[388, 4], [400, 28]], "fn_var_ln": {"matched_files": [[395, 8], [395, 21]]}, "fn_var_occur": {"matched_files": [["matched_files", "append", "file"]]}, "name": "get_files_by_pattern", "params": {"fnmatch_pattern": "", "path": "", "self": ""}, "params_descr": {"fnmatch_pattern": "The pattern that will be matched with `fnmatch`", "path": "path to be checked", "self": ""}, "params_occur": {"fnmatch_pattern": [["fnmatch", "file", "fnmatch_pattern"]], "path": [["self", "list_directory", "path"]], "self": [["self", "list_directory", "path"]]}, "params_p": {"args": [], "fnmatch_pattern": [["str", 0.7232121084045724]], "kwargs": [], "path": [["str", 0.7354927768376048]], "self": []}, "q_name": "SFTPHook.get_files_by_pattern", "ret_exprs": ["return matched_files"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.4839832444665678], ["Set[str]", 0.09583379761723042]], "variables": {"matched_files": ""}, "variables_p": {"matched_files": [["List[str]", 0.4901460827159075], ["str", 0.2704565861500524], ["list", 0.23939733113404]]}}], "name": "SFTPHook", "q_name": "SFTPHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "os", "stat", "warnings", "fnmatch", "fnmatch", "typing", "Any", "Callable", "paramiko", "airflow", "exceptions", "AirflowException", "AirflowProviderDeprecationWarning", "airflow", "providers", "ssh", "hooks", "ssh", "SSHHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 56, "I": 0, "U": 41}, "session_id": "9g1vvWwGVTjblHVyZ7PzpdSYNN78IMuQ5cfnuaAiGxA", "set": null, "tc": [false, null], "type_annot_cove": 0.58, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}