{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [58, 52]], "cls_var_ln": {"template_fields": [[44, 4], [44, 19]]}, "cls_var_occur": {"template_fields": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [49, 30]], "fn_var_ln": {"chime_conn_id": [[48, 8], [48, 26]], "message": [[49, 8], [49, 20]]}, "fn_var_occur": {"chime_conn_id": [["self", "chime_conn_id", "chime_conn_id"]], "message": [["self", "message", "message"]]}, "name": "__init__", "params": {"chime_conn_id": "builtins.str", "message": "builtins.str", "self": ""}, "params_descr": {"chime_conn_id": "", "message": "", "self": ""}, "params_occur": {"chime_conn_id": [["self", "chime_conn_id", "chime_conn_id"]], "message": [["self", "message", "message"]], "self": [["self", "chime_conn_id", "chime_conn_id"], ["self", "message", "message"]]}, "params_p": {"args": [], "chime_conn_id": [["str", 0.45173349584843514], ["Set[str]", 0.08425011149930985], ["dict", 0.07364387847721879]], "kwargs": [], "message": [["str", 0.5416015738060367], ["Dict[str, str]", 0.1752577639480703], ["bool", 0.08329091119340697]], "self": []}, "q_name": "ChimeNotifier.__init__", "ret_exprs": [], "ret_type": "", "variables": {"chime_conn_id": "", "message": ""}, "variables_p": {"chime_conn_id": [["int", 0.5314096773347922], ["str", 0.0976297101878023]], "message": [["TextIO", 0.4999999999973266], ["str", 0.12499999999933165], ["deque", 0.12499999999933165], ["Type[Callable[[None], Any]]", 0.12499999999933165]]}}, {"docstring": {"func": "To reduce overhead cache the hook for the notifier.", "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [54, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ChimeWebhookHook", "chime_conn_id", "self", "chime_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ChimeNotifier.hook", "ret_exprs": ["return ChimeWebhookHook(chime_conn_id=self.chime_conn_id)"], "ret_type": "", "ret_type_p": [["str", 0.18610433295779552], ["raiden.utils.TokenAmount", 0.09349334243516165]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Send a message to a Chime Chat Room.", "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [58, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "notify", "params": {"context": "airflow.utils.context.Context", "self": ""}, "params_descr": {"context": "", "self": ""}, "params_occur": {"context": [], "self": [["self", "hook", "send_message", "message", "self", "message"]]}, "params_p": {"args": [], "context": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "ChimeNotifier.notify", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "ChimeNotifier", "q_name": "ChimeNotifier", "variables": {"template_fields": ""}, "variables_p": {"template_fields": [["Tuple[str, str, str, str, str, str]", 0.2857142856828355], ["Tuple[str, str, str]", 0.2857142856828355], ["Tuple[str, str, str, str]", 0.2857142856828355], ["Tuple[str, str, str, str, str]", 0.14285714284141776], ["Dict[str, str]", 7.42502725571635e-11]]}}], "funcs": [], "imports": ["__future__", "annotations", "functools", "cached_property", "airflow", "exceptions", "AirflowOptionalProviderFeatureException", "airflow", "providers", "amazon", "aws", "hooks", "chime", "ChimeWebhookHook", "airflow", "utils", "context", "Context", "airflow", "notifications", "basenotifier", "BaseNotifier"], "mod_var_ln": {"send_chime_notification": [[61, 0], [61, 23]]}, "mod_var_occur": {"send_chime_notification": []}, "no_types_annot": {"D": 2, "I": 0, "U": 6}, "session_id": "rDenOPUkxfc-eUWDBl_yc3kVEuackRyWtPwK_uTPdKI", "set": null, "tc": [false, null], "type_annot_cove": 0.25, "typed_seq": "", "untyped_seq": "", "variables": {"send_chime_notification": ""}, "variables_p": {"send_chime_notification": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}