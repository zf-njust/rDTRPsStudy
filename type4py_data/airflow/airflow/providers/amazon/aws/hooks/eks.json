{"error": null, "response": {"classes": [{"cls_lc": [[43, 0], [51, 31]], "cls_var_ln": {"ACTIVE": [[47, 4], [47, 10]], "CREATING": [[46, 4], [46, 12]], "DELETING": [[48, 4], [48, 12]], "FAILED": [[49, 4], [49, 10]], "NONEXISTENT": [[51, 4], [51, 15]], "UPDATING": [[50, 4], [50, 12]]}, "cls_var_occur": {"ACTIVE": [], "CREATING": [], "DELETING": [], "FAILED": [], "NONEXISTENT": [], "UPDATING": []}, "funcs": [], "name": "ClusterStates", "q_name": "ClusterStates", "variables": {"ACTIVE": "", "CREATING": "", "DELETING": "", "FAILED": "", "NONEXISTENT": "", "UPDATING": ""}, "variables_p": {"ACTIVE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "CREATING": [["int", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "DELETING": [["str", 0.49999999999999994], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["Literal[True]", 0.09999999999999999]], "FAILED": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "NONEXISTENT": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "UPDATING": [["str", 0.2]]}}, {"cls_lc": [[54, 0], [62, 31]], "cls_var_ln": {"ACTIVE": [[58, 4], [58, 10]], "CREATE_FAILED": [[60, 4], [60, 17]], "CREATING": [[57, 4], [57, 12]], "DELETE_FAILED": [[61, 4], [61, 17]], "DELETING": [[59, 4], [59, 12]], "NONEXISTENT": [[62, 4], [62, 15]]}, "cls_var_occur": {"ACTIVE": [], "CREATE_FAILED": [], "CREATING": [], "DELETE_FAILED": [], "DELETING": [], "NONEXISTENT": []}, "funcs": [], "name": "FargateProfileStates", "q_name": "FargateProfileStates", "variables": {"ACTIVE": "", "CREATE_FAILED": "", "CREATING": "", "DELETE_FAILED": "", "DELETING": "", "NONEXISTENT": ""}, "variables_p": {"ACTIVE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "CREATE_FAILED": [["int", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "CREATING": [["int", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "DELETE_FAILED": [["str", 0.49999999999999994], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["Literal[True]", 0.09999999999999999]], "DELETING": [["str", 0.49999999999999994], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["Literal[True]", 0.09999999999999999]], "NONEXISTENT": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[65, 0], [75, 31]], "cls_var_ln": {"ACTIVE": [[69, 4], [69, 10]], "CREATE_FAILED": [[72, 4], [72, 17]], "CREATING": [[68, 4], [68, 12]], "DEGRADED": [[74, 4], [74, 12]], "DELETE_FAILED": [[73, 4], [73, 17]], "DELETING": [[71, 4], [71, 12]], "NONEXISTENT": [[75, 4], [75, 15]], "UPDATING": [[70, 4], [70, 12]]}, "cls_var_occur": {"ACTIVE": [], "CREATE_FAILED": [], "CREATING": [], "DEGRADED": [], "DELETE_FAILED": [], "DELETING": [], "NONEXISTENT": [], "UPDATING": []}, "funcs": [], "name": "NodegroupStates", "q_name": "NodegroupStates", "variables": {"ACTIVE": "", "CREATE_FAILED": "", "CREATING": "", "DEGRADED": "", "DELETE_FAILED": "", "DELETING": "", "NONEXISTENT": "", "UPDATING": ""}, "variables_p": {"ACTIVE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "CREATE_FAILED": [["int", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "CREATING": [["int", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "DEGRADED": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "DELETE_FAILED": [["str", 0.49999999999999994], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["Literal[True]", 0.09999999999999999]], "DELETING": [["str", 0.49999999999999994], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["Literal[True]", 0.09999999999999999]], "NONEXISTENT": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "UPDATING": [["str", 0.2]]}}, {"cls_lc": [[78, 0], [645, 53]], "cls_var_ln": {"client_type": [[91, 4], [91, 15]]}, "cls_var_occur": {"client_type": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [95, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "__init__", "args", "kwargs"]], "kwargs": [["kwargs", "self", "client_type"], ["super", "__init__", "args", "kwargs"]], "self": [["kwargs", "self", "client_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "EksHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates an Amazon EKS control plane.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.create_cluster`", "ret": "Returns descriptive information about the created EKS Cluster."}, "fn_lc": [[97, 4], [124, 23]], "fn_var_ln": {"eks_client": [[117, 8], [117, 18]], "response": [[119, 8], [119, 16]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "create_cluster", "name", "name", "roleArn", "roleArn", "resourcesVpcConfig", "resourcesVpcConfig", "kwargs"]], "response": [["response", "eks_client", "create_cluster", "name", "name", "roleArn", "roleArn", "resourcesVpcConfig", "resourcesVpcConfig", "kwargs"], ["self", "log", "info", "response", "get", "get"]]}, "name": "create_cluster", "params": {"kwargs": "", "name": "builtins.str", "resourcesVpcConfig": "builtins.dict", "roleArn": "builtins.str", "self": ""}, "params_descr": {"kwargs": "", "name": "The unique name to give to your Amazon EKS Cluster.", "resourcesVpcConfig": "The VPC configuration used by the cluster control plane.", "roleArn": "The Amazon Resource Name (ARN) of the IAM role that provides permissions\nfor the Kubernetes control plane to make calls to AWS API operations on your behalf.", "self": ""}, "params_occur": {"kwargs": [["response", "eks_client", "create_cluster", "name", "name", "roleArn", "roleArn", "resourcesVpcConfig", "resourcesVpcConfig", "kwargs"]], "name": [["response", "eks_client", "create_cluster", "name", "name", "roleArn", "roleArn", "resourcesVpcConfig", "resourcesVpcConfig", "kwargs"]], "resourcesVpcConfig": [["response", "eks_client", "create_cluster", "name", "name", "roleArn", "roleArn", "resourcesVpcConfig", "resourcesVpcConfig", "kwargs"]], "roleArn": [["response", "eks_client", "create_cluster", "name", "name", "roleArn", "roleArn", "resourcesVpcConfig", "resourcesVpcConfig", "kwargs"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get"]]}, "params_p": {"args": [], "kwargs": [], "name": [["Optional[bool]", 0.3055726399085214], ["str", 0.3055726399085214], ["List[str]", 0.1018575466361738], ["Optional[str]", 0.1018575466361738], ["Union[int, List]", 0.08328208027443583]], "resourcesVpcConfig": [["Optional[bool]", 0.3055726399085214], ["str", 0.3055726399085214], ["List[str]", 0.1018575466361738], ["Optional[str]", 0.1018575466361738], ["Union[int, List]", 0.08328208027443583]], "roleArn": [["Optional[bool]", 0.3055726399085214], ["str", 0.3055726399085214], ["List[str]", 0.1018575466361738], ["Optional[str]", 0.1018575466361738], ["Union[int, List]", 0.08328208027443583]], "self": []}, "q_name": "EksHook.create_cluster", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.1949629952776929], ["Optional[Dict[str, Any]]", 0.13829393985519683], ["bool", 0.09723985332281442], ["Dict[str, str]", 0.09450456231833013], ["bytes", 0.09287442719279393]], "variables": {"eks_client": "", "response": ""}, "variables_p": {"eks_client": [["str", 0.08511471828866721]], "response": [["str", 0.21931595066320636], ["Counter[str]", 0.10951190981464505], ["Dict[str, Any]", 0.09390651451933386], ["List[List[int]]", 0.09370533639375364]]}}, {"docstring": {"func": "Creates an Amazon EKS managed node group for an Amazon EKS Cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.create_nodegroup`", "ret": "Returns descriptive information about the created EKS Managed Nodegroup."}, "fn_lc": [[126, 4], [174, 23]], "fn_var_ln": {"cluster_tag_key": [[155, 8], [155, 23]], "eks_client": [[150, 8], [150, 18]], "resolved_tags": [[156, 8], [156, 21]], "response": [[160, 8], [160, 16]]}, "fn_var_occur": {"cluster_tag_key": [["cluster_tag_key", "clusterName"], ["cluster_tag_key", "resolved_tags"], ["resolved_tags", "cluster_tag_key"]], "eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]], "resolved_tags": [["resolved_tags", "tags"], ["cluster_tag_key", "resolved_tags"], ["resolved_tags", "cluster_tag_key"], ["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]], "response": [["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]]}, "name": "create_nodegroup", "params": {"clusterName": "builtins.str", "kwargs": "", "nodeRole": "str | None", "nodegroupName": "builtins.str", "self": "", "subnets": "builtins.list[builtins.str]", "tags": "dict | None"}, "params_descr": {"clusterName": "The name of the Amazon EKS cluster to create the EKS Managed Nodegroup in.", "kwargs": "", "nodeRole": "The Amazon Resource Name (ARN) of the IAM role to associate with your nodegroup.", "nodegroupName": "The unique name to give your managed nodegroup.", "self": "", "subnets": "The subnets to use for the Auto Scaling group that is created for your nodegroup.", "tags": "Optional tags to apply to your nodegroup."}, "params_occur": {"clusterName": [["cluster_tag_key", "clusterName"], ["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]], "kwargs": [["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]], "nodeRole": [["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]], "nodegroupName": [["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]], "subnets": [["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]], "tags": [["resolved_tags", "tags"], ["response", "eks_client", "create_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "subnets", "subnets", "nodeRole", "nodeRole", "tags", "resolved_tags", "kwargs"]]}, "params_p": {"args": [], "clusterName": [["str", 0.6951276785172786], ["Optional[bool]", 0.10337445166172382], ["Optional[List[str]]", 0.10337445166172382], ["Optional[str]", 0.09812341815927382]], "kwargs": [], "nodeRole": [["str", 0.6136160134428704], ["int", 0.28645861083925817], ["Optional[str]", 0.0999253757178714]], "nodegroupName": [["str", 0.6136160134428704], ["int", 0.28645861083925817], ["Optional[str]", 0.0999253757178714]], "self": [], "subnets": [["str", 0.6136160134428704], ["int", 0.28645861083925817], ["Optional[str]", 0.0999253757178714]], "tags": [["str", 0.5901370960111005], ["Optional[str]", 0.19336677113853307], ["int", 0.09928671247371643]]}, "q_name": "EksHook.create_nodegroup", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.1949629952776929], ["Optional[Dict[str, Any]]", 0.13829393985519683], ["bool", 0.09723985332281442], ["Dict[str, str]", 0.09450456231833013], ["bytes", 0.09287442719279393]], "variables": {"cluster_tag_key": "", "eks_client": "", "resolved_tags": "", "response": ""}, "variables_p": {"cluster_tag_key": [["str", 1.0000000000000002]], "eks_client": [["str", 0.5659729637064761], ["Dict[str, str]", 0.09090635526796244], ["Dict[str, Dict[str, Any]]", 0.07640076911255635]], "resolved_tags": [["str", 0.5769904448489495], ["dict", 0.19306708913850856], ["Dict[str, str]", 0.13360186359412773], ["int", 0.09634060241841433]], "response": [["str", 0.5163829103441634], ["Dict[str, List[Any]]", 0.10178876783851086], ["List[Dict[str, str]]", 0.0980117327085662], ["Dict[int, int]", 0.09446098003154851]]}}, {"docstring": {"func": "Creates an AWS Fargate profile for an Amazon EKS cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.create_fargate_profile`", "ret": "Returns descriptive information about the created Fargate profile."}, "fn_lc": [[176, 4], [213, 23]], "fn_var_ln": {"eks_client": [[198, 8], [198, 18]], "response": [[200, 8], [200, 16]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "create_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "podExecutionRoleArn", "podExecutionRoleArn", "selectors", "selectors", "kwargs"]], "response": [["response", "eks_client", "create_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "podExecutionRoleArn", "podExecutionRoleArn", "selectors", "selectors", "kwargs"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]]}, "name": "create_fargate_profile", "params": {"clusterName": "builtins.str", "fargateProfileName": "str | None", "kwargs": "", "podExecutionRoleArn": "str | None", "selectors": "builtins.list", "self": ""}, "params_descr": {"clusterName": "The name of the Amazon EKS cluster to apply the Fargate profile to.", "fargateProfileName": "The name of the Fargate profile.", "kwargs": "", "podExecutionRoleArn": "The Amazon Resource Name (ARN) of the pod execution role to\nuse for pods that match the selectors in the Fargate profile.", "selectors": "The selectors to match for pods to use this Fargate profile.", "self": ""}, "params_occur": {"clusterName": [["response", "eks_client", "create_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "podExecutionRoleArn", "podExecutionRoleArn", "selectors", "selectors", "kwargs"]], "fargateProfileName": [["response", "eks_client", "create_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "podExecutionRoleArn", "podExecutionRoleArn", "selectors", "selectors", "kwargs"]], "kwargs": [["response", "eks_client", "create_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "podExecutionRoleArn", "podExecutionRoleArn", "selectors", "selectors", "kwargs"]], "podExecutionRoleArn": [["response", "eks_client", "create_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "podExecutionRoleArn", "podExecutionRoleArn", "selectors", "selectors", "kwargs"]], "selectors": [["response", "eks_client", "create_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "podExecutionRoleArn", "podExecutionRoleArn", "selectors", "selectors", "kwargs"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]]}, "params_p": {"args": [], "clusterName": [["str", 0.6328291093917954], ["Optional[str]", 0.17829012593358995], ["int", 0.10484536935577618], ["bool", 0.08403539531883822]], "fargateProfileName": [["str", 0.6328291093917954], ["Optional[str]", 0.17829012593358995], ["int", 0.10484536935577618], ["bool", 0.08403539531883822]], "kwargs": [], "podExecutionRoleArn": [["str", 0.6328291093917954], ["Optional[str]", 0.17829012593358995], ["int", 0.10484536935577618], ["bool", 0.08403539531883822]], "selectors": [["str", 0.6328291093917954], ["Optional[str]", 0.17829012593358995], ["int", 0.10484536935577618], ["bool", 0.08403539531883822]], "self": []}, "q_name": "EksHook.create_fargate_profile", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.1949629952776929], ["Optional[Dict[str, Any]]", 0.13829393985519683], ["bool", 0.09723985332281442], ["Dict[str, str]", 0.09450456231833013], ["bytes", 0.09287442719279393]], "variables": {"eks_client": "", "response": ""}, "variables_p": {"eks_client": [["str", 0.700172436177131], ["Dict[str, str]", 0.07354337736606369]], "response": [["str", 0.7215095291834123], ["dict", 0.0955780441345776], ["int", 0.09221601216791725], ["List[Union[Any, Any, Any, Any]]", 0.09069641451409291]]}}, {"docstring": {"func": "Deletes the Amazon EKS Cluster control plane.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.delete_cluster`", "ret": "Returns descriptive information about the deleted EKS Cluster."}, "fn_lc": [[215, 4], [231, 23]], "fn_var_ln": {"eks_client": [[226, 8], [226, 18]], "response": [[228, 8], [228, 16]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "delete_cluster", "name", "name"]], "response": [["response", "eks_client", "delete_cluster", "name", "name"], ["self", "log", "info", "response", "get", "get"]]}, "name": "delete_cluster", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "The name of the cluster to delete.", "self": ""}, "params_occur": {"name": [["response", "eks_client", "delete_cluster", "name", "name"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7995495967117092], ["bool", 0.10639679903392447], ["Dict[str, str]", 0.09405360425436633]], "self": []}, "q_name": "EksHook.delete_cluster", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.30075642925027185], ["int", 0.1315902927816667], ["Dict[str, str]", 0.09645644776723457], ["Exception", 0.09386063044213976], ["Dict[str, Any]", 0.08561121039248072]], "variables": {"eks_client": "", "response": ""}, "variables_p": {"eks_client": [["str", 0.7334796664667377], ["Dict[str, str]", 0.08376133542348849], ["int", 0.07541171940443853]], "response": [["Dict[str, Any]", 0.26986318628554373], ["Dict[str, str]", 0.16611110265975465]]}}, {"docstring": {"func": "Deletes an Amazon EKS managed node group from a specified cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.delete_nodegroup`", "ret": "Returns descriptive information about the deleted EKS Managed Nodegroup."}, "fn_lc": [[233, 4], [254, 23]], "fn_var_ln": {"eks_client": [[245, 8], [245, 18]], "response": [[247, 8], [247, 16]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "delete_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"]], "response": [["response", "eks_client", "delete_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]]}, "name": "delete_nodegroup", "params": {"clusterName": "builtins.str", "nodegroupName": "builtins.str", "self": ""}, "params_descr": {"clusterName": "The name of the Amazon EKS Cluster that is associated with your nodegroup.", "nodegroupName": "The name of the nodegroup to delete.", "self": ""}, "params_occur": {"clusterName": [["response", "eks_client", "delete_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"]], "nodegroupName": [["response", "eks_client", "delete_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]]}, "params_p": {"args": [], "clusterName": [["str", 1.0]], "kwargs": [], "nodegroupName": [["str", 1.0]], "self": []}, "q_name": "EksHook.delete_nodegroup", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.30075642925027185], ["int", 0.1315902927816667], ["Dict[str, str]", 0.09645644776723457], ["Exception", 0.09386063044213976], ["Dict[str, Any]", 0.08561121039248072]], "variables": {"eks_client": "", "response": ""}, "variables_p": {"eks_client": [["str", 0.4948646340119933], ["Dict[str, str]", 0.07983554161944179]], "response": [["Dict[str, Any]", 0.7220199627342474], ["dict", 0.09553912992392706]]}}, {"docstring": {"func": "Deletes an AWS Fargate profile from a specified Amazon EKS cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.delete_fargate_profile`", "ret": "Returns descriptive information about the deleted Fargate profile."}, "fn_lc": [[256, 4], [279, 23]], "fn_var_ln": {"eks_client": [[268, 8], [268, 18]], "response": [[270, 8], [270, 16]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "delete_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"]], "response": [["response", "eks_client", "delete_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]]}, "name": "delete_fargate_profile", "params": {"clusterName": "builtins.str", "fargateProfileName": "builtins.str", "self": ""}, "params_descr": {"clusterName": "The name of the Amazon EKS cluster associated with the Fargate profile to delete.", "fargateProfileName": "The name of the Fargate profile to delete.", "self": ""}, "params_occur": {"clusterName": [["response", "eks_client", "delete_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"]], "fargateProfileName": [["response", "eks_client", "delete_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"]]}, "params_p": {"args": [], "clusterName": [["str", 0.7160837293646763], ["int", 0.09763301170931686]], "fargateProfileName": [["str", 0.7160837293646763], ["int", 0.09763301170931686]], "kwargs": [], "self": []}, "q_name": "EksHook.delete_fargate_profile", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.30075642925027185], ["int", 0.1315902927816667], ["Dict[str, str]", 0.09645644776723457], ["Exception", 0.09386063044213976], ["Dict[str, Any]", 0.08561121039248072]], "variables": {"eks_client": "", "response": ""}, "variables_p": {"eks_client": [["str", 0.5912032689470605], ["Dict[str, str]", 0.08095289623960818]], "response": [["raiden.utils.list", 0.0970449936656244], ["Dict[str, Union[Any, int, str]]", 0.09052321486111436]]}}, {"docstring": {"func": "Returns descriptive information about an Amazon EKS Cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.describe_cluster`", "ret": "Returns descriptive information about a specific EKS Cluster."}, "fn_lc": [[281, 4], [303, 23]], "fn_var_ln": {"cluster_data": [[301, 12], [301, 24]], "eks_client": [[293, 8], [293, 18]], "response": [[295, 8], [295, 16]]}, "fn_var_occur": {"cluster_data": [["cluster_data", "response", "get"], ["self", "log", "info", "json", "dumps", "cluster_data", "cls", "AirflowJsonEncoder"]], "eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "describe_cluster", "name", "name"]], "response": [["response", "eks_client", "describe_cluster", "name", "name"], ["self", "log", "info", "response", "get", "get"], ["cluster_data", "response", "get"]]}, "name": "describe_cluster", "params": {"name": "builtins.str", "self": "", "verbose": "builtins.bool"}, "params_descr": {"name": "The name of the cluster to describe.", "self": "", "verbose": "Provides additional logging if set to True.  Defaults to False."}, "params_occur": {"name": [["response", "eks_client", "describe_cluster", "name", "name"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get"], ["self", "log", "info", "json", "dumps", "cluster_data", "cls", "AirflowJsonEncoder"]], "verbose": []}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.8026139041287522], ["bool", 0.19738609587124756]], "self": [], "verbose": [["str", 0.6], ["Iterable[str]", 0.1], ["bool", 0.1]]}, "q_name": "EksHook.describe_cluster", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["bytes", 0.3221031681578195], ["dict", 0.20773024809892454]], "variables": {"cluster_data": "", "eks_client": "", "response": ""}, "variables_p": {"cluster_data": [["dict", 0.38832457078469007], ["Dict[str, str]", 0.20138081683574166], ["str", 0.18185475543798027], ["bytes", 0.09197047533604606]], "eks_client": [["str", 0.7334796664667377], ["Dict[str, str]", 0.08376133542348849], ["int", 0.07541171940443853]], "response": [["Dict[str, Any]", 0.19225390582349605]]}}, {"docstring": {"func": "Returns descriptive information about an Amazon EKS managed node group.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.describe_nodegroup`", "ret": "Returns descriptive information about a specific EKS Nodegroup."}, "fn_lc": [[305, 4], [333, 23]], "fn_var_ln": {"eks_client": [[318, 8], [318, 18]], "nodegroup_data": [[328, 12], [328, 26]], "response": [[320, 8], [320, 16]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "describe_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"]], "nodegroup_data": [["nodegroup_data", "response", "get"], ["self", "log", "info", "json", "dumps", "nodegroup_data", "cls", "AirflowJsonEncoder"]], "response": [["response", "eks_client", "describe_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"], ["nodegroup_data", "response", "get"]]}, "name": "describe_nodegroup", "params": {"clusterName": "builtins.str", "nodegroupName": "builtins.str", "self": "", "verbose": "builtins.bool"}, "params_descr": {"clusterName": "The name of the Amazon EKS Cluster associated with the nodegroup.", "nodegroupName": "The name of the nodegroup to describe.", "self": "", "verbose": "Provides additional logging if set to True.  Defaults to False."}, "params_occur": {"clusterName": [["response", "eks_client", "describe_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"]], "nodegroupName": [["response", "eks_client", "describe_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"], ["self", "log", "info", "json", "dumps", "nodegroup_data", "cls", "AirflowJsonEncoder"]], "verbose": []}, "params_p": {"args": [], "clusterName": [["str", 1.0]], "kwargs": [], "nodegroupName": [["str", 1.0]], "self": [], "verbose": [["str", 0.8571428570730593], ["List[str]", 1.2214631909830738e-10]]}, "q_name": "EksHook.describe_nodegroup", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["bytes", 0.3221031681578195], ["dict", 0.20773024809892454]], "variables": {"eks_client": "", "nodegroup_data": "", "response": ""}, "variables_p": {"eks_client": [["str", 0.4948646340119933], ["Dict[str, str]", 0.07983554161944179]], "nodegroup_data": [["dict", 0.38832457078469007], ["Dict[str, str]", 0.20138081683574166], ["str", 0.18185475543798027], ["bytes", 0.09197047533604606]], "response": [["Dict[str, Any]", 0.7220199627342474], ["dict", 0.09553912992392706]]}}, {"docstring": {"func": "Returns descriptive information about an AWS Fargate profile.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.describe_fargate_profile`", "ret": "Returns descriptive information about an AWS Fargate profile."}, "fn_lc": [[335, 4], [366, 23]], "fn_var_ln": {"eks_client": [[350, 8], [350, 18]], "fargate_profile_data": [[362, 12], [362, 32]], "response": [[352, 8], [352, 16]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["response", "eks_client", "describe_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"]], "fargate_profile_data": [["fargate_profile_data", "response", "get"], ["self", "log", "info", "json", "dumps", "fargate_profile_data", "cls", "AirflowJsonEncoder"]], "response": [["response", "eks_client", "describe_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"], ["fargate_profile_data", "response", "get"]]}, "name": "describe_fargate_profile", "params": {"clusterName": "builtins.str", "fargateProfileName": "builtins.str", "self": "", "verbose": "builtins.bool"}, "params_descr": {"clusterName": "The name of the Amazon EKS Cluster associated with the Fargate profile.", "fargateProfileName": "The name of the Fargate profile to describe.", "self": "", "verbose": "Provides additional logging if set to True.  Defaults to False."}, "params_occur": {"clusterName": [["response", "eks_client", "describe_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"]], "fargateProfileName": [["response", "eks_client", "describe_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName"]], "self": [["eks_client", "self", "conn"], ["self", "log", "info", "response", "get", "get", "response", "get", "get"], ["self", "log", "info", "json", "dumps", "fargate_profile_data", "cls", "AirflowJsonEncoder"]], "verbose": []}, "params_p": {"args": [], "clusterName": [["str", 0.8093299789539122], ["int", 0.10100486093584948]], "fargateProfileName": [["str", 0.8093299789539122], ["int", 0.10100486093584948]], "kwargs": [], "self": [], "verbose": [["str", 0.3030233703872734], ["List[str]", 0.21380414000702203], ["Optional[bool]", 0.1716405711711753], ["bool", 0.12382206408094841], ["list", 0.09561631184715717], ["utils.types.JSON", 0.09209354250642376]]}, "q_name": "EksHook.describe_fargate_profile", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["bytes", 0.3221031681578195], ["dict", 0.20773024809892454]], "variables": {"eks_client": "", "fargate_profile_data": "", "response": ""}, "variables_p": {"eks_client": [["str", 0.5912032689470605], ["Dict[str, str]", 0.08095289623960818]], "fargate_profile_data": [["Dict[str, Any]", 0.20185590782423046]], "response": [["raiden.utils.list", 0.0970449936656244], ["Dict[str, Union[Any, int, str]]", 0.09052321486111436]]}}, {"docstring": {"func": "Returns the current status of a given Amazon EKS Cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.describe_cluster`", "ret": "Returns the current status of a given Amazon EKS Cluster."}, "fn_lc": [[368, 4], [386, 17]], "fn_var_ln": {"eks_client": [[379, 8], [379, 18]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["ClusterStates", "eks_client", "describe_cluster", "name", "clusterName", "get", "get"]]}, "name": "get_cluster_state", "params": {"clusterName": "builtins.str", "self": ""}, "params_descr": {"clusterName": "The name of the cluster to check.", "self": ""}, "params_occur": {"clusterName": [["ClusterStates", "eks_client", "describe_cluster", "name", "clusterName", "get", "get"]], "self": [["eks_client", "self", "conn"]]}, "params_p": {"args": [], "clusterName": [["str", 0.6953241442526923], ["cmk.utils.type_defs.SectionName", 0.11013724732411487], ["Optional[Mapping[str, Any]]", 0.09386034350184219]], "kwargs": [], "self": []}, "q_name": "EksHook.get_cluster_state", "ret_exprs": ["return ClusterStates(eks_client.describe_cluster(name=clusterName).get(\"cluster\").get(\"status\"))", "return ClusterStates.NONEXISTENT"], "ret_type": "ClusterStates", "ret_type_p": [["cmk.utils.type_defs.UserId", 0.20974164551387164], ["str", 0.20652207558528876], ["Optional[str]", 0.09496652778676488], ["Dict[str, str]", 0.08456753163651495]], "variables": {"eks_client": ""}, "variables_p": {"eks_client": [["str", 0.27595381184805684], ["set", 0.1384697899422458], ["list", 0.10160857851067855]]}}, {"docstring": {"func": "Returns the current status of a given AWS Fargate profile.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.describe_fargate_profile`", "ret": "Returns the current status of a given AWS Fargate profile."}, "fn_lc": [[388, 4], [413, 17]], "fn_var_ln": {"eks_client": [[400, 8], [400, 18]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["FargateProfileStates", "eks_client", "describe_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "get", "get"]]}, "name": "get_fargate_profile_state", "params": {"clusterName": "builtins.str", "fargateProfileName": "builtins.str", "self": ""}, "params_descr": {"clusterName": "The name of the Amazon EKS Cluster associated with the Fargate profile.", "fargateProfileName": "The name of the Fargate profile to check.", "self": ""}, "params_occur": {"clusterName": [["FargateProfileStates", "eks_client", "describe_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "get", "get"]], "fargateProfileName": [["FargateProfileStates", "eks_client", "describe_fargate_profile", "clusterName", "clusterName", "fargateProfileName", "fargateProfileName", "get", "get"]], "self": [["eks_client", "self", "conn"]]}, "params_p": {"args": [], "clusterName": [["str", 0.5879731985214212]], "fargateProfileName": [["str", 0.5879731985214212]], "kwargs": [], "self": []}, "q_name": "EksHook.get_fargate_profile_state", "ret_exprs": ["return FargateProfileStates( eks_client.describe_fargate_profile( clusterName=clusterName, fargateProfileName=fargateProfileName ) .get(\"fargateProfile\") .get(\"status\"))", "return FargateProfileStates.NONEXISTENT"], "ret_type": "FargateProfileStates", "ret_type_p": [["int", 0.2079152229317086], ["raiden.utils.ABI", 0.10268564830806298], ["bool", 0.09747008336887368], ["mode.utils.Deque[float]", 0.08974985817347483]], "variables": {"eks_client": ""}, "variables_p": {"eks_client": [["str", 0.1546376717808115], ["int", 0.06348911269322]]}}, {"docstring": {"func": "Returns the current status of a given Amazon EKS managed node group.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.describe_nodegroup`", "ret": "Returns the current status of a given Amazon EKS Nodegroup."}, "fn_lc": [[415, 4], [438, 17]], "fn_var_ln": {"eks_client": [[427, 8], [427, 18]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["NodegroupStates", "eks_client", "describe_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "get", "get"]]}, "name": "get_nodegroup_state", "params": {"clusterName": "builtins.str", "nodegroupName": "builtins.str", "self": ""}, "params_descr": {"clusterName": "The name of the Amazon EKS Cluster associated with the nodegroup.", "nodegroupName": "The name of the nodegroup to check.", "self": ""}, "params_occur": {"clusterName": [["NodegroupStates", "eks_client", "describe_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "get", "get"]], "nodegroupName": [["NodegroupStates", "eks_client", "describe_nodegroup", "clusterName", "clusterName", "nodegroupName", "nodegroupName", "get", "get"]], "self": [["eks_client", "self", "conn"]]}, "params_p": {"args": [], "clusterName": [["str", 0.7571758425042479], ["cmk.utils.type_defs.SectionName", 0.13999243647554338], ["int", 0.10283172102020893]], "kwargs": [], "nodegroupName": [["str", 0.7571758425042479], ["cmk.utils.type_defs.SectionName", 0.13999243647554338], ["int", 0.10283172102020893]], "self": []}, "q_name": "EksHook.get_nodegroup_state", "ret_exprs": ["return NodegroupStates( eks_client.describe_nodegroup(clusterName=clusterName, nodegroupName=nodegroupName) .get(\"nodegroup\") .get(\"status\"))", "return NodegroupStates.NONEXISTENT"], "ret_type": "NodegroupStates", "ret_type_p": [["raiden.utils.BlockNumber", 0.18478079571949269], ["List[Dict[str, Any]]", 0.14296346247949984], ["Optional[str]", 0.10607056671931638], ["raiden.utils.ChannelID", 0.09451120579180938], ["raiden.utils.TokenAmount", 0.09239039785974634], ["int", 0.09075603524939468]], "variables": {"eks_client": ""}, "variables_p": {"eks_client": [["str", 0.30701094302188364], ["set", 0.10472335636678515], ["Dict[str, Any]", 0.09492340124188131], ["list", 0.09115530413971122], ["Dict[str, Dict[str, Any]]", 0.09045374193857045]]}}, {"docstring": {"func": "Lists all Amazon EKS Clusters in your AWS account.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.list_clusters`", "ret": "A List containing the cluster names."}, "fn_lc": [[440, 4], [457, 99]], "fn_var_ln": {"eks_client": [[454, 8], [454, 18]], "list_cluster_call": [[455, 8], [455, 25]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["list_cluster_call", "partial", "eks_client", "list_clusters"]], "list_cluster_call": [["list_cluster_call", "partial", "eks_client", "list_clusters"], ["self", "_list_all", "api_call", "list_cluster_call", "response_key", "verbose", "verbose"]]}, "name": "list_clusters", "params": {"self": "", "verbose": "builtins.bool"}, "params_descr": {"self": "", "verbose": "Provides additional logging if set to True.  Defaults to False."}, "params_occur": {"self": [["eks_client", "self", "conn"], ["self", "_list_all", "api_call", "list_cluster_call", "response_key", "verbose", "verbose"]], "verbose": [["self", "_list_all", "api_call", "list_cluster_call", "response_key", "verbose", "verbose"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "verbose": [["str", 0.4571322404397468], ["bool", 0.08163784839551719], ["int", 0.08163784839551719]]}, "q_name": "EksHook.list_clusters", "ret_exprs": ["return self._list_all(api_call=list_cluster_call, response_key=\"clusters\", verbose=verbose)"], "ret_type": "builtins.list", "ret_type_p": [["int", 0.38993169310391934], ["str", 0.19577631154135244]], "variables": {"eks_client": "", "list_cluster_call": ""}, "variables_p": {"eks_client": [["str", 0.3350288809857697]], "list_cluster_call": [["bytes", 0.21991673367420228], ["Dict[str, Union[int, str]]", 0.12022744167498471], ["str", 0.09245965915786161]]}}, {"docstring": {"func": "Lists all Amazon EKS managed node groups associated with the specified cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.list_nodegroups`", "ret": "A List of nodegroup names within the given cluster."}, "fn_lc": [[459, 4], [478, 104]], "fn_var_ln": {"eks_client": [[475, 8], [475, 18]], "list_nodegroups_call": [[476, 8], [476, 28]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["list_nodegroups_call", "partial", "eks_client", "list_nodegroups", "clusterName", "clusterName"]], "list_nodegroups_call": [["list_nodegroups_call", "partial", "eks_client", "list_nodegroups", "clusterName", "clusterName"], ["self", "_list_all", "api_call", "list_nodegroups_call", "response_key", "verbose", "verbose"]]}, "name": "list_nodegroups", "params": {"clusterName": "builtins.str", "self": "", "verbose": "builtins.bool"}, "params_descr": {"clusterName": "The name of the Amazon EKS Cluster containing nodegroups to list.", "self": "", "verbose": "Provides additional logging if set to True.  Defaults to False."}, "params_occur": {"clusterName": [["list_nodegroups_call", "partial", "eks_client", "list_nodegroups", "clusterName", "clusterName"]], "self": [["eks_client", "self", "conn"], ["self", "_list_all", "api_call", "list_nodegroups_call", "response_key", "verbose", "verbose"]], "verbose": [["self", "_list_all", "api_call", "list_nodegroups_call", "response_key", "verbose", "verbose"]]}, "params_p": {"args": [], "clusterName": [["str", 0.746881908064059], ["List[str]", 0.14318872277225814], ["Optional[str]", 0.10992936916368287]], "kwargs": [], "self": [], "verbose": [["str", 0.9116524833785995]]}, "q_name": "EksHook.list_nodegroups", "ret_exprs": ["return self._list_all(api_call=list_nodegroups_call, response_key=\"nodegroups\", verbose=verbose)"], "ret_type": "builtins.list", "ret_type_p": [["int", 0.38993169310391934], ["str", 0.19577631154135244]], "variables": {"eks_client": "", "list_nodegroups_call": ""}, "variables_p": {"eks_client": [["str", 0.2964985092387103], ["bool", 0.08649231537602933], ["Dict[str, Any]", 0.07946727472161849]], "list_nodegroups_call": [["Dict[str, Union[int, str]]", 0.09469551126912819], ["str", 0.08549150674797362]]}}, {"docstring": {"func": "Lists all AWS Fargate profiles associated with the specified cluster.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`EKS.Client.list_fargate_profiles`", "ret": "A list of Fargate profile names within a given cluster."}, "fn_lc": [[480, 4], [501, 9]], "fn_var_ln": {"eks_client": [[496, 8], [496, 18]], "list_fargate_profiles_call": [[497, 8], [497, 34]]}, "fn_var_occur": {"eks_client": [["eks_client", "self", "conn"], ["list_fargate_profiles_call", "partial", "eks_client", "list_fargate_profiles", "clusterName", "clusterName"]], "list_fargate_profiles_call": [["list_fargate_profiles_call", "partial", "eks_client", "list_fargate_profiles", "clusterName", "clusterName"], ["self", "_list_all", "api_call", "list_fargate_profiles_call", "response_key", "verbose", "verbose"]]}, "name": "list_fargate_profiles", "params": {"clusterName": "builtins.str", "self": "", "verbose": "builtins.bool"}, "params_descr": {"clusterName": "The name of the Amazon EKS Cluster containing Fargate profiles to list.", "self": "", "verbose": "Provides additional logging if set to True.  Defaults to False."}, "params_occur": {"clusterName": [["list_fargate_profiles_call", "partial", "eks_client", "list_fargate_profiles", "clusterName", "clusterName"]], "self": [["eks_client", "self", "conn"], ["self", "_list_all", "api_call", "list_fargate_profiles_call", "response_key", "verbose", "verbose"]], "verbose": [["self", "_list_all", "api_call", "list_fargate_profiles_call", "response_key", "verbose", "verbose"]]}, "params_p": {"args": [], "clusterName": [["str", 0.66679994212414], ["List[str]", 0.15049786548486221], ["Optional[str]", 0.09615953919586086], ["Set[str]", 0.08654265319513693]], "kwargs": [], "self": [], "verbose": [["str", 0.6265784210740314], ["tuple", 0.2048671607771174]]}, "q_name": "EksHook.list_fargate_profiles", "ret_exprs": ["return self._list_all( api_call=list_fargate_profiles_call, response_key=\"fargateProfileNames\", verbose=verbose)"], "ret_type": "builtins.list", "ret_type_p": [["int", 0.28316373503943737], ["str", 0.21818546361056596], ["List[str]", 0.1910681233873387]], "variables": {"eks_client": "", "list_fargate_profiles_call": ""}, "variables_p": {"eks_client": [["str", 0.09691984351000028], ["bool", 0.08926175246940077]], "list_fargate_profiles_call": [["str", 0.3371453857360677]]}}, {"docstring": {"func": "Repeatedly calls a provided boto3 API Callable and collates the responses into a List.", "long_descr": null, "ret": "A List of the combined results of the provided API call."}, "fn_lc": [[503, 4], [526, 30]], "fn_var_ln": {"name_collection": [[513, 8], [513, 23]], "response": [[517, 12], [517, 20]], "token": [[520, 12], [520, 17]]}, "fn_var_occur": {"name_collection": [["name_collection", "builtins", "list"], ["name_collection", "filter", "None", "response", "get", "response_key"], ["self", "log", "info", "len", "name_collection", "response_key"], ["self", "log", "info", "response_key", "title", "name_collection"]], "response": [["response", "api_call", "nextToken", "token"], ["name_collection", "filter", "None", "response", "get", "response_key"], ["token", "response", "get"]], "token": [["token", "DEFAULT_PAGINATION_TOKEN"], ["token", "None"], ["response", "api_call", "nextToken", "token"], ["token", "response", "get"]]}, "name": "_list_all", "params": {"api_call": "typing.Callable", "response_key": "builtins.str", "self": "", "verbose": "builtins.bool"}, "params_descr": {"api_call": "The api command to execute.", "response_key": "Which dict key to collect into the final list.", "self": "", "verbose": "Provides additional logging if set to True.  Defaults to False."}, "params_occur": {"api_call": [["response", "api_call", "nextToken", "token"]], "response_key": [["name_collection", "filter", "None", "response", "get", "response_key"], ["self", "log", "info", "len", "name_collection", "response_key"], ["self", "log", "info", "response_key", "title", "name_collection"]], "self": [["self", "log", "info", "len", "name_collection", "response_key"], ["self", "log", "info", "response_key", "title", "name_collection"]], "verbose": []}, "params_p": {"api_call": [["str", 0.5834563781648846], ["bool", 0.11373571770969133], ["List[str]", 0.11249125506470264]], "args": [], "kwargs": [], "response_key": [["str", 0.2892099916630651], ["Type[object]", 0.10142322400548198], ["raiden.utils.Any", 0.10089884659223605], ["Optional[Any]", 0.09805946681247947]], "self": [], "verbose": [["bool", 0.3809731811355722], ["List[Dict[str, Any]]", 0.25507778525443464], ["Callable", 0.0987577156426483]]}, "q_name": "EksHook._list_all", "ret_exprs": ["return name_collection"], "ret_type": "builtins.list", "ret_type_p": [["str", 0.6249636089242234]], "variables": {"name_collection": "builtins.list", "response": "", "token": ""}, "variables_p": {"name_collection": [["str", 0.792546681161643], ["list", 0.11100679073596821], ["List[str]", 0.09644652810238893]], "response": [["dict", 0.2571358994498513], ["Dict[str, str]", 0.12614652673263768], ["str", 0.10448010247382537], ["tuple", 0.09288954051313707], ["list", 0.09001311310809426]], "token": [["dict", 0.3116429373717418], ["Optional[dict]", 0.23782307924389517], ["Optional[str]", 0.17644769054251472], ["Optional[Dict[str, str]]", 0.09021578470391588]]}}, {"docstring": {"func": "Writes the kubeconfig file given an EKS Cluster.", "long_descr": null, "ret": null}, "fn_lc": [[529, 4], [609, 34]], "fn_var_ln": {"cluster": [[544, 8], [544, 15]], "cluster_cert": [[545, 8], [545, 20]], "cluster_config": [[548, 8], [548, 22]], "cluster_ep": [[546, 8], [546, 18]], "config_text": [[604, 8], [604, 19]], "eks_client": [[541, 8], [541, 18]]}, "fn_var_occur": {"cluster": [["cluster", "eks_client", "describe_cluster", "name", "eks_cluster_name"], ["cluster_cert", "cluster"], ["cluster_ep", "cluster"]], "cluster_cert": [["cluster_cert", "cluster"], ["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]], "cluster_config": [["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"], ["config_text", "yaml", "dump", "cluster_config", "default_flow_style", "False"]], "cluster_ep": [["cluster_ep", "cluster"], ["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]], "config_text": [["config_text", "yaml", "dump", "cluster_config", "default_flow_style", "False"], ["config_file", "write", "config_text"]], "eks_client": [["eks_client", "self", "conn"], ["cluster", "eks_client", "describe_cluster", "name", "eks_cluster_name"]]}, "name": "generate_config_file", "params": {"eks_cluster_name": "builtins.str", "pod_namespace": "str | None", "self": ""}, "params_descr": {"eks_cluster_name": "The name of the cluster to generate kubeconfig file for.", "pod_namespace": "The namespace to run within kubernetes.", "self": ""}, "params_occur": {"eks_cluster_name": [["cluster", "eks_client", "describe_cluster", "name", "eks_cluster_name"], ["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]], "pod_namespace": [["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]], "self": [["eks_client", "self", "conn"], ["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]]}, "params_p": {"args": [], "eks_cluster_name": [["str", 0.8022299291118532]], "kwargs": [], "pod_namespace": [["str", 0.6317709534625556], ["int", 0.08845196867650594]], "self": []}, "q_name": "EksHook.generate_config_file", "ret_exprs": [], "ret_type": "typing.Generator[builtins.str, None, None]", "variables": {"cluster": "", "cluster_cert": "", "cluster_config": "", "cluster_ep": "", "config_text": "", "eks_client": ""}, "variables_p": {"cluster": [["str", 0.5157011712753281], ["Set[str]", 0.09653065433162364], ["Dict[str, List[Any]]", 0.09576418988406664], ["dict", 0.09036019935368696]], "cluster_cert": [], "cluster_config": [["Dict[Any, Union[int, str]]", 0.2592883293549563], ["Dict[str, Dict[str, str]]", 0.12725133389014268], ["Dict[str, Dict[str, Any]]", 0.09542305620719732], ["Dict[str, Union[Any, Any]]", 0.09542305620719732], ["Dict[Any, Union[Any, Any, Any, Any]]", 0.08502761750497688]], "cluster_ep": [], "config_text": [["str", 0.7957123129063874], ["Optional[str]", 0.09917724682295972]], "eks_client": [["str", 0.31319952735151746], ["Dict[str, Union[Any, Any]]", 0.2738050831038148], ["Dict[str, str]", 0.20033405369552804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[611, 4], [645, 53]], "fn_var_ln": {"base64_url": [[642, 8], [642, 18]], "request_params": [[627, 8], [627, 22]], "service_id": [[613, 8], [613, 18]], "session": [[612, 8], [612, 15]], "signed_url": [[635, 8], [635, 18]], "signer": [[618, 8], [618, 14]], "sts_url": [[614, 8], [614, 15]]}, "fn_var_occur": {"base64_url": [["base64_url", "base64", "urlsafe_b64encode", "signed_url", "encode", "decode"], ["base64_url", "rstrip"]], "request_params": [["request_params", "sts_url", "eks_cluster_name"], ["signed_url", "signer", "generate_presigned_url", "request_dict", "request_params", "region_name", "session", "region_name", "expires_in", "STS_TOKEN_EXPIRES_IN", "operation_name"]], "service_id": [["service_id", "self", "conn", "meta", "service_model", "service_id"], ["signer", "RequestSigner", "service_id", "service_id", "region_name", "session", "region_name", "signing_name", "signature_version", "credentials", "session", "get_credentials", "event_emitter", "session", "events"]], "session": [["session", "self", "get_session"], ["sts_url", "session", "region_name"], ["signer", "RequestSigner", "service_id", "service_id", "region_name", "session", "region_name", "signing_name", "signature_version", "credentials", "session", "get_credentials", "event_emitter", "session", "events"], ["signed_url", "signer", "generate_presigned_url", "request_dict", "request_params", "region_name", "session", "region_name", "expires_in", "STS_TOKEN_EXPIRES_IN", "operation_name"]], "signed_url": [["signed_url", "signer", "generate_presigned_url", "request_dict", "request_params", "region_name", "session", "region_name", "expires_in", "STS_TOKEN_EXPIRES_IN", "operation_name"], ["base64_url", "base64", "urlsafe_b64encode", "signed_url", "encode", "decode"]], "signer": [["signer", "RequestSigner", "service_id", "service_id", "region_name", "session", "region_name", "signing_name", "signature_version", "credentials", "session", "get_credentials", "event_emitter", "session", "events"], ["signed_url", "signer", "generate_presigned_url", "request_dict", "request_params", "region_name", "session", "region_name", "expires_in", "STS_TOKEN_EXPIRES_IN", "operation_name"]], "sts_url": [["sts_url", "session", "region_name"], ["request_params", "sts_url", "eks_cluster_name"]]}, "name": "fetch_access_token_for_cluster", "params": {"eks_cluster_name": "builtins.str", "self": ""}, "params_descr": {"eks_cluster_name": "", "self": ""}, "params_occur": {"eks_cluster_name": [["request_params", "sts_url", "eks_cluster_name"]], "self": [["session", "self", "get_session"], ["service_id", "self", "conn", "meta", "service_model", "service_id"]]}, "params_p": {"args": [], "eks_cluster_name": [["str", 0.8004860327091868]], "kwargs": [], "self": []}, "q_name": "EksHook.fetch_access_token_for_cluster", "ret_exprs": ["return \"k8s-aws-v1.\" + base64_url.rstrip(\"=\")"], "ret_type": "builtins.str", "ret_type_p": [["dict", 0.21522730041454957], ["str", 0.16474741646941932], ["Optional[dict]", 0.15311366303591475], ["Optional[str]", 0.14065368320894833], ["Dict[str, Any]", 0.0918607267564074], ["type", 0.07781864728288268], ["Union[str, None]", 0.07656588520601398]], "variables": {"base64_url": "", "request_params": "", "service_id": "", "session": "", "signed_url": "", "signer": "", "sts_url": ""}, "variables_p": {"base64_url": [["str", 0.42691364773126694], ["Dict[str, str]", 0.1701504231215376], ["Dict[str, Dict[str, str]]", 0.1262339464563466], ["Dict[str, Any]", 0.11235232908903443]], "request_params": [["str", 0.31898523542025436], ["Dict[str, str]", 0.23745590916082798], ["dict", 0.1857603279672927], ["Dict[str, Any]", 0.16295999952829443], ["Dict[str, List[str]]", 0.09483852792333043]], "service_id": [["Dict[str, str]", 0.5064775031000979], ["int", 0.30671343610700025], ["str", 0.09379937485331237], ["list", 0.09300968593958978]], "session": [["Dict[str, Any]", 0.3308231814479372], ["dict", 0.1183019855719704], ["Dict[str, str]", 0.09421921030399641], ["List[str]", 0.07858128066289886]], "signed_url": [["str", 0.70481956264612], ["Dict[str, str]", 0.08455977349272187], ["Dict[str, Any]", 0.08425100042756874]], "signer": [["str", 0.49612133897909827], ["float", 0.14665224181940617], ["Dict[str, List[Any]]", 0.08175878529731014]], "sts_url": [["str", 0.9999999999999999]]}}], "name": "EksHook", "q_name": "EksHook", "variables": {"client_type": ""}, "variables_p": {"client_type": [["str", 0.4999999997441833], ["list", 0.4999999997441833], ["dict", 6.666226349317171e-11], ["Dict[str, Union[Any, Any]]", 6.666226349317171e-11], ["Dict[str, Any]", 6.666226349317171e-11]]}}], "funcs": [], "imports": ["__future__", "annotations", "base64", "json", "sys", "tempfile", "contextlib", "contextmanager", "enum", "Enum", "functools", "partial", "typing", "Callable", "Generator", "botocore", "exceptions", "ClientError", "botocore", "signers", "RequestSigner", "airflow", "providers", "amazon", "aws", "hooks", "base_aws", "AwsBaseHook", "airflow", "utils", "yaml", "airflow", "utils", "json", "AirflowJsonEncoder"], "mod_var_ln": {"AUTHENTICATION_API_VERSION": [[38, 0], [38, 26]], "DEFAULT_PAGINATION_TOKEN": [[36, 0], [36, 24]], "STS_TOKEN_EXPIRES_IN": [[37, 0], [37, 20]], "_CONTEXT_NAME": [[40, 0], [40, 13]], "_POD_USERNAME": [[39, 0], [39, 13]]}, "mod_var_occur": {"AUTHENTICATION_API_VERSION": [["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]], "DEFAULT_PAGINATION_TOKEN": [["token", "DEFAULT_PAGINATION_TOKEN"]], "STS_TOKEN_EXPIRES_IN": [["signed_url", "signer", "generate_presigned_url", "request_dict", "request_params", "region_name", "session", "region_name", "expires_in", "STS_TOKEN_EXPIRES_IN", "operation_name"]], "_CONTEXT_NAME": [["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]], "_POD_USERNAME": [["cluster_config", "cluster_ep", "cluster_cert", "eks_cluster_name", "eks_cluster_name", "pod_namespace", "_POD_USERNAME", "_CONTEXT_NAME", "_CONTEXT_NAME", "_POD_USERNAME", "AUTHENTICATION_API_VERSION", "sys", "executable", "self", "region_name", "self", "region_name", "None", "self", "aws_conn_id", "self", "aws_conn_id", "None", "eks_cluster_name"]]}, "no_types_annot": {"D": 61, "I": 0, "U": 78}, "session_id": "VeP9M2smjzWX0GWgxJGHOmChuKoApiI8dYpe067gyfI", "set": null, "tc": [false, null], "type_annot_cove": 0.44, "typed_seq": "", "untyped_seq": "", "variables": {"AUTHENTICATION_API_VERSION": "", "DEFAULT_PAGINATION_TOKEN": "", "STS_TOKEN_EXPIRES_IN": "", "_CONTEXT_NAME": "", "_POD_USERNAME": ""}, "variables_p": {"AUTHENTICATION_API_VERSION": [["int", 0.3927911122216352], ["str", 0.29211049879126405], ["pydcop.utils.expressionfunction.ExpressionFunction", 0.09413459407993682]], "DEFAULT_PAGINATION_TOKEN": [["Dict[str, List[Any]]", 0.4295966350136287], ["bool", 0.4205298990922918], ["str", 0.1498734658940793]], "STS_TOKEN_EXPIRES_IN": [["Dict[str, str]", 0.3033396545192845], ["int", 0.22465121242967337], ["Dict[str, Any]", 0.18388138529946052], ["\"OrderedDict[str, float]\"", 0.09690475939912555], ["List[str]", 0.09643404136825338]], "_CONTEXT_NAME": [["str", 0.36825675271412905], ["Tuple[str, str, str]", 0.14783195199969987], ["myia.utils.misc.Named", 0.12150943225842], ["int", 0.08659640358241394]], "_POD_USERNAME": [["Dict[str, str]", 0.306114404441622], ["Dict[str, Any]", 0.13248176811683088], ["dict", 0.1095138275910861]]}}}