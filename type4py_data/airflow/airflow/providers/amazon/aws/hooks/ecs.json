{"error": null, "response": {"classes": [{"cls_lc": [[49, 0], [56, 25]], "cls_var_ln": {"ACTIVE": [[52, 4], [52, 10]], "DEPROVISIONING": [[54, 4], [54, 18]], "FAILED": [[55, 4], [55, 10]], "INACTIVE": [[56, 4], [56, 12]], "PROVISIONING": [[53, 4], [53, 16]]}, "cls_var_occur": {"ACTIVE": [], "DEPROVISIONING": [], "FAILED": [], "INACTIVE": [], "PROVISIONING": []}, "funcs": [], "name": "EcsClusterStates", "q_name": "EcsClusterStates", "variables": {"ACTIVE": "", "DEPROVISIONING": "", "FAILED": "", "INACTIVE": "", "PROVISIONING": ""}, "variables_p": {"ACTIVE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "DEPROVISIONING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "FAILED": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "INACTIVE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "PROVISIONING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[59, 0], [64, 45]], "cls_var_ln": {"ACTIVE": [[62, 4], [62, 10]], "DELETE_IN_PROGRESS": [[64, 4], [64, 22]], "INACTIVE": [[63, 4], [63, 12]]}, "cls_var_occur": {"ACTIVE": [], "DELETE_IN_PROGRESS": [], "INACTIVE": []}, "funcs": [], "name": "EcsTaskDefinitionStates", "q_name": "EcsTaskDefinitionStates", "variables": {"ACTIVE": "", "DELETE_IN_PROGRESS": "", "INACTIVE": ""}, "variables_p": {"ACTIVE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "DELETE_IN_PROGRESS": [["int", 0.4424163086619265], ["bool", 0.38016836255348785], ["Optional[int]", 0.0898728260014884], ["Optional[bool]", 0.0875425027830973]], "INACTIVE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[67, 0], [78, 17]], "cls_var_ln": {"ACTIVATING": [[72, 4], [72, 14]], "DEACTIVATING": [[74, 4], [74, 16]], "DEPROVISIONING": [[76, 4], [76, 18]], "NONE": [[78, 4], [78, 8]], "PENDING": [[71, 4], [71, 11]], "PROVISIONING": [[70, 4], [70, 16]], "RUNNING": [[73, 4], [73, 11]], "STOPPED": [[77, 4], [77, 11]], "STOPPING": [[75, 4], [75, 12]]}, "cls_var_occur": {"ACTIVATING": [], "DEACTIVATING": [], "DEPROVISIONING": [], "NONE": [], "PENDING": [], "PROVISIONING": [], "RUNNING": [], "STOPPED": [], "STOPPING": []}, "funcs": [], "name": "EcsTaskStates", "q_name": "EcsTaskStates", "variables": {"ACTIVATING": "", "DEACTIVATING": "", "DEPROVISIONING": "", "NONE": "", "PENDING": "", "PROVISIONING": "", "RUNNING": "", "STOPPED": "", "STOPPING": ""}, "variables_p": {"ACTIVATING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "DEACTIVATING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "DEPROVISIONING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "NONE": [["str", 0.7], ["int", 0.3]], "PENDING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "PROVISIONING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "RUNNING": [["int", 0.7], ["bool", 0.1], ["str", 0.1]], "STOPPED": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "STOPPING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[81, 0], [135, 96]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [98, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "__init__", "args", "kwargs"]], "kwargs": [["super", "__init__", "args", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "EcsHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get ECS Cluster state.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`ECS.Client.describe_clusters`", "ret": null}, "fn_lc": [[100, 4], [109, 92]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_cluster_state", "params": {"cluster_name": "builtins.str", "self": ""}, "params_descr": {"cluster_name": "ECS Cluster name or full cluster Amazon Resource Name (ARN) entry.", "self": ""}, "params_occur": {"cluster_name": [["self", "conn", "describe_clusters", "clusters", "cluster_name"]], "self": [["self", "conn", "describe_clusters", "clusters", "cluster_name"]]}, "params_p": {"args": [], "cluster_name": [["str", 0.7232423735705886], ["bool", 0.10046048539801358], ["dict", 0.08814857051569885]], "kwargs": [], "self": []}, "q_name": "EcsHook.get_cluster_state", "ret_exprs": ["return self.conn.describe_clusters(clusters=[cluster_name])[\"clusters\"][0][\"status\"]"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.5249987591877426]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get ECS Task Definition state.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`ECS.Client.describe_task_definition`", "ret": null}, "fn_lc": [[111, 4], [122, 109]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_task_definition_state", "params": {"self": "", "task_definition": "builtins.str"}, "params_descr": {"self": "", "task_definition": "The family for the latest ACTIVE revision,\nfamily and revision ( family:revision ) for a specific revision in the family,\nor full Amazon Resource Name (ARN) of the task definition to describe."}, "params_occur": {"self": [["self", "conn", "describe_task_definition", "taskDefinition", "task_definition"]], "task_definition": [["self", "conn", "describe_task_definition", "taskDefinition", "task_definition"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_definition": [["dict", 0.10349314821444298], ["str", 0.09682740902102142]]}, "q_name": "EcsHook.get_task_definition_state", "ret_exprs": ["return self.conn.describe_task_definition(taskDefinition=task_definition)[\"taskDefinition\"][\"status\"]"], "ret_type": "builtins.str", "ret_type_p": [["int", 0.22900981565088638], ["Dict[str, Any]", 0.17599164436905487], ["dict", 0.1293561065416573]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get ECS Task state.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`ECS.Client.describe_tasks`", "ret": null}, "fn_lc": [[124, 4], [135, 96]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_task_state", "params": {"cluster": "", "self": "", "task": ""}, "params_descr": {"cluster": "The short name or full Amazon Resource Name (ARN)\nof the cluster that hosts the task or tasks to describe.", "self": "", "task": "Task ID or full ARN entry."}, "params_occur": {"cluster": [["self", "conn", "describe_tasks", "cluster", "cluster", "tasks", "task"]], "self": [["self", "conn", "describe_tasks", "cluster", "cluster", "tasks", "task"]], "task": [["self", "conn", "describe_tasks", "cluster", "cluster", "tasks", "task"]]}, "params_p": {"args": [], "cluster": [["Dict[str, Any]", 0.12418955944590175], ["int", 0.10294561174157146]], "kwargs": [], "self": [], "task": [["Dict[str, Any]", 0.12418955944590175], ["int", 0.10294561174157146]]}, "q_name": "EcsHook.get_task_state", "ret_exprs": ["return self.conn.describe_tasks(cluster=cluster, tasks=[task])[\"tasks\"][0][\"lastStatus\"]"], "ret_type": "builtins.str", "ret_type_p": [["Dict[str, Any]", 0.08649949365660378], ["List['ValidatorRecord']", 0.08649949365660378]], "variables": {}, "variables_p": {}}], "name": "EcsHook", "q_name": "EcsHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[139, 0], [191, 11]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Run a task.", "long_descr": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html#ECS.Client.run_task", "ret": null}, "fn_lc": [[151, 4], [156, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "run_task", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "EcsProtocol.run_task", "ret_exprs": [], "ret_type": "builtins.dict", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get a waiter.", "long_descr": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html#ECS.Client.get_waiter", "ret": null}, "fn_lc": [[158, 4], [163, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_waiter", "params": {"self": "", "x": "builtins.str"}, "params_descr": {"self": "", "x": ""}, "params_occur": {"self": [], "x": []}, "params_p": {"args": [], "kwargs": [], "self": [], "x": [["float", 0.6]]}, "q_name": "EcsProtocol.get_waiter", "ret_exprs": [], "ret_type": "botocore.waiter.Waiter", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Describe tasks.", "long_descr": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html#ECS.Client.describe_tasks", "ret": null}, "fn_lc": [[165, 4], [170, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "describe_tasks", "params": {"cluster": "builtins.str", "self": "", "tasks": ""}, "params_descr": {"cluster": "", "self": "", "tasks": ""}, "params_occur": {"cluster": [], "self": [], "tasks": []}, "params_p": {"args": [], "cluster": [["bool", 0.09498650251629673], ["Dict[str, str]", 0.08252879302533069]], "kwargs": [], "self": [], "tasks": [["bool", 0.09498650251629673], ["Dict[str, str]", 0.08252879302533069]]}, "q_name": "EcsProtocol.describe_tasks", "ret_exprs": [], "ret_type": "builtins.dict", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Stop a task.", "long_descr": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html#ECS.Client.stop_task", "ret": null}, "fn_lc": [[172, 4], [177, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "stop_task", "params": {"cluster": "", "reason": "builtins.str", "self": "", "task": ""}, "params_descr": {"cluster": "", "reason": "", "self": "", "task": ""}, "params_occur": {"cluster": [], "reason": [], "self": [], "task": []}, "params_p": {"args": [], "cluster": [["bool", 0.09498650251629673], ["Dict[str, str]", 0.08252879302533069]], "kwargs": [], "reason": [["bool", 0.09498650251629673], ["Dict[str, str]", 0.08252879302533069]], "self": [], "task": [["bool", 0.09498650251629673], ["Dict[str, str]", 0.08252879302533069]]}, "q_name": "EcsProtocol.stop_task", "ret_exprs": [], "ret_type": "builtins.dict", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Describe a task definition.", "long_descr": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html#ECS.Client.describe_task_definition", "ret": null}, "fn_lc": [[179, 4], [184, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "describe_task_definition", "params": {"self": "", "taskDefinition": "builtins.str"}, "params_descr": {"self": "", "taskDefinition": ""}, "params_occur": {"self": [], "taskDefinition": []}, "params_p": {"args": [], "kwargs": [], "self": [], "taskDefinition": [["dict", 0.999999997906723], ["bool", 1.5160716056524192e-09], ["Callable", 1.1417466955732189e-10]]}, "q_name": "EcsProtocol.describe_task_definition", "ret_exprs": [], "ret_type": "builtins.dict", "variables": {}, "variables_p": {}}, {"docstring": {"func": "List tasks.", "long_descr": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html#ECS.Client.list_tasks", "ret": null}, "fn_lc": [[186, 4], [191, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "list_tasks", "params": {"cluster": "builtins.str", "desiredStatus": "builtins.str", "family": "builtins.str", "launchType": "builtins.str", "self": ""}, "params_descr": {"cluster": "", "desiredStatus": "", "family": "", "launchType": "", "self": ""}, "params_occur": {"cluster": [], "desiredStatus": [], "family": [], "launchType": [], "self": []}, "params_p": {"args": [], "cluster": [["bool", 0.2855211619158955], ["str", 0.10342646614845781], ["Optional[str]", 0.10342646614845781], ["Iterable[Dict[str, Any]]", 0.08104522456221092]], "desiredStatus": [["bool", 0.2855211619158955], ["str", 0.10342646614845781], ["Optional[str]", 0.10342646614845781], ["Iterable[Dict[str, Any]]", 0.08104522456221092]], "family": [["bool", 0.2855211619158955], ["str", 0.10342646614845781], ["Optional[str]", 0.10342646614845781], ["Iterable[Dict[str, Any]]", 0.08104522456221092]], "kwargs": [], "launchType": [["bool", 0.2855211619158955], ["str", 0.10342646614845781], ["Optional[str]", 0.10342646614845781], ["Iterable[Dict[str, Any]]", 0.08104522456221092]], "self": []}, "q_name": "EcsProtocol.list_tasks", "ret_exprs": [], "ret_type": "builtins.dict", "variables": {}, "variables_p": {}}], "name": "EcsProtocol", "q_name": "EcsProtocol", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Check if exception is related to ECS resource quota (CPU, MEM).", "long_descr": null, "ret": null}, "fn_lc": [[28, 0], [36, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "should_retry", "params": {"exception": "builtins.Exception"}, "params_descr": {"exception": ""}, "params_occur": {"exception": [["isinstance", "exception", "EcsOperatorError"], ["any", "quota_reason", "failure", "quota_reason", "failure", "exception", "failures"]]}, "params_p": {"args": [], "exception": [["str", 0.21498108440724062]], "kwargs": []}, "q_name": "should_retry", "ret_exprs": ["return any( quota_reason in failure[\"reason\"] for quota_reason in [\"RESOURCE:MEMORY\", \"RESOURCE:CPU\"] for failure in exception.failures)", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.4875266266764822], ["str", 0.1081732517405846], ["int", 0.1010212445179599], ["Optional[int]", 0.09750532533529645]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if exception is related to ENI (Elastic Network Interfaces).", "long_descr": null, "ret": null}, "fn_lc": [[39, 0], [46, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "should_retry_eni", "params": {"exception": "builtins.Exception"}, "params_descr": {"exception": ""}, "params_occur": {"exception": [["isinstance", "exception", "EcsTaskFailToStart"], ["any", "eni_reason", "exception", "message", "eni_reason"]]}, "params_p": {"args": [], "exception": [["str", 0.10729088712026846], ["Dict[str, Any]", 0.09649381046689515]], "kwargs": []}, "q_name": "should_retry_eni", "ret_exprs": ["return any( eni_reason in exception.message for eni_reason in [\"network interface provisioning\", \"ResourceInitializationError\"])", "return False"], "ret_type": "", "ret_type_p": [["str", 0.1092148867680525], ["int", 0.10236336237612953], ["tuple", 0.09478343114212165], ["List[str]", 0.09458493978553477], ["bool", 0.09455977316982785], ["Optional[int]", 0.09455977316982785]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "botocore", "waiter", "Waiter", "airflow", "providers", "amazon", "aws", "exceptions", "EcsOperatorError", "EcsTaskFailToStart", "airflow", "providers", "amazon", "aws", "hooks", "base_aws", "AwsGenericHook", "airflow", "providers", "amazon", "aws", "utils", "_StringCompareEnum", "airflow", "typing_compat", "Protocol", "runtime_checkable"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 22, "I": 0, "U": 27}, "session_id": "D-HaY7DtUOeuNgGi_60SUcb1HcCgEm8tHQUcXh4zViQ", "set": null, "tc": [false, null], "type_annot_cove": 0.45, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}