{"error": null, "response": {"classes": [{"cls_lc": [[27, 0], [194, 82]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [43, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "__init__", "client_type", "args", "kwargs"]], "kwargs": [["super", "__init__", "client_type", "args", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "GlueCatalogHook.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Retrieves the partition values for a table.", "long_descr": ".. seealso::\n    - :external+boto3:py:class:`Glue.Paginator.GetPartitions`", "ret": "set of partition values where each value is a tuple since\na partition may be composed of multiple columns. For example:\n``{('2018-01-01','1'), ('2018-01-01','2')}``"}, "fn_lc": [[45, 4], [85, 25]], "fn_var_ln": {"config": [[70, 8], [70, 14]], "paginator": [[75, 8], [75, 17]], "partitions": [[80, 8], [80, 18]], "response": [[76, 8], [76, 16]]}, "fn_var_occur": {"config": [["config", "page_size", "max_items"], ["response", "paginator", "paginate", "DatabaseName", "database_name", "TableName", "table_name", "Expression", "expression", "PaginationConfig", "config"]], "paginator": [["paginator", "self", "get_conn", "get_paginator"], ["response", "paginator", "paginate", "DatabaseName", "database_name", "TableName", "table_name", "Expression", "expression", "PaginationConfig", "config"]], "partitions": [["partitions", "set"], ["partitions", "add", "tuple", "partition"]], "response": [["response", "paginator", "paginate", "DatabaseName", "database_name", "TableName", "table_name", "Expression", "expression", "PaginationConfig", "config"]]}, "name": "get_partitions", "params": {"database_name": "builtins.str", "expression": "builtins.str", "max_items": "int | None", "page_size": "int | None", "self": "", "table_name": "builtins.str"}, "params_descr": {"database_name": "The name of the catalog database where the partitions reside.", "expression": "An expression filtering the partitions to be returned.\nPlease see official AWS documentation for further information.\nhttps://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-partitions.html#aws-glue-api-catalog-partitions-GetPartitions", "max_items": "maximum items to return", "page_size": "pagination size", "self": "", "table_name": "The name of the partitions' table."}, "params_occur": {"database_name": [["response", "paginator", "paginate", "DatabaseName", "database_name", "TableName", "table_name", "Expression", "expression", "PaginationConfig", "config"]], "expression": [["response", "paginator", "paginate", "DatabaseName", "database_name", "TableName", "table_name", "Expression", "expression", "PaginationConfig", "config"]], "max_items": [["config", "page_size", "max_items"]], "page_size": [["config", "page_size", "max_items"]], "self": [["paginator", "self", "get_conn", "get_paginator"]], "table_name": [["response", "paginator", "paginate", "DatabaseName", "database_name", "TableName", "table_name", "Expression", "expression", "PaginationConfig", "config"]]}, "params_p": {"args": [], "database_name": [["str", 0.7849203174776014], ["bool", 0.11394471708592947], ["Optional[Dict[str, str]]", 0.10113496543646922]], "expression": [["str", 0.7849203174776014], ["bool", 0.11394471708592947], ["Optional[Dict[str, str]]", 0.10113496543646922]], "kwargs": [], "max_items": [["int", 0.5963882419574655], ["Tuple[int, int]", 0.12199554729235351], ["Optional[int]", 0.09178231915082348], ["bool", 0.08957689397895323]], "page_size": [["int", 0.5963882419574655], ["Tuple[int, int]", 0.12199554729235351], ["Optional[int]", 0.09178231915082348], ["bool", 0.08957689397895323]], "self": [], "table_name": [["str", 0.7849203174776014], ["bool", 0.11394471708592947], ["Optional[Dict[str, str]]", 0.10113496543646922]]}, "q_name": "GlueCatalogHook.get_partitions", "ret_exprs": ["return partitions"], "ret_type": "builtins.set[builtins.tuple]", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"config": "", "paginator": "", "partitions": "", "response": ""}, "variables_p": {"config": [["Dict[str, Any]", 0.2973151911356789], ["Dict[str, str]", 0.12738340488146177], ["str", 0.09894261180268311], ["Dict[Any, list]", 0.09371119426783482], ["MutableMapping[str, Any]", 0.09324343611156878]], "paginator": [["str", 0.7995545338902128], ["dict", 0.10805569270302251]], "partitions": [["Set[str]", 0.21708431776285184], ["Callable(len)[[Sized], int]", 0.18353329657144077], ["List[int]", 0.10854215888142592], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.10228829968201217], ["List[List[int]]", 0.09271182354865654], ["Type[Set[Any]]", 0.07166445141268961], ["List[str]", 0.06740514505597586]], "response": [["str", 0.25045878497988283], ["List[str]", 0.12982704160213981], ["dict", 0.10681921476201212], ["List[Union[Any, Any, Any, Any]]", 0.09139028483578424], ["Dict[int, str]", 0.09070903231047941], ["Dict[str, Union[Any, Any]]", 0.08480745404710946], ["int", 0.08363513779167724], ["Dict[str, Any]", 0.08032275238906732]]}}, {"docstring": {"func": "Checks whether a partition exists.", "long_descr": ".. code-block:: python\n\n    hook = GlueCatalogHook()\n    t = \"static_babynames_partitioned\"\n    hook.check_for_partition(\"airflow\", t, \"ds='2015-01-01'\")", "ret": null}, "fn_lc": [[87, 4], [103, 31]], "fn_var_ln": {"partitions": [[101, 8], [101, 18]]}, "fn_var_occur": {"partitions": [["partitions", "self", "get_partitions", "database_name", "table_name", "expression", "max_items"], ["bool", "partitions"]]}, "name": "check_for_partition", "params": {"database_name": "builtins.str", "expression": "builtins.str", "self": "", "table_name": "builtins.str"}, "params_descr": {"database_name": "Name of hive database (schema) @table belongs to", "expression": "", "self": "", "table_name": "Name of hive table @partition belongs to"}, "params_occur": {"database_name": [["partitions", "self", "get_partitions", "database_name", "table_name", "expression", "max_items"]], "expression": [["partitions", "self", "get_partitions", "database_name", "table_name", "expression", "max_items"]], "self": [["partitions", "self", "get_partitions", "database_name", "table_name", "expression", "max_items"]], "table_name": [["partitions", "self", "get_partitions", "database_name", "table_name", "expression", "max_items"]]}, "params_p": {"args": [], "database_name": [["str", 0.3951698097546874], ["Union[int, str]", 0.10478118094051724], ["int", 0.10198415322639251], ["List[str]", 0.10198415322639251], ["float", 0.10091397684749417], ["Optional[int]", 0.10091397684749417], ["Optional[List[\"custom_index\"]]", 0.09425274915702202]], "expression": [["str", 0.3951698097546874], ["Union[int, str]", 0.10478118094051724], ["int", 0.10198415322639251], ["List[str]", 0.10198415322639251], ["float", 0.10091397684749417], ["Optional[int]", 0.10091397684749417], ["Optional[List[\"custom_index\"]]", 0.09425274915702202]], "kwargs": [], "self": [], "table_name": [["str", 0.3951698097546874], ["Union[int, str]", 0.10478118094051724], ["int", 0.10198415322639251], ["List[str]", 0.10198415322639251], ["float", 0.10091397684749417], ["Optional[int]", 0.10091397684749417], ["Optional[List[\"custom_index\"]]", 0.09425274915702202]]}, "q_name": "GlueCatalogHook.check_for_partition", "ret_exprs": ["return bool(partitions)"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999998]], "variables": {"partitions": ""}, "variables_p": {"partitions": [["dict", 0.16625583156434814], ["Dict[str, Type[Any]]", 0.11269068656001967], ["str", 0.09776314363732495], ["bool", 0.08639212090615823]]}}, {"docstring": {"func": "Get the information of the table.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`Glue.Client.get_table`\n\n.. code-block:: python\n\n    hook = GlueCatalogHook()\n    r = hook.get_table(\"db\", \"table_foo\")\n    r[\"Name\"] = \"table_foo\"", "ret": null}, "fn_lc": [[105, 4], [123, 30]], "fn_var_ln": {"result": [[121, 8], [121, 14]]}, "fn_var_occur": {"result": [["result", "self", "get_conn", "get_table", "DatabaseName", "database_name", "Name", "table_name"]]}, "name": "get_table", "params": {"database_name": "builtins.str", "self": "", "table_name": "builtins.str"}, "params_descr": {"database_name": "Name of hive database (schema) @table belongs to", "self": "", "table_name": "Name of hive table"}, "params_occur": {"database_name": [["result", "self", "get_conn", "get_table", "DatabaseName", "database_name", "Name", "table_name"]], "self": [["result", "self", "get_conn", "get_table", "DatabaseName", "database_name", "Name", "table_name"]], "table_name": [["result", "self", "get_conn", "get_table", "DatabaseName", "database_name", "Name", "table_name"]]}, "params_p": {"args": [], "database_name": [["str", 0.8104951107298328], ["Optional[str]", 0.09506936126241694]], "kwargs": [], "self": [], "table_name": [["str", 0.8104951107298328], ["Optional[str]", 0.09506936126241694]]}, "q_name": "GlueCatalogHook.get_table", "ret_exprs": ["return result[\"Table\"]"], "ret_type": "builtins.dict", "ret_type_p": [["Optional[str]", 0.3282184717050544], ["list", 0.10587797786657173], ["int", 0.09718057510326135], ["Optional[Iterable[str]]", 0.09389465893484096], ["str", 0.08990784160958307], ["Optional[Iterable[Any]]", 0.08936757349547989]], "variables": {"result": ""}, "variables_p": {"result": [["str", 0.24557352560457435], ["dict", 0.09032329265944435]]}}, {"docstring": {"func": "Get the physical location of the table.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`Glue.Client.get_table`", "ret": null}, "fn_lc": [[125, 4], [137, 53]], "fn_var_ln": {"table": [[135, 8], [135, 13]]}, "fn_var_occur": {"table": [["table", "self", "get_table", "database_name", "table_name"]]}, "name": "get_table_location", "params": {"database_name": "builtins.str", "self": "", "table_name": "builtins.str"}, "params_descr": {"database_name": "Name of hive database (schema) @table belongs to", "self": "", "table_name": "Name of hive table"}, "params_occur": {"database_name": [["table", "self", "get_table", "database_name", "table_name"]], "self": [["table", "self", "get_table", "database_name", "table_name"]], "table_name": [["table", "self", "get_table", "database_name", "table_name"]]}, "params_p": {"args": [], "database_name": [["str", 1.0]], "kwargs": [], "self": [], "table_name": [["str", 1.0]]}, "q_name": "GlueCatalogHook.get_table_location", "ret_exprs": ["return table[\"StorageDescriptor\"][\"Location\"]"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.3939085990687311], ["Optional[str]", 0.21371177903708827], ["list", 0.08688445433859808], ["Optional[List[str]]", 0.08322252060767292]], "variables": {"table": ""}, "variables_p": {"table": [["str", 0.7751423114943354], ["Pattern[str]", 0.11712202708304312]]}}, {"docstring": {"func": "Gets a Partition.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`Glue.Client.get_partition`\n\n.. code-block:: python\n\n    hook = GlueCatalogHook()\n    partition = hook.get_partition(\"db\", \"table\", [\"string\"])\n    partition[\"Values\"]", "ret": null}, "fn_lc": [[139, 4], [166, 82]], "fn_var_ln": {"response": [[160, 12], [160, 20]]}, "fn_var_occur": {"response": [["response", "self", "get_conn", "get_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionValues", "partition_values"]]}, "name": "get_partition", "params": {"database_name": "builtins.str", "partition_values": "builtins.list[builtins.str]", "self": "", "table_name": "builtins.str"}, "params_descr": {"database_name": "Database name", "partition_values": "List of utf-8 strings that define the partition\nPlease see official AWS documentation for further information.\nhttps://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-partitions.html#aws-glue-api-catalog-partitions-GetPartition", "self": "", "table_name": "Database's Table name"}, "params_occur": {"database_name": [["response", "self", "get_conn", "get_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionValues", "partition_values"]], "partition_values": [["response", "self", "get_conn", "get_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionValues", "partition_values"]], "self": [["response", "self", "get_conn", "get_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionValues", "partition_values"], ["self", "log", "error", "e"]], "table_name": [["response", "self", "get_conn", "get_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionValues", "partition_values"]]}, "params_p": {"args": [], "database_name": [["str", 0.37977356005707286], ["Optional[str]", 0.3097633070115216], ["int", 0.10370027566023451]], "kwargs": [], "partition_values": [["str", 0.37977356005707286], ["Optional[str]", 0.3097633070115216], ["int", 0.10370027566023451]], "self": [], "table_name": [["str", 0.37977356005707286], ["Optional[str]", 0.3097633070115216], ["int", 0.10370027566023451]]}, "q_name": "GlueCatalogHook.get_partition", "ret_exprs": ["return response[\"Partition\"]"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.37990566188925406], ["List[str]", 0.09542973122388773], ["Dict[str, str]", 0.07688977419326679]], "variables": {"response": ""}, "variables_p": {"response": [["Dict[str, Optional[str]]", 0.3918929533908602], ["List[Union[Any, Any, Any]]", 0.10706771396295012], ["Dict[str, Union[None, Any, Any, str]]", 0.10583300570079492], ["dict", 0.09969816702368262], ["Dict[str, Optional[Any]]", 0.0944134851504483]]}}, {"docstring": {"func": "Creates a new Partition.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`Glue.Client.create_partition`\n\n.. code-block:: python\n\n    hook = GlueCatalogHook()\n    partition_input = {\"Values\": []}\n    hook.create_partition(database_name=\"db\", table_name=\"table\", partition_input=partition_input)", "ret": null}, "fn_lc": [[168, 4], [194, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_partition", "params": {"database_name": "builtins.str", "partition_input": "builtins.dict", "self": "", "table_name": "builtins.str"}, "params_descr": {"database_name": "Database name", "partition_input": "Definition of how the partition is created\nPlease see official AWS documentation for further information.\nhttps://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-partitions.html#aws-glue-api-catalog-partitions-CreatePartition", "self": "", "table_name": "Database's Table name"}, "params_occur": {"database_name": [["self", "get_conn", "create_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionInput", "partition_input"]], "partition_input": [["self", "get_conn", "create_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionInput", "partition_input"]], "self": [["self", "get_conn", "create_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionInput", "partition_input"], ["self", "log", "error", "e"]], "table_name": [["self", "get_conn", "create_partition", "DatabaseName", "database_name", "TableName", "table_name", "PartitionInput", "partition_input"]]}, "params_p": {"args": [], "database_name": [["str", 0.8132893945979323], ["Union[str, List[str]]", 0.09411248652328631], ["Dict[str, str]", 0.09259811887878135]], "kwargs": [], "partition_input": [["str", 0.8132893945979323], ["Union[str, List[str]]", 0.09411248652328631], ["Dict[str, str]", 0.09259811887878135]], "self": [], "table_name": [["str", 0.8132893945979323], ["Union[str, List[str]]", 0.09411248652328631], ["Dict[str, str]", 0.09259811887878135]]}, "q_name": "GlueCatalogHook.create_partition", "ret_exprs": ["return self.get_conn().create_partition( DatabaseName=database_name, TableName=table_name, PartitionInput=partition_input)"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.7832998853183275], ["list", 0.10431611364172215]], "variables": {}, "variables_p": {}}], "name": "GlueCatalogHook", "q_name": "GlueCatalogHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "botocore", "exceptions", "ClientError", "airflow", "exceptions", "AirflowException", "airflow", "providers", "amazon", "aws", "hooks", "base_aws", "AwsBaseHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 24, "I": 0, "U": 11}, "session_id": "F_PxjAIoe1jNIw10tm5WF08kb3cZGafhlhnqVuYJNgs", "set": null, "tc": [false, null], "type_annot_cove": 0.69, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}