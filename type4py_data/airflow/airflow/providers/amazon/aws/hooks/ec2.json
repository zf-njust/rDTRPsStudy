{"error": null, "response": {"classes": [{"cls_lc": [[50, 0], [205, 13]], "cls_var_ln": {"API_TYPES": [[67, 4], [67, 13]]}, "cls_var_occur": {"API_TYPES": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [77, 41]], "fn_var_ln": {"_api_type": [[75, 8], [75, 22]]}, "fn_var_occur": {"_api_type": [["self", "_api_type", "api_type"]]}, "name": "__init__", "params": {"api_type": "", "args": "", "kwargs": "", "self": ""}, "params_descr": {"api_type": "", "args": "", "kwargs": "", "self": ""}, "params_occur": {"api_type": [["api_type", "self", "API_TYPES"], ["kwargs", "api_type"], ["self", "_api_type", "api_type"]], "args": [["super", "__init__", "args", "kwargs"]], "kwargs": [["kwargs", "api_type"], ["super", "__init__", "args", "kwargs"]], "self": [["api_type", "self", "API_TYPES"], ["AirflowException", "self", "API_TYPES"], ["self", "_api_type", "api_type"]]}, "params_p": {"api_type": [["Type", 0.3054273607150699], ["bool", 0.09103702116289007]], "args": [], "kwargs": [], "self": []}, "q_name": "EC2Hook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"_api_type": ""}, "variables_p": {"_api_type": [["str", 0.9999999999821918], ["Dict[str, Dict[str, Any]]", 1.1731107386611939e-11], ["List[str]", 6.077115420732151e-12]]}}, {"docstring": {"func": "Get EC2 instance by id and return it.", "long_descr": null, "ret": "Instance object"}, "fn_lc": [[79, 4], [90, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_instance", "params": {"filters": "list | None", "instance_id": "builtins.str", "self": ""}, "params_descr": {"filters": "List of filters to specify instances to get", "instance_id": "id of the AWS EC2 instance", "self": ""}, "params_occur": {"filters": [["self", "get_instances", "filters", "filters", "instance_ids", "instance_id"]], "instance_id": [["self", "get_instances", "filters", "filters", "instance_ids", "instance_id"], ["self", "conn", "Instance", "id", "instance_id"]], "self": [["self", "_api_type"], ["self", "get_instances", "filters", "filters", "instance_ids", "instance_id"], ["self", "conn", "Instance", "id", "instance_id"]]}, "params_p": {"args": [], "filters": [["str", 0.31512730990335375], ["int", 0.20229834237495176], ["List[str]", 0.10478431700278068]], "instance_id": [["int", 0.29262534213867586], ["bool", 0.08861664305784343]], "kwargs": [], "self": []}, "q_name": "EC2Hook.get_instance", "ret_exprs": ["return self.get_instances(filters=filters, instance_ids=[instance_id])", "return self.conn.Instance(id=instance_id)"], "ret_type": "", "ret_type_p": [["str", 0.31455548490288865], ["int", 0.1777523108529907], ["Optional[List[str]]", 0.08767415818662086], ["Optional[str]", 0.08767415818662086]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Stop instances with given ids.", "long_descr": null, "ret": "Dict with key `StoppingInstances` and value as list of instances being stopped"}, "fn_lc": [[93, 4], [102, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "stop_instances", "params": {"instance_ids": "builtins.list", "self": ""}, "params_descr": {"instance_ids": "List of instance ids to stop", "self": ""}, "params_occur": {"instance_ids": [["self", "log", "info", "instance_ids"], ["self", "conn", "stop_instances", "InstanceIds", "instance_ids"]], "self": [["self", "log", "info", "instance_ids"], ["self", "conn", "stop_instances", "InstanceIds", "instance_ids"]]}, "params_p": {"args": [], "instance_ids": [["str", 0.5976867452635624], ["bool", 0.13573070851085622], ["Optional[str]", 0.08937544624397192], ["int", 0.07113108782278459]], "kwargs": [], "self": []}, "q_name": "EC2Hook.stop_instances", "ret_exprs": ["return self.conn.stop_instances(InstanceIds=instance_ids)"], "ret_type": "builtins.dict", "ret_type_p": [["dict", 0.23352952955084202], ["bool", 0.20100148746661517], ["Iterable[str]", 0.09168884890671498]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Start instances with given ids.", "long_descr": null, "ret": "Dict with key `StartingInstances` and value as list of instances being started"}, "fn_lc": [[105, 4], [114, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "start_instances", "params": {"instance_ids": "builtins.list", "self": ""}, "params_descr": {"instance_ids": "List of instance ids to start", "self": ""}, "params_occur": {"instance_ids": [["self", "log", "info", "instance_ids"], ["self", "conn", "start_instances", "InstanceIds", "instance_ids"]], "self": [["self", "log", "info", "instance_ids"], ["self", "conn", "start_instances", "InstanceIds", "instance_ids"]]}, "params_p": {"args": [], "instance_ids": [["str", 0.5046230570746928], ["int", 0.25514895641997926], ["bool", 0.14880248344675356]], "kwargs": [], "self": []}, "q_name": "EC2Hook.start_instances", "ret_exprs": ["return self.conn.start_instances(InstanceIds=instance_ids)"], "ret_type": "builtins.dict", "ret_type_p": [["List[str]", 0.13359849300647597], ["int", 0.09353861713120042], ["Type[Any]", 0.08977588480132206], ["Callable[[int], None]", 0.08502562456131331]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Terminate instances with given ids.", "long_descr": null, "ret": "Dict with key `TerminatingInstances` and value as list of instances being terminated"}, "fn_lc": [[117, 4], [126, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "terminate_instances", "params": {"instance_ids": "builtins.list", "self": ""}, "params_descr": {"instance_ids": "List of instance ids to terminate", "self": ""}, "params_occur": {"instance_ids": [["self", "log", "info", "instance_ids"], ["self", "conn", "terminate_instances", "InstanceIds", "instance_ids"]], "self": [["self", "log", "info", "instance_ids"], ["self", "conn", "terminate_instances", "InstanceIds", "instance_ids"]]}, "params_p": {"args": [], "instance_ids": [["str", 0.5976867452635624], ["bool", 0.13573070851085622], ["Optional[str]", 0.08937544624397192], ["int", 0.07113108782278459]], "kwargs": [], "self": []}, "q_name": "EC2Hook.terminate_instances", "ret_exprs": ["return self.conn.terminate_instances(InstanceIds=instance_ids)"], "ret_type": "builtins.dict", "ret_type_p": [["dict", 0.23352952955084202], ["bool", 0.20100148746661517], ["Iterable[str]", 0.09168884890671498]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Describe EC2 instances, optionally applying filters and selective instance ids.", "long_descr": null, "ret": "Response from EC2 describe_instances API"}, "fn_lc": [[129, 4], [143, 86]], "fn_var_ln": {"filters": [[137, 8], [137, 15]], "instance_ids": [[138, 8], [138, 20]]}, "fn_var_occur": {"filters": [["filters", "filters"], ["self", "log", "info", "filters"], ["self", "conn", "describe_instances", "Filters", "filters", "InstanceIds", "instance_ids"]], "instance_ids": [["instance_ids", "instance_ids"], ["self", "log", "info", "instance_ids"], ["self", "conn", "describe_instances", "Filters", "filters", "InstanceIds", "instance_ids"]]}, "name": "describe_instances", "params": {"filters": "list | None", "instance_ids": "list | None", "self": ""}, "params_descr": {"filters": "List of filters to specify instances to describe", "instance_ids": "List of instance IDs to describe", "self": ""}, "params_occur": {"filters": [["filters", "filters"], ["self", "log", "info", "filters"], ["self", "conn", "describe_instances", "Filters", "filters", "InstanceIds", "instance_ids"]], "instance_ids": [["instance_ids", "instance_ids"], ["self", "log", "info", "instance_ids"], ["self", "conn", "describe_instances", "Filters", "filters", "InstanceIds", "instance_ids"]], "self": [["self", "log", "info", "filters"], ["self", "log", "info", "instance_ids"], ["self", "conn", "describe_instances", "Filters", "filters", "InstanceIds", "instance_ids"]]}, "params_p": {"args": [], "filters": [["int", 0.6190847098057162], ["str", 0.28487356445866124], ["bytes", 0.09604172573562288]], "instance_ids": [["str", 0.4091505545197003], ["int", 0.3109225784931371]], "kwargs": [], "self": []}, "q_name": "EC2Hook.describe_instances", "ret_exprs": ["return self.conn.describe_instances(Filters=filters, InstanceIds=instance_ids)"], "ret_type": "", "ret_type_p": [["str", 0.1854080040355479], ["bool", 0.10107375645541986], ["int", 0.08702820197939401]], "variables": {"filters": "", "instance_ids": ""}, "variables_p": {"filters": [["Dict[str, Union[float, str]]", 0.20226933391525714], ["list", 0.10334977774802709], ["ValueError", 0.10128758250526132], ["List[str]", 0.09153550564155533], ["List[Dict[str, Any]]", 0.09121308302064254]], "instance_ids": [["list", 0.27598152331648507], ["str", 0.18506125314183747], ["int", 0.18280320454267157], ["Tuple[str, str]", 0.13961713201541862], ["List[str]", 0.1336708235779697]]}}, {"docstring": {"func": "Get list of instance details, optionally applying filters and selective instance ids.", "long_descr": null, "ret": "List of instances"}, "fn_lc": [[146, 4], [158, 9]], "fn_var_ln": {"description": [[154, 8], [154, 19]]}, "fn_var_occur": {"description": [["description", "self", "describe_instances", "filters", "filters", "instance_ids", "instance_ids"], ["instance", "reservation", "description", "instance", "reservation"]]}, "name": "get_instances", "params": {"filters": "list | None", "instance_ids": "list | None", "self": ""}, "params_descr": {"filters": "List of filters to specify instances to get", "instance_ids": "List of ids to get instances for", "self": ""}, "params_occur": {"filters": [["description", "self", "describe_instances", "filters", "filters", "instance_ids", "instance_ids"]], "instance_ids": [["description", "self", "describe_instances", "filters", "filters", "instance_ids", "instance_ids"]], "self": [["description", "self", "describe_instances", "filters", "filters", "instance_ids", "instance_ids"]]}, "params_p": {"args": [], "filters": [["str", 0.39123977234103147], ["int", 0.30494968254875643], ["Optional[str]", 0.10466254216560139]], "instance_ids": [["str", 0.39123977234103147], ["int", 0.30494968254875643], ["Optional[str]", 0.10466254216560139]], "kwargs": [], "self": []}, "q_name": "EC2Hook.get_instances", "ret_exprs": ["return [ instance for reservation in description[\"Reservations\"] for instance in reservation[\"Instances\"]]"], "ret_type": "builtins.list", "ret_type_p": [["List[str]", 0.2981095744095882], ["bool", 0.1984082808193358], ["List[Tuple[str, Any]]", 0.10151185031185288], ["int", 0.10101728493106249], ["Counter", 0.09941307059401563]], "variables": {"description": ""}, "variables_p": {"description": [["Pattern[str]", 0.48094216712456694], ["str", 0.14738109380799883], ["Dict[str, str]", 0.10593321770715353], ["List[Pattern[str]]", 0.08610735810023423], ["Dict[Any, str]", 0.0852129867133962]]}}, {"docstring": {"func": "Get list of instance ids, optionally applying filters to fetch selective instances.", "long_descr": null, "ret": "List of instance ids"}, "fn_lc": [[161, 4], [168, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_instance_ids", "params": {"filters": "list | None", "self": ""}, "params_descr": {"filters": "List of filters to specify instances to get", "self": ""}, "params_occur": {"filters": [["instance", "instance", "self", "get_instances", "filters", "filters"]], "self": [["instance", "instance", "self", "get_instances", "filters", "filters"]]}, "params_p": {"args": [], "filters": [["str", 0.2279748407000472], ["Dict[str, Any]", 0.11122848986415879], ["Optional[Dict]", 0.09096742900641945]], "kwargs": [], "self": []}, "q_name": "EC2Hook.get_instance_ids", "ret_exprs": ["return [instance[\"InstanceId\"] for instance in self.get_instances(filters=filters)]"], "ret_type": "builtins.list", "ret_type_p": [["str", 0.5173453207020386], ["list", 0.28186091438889205], ["Iterable[str]", 0.10197105136835001], ["Optional[str]", 0.0988227135407194]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [173, 79]], "fn_var_ln": {"response": [[172, 12], [172, 20]]}, "fn_var_occur": {"response": [["response", "client", "describe_instances", "InstanceIds", "instance_id"]]}, "name": "get_instance_state_async", "params": {"instance_id": "builtins.str", "self": ""}, "params_descr": {"instance_id": "", "self": ""}, "params_occur": {"instance_id": [["response", "client", "describe_instances", "InstanceIds", "instance_id"]], "self": [["self", "async_conn", "client"]]}, "params_p": {"args": [], "instance_id": [["str", 0.6833242332993854], ["Optional[str]", 0.2111171778004097]], "kwargs": [], "self": []}, "q_name": "EC2Hook.get_instance_state_async", "ret_exprs": ["return response[\"Reservations\"][0][\"Instances\"][0][\"State\"][\"Name\"]"], "ret_type": "builtins.str", "ret_type_p": [["Dict[str, Any]", 0.1857951310335161], ["int", 0.12916433745252054], ["str", 0.09141974162293576], ["dict", 0.08853552359642788]], "variables": {"response": ""}, "variables_p": {"response": [["str", 0.3631616736826743], ["Dict[str, Dict[str, Any]]", 0.2982328090682988]]}}, {"docstring": {"func": "Get EC2 instance state by id and return it.", "long_descr": null, "ret": "current state of the instance"}, "fn_lc": [[175, 4], [185, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_instance_state", "params": {"instance_id": "builtins.str", "self": ""}, "params_descr": {"instance_id": "id of the AWS EC2 instance", "self": ""}, "params_occur": {"instance_id": [["self", "get_instances", "instance_ids", "instance_id"], ["self", "get_instance", "instance_id", "instance_id", "state"]], "self": [["self", "_api_type"], ["self", "get_instances", "instance_ids", "instance_id"], ["self", "get_instance", "instance_id", "instance_id", "state"]]}, "params_p": {"args": [], "instance_id": [["str", 0.20244732625655876], ["Optional[str]", 0.10872573301178998], ["int", 0.08805875965102487]], "kwargs": [], "self": []}, "q_name": "EC2Hook.get_instance_state", "ret_exprs": ["return self.get_instances(instance_ids=[instance_id])[0][\"State\"][\"Name\"]", "return self.get_instance(instance_id=instance_id).state[\"Name\"]"], "ret_type": "builtins.str", "ret_type_p": [["bool", 0.3042801845442521], ["float", 0.10733665420082228], ["Dict[str, Any]", 0.08915598189572498]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Wait EC2 instance until its state is equal to the target_state.", "long_descr": null, "ret": "None"}, "fn_lc": [[187, 4], [205, 13]], "fn_var_ln": {"instance_state": [[201, 12], [201, 26]]}, "fn_var_occur": {"instance_state": [["instance_state", "self", "get_instance_state", "instance_id", "instance_id"], ["instance_state", "target_state"], ["instance_state", "self", "get_instance_state", "instance_id", "instance_id"], ["self", "log", "info", "instance_state", "instance_state", "target_state"]]}, "name": "wait_for_state", "params": {"check_interval": "builtins.float", "instance_id": "builtins.str", "self": "", "target_state": "builtins.str"}, "params_descr": {"check_interval": "time in seconds that the job should wait in\nbetween each instance state checks until operation is completed", "instance_id": "id of the AWS EC2 instance", "self": "", "target_state": "target state of instance"}, "params_occur": {"check_interval": [["time", "sleep", "check_interval"]], "instance_id": [["instance_state", "self", "get_instance_state", "instance_id", "instance_id"], ["instance_state", "self", "get_instance_state", "instance_id", "instance_id"]], "self": [["instance_state", "self", "get_instance_state", "instance_id", "instance_id"], ["instance_state", "self", "get_instance_state", "instance_id", "instance_id"], ["self", "log", "info", "instance_state", "instance_state", "target_state"]], "target_state": [["instance_state", "target_state"], ["self", "log", "info", "instance_state", "instance_state", "target_state"]]}, "params_p": {"args": [], "check_interval": [["str", 0.5987301201819928], ["Optional[str]", 0.20290636716132016], ["Optional[Union[str, int]]", 0.10061277727271636], ["int", 0.09775073538397082]], "instance_id": [["int", 0.602497272691965]], "kwargs": [], "self": [], "target_state": [["int", 0.41388840304838315], ["float", 0.2058177817257285]]}, "q_name": "EC2Hook.wait_for_state", "ret_exprs": [], "ret_type": "None", "variables": {"instance_state": ""}, "variables_p": {"instance_state": [["int", 0.7646919049750617]]}}], "name": "EC2Hook", "q_name": "EC2Hook", "variables": {"API_TYPES": ""}, "variables_p": {"API_TYPES": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[29, 4], [45, 9]], "fn_var_ln": {"ec2_doc_link": [[33, 8], [33, 20]]}, "fn_var_occur": {"ec2_doc_link": [["AirflowException", "ec2_doc_link", "ec2_doc_link"]]}, "name": "checker", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["func", "self", "args", "kwargs"]], "kwargs": [["func", "self", "args", "kwargs"]], "self": [["self", "_api_type"], ["func", "self", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": [["bool", 0.2123017561517752], ["dict", 0.09691905870847513], ["str", 0.09239389184852778]]}, "q_name": "only_client_type.<locals>.checker", "ret_exprs": ["return func(self, *args, **kwargs)"], "ret_type": "", "ret_type_p": [["int", 0.20966626685093354], ["str", 0.20473413732775222]], "variables": {"ec2_doc_link": ""}, "variables_p": {"ec2_doc_link": [["int", 0.45905089432093815], ["str", 0.45192585669105156], ["Dict[str, str]", 0.08902324898801044]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[27, 0], [47, 18]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "only_client_type", "params": {"func": ""}, "params_descr": {"func": ""}, "params_occur": {"func": []}, "params_p": {"args": [], "func": [["type", 0.22601693848944526], ["Callable", 0.20322957067520941], ["set", 0.18486435021459985], ["List[str]", 0.11300846924472263]], "kwargs": []}, "q_name": "only_client_type", "ret_exprs": ["return checker"], "ret_type": "", "ret_type_p": [["str", 0.30293275843249645], ["Dict[str, Any]", 0.3020586538949113], ["int", 0.19750429383629614], ["Container[str]", 0.09586106974998047]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "functools", "time", "airflow", "exceptions", "AirflowException", "airflow", "providers", "amazon", "aws", "hooks", "base_aws", "AwsBaseHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 22, "I": 0, "U": 18}, "session_id": "Qxw7tci3Vep34dGc2gPQFMAVzFICx0Tya-GTDPb4_6Q", "set": null, "tc": [false, null], "type_annot_cove": 0.55, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}