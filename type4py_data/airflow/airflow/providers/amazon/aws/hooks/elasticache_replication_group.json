{"error": null, "response": {"classes": [{"cls_lc": [[26, 0], [281, 23]], "cls_var_ln": {"TERMINAL_STATES": [[46, 4], [46, 19]]}, "cls_var_occur": {"TERMINAL_STATES": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [61, 41]], "fn_var_ln": {"exponential_back_off_factor": [[57, 8], [57, 40]], "initial_poke_interval": [[58, 8], [58, 34]], "max_retries": [[56, 8], [56, 24]]}, "fn_var_occur": {"exponential_back_off_factor": [["self", "exponential_back_off_factor", "exponential_back_off_factor"]], "initial_poke_interval": [["self", "initial_poke_interval", "initial_poke_interval"]], "max_retries": [["self", "max_retries", "max_retries"]]}, "name": "__init__", "params": {"args": "", "exponential_back_off_factor": "builtins.float", "initial_poke_interval": "builtins.float", "kwargs": "", "max_retries": "builtins.int", "self": ""}, "params_descr": {"args": "", "exponential_back_off_factor": "", "initial_poke_interval": "", "kwargs": "", "max_retries": "", "self": ""}, "params_occur": {"args": [["super", "__init__", "args", "kwargs"]], "exponential_back_off_factor": [["self", "exponential_back_off_factor", "exponential_back_off_factor"]], "initial_poke_interval": [["self", "initial_poke_interval", "initial_poke_interval"]], "kwargs": [["super", "__init__", "args", "kwargs"]], "max_retries": [["self", "max_retries", "max_retries"]], "self": [["self", "max_retries", "max_retries"], ["self", "exponential_back_off_factor", "exponential_back_off_factor"], ["self", "initial_poke_interval", "initial_poke_interval"]]}, "params_p": {"args": [], "exponential_back_off_factor": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "initial_poke_interval": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": [], "max_retries": [["int", 0.712034348864911], ["Optional[int]", 0.19515854875465355], ["float", 0.09280710238043544]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.__init__", "ret_exprs": [], "ret_type": "", "variables": {"exponential_back_off_factor": "", "initial_poke_interval": "", "max_retries": ""}, "variables_p": {"exponential_back_off_factor": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "initial_poke_interval": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "max_retries": [["int", 1.0]]}}, {"docstring": {"func": "Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`ElastiCache.Client.create_replication_group`", "ret": "Response from ElastiCache create replication group API"}, "fn_lc": [[63, 4], [73, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_replication_group", "params": {"config": "builtins.dict", "self": ""}, "params_descr": {"config": "Configuration for creating the replication group", "self": ""}, "params_occur": {"config": [["self", "conn", "create_replication_group", "config"]], "self": [["self", "conn", "create_replication_group", "config"]]}, "params_p": {"args": [], "config": [["bool", 0.18722983550319613], ["str", 0.09281864382833925], ["Optional[Dict]", 0.08609583469518048], ["dict", 0.08084170293250445]], "kwargs": [], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.create_replication_group", "ret_exprs": ["return self.conn.create_replication_group(**config)"], "ret_type": "builtins.dict", "ret_type_p": [["Union[str, IO]", 0.41883675949297583], ["IO[str]", 0.19778936425178856], ["int", 0.1846588316090129], ["Callable", 0.10638562884171629]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Deletes an existing replication group.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`ElastiCache.Client.delete_replication_group`", "ret": "Response from ElastiCache delete replication group API"}, "fn_lc": [[75, 4], [85, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "delete_replication_group", "params": {"replication_group_id": "builtins.str", "self": ""}, "params_descr": {"replication_group_id": "ID of replication group to delete", "self": ""}, "params_occur": {"replication_group_id": [["self", "conn", "delete_replication_group", "ReplicationGroupId", "replication_group_id"]], "self": [["self", "conn", "delete_replication_group", "ReplicationGroupId", "replication_group_id"]]}, "params_p": {"args": [], "kwargs": [], "replication_group_id": [["str", 0.5015502248794393], ["List[int]", 0.08414674692121071]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.delete_replication_group", "ret_exprs": ["return self.conn.delete_replication_group(ReplicationGroupId=replication_group_id)"], "ret_type": "builtins.dict", "ret_type_p": [["Union[str, IO]", 0.39965239409939485], ["str", 0.1962012870198501], ["int", 0.11102770818304032], ["IO[str]", 0.09991309852484871]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get information about a particular replication group.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`ElastiCache.Client.describe_replication_groups`", "ret": "Response from ElastiCache describe replication group API"}, "fn_lc": [[87, 4], [97, 93]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "describe_replication_group", "params": {"replication_group_id": "builtins.str", "self": ""}, "params_descr": {"replication_group_id": "ID of replication group to describe", "self": ""}, "params_occur": {"replication_group_id": [["self", "conn", "describe_replication_groups", "ReplicationGroupId", "replication_group_id"]], "self": [["self", "conn", "describe_replication_groups", "ReplicationGroupId", "replication_group_id"]]}, "params_p": {"args": [], "kwargs": [], "replication_group_id": [["str", 0.49999999999999994], ["dict", 0.08905280411506762]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.describe_replication_group", "ret_exprs": ["return self.conn.describe_replication_groups(ReplicationGroupId=replication_group_id)"], "ret_type": "builtins.dict", "ret_type_p": [["bytearray", 0.1900550347738537], ["str", 0.17395607755422743]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get current status of replication group.", "long_descr": ".. seealso::\n    - :external+boto3:py:meth:`ElastiCache.Client.describe_replication_groups`", "ret": "Current status of replication group"}, "fn_lc": [[99, 4], [109, 102]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_replication_group_status", "params": {"replication_group_id": "builtins.str", "self": ""}, "params_descr": {"replication_group_id": "ID of replication group to check for status", "self": ""}, "params_occur": {"replication_group_id": [["self", "describe_replication_group", "replication_group_id"]], "self": [["self", "describe_replication_group", "replication_group_id"]]}, "params_p": {"args": [], "kwargs": [], "replication_group_id": [["int", 0.2088101911572994], ["str", 0.2018749800226859], ["Optional[int]", 0.09337801389375784], ["Optional[str]", 0.08525164374627156]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.get_replication_group_status", "ret_exprs": ["return self.describe_replication_group(replication_group_id)[\"ReplicationGroups\"][0][\"Status\"]"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.29857145288264203], ["Callable[[None, None], bool]", 0.10107978546498085], ["int", 0.08039884331172611]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Helper for checking if replication group is available or not.", "long_descr": null, "ret": "True if available else False"}, "fn_lc": [[111, 4], [118, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_replication_group_available", "params": {"replication_group_id": "builtins.str", "self": ""}, "params_descr": {"replication_group_id": "ID of replication group to check for availability", "self": ""}, "params_occur": {"replication_group_id": [["self", "get_replication_group_status", "replication_group_id"]], "self": [["self", "get_replication_group_status", "replication_group_id"]]}, "params_p": {"args": [], "kwargs": [], "replication_group_id": [["int", 0.33684015638050724], ["str", 0.09446701990456124], ["Optional[str]", 0.09446701990456124], ["Optional[int]", 0.0917793966748834]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.is_replication_group_available", "ret_exprs": ["return self.get_replication_group_status(replication_group_id) == \"available\""], "ret_type": "builtins.bool", "ret_type_p": [["Optional[bool]", 0.5592913223716366], ["str", 0.1036661688515264]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if replication group is available or not by performing a describe over it.", "long_descr": null, "ret": "True if replication is available else False"}, "fn_lc": [[120, 4], [172, 19]], "fn_var_ln": {"exponential_back_off_factor": [[140, 8], [140, 35]], "max_retries": [[141, 8], [141, 19]], "num_tries": [[142, 8], [142, 17]], "sleep_time": [[139, 8], [139, 18]], "status": [[147, 12], [147, 18]], "stop_poking": [[148, 12], [148, 23]]}, "fn_var_occur": {"exponential_back_off_factor": [["exponential_back_off_factor", "exponential_back_off_factor", "self", "exponential_back_off_factor"], ["sleep_time", "exponential_back_off_factor"]], "max_retries": [["max_retries", "max_retries", "self", "max_retries"], ["stop_poking", "num_tries", "max_retries"], ["num_tries", "max_retries"]], "num_tries": [["stop_poking", "num_tries", "max_retries"], ["num_tries", "max_retries"], ["self", "log", "info", "num_tries", "sleep_time"]], "sleep_time": [["sleep_time", "initial_sleep_time", "self", "initial_poke_interval"], ["self", "log", "info", "num_tries", "sleep_time"], ["sleep", "sleep_time"], ["sleep_time", "exponential_back_off_factor"]], "status": [["status", "self", "get_replication_group_status", "replication_group_id", "replication_group_id"], ["stop_poking", "status", "self", "TERMINAL_STATES"], ["self", "log", "info", "replication_group_id", "status"], ["self", "log", "warning", "status"]], "stop_poking": [["stop_poking", "False"], ["stop_poking", "num_tries", "max_retries"], ["stop_poking", "status", "self", "TERMINAL_STATES"]]}, "name": "wait_for_availability", "params": {"exponential_back_off_factor": "float | None", "initial_sleep_time": "float | None", "max_retries": "int | None", "replication_group_id": "builtins.str", "self": ""}, "params_descr": {"exponential_back_off_factor": "Multiplication factor for deciding next sleep time\nIf this is not supplied then this is defaulted to class level value", "initial_sleep_time": "Initial sleep time in seconds\nIf this is not supplied then this is defaulted to class level value", "max_retries": "Max retries for checking availability of replication group\nIf this is not supplied then this is defaulted to class level value", "replication_group_id": "ID of replication group to check for availability", "self": ""}, "params_occur": {"exponential_back_off_factor": [["exponential_back_off_factor", "exponential_back_off_factor", "self", "exponential_back_off_factor"], ["sleep_time", "exponential_back_off_factor"]], "initial_sleep_time": [["sleep_time", "initial_sleep_time", "self", "initial_poke_interval"]], "max_retries": [["max_retries", "max_retries", "self", "max_retries"], ["stop_poking", "num_tries", "max_retries"], ["num_tries", "max_retries"]], "replication_group_id": [["status", "self", "get_replication_group_status", "replication_group_id", "replication_group_id"], ["self", "log", "info", "replication_group_id", "status"]], "self": [["sleep_time", "initial_sleep_time", "self", "initial_poke_interval"], ["exponential_back_off_factor", "exponential_back_off_factor", "self", "exponential_back_off_factor"], ["max_retries", "max_retries", "self", "max_retries"], ["status", "self", "get_replication_group_status", "replication_group_id", "replication_group_id"], ["stop_poking", "status", "self", "TERMINAL_STATES"], ["self", "log", "info", "replication_group_id", "status"], ["self", "log", "info", "num_tries", "sleep_time"], ["self", "log", "warning", "status"]]}, "params_p": {"args": [], "exponential_back_off_factor": [["int", 0.37563325166390527], ["str", 0.10621478182284722], ["List[int]", 0.08681470832352223]], "initial_sleep_time": [["int", 0.4163127934846902], ["Optional[int]", 0.29727699607931646], ["Iterator[int]", 0.19087735256935529], ["str", 0.09553285786663795]], "kwargs": [], "max_retries": [["int", 0.9999999999999999]], "replication_group_id": [["int", 0.33471081587801277], ["str", 0.2632436994769058], ["bool", 0.07799615217458065]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.wait_for_availability", "ret_exprs": ["return False", "return True"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"exponential_back_off_factor": "", "max_retries": "", "num_tries": "", "sleep_time": "", "status": "", "stop_poking": ""}, "variables_p": {"exponential_back_off_factor": [["List[int]", 0.168191718941334]], "max_retries": [["int", 0.9999999999999998]], "num_tries": [["int", 0.9999999999999999]], "sleep_time": [["int", 0.89375166961216], ["str", 0.10624833038783996]], "status": [["list", 0.38962863661997416], ["str", 0.25185524586628927], ["Dict[str, Union[Any, Any]]", 0.1848817690500225], ["int", 0.08962900503957111]], "stop_poking": [["float", 0.35510446865721973], ["Dict[int, Any]", 0.25329984395736377], ["Dict[str, str]", 0.1115315083762663], ["int", 0.08891759734585887]]}}, {"docstring": {"func": "Helper for deleting a replication group ensuring it is either deleted or can't be deleted.", "long_descr": null, "ret": "Response from ElastiCache delete replication group API and flag to identify if deleted or not"}, "fn_lc": [[174, 4], [247, 32]], "fn_var_ln": {"deleted": [[218, 16], [218, 23]], "exponential_back_off_factor": [[195, 8], [195, 35]], "max_retries": [[196, 8], [196, 19]], "message": [[230, 16], [230, 23]], "num_tries": [[197, 8], [197, 17]], "response": [[213, 20], [213, 28]], "sleep_time": [[194, 8], [194, 18]], "status": [[202, 16], [202, 22]]}, "fn_var_occur": {"deleted": [["deleted", "False"], ["deleted", "num_tries", "max_retries"], ["deleted", "True"], ["response", "deleted"]], "exponential_back_off_factor": [["exponential_back_off_factor", "exponential_back_off_factor", "self", "exponential_back_off_factor"], ["sleep_time", "exponential_back_off_factor"]], "max_retries": [["max_retries", "max_retries", "self", "max_retries"], ["deleted", "num_tries", "max_retries"], ["num_tries", "max_retries"]], "message": [["message", "exp", "response"], ["self", "log", "warning", "message"]], "num_tries": [["deleted", "num_tries", "max_retries"], ["num_tries", "max_retries"], ["self", "log", "info", "num_tries", "sleep_time"]], "response": [["response", "None"], ["response", "self", "delete_replication_group", "replication_group_id", "replication_group_id"], ["message", "exp", "response"], ["response", "deleted"]], "sleep_time": [["sleep_time", "initial_sleep_time", "self", "initial_poke_interval"], ["self", "log", "info", "num_tries", "sleep_time"], ["sleep", "sleep_time"], ["sleep_time", "exponential_back_off_factor"]], "status": [["status", "self", "get_replication_group_status", "replication_group_id", "replication_group_id"], ["self", "log", "info", "replication_group_id", "status"]]}, "name": "wait_for_deletion", "params": {"exponential_back_off_factor": "float | None", "initial_sleep_time": "float | None", "max_retries": "int | None", "replication_group_id": "builtins.str", "self": ""}, "params_descr": {"exponential_back_off_factor": "Multiplication factor for deciding next sleep time\nIf this is not supplied then this is defaulted to class level value", "initial_sleep_time": "Initial sleep time in second\nIf this is not supplied then this is defaulted to class level value", "max_retries": "Max retries for checking availability of replication group\nIf this is not supplied then this is defaulted to class level value", "replication_group_id": "ID of replication to delete", "self": ""}, "params_occur": {"exponential_back_off_factor": [["exponential_back_off_factor", "exponential_back_off_factor", "self", "exponential_back_off_factor"], ["sleep_time", "exponential_back_off_factor"]], "initial_sleep_time": [["sleep_time", "initial_sleep_time", "self", "initial_poke_interval"]], "max_retries": [["max_retries", "max_retries", "self", "max_retries"], ["deleted", "num_tries", "max_retries"], ["num_tries", "max_retries"]], "replication_group_id": [["status", "self", "get_replication_group_status", "replication_group_id", "replication_group_id"], ["self", "log", "info", "replication_group_id", "status"], ["response", "self", "delete_replication_group", "replication_group_id", "replication_group_id"], ["self", "log", "info", "replication_group_id"]], "self": [["sleep_time", "initial_sleep_time", "self", "initial_poke_interval"], ["exponential_back_off_factor", "exponential_back_off_factor", "self", "exponential_back_off_factor"], ["max_retries", "max_retries", "self", "max_retries"], ["status", "self", "get_replication_group_status", "replication_group_id", "replication_group_id"], ["self", "log", "info", "replication_group_id", "status"], ["self", "log", "info"], ["response", "self", "delete_replication_group", "replication_group_id", "replication_group_id"], ["self", "log", "info", "replication_group_id"], ["self", "log", "warning", "message"], ["self", "log", "info", "num_tries", "sleep_time"]]}, "params_p": {"args": [], "exponential_back_off_factor": [["int", 0.37563325166390527], ["str", 0.10621478182284722], ["List[int]", 0.08681470832352223]], "initial_sleep_time": [["int", 0.4163127934846902], ["Optional[int]", 0.29727699607931646], ["Iterator[int]", 0.19087735256935529], ["str", 0.09553285786663795]], "kwargs": [], "max_retries": [["int", 0.824215871489172], ["str", 0.175784128510828]], "replication_group_id": [["int", 0.37346563506905983], ["str", 0.20744657548427123], ["Optional[str]", 0.07704362157616235]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.wait_for_deletion", "ret_exprs": ["return response, deleted"], "ret_type": "", "ret_type_p": [["int", 0.301533287327605], ["bytes", 0.10813104906141656], ["str", 0.09383758133095933], ["dict", 0.09015538879352142]], "variables": {"deleted": "", "exponential_back_off_factor": "", "max_retries": "", "message": "", "num_tries": "", "response": "", "sleep_time": "", "status": ""}, "variables_p": {"deleted": [["int", 0.48276145269745224], ["str", 0.39153385540571906], ["Optional[Match[str]]", 0.12570469189682879]], "exponential_back_off_factor": [["List[int]", 0.168191718941334]], "max_retries": [["int", 1.0]], "message": [["Dict[str, dict]", 0.1169330558545151], ["dict", 0.10697649184862093], ["List[Dict[str, Any]]", 0.09204489557331443], ["List[Tuple[int, str]]", 0.08555603628324868]], "num_tries": [["int", 0.9999999999999999]], "response": [["list", 0.15522854757715432]], "sleep_time": [["int", 0.89375166961216], ["str", 0.10624833038783996]], "status": [["int", 0.4098000922461534], ["str", 0.23400906351166922], ["List[int]", 0.1744455939740947], ["Dict[str, str]", 0.09434756438263144], ["Set[str]", 0.08739768588545119]]}}, {"docstring": {"func": "Delete a replication group ensuring it is either deleted or can't be deleted.", "long_descr": null, "ret": "Response from ElastiCache delete replication group API"}, "fn_lc": [[249, 4], [281, 23]], "fn_var_ln": {"deleted": [[271, 18], [271, 25]], "response": [[271, 8], [271, 16]]}, "fn_var_occur": {"deleted": [["response", "deleted", "self", "wait_for_deletion", "replication_group_id", "replication_group_id", "initial_sleep_time", "initial_sleep_time", "exponential_back_off_factor", "exponential_back_off_factor", "max_retries", "max_retries"]], "response": [["response", "deleted", "self", "wait_for_deletion", "replication_group_id", "replication_group_id", "initial_sleep_time", "initial_sleep_time", "exponential_back_off_factor", "exponential_back_off_factor", "max_retries", "max_retries"], ["AirflowException", "response"]]}, "name": "ensure_delete_replication_group", "params": {"exponential_back_off_factor": "float | None", "initial_sleep_time": "float | None", "max_retries": "int | None", "replication_group_id": "builtins.str", "self": ""}, "params_descr": {"exponential_back_off_factor": "Multiplication factor for deciding next sleep time\nIf this is not supplied then this is defaulted to class level value", "initial_sleep_time": "Initial sleep time in second\nIf this is not supplied then this is defaulted to class level value", "max_retries": "Max retries for checking availability of replication group\nIf this is not supplied then this is defaulted to class level value", "replication_group_id": "ID of replication to delete", "self": ""}, "params_occur": {"exponential_back_off_factor": [["response", "deleted", "self", "wait_for_deletion", "replication_group_id", "replication_group_id", "initial_sleep_time", "initial_sleep_time", "exponential_back_off_factor", "exponential_back_off_factor", "max_retries", "max_retries"]], "initial_sleep_time": [["response", "deleted", "self", "wait_for_deletion", "replication_group_id", "replication_group_id", "initial_sleep_time", "initial_sleep_time", "exponential_back_off_factor", "exponential_back_off_factor", "max_retries", "max_retries"]], "max_retries": [["response", "deleted", "self", "wait_for_deletion", "replication_group_id", "replication_group_id", "initial_sleep_time", "initial_sleep_time", "exponential_back_off_factor", "exponential_back_off_factor", "max_retries", "max_retries"]], "replication_group_id": [["self", "log", "info", "replication_group_id"], ["response", "deleted", "self", "wait_for_deletion", "replication_group_id", "replication_group_id", "initial_sleep_time", "initial_sleep_time", "exponential_back_off_factor", "exponential_back_off_factor", "max_retries", "max_retries"]], "self": [["self", "log", "info", "replication_group_id"], ["response", "deleted", "self", "wait_for_deletion", "replication_group_id", "replication_group_id", "initial_sleep_time", "initial_sleep_time", "exponential_back_off_factor", "exponential_back_off_factor", "max_retries", "max_retries"]]}, "params_p": {"args": [], "exponential_back_off_factor": [["int", 0.7785212946526074], ["Optional[int]", 0.1042660586606083]], "initial_sleep_time": [["int", 0.7785212946526074], ["Optional[int]", 0.1042660586606083]], "kwargs": [], "max_retries": [["int", 0.7785212946526074], ["Optional[int]", 0.1042660586606083]], "replication_group_id": [["int", 0.3706800415107433], ["str", 0.3266195112483802], ["float", 0.20408641829082466]], "self": []}, "q_name": "ElastiCacheReplicationGroupHook.ensure_delete_replication_group", "ret_exprs": ["return response"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.23149438385760424], ["str", 0.2009089995488588], ["Dict[str, str]", 0.10551051795908638], ["dict", 0.10047265806361913], ["Exception", 0.09179004621824176], ["Dict[str, Union[str, int]]", 0.09097637960887614]], "variables": {"deleted": "", "response": ""}, "variables_p": {"deleted": [["int", 0.23231511343088784], ["str", 0.1467941009059709], ["List[float]", 0.0940355979450186], ["set", 0.0824208669684432]], "response": [["list", 0.29487740367971227], ["DefaultDict[Any, List[Any]]", 0.17981898965572454], ["int", 0.14533846853705207], ["List[str]", 0.09474532755364931], ["List[float]", 0.08845377861473015], ["dict", 0.08620322604829865]]}}], "name": "ElastiCacheReplicationGroupHook", "q_name": "ElastiCacheReplicationGroupHook", "variables": {"TERMINAL_STATES": ""}, "variables_p": {"TERMINAL_STATES": [["str", 0.39999999999999997], ["int", 0.19999999999999998], ["list", 0.09999999999999999]]}}], "funcs": [], "imports": ["__future__", "annotations", "time", "sleep", "airflow", "exceptions", "AirflowException", "airflow", "providers", "amazon", "aws", "hooks", "base_aws", "AwsBaseHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 20, "I": 0, "U": 24}, "session_id": "tSFUs9_JATqq7OR2mfkLsfQd2jZU4GfBdg4Yl5IR9q4", "set": null, "tc": [false, null], "type_annot_cove": 0.45, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}