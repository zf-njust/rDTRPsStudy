{"error": null, "response": {"classes": [{"cls_lc": [[45, 0], [226, 19]], "cls_var_ln": {"trigger_should_wrap": [[52, 4], [52, 23]]}, "cls_var_occur": {"trigger_should_wrap": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [65, 9]], "fn_var_ln": {"_hook": [[60, 8], [60, 18]], "closed": [[61, 8], [61, 19]], "delete_local_copy": [[63, 8], [63, 30]], "log_relative_path": [[59, 8], [59, 30]], "remote_base": [[58, 8], [58, 24]], "upload_on_close": [[62, 8], [62, 28]]}, "fn_var_occur": {"_hook": [["self", "_hook", "None"]], "closed": [["self", "closed", "False"]], "delete_local_copy": [["self", "delete_local_copy", "kwargs", "kwargs", "get_default_delete_local_copy"]], "log_relative_path": [["self", "log_relative_path"]], "remote_base": [["self", "remote_base", "s3_log_folder"]], "upload_on_close": [["self", "upload_on_close", "True"]]}, "name": "__init__", "params": {"base_log_folder": "builtins.str", "filename_template": "str | None", "kwargs": "", "s3_log_folder": "builtins.str", "self": ""}, "params_descr": {"base_log_folder": "", "filename_template": "", "kwargs": "", "s3_log_folder": "", "self": ""}, "params_occur": {"base_log_folder": [["super", "__init__", "base_log_folder", "filename_template"]], "filename_template": [["super", "__init__", "base_log_folder", "filename_template"]], "kwargs": [["self", "delete_local_copy", "kwargs", "kwargs", "get_default_delete_local_copy"]], "s3_log_folder": [["self", "remote_base", "s3_log_folder"]], "self": [["self", "remote_base", "s3_log_folder"], ["self", "log_relative_path"], ["self", "_hook", "None"], ["self", "closed", "False"], ["self", "upload_on_close", "True"], ["self", "delete_local_copy", "kwargs", "kwargs", "get_default_delete_local_copy"]]}, "params_p": {"args": [], "base_log_folder": [["str", 0.4267398211082683], ["Optional[Callable[[], Any]]", 0.09980558561645053], ["Optional[Any]", 0.09980558561645053], ["Optional[Dict]", 0.09940488019329725], ["bool", 0.0958672254205441], ["Optional[str]", 0.08684771971809706]], "filename_template": [["str", 0.4267398211082683], ["Optional[Callable[[], Any]]", 0.09980558561645053], ["Optional[Any]", 0.09980558561645053], ["Optional[Dict]", 0.09940488019329725], ["bool", 0.0958672254205441], ["Optional[str]", 0.08684771971809706]], "kwargs": [], "s3_log_folder": [["str", 0.8019932550226987], ["bytes", 0.10446006976425194], ["MutableSequence[str]", 0.09354667521304932]], "self": []}, "q_name": "S3TaskHandler.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_hook": "", "closed": "", "delete_local_copy": "", "log_relative_path": "", "remote_base": "", "upload_on_close": ""}, "variables_p": {"_hook": [["\"Frame\"", 0.19999999999676038], ["str", 3.971941177518544e-12], ["Dict[str, Any]", 3.6175949269712212e-12]], "closed": [["dict", 0.6169768722014776], ["Set[str]", 0.1902812595168529]], "delete_local_copy": [["int", 0.393932812875819], ["str", 0.309570238807062], ["Dict[str, float]", 0.10479848758363984], ["List[int]", 0.09600030706318988], ["float", 0.09569815367028921]], "log_relative_path": [["str", 0.913732297261407], ["pathlib.Path", 0.08626770273859287]], "remote_base": [["int", 0.6828917025694554], ["Tuple[str, str]", 0.10919657082438389], ["str", 0.10911712865320436], ["Dict[str, str]", 0.09879459795295632]], "upload_on_close": [["str", 0.32010986135674746], ["pathlib.Path", 0.09739877717750213], ["bytes", 0.08918449966022948]]}}, {"docstring": {"func": "Returns S3Hook.", "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [72, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "S3TaskHandler.hook", "ret_exprs": ["return S3Hook( aws_conn_id=conf.get(\"logging\", \"REMOTE_LOG_CONN_ID\"), transfer_config_args={\"use_threads\": False})"], "ret_type": "", "ret_type_p": [["str", 0.831546719307685], ["cmk.utils.type_defs.HostName", 0.08556376651337459]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 4], [86, 20]], "fn_var_ln": {"full_path": [[78, 8], [78, 17]], "is_trigger_log_context": [[80, 8], [80, 30]], "log_relative_path": [[79, 8], [79, 30]], "upload_on_close": [[81, 8], [81, 28]]}, "fn_var_occur": {"full_path": [["full_path", "self", "handler", "baseFilename"], ["self", "log_relative_path", "pathlib", "Path", "full_path", "relative_to", "self", "local_base", "as_posix"]], "is_trigger_log_context": [["is_trigger_log_context", "getattr", "ti", "False"], ["self", "upload_on_close", "is_trigger_log_context", "ti", "raw"]], "log_relative_path": [["self", "log_relative_path", "pathlib", "Path", "full_path", "relative_to", "self", "local_base", "as_posix"]], "upload_on_close": [["self", "upload_on_close", "is_trigger_log_context", "ti", "raw"], ["self", "upload_on_close"]]}, "name": "set_context", "params": {"self": "", "ti": ""}, "params_descr": {"self": "", "ti": ""}, "params_occur": {"self": [["full_path", "self", "handler", "baseFilename"], ["self", "log_relative_path", "pathlib", "Path", "full_path", "relative_to", "self", "local_base", "as_posix"], ["self", "upload_on_close", "is_trigger_log_context", "ti", "raw"], ["self", "upload_on_close"], ["open", "self", "handler", "baseFilename"]], "ti": [["super", "set_context", "ti"], ["is_trigger_log_context", "getattr", "ti", "False"], ["self", "upload_on_close", "is_trigger_log_context", "ti", "raw"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ti": [["float", 0.23509137592505777]]}, "q_name": "S3TaskHandler.set_context", "ret_exprs": [], "ret_type": "", "variables": {"full_path": "", "is_trigger_log_context": "", "log_relative_path": "", "upload_on_close": ""}, "variables_p": {"full_path": [["pathlib.Path", 0.9999999999999999]], "is_trigger_log_context": [["bool", 0.21846919449873675], ["Dict[str, Any]", 0.17903866541201807], ["Dict[str, Union[Any, Any]]", 0.11188082238664247], ["Dict[str, str]", 0.10277581615474281], ["List[int]", 0.10101106647919895]], "log_relative_path": [["pathlib.Path", 0.9194316335541337], ["str", 0.0805683664458663]], "upload_on_close": [["str", 0.29256577413979573], ["bool", 0.11334998350835095]]}}, {"docstring": {"func": "Close and upload local log file to remote storage S3.", "long_descr": null, "ret": null}, "fn_lc": [[88, 4], [112, 26]], "fn_var_ln": {"closed": [[112, 8], [112, 19]], "local_loc": [[102, 8], [102, 17]], "log": [[106, 12], [106, 15]], "remote_loc": [[103, 8], [103, 18]], "write_to_s3": [[107, 12], [107, 23]]}, "fn_var_occur": {"closed": [["self", "closed"], ["self", "closed", "True"]], "local_loc": [["local_loc", "os", "path", "join", "self", "local_base", "self", "log_relative_path"], ["os", "path", "exists", "local_loc"], ["log", "pathlib", "Path", "local_loc", "read_text"], ["shutil", "rmtree", "os", "path", "dirname", "local_loc"]], "log": [["log", "pathlib", "Path", "local_loc", "read_text"], ["write_to_s3", "self", "s3_write", "log", "remote_loc"]], "remote_loc": [["remote_loc", "os", "path", "join", "self", "remote_base", "self", "log_relative_path"], ["write_to_s3", "self", "s3_write", "log", "remote_loc"]], "write_to_s3": [["write_to_s3", "self", "s3_write", "log", "remote_loc"], ["write_to_s3", "self", "delete_local_copy"]]}, "name": "close", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "closed"], ["self", "upload_on_close"], ["local_loc", "os", "path", "join", "self", "local_base", "self", "log_relative_path"], ["remote_loc", "os", "path", "join", "self", "remote_base", "self", "log_relative_path"], ["write_to_s3", "self", "s3_write", "log", "remote_loc"], ["write_to_s3", "self", "delete_local_copy"], ["self", "closed", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "S3TaskHandler.close", "ret_exprs": ["return", "return"], "ret_type": "", "ret_type_p": [["Iterator", 0.08488967993129183]], "variables": {"closed": "", "local_loc": "", "log": "", "remote_loc": "", "write_to_s3": ""}, "variables_p": {"closed": [["dict", 0.35915633792617185], ["int", 0.24405593695993985], ["str", 0.18091526088807333]], "local_loc": [["str", 0.8930964726396488], ["int", 0.10690352736035112]], "log": [["pathlib.Path", 0.9341365421678085], ["str", 0.03527813096956874]], "remote_loc": [["str", 0.8109647877276083], ["float", 0.1067617856023039], ["int", 0.08227342667008779]], "write_to_s3": [["str", 0.9999999999999996]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [131, 29]], "fn_var_ln": {"bucket": [[122, 8], [122, 14]], "keys": [[125, 12], [125, 16]], "logs": [[120, 8], [120, 12]], "messages": [[121, 8], [121, 16]], "prefix": [[122, 16], [122, 22]], "worker_log_rel_path": [[118, 8], [118, 27]]}, "fn_var_occur": {"bucket": [["bucket", "prefix", "self", "hook", "parse_s3_url", "s3url", "os", "path", "join", "self", "remote_base", "worker_log_rel_path"], ["keys", "self", "hook", "list_keys", "bucket_name", "bucket", "prefix", "prefix"], ["keys", "bucket", "key", "key", "keys"]], "keys": [["keys", "self", "hook", "list_keys", "bucket_name", "bucket", "prefix", "prefix"], ["keys", "bucket", "key", "key", "keys"], ["messages", "extend", "x", "x", "sorted", "keys"], ["sorted", "keys"]], "logs": [["logs", "append", "self", "s3_read", "key", "return_error", "True"], ["messages", "logs"]], "messages": [["messages", "extend", "x", "x", "sorted", "keys"], ["messages", "append", "ti"], ["messages", "logs"]], "prefix": [["bucket", "prefix", "self", "hook", "parse_s3_url", "s3url", "os", "path", "join", "self", "remote_base", "worker_log_rel_path"], ["keys", "self", "hook", "list_keys", "bucket_name", "bucket", "prefix", "prefix"]], "worker_log_rel_path": [["worker_log_rel_path", "self", "_render_filename", "ti", "try_number"], ["bucket", "prefix", "self", "hook", "parse_s3_url", "s3url", "os", "path", "join", "self", "remote_base", "worker_log_rel_path"]]}, "name": "_read_remote_logs", "params": {"metadata": "", "self": "", "ti": "", "try_number": ""}, "params_descr": {"metadata": "", "self": "", "ti": "", "try_number": ""}, "params_occur": {"metadata": [], "self": [["worker_log_rel_path", "self", "_render_filename", "ti", "try_number"], ["bucket", "prefix", "self", "hook", "parse_s3_url", "s3url", "os", "path", "join", "self", "remote_base", "worker_log_rel_path"], ["keys", "self", "hook", "list_keys", "bucket_name", "bucket", "prefix", "prefix"], ["logs", "append", "self", "s3_read", "key", "return_error", "True"]], "ti": [["worker_log_rel_path", "self", "_render_filename", "ti", "try_number"], ["messages", "append", "ti"]], "try_number": [["worker_log_rel_path", "self", "_render_filename", "ti", "try_number"]]}, "params_p": {"args": [], "kwargs": [], "metadata": [["List[str]", 0.20917469928826699], ["bool", 0.20879561457670087], ["AbstractSet[str]", 0.15867171112662432], ["Callable", 0.15867171112662432], ["int", 0.11092997723840856], ["str", 0.09829129802417065]], "self": [], "ti": [["bytes", 0.09610966585396387]], "try_number": [["str", 0.21979191786254762], ["List[str]", 0.19721811181562438], ["bytes", 0.18391194679798925], ["os.PathLike", 0.09185880518587945]]}, "q_name": "S3TaskHandler._read_remote_logs", "ret_exprs": ["return messages, logs"], "ret_type": "builtins.tuple[builtins.list[builtins.str], builtins.list[builtins.str]]", "ret_type_p": [["str", 0.3072689747625269], ["int", 0.2331730875123952], ["bool", 0.18833484208085974]], "variables": {"bucket": "", "keys": "", "logs": "", "messages": "", "prefix": "", "worker_log_rel_path": ""}, "variables_p": {"bucket": [["str", 1.0000000000000002]], "keys": [["str", 0.6889019607560865], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.0923343210877872], ["list", 0.09212784881165101]], "logs": [["List[str]", 0.1964116819683014], ["str", 0.10055783905173327], ["set", 0.09249587693776196], ["Tuple[str, str, str]", 0.08837014143918148]], "messages": [["Dict[str, str]", 0.31337659976697907], ["str", 0.2944325539653483], ["Pattern[Any]", 0.191626539714328], ["Set[Tuple[str, str]]", 0.10475103669618059], ["List[str]", 0.095813269857164]], "prefix": [["str", 0.8139178549537456], ["os._Environ[str]", 0.0943850666336161], ["dict", 0.09169707841263841]], "worker_log_rel_path": [["str", 0.8976661457311088]]}}, {"docstring": {"func": "Read logs of given task instance and try_number from S3 remote storage.", "long_descr": "If failed, read the log from task instance host machine.\n\ntodo: when min airflow version >= 2.6 then remove this method (``_read``)", "ret": null}, "fn_lc": [[133, 4], [159, 55]], "fn_var_ln": {"local_log": [[158, 12], [158, 21]], "log_prefix": [[157, 16], [157, 26]], "logs": [[150, 18], [150, 22]], "messages": [[150, 8], [150, 16]], "metadata": [[158, 23], [158, 31]]}, "fn_var_occur": {"local_log": [["local_log", "metadata", "super", "_read", "ti", "try_number", "metadata"], ["log_prefix", "local_log", "metadata"]], "log_prefix": [["log_prefix", "local_log", "metadata"]], "logs": [["messages", "logs", "self", "_read_remote_logs", "ti", "try_number", "metadata"], ["join", "x", "x", "messages", "join", "logs", "True"]], "messages": [["messages", "logs", "self", "_read_remote_logs", "ti", "try_number", "metadata"], ["join", "x", "x", "messages", "join", "logs", "True"]], "metadata": [["super", "_read", "ti", "try_number", "metadata"], ["messages", "logs", "self", "_read_remote_logs", "ti", "try_number", "metadata"], ["metadata", "metadata", "get"], ["local_log", "metadata", "super", "_read", "ti", "try_number", "metadata"], ["log_prefix", "local_log", "metadata"]]}, "name": "_read", "params": {"metadata": "", "self": "", "ti": "", "try_number": ""}, "params_descr": {"metadata": "log metadata,\ncan be used for steaming log reading and auto-tailing.", "self": "", "ti": "task instance object", "try_number": "task instance try_number to read logs from"}, "params_occur": {"metadata": [["super", "_read", "ti", "try_number", "metadata"], ["messages", "logs", "self", "_read_remote_logs", "ti", "try_number", "metadata"], ["metadata", "metadata", "get"], ["local_log", "metadata", "super", "_read", "ti", "try_number", "metadata"], ["log_prefix", "local_log", "metadata"]], "self": [["messages", "logs", "self", "_read_remote_logs", "ti", "try_number", "metadata"]], "ti": [["super", "_read", "ti", "try_number", "metadata"], ["messages", "logs", "self", "_read_remote_logs", "ti", "try_number", "metadata"], ["local_log", "metadata", "super", "_read", "ti", "try_number", "metadata"]], "try_number": [["super", "_read", "ti", "try_number", "metadata"], ["messages", "logs", "self", "_read_remote_logs", "ti", "try_number", "metadata"], ["local_log", "metadata", "super", "_read", "ti", "try_number", "metadata"]]}, "params_p": {"args": [], "kwargs": [], "metadata": [["bool", 0.11810812102840645], ["Callable", 0.08911836246315498], ["dict", 0.08813241228468924]], "self": [], "ti": [["bool", 0.10982290318484719], ["T", 0.09662996602129927], ["BinaryIO", 0.09282364025731914], ["Callable", 0.0903960518879863]], "try_number": [["bool", 0.10982290318484719], ["T", 0.09662996602129927], ["BinaryIO", 0.09282364025731914], ["Callable", 0.0903960518879863]]}, "q_name": "S3TaskHandler._read", "ret_exprs": ["return super()._read(ti, try_number, metadata)", "return \"\".join(f\"*** {x}n\" for x in messages) + \"n\".join(logs), {\"end_of_log\": True}", "return f\"{log_prefix}{local_log}\", metadata"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"local_log": "", "log_prefix": "", "logs": "", "messages": "", "metadata": ""}, "variables_p": {"local_log": [["bool", 0.16119176897744797], ["dict", 0.09333511538947144], ["list", 0.09096680365639633], ["List[str]", 0.08166986044991512], ["int", 0.08151340823955397]], "log_prefix": [["dict", 0.13400712234519294]], "logs": [], "messages": [["int", 0.16538233861300153], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.12848386098502665], ["pathlib.PurePosixPath", 0.10874929634974105], ["Union[Literal, str]", 0.08128815703654914], ["Union[Literal[True], str]", 0.08128815703654914], ["str", 0.07796582674955986], ["iris.utils.prom_helpers.PromFileWriter", 0.07766417840539136]], "metadata": [["str", 0.2000324943661916], ["bytes", 0.09322943359713491]]}}, {"docstring": {"func": "Check if remote_log_location exists in remote storage.", "long_descr": null, "ret": "True if location exists else False"}, "fn_lc": [[161, 4], [168, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "s3_log_exists", "params": {"remote_log_location": "builtins.str", "self": ""}, "params_descr": {"remote_log_location": "log's location in remote storage", "self": ""}, "params_occur": {"remote_log_location": [["self", "hook", "check_for_key", "remote_log_location"]], "self": [["self", "hook", "check_for_key", "remote_log_location"]]}, "params_p": {"args": [], "kwargs": [], "remote_log_location": [["str", 0.5027517284876629], ["bytes", 0.31809924505480053], ["Optional[str]", 0.08943100992481551]], "self": []}, "q_name": "S3TaskHandler.s3_log_exists", "ret_exprs": ["return self.hook.check_for_key(remote_log_location)"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.33553164256953605], ["dict", 0.10196898894196044], ["bool", 0.09275379591610945], ["\"User\"", 0.09056866873064688]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns the log found at the remote_log_location. Return '' if no logs are found or there is an error.", "long_descr": null, "ret": "the log found at the remote_log_location"}, "fn_lc": [[170, 4], [187, 17]], "fn_var_ln": {"msg": [[182, 12], [182, 15]]}, "fn_var_occur": {"msg": [["msg", "remote_log_location", "error"], ["self", "log", "exception", "msg"]]}, "name": "s3_read", "params": {"remote_log_location": "builtins.str", "return_error": "builtins.bool", "self": ""}, "params_descr": {"remote_log_location": "the log's location in remote storage", "return_error": "if True, returns a string error message if an\nerror occurs. Otherwise returns '' when an error occurs.", "self": ""}, "params_occur": {"remote_log_location": [["self", "hook", "read_key", "remote_log_location"], ["msg", "remote_log_location", "error"]], "return_error": [], "self": [["self", "hook", "read_key", "remote_log_location"], ["self", "log", "exception", "msg"]]}, "params_p": {"args": [], "kwargs": [], "remote_log_location": [["bytes", 0.12164862732209829], ["int", 0.1152753773514171], ["Optional[Dict[str, Any]]", 0.08474475532235973]], "return_error": [["bool", 0.24076997195981176], ["list", 0.16906315918733322], ["int", 0.11222561441934134], ["Exception", 0.09842700454202975], ["Callable[..., bool]", 0.09842700454202975], ["Dict[str, Callable]", 0.09038979425650459]], "self": []}, "q_name": "S3TaskHandler.s3_read", "ret_exprs": ["return self.hook.read_key(remote_log_location)", "return msg", "return \"\""], "ret_type": "builtins.str", "ret_type_p": [["str", 0.3572431290341758], ["raiden.utils.signer.Signer", 0.2507410877796907], ["dict", 0.10064296952812393], ["Optional[str]", 0.08405630639793164]], "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.802255848336363], ["List[pathlib.Path]", 0.102964845306129], ["Optional[str]", 0.09477930635750827]]}}, {"docstring": {"func": "Write the log to the remote_log_location; return `True` or fails silently and return `False`.", "long_descr": null, "ret": "whether the log is successfully written to remote location or not."}, "fn_lc": [[189, 4], [226, 19]], "fn_var_ln": {"log": [[203, 16], [203, 19]], "old_log": [[202, 16], [202, 23]]}, "fn_var_occur": {"log": [["log", "join", "old_log", "log", "old_log", "log"], ["self", "log", "exception"], ["self", "hook", "load_string", "log", "key", "remote_log_location", "replace", "True", "encrypt", "conf", "getboolean"], ["self", "log", "warning", "remote_log_location"], ["self", "log", "exception", "remote_log_location"]], "old_log": [["old_log", "self", "s3_read", "remote_log_location"], ["log", "join", "old_log", "log", "old_log", "log"]]}, "name": "s3_write", "params": {"append": "builtins.bool", "log": "builtins.str", "max_retry": "builtins.int", "remote_log_location": "builtins.str", "self": ""}, "params_descr": {"append": "if False, any existing log file is overwritten. If True,\nthe new log is appended to any existing logs.", "log": "the log to write to the remote_log_location", "max_retry": "Maximum number of times to retry on upload failure", "remote_log_location": "the log's location in remote storage", "self": ""}, "params_occur": {"append": [["append", "self", "s3_log_exists", "remote_log_location"]], "log": [["log", "join", "old_log", "log", "old_log", "log"], ["self", "log", "exception"], ["self", "hook", "load_string", "log", "key", "remote_log_location", "replace", "True", "encrypt", "conf", "getboolean"], ["self", "log", "warning", "remote_log_location"], ["self", "log", "exception", "remote_log_location"]], "max_retry": [["range", "max_retry"], ["try_num", "max_retry"]], "remote_log_location": [["append", "self", "s3_log_exists", "remote_log_location"], ["old_log", "self", "s3_read", "remote_log_location"], ["self", "hook", "load_string", "log", "key", "remote_log_location", "replace", "True", "encrypt", "conf", "getboolean"], ["self", "log", "warning", "remote_log_location"], ["self", "log", "exception", "remote_log_location"]], "self": [["append", "self", "s3_log_exists", "remote_log_location"], ["old_log", "self", "s3_read", "remote_log_location"], ["self", "log", "exception"], ["self", "hook", "load_string", "log", "key", "remote_log_location", "replace", "True", "encrypt", "conf", "getboolean"], ["self", "log", "warning", "remote_log_location"], ["self", "log", "exception", "remote_log_location"]]}, "params_p": {"append": [["bool", 0.4527420908027047], ["int", 0.181045076537227], ["str", 0.08846119847580639]], "args": [], "kwargs": [], "log": [["str", 0.5038401903322091], ["Optional[str]", 0.09105419335766607], ["raiden.utils.TokenNetworkAddress", 0.08296676655348281], ["int", 0.07550116413567017]], "max_retry": [["int", 0.5905113998364814], ["bool", 0.30452557748853637], ["Optional[Union[int, float]]", 0.10496302267498211]], "remote_log_location": [["bytes", 0.47519171958937845], ["bool", 0.11031976714100503], ["Optional[float]", 0.10123309011252937], ["Tuple[int]", 0.09406894270184223]], "self": []}, "q_name": "S3TaskHandler.s3_write", "ret_exprs": ["return False", "return False", "return True"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 1.0]], "variables": {"log": "", "old_log": ""}, "variables_p": {"log": [], "old_log": [["str", 0.3684422318226087], ["List[str]", 0.2051413576795146], ["server.openslides.utils.logging.LoggerAdapter", 0.11698009319978371]]}}], "name": "S3TaskHandler", "q_name": "S3TaskHandler", "variables": {"trigger_should_wrap": ""}, "variables_p": {"trigger_should_wrap": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [{"docstring": {"func": "Load delete_local_logs conf if Airflow version > 2.6 and return False if not.", "long_descr": "TODO: delete this function when min airflow version >= 2.6", "ret": null}, "fn_lc": [[33, 0], [42, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_default_delete_local_copy", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_default_delete_local_copy", "ret_exprs": ["return False", "return conf.getboolean(\"logging\", \"delete_local_logs\")"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "os", "pathlib", "shutil", "functools", "cached_property", "packaging", "version", "Version", "airflow", "configuration", "conf", "airflow", "providers", "amazon", "aws", "hooks", "s3", "S3Hook", "airflow", "utils", "log", "file_task_handler", "FileTaskHandler", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "version", "version"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 13, "I": 0, "U": 43}, "session_id": "5M13e4TLCrFhLgFEZnR0c7nOCKrG7BuKmiBJSZfOOtU", "set": null, "tc": [false, null], "type_annot_cove": 0.23, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}