{"error": null, "response": {"classes": [{"cls_lc": [[59, 0], [329, 32]], "cls_var_ln": {"conn_name_attr": [[69, 4], [69, 18]], "conn_type": [[71, 4], [71, 13]], "default_conn_name": [[70, 4], [70, 21]], "hook_name": [[72, 4], [72, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 4], [77, 25]], "fn_var_ln": {"_conn": [[77, 8], [77, 18]], "conn_id": [[76, 8], [76, 20]]}, "fn_var_occur": {"_conn": [["self", "_conn", "None"]], "conn_id": [["self", "conn_id", "azure_fileshare_conn_id"]]}, "name": "__init__", "params": {"azure_fileshare_conn_id": "builtins.str", "self": ""}, "params_descr": {"azure_fileshare_conn_id": "", "self": ""}, "params_occur": {"azure_fileshare_conn_id": [["self", "conn_id", "azure_fileshare_conn_id"]], "self": [["self", "conn_id", "azure_fileshare_conn_id"], ["self", "_conn", "None"]]}, "params_p": {"args": [], "azure_fileshare_conn_id": [["int", 0.379934553587079], ["str", 0.10465133338738553], ["Iterable[str]", 0.09143031273296395], ["Iterable[int]", 0.09143031273296395]], "kwargs": [], "self": []}, "q_name": "AzureFileShareHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"_conn": "", "conn_id": ""}, "variables_p": {"_conn": [["\"Frame\"", 0.19999999999676038], ["str", 3.971941177518544e-12], ["Dict[str, Any]", 3.6175949269712212e-12]], "conn_id": [["int", 0.7958999235356351], ["str", 0.11252096422187169]]}}, {"docstring": {"func": "Returns connection widgets to add to connection form.", "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [94, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection_form_widgets", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureFileShareHook.get_connection_form_widgets", "ret_exprs": ["return { \"sas_token\": PasswordField(lazy_gettext(\"SAS Token (optional)\"), widget=BS3PasswordFieldWidget()), \"connection_string\": StringField( lazy_gettext(\"Connection String (optional)\"), widget=BS3TextFieldWidget() ), \"protocol\": StringField( lazy_gettext(\"Account URL or token (optional)\"), widget=BS3TextFieldWidget() ),}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["bool", 0.27279636410128866], ["bytes", 0.11023086200389114], ["int", 0.09983125484705964], ["Dict[str, int]", 0.09763729882826645]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns custom field behaviour.", "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [113, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_ui_field_behaviour", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureFileShareHook.get_ui_field_behaviour", "ret_exprs": ["return { \"hidden_fields\": [\"schema\", \"port\", \"host\", \"extra\"], \"relabeling\": { \"login\": \"Blob Storage Login (optional)\", \"password\": \"Blob Storage Key (optional)\", }, \"placeholders\": { \"login\": \"account name\", \"password\": \"secret\", \"sas_token\": \"account url or token (optional)\", \"connection_string\": \"account url or token (optional)\", \"protocol\": \"account url or token (optional)\", },}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.26840508666723273], ["bool", 0.06666744759841305]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 8], [125, 17]], "fn_var_ln": {"backcompat_key": [[119, 12], [119, 26]]}, "fn_var_occur": {"backcompat_key": [["backcompat_key", "backcompat_prefix", "key"], ["backcompat_key", "extras"], ["warnings", "warn", "key", "backcompat_key", "self", "conn_id", "key", "backcompat_key"]]}, "name": "check_for_conflict", "params": {"key": ""}, "params_descr": {"key": ""}, "params_occur": {"key": [["backcompat_key", "backcompat_prefix", "key"], ["warnings", "warn", "key", "backcompat_key", "self", "conn_id", "key", "backcompat_key"]]}, "params_p": {"args": [], "key": [["bytes", 0.17271897257491647], ["int", 0.11243752440107742], ["str", 0.08889185406944114], ["KT", 0.08152334310837137]], "kwargs": [], "self": []}, "q_name": "AzureFileShareHook.get_conn.<locals>.check_for_conflict", "ret_exprs": [], "ret_type": "", "variables": {"backcompat_key": ""}, "variables_p": {"backcompat_key": [["dict", 0.11092088579162296], ["bytes", 0.10593110724314589], ["arxiv.canonical.domain.file.Key", 0.10461174325869209]]}}, {"docstring": {"func": "Return the FileService object.", "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [146, 25]], "fn_var_ln": {"_conn": [[145, 8], [145, 18]], "backcompat_prefix": [[127, 8], [127, 25]], "conn": [[130, 8], [130, 12]], "extras": [[131, 8], [131, 14]], "service_options": [[132, 8], [132, 23]], "short_name": [[140, 16], [140, 26]]}, "fn_var_occur": {"_conn": [["self", "_conn"], ["self", "_conn"], ["self", "_conn", "FileService", "account_name", "conn", "login", "account_key", "conn", "password", "service_options"], ["self", "_conn"]], "backcompat_prefix": [["key", "startswith", "backcompat_prefix"], ["short_name", "key", "len", "backcompat_prefix"]], "conn": [["conn", "self", "get_connection", "self", "conn_id"], ["extras", "conn", "extra_dejson"], ["self", "_conn", "FileService", "account_name", "conn", "login", "account_key", "conn", "password", "service_options"]], "extras": [["extras", "conn", "extra_dejson"], ["extras", "items"]], "service_options": [["service_options", "key", "value"], ["short_name", "service_options"], ["service_options", "short_name", "value"], ["self", "_conn", "FileService", "account_name", "conn", "login", "account_key", "conn", "password", "service_options"]], "short_name": [["short_name", "key", "len", "backcompat_prefix"], ["short_name", "service_options"], ["service_options", "short_name", "value"]]}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_conn"], ["self", "_conn"], ["conn", "self", "get_connection", "self", "conn_id"], ["self", "_conn", "FileService", "account_name", "conn", "login", "account_key", "conn", "password", "service_options"], ["self", "_conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureFileShareHook.get_conn", "ret_exprs": ["return self._conn", "return self._conn"], "ret_type": "azure.storage.file.FileService", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"_conn": "", "backcompat_prefix": "", "conn": "", "extras": "", "service_options": "", "short_name": ""}, "variables_p": {"_conn": [["str", 0.6974430458010328], ["int", 0.11104419868031631], ["bool", 0.09552480459107161]], "backcompat_prefix": [["str", 0.9084075209745452], ["Dict[str, int]", 0.09159247902545463]], "conn": [["str", 0.41635250138464663], ["int", 0.10336978017146868], ["dict", 0.10149714110652024]], "extras": [["str", 0.4299844339330018], ["Dict[str, List[str]]", 0.16432393101208745], ["Dict[str, str]", 0.16432393101208745], ["Generator[Any, None, None]", 0.0772361830173552]], "service_options": [["str", 0.2852927745103883], ["List[Tuple[str, int]]", 0.13446677544258429], ["Dict[str, Dict[str, Any]]", 0.12879080416282812], ["Dict[str, Any]", 0.09103867527728614], ["Dict[str, Union[Any, str]]", 0.09075381748627263], ["List[str]", 0.08283044406340528]], "short_name": [["str", 0.5883583081925001], ["Pattern[str]", 0.11660425908098558], ["List[str]", 0.10053718173622704], ["Dict[str, Dict[str, Any]]", 0.09720097901961254]]}}, {"docstring": {"func": "Check if a directory exists on Azure File Share.", "long_descr": null, "ret": "True if the file exists, False otherwise."}, "fn_lc": [[148, 4], [158, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_for_directory", "params": {"directory_name": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "kwargs": "Optional keyword arguments that\n`FileService.exists()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"directory_name": [["self", "get_conn", "exists", "share_name", "directory_name", "kwargs"]], "kwargs": [["self", "get_conn", "exists", "share_name", "directory_name", "kwargs"]], "self": [["self", "get_conn", "exists", "share_name", "directory_name", "kwargs"]], "share_name": [["self", "get_conn", "exists", "share_name", "directory_name", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.9999999999999999]], "kwargs": [], "self": [], "share_name": [["str", 0.9999999999999999]]}, "q_name": "AzureFileShareHook.check_for_directory", "ret_exprs": ["return self.get_conn().exists(share_name, directory_name, **kwargs)"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.6307418457290092], ["str", 0.2824801131379885]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if a file exists on Azure File Share.", "long_descr": null, "ret": "True if the file exists, False otherwise."}, "fn_lc": [[160, 4], [171, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_for_file", "params": {"directory_name": "builtins.str", "file_name": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "file_name": "Name of the file.", "kwargs": "Optional keyword arguments that\n`FileService.exists()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"directory_name": [["self", "get_conn", "exists", "share_name", "directory_name", "file_name", "kwargs"]], "file_name": [["self", "get_conn", "exists", "share_name", "directory_name", "file_name", "kwargs"]], "kwargs": [["self", "get_conn", "exists", "share_name", "directory_name", "file_name", "kwargs"]], "self": [["self", "get_conn", "exists", "share_name", "directory_name", "file_name", "kwargs"]], "share_name": [["self", "get_conn", "exists", "share_name", "directory_name", "file_name", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.9999999999999999]], "file_name": [["str", 0.9999999999999999]], "kwargs": [], "self": [], "share_name": [["str", 0.9999999999999999]]}, "q_name": "AzureFileShareHook.check_for_file", "ret_exprs": ["return self.get_conn().exists(share_name, directory_name, file_name, **kwargs)"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.2877985362343904], ["bool", 0.21330198371658438], ["Dict[str, Any]", 0.13563250703193552]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return the list of directories and files stored on a Azure File Share.", "long_descr": null, "ret": "A list of files and directories"}, "fn_lc": [[173, 4], [185, 95]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "list_directories_and_files", "params": {"directory_name": "str | None", "kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "kwargs": "Optional keyword arguments that\n`FileService.list_directories_and_files()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"directory_name": [["self", "get_conn", "list_directories_and_files", "share_name", "directory_name", "kwargs"]], "kwargs": [["self", "get_conn", "list_directories_and_files", "share_name", "directory_name", "kwargs"]], "self": [["self", "get_conn", "list_directories_and_files", "share_name", "directory_name", "kwargs"]], "share_name": [["self", "get_conn", "list_directories_and_files", "share_name", "directory_name", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.7999449961936649], ["bool", 0.20005500380633529]], "kwargs": [], "self": [], "share_name": [["str", 0.7999449961936649], ["bool", 0.20005500380633529]]}, "q_name": "AzureFileShareHook.list_directories_and_files", "ret_exprs": ["return self.get_conn().list_directories_and_files(share_name, directory_name, **kwargs)"], "ret_type": "builtins.list", "ret_type_p": [["sklearn.base.BaseEstimator", 0.11255725614608063], ["str", 0.09672593340924118]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return the list of files stored on a Azure File Share.", "long_descr": null, "ret": "A list of files"}, "fn_lc": [[187, 4], [201, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "list_files", "params": {"directory_name": "str | None", "kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "kwargs": "Optional keyword arguments that\n`FileService.list_directories_and_files()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"directory_name": [["obj", "name", "obj", "self", "list_directories_and_files", "share_name", "directory_name", "kwargs", "isinstance", "obj", "File"]], "kwargs": [["obj", "name", "obj", "self", "list_directories_and_files", "share_name", "directory_name", "kwargs", "isinstance", "obj", "File"]], "self": [["obj", "name", "obj", "self", "list_directories_and_files", "share_name", "directory_name", "kwargs", "isinstance", "obj", "File"]], "share_name": [["obj", "name", "obj", "self", "list_directories_and_files", "share_name", "directory_name", "kwargs", "isinstance", "obj", "File"]]}, "params_p": {"args": [], "directory_name": [["str", 0.7055379864899862], ["Optional[str]", 0.09586206595337031]], "kwargs": [], "self": [], "share_name": [["str", 0.7055379864899862], ["Optional[str]", 0.09586206595337031]]}, "q_name": "AzureFileShareHook.list_files", "ret_exprs": ["return [ obj.name for obj in self.list_directories_and_files(share_name, directory_name, **kwargs) if isinstance(obj, File)]"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["List[str]", 0.595187761656706], ["Tuple[str]", 0.3024132712894455], ["bytes", 0.10239896705384866]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create new Azure File Share.", "long_descr": null, "ret": "True if share is created, False if share already exists."}, "fn_lc": [[203, 4], [212, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_share", "params": {"kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"kwargs": "Optional keyword arguments that\n`FileService.create_share()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"kwargs": [["self", "get_conn", "create_share", "share_name", "kwargs"]], "self": [["self", "get_conn", "create_share", "share_name", "kwargs"]], "share_name": [["self", "get_conn", "create_share", "share_name", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "share_name": [["str", 0.8198891386598498], ["Optional[str]", 0.0933806964018456], ["Optional[int]", 0.08673016493830445]]}, "q_name": "AzureFileShareHook.create_share", "ret_exprs": ["return self.get_conn().create_share(share_name, **kwargs)"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.46194345478286103], ["Optional[str]", 0.27031599928137984], ["list", 0.08601193387512755], ["lightbus.transports.base.RpcMessage", 0.0825156760158315]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Delete existing Azure File Share.", "long_descr": null, "ret": "True if share is deleted, False if share does not exist."}, "fn_lc": [[214, 4], [223, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "delete_share", "params": {"kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"kwargs": "Optional keyword arguments that\n`FileService.delete_share()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"kwargs": [["self", "get_conn", "delete_share", "share_name", "kwargs"]], "self": [["self", "get_conn", "delete_share", "share_name", "kwargs"]], "share_name": [["self", "get_conn", "delete_share", "share_name", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "share_name": [["str", 0.7817917965357762], ["dict", 0.1254608813837362], ["bool", 0.09274732208048754]]}, "q_name": "AzureFileShareHook.delete_share", "ret_exprs": ["return self.get_conn().delete_share(share_name, **kwargs)"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.6985721680589417], ["lightbus.transports.base.RpcMessage", 0.10439715282919583]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create a new directory on a Azure File Share.", "long_descr": null, "ret": "A list of files and directories"}, "fn_lc": [[225, 4], [235, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_directory", "params": {"directory_name": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "kwargs": "Optional keyword arguments that\n`FileService.create_directory()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"directory_name": [["self", "get_conn", "create_directory", "share_name", "directory_name", "kwargs"]], "kwargs": [["self", "get_conn", "create_directory", "share_name", "directory_name", "kwargs"]], "self": [["self", "get_conn", "create_directory", "share_name", "directory_name", "kwargs"]], "share_name": [["self", "get_conn", "create_directory", "share_name", "directory_name", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.6970458467189258]], "kwargs": [], "self": [], "share_name": [["str", 0.6970458467189258]]}, "q_name": "AzureFileShareHook.create_directory", "ret_exprs": ["return self.get_conn().create_directory(share_name, directory_name, **kwargs)"], "ret_type": "builtins.list", "ret_type_p": [["str", 0.7832998853183275], ["list", 0.10431611364172215]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Download a file from Azure File Share.", "long_descr": null, "ret": null}, "fn_lc": [[237, 4], [250, 100]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_file", "params": {"directory_name": "builtins.str", "file_name": "builtins.str", "file_path": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "file_name": "Name of the file.", "file_path": "Where to store the file.", "kwargs": "Optional keyword arguments that\n`FileService.get_file_to_path()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"directory_name": [["self", "get_conn", "get_file_to_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "file_name": [["self", "get_conn", "get_file_to_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "file_path": [["self", "get_conn", "get_file_to_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "kwargs": [["self", "get_conn", "get_file_to_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "self": [["self", "get_conn", "get_file_to_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "share_name": [["self", "get_conn", "get_file_to_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.9003160504422402], ["Optional[str]", 0.09968394955775983]], "file_name": [["str", 0.9003160504422402], ["Optional[str]", 0.09968394955775983]], "file_path": [["str", 0.9003160504422402], ["Optional[str]", 0.09968394955775983]], "kwargs": [], "self": [], "share_name": [["str", 0.9003160504422402], ["Optional[str]", 0.09968394955775983]]}, "q_name": "AzureFileShareHook.get_file", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Download a file from Azure File Share.", "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [265, 99]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_file_to_stream", "params": {"directory_name": "builtins.str", "file_name": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str", "stream": "typing.IO"}, "params_descr": {"directory_name": "Name of the directory.", "file_name": "Name of the file.", "kwargs": "Optional keyword arguments that\n`FileService.get_file_to_stream()` takes.", "self": "", "share_name": "Name of the share.", "stream": "A filehandle to store the file to."}, "params_occur": {"directory_name": [["self", "get_conn", "get_file_to_stream", "share_name", "directory_name", "file_name", "stream", "kwargs"]], "file_name": [["self", "get_conn", "get_file_to_stream", "share_name", "directory_name", "file_name", "stream", "kwargs"]], "kwargs": [["self", "get_conn", "get_file_to_stream", "share_name", "directory_name", "file_name", "stream", "kwargs"]], "self": [["self", "get_conn", "get_file_to_stream", "share_name", "directory_name", "file_name", "stream", "kwargs"]], "share_name": [["self", "get_conn", "get_file_to_stream", "share_name", "directory_name", "file_name", "stream", "kwargs"]], "stream": [["self", "get_conn", "get_file_to_stream", "share_name", "directory_name", "file_name", "stream", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 1.0]], "file_name": [["str", 1.0]], "kwargs": [], "self": [], "share_name": [["str", 1.0]], "stream": [["str", 1.0]]}, "q_name": "AzureFileShareHook.get_file_to_stream", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Upload a file to Azure File Share.", "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [280, 105]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "load_file", "params": {"directory_name": "builtins.str", "file_name": "builtins.str", "file_path": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "file_name": "Name of the file.", "file_path": "Path to the file to load.", "kwargs": "Optional keyword arguments that\n`FileService.create_file_from_path()` takes.", "self": "", "share_name": "Name of the share."}, "params_occur": {"directory_name": [["self", "get_conn", "create_file_from_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "file_name": [["self", "get_conn", "create_file_from_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "file_path": [["self", "get_conn", "create_file_from_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "kwargs": [["self", "get_conn", "create_file_from_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "self": [["self", "get_conn", "create_file_from_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]], "share_name": [["self", "get_conn", "create_file_from_path", "share_name", "directory_name", "file_name", "file_path", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.7594436960474834], ["Optional[str]", 0.140033174797124]], "file_name": [["str", 0.7594436960474834], ["Optional[str]", 0.140033174797124]], "file_path": [["str", 0.7594436960474834], ["Optional[str]", 0.140033174797124]], "kwargs": [], "self": [], "share_name": [["str", 0.7594436960474834], ["Optional[str]", 0.140033174797124]]}, "q_name": "AzureFileShareHook.load_file", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Upload a string to Azure File Share.", "long_descr": null, "ret": null}, "fn_lc": [[282, 4], [295, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "load_string", "params": {"directory_name": "builtins.str", "file_name": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str", "string_data": "builtins.str"}, "params_descr": {"directory_name": "Name of the directory.", "file_name": "Name of the file.", "kwargs": "Optional keyword arguments that\n`FileService.create_file_from_text()` takes.", "self": "", "share_name": "Name of the share.", "string_data": "String to load."}, "params_occur": {"directory_name": [["self", "get_conn", "create_file_from_text", "share_name", "directory_name", "file_name", "string_data", "kwargs"]], "file_name": [["self", "get_conn", "create_file_from_text", "share_name", "directory_name", "file_name", "string_data", "kwargs"]], "kwargs": [["self", "get_conn", "create_file_from_text", "share_name", "directory_name", "file_name", "string_data", "kwargs"]], "self": [["self", "get_conn", "create_file_from_text", "share_name", "directory_name", "file_name", "string_data", "kwargs"]], "share_name": [["self", "get_conn", "create_file_from_text", "share_name", "directory_name", "file_name", "string_data", "kwargs"]], "string_data": [["self", "get_conn", "create_file_from_text", "share_name", "directory_name", "file_name", "string_data", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.9089303032168378]], "file_name": [["str", 0.9089303032168378]], "kwargs": [], "self": [], "share_name": [["str", 0.9089303032168378]], "string_data": [["str", 0.9089303032168378]]}, "q_name": "AzureFileShareHook.load_string", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Upload a stream to Azure File Share.", "long_descr": null, "ret": null}, "fn_lc": [[297, 4], [313, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "load_stream", "params": {"count": "builtins.str", "directory_name": "builtins.str", "file_name": "builtins.str", "kwargs": "", "self": "", "share_name": "builtins.str", "stream": "builtins.str"}, "params_descr": {"count": "Size of the stream in bytes", "directory_name": "Name of the directory.", "file_name": "Name of the file.", "kwargs": "Optional keyword arguments that\n`FileService.create_file_from_stream()` takes.", "self": "", "share_name": "Name of the share.", "stream": "Opened file/stream to upload as the file content."}, "params_occur": {"count": [["self", "get_conn", "create_file_from_stream", "share_name", "directory_name", "file_name", "stream", "count", "kwargs"]], "directory_name": [["self", "get_conn", "create_file_from_stream", "share_name", "directory_name", "file_name", "stream", "count", "kwargs"]], "file_name": [["self", "get_conn", "create_file_from_stream", "share_name", "directory_name", "file_name", "stream", "count", "kwargs"]], "kwargs": [["self", "get_conn", "create_file_from_stream", "share_name", "directory_name", "file_name", "stream", "count", "kwargs"]], "self": [["self", "get_conn", "create_file_from_stream", "share_name", "directory_name", "file_name", "stream", "count", "kwargs"]], "share_name": [["self", "get_conn", "create_file_from_stream", "share_name", "directory_name", "file_name", "stream", "count", "kwargs"]], "stream": [["self", "get_conn", "create_file_from_stream", "share_name", "directory_name", "file_name", "stream", "count", "kwargs"]]}, "params_p": {"args": [], "count": [["str", 0.804638099959516]], "directory_name": [["str", 0.804638099959516]], "file_name": [["str", 0.804638099959516]], "kwargs": [], "self": [], "share_name": [["str", 0.804638099959516]], "stream": [["str", 0.804638099959516]]}, "q_name": "AzureFileShareHook.load_stream", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test Azure FileShare connection.", "long_descr": null, "ret": null}, "fn_lc": [[315, 4], [329, 32]], "fn_var_ln": {"success": [[317, 8], [317, 15]]}, "fn_var_occur": {"success": [["success", "True"]]}, "name": "test_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["next", "iter", "self", "get_conn", "list_shares"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureFileShareHook.test_connection", "ret_exprs": ["return success", "return success", "return False, str(e)"], "ret_type": "", "ret_type_p": [["bool", 0.12333233429046754], ["int", 0.09033531566663827]], "variables": {"success": ""}, "variables_p": {"success": [["Dict[str, Any]", 0.49999999999999994], ["List[bool]", 0.19999999999999998], ["Dict[str, bool]", 0.09999999999999999], ["Dict[str, Dict[str, Any]]", 0.09999999999999999], ["float", 0.09999999999999999]]}}], "name": "AzureFileShareHook", "q_name": "AzureFileShareHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 12], [47, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_ensure_prefix", "params": {"field": ""}, "params_descr": {"field": ""}, "params_occur": {"field": [["field", "conn_attrs", "field", "startswith"], ["conn_type", "field"]]}, "params_p": {"args": [], "field": [["str", 0.21598068269202075], ["bytes", 0.09685948390948863], ["type", 0.09642622982746019], ["dict", 0.09516659262998839], ["Callable", 0.09308159469840512]], "kwargs": []}, "q_name": "_ensure_prefixes.<locals>.dec.<locals>.inner.<locals>._ensure_prefix", "ret_exprs": ["return f\"extra__{conn_type}__{field}\"", "return field"], "ret_type": "", "ret_type_p": [["str", 0.3847633952199308], ["dict", 0.08854205711760782]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 8], [52, 34]], "fn_var_ln": {"conn_attrs": [[41, 12], [41, 22]], "field_behaviors": [[40, 12], [40, 27]], "placeholders": [[50, 16], [50, 28]]}, "fn_var_occur": {"conn_attrs": [], "field_behaviors": [["placeholders", "field_behaviors"], ["field_behaviors", "_ensure_prefix", "k", "v", "k", "v", "placeholders", "items"]], "placeholders": [["placeholders", "field_behaviors"], ["field_behaviors", "_ensure_prefix", "k", "v", "k", "v", "placeholders", "items"]]}, "name": "inner", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_ensure_prefixes.<locals>.dec.<locals>.inner", "ret_exprs": ["return field_behaviors"], "ret_type": "", "ret_type_p": [["List[str]", 0.3060297189220665], ["str", 0.21396079358905573], ["Sequence[str]", 0.11677580458257081]], "variables": {"conn_attrs": "", "field_behaviors": "", "placeholders": ""}, "variables_p": {"conn_attrs": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "field_behaviors": [["list", 0.20742656076077715], ["List[int]", 0.17797030915024295], ["Tuple[Sequence[Any]]", 0.1291510821384613], ["Dict[str, List[str]]", 0.11500109773862414], ["dict", 0.10810324803442775], ["int", 0.0894637192639857]], "placeholders": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 4], [54, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dec", "params": {"func": ""}, "params_descr": {"func": ""}, "params_occur": {"func": []}, "params_p": {"args": [], "func": [["Callable", 0.6], ["Callable[..., None]", 0.09999999999999999]], "kwargs": []}, "q_name": "_ensure_prefixes.<locals>.dec", "ret_exprs": ["return inner"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Deprecated.", "long_descr": "Remove when provider min airflow version >= 2.5.0 since this is handled by\nprovider manager from that version.", "ret": null}, "fn_lc": [[29, 0], [56, 14]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_ensure_prefixes", "params": {"conn_type": ""}, "params_descr": {"conn_type": ""}, "params_occur": {"conn_type": []}, "params_p": {"args": [], "conn_type": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "kwargs": []}, "q_name": "_ensure_prefixes", "ret_exprs": ["return dec"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "warnings", "functools", "wraps", "typing", "IO", "Any", "azure", "storage", "file", "File", "FileService", "airflow", "hooks", "base", "BaseHook", "flask_appbuilder", "fieldwidgets", "BS3PasswordFieldWidget", "BS3TextFieldWidget", "flask_babel", "lazy_gettext", "wtforms", "PasswordField", "StringField"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 51, "I": 0, "U": 39}, "session_id": "2gD9A5dvBhiyEy-T9DmwPZ7mde1FNu8sUob6VFXCUiM", "set": null, "tc": [false, null], "type_annot_cove": 0.57, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}