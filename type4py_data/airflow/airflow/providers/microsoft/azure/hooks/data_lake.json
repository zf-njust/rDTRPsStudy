{"error": null, "response": {"classes": [{"cls_lc": [[39, 0], [235, 64]], "cls_var_ln": {"conn_name_attr": [[56, 4], [56, 18]], "conn_type": [[58, 4], [58, 13]], "default_conn_name": [[57, 4], [57, 21]], "hook_name": [[59, 4], [59, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": "Returns connection widgets to add to connection form.", "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [73, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection_form_widgets", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureDataLakeHook.get_connection_form_widgets", "ret_exprs": ["return { \"tenant\": StringField(lazy_gettext(\"Azure Tenant ID\"), widget=BS3TextFieldWidget()), \"account_name\": StringField( lazy_gettext(\"Azure DataLake Store Name\"), widget=BS3TextFieldWidget() ),}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.8957857524958692]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns custom field behaviour.", "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [91, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_ui_field_behaviour", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureDataLakeHook.get_ui_field_behaviour", "ret_exprs": ["return { \"hidden_fields\": [\"schema\", \"port\", \"host\", \"extra\"], \"relabeling\": { \"login\": \"Azure Client ID\", \"password\": \"Azure Client Secret\", }, \"placeholders\": { \"login\": \"client id\", \"password\": \"secret\", \"tenant\": \"tenant id\", \"account_name\": \"datalake store\", },}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.26840508666723273], ["bool", 0.06666744759841305]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [97, 44]], "fn_var_ln": {"_conn": [[96, 8], [96, 18]], "account_name": [[97, 8], [97, 25]], "conn_id": [[95, 8], [95, 20]]}, "fn_var_occur": {"_conn": [["self", "_conn", "core", "AzureDLFileSystem", "None", "None"]], "account_name": [["self", "account_name", "str", "None", "None"]], "conn_id": [["self", "conn_id", "azure_data_lake_conn_id"]]}, "name": "__init__", "params": {"azure_data_lake_conn_id": "builtins.str", "self": ""}, "params_descr": {"azure_data_lake_conn_id": "", "self": ""}, "params_occur": {"azure_data_lake_conn_id": [["self", "conn_id", "azure_data_lake_conn_id"]], "self": [["self", "conn_id", "azure_data_lake_conn_id"], ["self", "_conn", "core", "AzureDLFileSystem", "None", "None"], ["self", "account_name", "str", "None", "None"]]}, "params_p": {"args": [], "azure_data_lake_conn_id": [["int", 0.20035416006964749], ["dict", 0.17430844470911683], ["List[int]", 0.10720866021657167], ["Tuple[str, List[str]]", 0.10720866021657167], ["Dict[str, Dict[str, Any]]", 0.09977995062699149], ["MutableMapping", 0.09448706511511534]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"_conn": "core.AzureDLFileSystem | None", "account_name": "str | None", "conn_id": ""}, "variables_p": {"_conn": [["str", 0.34823480066450474], ["int", 0.17045822378611306], ["bool", 0.16686368249161687], ["Callable[[], None]", 0.11364665600023045]], "account_name": [["Optional[str]", 0.8273511946141541], ["str", 0.17264880538584593]], "conn_id": [["int", 0.6135790376976783], ["str", 0.26444473940675567]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [105, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_field", "params": {"extras": "", "name": "", "self": ""}, "params_descr": {"extras": "", "name": "", "self": ""}, "params_occur": {"extras": [["get_field", "conn_id", "self", "conn_id", "conn_type", "self", "conn_type", "extras", "extras", "field_name", "name"]], "name": [["get_field", "conn_id", "self", "conn_id", "conn_type", "self", "conn_type", "extras", "extras", "field_name", "name"]], "self": [["get_field", "conn_id", "self", "conn_id", "conn_type", "self", "conn_type", "extras", "extras", "field_name", "name"]]}, "params_p": {"args": [], "extras": [["str", 0.6602567335499946], ["Optional[str]", 0.1272380032326978]], "kwargs": [], "name": [["str", 0.6602567335499946], ["Optional[str]", 0.1272380032326978]], "self": []}, "q_name": "AzureDataLakeHook._get_field", "ret_exprs": ["return get_field( conn_id=self.conn_id, conn_type=self.conn_type, extras=extras, field_name=name,)"], "ret_type": "", "ret_type_p": [["str", 0.4888024085178928], ["Optional[str]", 0.2277698379953882], ["Type[T]", 0.09764003360148021], ["bool", 0.09542136382995534]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return a AzureDLFileSystem object.", "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [117, 25]], "fn_var_ln": {"_conn": [[115, 12], [115, 22]], "account_name": [[112, 12], [112, 29]], "adl_creds": [[114, 12], [114, 21]], "conn": [[110, 12], [110, 16]], "extras": [[111, 12], [111, 18]], "tenant": [[113, 12], [113, 18]]}, "fn_var_occur": {"_conn": [["self", "_conn"], ["self", "_conn", "core", "AzureDLFileSystem", "adl_creds", "store_name", "self", "account_name"], ["self", "_conn", "connect"], ["self", "_conn"]], "account_name": [["self", "account_name", "self", "_get_field", "extras"], ["self", "_conn", "core", "AzureDLFileSystem", "adl_creds", "store_name", "self", "account_name"]], "adl_creds": [["adl_creds", "lib", "auth", "tenant_id", "tenant", "client_secret", "conn", "password", "client_id", "conn", "login"], ["self", "_conn", "core", "AzureDLFileSystem", "adl_creds", "store_name", "self", "account_name"]], "conn": [["conn", "self", "get_connection", "self", "conn_id"], ["extras", "conn", "extra_dejson"], ["adl_creds", "lib", "auth", "tenant_id", "tenant", "client_secret", "conn", "password", "client_id", "conn", "login"]], "extras": [["extras", "conn", "extra_dejson"], ["self", "account_name", "self", "_get_field", "extras"], ["tenant", "self", "_get_field", "extras"]], "tenant": [["tenant", "self", "_get_field", "extras"], ["adl_creds", "lib", "auth", "tenant_id", "tenant", "client_secret", "conn", "password", "client_id", "conn", "login"]]}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_conn"], ["conn", "self", "get_connection", "self", "conn_id"], ["self", "account_name", "self", "_get_field", "extras"], ["tenant", "self", "_get_field", "extras"], ["self", "_conn", "core", "AzureDLFileSystem", "adl_creds", "store_name", "self", "account_name"], ["self", "_conn", "connect"], ["self", "_conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureDataLakeHook.get_conn", "ret_exprs": ["return self._conn"], "ret_type": "azure.datalake.store.core.AzureDLFileSystem", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"_conn": "", "account_name": "", "adl_creds": "", "conn": "", "extras": "", "tenant": ""}, "variables_p": {"_conn": [["Tuple[str]", 0.5122153874845262], ["Tuple[str, str, str]", 0.19367938295969145], ["Tuple[Literal, Literal, Literal]", 0.19367938295969145]], "account_name": [["str", 0.9999999999999998]], "adl_creds": [["grpy.repo.base.Connection", 0.08719798872918232]], "conn": [["int", 0.17309522063408783]], "extras": [], "tenant": [["int", 0.1013550304808899]]}}, {"docstring": {"func": "Check if a file exists on Azure Data Lake.", "long_descr": null, "ret": "True if the file exists, False otherwise."}, "fn_lc": [[119, 4], [129, 24]], "fn_var_ln": {"files": [[126, 12], [126, 17]]}, "fn_var_occur": {"files": [["files", "self", "get_conn", "glob", "file_path", "details", "False", "invalidate_cache", "True"], ["len", "files"]]}, "name": "check_for_file", "params": {"file_path": "builtins.str", "self": ""}, "params_descr": {"file_path": "Path and name of the file.", "self": ""}, "params_occur": {"file_path": [["files", "self", "get_conn", "glob", "file_path", "details", "False", "invalidate_cache", "True"]], "self": [["files", "self", "get_conn", "glob", "file_path", "details", "False", "invalidate_cache", "True"]]}, "params_p": {"args": [], "file_path": [["str", 0.9999999999999999]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeHook.check_for_file", "ret_exprs": ["return len(files) == 1", "return False"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.611873542390404], ["List[str]", 0.19252194292060198]], "variables": {"files": ""}, "variables_p": {"files": [["List[str]", 0.4941008327192091], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.21348145694823623], ["str", 0.1995787281999037]]}}, {"docstring": {"func": "Upload a file to Azure Data Lake.", "long_descr": null, "ret": null}, "fn_lc": [[131, 4], [169, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "upload_file", "params": {"blocksize": "builtins.int", "buffersize": "builtins.int", "kwargs": "", "local_path": "builtins.str", "nthreads": "builtins.int", "overwrite": "builtins.bool", "remote_path": "builtins.str", "self": ""}, "params_descr": {"blocksize": "int [2**22]\nNumber of bytes for a block. Within each chunk, we write a smaller\nblock for each API call. This block cannot be bigger than a chunk.", "buffersize": "int [2**22]\nNumber of bytes for internal buffer. This block cannot be bigger than\na chunk and cannot be smaller than a block.", "kwargs": "", "local_path": "local path. Can be single file, directory (in which case,\nupload recursively) or glob pattern. Recursive glob patterns using `**`\nare not supported.", "nthreads": "Number of threads to use. If None, uses the number of cores.", "overwrite": "Whether to forcibly overwrite existing files/directories.\nIf False and remote path is a directory, will quit regardless if any files\nwould be overwritten or not. If True, only matching filenames are actually\noverwritten.", "remote_path": "Remote path to upload to; if multiple files, this is the\ndirectory root to write within.", "self": ""}, "params_occur": {"blocksize": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "buffersize": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "kwargs": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "local_path": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "nthreads": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "overwrite": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "remote_path": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "self": [["multithread", "ADLUploader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]]}, "params_p": {"args": [], "blocksize": [["dict", 0.19482412860737908], ["str", 0.09781408970673794]], "buffersize": [["dict", 0.19482412860737908], ["str", 0.09781408970673794]], "kwargs": [], "local_path": [["dict", 0.19482412860737908], ["str", 0.09781408970673794]], "nthreads": [["dict", 0.19482412860737908], ["str", 0.09781408970673794]], "overwrite": [["dict", 0.19482412860737908], ["str", 0.09781408970673794]], "remote_path": [["dict", 0.19482412860737908], ["str", 0.09781408970673794]], "self": []}, "q_name": "AzureDataLakeHook.upload_file", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Download a file from Azure Blob Storage.", "long_descr": null, "ret": null}, "fn_lc": [[171, 4], [210, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "download_file", "params": {"blocksize": "builtins.int", "buffersize": "builtins.int", "kwargs": "", "local_path": "builtins.str", "nthreads": "builtins.int", "overwrite": "builtins.bool", "remote_path": "builtins.str", "self": ""}, "params_descr": {"blocksize": "int [2**22]\nNumber of bytes for a block. Within each chunk, we write a smaller\nblock for each API call. This block cannot be bigger than a chunk.", "buffersize": "int [2**22]\nNumber of bytes for internal buffer. This block cannot be bigger than\na chunk and cannot be smaller than a block.", "kwargs": "", "local_path": "local path. If downloading a single file, will write to this\nspecific file, unless it is an existing directory, in which case a file is\ncreated within it. If downloading multiple files, this is the root\ndirectory to write within. Will create directories as required.", "nthreads": "Number of threads to use. If None, uses the number of cores.", "overwrite": "Whether to forcibly overwrite existing files/directories.\nIf False and remote path is a directory, will quit regardless if any files\nwould be overwritten or not. If True, only matching filenames are actually\noverwritten.", "remote_path": "remote path/globstring to use to find remote files.\nRecursive glob patterns using `**` are not supported.", "self": ""}, "params_occur": {"blocksize": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "buffersize": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "kwargs": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "local_path": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "nthreads": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "overwrite": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "remote_path": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]], "self": [["multithread", "ADLDownloader", "self", "get_conn", "lpath", "local_path", "rpath", "remote_path", "nthreads", "nthreads", "overwrite", "overwrite", "buffersize", "buffersize", "blocksize", "blocksize", "kwargs"]]}, "params_p": {"args": [], "blocksize": [["dict", 0.18665837992918763], ["str", 0.09530086284734442], ["Dict[str, Any]", 0.09349843472141939]], "buffersize": [["dict", 0.18665837992918763], ["str", 0.09530086284734442], ["Dict[str, Any]", 0.09349843472141939]], "kwargs": [], "local_path": [["dict", 0.18665837992918763], ["str", 0.09530086284734442], ["Dict[str, Any]", 0.09349843472141939]], "nthreads": [["dict", 0.18665837992918763], ["str", 0.09530086284734442], ["Dict[str, Any]", 0.09349843472141939]], "overwrite": [["dict", 0.18665837992918763], ["str", 0.09530086284734442], ["Dict[str, Any]", 0.09349843472141939]], "remote_path": [["dict", 0.18665837992918763], ["str", 0.09530086284734442], ["Dict[str, Any]", 0.09349843472141939]], "self": []}, "q_name": "AzureDataLakeHook.download_file", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "List files in Azure Data Lake Storage.", "long_descr": null, "ret": null}, "fn_lc": [[212, 4], [220, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "list", "params": {"path": "builtins.str", "self": ""}, "params_descr": {"path": "full path/globstring to use to list files in ADLS", "self": ""}, "params_occur": {"path": [["self", "get_conn", "glob", "path"], ["self", "get_conn", "walk", "path"]], "self": [["self", "get_conn", "glob", "path"], ["self", "get_conn", "walk", "path"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.46897695474064766], ["int", 0.2006725797649126]], "self": []}, "q_name": "AzureDataLakeHook.list", "ret_exprs": ["return self.get_conn().glob(path)", "return self.get_conn().walk(path)"], "ret_type": "AzureDataLakeHook.list", "ret_type_p": [["str", 0.26458485765673523], ["bool", 0.19331713211975968], ["int", 0.12843322644534036], ["Hashable", 0.12843322644534036], ["Optional[str]", 0.09890015627029321]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Remove files in Azure Data Lake Storage.", "long_descr": null, "ret": null}, "fn_lc": [[222, 4], [235, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "remove", "params": {"ignore_not_found": "builtins.bool", "path": "builtins.str", "recursive": "builtins.bool", "self": ""}, "params_descr": {"ignore_not_found": "Whether to raise error if file to delete is not found", "path": "A directory or file to remove in ADLS", "recursive": "Whether to loop into directories in the location and remove the files", "self": ""}, "params_occur": {"ignore_not_found": [], "path": [["self", "get_conn", "remove", "path", "path", "recursive", "recursive"], ["self", "log", "info", "path"], ["AirflowException", "path"]], "recursive": [["self", "get_conn", "remove", "path", "path", "recursive", "recursive"]], "self": [["self", "get_conn", "remove", "path", "path", "recursive", "recursive"], ["self", "log", "info", "path"]]}, "params_p": {"args": [], "ignore_not_found": [["bool", 0.4160364483247757], ["Sequence[str]", 0.3118921953135727], ["str", 0.1863050986879762], ["Optional[str]", 0.08576625767367525]], "kwargs": [], "path": [["bool", 0.3984058741047044], ["str", 0.2210506983727542], ["Optional[str]", 0.10057733587929053]], "recursive": [["Optional[str]", 0.33227241156226045], ["str", 0.18466037425503048], ["lib.Path", 0.10791626772203189], ["List[str]", 0.09049009191951514]], "self": []}, "q_name": "AzureDataLakeHook.remove", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "AzureDataLakeHook", "q_name": "AzureDataLakeHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}, {"cls_lc": [[238, 0], [524, 32]], "cls_var_ln": {"conn_name_attr": [[255, 4], [255, 18]], "conn_type": [[257, 4], [257, 13]], "default_conn_name": [[256, 4], [256, 21]], "hook_name": [[258, 4], [258, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": "Returns connection widgets to add to connection form.", "long_descr": null, "ret": null}, "fn_lc": [[261, 4], [274, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection_form_widgets", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.get_connection_form_widgets", "ret_exprs": ["return { \"connection_string\": PasswordField( lazy_gettext(\"ADLS Gen2 Connection String (optional)\"), widget=BS3PasswordFieldWidget() ), \"tenant_id\": StringField( lazy_gettext(\"Tenant ID (Active Directory)\"), widget=BS3TextFieldWidget() ),}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["str", 0.9095362456875393]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns custom field behaviour.", "long_descr": null, "ret": null}, "fn_lc": [[277, 4], [294, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_ui_field_behaviour", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.get_ui_field_behaviour", "ret_exprs": ["return { \"hidden_fields\": [\"schema\", \"port\"], \"relabeling\": { \"login\": \"Client ID (Active Directory)\", \"password\": \"ADLS Gen2 Key / Client Secret (Active Directory)\", \"host\": \"ADLS Gen2 Account Name\", }, \"placeholders\": { \"extra\": \"additional options for use with FileService and AzureFileVolume\", \"login\": \"client id\", \"password\": \"key / secret\", \"host\": \"storage account name\", \"connection_string\": \"connection string (overrides auth)\", \"tenant_id\": \"tenant id\", },}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["float", 0.29995191208247274], ["rl_algorithms.utils.config.ConfigDict", 0.11615920755370705]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[296, 4], [300, 45]], "fn_var_ln": {"conn_id": [[298, 8], [298, 20]], "public_read": [[299, 8], [299, 24]], "service_client": [[300, 8], [300, 27]]}, "fn_var_occur": {"conn_id": [["self", "conn_id", "adls_conn_id"]], "public_read": [["self", "public_read", "public_read"]], "service_client": [["self", "service_client", "self", "get_conn"]]}, "name": "__init__", "params": {"adls_conn_id": "builtins.str", "public_read": "builtins.bool", "self": ""}, "params_descr": {"adls_conn_id": "", "public_read": "", "self": ""}, "params_occur": {"adls_conn_id": [["self", "conn_id", "adls_conn_id"]], "public_read": [["self", "public_read", "public_read"]], "self": [["self", "conn_id", "adls_conn_id"], ["self", "public_read", "public_read"], ["self", "service_client", "self", "get_conn"]]}, "params_p": {"adls_conn_id": [["str", 0.3022764744006824], ["Set[str]", 0.1500193979738091], ["Sequence[str]", 0.12365867496032008]], "args": [], "kwargs": [], "public_read": [["str", 0.4246986575856029], ["int", 0.18514370274513223], ["Dict[str, int]", 0.10446565479829607], ["List[str]", 0.10101361599084091], ["Optional[bool]", 0.0865517953609235]], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"conn_id": "", "public_read": "", "service_client": ""}, "variables_p": {"conn_id": [["int", 0.7764564279050963], ["str", 0.2235435720949038]], "public_read": [["str", 0.3617919556383191], ["List[str]", 0.19576913555314202], ["int", 0.07949078511329168], ["set", 0.07785877221583438]], "service_client": [["str", 0.8167278033974936], ["bool", 0.09229143760255262], ["int", 0.09098075899995374]]}}, {"docstring": {"func": "Return the DataLakeServiceClient object.", "long_descr": null, "ret": null}, "fn_lc": [[302, 4], [326, 9]], "fn_var_ln": {"app_id": [[315, 12], [315, 18]], "app_secret": [[316, 12], [316, 22]], "conn": [[304, 8], [304, 12]], "connection_string": [[307, 8], [307, 25]], "credential": [[323, 8], [323, 18]], "extra": [[305, 8], [305, 13]], "tenant": [[312, 8], [312, 14]], "token_credential": [[317, 12], [317, 28]]}, "fn_var_occur": {"app_id": [["app_id", "conn", "login"], ["token_credential", "ClientSecretCredential", "tenant", "app_id", "app_secret"]], "app_secret": [["app_secret", "conn", "password"], ["token_credential", "ClientSecretCredential", "tenant", "app_id", "app_secret"]], "conn": [["conn", "self", "get_connection", "self", "conn_id"], ["extra", "conn", "extra_dejson"], ["app_id", "conn", "login"], ["app_secret", "conn", "password"], ["DataLakeServiceClient", "account_url", "conn", "host", "credential", "token_credential", "extra"], ["credential", "conn", "password"], ["DataLakeServiceClient", "account_url", "conn", "host", "credential", "credential", "extra"]], "connection_string": [["connection_string", "self", "_get_field", "extra"], ["DataLakeServiceClient", "from_connection_string", "connection_string", "extra"]], "credential": [["DataLakeServiceClient", "account_url", "conn", "host", "credential", "token_credential", "extra"], ["credential", "conn", "password"], ["DataLakeServiceClient", "account_url", "conn", "host", "credential", "credential", "extra"]], "extra": [["extra", "conn", "extra_dejson"], ["connection_string", "self", "_get_field", "extra"], ["DataLakeServiceClient", "from_connection_string", "connection_string", "extra"], ["tenant", "self", "_get_field", "extra"], ["DataLakeServiceClient", "account_url", "conn", "host", "credential", "token_credential", "extra"], ["DataLakeServiceClient", "account_url", "conn", "host", "credential", "credential", "extra"]], "tenant": [["tenant", "self", "_get_field", "extra"], ["token_credential", "ClientSecretCredential", "tenant", "app_id", "app_secret"]], "token_credential": [["token_credential", "ClientSecretCredential", "tenant", "app_id", "app_secret"], ["DataLakeServiceClient", "account_url", "conn", "host", "credential", "token_credential", "extra"]]}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["conn", "self", "get_connection", "self", "conn_id"], ["connection_string", "self", "_get_field", "extra"], ["tenant", "self", "_get_field", "extra"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.get_conn", "ret_exprs": ["return DataLakeServiceClient.from_connection_string(connection_string, **extra)", "return DataLakeServiceClient( account_url=f\"https://{conn.host}.dfs.core.windows.net\", credential=token_credential, **extra)", "return DataLakeServiceClient( account_url=f\"https://{conn.host}.dfs.core.windows.net\", credential=credential, **extra)"], "ret_type": "azure.storage.filedatalake.DataLakeServiceClient", "ret_type_p": [["str", 0.34603731681314737], ["Optional[Exception]", 0.17289498062140418], ["List[str]", 0.10110967219361969], ["int", 0.08935951717676135]], "variables": {"app_id": "", "app_secret": "", "conn": "", "connection_string": "", "credential": "", "extra": "", "tenant": "", "token_credential": ""}, "variables_p": {"app_id": [["Dict[str, str]", 0.38762705209723397], ["int", 0.20042123412155627], ["list", 0.1852093159031692], ["str", 0.08515636363893116]], "app_secret": [["str", 0.40367816297867815], ["int", 0.07234912207278799]], "conn": [["int", 0.3683599568557637], ["bool", 0.11790222214475257], ["cmk.base.api.agent_based.type_defs.Parameters", 0.08998642387182974]], "connection_string": [["str", 0.8968979895472526]], "credential": [["str", 0.26627546232540317], ["int", 0.10299139069718109]], "extra": [], "tenant": [["str", 0.5050078215700097], ["Dict[str, str]", 0.09627608077494089]], "token_credential": [["str", 0.1860658876016098], ["Optional[str]", 0.18564418117151277], ["cmk.utils.type_defs.UserId", 0.10267895532683995]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[328, 4], [337, 62]], "fn_var_ln": {"prefix": [[329, 8], [329, 14]]}, "fn_var_occur": {"prefix": [["ValueError", "field_name", "prefix"], ["extra_dict", "get", "prefix", "field_name", "None"]]}, "name": "_get_field", "params": {"extra_dict": "", "field_name": "", "self": ""}, "params_descr": {"extra_dict": "", "field_name": "", "self": ""}, "params_occur": {"extra_dict": [["field_name", "extra_dict"], ["extra_dict", "field_name", "None"], ["extra_dict", "get", "prefix", "field_name", "None"]], "field_name": [["field_name", "startswith"], ["ValueError", "field_name", "prefix"], ["field_name", "extra_dict"], ["extra_dict", "field_name", "None"], ["extra_dict", "get", "prefix", "field_name", "None"]], "self": []}, "params_p": {"args": [], "extra_dict": [["dict", 0.2972255113996592], ["Dict[str, Any]", 0.23575405698858326], ["bool", 0.14308953210888828], ["Dict[str, None]", 0.09475400954020637], ["str", 0.09425517426128378]], "field_name": [["str", 0.45926051955278635], ["Dict[str, object]", 0.08724927014718958], ["List[str]", 0.08693272517773945]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook._get_field", "ret_exprs": ["return extra_dict[field_name] or None", "return extra_dict.get(f\"{prefix}{field_name}\") or None"], "ret_type": "", "ret_type_p": [["str", 0.3412933990608534], ["dict", 0.10496717565381466], ["Dict[str, Any]", 0.10129719156352657], ["Dict[str, str]", 0.09152216755771053], ["Optional[cmk.utils.type_defs.SectionName]", 0.08945144644494311]], "variables": {"prefix": ""}, "variables_p": {"prefix": [["str", 0.5024915792141416], ["int", 0.09351041996380402], ["dict", 0.0826596371087761], ["Dict[str, List[Any]]", 0.07200989281802962]]}}, {"docstring": {"func": "Create a new file system under the specified account.", "long_descr": "A container acts as a file system for your files.\n\nIf the file system with the same name already exists, a ResourceExistsError will\nbe raised. This method returns a client with which to interact with the newly\ncreated file system.", "ret": null}, "fn_lc": [[339, 4], [355, 17]], "fn_var_ln": {"file_system_client": [[349, 12], [349, 30]]}, "fn_var_occur": {"file_system_client": [["file_system_client", "self", "service_client", "create_file_system", "file_system", "file_system_name"], ["self", "log", "info", "file_system_client", "file_system_name"]]}, "name": "create_file_system", "params": {"file_system_name": "builtins.str", "self": ""}, "params_descr": {"file_system_name": "", "self": ""}, "params_occur": {"file_system_name": [["file_system_client", "self", "service_client", "create_file_system", "file_system", "file_system_name"], ["self", "log", "info", "file_system_client", "file_system_name"], ["self", "log", "info", "file_system_name"], ["self", "log", "info", "file_system_name", "e"]], "self": [["file_system_client", "self", "service_client", "create_file_system", "file_system", "file_system_name"], ["self", "log", "info", "file_system_client", "file_system_name"], ["self", "log", "info", "file_system_name"], ["self", "log", "info", "file_system_name", "e"]]}, "params_p": {"args": [], "file_system_name": [["str", 0.6937315648178651]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.create_file_system", "ret_exprs": [], "ret_type": "None", "variables": {"file_system_client": ""}, "variables_p": {"file_system_client": [["str", 0.31139565172792383], ["Dict[str, str]", 0.11932308871633844], ["list", 0.11501687933036481], ["int", 0.10070738250909571], ["blockstore.apps.bundles.store.SnapshotRepo", 0.09273325276407908]]}}, {"docstring": {"func": "Get a client to interact with the specified file system.", "long_descr": null, "ret": null}, "fn_lc": [[357, 4], [371, 17]], "fn_var_ln": {"file_system_client": [[364, 12], [364, 30]]}, "fn_var_occur": {"file_system_client": [["file_system_client", "self", "service_client", "get_file_system_client", "file_system", "file_system"]]}, "name": "get_file_system", "params": {"file_system": "FileSystemProperties | str", "self": ""}, "params_descr": {"file_system": "This can either be the name of the file system\nor an instance of FileSystemProperties.", "self": ""}, "params_occur": {"file_system": [["file_system_client", "self", "service_client", "get_file_system_client", "file_system", "file_system"], ["self", "log", "info", "file_system"], ["self", "log", "info", "file_system", "e"]], "self": [["file_system_client", "self", "service_client", "get_file_system_client", "file_system", "file_system"], ["self", "log", "info", "file_system"], ["self", "log", "info", "file_system", "e"]]}, "params_p": {"args": [], "file_system": [["Optional[str]", 0.10120464134891248], ["waterbutler.core.path.WaterButlerPath", 0.09989368048534304]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.get_file_system", "ret_exprs": ["return file_system_client"], "ret_type": "azure.storage.filedatalake.FileSystemClient", "ret_type_p": [["str", 0.2680678988407985]], "variables": {"file_system_client": ""}, "variables_p": {"file_system_client": [["str", 0.6258726804934354], ["int", 0.18967357639849156]]}}, {"docstring": {"func": "Create a directory under the specified file system.", "long_descr": null, "ret": null}, "fn_lc": [[373, 4], [382, 21]], "fn_var_ln": {"result": [[381, 8], [381, 14]]}, "fn_var_occur": {"result": [["result", "self", "get_file_system", "file_system_name", "create_directory", "directory_name", "kwargs"]]}, "name": "create_directory", "params": {"directory_name": "builtins.str", "file_system_name": "FileSystemProperties | str", "kwargs": "", "self": ""}, "params_descr": {"directory_name": "Name of the directory which needs to be created in the file system.", "file_system_name": "Name of the file system or instance of FileSystemProperties.", "kwargs": "", "self": ""}, "params_occur": {"directory_name": [["result", "self", "get_file_system", "file_system_name", "create_directory", "directory_name", "kwargs"]], "file_system_name": [["result", "self", "get_file_system", "file_system_name", "create_directory", "directory_name", "kwargs"]], "kwargs": [["result", "self", "get_file_system", "file_system_name", "create_directory", "directory_name", "kwargs"]], "self": [["result", "self", "get_file_system", "file_system_name", "create_directory", "directory_name", "kwargs"]]}, "params_p": {"args": [], "directory_name": [["str", 0.9999999999999999]], "file_system_name": [["str", 0.9999999999999999]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.create_directory", "ret_exprs": ["return result"], "ret_type": "azure.storage.filedatalake.DataLakeDirectoryClient", "ret_type_p": [["wtforms.fields.core.UnboundField", 0.2779069645173784], ["Union[int, float, complex]", 0.1077591331223876], ["list", 0.09782584372838045], ["set", 0.0932440618753408]], "variables": {"result": ""}, "variables_p": {"result": [["str", 0.40679033115568447], ["List[List[int]]", 0.09431789095558238], ["dict", 0.08744390487863067]]}}, {"docstring": {"func": "Get the specific directory under the specified file system.", "long_descr": null, "ret": null}, "fn_lc": [[384, 4], [405, 17]], "fn_var_ln": {"directory_client": [[396, 12], [396, 28]]}, "fn_var_occur": {"directory_client": [["directory_client", "self", "get_file_system", "file_system_name", "get_directory_client", "directory_name"]]}, "name": "get_directory_client", "params": {"directory_name": "DirectoryProperties | str", "file_system_name": "FileSystemProperties | str", "self": ""}, "params_descr": {"directory_name": "Name of the directory or instance of DirectoryProperties which needs to be\nretrieved from the file system.", "file_system_name": "Name of the file system or instance of FileSystemProperties.", "self": ""}, "params_occur": {"directory_name": [["directory_client", "self", "get_file_system", "file_system_name", "get_directory_client", "directory_name"], ["self", "log", "info", "directory_name", "file_system_name"]], "file_system_name": [["directory_client", "self", "get_file_system", "file_system_name", "get_directory_client", "directory_name"], ["self", "log", "info", "directory_name", "file_system_name"]], "self": [["directory_client", "self", "get_file_system", "file_system_name", "get_directory_client", "directory_name"], ["self", "log", "info", "directory_name", "file_system_name"], ["self", "log", "info", "e"]]}, "params_p": {"args": [], "directory_name": [["str", 0.8907574270136381], ["bool", 0.10924257298636203]], "file_system_name": [["str", 0.8907574270136381], ["bool", 0.10924257298636203]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.get_directory_client", "ret_exprs": ["return directory_client"], "ret_type": "azure.storage.filedatalake.DataLakeDirectoryClient", "ret_type_p": [["float", 0.12120793692630817], ["baseplate.lib.metrics.Client", 0.08543600705501844]], "variables": {"directory_client": ""}, "variables_p": {"directory_client": [["Generator[Any, None, None]", 0.3403474781248177], ["str", 0.23095443189930365], ["Dict[str, Dict[str, Any]]", 0.12990606932410592], ["List[Dict[str, Any]]", 0.11265818403472393], ["baseplate.lib.metrics.Client", 0.09228332465058578]]}}, {"docstring": {"func": "Create a file under the file system.", "long_descr": null, "ret": null}, "fn_lc": [[407, 4], [414, 26]], "fn_var_ln": {"file_client": [[413, 8], [413, 19]]}, "fn_var_occur": {"file_client": [["file_client", "self", "get_file_system", "file_system_name", "create_file", "file_name"]]}, "name": "create_file", "params": {"file_name": "builtins.str", "file_system_name": "FileSystemProperties | str", "self": ""}, "params_descr": {"file_name": "Name of the file which needs to be created in the file system.", "file_system_name": "Name of the file system or instance of FileSystemProperties.", "self": ""}, "params_occur": {"file_name": [["file_client", "self", "get_file_system", "file_system_name", "create_file", "file_name"]], "file_system_name": [["file_client", "self", "get_file_system", "file_system_name", "create_file", "file_name"]], "self": [["file_client", "self", "get_file_system", "file_system_name", "create_file", "file_name"]]}, "params_p": {"args": [], "file_name": [["str", 0.8261925488091864], ["Dict[str, str]", 0.0871708911623395]], "file_system_name": [["str", 0.8261925488091864], ["Dict[str, str]", 0.0871708911623395]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.create_file", "ret_exprs": ["return file_client"], "ret_type": "azure.storage.filedatalake.DataLakeFileClient", "ret_type_p": [["str", 0.3068854983347695], ["Tuple[str, str]", 0.11186389712960304], ["List[str]", 0.1043033522217303], ["Dict[str, str]", 0.0903751691008313], ["Optional[str]", 0.08329534056097478]], "variables": {"file_client": ""}, "variables_p": {"file_client": [["str", 0.18657559271444485], ["Dict[str, Union[Any, Any]]", 0.13989797968128653], ["List[str]", 0.09068439405867645]]}}, {"docstring": {"func": "Create a file with data in the file system.", "long_descr": null, "ret": null}, "fn_lc": [[416, 4], [433, 77]], "fn_var_ln": {"file_client": [[431, 8], [431, 19]]}, "fn_var_occur": {"file_client": [["file_client", "self", "create_file", "file_system_name", "file_name"], ["file_client", "upload_data", "data", "overwrite", "overwrite", "kwargs", "kwargs"]]}, "name": "upload_file", "params": {"file_name": "builtins.str", "file_path": "builtins.str", "file_system_name": "FileSystemProperties | str", "kwargs": "typing.Any", "overwrite": "builtins.bool", "self": ""}, "params_descr": {"file_name": "Name of the file to be created with name.", "file_path": "Path to the file to load.", "file_system_name": "Name of the file system or instance of FileSystemProperties.", "kwargs": "", "overwrite": "Boolean flag to overwrite an existing file or not.", "self": ""}, "params_occur": {"file_name": [["file_client", "self", "create_file", "file_system_name", "file_name"]], "file_path": [["open", "file_path", "data"]], "file_system_name": [["file_client", "self", "create_file", "file_system_name", "file_name"]], "kwargs": [["file_client", "upload_data", "data", "overwrite", "overwrite", "kwargs", "kwargs"]], "overwrite": [["file_client", "upload_data", "data", "overwrite", "overwrite", "kwargs", "kwargs"]], "self": [["file_client", "self", "create_file", "file_system_name", "file_name"]]}, "params_p": {"args": [], "file_name": [["str", 0.8128286166802714], ["Optional[str]", 0.0866328171854908]], "file_path": [["str", 0.9999999999999997]], "file_system_name": [["str", 0.8128286166802714], ["Optional[str]", 0.0866328171854908]], "kwargs": [], "overwrite": [["str", 0.8942520592309621], ["list", 0.10574794076903779]], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.upload_file", "ret_exprs": [], "ret_type": "None", "variables": {"file_client": ""}, "variables_p": {"file_client": [["str", 0.7916053104671921], ["list", 0.08653575367543748]]}}, {"docstring": {"func": "Upload data to a file.", "long_descr": null, "ret": null}, "fn_lc": [[435, 4], [455, 77]], "fn_var_ln": {"directory_client": [[452, 8], [452, 24]], "file_client": [[453, 8], [453, 19]]}, "fn_var_occur": {"directory_client": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name", "directory_name"], ["file_client", "directory_client", "create_file", "file_name", "kwargs", "kwargs"]], "file_client": [["file_client", "directory_client", "create_file", "file_name", "kwargs", "kwargs"], ["file_client", "upload_data", "data", "overwrite", "overwrite", "kwargs", "kwargs"]]}, "name": "upload_file_to_directory", "params": {"directory_name": "builtins.str", "file_name": "builtins.str", "file_path": "builtins.str", "file_system_name": "builtins.str", "kwargs": "typing.Any", "overwrite": "builtins.bool", "self": ""}, "params_descr": {"directory_name": "Name of the directory.", "file_name": "Name of the file to be created with name.", "file_path": "Path to the file to load.", "file_system_name": "Name of the file system or instance of FileSystemProperties.", "kwargs": "", "overwrite": "Boolean flag to overwrite an existing file or not.", "self": ""}, "params_occur": {"directory_name": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name", "directory_name"]], "file_name": [["file_client", "directory_client", "create_file", "file_name", "kwargs", "kwargs"]], "file_path": [["open", "file_path", "data"]], "file_system_name": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name", "directory_name"]], "kwargs": [["file_client", "directory_client", "create_file", "file_name", "kwargs", "kwargs"], ["file_client", "upload_data", "data", "overwrite", "overwrite", "kwargs", "kwargs"]], "overwrite": [["file_client", "upload_data", "data", "overwrite", "overwrite", "kwargs", "kwargs"]], "self": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name", "directory_name"]]}, "params_p": {"args": [], "directory_name": [["str", 0.7886750097884294], ["Optional[str]", 0.21132499021157045]], "file_name": [["str", 0.7086939493658396], ["int", 0.08614291539496034], ["Optional[str]", 0.08614291539496034]], "file_path": [["str", 0.9999999999999998]], "file_system_name": [["str", 0.7886750097884294], ["Optional[str]", 0.21132499021157045]], "kwargs": [], "overwrite": [["str", 0.6988247458354625], ["list", 0.11530410178038472], ["Dict[str, int]", 0.10047910969597978], ["Pattern[str]", 0.08539204268817296]], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.upload_file_to_directory", "ret_exprs": [], "ret_type": "None", "variables": {"directory_client": "", "file_client": ""}, "variables_p": {"directory_client": [["str", 0.4663410292958138], ["set", 0.10762151221167407], ["List[Dict[str, Any]]", 0.09732030216232633], ["Dict[str, str]", 0.08809166683241951]], "file_client": [["str", 0.6909655315254144], ["list", 0.11816478776944189], ["int", 0.08749890001572555]]}}, {"docstring": {"func": "List files or directories under the specified file system.", "long_descr": null, "ret": null}, "fn_lc": [[457, 4], [469, 30]], "fn_var_ln": {"directory_lists": [[466, 8], [466, 23]], "paths": [[465, 8], [465, 13]]}, "fn_var_occur": {"directory_lists": [["directory_lists", "append", "path", "name"]], "paths": [["paths", "self", "get_file_system", "file_system", "file_system_name", "get_paths", "directory_name"]]}, "name": "list_files_directory", "params": {"directory_name": "builtins.str", "file_system_name": "FileSystemProperties | str", "self": ""}, "params_descr": {"directory_name": "Name of the directory.", "file_system_name": "Name of the file system or instance of FileSystemProperties.", "self": ""}, "params_occur": {"directory_name": [["paths", "self", "get_file_system", "file_system", "file_system_name", "get_paths", "directory_name"]], "file_system_name": [["paths", "self", "get_file_system", "file_system", "file_system_name", "get_paths", "directory_name"]], "self": [["paths", "self", "get_file_system", "file_system", "file_system_name", "get_paths", "directory_name"]]}, "params_p": {"args": [], "directory_name": [["str", 0.8359129323305053], ["List[str]", 0.08723357224406274]], "file_system_name": [["str", 0.8359129323305053], ["List[str]", 0.08723357224406274]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.list_files_directory", "ret_exprs": ["return directory_lists"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.4070902216596209], ["List[str]", 0.2735608792899848], ["list", 0.14249278280448444], ["List[Tuple[str, str]]", 0.08842805812295497], ["List[Tuple[int, int, Any]]", 0.08842805812295497]], "variables": {"directory_lists": "", "paths": ""}, "variables_p": {"directory_lists": [["list", 0.7335532063561139], ["str", 0.09580967028854591], ["set", 0.08713680945587791], ["List[str]", 0.08350031389946228]], "paths": [["str", 0.38762561007581436], ["list", 0.3619341485694329], ["Pattern[str]", 0.07460932553299658]]}}, {"docstring": {"func": "List file systems under the specified account.", "long_descr": null, "ret": null}, "fn_lc": [[471, 4], [488, 31]], "fn_var_ln": {"file_system": [[482, 8], [482, 19]], "file_system_list": [[485, 8], [485, 24]]}, "fn_var_occur": {"file_system": [["file_system", "self", "service_client", "list_file_systems", "name_starts_with", "prefix", "include_metadata", "include_metadata"]], "file_system_list": [["file_system_list", "append", "fs", "name"]]}, "name": "list_file_system", "params": {"include_metadata": "builtins.bool", "kwargs": "typing.Any", "prefix": "str | None", "self": ""}, "params_descr": {"include_metadata": "Specifies that file system metadata be returned in the response.\nThe default value is `False`.", "kwargs": "", "prefix": "Filters the results to return only file systems whose names\nbegin with the specified prefix.", "self": ""}, "params_occur": {"include_metadata": [["file_system", "self", "service_client", "list_file_systems", "name_starts_with", "prefix", "include_metadata", "include_metadata"]], "kwargs": [], "prefix": [["file_system", "self", "service_client", "list_file_systems", "name_starts_with", "prefix", "include_metadata", "include_metadata"]], "self": [["file_system", "self", "service_client", "list_file_systems", "name_starts_with", "prefix", "include_metadata", "include_metadata"]]}, "params_p": {"args": [], "include_metadata": [["str", 0.7393329989936552], ["Optional[str]", 0.08746756330574544], ["List[str]", 0.08481323338372813]], "kwargs": [], "prefix": [["str", 0.7393329989936552], ["Optional[str]", 0.08746756330574544], ["List[str]", 0.08481323338372813]], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.list_file_system", "ret_exprs": ["return file_system_list"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.6124682319339649], ["List[str]", 0.09934179960163378]], "variables": {"file_system": "", "file_system_list": ""}, "variables_p": {"file_system": [["List[str]", 0.2309857369889973], ["dict", 0.18924575417856532], ["Dict[str, str]", 0.16027989432202114], ["list", 0.12810992150425438], ["Optional[BinaryIO]", 0.12253702963229353], ["OrderedDict[str, str]", 0.08805874241412935], ["Dict[str, Dict[str, str]]", 0.08078292095973902]], "file_system_list": [["list", 0.6355704530110005], ["List[str]", 0.16964191212907107], ["List[Tuple[str, str, str, Any]]", 0.11267936196173589], ["Tuple[str, str, str, str]", 0.08210827289819252]]}}, {"docstring": {"func": "Delete the file system.", "long_descr": null, "ret": null}, "fn_lc": [[490, 4], [502, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "delete_file_system", "params": {"file_system_name": "FileSystemProperties | str", "self": ""}, "params_descr": {"file_system_name": "Name of the file system or instance of FileSystemProperties.", "self": ""}, "params_occur": {"file_system_name": [["self", "service_client", "delete_file_system", "file_system_name"], ["self", "log", "info", "file_system_name"], ["self", "log", "info", "file_system_name"], ["self", "log", "info", "file_system_name", "e"]], "self": [["self", "service_client", "delete_file_system", "file_system_name"], ["self", "log", "info", "file_system_name"], ["self", "log", "info", "file_system_name"], ["self", "log", "info", "file_system_name", "e"]]}, "params_p": {"args": [], "file_system_name": [["str", 1.0000000000000002]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.delete_file_system", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Delete the specified directory in a file system.", "long_descr": null, "ret": null}, "fn_lc": [[504, 4], [511, 43]], "fn_var_ln": {"directory_client": [[510, 8], [510, 24]]}, "fn_var_occur": {"directory_client": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name"], ["directory_client", "delete_directory"]]}, "name": "delete_directory", "params": {"directory_name": "builtins.str", "file_system_name": "FileSystemProperties | str", "self": ""}, "params_descr": {"directory_name": "Name of the directory.", "file_system_name": "Name of the file system or instance of FileSystemProperties.", "self": ""}, "params_occur": {"directory_name": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name"]], "file_system_name": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name"]], "self": [["directory_client", "self", "get_directory_client", "file_system_name", "directory_name"]]}, "params_p": {"args": [], "directory_name": [["str", 0.6980811863358082], ["List[str]", 0.20023700280647763], ["Optional[str]", 0.1016818108577142]], "file_system_name": [["str", 0.6980811863358082], ["List[str]", 0.20023700280647763], ["Optional[str]", 0.1016818108577142]], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.delete_directory", "ret_exprs": [], "ret_type": "None", "variables": {"directory_client": ""}, "variables_p": {"directory_client": [["str", 0.6572978160068774], ["dragonchain.lib.dto.model.InterchainModel", 0.11201479090075192], ["Dict[str, str]", 0.07843698360280779], ["Dict[str, Dict[str, Any]]", 0.07791096732556065]]}}, {"docstring": {"func": "Test ADLS Gen2 Storage connection.", "long_descr": null, "ret": null}, "fn_lc": [[513, 4], [524, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["next", "self", "get_conn", "list_file_systems", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AzureDataLakeStorageV2Hook.test_connection", "ret_exprs": ["return True, \"Successfully connected to ADLS Gen2 Storage.\"", "return False, str(e)"], "ret_type": "", "ret_type_p": [["str", 0.3994306481661175], ["bool", 0.18866678004771367]], "variables": {}, "variables_p": {}}], "name": "AzureDataLakeStorageV2Hook", "q_name": "AzureDataLakeStorageV2Hook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "Any", "azure", "core", "exceptions", "ResourceExistsError", "ResourceNotFoundError", "azure", "datalake", "store", "core", "lib", "multithread", "azure", "identity", "ClientSecretCredential", "azure", "storage", "filedatalake", "DataLakeDirectoryClient", "DataLakeFileClient", "DataLakeServiceClient", "DirectoryProperties", "FileSystemClient", "FileSystemProperties", "airflow", "exceptions", "AirflowException", "airflow", "hooks", "base", "BaseHook", "airflow", "providers", "microsoft", "azure", "utils", "_ensure_prefixes", "get_field", "flask_appbuilder", "fieldwidgets", "BS3TextFieldWidget", "flask_babel", "lazy_gettext", "wtforms", "StringField", "flask_appbuilder", "fieldwidgets", "BS3PasswordFieldWidget", "BS3TextFieldWidget", "flask_babel", "lazy_gettext", "wtforms", "PasswordField", "StringField"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 72, "I": 0, "U": 51}, "session_id": "Lrxt9hk93qPrTTl0PRIiNJzcmjNZmaIVx9gYgHXERZQ", "set": null, "tc": [false, null], "type_annot_cove": 0.59, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}