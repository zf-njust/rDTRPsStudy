{"error": null, "response": {"classes": [{"cls_lc": [[31, 0], [37, 95]], "cls_var_ln": {"inputs": [[34, 4], [34, 10]], "job_facets": [[37, 4], [37, 14]], "outputs": [[35, 4], [35, 11]], "run_facets": [[36, 4], [36, 14]]}, "cls_var_occur": {"inputs": [], "job_facets": [], "outputs": [], "run_facets": []}, "funcs": [], "name": "OperatorLineage", "q_name": "OperatorLineage", "variables": {"inputs": "builtins.list[openlineage.client.run.Dataset]", "job_facets": "builtins.dict[builtins.str, openlineage.client.facet.BaseFacet]", "outputs": "builtins.list[openlineage.client.run.Dataset]", "run_facets": "builtins.dict[builtins.str, openlineage.client.facet.BaseFacet]"}, "variables_p": {"inputs": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "job_facets": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "outputs": [["bool", 0.09999999999999999], ["int", 0.09999999999999999], ["Optional[int]", 0.09999999999999999], ["list", 0.09999999999999999], ["dict", 0.09999999999999999], ["Tuple[str, str]", 0.09999999999999999]], "run_facets": [["int", 0.7], ["bool", 0.1], ["str", 0.1]]}}, {"cls_lc": [[40, 0], [70, 29]], "cls_var_ln": {"_allowed_query_params": [[46, 4], [46, 25]]}, "cls_var_occur": {"_allowed_query_params": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [50, 32]], "fn_var_ln": {"operator": [[50, 8], [50, 21]]}, "fn_var_occur": {"operator": [["self", "operator", "operator"]]}, "name": "__init__", "params": {"operator": "", "self": ""}, "params_descr": {"operator": "", "self": ""}, "params_occur": {"operator": [["self", "operator", "operator"]], "self": [["self", "operator", "operator"]]}, "params_p": {"args": [], "kwargs": [], "operator": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "self": []}, "q_name": "BaseExtractor.__init__", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": "Get a list of operators that extractor works for.", "long_descr": "This is an abstract method that subclasses should implement. There are\noperators that work very similarly and one extractor can cover.", "ret": null}, "fn_lc": [[54, 4], [60, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_operator_classnames", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["bool", 0.3], ["Optional[str]", 0.19999999999999998], ["str", 0.09999999999999999], ["Type[T]", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "BaseExtractor.get_operator_classnames", "ret_exprs": [], "ret_type": "builtins.list[builtins.str]", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [63, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "validate", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "operator", "task_type", "self", "get_operator_classnames"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExtractor.validate", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[66, 4], [67, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "extract", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExtractor.extract", "ret_exprs": [], "ret_type": "OperatorLineage | None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [70, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "extract_on_complete", "params": {"self": "", "task_instance": ""}, "params_descr": {"self": "", "task_instance": ""}, "params_occur": {"self": [["self", "extract"]], "task_instance": []}, "params_p": {"args": [], "kwargs": [], "self": [], "task_instance": [["List[str]", 0.3999999983970881], ["str", 0.3999999983970881], ["Dict[str, Any]", 1.818053837426593e-11]]}, "q_name": "BaseExtractor.extract_on_complete", "ret_exprs": ["return self.extract()"], "ret_type": "OperatorLineage | None", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}], "name": "BaseExtractor", "q_name": "BaseExtractor", "variables": {"_allowed_query_params": "builtins.list[builtins.str]"}, "variables_p": {"_allowed_query_params": [["bool", 0.8930943236149689], ["List[str]", 0.10690567638503097]]}}, {"cls_lc": [[73, 0], [118, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Assign this extractor to *no* operators.", "long_descr": "Default extractor is chosen not on the classname basis, but\nby existence of get_openlineage_facets method on operator.", "ret": null}, "fn_lc": [[77, 4], [83, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_operator_classnames", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["bool", 0.3], ["Optional[str]", 0.19999999999999998], ["str", 0.09999999999999999], ["Type[T]", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "DefaultExtractor.get_operator_classnames", "ret_exprs": ["return []"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [89, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "extract", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_get_openlineage_facets", "self", "operator", "get_openlineage_facets_on_start"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DefaultExtractor.extract", "ret_exprs": ["return self._get_openlineage_facets(self.operator.get_openlineage_facets_on_start)", "return None"], "ret_type": "OperatorLineage | None", "ret_type_p": [["str", 0.30009445337282314], ["bool", 0.25120233044067886], ["int", 0.09680049777761746]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [99, 29]], "fn_var_ln": {"on_complete": [[96, 8], [96, 19]], "on_failed": [[93, 12], [93, 21]]}, "fn_var_occur": {"on_complete": [["on_complete", "getattr", "self", "operator", "None"], ["on_complete", "callable", "on_complete"], ["self", "_get_openlineage_facets", "on_complete", "task_instance"]], "on_failed": [["on_failed", "getattr", "self", "operator", "None"], ["on_failed", "callable", "on_failed"], ["self", "_get_openlineage_facets", "on_failed", "task_instance"]]}, "name": "extract_on_complete", "params": {"self": "", "task_instance": ""}, "params_descr": {"self": "", "task_instance": ""}, "params_occur": {"self": [["on_failed", "getattr", "self", "operator", "None"], ["self", "_get_openlineage_facets", "on_failed", "task_instance"], ["on_complete", "getattr", "self", "operator", "None"], ["self", "_get_openlineage_facets", "on_complete", "task_instance"], ["self", "extract"]], "task_instance": [["task_instance", "state", "TaskInstanceState", "FAILED"], ["self", "_get_openlineage_facets", "on_failed", "task_instance"], ["self", "_get_openlineage_facets", "on_complete", "task_instance"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_instance": [["Callable", 0.08528530804928834]]}, "q_name": "DefaultExtractor.extract_on_complete", "ret_exprs": ["return self._get_openlineage_facets(on_failed, task_instance)", "return self._get_openlineage_facets(on_complete, task_instance)", "return self.extract()"], "ret_type": "OperatorLineage | None", "ret_type_p": [["str", 0.20495743287956028], ["dict", 0.09782687359491056], ["int", 0.09679042748150259]], "variables": {"on_complete": "", "on_failed": ""}, "variables_p": {"on_complete": [["int", 0.4404344988527135], ["list", 0.12984207651150573], ["float", 0.08436559939149157]], "on_failed": [["int", 0.27535909401849756], ["str", 0.19589045016030038], ["raiden.utils.Address", 0.17422296590527642], ["list", 0.159387506961706]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [118, 19]], "fn_var_ln": {"facets": [[103, 12], [103, 18]]}, "fn_var_occur": {"facets": [["facets", "get_facets_method", "args"], ["OperatorLineage", "inputs", "facets", "inputs", "outputs", "facets", "outputs", "run_facets", "facets", "run_facets", "job_facets", "facets", "job_facets"]]}, "name": "_get_openlineage_facets", "params": {"args": "", "get_facets_method": "", "self": ""}, "params_descr": {"args": "", "get_facets_method": "", "self": ""}, "params_occur": {"args": [["facets", "get_facets_method", "args"]], "get_facets_method": [["facets", "get_facets_method", "args"]], "self": [["self", "log", "exception"], ["self", "log", "exception"]]}, "params_p": {"args": [], "get_facets_method": [["str", 0.3222424255890963], ["bool", 0.20520724513838273], ["Dict[str, Any]", 0.09521978373992897], ["Optional[bool]", 0.09454762105657247]], "kwargs": [], "self": []}, "q_name": "DefaultExtractor._get_openlineage_facets", "ret_exprs": ["return OperatorLineage( inputs=facets.inputs, outputs=facets.outputs, run_facets=facets.run_facets, job_facets=facets.job_facets,)", "return None"], "ret_type": "OperatorLineage | None", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"facets": ""}, "variables_p": {"facets": [["float", 0.19546916950070087], ["str", 0.1919739462984931], ["int", 0.0855107003468925]]}}], "name": "DefaultExtractor", "q_name": "DefaultExtractor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "abc", "ABC", "abstractmethod", "attrs", "Factory", "define", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "utils", "state", "TaskInstanceState", "openlineage", "client", "facet", "BaseFacet", "openlineage", "client", "run", "Dataset"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 12, "I": 0, "U": 12}, "session_id": "G68QuXASu7N9TRw_vIhUmJlwac9QWhgVfHC0wbaHwgg", "set": null, "tc": [false, null], "type_annot_cove": 0.5, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}