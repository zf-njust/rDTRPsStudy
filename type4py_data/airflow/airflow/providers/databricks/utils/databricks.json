{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Normalize content or all values of content if it is a dict to a string.", "long_descr": "The function will throw if content contains non-string or non-numeric non-boolean\ntypes. The reason why we have this function is because the ``self.json`` field\nmust be a dict with only string values. This is because ``render_template`` will\nfail for numerical values.\n\nThe only one exception is when we have boolean values, they can not be converted\nto string type because databricks does not understand 'True' or 'False' values.", "ret": null}, "fn_lc": [[24, 0], [55, 35]], "fn_var_ln": {"msg": [[54, 8], [54, 11]], "normalise": [[36, 4], [36, 13]], "param_type": [[53, 8], [53, 18]]}, "fn_var_occur": {"msg": [["msg", "param_type", "json_path"], ["AirflowException", "msg"]], "normalise": [["normalise", "normalise_json_content"], ["normalise", "e", "json_path", "i", "i", "e", "enumerate", "content"], ["k", "normalise", "v", "json_path", "k", "k", "v", "list", "content", "items"]], "param_type": [["param_type", "type", "content"], ["msg", "param_type", "json_path"]]}, "name": "normalise_json_content", "params": {"content": "", "json_path": "builtins.str"}, "params_descr": {"content": "", "json_path": ""}, "params_occur": {"content": [["isinstance", "content", "str", "bool"], ["isinstance", "content", "int", "float"], ["str", "content"], ["isinstance", "content", "list", "tuple"], ["normalise", "e", "json_path", "i", "i", "e", "enumerate", "content"], ["isinstance", "content", "dict"], ["k", "normalise", "v", "json_path", "k", "k", "v", "list", "content", "items"], ["param_type", "type", "content"]], "json_path": [["normalise", "e", "json_path", "i", "i", "e", "enumerate", "content"], ["k", "normalise", "v", "json_path", "k", "k", "v", "list", "content", "items"], ["msg", "param_type", "json_path"]]}, "params_p": {"args": [], "content": [["list", 0.11144309467064739], ["dict", 0.10273335005521471], ["List[str]", 0.09080198983868454], ["Dict[str, Any]", 0.08800375971188157]], "json_path": [["Sequence[str]", 0.09494780814310338]], "kwargs": []}, "q_name": "normalise_json_content", "ret_exprs": ["return content", "return str(content)", "return [normalise(e, f\"{json_path}[{i}]\") for i, e in enumerate(content)]", "return {k: normalise(v, f\"{json_path}[{k}]\") for k, v in list(content.items())}"], "ret_type": "str | bool | list | dict", "ret_type_p": [["Optional[List[str]]", 0.09191179163314166], ["str", 0.09148330160079828], ["Optional[Dict]", 0.09101590745059944]], "variables": {"msg": "", "normalise": "", "param_type": ""}, "variables_p": {"msg": [["str", 0.7287230715597106], ["dict", 0.2712769284402895]], "normalise": [["str", 0.2730134261950325], ["int", 0.07932296740860846]], "param_type": [["Dict[str, Union[Any, Any]]", 0.39880780635180924], ["str", 0.09298609484069834], ["Dict[str, List[str]]", 0.09281194866898584], ["Dict[str, str]", 0.08650821362595831], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0859201500479964], ["Type[Dict[str, Any]]", 0.08055981972446555], ["List[str]", 0.07733054522492606]]}}, {"docstring": {"func": "Validates correctness of the event received from DatabricksExecutionTrigger.", "long_descr": "See: :class:`~airflow.providers.databricks.triggers.databricks.DatabricksExecutionTrigger`.", "ret": null}, "fn_lc": [[58, 0], [72, 103]], "fn_var_ln": {"keys_to_check": [[64, 4], [64, 17]]}, "fn_var_occur": {"keys_to_check": []}, "name": "validate_trigger_event", "params": {"event": "builtins.dict"}, "params_descr": {"event": ""}, "params_occur": {"event": [["key", "event"], ["AirflowException", "key", "event"], ["RunState", "from_json", "event"], ["AirflowException", "event"]]}, "params_p": {"args": [], "event": [["dict", 0.13335382661030742]], "kwargs": []}, "q_name": "validate_trigger_event", "ret_exprs": [], "ret_type": "", "variables": {"keys_to_check": ""}, "variables_p": {"keys_to_check": [["Set[str]", 0.9999999978255368], ["List[int]", 2.174463353274763e-09]]}}], "imports": ["__future__", "annotations", "airflow", "exceptions", "AirflowException", "airflow", "providers", "databricks", "hooks", "databricks", "RunState"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 3, "I": 0, "U": 6}, "session_id": "xuSI0G-ZP2v-WcIMxYYFKELuc4adswhOZCnuTzjGGUU", "set": null, "tc": [false, null], "type_annot_cove": 0.33, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}