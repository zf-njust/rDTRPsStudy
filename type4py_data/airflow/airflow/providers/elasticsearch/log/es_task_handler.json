{"error": null, "response": {"classes": [{"cls_lc": [[55, 0], [59, 28]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [59, 28]], "fn_var_ln": {"offset": [[59, 8], [59, 19]]}, "fn_var_occur": {"offset": [["self", "offset", "offset"]]}, "name": "__init__", "params": {"offset": "", "self": ""}, "params_descr": {"offset": "", "self": ""}, "params_occur": {"offset": [["self", "offset", "offset"]], "self": [["self", "offset", "offset"]]}, "params_p": {"args": [], "kwargs": [], "offset": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "self": []}, "q_name": "Log.__init__", "ret_exprs": [], "ret_type": "", "variables": {"offset": ""}, "variables_p": {"offset": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}], "name": "Log", "q_name": "Log", "variables": {}, "variables_p": {}}, {"cls_lc": [[62, 0], [80, 21]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [71, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [["kwargs", "items"]], "self": [["setattr", "self", "key", "Log", "value"], ["setattr", "self", "key", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ElasticSearchResponse.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [80, 21]], "fn_var_ln": {"result": [[74, 8], [74, 14]]}, "fn_var_occur": {"result": [["result", "key", "self", "__dict__", "key", "__dict__"], ["result", "key", "self", "__dict__", "key"]]}, "name": "to_dict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "__dict__", "keys"], ["result", "key", "self", "__dict__", "key", "__dict__"], ["result", "key", "self", "__dict__", "key"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ElasticSearchResponse.to_dict", "ret_exprs": ["return result"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.38069602399854563], ["dict", 0.2853476778730214], ["Tuple[int, Dict[str, Any]]", 0.12311304313753066], ["list", 0.11549490886537801], ["Optional[Dict[str, Any]]", 0.09534834612552416]], "variables": {"result": ""}, "variables_p": {"result": [["dict", 0.7041189869854141], ["bytes", 0.10582773291240755], ["list", 0.0955217724885708], ["KeysView[str]", 0.09453150761360754]]}}], "name": "ElasticSearchResponse", "q_name": "ElasticSearchResponse", "variables": {}, "variables_p": {}}, {"cls_lc": [[83, 0], [449, 34]], "cls_var_ln": {"LOG_NAME": [[106, 4], [106, 12]], "MAX_LINE_PER_PAGE": [[105, 4], [105, 21]], "PAGE": [[104, 4], [104, 8]], "trigger_should_wrap": [[108, 4], [108, 23]]}, "cls_var_occur": {"LOG_NAME": [], "MAX_LINE_PER_PAGE": [], "PAGE": [], "trigger_should_wrap": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [152, 65]], "fn_var_ln": {"client": [[131, 8], [131, 19]], "closed": [[129, 8], [129, 19]], "context_set": [[149, 8], [149, 24]], "end_of_log_mark": [[142, 8], [142, 28]], "es_kwargs": [[127, 8], [127, 17]], "formatter": [[151, 8], [151, 22]], "frontend": [[140, 8], [140, 21]], "handler": [[152, 8], [152, 20]], "host_field": [[146, 8], [146, 23]], "index_patterns": [[148, 8], [148, 27]], "json_fields": [[145, 8], [145, 24]], "json_format": [[144, 8], [144, 24]], "log_id_template": [[139, 8], [139, 28]], "mark_end_on_close": [[141, 8], [141, 30]], "offset_field": [[147, 8], [147, 25]], "write_stdout": [[143, 8], [143, 25]]}, "fn_var_occur": {"client": [["self", "client", "elasticsearch", "Elasticsearch", "host", "split", "es_kwargs"]], "closed": [["self", "closed", "False"]], "context_set": [["self", "context_set", "False"]], "end_of_log_mark": [["self", "end_of_log_mark", "end_of_log_mark", "strip"]], "es_kwargs": [["es_kwargs", "es_kwargs"], ["self", "client", "elasticsearch", "Elasticsearch", "host", "split", "es_kwargs"]], "formatter": [["self", "formatter", "logging", "Formatter"]], "frontend": [["self", "frontend", "frontend"]], "handler": [["self", "handler", "logging", "FileHandler", "logging", "StreamHandler"]], "host_field": [["self", "host_field", "host_field"]], "index_patterns": [["self", "index_patterns", "index_patterns"]], "json_fields": [["self", "json_fields", "label", "strip", "label", "json_fields", "split"]], "json_format": [["self", "json_format", "json_format"]], "log_id_template": [["USE_PER_RUN_LOG_ID", "log_id_template", "None"], ["self", "log_id_template", "log_id_template"]], "mark_end_on_close": [["self", "mark_end_on_close", "True"]], "offset_field": [["self", "offset_field", "offset_field"]], "write_stdout": [["self", "write_stdout", "write_stdout"]]}, "name": "__init__", "params": {"base_log_folder": "builtins.str", "end_of_log_mark": "builtins.str", "es_kwargs": "dict | None", "filename_template": "str | None", "frontend": "builtins.str", "host": "builtins.str", "host_field": "builtins.str", "index_patterns": "str | None", "json_fields": "builtins.str", "json_format": "builtins.bool", "log_id_template": "str | None", "offset_field": "builtins.str", "self": "", "write_stdout": "builtins.bool"}, "params_descr": {"base_log_folder": "", "end_of_log_mark": "", "es_kwargs": "", "filename_template": "", "frontend": "", "host": "", "host_field": "", "index_patterns": "", "json_fields": "", "json_format": "", "log_id_template": "", "offset_field": "", "self": "", "write_stdout": ""}, "params_occur": {"base_log_folder": [["super", "__init__", "base_log_folder", "filename_template"]], "end_of_log_mark": [["self", "end_of_log_mark", "end_of_log_mark", "strip"]], "es_kwargs": [["es_kwargs", "es_kwargs"], ["self", "client", "elasticsearch", "Elasticsearch", "host", "split", "es_kwargs"]], "filename_template": [["super", "__init__", "base_log_folder", "filename_template"]], "frontend": [["self", "frontend", "frontend"]], "host": [["self", "client", "elasticsearch", "Elasticsearch", "host", "split", "es_kwargs"]], "host_field": [["self", "host_field", "host_field"]], "index_patterns": [["self", "index_patterns", "index_patterns"]], "json_fields": [["self", "json_fields", "label", "strip", "label", "json_fields", "split"]], "json_format": [["self", "json_format", "json_format"]], "log_id_template": [["USE_PER_RUN_LOG_ID", "log_id_template", "None"], ["self", "log_id_template", "log_id_template"]], "offset_field": [["self", "offset_field", "offset_field"]], "self": [["self", "closed", "False"], ["self", "client", "elasticsearch", "Elasticsearch", "host", "split", "es_kwargs"], ["self", "log_id_template", "log_id_template"], ["self", "frontend", "frontend"], ["self", "mark_end_on_close", "True"], ["self", "end_of_log_mark", "end_of_log_mark", "strip"], ["self", "write_stdout", "write_stdout"], ["self", "json_format", "json_format"], ["self", "json_fields", "label", "strip", "label", "json_fields", "split"], ["self", "host_field", "host_field"], ["self", "offset_field", "offset_field"], ["self", "index_patterns", "index_patterns"], ["self", "context_set", "False"], ["self", "formatter", "logging", "Formatter"], ["self", "handler", "logging", "FileHandler", "logging", "StreamHandler"]], "write_stdout": [["self", "write_stdout", "write_stdout"]]}, "params_p": {"args": [], "base_log_folder": [["Optional[str]", 0.11473478412379236], ["Optional[bool]", 0.10623320174853879], ["bool", 0.1027261696008244], ["Optional[float]", 0.1026110177112521]], "end_of_log_mark": [["bool", 0.39366878764270163], ["str", 0.20705280362976936], ["dict", 0.09899090113291571], ["accounts.models.User", 0.08900982081620638], ["models.Station", 0.08900982081620638]], "es_kwargs": [["str", 0.19386347759569486], ["Callable[[], Any]", 0.09746020995856548], ["ClassVar", 0.08317767119025324]], "filename_template": [["Optional[str]", 0.11473478412379236], ["Optional[bool]", 0.10623320174853879], ["bool", 0.1027261696008244], ["Optional[float]", 0.1026110177112521]], "frontend": [["int", 0.6223123143427434], ["slice", 0.10420837207089405], ["Union[int, Tuple[int, int]]", 0.08614356742855749]], "host": [["str", 0.7028101764349728]], "host_field": [["int", 0.6223123143427434], ["slice", 0.10420837207089405], ["Union[int, Tuple[int, int]]", 0.08614356742855749]], "index_patterns": [["int", 0.6223123143427434], ["slice", 0.10420837207089405], ["Union[int, Tuple[int, int]]", 0.08614356742855749]], "json_fields": [["int", 0.11352716774510904], ["List[str]", 0.09883864195161729], ["bool", 0.09525429190098465], ["Exception", 0.09305688614141339]], "json_format": [["List[str]", 0.28144042580631007], ["str", 0.18131814190965878], ["django.db.models.QuerySet", 0.12258189019524748], ["bool", 0.12258189019524748], ["dict", 0.11856115085845563], ["list", 0.08450698984041204]], "kwargs": [], "log_id_template": [["str", 0.18473470481799584], ["Optional[str]", 0.09928546698778751], ["int", 0.09928546698778751], ["Optional[Dict[str, str]]", 0.09928546698778751], ["type", 0.09227918161546136]], "offset_field": [["int", 0.6223123143427434], ["slice", 0.10420837207089405], ["Union[int, Tuple[int, int]]", 0.08614356742855749]], "self": [], "write_stdout": [["int", 0.6223123143427434], ["slice", 0.10420837207089405], ["Union[int, Tuple[int, int]]", 0.08614356742855749]]}, "q_name": "ElasticsearchTaskHandler.__init__", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "closed": "", "context_set": "", "end_of_log_mark": "", "es_kwargs": "", "formatter": "logging.Formatter", "frontend": "", "handler": "logging.FileHandler | logging.StreamHandler", "host_field": "", "index_patterns": "", "json_fields": "", "json_format": "", "log_id_template": "", "mark_end_on_close": "", "offset_field": "", "write_stdout": ""}, "variables_p": {"client": [["int", 0.4735950001343895], ["str", 0.23092913507452728], ["Final", 0.21729829348151763]], "closed": [["dict", 0.6169768722014776], ["Set[str]", 0.1902812595168529]], "context_set": [["Set[str]", 0.6809141595095068], ["Set[axion.handler.exceptions.Error]", 0.20895416002543032], ["set", 0.11013168046506296]], "end_of_log_mark": [["int", 0.8839137622205394], ["float", 0.11608623777946067]], "es_kwargs": [["int", 0.20433587040626097], ["str", 0.08463006569653876], ["bytes", 0.08299483803454692]], "formatter": [["str", 0.2865390326324467], ["bool", 0.187124623805996], ["datetime.datetime.datetime", 0.12698425434787444], ["List[int]", 0.10868493831017512], ["bytes", 0.10437996982297121], ["Pattern[str]", 0.09689910809129436], ["ClassVar", 0.08938807298924203]], "frontend": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "handler": [["logging.Formatter", 0.3845882843834211], ["logging.FileHandler", 0.18582953637233562], ["Union[Literal, str]", 0.11495271766337008], ["Union[Literal[True], str]", 0.11495271766337008], ["logging.handlers.QueueHandler", 0.10216049805454747], ["str", 0.09751624586295579]], "host_field": [["float", 3.153233090601642e-12], ["int", 3.153233090601642e-12], ["list", 3.153233090601642e-12], ["str", 2.7912882074284948e-12]], "index_patterns": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "json_fields": [["property", 0.6852027039377064], ["Type[Tuple[int, int, int, int]]", 0.10409278190667705], ["Type[Callable[..., Any]]", 0.10409278190667705]], "json_format": [["str", 0.5650197345671291], ["int", 0.31649426358673594], ["Dict[str, str]", 0.11848600184613489]], "log_id_template": [["str", 0.9138972961029087], ["Optional[List[str]]", 0.08610270389709139]], "mark_end_on_close": [["str", 0.5736457913165859], ["bool", 0.21822169716266338], ["int", 0.10955474986096753]], "offset_field": [["float", 3.153233090601642e-12], ["int", 3.153233090601642e-12], ["list", 3.153233090601642e-12], ["str", 2.7912882074284948e-12]], "write_stdout": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [195, 9]], "fn_var_ln": {"dag": [[163, 12], [163, 15]], "dag_run": [[156, 12], [156, 19]], "data_interval": [[169, 12], [169, 25]], "data_interval_end": [[183, 16], [183, 33]], "data_interval_start": [[179, 16], [179, 35]], "execution_date": [[184, 12], [184, 26]], "log_id_template": [[160, 16], [160, 31]]}, "fn_var_occur": {"dag": [["dag", "ti", "task", "dag"], ["dag", "None"], ["data_interval", "dag", "get_run_data_interval", "dag_run"]], "dag_run": [["dag_run", "ti", "get_dagrun", "session", "session"], ["log_id_template", "dag_run", "get_log_template", "session", "session", "elasticsearch_id"], ["data_interval", "dag_run", "data_interval_start", "dag_run", "data_interval_end"], ["data_interval", "dag", "get_run_data_interval", "dag_run"], ["execution_date", "self", "_clean_date", "dag_run", "execution_date"], ["execution_date", "dag_run", "execution_date", "isoformat"]], "data_interval": [["data_interval", "dag_run", "data_interval_start", "dag_run", "data_interval_end"], ["data_interval", "dag", "get_run_data_interval", "dag_run"], ["data_interval_start", "self", "_clean_date", "data_interval"], ["data_interval_end", "self", "_clean_date", "data_interval"], ["data_interval_start", "data_interval", "isoformat"], ["data_interval_end", "data_interval", "isoformat"]], "data_interval_end": [["data_interval", "dag_run", "data_interval_start", "dag_run", "data_interval_end"], ["data_interval_end", "self", "_clean_date", "data_interval"], ["data_interval_end", "data_interval", "isoformat"], ["log_id_template", "format", "dag_id", "ti", "dag_id", "task_id", "ti", "task_id", "run_id", "getattr", "ti", "data_interval_start", "data_interval_start", "data_interval_end", "data_interval_end", "execution_date", "execution_date", "try_number", "try_number", "map_index", "getattr", "ti"]], "data_interval_start": [["data_interval", "dag_run", "data_interval_start", "dag_run", "data_interval_end"], ["data_interval_start", "self", "_clean_date", "data_interval"], ["data_interval_start", "data_interval", "isoformat"], ["log_id_template", "format", "dag_id", "ti", "dag_id", "task_id", "ti", "task_id", "run_id", "getattr", "ti", "data_interval_start", "data_interval_start", "data_interval_end", "data_interval_end", "execution_date", "execution_date", "try_number", "try_number", "map_index", "getattr", "ti"]], "execution_date": [["execution_date", "self", "_clean_date", "dag_run", "execution_date"], ["execution_date", "dag_run", "execution_date", "isoformat"], ["log_id_template", "format", "dag_id", "ti", "dag_id", "task_id", "ti", "task_id", "run_id", "getattr", "ti", "data_interval_start", "data_interval_start", "data_interval_end", "data_interval_end", "execution_date", "execution_date", "try_number", "try_number", "map_index", "getattr", "ti"]], "log_id_template": [["log_id_template", "dag_run", "get_log_template", "session", "session", "elasticsearch_id"], ["log_id_template", "self", "log_id_template"], ["log_id_template", "format", "dag_id", "ti", "dag_id", "task_id", "ti", "task_id", "run_id", "getattr", "ti", "data_interval_start", "data_interval_start", "data_interval_end", "data_interval_end", "execution_date", "execution_date", "try_number", "try_number", "map_index", "getattr", "ti"]]}, "name": "_render_log_id", "params": {"self": "", "ti": "airflow.models.taskinstance.TaskInstance", "try_number": "builtins.int"}, "params_descr": {"self": "", "ti": "", "try_number": ""}, "params_occur": {"self": [["log_id_template", "self", "log_id_template"], ["self", "json_format"], ["data_interval_start", "self", "_clean_date", "data_interval"], ["data_interval_end", "self", "_clean_date", "data_interval"], ["execution_date", "self", "_clean_date", "dag_run", "execution_date"]], "ti": [["dag_run", "ti", "get_dagrun", "session", "session"], ["dag", "ti", "task", "dag"], ["log_id_template", "format", "dag_id", "ti", "dag_id", "task_id", "ti", "task_id", "run_id", "getattr", "ti", "data_interval_start", "data_interval_start", "data_interval_end", "data_interval_end", "execution_date", "execution_date", "try_number", "try_number", "map_index", "getattr", "ti"]], "try_number": [["log_id_template", "format", "dag_id", "ti", "dag_id", "task_id", "ti", "task_id", "run_id", "getattr", "ti", "data_interval_start", "data_interval_start", "data_interval_end", "data_interval_end", "execution_date", "execution_date", "try_number", "try_number", "map_index", "getattr", "ti"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ti": [["str", 0.3015950247524395]], "try_number": [["str", 0.807113341754227], ["bytes", 0.09687808217341412], ["int", 0.09600857607235894]]}, "q_name": "ElasticsearchTaskHandler._render_log_id", "ret_exprs": ["return log_id_template.format( dag_id=ti.dag_id, task_id=ti.task_id, run_id=getattr(ti, \"run_id\", \"\"), data_interval_start=data_interval_start, data_interval_end=data_interval_end, execution_date=execution_date, try_number=try_number, map_index=getattr(ti, \"map_index\", \"\"),)"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.6224654933212002], ["Optional[int]", 0.10542990451923888], ["socialhome.users.models.Profile", 0.09493937201461922], ["Type[Any]", 0.08831281326730404]], "variables": {"dag": "", "dag_run": "", "data_interval": "", "data_interval_end": "", "data_interval_start": "", "execution_date": "", "log_id_template": ""}, "variables_p": {"dag": [["kedro.framework.session.store.ShelveStore", 0.3837681053501242], ["golem.rpc.session.WebSocketAddress", 0.10976295418528098], ["str", 0.10005669384843217]], "dag_run": [["int", 0.3802455557069001]], "data_interval": [["Dict[str, Any]", 0.1627053815103088], ["Dict[str, Union[bool, str]]", 0.09210575378059177], ["Dict[str, Union[Any, Any]]", 0.08954996359026192], ["Dict[str, float]", 0.07766586628844661]], "data_interval_end": [["Dict[str, Any]", 0.1547149217758071]], "data_interval_start": [["List[int]", 0.10978119761937312]], "execution_date": [["datetime.timedelta", 0.707219587370194], ["int", 0.10624840856784382], ["str", 0.09515560538042278], ["List[int]", 0.09137639868153936]], "log_id_template": [["str", 0.805627738088144], ["Optional[str]", 0.19437226191185594]]}}, {"docstring": {"func": "Clean up a date value so that it is safe to query in elasticsearch by removing reserved characters.", "long_descr": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#_reserved_characters", "ret": null}, "fn_lc": [[198, 4], [206, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_clean_date", "params": {"value": "datetime | None"}, "params_descr": {"value": ""}, "params_occur": {"value": [["value", "None"], ["value", "strftime"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.43661390876768424], ["Optional[str]", 0.3201314509313714], ["int", 0.06318557553030918], ["Optional[Any]", 0.060916955042291845], ["Union[int, None]", 0.057952790872596825]]}, "q_name": "ElasticsearchTaskHandler._clean_date", "ret_exprs": ["return \"\"", "return value.strftime(\"%Y_%m_%dT%H_%M_%S_%f\")"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.1780743338632775], ["models.User", 0.09487389557647638], ["dict", 0.08681253742788912], ["int", 0.08592372718009454]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[208, 4], [214, 27]], "fn_var_ln": {"grouped_logs": [[209, 8], [209, 20]], "key": [[211, 12], [211, 15]]}, "fn_var_occur": {"grouped_logs": [["grouped_logs", "defaultdict", "list"], ["grouped_logs", "key", "append", "log"]], "key": [["key", "getattr_nested", "log", "self", "host_field", "None"], ["grouped_logs", "key", "append", "log"]]}, "name": "_group_logs_by_host", "params": {"logs": "", "self": ""}, "params_descr": {"logs": "", "self": ""}, "params_occur": {"logs": [], "self": [["key", "getattr_nested", "log", "self", "host_field", "None"]]}, "params_p": {"args": [], "kwargs": [], "logs": [["List[str]", 0.799999999921926], ["bool", 0.19999999999969553], ["Dict[str, str]", 2.002458508059254e-11], ["db.session.DatabaseSession", 1.851179766034924e-11]], "self": []}, "q_name": "ElasticsearchTaskHandler._group_logs_by_host", "ret_exprs": ["return grouped_logs"], "ret_type": "", "ret_type_p": [["str", 0.306201557682499], ["List[Dict[str, Any]]", 0.10963704132997518], ["tuple", 0.09736023349792097], ["float", 0.09736023349792097], ["list", 0.09736023349792097], ["int", 0.09736023349792097]], "variables": {"grouped_logs": "", "key": ""}, "variables_p": {"grouped_logs": [["Dict[str, str]", 0.17873959173017498], ["Dict[str, List[str]]", 0.12749086150772115], ["ChainMap[str, Any]", 0.11352648581871623], ["int", 0.10988041604593883], ["DefaultDict[Any, List[Any]]", 0.10152081197097589], ["set", 0.0999667587523541], ["Dict[str, Any]", 0.0917199716960952], ["list", 0.0900272880209054], ["Tuple[str, str, str, str, str]", 0.08712781445711808]], "key": [["str", 0.2064578161902546], ["set", 0.1042931501411513], ["int", 0.10033440657479178], ["list", 0.08900806871657604]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[216, 4], [217, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_read_grouped_logs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ElasticsearchTaskHandler._read_grouped_logs", "ret_exprs": ["return True"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[280, 8], [282, 82]], "fn_var_ln": {"log_range": [[281, 12], [281, 21]]}, "fn_var_occur": {"log_range": [["log_range", "len", "lines", "lines", "message", "self", "end_of_log_mark", "len", "lines"], ["join", "self", "_format_msg", "lines", "i", "i", "range", "log_range"]]}, "name": "concat_logs", "params": {"lines": ""}, "params_descr": {"lines": ""}, "params_occur": {"lines": [["log_range", "len", "lines", "lines", "message", "self", "end_of_log_mark", "len", "lines"], ["join", "self", "_format_msg", "lines", "i", "i", "range", "log_range"]]}, "params_p": {"args": [], "kwargs": [], "lines": [["int", 0.38467340819361473], ["str", 0.19725173353870426]], "self": []}, "q_name": "ElasticsearchTaskHandler._read.<locals>.concat_logs", "ret_exprs": ["return \"n\".join(self._format_msg(lines[i]) for i in range(log_range))"], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {"log_range": ""}, "variables_p": {"log_range": [["int", 0.9061837204054085], ["Tuple[Literal, Literal, Literal, int]", 0.09381627959459152]]}}, {"docstring": {"func": "Endpoint for streaming log.", "long_descr": null, "ret": "a list of tuple with host and log documents, metadata."}, "fn_lc": [[219, 4], [285, 32]], "fn_var_ln": {"cur_ts": [[253, 8], [253, 14]], "last_log_ts": [[255, 12], [255, 23]], "log_id": [[237, 8], [237, 14]], "logs": [[238, 8], [238, 12]], "logs_by_host": [[239, 8], [239, 20]], "message": [[284, 8], [284, 15]], "metadata": [[232, 12], [232, 20]], "missing_log_message": [[261, 16], [261, 35]], "next_offset": [[240, 8], [240, 19]], "offset": [[236, 8], [236, 14]]}, "fn_var_occur": {"cur_ts": [], "last_log_ts": [], "log_id": [], "logs": [], "logs_by_host": [["message", "host", "concat_logs", "hosted_log", "host", "hosted_log", "logs_by_host", "items"]], "message": [["message", "host", "concat_logs", "hosted_log", "host", "hosted_log", "logs_by_host", "items"], ["message", "metadata"]], "metadata": [["message", "metadata"]], "missing_log_message": [], "next_offset": [], "offset": []}, "name": "_read", "params": {"metadata": "dict | None", "self": "", "ti": "airflow.models.taskinstance.TaskInstance", "try_number": "builtins.int"}, "params_descr": {"metadata": "log metadata,\ncan be used for steaming log reading and auto-tailing.", "self": "", "ti": "task instance object", "try_number": "try_number of the task instance"}, "params_occur": {"metadata": [["message", "metadata"]], "self": [], "ti": [], "try_number": []}, "params_p": {"args": [], "kwargs": [], "metadata": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "self": [], "ti": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "try_number": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]]}, "q_name": "ElasticsearchTaskHandler._read", "ret_exprs": ["return [(\"\", missing_log_message)], metadata", "return message, metadata"], "ret_type": "builtins.tuple[EsLogMsgType, builtins.dict]", "ret_type_p": [["List[Dict[str, Any]]", 0.11693319836069127], ["BaseException", 0.10126872165374066], ["str", 0.08394048602185815]], "variables": {"cur_ts": "", "last_log_ts": "", "log_id": "", "logs": "", "logs_by_host": "", "message": "", "metadata": "", "missing_log_message": "", "next_offset": "", "offset": ""}, "variables_p": {"cur_ts": [["int", 0.30000000000000004], ["float", 0.1], ["Optional[datetime.datetime]", 0.1], ["datetime.datetime", 0.1], ["List[Union[Any, Any, Any]]", 0.1], ["Type[Iterable[Any]]", 0.1]], "last_log_ts": [["bool", 0.6277209819931246], ["int", 0.13742331518917583], ["Pattern[str]", 0.07663660857575623], ["str", 0.06900002751324646]], "log_id": [["str", 0.9999999880295452], ["List[str]", 2.7157237358988446e-09], ["Tuple[str, str, str]", 2.1174273417228794e-09], ["Tuple[str]", 2.1174273417228794e-09]], "logs": [["str", 0.30000000000000004], ["logging.Logger", 0.2], ["bool", 0.1], ["Dict[str, Union[Any, Any, Any]]", 0.1], ["Dict[str, Union[Any, Any, Any, Any]]", 0.1], ["Dict[str, Union[dict, Any, Any, Any, Any]]", 0.1], ["neonbohelpers.log.Log", 0.1]], "logs_by_host": [["logging.Logger", 0.1966931447059447], ["int", 0.12580886137349048], ["TextIO", 0.08685131452976312], ["dict", 0.08476301987856968], ["List[str]", 0.06914933446827363]], "message": [["str", 0.35017669580907973], ["tensorhive.core.utils.mailer.Message", 0.09138941378584782], ["float", 0.09062754251906092]], "metadata": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "missing_log_message": [["int", 0.3], ["str", 0.19999999999999998], ["bool", 0.09999999999999999], ["Tuple[str, str, str, str]", 0.09999999999999999], ["logging.Logger", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999], ["datetime.timedelta", 0.09999999999999999]], "next_offset": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "offset": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": "Format ES Record to match settings.LOG_FORMAT when used with json_format.", "long_descr": null, "ret": null}, "fn_lc": [[287, 4], [300, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_format_msg", "params": {"log_line": "", "self": ""}, "params_descr": {"log_line": "", "self": ""}, "params_occur": {"log_line": [["self", "formatter", "_style", "format", "logging", "makeLogRecord", "LOG_LINE_DEFAULTS", "log_line", "to_dict"], ["log_line", "message"]], "self": [["self", "json_format"], ["self", "formatter", "_style", "format", "logging", "makeLogRecord", "LOG_LINE_DEFAULTS", "log_line", "to_dict"]]}, "params_p": {"args": [], "kwargs": [], "log_line": [["int", 0.2932442124230665], ["Optional[Dict]", 0.11304928279536237], ["Callable", 0.10138784832193268], ["str", 0.09898342900678031], ["Iterable[T]", 0.09788003678408247]], "self": []}, "q_name": "ElasticsearchTaskHandler._format_msg", "ret_exprs": ["return self.formatter._style.format( logging.makeLogRecord({**LOG_LINE_DEFAULTS, **log_line.to_dict()}))", "return log_line.message"], "ret_type": "", "ret_type_p": [["str", 0.9012171624158819], ["bool", 0.09878283758411781]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return the logs matching log_id in Elasticsearch and next offset or ''.", "long_descr": null, "ret": null}, "fn_lc": [[302, 4], [350, 19]], "fn_var_ln": {"logs": [[341, 16], [341, 20]], "max_log_line": [[324, 12], [324, 24]], "query": [[311, 8], [311, 13]], "res": [[335, 16], [335, 19]]}, "fn_var_occur": {"logs": [["logs", "ElasticSearchResponse", "unwrap_response", "response", "response", "res"]], "max_log_line": [["max_log_line", "self", "client", "count", "index", "self", "index_patterns", "body", "query"]], "query": [["query", "log_id", "self", "offset_field", "int", "offset", "self", "offset_field"], ["max_log_line", "self", "client", "count", "index", "self", "index_patterns", "body", "query"], ["res", "self", "client", "search", "index", "self", "index_patterns", "body", "query", "size", "self", "MAX_LINE_PER_PAGE", "from_", "self", "MAX_LINE_PER_PAGE", "self", "PAGE"]], "res": [["res", "self", "client", "search", "index", "self", "index_patterns", "body", "query", "size", "self", "MAX_LINE_PER_PAGE", "from_", "self", "MAX_LINE_PER_PAGE", "self", "PAGE"], ["logs", "ElasticSearchResponse", "unwrap_response", "response", "response", "res"]]}, "name": "es_read", "params": {"log_id": "builtins.str", "metadata": "builtins.dict", "offset": "builtins.str", "self": ""}, "params_descr": {"log_id": "the log_id of the log to read.", "metadata": "log metadata, used for steaming log download.", "offset": "the offset start to read log from.", "self": ""}, "params_occur": {"log_id": [["query", "log_id", "self", "offset_field", "int", "offset", "self", "offset_field"], ["self", "log", "exception", "log_id"], ["self", "log", "exception", "log_id"]], "metadata": [], "offset": [["query", "log_id", "self", "offset_field", "int", "offset", "self", "offset_field"]], "self": [["query", "log_id", "self", "offset_field", "int", "offset", "self", "offset_field"], ["max_log_line", "self", "client", "count", "index", "self", "index_patterns", "body", "query"], ["self", "log", "exception", "self", "index_patterns"], ["self", "log", "exception", "log_id"], ["res", "self", "client", "search", "index", "self", "index_patterns", "body", "query", "size", "self", "MAX_LINE_PER_PAGE", "from_", "self", "MAX_LINE_PER_PAGE", "self", "PAGE"], ["self", "log", "exception", "log_id"]]}, "params_p": {"args": [], "kwargs": [], "log_id": [["str", 0.7995938402768165], ["bool", 0.10477688436517028], ["int", 0.09562927535801333]], "metadata": [["str", 0.4698478888859782], ["Optional[datetime.datetime]", 0.22944329255026966], ["int", 0.2210295152565972], ["List[int]", 0.0796793033071549]], "offset": [["str", 0.6677492959412746], ["list", 0.15818773270664532], ["Dict[int, str]", 0.08850761256394522], ["Type[str]", 0.08555535878813478]], "self": []}, "q_name": "ElasticsearchTaskHandler.es_read", "ret_exprs": ["return logs"], "ret_type": "builtins.list", "ret_type_p": [["zam_repondeur.models.Lecture", 0.09143008850642735], ["List[Dict[str, Any]]", 0.09127072409916907]], "variables": {"logs": "", "max_log_line": "", "query": "", "res": ""}, "variables_p": {"logs": [["Dict[str, Union[Any, Any, Any, Any]]", 0.41198074148574454], ["Dict[str, str]", 0.1888896116284576], ["list", 0.10503487633948916], ["Dict[str, Union[Any, Any, Any]]", 0.10299518537143613], ["rotkehlchen.logging.RotkehlchenLogsAdapter", 0.10249547912176019], ["logging.Logger", 0.08860410605311235]], "max_log_line": [["int", 0.20344556746032288], ["Callable[[], None]", 0.18137016974218648], ["bytes", 0.09148123526929522]], "query": [["str", 0.9017602418638628], ["List[Tuple[str, str]]", 0.09823975813613724]], "res": [["Pattern[str]", 0.2044182826805156], ["property", 0.10973846393452943], ["OrderedDict[str, int]", 0.10548973738682135], ["Dict[str, Union[Any, Any]]", 0.1029807984892161], ["List[str]", 0.09992589161327488], ["dict", 0.09642319840819573], ["list", 0.09397817002963588], ["float", 0.09382606980559112], ["Final", 0.09321938765222004]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[352, 4], [355, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "emit", "params": {"record": "", "self": ""}, "params_descr": {"record": "", "self": ""}, "params_occur": {"record": [["setattr", "record", "self", "offset_field", "int", "time"], ["self", "handler", "emit", "record"]], "self": [["self", "handler"], ["setattr", "record", "self", "offset_field", "int", "time"], ["self", "handler", "emit", "record"]]}, "params_p": {"args": [], "kwargs": [], "record": [["pykechain.models.sidebar.sidebar_button.SideBarButton", 0.09288551523491707], ["str", 0.09018564759083565], ["float", 0.08995685211967683], ["int", 0.08995685211967683]], "self": []}, "q_name": "ElasticsearchTaskHandler.emit", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Provide task_instance context to airflow task handler.", "long_descr": null, "ret": null}, "fn_lc": [[357, 4], [391, 31]], "fn_var_ln": {"context_set": [[391, 8], [391, 24]], "formatter": [[368, 12], [368, 26]], "handler": [[386, 12], [386, 24]], "is_ti_raw": [[364, 8], [364, 17]], "is_trigger_log_context": [[363, 8], [363, 30]], "mark_end_on_close": [[365, 8], [365, 30]]}, "fn_var_occur": {"context_set": [["self", "context_set"], ["self", "context_set", "True"]], "formatter": [["self", "formatter", "ElasticsearchJSONFormatter", "fmt", "self", "formatter", "_fmt", "json_fields", "self", "json_fields", "self", "offset_field", "extras", "str", "ti", "dag_id", "str", "ti", "task_id", "self", "_clean_date", "ti", "execution_date", "str", "ti", "try_number", "self", "_render_log_id", "ti", "ti", "try_number"], ["self", "handler", "setFormatter", "self", "formatter"]], "handler": [["self", "handler", "logging", "StreamHandler", "stream", "sys", "__stdout__"], ["self", "handler", "setLevel", "self", "level"], ["self", "handler", "setFormatter", "self", "formatter"]], "is_ti_raw": [["is_ti_raw", "getattr", "ti", "None"], ["self", "mark_end_on_close", "is_ti_raw", "is_trigger_log_context"]], "is_trigger_log_context": [["is_trigger_log_context", "getattr", "ti", "None"], ["self", "mark_end_on_close", "is_ti_raw", "is_trigger_log_context"]], "mark_end_on_close": [["self", "mark_end_on_close", "is_ti_raw", "is_trigger_log_context"]]}, "name": "set_context", "params": {"self": "", "ti": "airflow.models.taskinstance.TaskInstance"}, "params_descr": {"self": "", "ti": "task instance object"}, "params_occur": {"self": [["self", "mark_end_on_close", "is_ti_raw", "is_trigger_log_context"], ["self", "json_format"], ["self", "formatter", "ElasticsearchJSONFormatter", "fmt", "self", "formatter", "_fmt", "json_fields", "self", "json_fields", "self", "offset_field", "extras", "str", "ti", "dag_id", "str", "ti", "task_id", "self", "_clean_date", "ti", "execution_date", "str", "ti", "try_number", "self", "_render_log_id", "ti", "ti", "try_number"], ["self", "write_stdout"], ["self", "context_set"], ["self", "handler", "logging", "StreamHandler", "stream", "sys", "__stdout__"], ["self", "handler", "setLevel", "self", "level"], ["self", "handler", "setFormatter", "self", "formatter"], ["self", "context_set", "True"]], "ti": [["is_trigger_log_context", "getattr", "ti", "None"], ["is_ti_raw", "getattr", "ti", "None"], ["self", "formatter", "ElasticsearchJSONFormatter", "fmt", "self", "formatter", "_fmt", "json_fields", "self", "json_fields", "self", "offset_field", "extras", "str", "ti", "dag_id", "str", "ti", "task_id", "self", "_clean_date", "ti", "execution_date", "str", "ti", "try_number", "self", "_render_log_id", "ti", "ti", "try_number"], ["super", "set_context", "ti"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ti": [["bool", 0.5174496604123753], ["str", 0.17815988569750904]]}, "q_name": "ElasticsearchTaskHandler.set_context", "ret_exprs": ["return"], "ret_type": "None", "ret_type_p": [["Union[tuple, list]", 0.10342739475399317], ["Dict[str, Any]", 0.09742245887470956], ["bytes", 0.09563791640539539], ["raiden.utils.Signature", 0.09563791640539539]], "variables": {"context_set": "", "formatter": "", "handler": "", "is_ti_raw": "", "is_trigger_log_context": "", "mark_end_on_close": ""}, "variables_p": {"context_set": [["int", 0.6169488522965074], ["Type[Dict[str, Any]]", 0.1072697816240935], ["List[Dict[str, Any]]", 0.09392867133698632], ["str", 0.09183685999168355], ["Type[List[Any]]", 0.09001583475072923]], "formatter": [["str", 0.4153810638679106], ["int", 0.3811728585832164], ["Set[str]", 0.11377483858781483], ["float", 0.08967123896105803]], "handler": [["logging.FileHandler", 0.40164375683657655], ["str", 0.15582602473955037], ["logging.Formatter", 0.09385025707735728]], "is_ti_raw": [["Tuple[Literal, Literal]", 0.14311875118657444], ["Dict[str, List[str]]", 0.1000899313626028], ["Dict[str, bool]", 0.09835978514245432], ["Dict[Any, bool]", 0.09835978514245432], ["str", 0.09764514395430869], ["Dict[str, dict]", 0.0950033431183637], ["Dict[str, Union[Any, Any, bool, str]]", 0.09213125730816911], ["Set[int]", 0.09192158973580174], ["Type[dict]", 0.08947748422369269]], "is_trigger_log_context": [["str", 0.3725737150106407], ["bool", 0.2603729061360584], ["dict", 0.16605918157425356]], "mark_end_on_close": [["str", 0.30070266219327263], ["Dict[str, Any]", 0.09989961968667534], ["dict", 0.09989961968667534], ["int", 0.09989961968667534]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[393, 4], [427, 26]], "fn_var_ln": {"closed": [[427, 8], [427, 19]], "stdout": [[423, 12], [423, 22]]}, "fn_var_occur": {"closed": [["self", "closed"], ["self", "closed", "True"], ["self", "closed", "True"], ["self", "handler", "stream", "None", "self", "handler", "stream", "closed"], ["self", "closed", "True"]], "stdout": [["sys", "stdout", "sys", "__stdout__"]]}, "name": "close", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "closed"], ["self", "mark_end_on_close", "getattr", "self", "None"], ["self", "closed", "True"], ["self", "handler", "None"], ["self", "closed", "True"], ["self", "handler", "stream", "None", "self", "handler", "stream", "closed"], ["self", "handler", "stream", "self", "handler", "_open"], ["self", "emit", "logging", "makeLogRecord", "self", "end_of_log_mark"], ["self", "write_stdout"], ["self", "handler", "close"], ["self", "closed", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ElasticsearchTaskHandler.close", "ret_exprs": ["return", "return", "return"], "ret_type": "None", "ret_type_p": [["app.models.Article", 0.1602536024167223]], "variables": {"closed": "", "stdout": ""}, "variables_p": {"closed": [], "stdout": [["TextIO", 0.3333333333166823], ["bytes", 1.5068628615626572e-11]]}}, {"docstring": {"func": "The log name.", "long_descr": null, "ret": null}, "fn_lc": [[430, 4], [432, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "log_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "LOG_NAME"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ElasticsearchTaskHandler.log_name", "ret_exprs": ["return self.LOG_NAME"], "ret_type": "builtins.str", "ret_type_p": [["str", 1.0000000000000002]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates an address for an external log collecting service.", "long_descr": null, "ret": "URL to the external log collection service"}, "fn_lc": [[434, 4], [444, 66]], "fn_var_ln": {"log_id": [[442, 8], [442, 14]], "scheme": [[443, 8], [443, 14]]}, "fn_var_occur": {"log_id": [["log_id", "self", "_render_log_id", "task_instance", "try_number"], ["scheme", "self", "frontend", "format", "log_id", "quote", "log_id"]], "scheme": [["scheme", "self", "frontend"], ["scheme", "self", "frontend", "format", "log_id", "quote", "log_id"]]}, "name": "get_external_log_url", "params": {"self": "", "task_instance": "airflow.models.taskinstance.TaskInstance", "try_number": "builtins.int"}, "params_descr": {"self": "", "task_instance": "task instance object", "try_number": "task instance try_number to read logs from."}, "params_occur": {"self": [["log_id", "self", "_render_log_id", "task_instance", "try_number"], ["scheme", "self", "frontend"], ["scheme", "self", "frontend", "format", "log_id", "quote", "log_id"]], "task_instance": [["log_id", "self", "_render_log_id", "task_instance", "try_number"]], "try_number": [["log_id", "self", "_render_log_id", "task_instance", "try_number"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_instance": [["Dict[str, Any]", 0.08925319679947016], ["str", 0.07158330627701454], ["annofabapi.models.Task", 0.07147605519106733]], "try_number": [["Dict[str, Any]", 0.08925319679947016], ["str", 0.07158330627701454], ["annofabapi.models.Task", 0.07147605519106733]]}, "q_name": "ElasticsearchTaskHandler.get_external_log_url", "ret_exprs": ["return scheme + self.frontend.format(log_id=quote(log_id))"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.90773609843469]], "variables": {"log_id": "", "scheme": ""}, "variables_p": {"log_id": [["int", 0.5892451897715792], ["str", 0.21362464896648828], ["bytes", 0.096126458084884]], "scheme": [["Dict[str, str]", 0.5066138431167077], ["str", 0.19084995977078675], ["int", 0.11713376092110046]]}}, {"docstring": {"func": "Whether we can support external links.", "long_descr": null, "ret": null}, "fn_lc": [[447, 4], [449, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "supports_external_link", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["bool", "self", "frontend"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ElasticsearchTaskHandler.supports_external_link", "ret_exprs": ["return bool(self.frontend)"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}], "name": "ElasticsearchTaskHandler", "q_name": "ElasticsearchTaskHandler", "variables": {"LOG_NAME": "", "MAX_LINE_PER_PAGE": "", "PAGE": "", "trigger_should_wrap": ""}, "variables_p": {"LOG_NAME": [["str", 0.9999999976697829], ["List[str]", 1.1651086665608833e-09]], "MAX_LINE_PER_PAGE": [["bool", 0.39999999999999997], ["str", 0.3], ["int", 0.09999999999999999], ["Pattern[str]", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "PAGE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "trigger_should_wrap": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [{"docstring": {"func": "Get item from obj but return default if not found.", "long_descr": "E.g. calling ``getattr_nested(a, 'b.c', \"NA\")`` will return\n``a.b.c`` if such a value exists, and \"NA\" otherwise.", "ret": null}, "fn_lc": [[452, 0], [464, 22]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "getattr_nested", "params": {"default": "", "item": "", "obj": ""}, "params_descr": {"default": "", "item": "", "obj": ""}, "params_occur": {"default": [], "item": [["attrgetter", "item", "obj"]], "obj": [["attrgetter", "item", "obj"]]}, "params_p": {"args": [], "default": [["bool", 0.16451304720860138], ["T", 0.08861547779848006]], "item": [["float", 0.25377619950164887], ["int", 0.19381823425183775], ["list", 0.1105644774885737], ["tuple", 0.07039209391615077]], "kwargs": [], "obj": [["float", 0.25377619950164887], ["int", 0.19381823425183775], ["list", 0.1105644774885737], ["tuple", 0.07039209391615077]]}, "q_name": "getattr_nested", "ret_exprs": ["return attrgetter(item)(obj)", "return default"], "ret_type": "", "ret_type_p": [["Optional[int]", 0.09820543831817137], ["Optional[List[int]]", 0.0763988392035832], ["float", 0.07433153481851283], ["Tuple[int, int]", 0.07330585935052907], ["str", 0.0694159133888456]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[467, 0], [494, 22]], "fn_var_ln": {"source": [[468, 4], [468, 10]], "transformed": [[469, 4], [469, 15]]}, "fn_var_occur": {"source": [["source", "res"], ["transformed", "source", "get", "source", "get", "res", "get", "res", "get", "res", "get", "res", "get"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"]], "transformed": [["transformed", "source", "get", "source", "get", "res", "get", "res", "get", "res", "get", "res", "get"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"], ["transformed", "source"]]}, "name": "unwrap_response", "params": {"res": ""}, "params_descr": {"res": ""}, "params_occur": {"res": [["source", "res"], ["transformed", "source", "get", "source", "get", "res", "get", "res", "get", "res", "get", "res", "get"]]}, "params_p": {"args": [], "kwargs": [], "res": [["dict", 0.2981957740916977], ["Dict[str, Any]", 0.2684936569360379]]}, "q_name": "unwrap_response", "ret_exprs": ["return transformed"], "ret_type": "", "ret_type_p": [["dict", 0.49999999936965217], ["str", 5.265777025126743e-10], ["Callable", 1.223529756895091e-10], ["Callable[[None, None], bool]", 1.223529756895091e-10]], "variables": {"source": "", "transformed": ""}, "variables_p": {"source": [["str", 0.37355427055899415], ["Dict[Any, str]", 0.23658460014289265], ["dict", 0.1887288094827197], ["Dict[str, str]", 0.10621317892531876]], "transformed": [["str", 0.19542612839783685], ["Dict[str, str]", 0.10976756520661267], ["List[Tuple[Any, Any]]", 0.10180098320619621], ["tuple", 0.09842598013683898], ["Dict[str, Dict[str, Any]]", 0.09727088753926473], ["list", 0.0925735686573562]]}}], "imports": ["__future__", "annotations", "logging", "sys", "warnings", "collections", "defaultdict", "datetime", "datetime", "operator", "attrgetter", "time", "time", "typing", "TYPE_CHECKING", "List", "Tuple", "urllib", "parse", "quote", "elasticsearch", "pendulum", "elasticsearch", "exceptions", "ElasticsearchException", "NotFoundError", "airflow", "configuration", "conf", "airflow", "exceptions", "AirflowProviderDeprecationWarning", "airflow", "models", "dagrun", "DagRun", "airflow", "models", "taskinstance", "TaskInstance", "airflow", "providers", "elasticsearch", "log", "es_json_formatter", "ElasticsearchJSONFormatter", "airflow", "utils", "timezone", "airflow", "utils", "log", "file_task_handler", "FileTaskHandler", "airflow", "utils", "log", "logging_mixin", "ExternalLoggingMixin", "LoggingMixin", "airflow", "utils", "session", "create_session"], "mod_var_ln": {"EsLogMsgType": [[47, 0], [47, 12]], "LOG_LINE_DEFAULTS": [[45, 0], [45, 17]], "USE_PER_RUN_LOG_ID": [[52, 0], [52, 18]]}, "mod_var_occur": {"EsLogMsgType": [], "LOG_LINE_DEFAULTS": [["self", "formatter", "_style", "format", "logging", "makeLogRecord", "LOG_LINE_DEFAULTS", "log_line", "to_dict"]], "USE_PER_RUN_LOG_ID": [["USE_PER_RUN_LOG_ID", "log_id_template", "None"], ["USE_PER_RUN_LOG_ID"]]}, "no_types_annot": {"D": 25, "I": 0, "U": 79}, "session_id": "X3TsTd1LJ3QkoTe0ekJO5CkAiPXNp_PtXngM5sT0XFE", "set": null, "tc": [false, null], "type_annot_cove": 0.24, "typed_seq": "", "untyped_seq": "", "variables": {"EsLogMsgType": "", "LOG_LINE_DEFAULTS": "", "USE_PER_RUN_LOG_ID": ""}, "variables_p": {"EsLogMsgType": [["datetime.datetime", 0.11558397418511406], ["Final", 0.06838392054996141], ["Type[Sequence[Any]]", 0.05974782978375826], ["str", 0.05365672881456744]], "LOG_LINE_DEFAULTS": [["int", 0.18522343092901905], ["float", 0.18436927415294216], ["list", 0.1273953283343846]], "USE_PER_RUN_LOG_ID": [["str", 0.6170321213044038], ["zaimcsvconverter.models.FileCsvConvertId", 0.09978758257522204], ["Optional[str]", 0.08936193888722344], ["bool", 0.08936193888722344]]}}}