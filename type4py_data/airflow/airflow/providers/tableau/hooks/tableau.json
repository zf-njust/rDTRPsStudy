{"error": null, "response": {"classes": [{"cls_lc": [[44, 0], [45, 68]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "TableauJobFailedException", "q_name": "TableauJobFailedException", "variables": {}, "variables_p": {}}, {"cls_lc": [[48, 0], [58, 16]], "cls_var_ln": {"CANCELED": [[58, 4], [58, 12]], "ERROR": [[57, 4], [57, 9]], "PENDING": [[55, 4], [55, 11]], "SUCCESS": [[56, 4], [56, 11]]}, "cls_var_occur": {"CANCELED": [], "ERROR": [], "PENDING": [], "SUCCESS": []}, "funcs": [], "name": "TableauJobFinishCode", "q_name": "TableauJobFinishCode", "variables": {"CANCELED": "", "ERROR": "", "PENDING": "", "SUCCESS": ""}, "variables_p": {"CANCELED": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "ERROR": [["str", 0.3], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["Optional[List[str]]", 0.09999999999999999]], "PENDING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "SUCCESS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[61, 0], [179, 42]], "cls_var_ln": {"conn_name_attr": [[76, 4], [76, 18]], "conn_type": [[78, 4], [78, 13]], "default_conn_name": [[77, 4], [77, 21]], "hook_name": [[79, 4], [79, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [94, 32]], "fn_var_ln": {"conn": [[84, 8], [84, 17]], "server": [[86, 8], [86, 19]], "site_id": [[85, 8], [85, 20]], "tableau_conn": [[94, 8], [94, 25]], "tableau_conn_id": [[83, 8], [83, 28]], "verify": [[89, 12], [89, 18]]}, "fn_var_occur": {"conn": [["self", "conn", "self", "get_connection", "self", "tableau_conn_id"], ["self", "site_id", "site_id", "self", "conn", "extra_dejson", "get"], ["self", "server", "Server", "self", "conn", "host"], ["verify", "typing", "Any", "self", "conn", "extra_dejson", "get", "True"], ["self", "server", "add_http_options", "options_dict", "verify", "self", "conn", "extra_dejson", "get", "None"]], "server": [["self", "server", "Server", "self", "conn", "host"], ["self", "server", "add_http_options", "options_dict", "verify", "self", "conn", "extra_dejson", "get", "None"], ["self", "server", "use_server_version"]], "site_id": [["self", "site_id", "site_id", "self", "conn", "extra_dejson", "get"]], "tableau_conn": [["self", "tableau_conn", "None"]], "tableau_conn_id": [["self", "tableau_conn_id", "tableau_conn_id"], ["self", "conn", "self", "get_connection", "self", "tableau_conn_id"]], "verify": [["verify", "typing", "Any", "self", "conn", "extra_dejson", "get", "True"], ["isinstance", "verify", "str"], ["verify", "parse_boolean", "verify"], ["self", "server", "add_http_options", "options_dict", "verify", "self", "conn", "extra_dejson", "get", "None"]]}, "name": "__init__", "params": {"self": "", "site_id": "str | None", "tableau_conn_id": "builtins.str"}, "params_descr": {"self": "", "site_id": "", "tableau_conn_id": ""}, "params_occur": {"self": [["self", "tableau_conn_id", "tableau_conn_id"], ["self", "conn", "self", "get_connection", "self", "tableau_conn_id"], ["self", "site_id", "site_id", "self", "conn", "extra_dejson", "get"], ["self", "server", "Server", "self", "conn", "host"], ["verify", "typing", "Any", "self", "conn", "extra_dejson", "get", "True"], ["self", "server", "add_http_options", "options_dict", "verify", "self", "conn", "extra_dejson", "get", "None"], ["self", "server", "use_server_version"], ["self", "tableau_conn", "None"]], "site_id": [["self", "site_id", "site_id", "self", "conn", "extra_dejson", "get"]], "tableau_conn_id": [["self", "tableau_conn_id", "tableau_conn_id"], ["self", "conn", "self", "get_connection", "self", "tableau_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "site_id": [["str", 0.29368120350085997], ["int", 0.24250789080441254], ["Optional[List[Any]]", 0.09428648071281782], ["Optional[str]", 0.09428648071281782], ["Dict[str, Any]", 0.09408001897352375], ["Optional[int]", 0.08968693990109274]], "tableau_conn_id": [["str", 0.2314917600278532], ["List[Dict[str, Any]]", 0.1979785202084522], ["Set[int]", 0.17517454215653408], ["int", 0.12993924775767476], ["bool", 0.09172251144854526], ["grouper.models.base.session.Session", 0.08702359276504888]]}, "q_name": "TableauHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"conn": "", "server": "", "site_id": "", "tableau_conn": "", "tableau_conn_id": "", "verify": ""}, "variables_p": {"conn": [["str", 0.21471786253013797], ["float", 0.18174226772607807], ["dict", 0.14123765651105777], ["datetime.date.time.datetime", 0.09335363160222582], ["int", 0.09115503241369152], ["Dict[str, Any]", 0.08981065275378518]], "server": [["str", 0.4025314313843883], ["int", 0.19208157498870487], ["list", 0.18864908922497184], ["dict", 0.11698308528172381]], "site_id": [["int", 0.907602453491278]], "tableau_conn": [["bool", 0.9999999997638014], ["int", 3.020395889648087e-11]], "tableau_conn_id": [["int", 0.9999999999999998]], "verify": [["str", 0.12355711872262583], ["Dict[str, str]", 0.10618900022817107], ["Set[str]", 0.0914815498760605]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [99, 19]], "fn_var_ln": {"tableau_conn": [[98, 12], [98, 29]]}, "fn_var_occur": {"tableau_conn": [["self", "tableau_conn"], ["self", "tableau_conn", "self", "get_conn"]]}, "name": "__enter__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "tableau_conn"], ["self", "tableau_conn", "self", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TableauHook.__enter__", "ret_exprs": ["return self"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"tableau_conn": ""}, "variables_p": {"tableau_conn": [["int", 0.9038281301809362], ["bool", 0.09617186981906385]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [102, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__exit__", "params": {"exc_tb": "typing.Any", "exc_type": "typing.Any", "exc_val": "typing.Any", "self": ""}, "params_descr": {"exc_tb": "", "exc_type": "", "exc_val": "", "self": ""}, "params_occur": {"exc_tb": [], "exc_type": [], "exc_val": [], "self": [["self", "server", "auth", "sign_out"]]}, "params_p": {"args": [], "exc_tb": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "exc_type": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "exc_val": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "TableauHook.__exit__", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Sign in to the Tableau Server.", "long_descr": null, "ret": "an authorized Tableau Server Context Manager object."}, "fn_lc": [[104, 4], [114, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn", "login", "self", "conn", "password"], ["self", "_auth_via_password"], ["self", "conn", "extra_dejson", "self", "conn", "extra_dejson"], ["self", "_auth_via_token"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TableauHook.get_conn", "ret_exprs": ["return self._auth_via_password()", "return self._auth_via_token()"], "ret_type": "tableauserverclient.server.Auth.contextmgr", "ret_type_p": [["str", 0.19456733739712323], ["dict", 0.19192791871211412], ["Callable", 0.12785718032350302], ["Optional[str]", 0.10458782428499318]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [120, 53]], "fn_var_ln": {"tableau_auth": [[117, 8], [117, 20]]}, "fn_var_occur": {"tableau_auth": [["tableau_auth", "TableauAuth", "username", "self", "conn", "login", "password", "self", "conn", "password", "site_id", "self", "site_id"], ["self", "server", "auth", "sign_in", "tableau_auth"]]}, "name": "_auth_via_password", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["tableau_auth", "TableauAuth", "username", "self", "conn", "login", "password", "self", "conn", "password", "site_id", "self", "site_id"], ["self", "server", "auth", "sign_in", "tableau_auth"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TableauHook._auth_via_password", "ret_exprs": ["return self.server.auth.sign_in(tableau_auth)"], "ret_type": "tableauserverclient.server.Auth.contextmgr", "ret_type_p": [], "variables": {"tableau_auth": ""}, "variables_p": {"tableau_auth": [["int", 0.1928024354891677], ["bool", 0.09992838102146637], ["float", 0.09907008196475284], ["Optional[float]", 0.09640121774458385], ["List[bool]", 0.09567704482177686]]}}, {"docstring": {"func": "The method is deprecated. Please, use the authentication via password instead.", "long_descr": null, "ret": null}, "fn_lc": [[122, 4], [134, 80]], "fn_var_ln": {"tableau_auth": [[129, 8], [129, 20]]}, "fn_var_occur": {"tableau_auth": [["tableau_auth", "PersonalAccessTokenAuth", "token_name", "self", "conn", "extra_dejson", "personal_access_token", "self", "conn", "extra_dejson", "site_id", "self", "site_id"], ["self", "server", "auth", "sign_in_with_personal_access_token", "tableau_auth"]]}, "name": "_auth_via_token", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["tableau_auth", "PersonalAccessTokenAuth", "token_name", "self", "conn", "extra_dejson", "personal_access_token", "self", "conn", "extra_dejson", "site_id", "self", "site_id"], ["self", "server", "auth", "sign_in_with_personal_access_token", "tableau_auth"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TableauHook._auth_via_token", "ret_exprs": ["return self.server.auth.sign_in_with_personal_access_token(tableau_auth)"], "ret_type": "tableauserverclient.server.Auth.contextmgr", "ret_type_p": [["bool", 0.1952148480730327], ["Optional[Callable]", 0.10142837791145272]], "variables": {"tableau_auth": ""}, "variables_p": {"tableau_auth": [["str", 0.19423267117201726], ["bool", 0.1908361428203091], ["List[str]", 0.11114961169856383], ["Collection[str]", 0.10456354020996289], ["annotations.MappingStrStr", 0.10456354020996289], ["int", 0.09508664117808266], ["Optional[str]", 0.09500431250113847]]}}, {"docstring": {"func": "Get all items of the given resource.", "long_descr": ".. see also:: https://tableau.github.io/server-client-python/docs/page-through-results", "ret": "all items by returning a Pager."}, "fn_lc": [[136, 4], [150, 34]], "fn_var_ln": {"resource": [[147, 12], [147, 20]]}, "fn_var_occur": {"resource": [["resource", "getattr", "self", "server", "resource_name"], ["Pager", "resource", "get"]]}, "name": "get_all", "params": {"resource_name": "builtins.str", "self": ""}, "params_descr": {"resource_name": "The name of the resource to paginate.\nFor example: jobs or workbooks.", "self": ""}, "params_occur": {"resource_name": [["resource", "getattr", "self", "server", "resource_name"], ["ValueError", "resource_name"]], "self": [["resource", "getattr", "self", "server", "resource_name"]]}, "params_p": {"args": [], "kwargs": [], "resource_name": [["str", 1.0]], "self": []}, "q_name": "TableauHook.get_all", "ret_exprs": ["return Pager(resource.get)"], "ret_type": "tableauserverclient.Pager", "ret_type_p": [["str", 0.9090393739913449], ["bool", 0.09096062600865498]], "variables": {"resource": ""}, "variables_p": {"resource": [["dict", 0.2631973720173404], ["Dict[str, str]", 0.22925231502281077], ["str", 0.19810802433827926], ["Dict[str, Any]", 0.07902087965235524], ["Set[str]", 0.07559892377208235]]}}, {"docstring": {"func": "Get the current state of a defined Tableau Job.", "long_descr": ".. see also:: https://tableau.github.io/server-client-python/docs/api-ref#jobs", "ret": "An Enum that describe the Tableau job's return code"}, "fn_lc": [[152, 4], [161, 88]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_job_status", "params": {"job_id": "builtins.str", "self": ""}, "params_descr": {"job_id": "The id of the job to check.", "self": ""}, "params_occur": {"job_id": [["TableauJobFinishCode", "int", "self", "server", "jobs", "get_by_id", "job_id", "finish_code"]], "self": [["TableauJobFinishCode", "int", "self", "server", "jobs", "get_by_id", "job_id", "finish_code"]]}, "params_p": {"args": [], "job_id": [["int", 0.7343442759118578], ["str", 0.17147137457565442]], "kwargs": [], "self": []}, "q_name": "TableauHook.get_job_status", "ret_exprs": ["return TableauJobFinishCode(int(self.server.jobs.get_by_id(job_id).finish_code))"], "ret_type": "TableauJobFinishCode", "ret_type_p": [["str", 0.29944966881154916], ["Union[str, List[str]]", 0.20088377194212856], ["dict", 0.1929330675725895], ["bytes", 0.1046724381786388], ["bool", 0.09738861531645518]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Wait until the current state of a defined Tableau Job is target_state or different from PENDING.", "long_descr": null, "ret": "return True if the job is equal to the target_status, False otherwise."}, "fn_lc": [[163, 4], [179, 42]], "fn_var_ln": {"finish_code": [[177, 12], [177, 23]]}, "fn_var_occur": {"finish_code": [["finish_code", "self", "get_job_status", "job_id", "job_id"], ["finish_code", "TableauJobFinishCode", "PENDING", "finish_code", "target_state"], ["self", "log", "info", "finish_code"], ["finish_code", "self", "get_job_status", "job_id", "job_id"], ["finish_code", "target_state"]]}, "name": "wait_for_state", "params": {"check_interval": "builtins.float", "job_id": "builtins.str", "self": "", "target_state": "TableauJobFinishCode"}, "params_descr": {"check_interval": "time in seconds that the job should wait in\nbetween each instance state checks until operation is completed", "job_id": "The id of the job to check.", "self": "", "target_state": "Enum that describe the Tableau job's target state"}, "params_occur": {"check_interval": [["time", "sleep", "check_interval"]], "job_id": [["finish_code", "self", "get_job_status", "job_id", "job_id"], ["finish_code", "self", "get_job_status", "job_id", "job_id"]], "self": [["finish_code", "self", "get_job_status", "job_id", "job_id"], ["self", "log", "info", "finish_code"], ["finish_code", "self", "get_job_status", "job_id", "job_id"]], "target_state": [["finish_code", "TableauJobFinishCode", "PENDING", "finish_code", "target_state"], ["finish_code", "target_state"]]}, "params_p": {"args": [], "check_interval": [["str", 0.5987301201819928], ["Optional[str]", 0.20290636716132016], ["Optional[Union[str, int]]", 0.10061277727271636], ["int", 0.09775073538397082]], "job_id": [["str", 0.508880751063566], ["int", 0.18177591378087204]], "kwargs": [], "self": [], "target_state": [["int", 0.26616832006346813], ["str", 0.17266946474353895], ["Optional[int]", 0.10595566352018448]]}, "q_name": "TableauHook.wait_for_state", "ret_exprs": ["return finish_code == target_state"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.29554988892859946], ["IO", 0.1976213603954376], ["Dict[str, Any]", 0.1000359244108191], ["Callable[[], str]", 0.09767425344657985], ["int", 0.0912717238415105]], "variables": {"finish_code": ""}, "variables_p": {"finish_code": [["str", 0.31156317740081985], ["Tuple[str]", 0.12247586195529624], ["int", 0.1142023023508704], ["Tuple[str, str]", 0.10023685293743831], ["Type[int]", 0.09013411038942706], ["List[str]", 0.08664791900314141], ["Dict[str, str]", 0.08663777439014762]]}}], "name": "TableauHook", "q_name": "TableauHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}], "funcs": [{"docstring": {"func": "Try to parse a string into boolean.", "long_descr": "The string is returned as-is if it does not look like a boolean value.", "ret": null}, "fn_lc": [[31, 0], [41, 14]], "fn_var_ln": {"val": [[36, 4], [36, 7]]}, "fn_var_occur": {"val": [["val", "val", "lower"]]}, "name": "parse_boolean", "params": {"val": "builtins.str"}, "params_descr": {"val": ""}, "params_occur": {"val": [["val", "val", "lower"]]}, "params_p": {"args": [], "kwargs": [], "val": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]]}, "q_name": "parse_boolean", "ret_exprs": ["return True", "return False", "return val"], "ret_type": "str | bool", "ret_type_p": [["bool", 1.0]], "variables": {"val": ""}, "variables_p": {"val": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}], "imports": ["__future__", "annotations", "time", "warnings", "enum", "Enum", "typing", "Any", "tableauserverclient", "Pager", "PersonalAccessTokenAuth", "Server", "TableauAuth", "tableauserverclient", "server", "Auth", "airflow", "exceptions", "AirflowException", "AirflowProviderDeprecationWarning", "airflow", "hooks", "base", "BaseHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 17, "I": 0, "U": 21}, "session_id": "D2DmzqaO1-VsnBkrJTal8n0jdJKvieG8yhVqDDtUO98", "set": null, "tc": [false, null], "type_annot_cove": 0.45, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}