{"error": null, "response": {"classes": [{"cls_lc": [[30, 0], [79, 13]], "cls_var_ln": {"template_fields": [[44, 4], [44, 19]]}, "cls_var_occur": {"template_fields": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [62, 30]], "fn_var_ln": {"attachment_name": [[58, 8], [58, 28]], "check_regex": [[59, 8], [59, 24]], "conn_id": [[62, 8], [62, 20]], "mail_filter": [[61, 8], [61, 24]], "mail_folder": [[60, 8], [60, 24]]}, "fn_var_occur": {"attachment_name": [["self", "attachment_name", "attachment_name"]], "check_regex": [["self", "check_regex", "check_regex"]], "conn_id": [["self", "conn_id", "conn_id"]], "mail_filter": [["self", "mail_filter", "mail_filter"]], "mail_folder": [["self", "mail_folder", "mail_folder"]]}, "name": "__init__", "params": {"attachment_name": "", "check_regex": "", "conn_id": "", "kwargs": "", "mail_filter": "", "mail_folder": "", "self": ""}, "params_descr": {"attachment_name": "", "check_regex": "", "conn_id": "", "kwargs": "", "mail_filter": "", "mail_folder": "", "self": ""}, "params_occur": {"attachment_name": [["self", "attachment_name", "attachment_name"]], "check_regex": [["self", "check_regex", "check_regex"]], "conn_id": [["self", "conn_id", "conn_id"]], "kwargs": [["super", "__init__", "kwargs"]], "mail_filter": [["self", "mail_filter", "mail_filter"]], "mail_folder": [["self", "mail_folder", "mail_folder"]], "self": [["self", "attachment_name", "attachment_name"], ["self", "check_regex", "check_regex"], ["self", "mail_folder", "mail_folder"], ["self", "mail_filter", "mail_filter"], ["self", "conn_id", "conn_id"]]}, "params_p": {"args": [], "attachment_name": [["str", 0.48371671600874033], ["Sequence[str]", 0.11554231550213079], ["Optional[str]", 0.1092003403336875], ["bool", 0.09285066428723032], ["List[str]", 0.09017414103482756]], "check_regex": [["str", 0.572334556775377], ["Optional[bool]", 0.25301468307667613], ["Optional[str]", 0.089498311321082], ["int", 0.08515244882686475]], "conn_id": [["int", 0.3279136969965041], ["str", 0.2677511130951955], ["Optional[Set[int]]", 0.12448699547879716], ["Optional[int]", 0.08558480661464027], ["bool", 0.08508236491884341]], "kwargs": [], "mail_filter": [["str", 0.3123968581548407], ["int", 0.30914150195794177], ["tuple", 0.10119605639025016], ["list", 0.09286180972327679], ["bool", 0.09154196405041388]], "mail_folder": [["bool", 0.38305594648118224], ["int", 0.22690795129446678], ["float", 0.1882462548071852], ["Optional[Dict[str, Any]]", 0.1012890067596877]], "self": []}, "q_name": "ImapAttachmentSensor.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"attachment_name": "", "check_regex": "", "conn_id": "", "mail_filter": "", "mail_folder": ""}, "variables_p": {"attachment_name": [["str", 0.7439851468589803], ["list", 0.14946645667288752], ["Generator[str, None, None]", 0.10654839646813229]], "check_regex": [["str", 0.49310831017645607], ["int", 0.18829240305315892], ["Optional[str]", 0.0899233757609712]], "conn_id": [["str", 0.47047988680775443], ["int", 0.33625919028958395]], "mail_filter": [["str", 0.1874054263643321], ["Dict[str, Any]", 0.11872002474368092], ["int", 0.10458823755079283], ["Optional[str]", 0.09585195027626198], ["bool", 0.08924949750691845]], "mail_folder": [["str", 0.7036136619075446], ["int", 0.2963863380924554]]}}, {"docstring": {"func": "Pokes for a mail attachment on the mail server.", "long_descr": null, "ret": "True if attachment with the given name is present and False if not."}, "fn_lc": [[64, 4], [79, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "poke", "params": {"context": "airflow.utils.context.Context", "self": ""}, "params_descr": {"context": "The context that is being provided when poking.", "self": ""}, "params_occur": {"context": [], "self": [["self", "log", "info", "self", "attachment_name"], ["ImapHook", "imap_conn_id", "self", "conn_id", "imap_hook"], ["imap_hook", "has_mail_attachment", "name", "self", "attachment_name", "check_regex", "self", "check_regex", "mail_folder", "self", "mail_folder", "mail_filter", "self", "mail_filter"]]}, "params_p": {"args": [], "context": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "ImapAttachmentSensor.poke", "ret_exprs": ["return imap_hook.has_mail_attachment( name=self.attachment_name, check_regex=self.check_regex, mail_folder=self.mail_folder, mail_filter=self.mail_filter,)"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.10601288867462898]], "variables": {}, "variables_p": {}}], "name": "ImapAttachmentSensor", "q_name": "ImapAttachmentSensor", "variables": {"template_fields": "typing.Sequence[builtins.str]"}, "variables_p": {"template_fields": [["Tuple[str, str, str, str, str, str]", 0.2857142856828355], ["Tuple[str, str, str]", 0.2857142856828355], ["Tuple[str, str, str, str]", 0.2857142856828355], ["Tuple[str, str, str, str, str]", 0.14285714284141776], ["Dict[str, str]", 7.42502725571635e-11]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "TYPE_CHECKING", "Sequence", "airflow", "providers", "imap", "hooks", "imap", "ImapHook", "airflow", "sensors", "base", "BaseSensorOperator", "airflow", "utils", "context", "Context"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 4, "I": 0, "U": 6}, "session_id": "em8OBP3Tf8JqbGFqlJcFXVDV7iqd9Q3GoMaK1T0KSps", "set": null, "tc": [false, null], "type_annot_cove": 0.4, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}