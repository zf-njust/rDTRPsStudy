{"error": null, "response": {"classes": [{"cls_lc": [[26, 0], [47, 23]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [37, 28]], "fn_var_ln": {"topics": [[37, 8], [37, 19]]}, "fn_var_occur": {"topics": [["self", "topics", "topics"]]}, "name": "__init__", "params": {"kafka_config_id": "", "self": "", "topics": "typing.Sequence[builtins.str]"}, "params_descr": {"kafka_config_id": "", "self": "", "topics": ""}, "params_occur": {"kafka_config_id": [["super", "__init__", "kafka_config_id", "kafka_config_id"]], "self": [["self", "topics", "topics"]], "topics": [["self", "topics", "topics"]]}, "params_p": {"args": [], "kafka_config_id": [["str", 0.7845156988349669], ["int", 0.10774215058251657], ["float", 0.10774215058251657]], "kwargs": [], "self": [], "topics": [["str", 0.5395356390701374], ["bool", 0.11694163107187253], ["List[Dict]", 0.10591412059856149]]}, "q_name": "KafkaConsumerHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"topics": ""}, "variables_p": {"topics": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [40, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_client", "params": {"config": "", "self": ""}, "params_descr": {"config": "", "self": ""}, "params_occur": {"config": [["Consumer", "config"]], "self": []}, "params_p": {"args": [], "config": [["Dict[str, Any]", 0.1681766072086291], ["int", 0.12858914191662632], ["Type[T]", 0.10441668790215096], ["str", 0.07503128310512329], ["bool", 0.05220834395107548]], "kwargs": [], "self": []}, "q_name": "KafkaConsumerHook._get_client", "ret_exprs": ["return Consumer(config)"], "ret_type": "confluent_kafka.Consumer", "ret_type_p": [["Dict[str, Any]", 0.30427257790215056], ["str", 0.1594687668536128], ["Optional[str]", 0.09269588845492807], ["dict", 0.07680439905552508]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns a Consumer that has been subscribed to topics.", "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [47, 23]], "fn_var_ln": {"consumer": [[44, 8], [44, 16]]}, "fn_var_occur": {"consumer": [["consumer", "self", "get_conn"], ["consumer", "subscribe", "self", "topics"]]}, "name": "get_consumer", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["consumer", "self", "get_conn"], ["consumer", "subscribe", "self", "topics"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "KafkaConsumerHook.get_consumer", "ret_exprs": ["return consumer"], "ret_type": "confluent_kafka.Consumer", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"consumer": ""}, "variables_p": {"consumer": [["str", 1.0000000000000002]]}}], "name": "KafkaConsumerHook", "q_name": "KafkaConsumerHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "Sequence", "confluent_kafka", "Consumer", "airflow", "providers", "apache", "kafka", "hooks", "base", "KafkaBaseHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 3, "I": 0, "U": 4}, "session_id": "mvXdxBfk4vyzB68M3-rwcs4mN9tXOITdayyiSq3D3To", "set": null, "tc": [false, null], "type_annot_cove": 0.43, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}