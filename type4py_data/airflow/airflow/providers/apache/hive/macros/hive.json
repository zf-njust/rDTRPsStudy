{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Gets the max partition for a table.", "long_descr": null, "ret": null}, "fn_lc": [[23, 0], [50, 103]], "fn_var_ln": {"hive_hook": [[49, 4], [49, 13]], "schema": [[48, 8], [48, 14]], "table": [[48, 16], [48, 21]]}, "fn_var_occur": {"hive_hook": [["hive_hook", "HiveMetastoreHook", "metastore_conn_id", "metastore_conn_id"], ["hive_hook", "max_partition", "schema", "schema", "table_name", "table", "field", "field", "filter_map", "filter_map"]], "schema": [["schema", "table", "table", "split"], ["hive_hook", "max_partition", "schema", "schema", "table_name", "table", "field", "field", "filter_map", "filter_map"]], "table": [["schema", "table", "table", "split"], ["hive_hook", "max_partition", "schema", "schema", "table_name", "table", "field", "field", "filter_map", "filter_map"]]}, "name": "max_partition", "params": {"field": "", "filter_map": "", "metastore_conn_id": "", "schema": "", "table": ""}, "params_descr": {"field": "the field to get the max value from. If there's only\none partition field, this will be inferred\n\n>>> max_partition('airflow.static_babynames_partitioned')\n'2015-01-01'", "filter_map": "partition_key:partition_value map used for partition filtering,\ne.g. {'key1': 'value1', 'key2': 'value2'}.\nOnly partitions matching all partition_key:partition_value\npairs will be considered as candidates of max partition.", "metastore_conn_id": "The hive connection you are interested in.\nIf your default is set you don't need to use this parameter.", "schema": "The hive schema the table lives in", "table": "The hive table you are interested in, supports the dot\nnotation as in \"my_database.my_table\", if a dot is found,\nthe schema param is disregarded"}, "params_occur": {"field": [["hive_hook", "max_partition", "schema", "schema", "table_name", "table", "field", "field", "filter_map", "filter_map"]], "filter_map": [["hive_hook", "max_partition", "schema", "schema", "table_name", "table", "field", "field", "filter_map", "filter_map"]], "metastore_conn_id": [["hive_hook", "HiveMetastoreHook", "metastore_conn_id", "metastore_conn_id"]], "schema": [["schema", "table", "table", "split"], ["hive_hook", "max_partition", "schema", "schema", "table_name", "table", "field", "field", "filter_map", "filter_map"]], "table": [["schema", "table", "table", "split"], ["hive_hook", "max_partition", "schema", "schema", "table_name", "table", "field", "field", "filter_map", "filter_map"]]}, "params_p": {"args": [], "field": [["bool", 0.6172619928042702], ["str", 0.19584777202334344], ["dict", 0.18689023517238632]], "filter_map": [["bool", 0.6172619928042702], ["str", 0.19584777202334344], ["dict", 0.18689023517238632]], "kwargs": [], "metastore_conn_id": [["str", 0.6253880917338455], ["int", 0.1418707745112802], ["float", 0.0805446928914762], ["dict", 0.07672615915222797], ["bool", 0.07547028171117025]], "schema": [["str", 0.4797654603721477], ["Optional[str]", 0.30566102436005804], ["Optional[List[str]]", 0.0982038645704199]], "table": [["str", 0.4797654603721477], ["Optional[str]", 0.30566102436005804], ["Optional[List[str]]", 0.0982038645704199]]}, "q_name": "max_partition", "ret_exprs": ["return hive_hook.max_partition(schema=schema, table_name=table, field=field, filter_map=filter_map)"], "ret_type": "", "ret_type_p": [["str", 0.3666283348787369], ["float", 0.11692087616070562], ["Dict[str, int]", 0.09750094179821604], ["List[Dict[str, Any]]", 0.09074049079103516]], "variables": {"hive_hook": "", "schema": "", "table": ""}, "variables_p": {"hive_hook": [["int", 0.7031878269516812], ["str", 0.09738998120650033], ["datetime.datetime", 0.09738998120650033]], "schema": [["str", 0.28081999980816824], ["dict", 0.2281375133135911], ["Dict[str, List[str]]", 0.20045500083321502], ["List[str]", 0.20045500083321502], ["Dict[str, str]", 0.09013248521181055]], "table": [["str", 0.2298223511145231], ["Set[str]", 0.18329711201706275], ["Dict[str, str]", 0.09045727634431966]]}}, {"docstring": {"func": "This function finds the date in a list closest to the target date.", "long_descr": "An optional parameter can be given to get the closest before or after.", "ret": "The closest date"}, "fn_lc": [[53, 0], [72, 52]], "fn_var_ln": {"any_time": [[66, 4], [66, 12]], "time_after": [[65, 4], [65, 14]], "time_before": [[64, 4], [64, 15]]}, "fn_var_occur": {"any_time": [["any_time", "d", "target_dt", "d", "d", "target_dt", "d", "target_dt"], ["min", "date_list", "key", "any_time", "date"]], "time_after": [["time_after", "d", "d", "target_dt", "d", "target_dt", "datetime", "timedelta", "max"], ["min", "date_list", "key", "time_after", "date"]], "time_before": [["time_before", "d", "target_dt", "d", "d", "target_dt", "datetime", "timedelta", "max"], ["min", "date_list", "key", "time_before", "date"]]}, "name": "_closest_date", "params": {"before_target": "", "date_list": "", "target_dt": ""}, "params_descr": {"before_target": "closest before or after the target", "date_list": "The list of dates to search", "target_dt": "The target date"}, "params_occur": {"before_target": [["before_target", "None"]], "date_list": [["min", "date_list", "key", "any_time", "date"], ["min", "date_list", "key", "time_before", "date"], ["min", "date_list", "key", "time_after", "date"]], "target_dt": [["time_before", "d", "target_dt", "d", "d", "target_dt", "datetime", "timedelta", "max"], ["time_after", "d", "d", "target_dt", "d", "target_dt", "datetime", "timedelta", "max"], ["any_time", "d", "target_dt", "d", "d", "target_dt", "d", "target_dt"]]}, "params_p": {"args": [], "before_target": [["Optional[str]", 0.2511614196066249], ["int", 0.23779385629295632], ["Optional[int]", 0.13730930377389167], ["bool", 0.11061774295442445], ["Optional[List[Any]]", 0.07513548422283559]], "date_list": [["datetime.datetime", 0.357316940606906], ["dict", 0.2240653317963764], ["str", 0.14018798465077126], ["List[int]", 0.08878548091561529], ["Union[datetime.datetime, str]", 0.08837669450271746]], "kwargs": [], "target_dt": [["str", 0.11117684984287526], ["datetime", 0.09791959818125093], ["Optional[datetime.datetime]", 0.09476722522542325], ["bool", 0.09265051337885641], ["datetime.datetime", 0.08767359484652686]]}, "q_name": "_closest_date", "ret_exprs": ["return min(date_list, key=any_time).date()", "return min(date_list, key=time_before).date()", "return min(date_list, key=time_after).date()"], "ret_type": "datetime.date | None", "ret_type_p": [["datetime.datetime", 0.5696766928279682], ["int", 0.2849718355128672]], "variables": {"any_time": "", "time_after": "", "time_before": ""}, "variables_p": {"any_time": [["str", 0.4057693166191695], ["int", 0.2946718171512295], ["float", 0.0947127463702538]], "time_after": [["int", 0.36631027930575444], ["datetime.date.time.datetime", 0.10614696481093809], ["datetime.datetime", 0.10542888245845862]], "time_before": [["datetime.datetime.datetime", 0.4044147858753084], ["datetime.datetime.date", 0.32972643971019966], ["datetime.date.time.datetime", 0.09155496028519068]]}}, {"docstring": {"func": "This function finds the date in a list closest to the target date.", "long_descr": "An optional parameter can be given to get the closest before or after.", "ret": "The closest date\n>>> tbl = 'airflow.static_babynames_partitioned'\n>>> closest_ds_partition(tbl, '2015-01-02')\n'2015-01-01'"}, "fn_lc": [[75, 0], [111, 15]], "fn_var_ln": {"closest_ds": [[108, 8], [108, 18]], "hive_hook": [[98, 4], [98, 13]], "part_vals": [[102, 4], [102, 13]], "partitions": [[99, 4], [99, 14]], "parts": [[106, 8], [106, 13]], "schema": [[97, 8], [97, 14]], "table": [[97, 16], [97, 21]], "target_dt": [[107, 8], [107, 17]]}, "fn_var_occur": {"closest_ds": [["closest_ds", "_closest_date", "target_dt", "parts", "before_target", "before"], ["closest_ds", "None"], ["closest_ds", "isoformat"]], "hive_hook": [["hive_hook", "HiveMetastoreHook", "metastore_conn_id", "metastore_conn_id"], ["partitions", "hive_hook", "get_partitions", "schema", "schema", "table_name", "table"]], "part_vals": [["part_vals", "list", "p", "values", "p", "partitions"], ["ds", "part_vals"], ["parts", "datetime", "datetime", "strptime", "pv", "pv", "part_vals"]], "partitions": [["partitions", "hive_hook", "get_partitions", "schema", "schema", "table_name", "table"], ["part_vals", "list", "p", "values", "p", "partitions"]], "parts": [["parts", "datetime", "datetime", "strptime", "pv", "pv", "part_vals"], ["closest_ds", "_closest_date", "target_dt", "parts", "before_target", "before"]], "schema": [["schema", "table", "table", "split"], ["partitions", "hive_hook", "get_partitions", "schema", "schema", "table_name", "table"]], "table": [["schema", "table", "table", "split"], ["partitions", "hive_hook", "get_partitions", "schema", "schema", "table_name", "table"]], "target_dt": [["target_dt", "datetime", "datetime", "strptime", "ds"], ["closest_ds", "_closest_date", "target_dt", "parts", "before_target", "before"]]}, "name": "closest_ds_partition", "params": {"before": "", "ds": "", "metastore_conn_id": "", "schema": "", "table": ""}, "params_descr": {"before": "closest before (True), after (False) or either side of ds", "ds": "A datestamp ``%Y-%m-%d`` e.g. ``yyyy-mm-dd``", "metastore_conn_id": "which metastore connection to use", "schema": "table schema", "table": "A hive table name"}, "params_occur": {"before": [["closest_ds", "_closest_date", "target_dt", "parts", "before_target", "before"]], "ds": [["ds", "part_vals"], ["target_dt", "datetime", "datetime", "strptime", "ds"]], "metastore_conn_id": [["hive_hook", "HiveMetastoreHook", "metastore_conn_id", "metastore_conn_id"]], "schema": [["schema", "table", "table", "split"], ["partitions", "hive_hook", "get_partitions", "schema", "schema", "table_name", "table"]], "table": [["schema", "table", "table", "split"], ["partitions", "hive_hook", "get_partitions", "schema", "schema", "table_name", "table"]]}, "params_p": {"args": [], "before": [["bytes", 0.19821759630581076], ["float", 0.19087798091088445], ["bool", 0.12689588525690157], ["Optional[\"Span\"]", 0.1013371614726974], ["Union[str, dict]", 0.09753082172367382], ["Optional[object]", 0.09711060683533701]], "ds": [["datetime.datetime", 0.2772718469886292], ["Optional[datetime.datetime]", 0.17046181371520502], ["bool", 0.09461735471673034], ["str", 0.08711411281705764]], "kwargs": [], "metastore_conn_id": [["str", 0.5313616023612497], ["int", 0.13790858674497886], ["Optional[bool]", 0.07802989529964038], ["float", 0.07624431961766981]], "schema": [["str", 0.6208332101837378], ["Optional[str]", 0.09679621266620701], ["Optional[List[str]]", 0.0924135496625305]], "table": [["str", 0.6208332101837378], ["Optional[str]", 0.09679621266620701], ["Optional[List[str]]", 0.0924135496625305]]}, "q_name": "closest_ds_partition", "ret_exprs": ["return None", "return ds", "return closest_ds.isoformat()", "return None"], "ret_type": "str | None", "ret_type_p": [["Optional[str]", 0.10154473259395803], ["int", 0.09967925669214842], ["Optional[int]", 0.09237447639053817]], "variables": {"closest_ds": "", "hive_hook": "", "part_vals": "", "partitions": "", "parts": "", "schema": "", "table": "", "target_dt": ""}, "variables_p": {"closest_ds": [["int", 0.52951611073635], ["List[None]", 0.28487879038586833], ["datetime.time", 0.10901094373802953], ["Optional[int]", 0.07659415513975229]], "hive_hook": [["str", 0.21350261231344103]], "part_vals": [["Dict[str, bool]", 0.28520137620973657], ["datetime.datetime", 0.20569829312871662], ["datetime.datetime.date", 0.2001083936905343], ["datetime.datetime.datetime", 0.10878751098814243], ["List[Union[Any, Any]]", 0.09003745435056229]], "partitions": [["list", 0.23534147502592345], ["dict", 0.09940407206435106], ["Dict[str, str]", 0.09819495314645633], ["Dict[str, Dict[str, Any]]", 0.09799675808409436], ["str", 0.09073148788136133], ["Pattern[str]", 0.08917172713597395]], "parts": [["datetime.datetime.timedelta", 0.3996578652241203], ["datetime.datetime.datetime", 0.19980199716902575], ["datetime.datetime", 0.1941311103444574], ["Optional[datetime.datetime]", 0.1076189673051134], ["datetime.timedelta", 0.09879005995728288]], "schema": [["datetime.datetime", 0.27231991788868776], ["List[str]", 0.18494203366879525], ["list", 0.1769111004988938], ["str", 0.11135976001347363], ["int", 0.0909816810734319], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.08282367328648116]], "table": [["str", 0.46268958878950367], ["List[str]", 0.19946992905785782], ["List[Dict[str, Any]]", 0.11099568986250848]], "target_dt": [["datetime.datetime", 0.6009633513860053], ["datetime.datetime.datetime", 0.16159592442813747], ["datetime.date", 0.13614520162320223], ["datetime.datetime.timedelta", 0.1012955225626551]]}}], "imports": ["__future__", "annotations", "datetime", "airflow", "providers", "apache", "hive", "hooks", "hive", "HiveMetastoreHook", "airflow", "providers", "apache", "hive", "hooks", "hive", "HiveMetastoreHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 2, "I": 0, "U": 24}, "session_id": "_xzYINKy-vxwWxhU482Nk5xWAucsCKTZszoW76MM-Hw", "set": null, "tc": [false, null], "type_annot_cove": 0.08, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}