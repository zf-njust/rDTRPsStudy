{"error": null, "response": {"classes": [{"cls_lc": [[38, 0], [208, 24]], "cls_var_ln": {"conn_name_attr": [[86, 4], [86, 18]], "conn_type": [[88, 4], [88, 13]], "default_conn_name": [[87, 4], [87, 21]], "hook_name": [[89, 4], [89, 13]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [125, 27]], "fn_var_ln": {"cluster": [[123, 8], [123, 20]], "conn": [[93, 8], [93, 12]], "conn_config": [[95, 8], [95, 19]], "cql_version": [[111, 8], [111, 19]], "keyspace": [[124, 8], [124, 21]], "lb_policy": [[107, 8], [107, 17]], "policy_args": [[106, 8], [106, 19]], "policy_name": [[105, 8], [105, 19]], "protocol_version": [[119, 8], [119, 24]], "session": [[125, 8], [125, 20]], "ssl_options": [[115, 8], [115, 19]]}, "fn_var_occur": {"cluster": [["self", "cluster", "Cluster", "conn_config"]], "conn": [["conn", "self", "get_connection", "cassandra_conn_id"], ["conn", "host"], ["conn_config", "conn", "host", "split"], ["conn", "port"], ["conn_config", "int", "conn", "port"], ["conn", "login"], ["conn_config", "PlainTextAuthProvider", "username", "conn", "login", "password", "conn", "password"], ["policy_name", "conn", "extra_dejson", "get", "None"], ["policy_args", "conn", "extra_dejson", "get"], ["cql_version", "conn", "extra_dejson", "get", "None"], ["ssl_options", "conn", "extra_dejson", "get", "None"], ["protocol_version", "conn", "extra_dejson", "get", "None"], ["self", "keyspace", "conn", "schema"]], "conn_config": [["conn_config", "conn", "host", "split"], ["conn_config", "int", "conn", "port"], ["conn_config", "PlainTextAuthProvider", "username", "conn", "login", "password", "conn", "password"], ["conn_config", "lb_policy"], ["conn_config", "cql_version"], ["conn_config", "ssl_options"], ["conn_config", "protocol_version"], ["self", "cluster", "Cluster", "conn_config"]], "cql_version": [["cql_version", "conn", "extra_dejson", "get", "None"], ["conn_config", "cql_version"]], "keyspace": [["self", "keyspace", "conn", "schema"]], "lb_policy": [["lb_policy", "self", "get_lb_policy", "policy_name", "policy_args"], ["conn_config", "lb_policy"]], "policy_args": [["policy_args", "conn", "extra_dejson", "get"], ["lb_policy", "self", "get_lb_policy", "policy_name", "policy_args"]], "policy_name": [["policy_name", "conn", "extra_dejson", "get", "None"], ["lb_policy", "self", "get_lb_policy", "policy_name", "policy_args"]], "protocol_version": [["protocol_version", "conn", "extra_dejson", "get", "None"], ["conn_config", "protocol_version"]], "session": [["self", "session", "None"]], "ssl_options": [["ssl_options", "conn", "extra_dejson", "get", "None"], ["conn_config", "ssl_options"]]}, "name": "__init__", "params": {"cassandra_conn_id": "builtins.str", "self": ""}, "params_descr": {"cassandra_conn_id": "", "self": ""}, "params_occur": {"cassandra_conn_id": [["conn", "self", "get_connection", "cassandra_conn_id"]], "self": [["conn", "self", "get_connection", "cassandra_conn_id"], ["lb_policy", "self", "get_lb_policy", "policy_name", "policy_args"], ["self", "cluster", "Cluster", "conn_config"], ["self", "keyspace", "conn", "schema"], ["self", "session", "None"]]}, "params_p": {"args": [], "cassandra_conn_id": [["str", 0.28716112072856437], ["int", 0.2426540608003584], ["bytes", 0.18961474592951916], ["Optional[int]", 0.08711442204810477]], "kwargs": [], "self": []}, "q_name": "CassandraHook.__init__", "ret_exprs": [], "ret_type": "", "variables": {"cluster": "", "conn": "", "conn_config": "", "cql_version": "", "keyspace": "", "lb_policy": "", "policy_args": "", "policy_name": "", "protocol_version": "", "session": "", "ssl_options": ""}, "variables_p": {"cluster": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "conn": [["str", 0.19193781209120417], ["bytes", 0.10148202109304039], ["List[str]", 0.10086141092377991], ["int", 0.09927189572391056], ["dict", 0.09636652794415139]], "conn_config": [["Tuple[int, int, Literal]", 0.3807689268152386], ["range", 0.09636175536486809], ["bytes", 0.09617861159019354], ["int", 0.08332750728126158]], "cql_version": [["Dict[str, Any]", 0.194673051121499], ["str", 0.18252790610470304], ["Dict[str, str]", 0.17883881077061298], ["dict", 0.11228907322989659], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.11115001140788153], ["Dict[str, int]", 0.09898088917616739]], "keyspace": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "lb_policy": [["str", 0.28828608414484114], ["int", 0.09403490252016855]], "policy_args": [["dict", 0.506096768097338], ["Dict[Any, Dict[Any, Any]]", 0.20796370875575101], ["Dict[Any, dict]", 0.10416700756138425], ["Dict[Any, Union[int, str]]", 0.09655688767006276], ["Dict[str, dict]", 0.08521562791546407]], "policy_name": [["str", 0.471568020172382], ["Pattern[str]", 0.2064720571534352], ["Dict[str, Dict[str, str]]", 0.13692813418541283], ["Dict[str, Any]", 0.0990602487432604], ["dict", 0.08597153974550956]], "protocol_version": [["Dict[str, Any]", 0.194673051121499], ["str", 0.18252790610470304], ["Dict[str, str]", 0.17883881077061298], ["dict", 0.11228907322989659], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.11115001140788153], ["Dict[str, int]", 0.09898088917616739]], "session": [["Optional[str]", 0.39444667930013544], ["sqlalchemy.orm.session.Session", 0.19822750441406123], ["libkol.Session.Session", 0.14912919486810605], ["str", 0.07464755735835239]], "ssl_options": [["Set[str]", 0.11310792749953658], ["List[str]", 0.11086320946392982], ["Dict[str, Union[dict, Any]]", 0.10870494662160247], ["Dict[str, str]", 0.08313139684953368], ["dict", 0.08303235025834609]]}}, {"docstring": {"func": "Returns a cassandra Session object.", "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [132, 27]], "fn_var_ln": {"session": [[131, 8], [131, 20]]}, "fn_var_occur": {"session": [["self", "session", "self", "session", "is_shutdown"], ["self", "session"], ["self", "session", "self", "cluster", "connect", "self", "keyspace"], ["self", "session"]]}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "session", "self", "session", "is_shutdown"], ["self", "session"], ["self", "session", "self", "cluster", "connect", "self", "keyspace"], ["self", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CassandraHook.get_conn", "ret_exprs": ["return self.session", "return self.session"], "ret_type": "cassandra.cluster.Session", "ret_type_p": [["int", 0.2075464322926618], ["bool", 0.10866660931092426], ["bytes", 0.09304054979559499]], "variables": {"session": ""}, "variables_p": {"session": [["Callable", 0.12401534772627562], ["bool", 0.09218995488538972]]}}, {"docstring": {"func": "Returns Cassandra cluster.", "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [136, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_cluster", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cluster"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CassandraHook.get_cluster", "ret_exprs": ["return self.cluster"], "ret_type": "cassandra.cluster.Cluster", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Closes all sessions and connections associated with this Cluster.", "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [141, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "shutdown_cluster", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cluster", "is_shutdown"], ["self", "cluster", "shutdown"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CassandraHook.shutdown_cluster", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates load balancing policy.", "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [176, 33]], "fn_var_ln": {"allowed_child_policies": [[163, 12], [163, 34]], "child_policy": [[172, 12], [172, 24]], "child_policy_args": [[169, 12], [169, 29]], "child_policy_name": [[168, 12], [168, 29]], "hosts": [[157, 12], [157, 17]], "local_dc": [[152, 12], [152, 20]], "used_hosts_per_remote_dc": [[153, 12], [153, 36]]}, "fn_var_occur": {"allowed_child_policies": [["child_policy_name", "allowed_child_policies"]], "child_policy": [["child_policy", "CassandraHook", "get_lb_policy", "child_policy_name", "child_policy_args"], ["TokenAwarePolicy", "child_policy"]], "child_policy_args": [["child_policy_args", "policy_args", "get"], ["child_policy", "CassandraHook", "get_lb_policy", "child_policy_name", "child_policy_args"]], "child_policy_name": [["child_policy_name", "policy_args", "get"], ["child_policy_name", "allowed_child_policies"], ["child_policy", "CassandraHook", "get_lb_policy", "child_policy_name", "child_policy_args"]], "hosts": [["hosts", "policy_args", "get"], ["WhiteListRoundRobinPolicy", "hosts"]], "local_dc": [["local_dc", "policy_args", "get"], ["DCAwareRoundRobinPolicy", "local_dc", "used_hosts_per_remote_dc"]], "used_hosts_per_remote_dc": [["used_hosts_per_remote_dc", "int", "policy_args", "get"], ["DCAwareRoundRobinPolicy", "local_dc", "used_hosts_per_remote_dc"]]}, "name": "get_lb_policy", "params": {"policy_args": "builtins.dict[builtins.str, typing.Any]", "policy_name": "builtins.str"}, "params_descr": {"policy_args": "Parameters for the policy.", "policy_name": "Name of the policy to use."}, "params_occur": {"policy_args": [["local_dc", "policy_args", "get"], ["used_hosts_per_remote_dc", "int", "policy_args", "get"], ["hosts", "policy_args", "get"], ["child_policy_name", "policy_args", "get"], ["child_policy_args", "policy_args", "get"]], "policy_name": []}, "params_p": {"args": [], "kwargs": [], "policy_args": [["str", 0.21703426020005978], ["Dict[str, Any]", 0.18537015770030701], ["dict", 0.09695190212874535], ["raiden.utils.BlockTimeout", 0.09630604637090981], ["bool", 0.09437895560205327], ["Mapping[str, Any]", 0.09351166889267168]], "policy_name": [["bool", 0.22135902172211042], ["str", 0.18413797290668274], ["Literal", 0.13877798201308916], ["Optional[str]", 0.13579352522571747]], "self": []}, "q_name": "CassandraHook.get_lb_policy", "ret_exprs": ["return DCAwareRoundRobinPolicy(local_dc, used_hosts_per_remote_dc)", "return WhiteListRoundRobinPolicy(hosts)", "return TokenAwarePolicy(RoundRobinPolicy())", "return TokenAwarePolicy(child_policy)", "return RoundRobinPolicy()"], "ret_type": "Policy", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"allowed_child_policies": "", "child_policy": "", "child_policy_args": "", "child_policy_name": "", "hosts": "", "local_dc": "", "used_hosts_per_remote_dc": ""}, "variables_p": {"allowed_child_policies": [["List[str]", 1.0000000000000002]], "child_policy": [], "child_policy_args": [["Dict[str, Any]", 0.25543093122980187], ["str", 0.18162052944456733], ["List[Tuple[str, bytes]]", 0.10860370762849796], ["Dict[str, str]", 0.09441973110915515], ["Dict[Any, str]", 0.08967982757800279], ["List[Tuple[str, str, str, str]]", 0.08529911150870678]], "child_policy_name": [["str", 0.6075144894549827], ["Dict[str, str]", 0.1973157069650947], ["Dict[int, str]", 0.09914855868700714], ["list", 0.09602124489291572]], "hosts": [["Dict[str, str]", 0.22797131928158876], ["Tuple[Type[str], Type[bytes]]", 0.1829119049153286], ["dict", 0.09734328305980522], ["str", 0.09627421386229246]], "local_dc": [["Tuple[Type[str], Type[bytes]]", 0.16088942905746517], ["str", 0.1519004143448983], ["dict", 0.09135893737038094], ["Dict[str, str]", 0.08885072236673744]], "used_hosts_per_remote_dc": [["int", 0.5136715743632243], ["Dict[int, Any]", 0.27474238066535916], ["str", 0.10312715942482367]]}}, {"docstring": {"func": "Checks if a table exists in Cassandra.", "long_descr": null, "ret": null}, "fn_lc": [[178, 4], [189, 110]], "fn_var_ln": {"cluster_metadata": [[188, 8], [188, 24]], "keyspace": [[187, 12], [187, 20]], "table": [[187, 22], [187, 27]]}, "fn_var_occur": {"cluster_metadata": [["cluster_metadata", "self", "get_conn", "cluster", "metadata"], ["keyspace", "cluster_metadata", "keyspaces", "table", "cluster_metadata", "keyspaces", "keyspace", "tables"]], "keyspace": [["keyspace", "self", "keyspace"], ["keyspace", "table", "table", "split"], ["keyspace", "cluster_metadata", "keyspaces", "table", "cluster_metadata", "keyspaces", "keyspace", "tables"]], "table": [["keyspace", "table", "table", "split"], ["keyspace", "cluster_metadata", "keyspaces", "table", "cluster_metadata", "keyspaces", "keyspace", "tables"]]}, "name": "table_exists", "params": {"self": "", "table": "builtins.str"}, "params_descr": {"self": "", "table": "Target Cassandra table.\nUse dot notation to target a specific keyspace."}, "params_occur": {"self": [["keyspace", "self", "keyspace"], ["cluster_metadata", "self", "get_conn", "cluster", "metadata"]], "table": [["keyspace", "table", "table", "split"], ["keyspace", "cluster_metadata", "keyspaces", "table", "cluster_metadata", "keyspaces", "keyspace", "tables"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "table": [["str", 0.7876447362194442], ["List[str]", 0.11715052285584393], ["Optional[str]", 0.09520474092471162]]}, "q_name": "CassandraHook.table_exists", "ret_exprs": ["return keyspace in cluster_metadata.keyspaces and table in cluster_metadata.keyspaces[keyspace].tables"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999998]], "variables": {"cluster_metadata": "", "keyspace": "", "table": ""}, "variables_p": {"cluster_metadata": [["int", 0.6230401519021689], ["str", 0.10435748268802986], ["dict", 0.09210610768953971]], "keyspace": [["str", 0.8007899611856985], ["Dict[Tuple[str, str], int]", 0.10588229688636103], ["bytes", 0.09332774192794056]], "table": [["str", 0.3978936773098831], ["List[str]", 0.3745151860409375], ["Pattern[str]", 0.12939542950332095], ["Dict[str, Any]", 0.09819570714585847]]}}, {"docstring": {"func": "Checks if a record exists in Cassandra.", "long_descr": null, "ret": null}, "fn_lc": [[191, 4], [208, 24]], "fn_var_ln": {"keyspace": [[201, 12], [201, 20]], "ks_str": [[202, 8], [202, 14]], "query": [[203, 8], [203, 13]], "result": [[205, 12], [205, 18]], "table": [[201, 22], [201, 27]]}, "fn_var_occur": {"keyspace": [["keyspace", "self", "keyspace"], ["keyspace", "table", "table", "split"], ["query", "keyspace", "table", "ks_str"]], "ks_str": [["ks_str", "join", "key", "key", "key", "keys"], ["query", "keyspace", "table", "ks_str"]], "query": [["query", "keyspace", "table", "ks_str"], ["result", "self", "get_conn", "execute", "query", "keys"]], "result": [["result", "self", "get_conn", "execute", "query", "keys"], ["result", "one", "None"]], "table": [["keyspace", "table", "table", "split"], ["query", "keyspace", "table", "ks_str"]]}, "name": "record_exists", "params": {"keys": "builtins.dict[builtins.str, builtins.str]", "self": "", "table": "builtins.str"}, "params_descr": {"keys": "The keys and their values to check the existence.", "self": "", "table": "Target Cassandra table.\nUse dot notation to target a specific keyspace."}, "params_occur": {"keys": [["ks_str", "join", "key", "key", "key", "keys"], ["result", "self", "get_conn", "execute", "query", "keys"]], "self": [["keyspace", "self", "keyspace"], ["result", "self", "get_conn", "execute", "query", "keys"]], "table": [["keyspace", "table", "table", "split"], ["query", "keyspace", "table", "ks_str"]]}, "params_p": {"args": [], "keys": [["str", 0.294910340866629], ["Dict[str, Any]", 0.10126481089653935]], "kwargs": [], "self": [], "table": [["str", 0.6920070790923545], ["Tuple[type]", 0.2140243393248633], ["Optional[str]", 0.09396858158278219]]}, "q_name": "CassandraHook.record_exists", "ret_exprs": ["return result.one() is not None", "return False"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.7019567027572438], ["int", 0.19255108979054597], ["str", 0.10549220745221027]], "variables": {"keyspace": "", "ks_str": "", "query": "", "result": "", "table": ""}, "variables_p": {"keyspace": [["Dict[str, str]", 0.20656765090067372], ["str", 0.11753807536696892], ["DefaultDict[Any, List]", 0.10550574700702137], ["Dict[Any, str]", 0.10246541707446], ["Type[\"ExtractableWordnet\"]", 0.09187088736477267], ["List[Tuple[str, str]]", 0.09061115248362216]], "ks_str": [["str", 0.613415088983883], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10259457697403623], ["List[str]", 0.09466664956989335], ["list", 0.09440031236991292]], "query": [["dict", 0.10112069771288834], ["Generator[Any, None, None]", 0.09596671163242941]], "result": [["dict", 0.3978363998572279], ["list", 0.10604518458329944]], "table": [["Pattern[str]", 0.5185889780765521], ["str", 0.20563876403726603], ["Dict[str, str]", 0.1919709516847361], ["DefaultDict[Any, Set[Any]]", 0.08380130620144567]]}}], "name": "CassandraHook", "q_name": "CassandraHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "Any", "Union", "cassandra", "auth", "PlainTextAuthProvider", "cassandra", "cluster", "Cluster", "Session", "cassandra", "policies", "DCAwareRoundRobinPolicy", "RoundRobinPolicy", "TokenAwarePolicy", "WhiteListRoundRobinPolicy", "airflow", "hooks", "base", "BaseHook", "airflow", "utils", "log", "logging_mixin", "LoggingMixin"], "mod_var_ln": {"Policy": [[35, 0], [35, 6]]}, "mod_var_occur": {"Policy": []}, "no_types_annot": {"D": 10, "I": 0, "U": 33}, "session_id": "nIIRrACfMzB02CidgiLsv9w31q9-YDMYZThvd4rnaB4", "set": null, "tc": [false, null], "type_annot_cove": 0.23, "typed_seq": "", "untyped_seq": "", "variables": {"Policy": ""}, "variables_p": {"Policy": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}