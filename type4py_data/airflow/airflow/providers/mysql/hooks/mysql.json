{"error": null, "response": {"classes": [{"cls_lc": [[41, 0], [300, 20]], "cls_var_ln": {"conn_name_attr": [[63, 4], [63, 18]], "conn_type": [[65, 4], [65, 13]], "default_conn_name": [[64, 4], [64, 21]], "hook_name": [[66, 4], [66, 13]], "supports_autocommit": [[67, 4], [67, 23]]}, "cls_var_occur": {"conn_name_attr": [], "conn_type": [], "default_conn_name": [], "hook_name": [], "supports_autocommit": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [73, 61]], "fn_var_ln": {"connection": [[72, 8], [72, 23]], "local_infile": [[73, 8], [73, 25]], "schema": [[71, 8], [71, 19]]}, "fn_var_occur": {"connection": [["self", "connection", "kwargs", "pop", "None"]], "local_infile": [["self", "local_infile", "kwargs", "pop", "False"]], "schema": [["self", "schema", "kwargs", "pop", "None"]]}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "__init__", "args", "kwargs"]], "kwargs": [["super", "__init__", "args", "kwargs"], ["self", "schema", "kwargs", "pop", "None"], ["self", "connection", "kwargs", "pop", "None"], ["self", "local_infile", "kwargs", "pop", "False"]], "self": [["self", "schema", "kwargs", "pop", "None"], ["self", "connection", "kwargs", "pop", "None"], ["self", "local_infile", "kwargs", "pop", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MySqlHook.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"connection": "", "local_infile": "", "schema": ""}, "variables_p": {"connection": [["dict", 0.3983848748418054], ["Mapping", 0.11083947559444354], ["Callable", 0.11083947559444354], ["Tuple[dict, dict]", 0.11041652022912277], ["Iterator[dict]", 0.09951901202217545], ["OrderedDict", 0.08580762720081447], ["List[dict]", 0.08419301451719471]], "local_infile": [["List[str]", 0.2090658966742869], ["bool", 0.19403332775422913], ["dict", 0.1045160771493861], ["int", 0.09436108680014854], ["Type[str]", 0.09301500896322416], ["Dict[str, Dict[str, Any]]", 0.09259079179935147]], "schema": [["List[str]", 0.4067816677917728], ["list", 0.31807850246611014], ["Dict[str, str]", 0.18830296164622776]]}}, {"docstring": {"func": "Set *autocommit*.", "long_descr": "*mysqlclient* uses an *autocommit* method rather than an *autocommit*\nproperty, so we need to override this to support it.", "ret": null}, "fn_lc": [[75, 4], [88, 39]], "fn_var_ln": {"autocommit": [[86, 12], [86, 27]]}, "fn_var_occur": {"autocommit": [["hasattr", "conn", "__class__", "isinstance", "conn", "__class__", "autocommit", "property"], ["conn", "autocommit", "autocommit"], ["conn", "autocommit", "autocommit"]]}, "name": "set_autocommit", "params": {"autocommit": "builtins.bool", "conn": "MySQLConnectionTypes", "self": ""}, "params_descr": {"autocommit": "autocommit setting", "conn": "connection to set autocommit setting", "self": ""}, "params_occur": {"autocommit": [["hasattr", "conn", "__class__", "isinstance", "conn", "__class__", "autocommit", "property"], ["conn", "autocommit", "autocommit"], ["conn", "autocommit", "autocommit"]], "conn": [["hasattr", "conn", "__class__", "isinstance", "conn", "__class__", "autocommit", "property"], ["conn", "autocommit", "autocommit"], ["conn", "autocommit", "autocommit"]], "self": []}, "params_p": {"args": [], "autocommit": [["Callable[..., None]", 0.18542117123891172], ["bool", 0.18375348404829672], ["str", 0.10263751443136718], ["util.freefocus.sql.Group", 0.09938898219968754]], "conn": [["Callable[..., None]", 0.18542117123891172], ["bool", 0.18375348404829672], ["str", 0.10263751443136718], ["util.freefocus.sql.Group", 0.09938898219968754]], "kwargs": [], "self": []}, "q_name": "MySqlHook.set_autocommit", "ret_exprs": [], "ret_type": "None", "variables": {"autocommit": ""}, "variables_p": {"autocommit": [["Tuple[Type[str], Type[bytes]]", 0.21271911636702365], ["Type[str]", 0.21271911636702365], ["Dict[int, Tuple[Any, Any]]", 0.0745690656899331], ["list", 0.06624782445954981]]}}, {"docstring": {"func": "Whether *autocommit* is active.", "long_descr": "*mysqlclient* uses an *get_autocommit* method rather than an *autocommit*\nproperty, so we need to override this to support it.", "ret": "connection autocommit setting"}, "fn_lc": [[90, 4], [103, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_autocommit", "params": {"conn": "MySQLConnectionTypes", "self": ""}, "params_descr": {"conn": "connection to get autocommit setting from.", "self": ""}, "params_occur": {"conn": [["hasattr", "conn", "__class__", "isinstance", "conn", "__class__", "autocommit", "property"], ["conn", "autocommit"], ["conn", "get_autocommit"]], "self": []}, "params_p": {"args": [], "conn": [["bool", 0.1272357266219879], ["str", 0.07684447530849596], ["float", 0.07518757654829913]], "kwargs": [], "self": []}, "q_name": "MySqlHook.get_autocommit", "ret_exprs": ["return conn.autocommit", "return conn.get_autocommit()"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.7427373850531122], ["bool", 0.1394775252518933]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [147, 26]], "fn_var_ln": {"conn_config": [[106, 8], [106, 19]], "dejson_ssl": [[139, 16], [139, 26]], "port": [[115, 40], [115, 44]]}, "fn_var_occur": {"conn_config": [["conn_config", "conn", "login", "conn", "password", "conn", "host", "self", "schema", "conn", "schema"], ["conn_config", "conn", "port", "self", "get_iam_token", "conn"], ["conn_config", "int", "conn", "port", "conn", "port"], ["conn_config", "conn", "extra_dejson"], ["conn_config", "lower"], ["conn_config", "True"], ["conn_config", "MySQLdb", "cursors", "SSCursor"], ["conn_config", "MySQLdb", "cursors", "DictCursor"], ["conn_config", "MySQLdb", "cursors", "SSDictCursor"], ["conn_config", "dejson_ssl"], ["conn_config", "conn", "extra_dejson"], ["conn_config", "conn", "extra_dejson"]], "dejson_ssl": [["dejson_ssl", "conn", "extra_dejson"], ["isinstance", "dejson_ssl", "str"], ["dejson_ssl", "json", "loads", "dejson_ssl"], ["conn_config", "dejson_ssl"]], "port": [["conn_config", "conn", "port", "self", "get_iam_token", "conn"], ["conn_config", "int", "conn", "port", "conn", "port"]]}, "name": "_get_conn_config_mysql_client", "params": {"conn": "airflow.models.Connection", "self": ""}, "params_descr": {"conn": "", "self": ""}, "params_occur": {"conn": [["conn_config", "conn", "login", "conn", "password", "conn", "host", "self", "schema", "conn", "schema"], ["conn", "extra_dejson", "get", "False"], ["conn_config", "conn", "port", "self", "get_iam_token", "conn"], ["conn_config", "int", "conn", "port", "conn", "port"], ["conn", "extra_dejson", "get", "False"], ["conn_config", "conn", "extra_dejson"], ["conn", "extra_dejson", "get", "False"], ["conn", "extra_dejson", "lower"], ["conn", "extra_dejson", "lower"], ["conn", "extra_dejson", "lower"], ["conn", "extra_dejson", "get", "False"], ["dejson_ssl", "conn", "extra_dejson"], ["conn", "extra_dejson", "get", "False"], ["conn_config", "conn", "extra_dejson"], ["conn", "extra_dejson", "get"], ["conn_config", "conn", "extra_dejson"]], "self": [["conn_config", "conn", "login", "conn", "password", "conn", "host", "self", "schema", "conn", "schema"], ["conn_config", "conn", "port", "self", "get_iam_token", "conn"], ["self", "local_infile"]]}, "params_p": {"args": [], "conn": [["Dict[str, Any]", 0.1096925457125922], ["IO[str]", 0.1007257887555649], ["Callable", 0.08469383886197272]], "kwargs": [], "self": []}, "q_name": "MySqlHook._get_conn_config_mysql_client", "ret_exprs": ["return conn_config"], "ret_type": "builtins.dict", "ret_type_p": [["dict", 0.3007344153877655], ["str", 0.12302971198793751], ["Dict[str, Any]", 0.11268589917760059], ["Dict[str, str]", 0.10064705088635219]], "variables": {"conn_config": "", "dejson_ssl": "", "port": ""}, "variables_p": {"conn_config": [["Dict[str, Union[int, str]]", 0.2883710378702453], ["Dict[str, str]", 0.19224735858016356], ["Dict[str, Union[dict, Any]]", 0.10522179740166862], ["Dict[str, Union[Any, str]]", 0.09360396977357967]], "dejson_ssl": [["dict", 0.21207657514827757], ["str", 0.0959247886226235], ["set", 0.08375104697055559]], "port": [["int", 0.0999257477758567], ["annofabcli.common.facade.AnnotationQuery", 0.09351241783199593]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [165, 26]], "fn_var_ln": {"conn_config": [[150, 8], [150, 19]]}, "fn_var_occur": {"conn_config": [["conn_config", "conn", "login", "conn", "password", "conn", "host", "self", "schema", "conn", "schema", "int", "conn", "port", "conn", "port"], ["conn_config", "True"], ["conn_config", "key", "value"]]}, "name": "_get_conn_config_mysql_connector_python", "params": {"conn": "airflow.models.Connection", "self": ""}, "params_descr": {"conn": "", "self": ""}, "params_occur": {"conn": [["conn_config", "conn", "login", "conn", "password", "conn", "host", "self", "schema", "conn", "schema", "int", "conn", "port", "conn", "port"], ["conn", "extra_dejson", "items"]], "self": [["conn_config", "conn", "login", "conn", "password", "conn", "host", "self", "schema", "conn", "schema", "int", "conn", "port", "conn", "port"], ["self", "local_infile"]]}, "params_p": {"args": [], "conn": [["str", 0.4957189814975149], ["Optional[List[str]]", 0.138789573742453], ["int", 0.09892077613524711], ["bool", 0.08600605467228263]], "kwargs": [], "self": []}, "q_name": "MySqlHook._get_conn_config_mysql_connector_python", "ret_exprs": ["return conn_config"], "ret_type": "builtins.dict", "ret_type_p": [["Dict[str, Any]", 0.21879939006486193], ["List[str]", 0.08667950976225611], ["bool", 0.08255335485078334], ["str", 0.0801327670863592], ["dict", 0.0799217516883681]], "variables": {"conn_config": ""}, "variables_p": {"conn_config": [["Dict[str, List[Any]]", 0.12555799345875102], ["annofabcli.common.dataclasses.WaitOptions", 0.09258849318499117]]}}, {"docstring": {"func": "Connection to a MySQL database.", "long_descr": "Establishes a connection to a mysql database\nby extracting the connection configuration from the Airflow connection.\n\n.. note:: By default it connects to the database via the mysqlclient library.\n    But you can also choose the mysql-connector-python library which lets you connect through ssl\n    without any further ssl parameters required.", "ret": "a mysql connection object"}, "fn_lc": [[167, 4], [203, 63]], "fn_var_ln": {"client_name": [[182, 8], [182, 19]], "conn": [[180, 8], [180, 12]], "conn_config": [[200, 12], [200, 23]]}, "fn_var_occur": {"client_name": [["client_name", "conn", "extra_dejson", "get"]], "conn": [["conn", "self", "connection", "self", "get_connection", "getattr", "self", "self", "conn_name_attr"], ["client_name", "conn", "extra_dejson", "get"], ["conn_config", "self", "_get_conn_config_mysql_client", "conn"], ["conn_config", "self", "_get_conn_config_mysql_connector_python", "conn"]], "conn_config": [["conn_config", "self", "_get_conn_config_mysql_client", "conn"], ["MySQLdb", "connect", "conn_config"], ["conn_config", "self", "_get_conn_config_mysql_connector_python", "conn"], ["mysql", "connector", "connect", "conn_config"]]}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["conn", "self", "connection", "self", "get_connection", "getattr", "self", "self", "conn_name_attr"], ["conn_config", "self", "_get_conn_config_mysql_client", "conn"], ["conn_config", "self", "_get_conn_config_mysql_connector_python", "conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MySqlHook.get_conn", "ret_exprs": ["return MySQLdb.connect(**conn_config)", "return mysql.connector.connect(**conn_config)"], "ret_type": "MySQLConnectionTypes", "ret_type_p": [["Dict[str, Any]", 0.2763263584900309], ["ddionrails.studies.models.Study", 0.11961591529682795], ["List[str]", 0.09959419877976985]], "variables": {"client_name": "", "conn": "", "conn_config": ""}, "variables_p": {"client_name": [["str", 0.8982424800905273], ["Final", 0.10175751990947274]], "conn": [["str", 0.498722353191344], ["Dict[str, Union[Any, Any]]", 0.19044910588733213], ["viewer.models.Gallery", 0.10560257663612044], ["int", 0.10264847717273703]], "conn_config": [["str", 0.11448212793834182]]}}, {"docstring": {"func": "Load a tab-delimited file into a database table.", "long_descr": null, "ret": null}, "fn_lc": [[205, 4], [216, 20]], "fn_var_ln": {"conn": [[207, 8], [207, 12]], "cur": [[208, 8], [208, 11]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["cur", "conn", "cursor"], ["conn", "commit"], ["conn", "close"]], "cur": [["cur", "conn", "cursor"], ["cur", "execute", "tmp_file", "table"]]}, "name": "bulk_load", "params": {"self": "", "table": "builtins.str", "tmp_file": "builtins.str"}, "params_descr": {"self": "", "table": "", "tmp_file": ""}, "params_occur": {"self": [["conn", "self", "get_conn"]], "table": [["cur", "execute", "tmp_file", "table"]], "tmp_file": [["cur", "execute", "tmp_file", "table"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "table": [["str", 0.5858984312887133]], "tmp_file": [["str", 0.5858984312887133]]}, "q_name": "MySqlHook.bulk_load", "ret_exprs": [], "ret_type": "None", "variables": {"conn": "", "cur": ""}, "variables_p": {"conn": [["bool", 0.4183465212460456], ["dict", 0.20121260628452403], ["int", 0.10780052476663239], ["Dict[str, Union[Any, Any]]", 0.09755647627865566], ["Type[List[Any]]", 0.08949890232299423], ["Dict[str, str]", 0.08558496910114798]], "cur": []}}, {"docstring": {"func": "Dump a database table into a tab-delimited file.", "long_descr": null, "ret": null}, "fn_lc": [[218, 4], [229, 20]], "fn_var_ln": {"conn": [[220, 8], [220, 12]], "cur": [[221, 8], [221, 11]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["cur", "conn", "cursor"], ["conn", "commit"], ["conn", "close"]], "cur": [["cur", "conn", "cursor"], ["cur", "execute", "tmp_file", "table"]]}, "name": "bulk_dump", "params": {"self": "", "table": "builtins.str", "tmp_file": "builtins.str"}, "params_descr": {"self": "", "table": "", "tmp_file": ""}, "params_occur": {"self": [["conn", "self", "get_conn"]], "table": [["cur", "execute", "tmp_file", "table"]], "tmp_file": [["cur", "execute", "tmp_file", "table"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "table": [["str", 0.7047799969343747]], "tmp_file": [["str", 0.7047799969343747]]}, "q_name": "MySqlHook.bulk_dump", "ret_exprs": [], "ret_type": "None", "variables": {"conn": "", "cur": ""}, "variables_p": {"conn": [["bool", 0.4183465212460456], ["dict", 0.20121260628452403], ["int", 0.10780052476663239], ["Dict[str, Union[Any, Any]]", 0.09755647627865566], ["Type[List[Any]]", 0.08949890232299423], ["Dict[str, str]", 0.08558496910114798]], "cur": []}}, {"docstring": {"func": "Convert argument to a literal.", "long_descr": "The package MySQLdb converts an argument to a literal\nwhen passing those separately to execute. Hence, this method does nothing.", "ret": "The same cell"}, "fn_lc": [[232, 4], [243, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_serialize_cell", "params": {"cell": "builtins.object", "conn": "Connection | None"}, "params_descr": {"cell": "The cell to insert into the table", "conn": "The database connection"}, "params_occur": {"cell": [], "conn": []}, "params_p": {"args": [], "cell": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "conn": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "MySqlHook._serialize_cell", "ret_exprs": ["return cell"], "ret_type": "typing.Any", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Retrieve a temporary password to connect to MySQL.", "long_descr": "Uses AWSHook to retrieve a temporary password to connect to MySQL\nPort is required. If none is provided, default 3306 is used", "ret": null}, "fn_lc": [[245, 4], [262, 26]], "fn_var_ln": {"aws_conn_id": [[254, 8], [254, 19]], "aws_hook": [[255, 8], [255, 16]], "client": [[260, 8], [260, 14]], "port": [[259, 12], [259, 16]], "token": [[261, 8], [261, 13]]}, "fn_var_occur": {"aws_conn_id": [["aws_conn_id", "conn", "extra_dejson", "get"], ["aws_hook", "AwsBaseHook", "aws_conn_id", "client_type"]], "aws_hook": [["aws_hook", "AwsBaseHook", "aws_conn_id", "client_type"], ["client", "aws_hook", "get_conn"]], "client": [["client", "aws_hook", "get_conn"], ["token", "client", "generate_db_auth_token", "conn", "host", "port", "conn", "login"]], "port": [["conn", "port", "None"], ["port", "conn", "port"], ["token", "client", "generate_db_auth_token", "conn", "host", "port", "conn", "login"], ["token", "port"]], "token": [["token", "client", "generate_db_auth_token", "conn", "host", "port", "conn", "login"], ["token", "port"]]}, "name": "get_iam_token", "params": {"conn": "airflow.models.Connection", "self": ""}, "params_descr": {"conn": "", "self": ""}, "params_occur": {"conn": [["aws_conn_id", "conn", "extra_dejson", "get"], ["conn", "port", "None"], ["port", "conn", "port"], ["token", "client", "generate_db_auth_token", "conn", "host", "port", "conn", "login"]], "self": []}, "params_p": {"args": [], "conn": [["str", 0.1194536526232826], ["dict", 0.10788546841692134], ["Dict[str, Any]", 0.10657328036333467], ["Mapping[str, Any]", 0.09253020733775105]], "kwargs": [], "self": []}, "q_name": "MySqlHook.get_iam_token", "ret_exprs": ["return token, port"], "ret_type": "builtins.tuple[builtins.str, builtins.int]", "ret_type_p": [["dict", 0.20877516564199505], ["bool", 0.1171864995281704], ["int", 0.09695344819631535], ["float", 0.09695344819631535], ["List[List[str]]", 0.09535133139694953]], "variables": {"aws_conn_id": "", "aws_hook": "", "client": "", "port": "", "token": ""}, "variables_p": {"aws_conn_id": [["str", 0.6077244878441259], ["set", 0.10278989996320478], ["Type[str]", 0.10278989996320478], ["Iterator[Any]", 0.09352591117583382], ["Dict[str, str]", 0.0931698010536307]], "aws_hook": [["str", 0.8086650106561577], ["Optional[str]", 0.11101819407039627], ["List[str]", 0.08031679527344598]], "client": [["Generator[Any, None, None]", 0.20310693869098062], ["dict", 0.15372728341565936], ["str", 0.14996434273075207], ["Dict[bytes, Any]", 0.10357975795310592]], "port": [["viewer.models.Gallery", 0.10158363805588973], ["Dict[str, str]", 0.10130684354471137], ["int", 0.09780094490850927], ["str", 0.08896118271342074]], "token": [["str", 0.9016000956523438], ["Dict[str, Union[Any, Any]]", 0.098399904347656]]}}, {"docstring": {"func": "A more configurable way to load local data from a file into the database.", "long_descr": ".. warning:: According to the mysql docs using this function is a\n    `security risk <https://dev.mysql.com/doc/refman/8.0/en/load-data-local.html>`_.\n    If you want to use it anyway you can do so by setting a client-side + server-side option.\n    This depends on the mysql client library used.", "ret": null}, "fn_lc": [[264, 4], [300, 20]], "fn_var_ln": {"conn": [[286, 8], [286, 12]], "cursor": [[287, 8], [287, 14]]}, "fn_var_occur": {"conn": [["conn", "self", "get_conn"], ["cursor", "conn", "cursor"], ["conn", "commit"], ["conn", "close"]], "cursor": [["cursor", "conn", "cursor"], ["cursor", "execute", "tmp_file", "duplicate_key_handling", "table", "extra_options"], ["cursor", "close"]]}, "name": "bulk_load_custom", "params": {"duplicate_key_handling": "builtins.str", "extra_options": "builtins.str", "self": "", "table": "builtins.str", "tmp_file": "builtins.str"}, "params_descr": {"duplicate_key_handling": "Specify what should happen to duplicate data.\nYou can choose either `IGNORE` or `REPLACE`.\n\n.. seealso::\n    https://dev.mysql.com/doc/refman/8.0/en/load-data.html#load-data-duplicate-key-handling", "extra_options": "More sql options to specify exactly how to load the data.\n.. seealso:: https://dev.mysql.com/doc/refman/8.0/en/load-data.html", "self": "", "table": "The table were the file will be loaded into.", "tmp_file": "The file (name) that contains the data."}, "params_occur": {"duplicate_key_handling": [["cursor", "execute", "tmp_file", "duplicate_key_handling", "table", "extra_options"]], "extra_options": [["cursor", "execute", "tmp_file", "duplicate_key_handling", "table", "extra_options"]], "self": [["conn", "self", "get_conn"]], "table": [["cursor", "execute", "tmp_file", "duplicate_key_handling", "table", "extra_options"]], "tmp_file": [["cursor", "execute", "tmp_file", "duplicate_key_handling", "table", "extra_options"]]}, "params_p": {"args": [], "duplicate_key_handling": [["str", 0.2836220107222349], ["float", 0.12109767429792985], ["Optional[str]", 0.11542504618914722], ["bool", 0.09491203039146062], ["Optional[int]", 0.09491203039146062], ["int", 0.09491203039146062]], "extra_options": [["str", 0.2836220107222349], ["float", 0.12109767429792985], ["Optional[str]", 0.11542504618914722], ["bool", 0.09491203039146062], ["Optional[int]", 0.09491203039146062], ["int", 0.09491203039146062]], "kwargs": [], "self": [], "table": [["str", 0.2836220107222349], ["float", 0.12109767429792985], ["Optional[str]", 0.11542504618914722], ["bool", 0.09491203039146062], ["Optional[int]", 0.09491203039146062], ["int", 0.09491203039146062]], "tmp_file": [["str", 0.2836220107222349], ["float", 0.12109767429792985], ["Optional[str]", 0.11542504618914722], ["bool", 0.09491203039146062], ["Optional[int]", 0.09491203039146062], ["int", 0.09491203039146062]]}, "q_name": "MySqlHook.bulk_load_custom", "ret_exprs": [], "ret_type": "None", "variables": {"conn": "", "cursor": ""}, "variables_p": {"conn": [["bool", 0.4183465212460456], ["dict", 0.20121260628452403], ["int", 0.10780052476663239], ["Dict[str, Union[Any, Any]]", 0.09755647627865566], ["Type[List[Any]]", 0.08949890232299423], ["Dict[str, str]", 0.08558496910114798]], "cursor": [["str", 0.29871697290445326], ["Set[str]", 0.09201395881638441]]}}], "name": "MySqlHook", "q_name": "MySqlHook", "variables": {"conn_name_attr": "", "conn_type": "", "default_conn_name": "", "hook_name": "", "supports_autocommit": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "default_conn_name": [["str", 0.9999999999999999]], "hook_name": [["str", 0.7], ["Optional[str]", 0.2], ["List[str]", 0.1]], "supports_autocommit": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "json", "logging", "typing", "TYPE_CHECKING", "Any", "Union", "airflow", "exceptions", "AirflowOptionalProviderFeatureException", "airflow", "models", "Connection", "airflow", "providers", "common", "sql", "hooks", "sql", "DbApiHook", "mysql", "connector", "abstracts", "MySQLConnectionAbstract", "MySQLdb", "connections", "Connection", "MySQLdbConnection", "MySQLdb.cursors", "MySQLdb", "mysql.connector", "airflow", "providers", "amazon", "aws", "hooks", "base_aws", "AwsBaseHook"], "mod_var_ln": {"MySQLConnectionTypes": [[38, 0], [38, 20]], "logger": [[29, 0], [29, 6]]}, "mod_var_occur": {"MySQLConnectionTypes": [], "logger": [["logger", "warning"]]}, "no_types_annot": {"D": 26, "I": 0, "U": 31}, "session_id": "Xpq-lxRL8C68lefnIU0Pwn-UoDA9e5sZSuonYQFxkZI", "set": null, "tc": [false, null], "type_annot_cove": 0.46, "typed_seq": "", "untyped_seq": "", "variables": {"MySQLConnectionTypes": "", "logger": ""}, "variables_p": {"MySQLConnectionTypes": [["str", 0.19999999999999998], ["Optional[str]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Type[Callable[..., Any]]", 0.09999999999999999], ["dict", 0.09999999999999999], ["int", 0.09999999999999999], ["Optional[recidiviz.common.constants.state.state_supervision_period.StateSupervisionPeriodSupervisionType]", 0.09999999999999999], ["Type[Optional[Any]]", 0.09999999999999999]], "logger": [["logging.Logger", 0.9999999999999999]]}}}