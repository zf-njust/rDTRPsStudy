{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Change datetime to datetime2(6) when using MSSQL as backend.", "long_descr": null, "ret": null}, "fn_lc": [[41, 0], [151, 96]], "fn_var_ln": {"conn": [[43, 4], [43, 8]], "mssql_version": [[52, 8], [52, 21]], "result": [[45, 8], [45, 14]]}, "fn_var_occur": {"conn": [["conn", "op", "get_bind"], ["conn", "dialect", "name"], ["result", "conn", "execute", "text", "fetchone"], ["modify_execution_date_with_constraint", "conn", "task_instance_batch_op", "mssql", "DATETIME2", "precision", "False"], ["modify_execution_date_with_constraint", "conn", "dag_run_batch_op", "mssql", "DATETIME2", "precision", "None"], ["modify_execution_date_with_constraint", "conn", "sla_miss_batch_op", "mssql", "DATETIME2", "precision", "False"]], "mssql_version": [["mssql_version", "result"]], "result": [["result", "conn", "execute", "text", "fetchone"], ["mssql_version", "result"]]}, "name": "upgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "upgrade", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"conn": "", "mssql_version": "", "result": ""}, "variables_p": {"conn": [["str", 0.21659534289488427], ["int", 0.11886500152324155], ["List[str]", 0.10772487651424445], ["Set[str]", 0.09987716832116701], ["Dict[str, Union[Any, Any]]", 0.09086578785032244]], "mssql_version": [["Tuple[int]", 0.49999999999999994], ["int", 0.3], ["str", 0.09999999999999999]], "result": [["str", 0.36151594138168597], ["dict", 0.09416445354161206], ["List[dict]", 0.09032149171585813], ["Dict[str, List[str]]", 0.08760815749158751]]}}, {"docstring": {"func": "Change datetime2(6) back to datetime.", "long_descr": null, "ret": null}, "fn_lc": [[154, 0], [246, 96]], "fn_var_ln": {"conn": [[156, 4], [156, 8]], "mssql_version": [[165, 8], [165, 21]], "result": [[158, 8], [158, 14]]}, "fn_var_occur": {"conn": [["conn", "op", "get_bind"], ["conn", "dialect", "name"], ["result", "conn", "execute", "text", "fetchone"], ["modify_execution_date_with_constraint", "conn", "task_instance_batch_op", "mssql", "DATETIME", "False"], ["modify_execution_date_with_constraint", "conn", "dag_run_batch_op", "mssql", "DATETIME", "None"], ["modify_execution_date_with_constraint", "conn", "sla_miss_batch_op", "mssql", "DATETIME", "False"]], "mssql_version": [["mssql_version", "result"]], "result": [["result", "conn", "execute", "text", "fetchone"], ["mssql_version", "result"]]}, "name": "downgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "downgrade", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"conn": "", "mssql_version": "", "result": ""}, "variables_p": {"conn": [["str", 0.21659534289488427], ["int", 0.11886500152324155], ["List[str]", 0.10772487651424445], ["Set[str]", 0.09987716832116701], ["Dict[str, Union[Any, Any]]", 0.09086578785032244]], "mssql_version": [["Tuple[int]", 0.49999999999999994], ["int", 0.3], ["str", 0.09999999999999999]], "result": [["str", 0.36151594138168597], ["dict", 0.09416445354161206], ["List[dict]", 0.09032149171585813], ["Dict[str, List[str]]", 0.08760815749158751]]}}, {"docstring": {"func": "Return primary and unique constraint along with column name.", "long_descr": "This function return primary and unique constraint\nalong with column name. some tables like task_instance\nis missing primary key constraint name and the name is\nauto-generated by sql server. so this function helps to\nretrieve any primary or unique constraint name.", "ret": "a dictionary of ((constraint name, constraint type), column name) of table"}, "fn_lc": [[249, 0], [274, 26]], "fn_var_ln": {"constraint_dict": [[271, 4], [271, 19]], "query": [[262, 4], [262, 9]], "result": [[270, 4], [270, 10]]}, "fn_var_occur": {"constraint_dict": [["constraint_dict", "defaultdict", "list"], ["constraint_dict", "constraint", "constraint_type", "append", "column"]], "query": [["query", "text", "table_name"], ["result", "conn", "execute", "query", "fetchall"]], "result": [["result", "conn", "execute", "query", "fetchall"]]}, "name": "get_table_constraints", "params": {"conn": "", "table_name": ""}, "params_descr": {"conn": "sql connection object", "table_name": "table name"}, "params_occur": {"conn": [["result", "conn", "execute", "query", "fetchall"]], "table_name": [["query", "text", "table_name"]]}, "params_p": {"args": [], "conn": [["str", 0.5005647742811181], ["List[int]", 0.15497177834804382], ["bool", 0.08495711776292184]], "kwargs": [], "table_name": [["str", 0.8997071337200433]]}, "q_name": "get_table_constraints", "ret_exprs": ["return constraint_dict"], "ret_type": "builtins.dict[builtins.tuple[builtins.str, builtins.str], builtins.list[builtins.str]]", "ret_type_p": [["dict", 0.3386653618267427], ["str", 0.17807668937734084], ["int", 0.14395752462269515]], "variables": {"constraint_dict": "", "query": "", "result": ""}, "variables_p": {"constraint_dict": [["dict", 0.5984495413803325], ["Dict[str, Any]", 0.20585747357267262], ["Dict[str, str]", 0.10182275885917737], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any]]", 0.09387022618781753]], "query": [["Pattern[str]", 0.18535675679848232], ["dict", 0.11984368784168571], ["Set[str]", 0.1096246854010428], ["Tuple[Literal, Literal, Literal]", 0.09997896831652231], ["str", 0.09849507945739398], ["List[str]", 0.09790909416975893], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08951393178210633]], "result": [["dict", 0.20694081604267056], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10297970619916878], ["List[int]", 0.09700665102243411], ["Type[Dict[Any, Any]]", 0.09171919562310293]]}}, {"docstring": {"func": "Reorder the columns for creating constraint.", "long_descr": "Preserve primary key ordering\n``['task_id', 'dag_id', 'execution_date']``", "ret": "ordered column"}, "fn_lc": [[277, 0], [294, 26]], "fn_var_ln": {"ordered_columns": [[285, 4], [285, 19]]}, "fn_var_occur": {"ordered_columns": [["ordered_columns", "append", "column"], ["ordered_columns", "append", "column"]]}, "name": "reorder_columns", "params": {"columns": ""}, "params_descr": {"columns": "columns retrieved from DB related to constraint"}, "params_occur": {"columns": [["column", "columns"]]}, "params_p": {"args": [], "columns": [["int", 0.8117545306967576], ["str", 0.10733624006293395]], "kwargs": []}, "q_name": "reorder_columns", "ret_exprs": ["return ordered_columns"], "ret_type": "", "ret_type_p": [["List[int]", 0.21997959056528843], ["int", 0.1597097521307738], ["List[dict]", 0.13517571722065888]], "variables": {"ordered_columns": ""}, "variables_p": {"ordered_columns": [["list", 1.0000000000000002]]}}, {"docstring": {"func": "Drop a primary key or unique constraint.", "long_descr": null, "ret": null}, "fn_lc": [[297, 0], [308, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "drop_constraint", "params": {"constraint_dict": "", "operator": ""}, "params_descr": {"constraint_dict": "a dictionary of ((constraint name, constraint type), column name) of table", "operator": "batch_alter_table for the table"}, "params_occur": {"constraint_dict": [["constraint_dict", "items"]], "operator": [["operator", "drop_constraint", "constraint", "type_"], ["operator", "drop_constraint", "constraint", "type_"]]}, "params_p": {"args": [], "constraint_dict": [["Dict[str, Dict[str, Any]]", 0.4038856246884911], ["dict", 0.25782934077165337], ["Dict[str, Any]", 0.19189343401604056], ["Dict[str, int]", 0.07436723995234591], ["Dict[str, float]", 0.07202436057146905]], "kwargs": [], "operator": [["abilian.core.sqlalchemy.SQLAlchemy", 0.09480340390835182], ["Dict[str, Any]", 0.0904438504906149]]}, "q_name": "drop_constraint", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create a primary key or unique constraint.", "long_descr": null, "ret": null}, "fn_lc": [[311, 0], [324, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_constraint", "params": {"constraint_dict": "", "operator": ""}, "params_descr": {"constraint_dict": "a dictionary of ((constraint name, constraint type), column name) of table", "operator": "batch_alter_table for the table"}, "params_occur": {"constraint_dict": [["constraint_dict", "items"]], "operator": [["operator", "create_primary_key", "constraint_name", "constraint", "columns", "reorder_columns", "columns"], ["operator", "create_unique_constraint", "constraint_name", "constraint", "columns", "reorder_columns", "columns"]]}, "params_p": {"args": [], "constraint_dict": [["Dict[str, Dict[str, Any]]", 0.3709025588697335], ["dict", 0.23748120493949226], ["Dict[int, Dict[str, Any]]", 0.102103851583622], ["Dict[str, Any]", 0.07581065340366111], ["Dict[str, int]", 0.06936855850975057], ["Dict[str, str]", 0.06660940903304365]], "kwargs": [], "operator": [["str", 0.2924012023863251], ["sqlalchemy.orm.Session", 0.1852282858721247], ["Optional[str]", 0.16089656338742944], ["sqlalchemy.orm.session.Session", 0.09146936167562188], ["sqlalchemy.orm.unitofwork.UOWTransaction", 0.09146936167562188]]}, "q_name": "create_constraint", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Change type of column execution_date.", "long_descr": "Helper function changes type of column execution_date by\ndropping and recreating any primary/unique constraint associated with\nthe column", "ret": "a dictionary of ((constraint name, constraint type), column name) of table"}, "fn_lc": [[327, 0], [347, 54]], "fn_var_ln": {"constraint_dict": [[340, 4], [340, 19]]}, "fn_var_occur": {"constraint_dict": [["constraint_dict", "get_table_constraints", "conn", "table_name"], ["drop_constraint", "batch_operator", "constraint_dict"], ["create_constraint", "batch_operator", "constraint_dict"]]}, "name": "modify_execution_date_with_constraint", "params": {"batch_operator": "", "conn": "", "nullable": "", "table_name": "", "type_": ""}, "params_descr": {"batch_operator": "batch_alter_table for the table", "conn": "sql connection object", "nullable": "nullable (boolean)", "table_name": "table name", "type_": "DB column type"}, "params_occur": {"batch_operator": [["drop_constraint", "batch_operator", "constraint_dict"], ["batch_operator", "alter_column", "column_name", "type_", "type_", "nullable", "nullable"], ["create_constraint", "batch_operator", "constraint_dict"]], "conn": [["constraint_dict", "get_table_constraints", "conn", "table_name"]], "nullable": [["batch_operator", "alter_column", "column_name", "type_", "type_", "nullable", "nullable"]], "table_name": [["constraint_dict", "get_table_constraints", "conn", "table_name"]], "type_": [["batch_operator", "alter_column", "column_name", "type_", "type_", "nullable", "nullable"]]}, "params_p": {"args": [], "batch_operator": [["str", 0.290133029336442], ["Iterable[Union[Any, int]]", 0.08891751949261659], ["bool", 0.07475714017970365]], "conn": [["str", 0.19303263025226403], ["dict", 0.09934652711491837]], "kwargs": [], "nullable": [["str", 0.23983577377876014], ["type", 0.097788725145727], ["Type[T]", 0.09721730191228856], ["bool", 0.09667489804534075], ["Tuple[type]", 0.09391639507469021], ["Dict[str, Any]", 0.09254053290003374], ["Tuple[str, str]", 0.09159529822154369]], "table_name": [["str", 0.19303263025226403], ["dict", 0.09934652711491837]], "type_": [["str", 0.23983577377876014], ["type", 0.097788725145727], ["Type[T]", 0.09721730191228856], ["bool", 0.09667489804534075], ["Tuple[type]", 0.09391639507469021], ["Dict[str, Any]", 0.09254053290003374], ["Tuple[str, str]", 0.09159529822154369]]}, "q_name": "modify_execution_date_with_constraint", "ret_exprs": [], "ret_type": "None", "variables": {"constraint_dict": ""}, "variables_p": {"constraint_dict": [["Dict[str, Any]", 0.5262497861990157], ["Dict[str, str]", 0.14738996249123618], ["dict", 0.12289167143888872], ["Optional[Dict[str, Any]]", 0.07188298815126491]]}}], "imports": ["__future__", "annotations", "collections", "defaultdict", "alembic", "op", "sqlalchemy", "text", "sqlalchemy", "dialects", "mssql"], "mod_var_ln": {"airflow_version": [[38, 0], [38, 15]], "branch_labels": [[36, 0], [36, 13]], "depends_on": [[37, 0], [37, 10]], "down_revision": [[35, 0], [35, 13]], "revision": [[34, 0], [34, 8]]}, "mod_var_occur": {"airflow_version": [], "branch_labels": [], "depends_on": [], "down_revision": [], "revision": []}, "no_types_annot": {"D": 2, "I": 0, "U": 33}, "session_id": "m2Tcb3Vj8VwPlIUSlJNd0eJZj11r3t-4pfUeEcwyhBk", "set": null, "tc": [false, null], "type_annot_cove": 0.06, "typed_seq": "", "untyped_seq": "", "variables": {"airflow_version": "", "branch_labels": "", "depends_on": "", "down_revision": "", "revision": ""}, "variables_p": {"airflow_version": [["str", 0.6], ["List[int]", 0.1], ["bool", 0.1], ["Union[int, str]", 0.1], ["int", 0.1]], "branch_labels": [["str", 0.5], ["List[str]", 0.4], ["Tuple[Any, Any]", 0.1]], "depends_on": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "down_revision": [["Tuple[str, str]", 0.5], ["str", 0.4], ["Optional[str]", 0.1]], "revision": [["str", 0.9999999999999999]]}}}