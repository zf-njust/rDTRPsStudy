{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 0], [55, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_new_xcom_columns", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_get_new_xcom_columns", "ret_exprs": ["return [ Column(\"dag_run_id\", Integer(), nullable=False), Column(\"task_id\", StringID(), nullable=False), Column(\"key\", StringID(length=512), nullable=False), Column(\"value\", LargeBinary), Column(\"timestamp\", TIMESTAMP, nullable=False), Column(\"dag_id\", StringID(), nullable=False), Column(\"run_id\", StringID(), nullable=False), Column(\"map_index\", Integer, nullable=False, server_default=\"-1\"),]"], "ret_type": "typing.Sequence[sqlalchemy.Column]", "ret_type_p": [["bool", 0.3322551844073599], ["str", 0.1418945464487639], ["cmk.utils.type_defs.UserId", 0.08389309469657157]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 0], [66, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_old_xcom_columns", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_get_old_xcom_columns", "ret_exprs": ["return [ Column(\"key\", StringID(length=512), nullable=False, primary_key=True), Column(\"value\", LargeBinary), Column(\"timestamp\", TIMESTAMP, nullable=False), Column(\"task_id\", StringID(length=250), nullable=False, primary_key=True), Column(\"dag_id\", StringID(length=250), nullable=False, primary_key=True), Column(\"execution_date\", TIMESTAMP, nullable=False, primary_key=True),]"], "ret_type": "typing.Sequence[sqlalchemy.Column]", "ret_type_p": [["T", 0.11879329892575577], ["cmk.utils.type_defs.UserId", 0.11760110906365648], ["bool", 0.11502379617475895], ["Optional[cmk.utils.type_defs.SectionName]", 0.09941827307774567], ["List[str]", 0.09002156584895778]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 0], [77, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_dagrun_table", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_get_dagrun_table", "ret_exprs": ["return Table( \"dag_run\", metadata, Column(\"id\", Integer, primary_key=True), Column(\"dag_id\", StringID(), nullable=False), Column(\"run_id\", StringID(), nullable=False), Column(\"execution_date\", TIMESTAMP, nullable=False),)"], "ret_type": "sqlalchemy.Table", "ret_type_p": [["str", 0.5835525336699428], ["Tuple[str]", 0.08460081957129406]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Switch XCom table to use run_id.", "long_descr": "For performance reasons, this is done by creating a new table with needed\ndata pre-populated, adding back constraints we need, and renaming it to\nreplace the existing XCom table.", "ret": null}, "fn_lc": [[80, 0], [132, 9]], "fn_var_ln": {"conn": [[87, 4], [87, 8]], "dagrun": [[93, 4], [93, 10]], "is_sqlite": [[88, 4], [88, 13]], "query": [[94, 4], [94, 9]], "xcom": [[92, 4], [92, 8]]}, "fn_var_occur": {"conn": [["conn", "op", "get_bind"], ["is_sqlite", "conn", "dialect", "name"]], "dagrun": [["dagrun", "_get_dagrun_table"], ["query", "select", "dagrun", "c", "id", "xcom", "c", "task_id", "xcom", "c", "key", "xcom", "c", "value", "xcom", "c", "timestamp", "xcom", "c", "dag_id", "dagrun", "c", "run_id", "literal_column", "select_from", "xcom", "join", "right", "dagrun", "onclause", "and_", "xcom", "c", "dag_id", "dagrun", "c", "dag_id", "xcom", "c", "execution_date", "dagrun", "c", "execution_date"]], "is_sqlite": [["is_sqlite", "conn", "dialect", "name"]], "query": [["query", "select", "dagrun", "c", "id", "xcom", "c", "task_id", "xcom", "c", "key", "xcom", "c", "value", "xcom", "c", "timestamp", "xcom", "c", "dag_id", "dagrun", "c", "run_id", "literal_column", "select_from", "xcom", "join", "right", "dagrun", "onclause", "and_", "xcom", "c", "dag_id", "dagrun", "c", "dag_id", "xcom", "c", "execution_date", "dagrun", "c", "execution_date"], ["op", "execute", "query", "selectable", "compile", "op", "get_bind"]], "xcom": [["xcom", "Table", "metadata", "_get_old_xcom_columns"], ["query", "select", "dagrun", "c", "id", "xcom", "c", "task_id", "xcom", "c", "key", "xcom", "c", "value", "xcom", "c", "timestamp", "xcom", "c", "dag_id", "dagrun", "c", "run_id", "literal_column", "select_from", "xcom", "join", "right", "dagrun", "onclause", "and_", "xcom", "c", "dag_id", "dagrun", "c", "dag_id", "xcom", "c", "execution_date", "dagrun", "c", "execution_date"]]}, "name": "upgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "upgrade", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "dagrun": "", "is_sqlite": "", "query": "", "xcom": ""}, "variables_p": {"conn": [["Union[Literal, Literal]", 0.34456758306342655], ["Dict[str, Any]", 0.12958506498560612], ["str", 0.11719307881710629], ["bool", 0.11719307881710629], ["dict", 0.08706626716992322]], "dagrun": [["Union[Literal, Literal]", 0.420641359041147], ["Dict[str, Union[dict, Any]]", 0.2175960581024176], ["set", 0.10344124716066765], ["int", 0.0923424599723695], ["float", 0.0880562953051573], ["List[int]", 0.07792258041824096]], "is_sqlite": [["int", 0.3945580984703195], ["bool", 0.1072487421038728], ["List[int]", 0.101691811943054]], "query": [["list", 0.1192762497258469], ["List[int]", 0.10224888331954074], ["float", 0.09992336671740572], ["Dict[str, Dict[str, str]]", 0.09401888526170848], ["qcodes.utils.validators.Lists", 0.08965124989685254]], "xcom": [["float", 0.20806864992214436], ["dict", 0.08494546813488711], ["set", 0.07794277490811007], ["Tuple[int, int, int]", 0.07574874797471079]]}}, {"docstring": {"func": "Switch XCom table back to use execution_date.", "long_descr": "Basically an inverse operation.", "ret": null}, "fn_lc": [[135, 0], [179, 9]], "fn_var_ln": {"_": [[173, 12], [173, 13]], "conn": [[140, 4], [140, 8]], "constraints": [[172, 8], [172, 19]], "dagrun": [[148, 4], [148, 10]], "pk": [[173, 8], [173, 10]], "query": [[149, 4], [149, 9]], "xcom": [[143, 4], [143, 8]]}, "fn_var_occur": {"_": [["pk", "_", "constraints", "popitem"]], "conn": [["conn", "op", "get_bind"], ["conn", "dialect", "name"], ["constraints", "get_mssql_table_constraints", "conn"]], "constraints": [["constraints", "get_mssql_table_constraints", "conn"], ["pk", "_", "constraints", "popitem"]], "dagrun": [["dagrun", "_get_dagrun_table"], ["query", "select", "xcom", "c", "key", "xcom", "c", "value", "xcom", "c", "timestamp", "xcom", "c", "task_id", "xcom", "c", "dag_id", "dagrun", "c", "execution_date", "select_from", "xcom", "join", "right", "dagrun", "onclause", "and_", "xcom", "c", "dag_id", "dagrun", "c", "dag_id", "xcom", "c", "run_id", "dagrun", "c", "run_id"]], "pk": [["pk", "_", "constraints", "popitem"], ["op", "drop_constraint", "pk", "type_"]], "query": [["query", "select", "xcom", "c", "key", "xcom", "c", "value", "xcom", "c", "timestamp", "xcom", "c", "task_id", "xcom", "c", "dag_id", "dagrun", "c", "execution_date", "select_from", "xcom", "join", "right", "dagrun", "onclause", "and_", "xcom", "c", "dag_id", "dagrun", "c", "dag_id", "xcom", "c", "run_id", "dagrun", "c", "run_id"], ["op", "execute", "query", "selectable", "compile", "op", "get_bind"]], "xcom": [["xcom", "Table", "metadata", "_get_new_xcom_columns"], ["op", "execute", "xcom", "delete", "where", "xcom", "c", "map_index"], ["query", "select", "xcom", "c", "key", "xcom", "c", "value", "xcom", "c", "timestamp", "xcom", "c", "task_id", "xcom", "c", "dag_id", "dagrun", "c", "execution_date", "select_from", "xcom", "join", "right", "dagrun", "onclause", "and_", "xcom", "c", "dag_id", "dagrun", "c", "dag_id", "xcom", "c", "run_id", "dagrun", "c", "run_id"]]}, "name": "downgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "downgrade", "ret_exprs": [], "ret_type": "", "variables": {"_": "", "conn": "", "constraints": "", "dagrun": "", "pk": "", "query": "", "xcom": ""}, "variables_p": {"_": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["List[str]", 0.09999999999999999], ["Union[bytes, int]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Tuple[int, int]", 0.09999999999999999]], "conn": [["str", 0.2181534400011619], ["dict", 0.2148734817323346], ["List[str]", 0.19587735508521575], ["int", 0.08913281499665908], ["Dict[str, Union[Any, Any]]", 0.08283239724190364]], "constraints": [["str", 0.6859449208071353], ["Dict[str, str]", 0.11886822223542114], ["int", 0.09899629056854377], ["Tuple[Any, Any]", 0.09619056638889996]], "dagrun": [["list", 0.318819985209282], ["List[str]", 0.19197824164434557], ["Dict[str, Union[dict, Any]]", 0.19196682789406075], ["str", 0.1066386227694005], ["Tuple[Literal, Literal]", 0.09536359568092108], ["Optional[float]", 0.09523272680199016]], "pk": [["str", 0.3123830079673103], ["Coroutine[Any, Any, Any]", 0.10634869679618068], ["int", 0.09593752664800802]], "query": [["List[str]", 0.09433895244729067], ["str", 0.08576150361692612], ["float", 0.0843879558602761]], "xcom": [["Tuple[int, int, int]", 0.11798323883771225], ["float", 0.09685421448474395], ["int", 0.0966212456193118]]}}], "imports": ["__future__", "annotations", "typing", "Sequence", "alembic", "op", "sqlalchemy", "Column", "Integer", "LargeBinary", "MetaData", "Table", "and_", "literal_column", "select", "airflow", "migrations", "db_types", "TIMESTAMP", "StringID", "airflow", "migrations", "utils", "get_mssql_table_constraints"], "mod_var_ln": {"airflow_version": [[39, 0], [39, 15]], "branch_labels": [[37, 0], [37, 13]], "depends_on": [[38, 0], [38, 10]], "down_revision": [[36, 0], [36, 13]], "metadata": [[42, 0], [42, 8]], "revision": [[35, 0], [35, 8]]}, "mod_var_occur": {"airflow_version": [], "branch_labels": [], "depends_on": [], "down_revision": [], "metadata": [["Table", "metadata", "Column", "Integer", "primary_key", "True", "Column", "StringID", "nullable", "False", "Column", "StringID", "nullable", "False", "Column", "TIMESTAMP", "nullable", "False"], ["xcom", "Table", "metadata", "_get_old_xcom_columns"], ["xcom", "Table", "metadata", "_get_new_xcom_columns"]], "revision": []}, "no_types_annot": {"D": 3, "I": 0, "U": 20}, "session_id": "dDyAfysy5qg2tOaJuWI5Noyj6fGgVJDz0NRtnG_YeXs", "set": null, "tc": [false, null], "type_annot_cove": 0.13, "typed_seq": "", "untyped_seq": "", "variables": {"airflow_version": "", "branch_labels": "", "depends_on": "", "down_revision": "", "metadata": "", "revision": ""}, "variables_p": {"airflow_version": [["str", 0.6], ["List[int]", 0.1], ["bool", 0.1], ["Union[int, str]", 0.1], ["int", 0.1]], "branch_labels": [["str", 0.5], ["List[str]", 0.4], ["Tuple[Any, Any]", 0.1]], "depends_on": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "down_revision": [["Tuple[str, str]", 0.5], ["str", 0.4], ["Optional[str]", 0.1]], "metadata": [["dict", 0.14292689834756817], ["Dict[str, Any]", 0.10917758252883568], ["list", 0.10078753341444074], ["Optional[\"Lecture\"]", 0.08170085720899]], "revision": [["str", 0.9999999999999999]]}}}