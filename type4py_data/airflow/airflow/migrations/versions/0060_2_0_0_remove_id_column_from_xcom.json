{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "This function return primary and unique constraint", "long_descr": "along with column name. Some tables like `task_instance`\nis missing the primary key constraint name and the name is\nauto-generated by the SQL server. so this function helps to\nretrieve any primary or unique constraint name.", "ret": "a dictionary of ((constraint name, constraint type), column name) of table"}, "fn_lc": [[40, 0], [64, 26]], "fn_var_ln": {"constraint_dict": [[61, 4], [61, 19]], "query": [[52, 4], [52, 9]], "result": [[60, 4], [60, 10]]}, "fn_var_occur": {"constraint_dict": [["constraint_dict", "defaultdict", "list"], ["constraint_dict", "constraint", "constraint_type", "append", "column"]], "query": [["query", "text", "table_name"], ["result", "conn", "execute", "query", "fetchall"]], "result": [["result", "conn", "execute", "query", "fetchall"]]}, "name": "get_table_constraints", "params": {"conn": "", "table_name": ""}, "params_descr": {"conn": "sql connection object", "table_name": "table name"}, "params_occur": {"conn": [["result", "conn", "execute", "query", "fetchall"]], "table_name": [["query", "text", "table_name"]]}, "params_p": {"args": [], "conn": [["str", 0.5005647742811181], ["List[int]", 0.15497177834804382], ["bool", 0.08495711776292184]], "kwargs": [], "table_name": [["str", 0.8997071337200433]]}, "q_name": "get_table_constraints", "ret_exprs": ["return constraint_dict"], "ret_type": "builtins.dict[builtins.tuple[builtins.str, builtins.str], builtins.list[builtins.str]]", "ret_type_p": [["dict", 0.3386653618267427], ["str", 0.17807668937734084], ["int", 0.14395752462269515]], "variables": {"constraint_dict": "", "query": "", "result": ""}, "variables_p": {"constraint_dict": [["dict", 0.5984495413803325], ["Dict[str, Any]", 0.20585747357267262], ["Dict[str, str]", 0.10182275885917737], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any]]", 0.09387022618781753]], "query": [["Pattern[str]", 0.18535675679848232], ["dict", 0.11984368784168571], ["Set[str]", 0.1096246854010428], ["Tuple[Literal, Literal, Literal]", 0.09997896831652231], ["str", 0.09849507945739398], ["List[str]", 0.09790909416975893], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08951393178210633]], "result": [["dict", 0.20694081604267056], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10297970619916878], ["List[int]", 0.09700665102243411], ["Type[Dict[Any, Any]]", 0.09171919562310293]]}}, {"docstring": {"func": "Drop a primary key or unique constraint", "long_descr": null, "ret": null}, "fn_lc": [[67, 0], [79, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "drop_column_constraints", "params": {"column_name": "", "constraint_dict": "", "operator": ""}, "params_descr": {"column_name": "", "constraint_dict": "a dictionary of ((constraint name, constraint type), column name) of table", "operator": "batch_alter_table for the table"}, "params_occur": {"column_name": [["column_name", "columns"]], "constraint_dict": [["constraint_dict", "items"]], "operator": [["operator", "drop_constraint", "constraint", "type_"], ["operator", "drop_constraint", "constraint", "type_"]]}, "params_p": {"args": [], "column_name": [["str", 0.7004429801896823], ["int", 0.2407786688817324]], "constraint_dict": [["dict", 0.4117163498072252], ["Dict[str, str]", 0.17786456082340757], ["Dict[str, Any]", 0.10947735747548645], ["Dict[str, int]", 0.10675470259072682], ["Dict[str, Dict[str, str]]", 0.10301339971747026]], "kwargs": [], "operator": [["Optional[\"TypeResourceIdentifier\"]", 0.429785566490586], ["Type[Any]", 0.06552898811757027]]}, "q_name": "drop_column_constraints", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create a primary key or unique constraint", "long_descr": null, "ret": null}, "fn_lc": [[82, 0], [94, 97]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_constraints", "params": {"column_name": "", "constraint_dict": "", "operator": ""}, "params_descr": {"column_name": "", "constraint_dict": "a dictionary of ((constraint name, constraint type), column name) of table", "operator": "batch_alter_table for the table"}, "params_occur": {"column_name": [["column_name", "columns"]], "constraint_dict": [["constraint_dict", "items"]], "operator": [["operator", "create_primary_key", "constraint_name", "constraint", "columns", "columns"], ["operator", "create_unique_constraint", "constraint_name", "constraint", "columns", "columns"]]}, "params_p": {"args": [], "column_name": [["str", 0.73640026465112], ["int", 0.1874319539206741]], "constraint_dict": [["Mapping[str, Dict[str, Any]]", 0.178772923512298], ["dict", 0.17620173036009348], ["Dict[str, str]", 0.15893441356925156], ["Dict[str, int]", 0.12201215813359706], ["Dict[str, Dict[str, str]]", 0.09939662812471292], ["Iterable[str]", 0.08829559650361789], ["Dict[str, Any]", 0.07939679335185786]], "kwargs": [], "operator": [["str", 0.3999627141474642], ["Optional[str]", 0.12509009461454323], ["List[int]", 0.0943840796021467], ["List[str]", 0.09158884433941379]]}, "q_name": "create_constraints", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Apply Remove id column from xcom", "long_descr": null, "ret": null}, "fn_lc": [[97, 0], [112, 97]], "fn_var_ln": {"conn": [[99, 4], [99, 8]], "constraint_dict": [[106, 16], [106, 31]], "inspector": [[100, 4], [100, 13]], "xcom_columns": [[103, 8], [103, 20]]}, "fn_var_occur": {"conn": [["conn", "op", "get_bind"], ["inspector", "inspect", "conn"], ["conn", "dialect", "name"], ["constraint_dict", "get_table_constraints", "conn"], ["conn", "dialect", "name"]], "constraint_dict": [["constraint_dict", "get_table_constraints", "conn"], ["drop_column_constraints", "operator", "bop", "column_name", "constraint_dict", "constraint_dict"]], "inspector": [["inspector", "inspect", "conn"], ["xcom_columns", "col", "get", "col", "inspector", "get_columns"]], "xcom_columns": [["xcom_columns", "col", "get", "col", "inspector", "get_columns"]]}, "name": "upgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "upgrade", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "constraint_dict": "", "inspector": "", "xcom_columns": ""}, "variables_p": {"conn": [["list", 0.09157396184798233], ["List[str]", 0.08777568494634327]], "constraint_dict": [["Optional[Dict[str, Any]]", 0.4425503187319373], ["Dict[str, Any]", 0.15537937164673865], ["dict", 0.13611817542726712], ["sqlalchemy.orm.Session", 0.10434766362638032]], "inspector": [["Dict[str, Any]", 0.117506962242403], ["int", 0.0980113918072019]], "xcom_columns": [["Dict[str, str]", 0.20769349062662745], ["Dict[str, Union[float, str]]", 0.1803047217689055], ["list", 0.12895123886046042], ["int", 0.1192346214758822], ["Any[Any]", 0.09508589608465047], ["str", 0.09087419493182095], ["Dict[int, int]", 0.08799857283871874]]}}, {"docstring": {"func": "Unapply Remove id column from xcom", "long_descr": null, "ret": null}, "fn_lc": [[115, 0], [123, 98]], "fn_var_ln": {"conn": [[117, 4], [117, 8]]}, "fn_var_occur": {"conn": [["conn", "op", "get_bind"], ["conn", "dialect", "name"]]}, "name": "downgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "downgrade", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["dict", 0.10637133325608646], ["str", 0.09814283100842956], ["bool", 0.09814283100842956], ["Dict[str, Any]", 0.09308429042943982], ["Callable[[], Any]", 0.09140740045235785]]}}], "imports": ["__future__", "annotations", "collections", "defaultdict", "alembic", "op", "sqlalchemy", "Column", "Integer", "inspect", "text"], "mod_var_ln": {"airflow_version": [[37, 0], [37, 15]], "branch_labels": [[35, 0], [35, 13]], "depends_on": [[36, 0], [36, 10]], "down_revision": [[34, 0], [34, 13]], "revision": [[33, 0], [33, 8]]}, "mod_var_occur": {"airflow_version": [], "branch_labels": [], "depends_on": [], "down_revision": [], "revision": []}, "no_types_annot": {"D": 1, "I": 0, "U": 25}, "session_id": "fbZR9v8q_-6rnfs_AyuWKbiNsbRJwHYFFCXXxQlUZaU", "set": null, "tc": [false, null], "type_annot_cove": 0.04, "typed_seq": "", "untyped_seq": "", "variables": {"airflow_version": "", "branch_labels": "", "depends_on": "", "down_revision": "", "revision": ""}, "variables_p": {"airflow_version": [["str", 0.6], ["List[int]", 0.1], ["bool", 0.1], ["Union[int, str]", 0.1], ["int", 0.1]], "branch_labels": [["str", 0.5], ["List[str]", 0.4], ["Tuple[Any, Any]", 0.1]], "depends_on": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "down_revision": [["Tuple[str, str]", 0.5], ["str", 0.4], ["Optional[str]", 0.1]], "revision": [["str", 0.9999999999999999]]}}}