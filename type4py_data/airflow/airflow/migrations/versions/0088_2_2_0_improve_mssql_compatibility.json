{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "This function checks if the MS SQL table is empty", "long_descr": null, "ret": "Booelan indicating if the table is present"}, "fn_lc": [[44, 0], [52, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_table_empty", "params": {"conn": "", "table_name": ""}, "params_descr": {"conn": "SQL connection object", "table_name": "table name"}, "params_occur": {"conn": [["conn", "execute", "text", "table_name", "first", "None"]], "table_name": [["conn", "execute", "text", "table_name", "first", "None"]]}, "params_p": {"args": [], "conn": [["str", 0.5059569463586714], ["sqlalchemy.engine.reflection.Inspector", 0.19005098261566125], ["Optional[str]", 0.09502549130783063]], "kwargs": [], "table_name": [["str", 0.5059569463586714], ["sqlalchemy.engine.reflection.Inspector", 0.19005098261566125], ["Optional[str]", 0.09502549130783063]]}, "q_name": "is_table_empty", "ret_exprs": ["return conn.execute(text(f\"select TOP 1 * from {table_name}\")).first() is None"], "ret_type": "", "ret_type_p": [["bool", 0.20784694743957854], ["float", 0.09414413515770251], ["str", 0.09061633834105903]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "This function return primary and unique constraint", "long_descr": "along with column name. some tables like task_instance\nis missing primary key constraint name and the name is\nauto-generated by sql server. so this function helps to\nretrieve any primary or unique constraint name.", "ret": "a dictionary of ((constraint name, constraint type), column name) of table"}, "fn_lc": [[55, 0], [79, 26]], "fn_var_ln": {"constraint_dict": [[76, 4], [76, 19]], "query": [[67, 4], [67, 9]], "result": [[75, 4], [75, 10]]}, "fn_var_occur": {"constraint_dict": [["constraint_dict", "defaultdict", "list"], ["constraint_dict", "constraint", "constraint_type", "append", "column"]], "query": [["query", "text", "table_name"], ["result", "conn", "execute", "query", "fetchall"]], "result": [["result", "conn", "execute", "query", "fetchall"]]}, "name": "get_table_constraints", "params": {"conn": "", "table_name": ""}, "params_descr": {"conn": "sql connection object", "table_name": "table name"}, "params_occur": {"conn": [["result", "conn", "execute", "query", "fetchall"]], "table_name": [["query", "text", "table_name"]]}, "params_p": {"args": [], "conn": [["str", 0.5005647742811181], ["List[int]", 0.15497177834804382], ["bool", 0.08495711776292184]], "kwargs": [], "table_name": [["str", 0.8997071337200433]]}, "q_name": "get_table_constraints", "ret_exprs": ["return constraint_dict"], "ret_type": "builtins.dict[builtins.tuple[builtins.str, builtins.str], builtins.list[builtins.str]]", "ret_type_p": [["dict", 0.3386653618267427], ["str", 0.17807668937734084], ["int", 0.14395752462269515]], "variables": {"constraint_dict": "", "query": "", "result": ""}, "variables_p": {"constraint_dict": [["dict", 0.5984495413803325], ["Dict[str, Any]", 0.20585747357267262], ["Dict[str, str]", 0.10182275885917737], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any]]", 0.09387022618781753]], "query": [["Pattern[str]", 0.18535675679848232], ["dict", 0.11984368784168571], ["Set[str]", 0.1096246854010428], ["Tuple[Literal, Literal, Literal]", 0.09997896831652231], ["str", 0.09849507945739398], ["List[str]", 0.09790909416975893], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08951393178210633]], "result": [["dict", 0.20694081604267056], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10297970619916878], ["List[int]", 0.09700665102243411], ["Type[Dict[Any, Any]]", 0.09171919562310293]]}}, {"docstring": {"func": "Drop a primary key or unique constraint", "long_descr": null, "ret": null}, "fn_lc": [[82, 0], [94, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "drop_column_constraints", "params": {"column_name": "", "constraint_dict": "", "operator": ""}, "params_descr": {"column_name": "", "constraint_dict": "a dictionary of ((constraint name, constraint type), column name) of table", "operator": "batch_alter_table for the table"}, "params_occur": {"column_name": [["column_name", "columns"]], "constraint_dict": [["constraint_dict", "items"]], "operator": [["operator", "drop_constraint", "constraint", "type_"], ["operator", "drop_constraint", "constraint", "type_"]]}, "params_p": {"args": [], "column_name": [["str", 0.7004429801896823], ["int", 0.2407786688817324]], "constraint_dict": [["dict", 0.4117163498072252], ["Dict[str, str]", 0.17786456082340757], ["Dict[str, Any]", 0.10947735747548645], ["Dict[str, int]", 0.10675470259072682], ["Dict[str, Dict[str, str]]", 0.10301339971747026]], "kwargs": [], "operator": [["Optional[\"TypeResourceIdentifier\"]", 0.429785566490586], ["Type[Any]", 0.06552898811757027]]}, "q_name": "drop_column_constraints", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create a primary key or unique constraint", "long_descr": null, "ret": null}, "fn_lc": [[97, 0], [109, 97]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_constraints", "params": {"column_name": "", "constraint_dict": "", "operator": ""}, "params_descr": {"column_name": "", "constraint_dict": "a dictionary of ((constraint name, constraint type), column name) of table", "operator": "batch_alter_table for the table"}, "params_occur": {"column_name": [["column_name", "columns"]], "constraint_dict": [["constraint_dict", "items"]], "operator": [["operator", "create_primary_key", "constraint_name", "constraint", "columns", "columns"], ["operator", "create_unique_constraint", "constraint_name", "constraint", "columns", "columns"]]}, "params_p": {"args": [], "column_name": [["str", 0.73640026465112], ["int", 0.1874319539206741]], "constraint_dict": [["Mapping[str, Dict[str, Any]]", 0.178772923512298], ["dict", 0.17620173036009348], ["Dict[str, str]", 0.15893441356925156], ["Dict[str, int]", 0.12201215813359706], ["Dict[str, Dict[str, str]]", 0.09939662812471292], ["Iterable[str]", 0.08829559650361789], ["Dict[str, Any]", 0.07939679335185786]], "kwargs": [], "operator": [["str", 0.3999627141474642], ["Optional[str]", 0.12509009461454323], ["List[int]", 0.0943840796021467], ["List[str]", 0.09158884433941379]]}, "q_name": "create_constraints", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 0], [123, 37]], "fn_var_ln": {"column_type": [[122, 4], [122, 15]], "query": [[113, 4], [113, 9]]}, "fn_var_occur": {"column_type": [["column_type", "conn", "execute", "query", "fetchone"]], "query": [["query", "text", "table_name", "column_name"], ["column_type", "conn", "execute", "query", "fetchone"]]}, "name": "_is_timestamp", "params": {"column_name": "", "conn": "", "table_name": ""}, "params_descr": {"column_name": "", "conn": "", "table_name": ""}, "params_occur": {"column_name": [["query", "text", "table_name", "column_name"]], "conn": [["column_type", "conn", "execute", "query", "fetchone"]], "table_name": [["query", "text", "table_name", "column_name"]]}, "params_p": {"args": [], "column_name": [["str", 1.0]], "conn": [["str", 0.4919149413651517], ["Optional[Union[int, float]]", 0.18710979465029828], ["bool", 0.110268711081059]], "kwargs": [], "table_name": [["str", 1.0]]}, "q_name": "_is_timestamp", "ret_exprs": ["return column_type == \"timestamp\""], "ret_type": "", "ret_type_p": [["str", 0.2928905151086622], ["Tuple[Type]", 0.08805634541468631]], "variables": {"column_type": "", "query": ""}, "variables_p": {"column_type": [["str", 0.4077000356558118], ["Dict[str, Tuple[str, str]]", 0.1020283692409057], ["Type[Callable[[], None]]", 0.08558706656780697], ["Pattern[str]", 0.07935876516202908]], "query": [["str", 0.9182119332341362]]}}, {"docstring": {"func": "Drop the timestamp column and recreate it as", "long_descr": "datetime or datetime2(6)", "ret": null}, "fn_lc": [[126, 0], [137, 70]], "fn_var_ln": {"constraint_dict": [[133, 12], [133, 27]]}, "fn_var_occur": {"constraint_dict": [["constraint_dict", "get_table_constraints", "conn", "table_name"], ["drop_column_constraints", "batch_op", "column_name", "constraint_dict"], ["create_constraints", "batch_op", "column_name", "constraint_dict"]]}, "name": "recreate_mssql_ts_column", "params": {"column_name": "", "conn": "", "op": "", "table_name": ""}, "params_descr": {"column_name": "", "conn": "", "op": "", "table_name": ""}, "params_occur": {"column_name": [["_is_timestamp", "conn", "table_name", "column_name", "is_table_empty", "conn", "table_name"], ["drop_column_constraints", "batch_op", "column_name", "constraint_dict"], ["batch_op", "drop_column", "column_name", "column_name"], ["batch_op", "add_column", "sa", "Column", "column_name", "TIMESTAMP", "nullable", "False"], ["create_constraints", "batch_op", "column_name", "constraint_dict"]], "conn": [["_is_timestamp", "conn", "table_name", "column_name", "is_table_empty", "conn", "table_name"], ["constraint_dict", "get_table_constraints", "conn", "table_name"]], "op": [["op", "batch_alter_table", "table_name", "batch_op"]], "table_name": [["_is_timestamp", "conn", "table_name", "column_name", "is_table_empty", "conn", "table_name"], ["op", "batch_alter_table", "table_name", "batch_op"], ["constraint_dict", "get_table_constraints", "conn", "table_name"]]}, "params_p": {"args": [], "column_name": [["str", 1.0]], "conn": [["str", 1.0000000000000002]], "kwargs": [], "op": [["str", 0.5007645116643726], ["Type", 0.08439849273113918]], "table_name": [["str", 0.8056806471791851]]}, "q_name": "recreate_mssql_ts_column", "ret_exprs": [], "ret_type": "", "variables": {"constraint_dict": ""}, "variables_p": {"constraint_dict": [["Dict[str, Any]", 0.4619632641312598], ["Dict[str, str]", 0.13778721607416505], ["dict", 0.11859113517882058], ["Optional[Dict[str, Any]]", 0.07389160820407073]]}}, {"docstring": {"func": "Update the datetime column to datetime2(6)", "long_descr": null, "ret": null}, "fn_lc": [[140, 0], [147, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "alter_mssql_datetime_column", "params": {"column_name": "", "conn": "", "nullable": "", "op": "", "table_name": ""}, "params_descr": {"column_name": "", "conn": "", "nullable": "", "op": "", "table_name": ""}, "params_occur": {"column_name": [["op", "alter_column", "table_name", "table_name", "column_name", "column_name", "type_", "mssql", "DATETIME2", "precision", "nullable", "nullable"]], "conn": [], "nullable": [["op", "alter_column", "table_name", "table_name", "column_name", "column_name", "type_", "mssql", "DATETIME2", "precision", "nullable", "nullable"]], "op": [["op", "alter_column", "table_name", "table_name", "column_name", "column_name", "type_", "mssql", "DATETIME2", "precision", "nullable", "nullable"]], "table_name": [["op", "alter_column", "table_name", "table_name", "column_name", "column_name", "type_", "mssql", "DATETIME2", "precision", "nullable", "nullable"]]}, "params_p": {"args": [], "column_name": [["str", 0.7903047302845209], ["List[str]", 0.20969526971547922]], "conn": [["str", 0.5173953765616311], ["bool", 0.19542785538150512], ["Iterator[str]", 0.10791365284627588], ["List[str]", 0.09120135741189299], ["Iterable[str]", 0.08806175779869493]], "kwargs": [], "nullable": [["str", 0.7903047302845209], ["List[str]", 0.20969526971547922]], "op": [["str", 0.7903047302845209], ["List[str]", 0.20969526971547922]], "table_name": [["str", 0.7903047302845209], ["List[str]", 0.20969526971547922]]}, "q_name": "alter_mssql_datetime_column", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Improve compatibility with MSSQL backend", "long_descr": null, "ret": null}, "fn_lc": [[150, 0], [193, 5]], "fn_var_ln": {"conn": [[152, 4], [152, 8]], "constraint_dict": [[174, 4], [174, 19]]}, "fn_var_occur": {"conn": [["conn", "op", "get_bind"], ["conn", "dialect", "name"], ["recreate_mssql_ts_column", "conn", "op"], ["recreate_mssql_ts_column", "conn", "op"], ["alter_mssql_datetime_column", "conn", "op", "False"], ["constraint_dict", "get_table_constraints", "conn"], ["conn", "execute", "text"], ["conn", "execute", "text"]], "constraint_dict": [["constraint_dict", "get_table_constraints", "conn"], ["constraint_dict", "items"]]}, "name": "upgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "upgrade", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"conn": "", "constraint_dict": ""}, "variables_p": {"conn": [["list", 0.6224706986084314], ["List[str]", 0.11193320605024575], ["str", 0.08504341686471231], ["List[int]", 0.07842690951463926]], "constraint_dict": [["dict", 0.6058267423391241], ["Type[Dict[str, Any]]", 0.11172470483518813], ["Dict[str, Union[Any, str]]", 0.10864742638275188], ["Dict[str, Any]", 0.09132231808259245], ["Dict[str, str]", 0.08247880836034348]]}}, {"docstring": {"func": "Reverse MSSQL backend compatibility improvements", "long_descr": null, "ret": null}, "fn_lc": [[196, 0], [220, 69]], "fn_var_ln": {"conn": [[198, 4], [198, 8]]}, "fn_var_occur": {"conn": [["conn", "op", "get_bind"], ["conn", "dialect", "name"]]}, "name": "downgrade", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "downgrade", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"conn": ""}, "variables_p": {"conn": [["List[piccolo.apps.migrations.auto.DiffableTable]", 0.12212054292266929], ["dict", 0.10637133325608646], ["str", 0.09814283100842956], ["bool", 0.09814283100842956], ["Dict[str, Any]", 0.09308429042943982], ["Callable[[], Any]", 0.09140740045235785]]}}], "imports": ["__future__", "annotations", "collections", "defaultdict", "sqlalchemy", "sa", "alembic", "op", "sqlalchemy", "text", "sqlalchemy", "dialects", "mssql", "airflow", "migrations", "db_types", "TIMESTAMP"], "mod_var_ln": {"airflow_version": [[41, 0], [41, 15]], "branch_labels": [[39, 0], [39, 13]], "depends_on": [[40, 0], [40, 10]], "down_revision": [[38, 0], [38, 13]], "revision": [[37, 0], [37, 8]]}, "mod_var_occur": {"airflow_version": [], "branch_labels": [], "depends_on": [], "down_revision": [], "revision": []}, "no_types_annot": {"D": 1, "I": 0, "U": 44}, "session_id": "zLvZ6BPVM_CvDIF_OvIMotjPakp2b_cwNR7Csv8-M-c", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"airflow_version": "", "branch_labels": "", "depends_on": "", "down_revision": "", "revision": ""}, "variables_p": {"airflow_version": [["str", 0.6], ["List[int]", 0.1], ["bool", 0.1], ["Union[int, str]", 0.1], ["int", 0.1]], "branch_labels": [["str", 0.5], ["List[str]", 0.4], ["Tuple[Any, Any]", 0.1]], "depends_on": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "down_revision": [["Tuple[str, str]", 0.5], ["str", 0.4], ["Optional[str]", 0.1]], "revision": [["str", 0.9999999999999999]]}}}