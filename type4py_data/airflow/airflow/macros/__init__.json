{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Add or subtract days from a YYYY-MM-DD.", "long_descr": null, "ret": null}, "fn_lc": [[43, 0], [58, 34]], "fn_var_ln": {"dt": [[57, 4], [57, 6]]}, "fn_var_occur": {"dt": [["dt", "datetime", "strptime", "str", "ds", "timedelta", "days", "days"], ["dt", "strftime"]]}, "name": "ds_add", "params": {"days": "builtins.int", "ds": "builtins.str"}, "params_descr": {"days": "number of days to add to the ds, you can use negative values\n>>> ds_add('2015-01-01', 5)\n'2015-01-06'\n>>> ds_add('2015-01-06', -5)\n'2015-01-01'", "ds": "anchor date in ``YYYY-MM-DD`` format to add to"}, "params_occur": {"days": [["dt", "datetime", "strptime", "str", "ds", "timedelta", "days", "days"]], "ds": [["str", "ds"], ["dt", "datetime", "strptime", "str", "ds", "timedelta", "days", "days"]]}, "params_p": {"args": [], "days": [["str", 0.2635535084501635], ["datetime.datetime", 0.21061731196068273], ["Optional[datetime.datetime]", 0.10153526489337351], ["List[bytes]", 0.0994541977989947], ["int", 0.08608321536611349]], "ds": [["str", 0.510797999218952], ["int", 0.10662864732822287], ["Sequence[util.datetime.range.DateTimeRange]", 0.10471937938684285]], "kwargs": []}, "q_name": "ds_add", "ret_exprs": ["return str(ds)", "return dt.strftime(\"%Y-%m-%d\")"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.9999999999999998]], "variables": {"dt": ""}, "variables_p": {"dt": [["str", 0.2546229388091571], ["datetime.timedelta", 0.2489174078375277], ["datetime.datetime", 0.21333570704801563], ["datetime.date.time.date", 0.08241555369814699]]}}, {"docstring": {"func": "Output datetime string in a given format.", "long_descr": null, "ret": null}, "fn_lc": [[61, 0], [74, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "ds_format", "params": {"ds": "builtins.str", "input_format": "builtins.str", "output_format": "builtins.str"}, "params_descr": {"ds": "input string which contains a date", "input_format": "input string format. E.g. %Y-%m-%d", "output_format": "output string format  E.g. %Y-%m-%d\n>>> ds_format('2015-01-01', \"%Y-%m-%d\", \"%m-%d-%y\")\n'01-01-15'\n>>> ds_format('1/5/2015', \"%m/%d/%Y\",  \"%Y-%m-%d\")\n'2015-01-05'"}, "params_occur": {"ds": [["datetime", "strptime", "str", "ds", "input_format", "strftime", "output_format"]], "input_format": [["datetime", "strptime", "str", "ds", "input_format", "strftime", "output_format"]], "output_format": [["datetime", "strptime", "str", "ds", "input_format", "strftime", "output_format"]]}, "params_p": {"args": [], "ds": [["str", 0.534698555710164], ["int", 0.2901896157604529]], "input_format": [["str", 0.534698555710164], ["int", 0.2901896157604529]], "kwargs": [], "output_format": [["str", 0.534698555710164], ["int", 0.2901896157604529]]}, "q_name": "ds_format", "ret_exprs": ["return datetime.strptime(str(ds), input_format).strftime(output_format)"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.621005545800398], ["datetime.date", 0.11141244406188261], ["int", 0.08872610532776913], ["bool", 0.08872610532776913]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return a human-readable/approximate difference between datetimes.", "long_descr": "When only one datetime is provided, the comparison will be based on now.", "ret": null}, "fn_lc": [[77, 0], [89, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "datetime_diff_for_humans", "params": {"dt": "typing.Any", "since": "DateTime | None"}, "params_descr": {"dt": "The datetime to display the diff for", "since": "When to display the date from. If ``None`` then the diff is\nbetween ``dt`` and now."}, "params_occur": {"dt": [["pendulum", "instance", "dt", "diff_for_humans", "since"]], "since": [["pendulum", "instance", "dt", "diff_for_humans", "since"]]}, "params_p": {"args": [], "dt": [["datetime.datetime", 0.4796851352814254], ["datetime.date.time", 0.22914003126344418], ["bool", 0.09836127712844414], ["Optional[bool]", 0.0744980621444671], ["datetime.tzinfo", 0.0744980621444671], ["str", 0.04381743203775195]], "kwargs": [], "since": [["datetime.datetime", 0.4796851352814254], ["datetime.date.time", 0.22914003126344418], ["bool", 0.09836127712844414], ["Optional[bool]", 0.0744980621444671], ["datetime.tzinfo", 0.0744980621444671], ["str", 0.04381743203775195]]}, "q_name": "datetime_diff_for_humans", "ret_exprs": ["return pendulum.instance(dt).diff_for_humans(since)"], "ret_type": "builtins.str", "ret_type_p": [["bool", 0.6992549422706529], ["Optional[bool]", 0.10437392615201686], ["Optional[float]", 0.09622130691147641]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "json", "time", "uuid", "datetime", "datetime", "timedelta", "random", "random", "typing", "Any", "dateutil", "pendulum", "DateTime", "airflow.utils.yaml", "yaml", "airflow", "utils", "deprecation_tools", "add_deprecated_classes", "pendulum"], "mod_var_ln": {"__deprecated_classes": [[33, 0], [33, 20]]}, "mod_var_occur": {"__deprecated_classes": [["add_deprecated_classes", "__deprecated_classes", "__name__"]]}, "no_types_annot": {"D": 10, "I": 0, "U": 2}, "session_id": "PjnmwR3zSrXab405r0PNAm_-cfyx7HpfbpHMrjD4yxU", "set": null, "tc": [false, null], "type_annot_cove": 0.83, "typed_seq": "", "untyped_seq": "", "variables": {"__deprecated_classes": ""}, "variables_p": {"__deprecated_classes": [["int", 0.5762562337933334], ["Dict[str, str]", 0.23415185589815532], ["dict", 0.10340520019394797], ["Dict[str, Union[int, str]]", 0.08618671011456334]]}}}