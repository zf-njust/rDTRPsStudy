{"error": null, "response": {"classes": [{"cls_lc": [[66, 0], [95, 19]], "cls_var_ln": {"MIN_SECONDS": [[74, 4], [74, 15]], "first_attempt_time": [[77, 4], [77, 22]], "total_tries": [[75, 4], [75, 15]], "tries_after_min": [[76, 4], [76, 19]]}, "cls_var_occur": {"MIN_SECONDS": [], "first_attempt_time": [], "total_tries": [], "tries_after_min": []}, "funcs": [{"docstring": {"func": "Seconds since first attempt.", "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [82, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "elapsed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["pendulum", "now", "self", "first_attempt_time", "total_seconds"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RunningRetryAttemptType.elapsed", "ret_exprs": ["return (pendulum.now(\"UTC\") - self.first_attempt_time).total_seconds()"], "ret_type": "", "ret_type_p": [["str", 0.3877328251264912], ["bytes", 0.17796517461067146], ["Dict[str, str]", 0.11157271437507771], ["Tuple[bytes, bytes, bytes]", 0.10652378545942881], ["Dict[str, Union[str, bool]]", 0.0997483040713816]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return False if there has been at least one try greater than MIN_SECONDS, otherwise return True.", "long_descr": null, "ret": null}, "fn_lc": [[84, 4], [95, 19]], "fn_var_ln": {"elapsed": [[91, 8], [91, 15]]}, "fn_var_occur": {"elapsed": [["elapsed", "self", "elapsed"], ["elapsed", "self", "MIN_SECONDS"], ["log", "debug", "elapsed", "self", "total_tries"]]}, "name": "can_try_again", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "tries_after_min"], ["self", "total_tries"], ["elapsed", "self", "elapsed"], ["elapsed", "self", "MIN_SECONDS"], ["self", "tries_after_min"], ["log", "debug", "elapsed", "self", "total_tries"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RunningRetryAttemptType.can_try_again", "ret_exprs": ["return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"elapsed": ""}, "variables_p": {"elapsed": [["int", 0.3108771664698359], ["frozenset[int]", 0.2891104150255813], ["float", 0.09846881716956334], ["str", 0.09501864531403113], ["list", 0.09280396245511785]]}}], "name": "RunningRetryAttemptType", "q_name": "RunningRetryAttemptType", "variables": {"MIN_SECONDS": "", "first_attempt_time": "datetime.datetime", "total_tries": "builtins.int", "tries_after_min": "builtins.int"}, "variables_p": {"MIN_SECONDS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "first_attempt_time": [["str", 0.5], ["int", 0.30000000000000004], ["datetime.timedelta", 0.2]], "total_tries": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "tries_after_min": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[98, 0], [481, 40]], "cls_var_ln": {"callback_sink": [[117, 4], [117, 17]], "change_sensor_mode_to_reschedule": [[113, 4], [113, 36]], "is_local": [[109, 4], [109, 12]], "is_production": [[111, 4], [111, 17]], "is_single_threaded": [[110, 4], [110, 22]], "job_id": [[116, 4], [116, 10]], "serve_logs": [[114, 4], [114, 14]], "supports_ad_hoc_ti_run": [[105, 4], [105, 26]], "supports_pickling": [[106, 4], [106, 21]], "supports_sentry": [[107, 4], [107, 19]]}, "cls_var_occur": {"callback_sink": [], "change_sensor_mode_to_reschedule": [], "is_local": [], "is_production": [], "is_single_threaded": [], "job_id": [], "serve_logs": [], "supports_ad_hoc_ti_run": [], "supports_pickling": [], "supports_sentry": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[119, 4], [125, 148]], "fn_var_ln": {"attempts": [[125, 8], [125, 21]], "event_buffer": [[124, 8], [124, 25]], "parallelism": [[121, 8], [121, 24]], "queued_tasks": [[122, 8], [122, 25]], "running": [[123, 8], [123, 20]]}, "fn_var_occur": {"attempts": [["self", "attempts", "builtins", "dict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "RunningRetryAttemptType", "defaultdict", "RunningRetryAttemptType"]], "event_buffer": [["self", "event_buffer", "builtins", "dict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "EventBufferValueType"]], "parallelism": [["self", "parallelism", "builtins", "int", "parallelism"]], "queued_tasks": [["self", "queued_tasks", "collections", "OrderedDict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "QueuedTaskInstanceType", "OrderedDict"]], "running": [["self", "running", "builtins", "set", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "set"]]}, "name": "__init__", "params": {"parallelism": "builtins.int", "self": ""}, "params_descr": {"parallelism": "", "self": ""}, "params_occur": {"parallelism": [["self", "parallelism", "builtins", "int", "parallelism"]], "self": [["self", "parallelism", "builtins", "int", "parallelism"], ["self", "queued_tasks", "collections", "OrderedDict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "QueuedTaskInstanceType", "OrderedDict"], ["self", "running", "builtins", "set", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "set"], ["self", "event_buffer", "builtins", "dict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "EventBufferValueType"], ["self", "attempts", "builtins", "dict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "RunningRetryAttemptType", "defaultdict", "RunningRetryAttemptType"]]}, "params_p": {"args": [], "kwargs": [], "parallelism": [["int", 0.7999891099688392], ["str", 0.09743505951920285], ["List[str]", 0.0603732384031367]], "self": []}, "q_name": "BaseExecutor.__init__", "ret_exprs": [], "ret_type": "", "variables": {"attempts": "builtins.dict[airflow.models.taskinstancekey.TaskInstanceKey, RunningRetryAttemptType]", "event_buffer": "builtins.dict[airflow.models.taskinstancekey.TaskInstanceKey, EventBufferValueType]", "parallelism": "builtins.int", "queued_tasks": "collections.OrderedDict[airflow.models.taskinstancekey.TaskInstanceKey, QueuedTaskInstanceType]", "running": "builtins.set[airflow.models.taskinstancekey.TaskInstanceKey]"}, "variables_p": {"attempts": [["dict", 1.0000000000000002]], "event_buffer": [["dict", 0.0939332734224841], ["list", 0.08504115141167597], ["Dict[str, str]", 0.08242218285195846]], "parallelism": [["int", 0.9999999999999999]], "queued_tasks": [["int", 0.4247517741216199], ["List[List[int]]", 0.2399292957583598], ["bytearray", 0.09152759531137056], ["List[str]", 0.09062962333528221], ["Dict[str, str]", 0.07606264286271248]], "running": [["int", 0.9132468494154509], ["idom.utils.Ref[Literal]", 0.08675315058454904]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [128, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "__class__", "__name__", "self", "parallelism"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.__repr__", "ret_exprs": ["return f\"{self.__class__.__name__}(parallelism={self.parallelism})\""], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Executors may need to get things started.", "long_descr": null, "ret": null}, "fn_lc": [[130, 4], [131, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "start", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.start", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Queues command to task.", "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [145, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "queue_command", "params": {"command": "CommandType", "priority": "builtins.int", "queue": "str | None", "self": "", "task_instance": "airflow.models.taskinstance.TaskInstance"}, "params_descr": {"command": "", "priority": "", "queue": "", "self": "", "task_instance": ""}, "params_occur": {"command": [["self", "log", "info", "command"], ["self", "queued_tasks", "task_instance", "key", "command", "priority", "queue", "task_instance"]], "priority": [["self", "queued_tasks", "task_instance", "key", "command", "priority", "queue", "task_instance"]], "queue": [["self", "queued_tasks", "task_instance", "key", "command", "priority", "queue", "task_instance"]], "self": [["task_instance", "key", "self", "queued_tasks"], ["self", "log", "info", "command"], ["self", "queued_tasks", "task_instance", "key", "command", "priority", "queue", "task_instance"], ["self", "log", "error", "task_instance", "key"]], "task_instance": [["task_instance", "key", "self", "queued_tasks"], ["self", "queued_tasks", "task_instance", "key", "command", "priority", "queue", "task_instance"], ["self", "log", "error", "task_instance", "key"]]}, "params_p": {"args": [], "command": [["str", 0.3226264489304582], ["Set[str]", 0.10384011392223971], ["int", 0.09153869576539551], ["Dict[str, Any]", 0.09091284789691528]], "kwargs": [], "priority": [["Dict[str, Any]", 0.17749202622621046], ["Set[str]", 0.09862209364862765], ["str", 0.08110796074047695], ["Optional[str]", 0.08003395417856583]], "queue": [["Dict[str, Any]", 0.17749202622621046], ["Set[str]", 0.09862209364862765], ["str", 0.08110796074047695], ["Optional[str]", 0.08003395417856583]], "self": [], "task_instance": [["dict", 0.24029716676346083], ["Dict[str, Any]", 0.1889268328841357], ["annofabapi.dataclass.task.Task", 0.11010652712255192], ["celery.events.state.State.Task", 0.09100565933511286]]}, "q_name": "BaseExecutor.queue_command", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Queues task instance.", "long_descr": null, "ret": null}, "fn_lc": [[147, 4], [185, 9]], "fn_var_ln": {"command_list_to_run": [[167, 8], [167, 27]], "pool": [[161, 8], [161, 12]]}, "fn_var_occur": {"command_list_to_run": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"], ["self", "log", "debug", "command_list_to_run"], ["self", "queue_command", "task_instance", "command_list_to_run", "priority", "task_instance", "task", "priority_weight_total", "queue", "task_instance", "task", "queue"]], "pool": [["pool", "pool", "task_instance", "pool"], ["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]]}, "name": "queue_task_instance", "params": {"cfg_path": "str | None", "ignore_all_deps": "builtins.bool", "ignore_depends_on_past": "builtins.bool", "ignore_task_deps": "builtins.bool", "ignore_ti_state": "builtins.bool", "mark_success": "builtins.bool", "pickle_id": "int | None", "pool": "str | None", "self": "", "task_instance": "airflow.models.taskinstance.TaskInstance", "wait_for_past_depends_before_skipping": "builtins.bool"}, "params_descr": {"cfg_path": "", "ignore_all_deps": "", "ignore_depends_on_past": "", "ignore_task_deps": "", "ignore_ti_state": "", "mark_success": "", "pickle_id": "", "pool": "", "self": "", "task_instance": "", "wait_for_past_depends_before_skipping": ""}, "params_occur": {"cfg_path": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "ignore_all_deps": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "ignore_depends_on_past": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "ignore_task_deps": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "ignore_ti_state": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "mark_success": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "pickle_id": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "pool": [["pool", "pool", "task_instance", "pool"], ["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]], "self": [["self", "log", "debug", "command_list_to_run"], ["self", "queue_command", "task_instance", "command_list_to_run", "priority", "task_instance", "task", "priority_weight_total", "queue", "task_instance", "task", "queue"]], "task_instance": [["pool", "pool", "task_instance", "pool"], ["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"], ["self", "queue_command", "task_instance", "command_list_to_run", "priority", "task_instance", "task", "priority_weight_total", "queue", "task_instance", "task", "queue"]], "wait_for_past_depends_before_skipping": [["command_list_to_run", "task_instance", "command_as_list", "local", "True", "mark_success", "mark_success", "ignore_all_deps", "ignore_all_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "wait_for_past_depends_before_skipping", "ignore_task_deps", "ignore_task_deps", "ignore_ti_state", "ignore_ti_state", "pool", "pool", "pickle_id", "pickle_id", "cfg_path", "cfg_path"]]}, "params_p": {"args": [], "cfg_path": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]], "ignore_all_deps": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]], "ignore_depends_on_past": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]], "ignore_task_deps": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]], "ignore_ti_state": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]], "kwargs": [], "mark_success": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]], "pickle_id": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]], "pool": [["Optional[str]", 0.10843316478407443], ["raiden.utils.TokenNetworkID", 0.10289659447090561], ["bool", 0.09321254185872402], ["int", 0.09193373947554753], ["raiden.transfer.state.ChainState", 0.08534190761637643]], "self": [], "task_instance": [["Optional[str]", 0.10843316478407443], ["raiden.utils.TokenNetworkID", 0.10289659447090561], ["bool", 0.09321254185872402], ["int", 0.09193373947554753], ["raiden.transfer.state.ChainState", 0.08534190761637643]], "wait_for_past_depends_before_skipping": [["str", 0.2772422400455894], ["bool", 0.11443056141958462], ["set", 0.10096528209881471]]}, "q_name": "BaseExecutor.queue_task_instance", "ret_exprs": [], "ret_type": "None", "variables": {"command_list_to_run": "", "pool": ""}, "variables_p": {"command_list_to_run": [["list", 0.30618390160845643], ["frozenset[str]", 0.10772248897287778], ["alerta.models.user.User", 0.10413052519587955], ["List[List[str]]", 0.1016048639200948], ["List[Tuple[str, str, str, str]]", 0.10087339032868695], ["Dict[str, str]", 0.09580959412136951], ["Tuple[int, int]", 0.09187228042734828], ["Dict[str, Any]", 0.09180295542528669]], "pool": [["int", 0.35549843228395656], ["str", 0.19538610719146227], ["Dict[str, Any]", 0.09386623150026113]]}}, {"docstring": {"func": "Checks if a task is either queued or running in this executor.", "long_descr": null, "ret": "True if the task is known to this executor"}, "fn_lc": [[187, 4], [194, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "has_task", "params": {"self": "", "task_instance": "airflow.models.taskinstance.TaskInstance"}, "params_descr": {"self": "", "task_instance": "TaskInstance"}, "params_occur": {"self": [["task_instance", "key", "self", "queued_tasks", "task_instance", "key", "self", "running"]], "task_instance": [["task_instance", "key", "self", "queued_tasks", "task_instance", "key", "self", "running"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_instance": [["Dict[str, Any]", 0.09793984380888576], ["khetha.models.Task", 0.08729351877047987], ["dict", 0.08521819471465696]]}, "q_name": "BaseExecutor.has_task", "ret_exprs": ["return task_instance.key in self.queued_tasks or task_instance.key in self.running"], "ret_type": "builtins.bool", "ret_type_p": [["int", 0.3108027599077038], ["bool", 0.29638555166716957], ["str", 0.11547582054133429], ["Optional[Tuple[int, int]]", 0.09525182020589425]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Sync will get called periodically by the heartbeat method.", "long_descr": "Executors should override this to perform gather statuses.", "ret": null}, "fn_lc": [[196, 4], [201, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "sync", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.sync", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Heartbeat sent to trigger new jobs.", "long_descr": null, "ret": null}, "fn_lc": [[203, 4], [235, 19]], "fn_var_ln": {"num_queued_tasks": [[211, 8], [211, 24]], "num_running_tasks": [[210, 8], [210, 25]], "open_slots": [[208, 12], [208, 22]]}, "fn_var_occur": {"num_queued_tasks": [["num_queued_tasks", "len", "self", "queued_tasks"], ["self", "log", "debug", "num_queued_tasks"], ["Stats", "gauge", "value", "num_queued_tasks", "tags", "self", "__class__", "__name__"]], "num_running_tasks": [["num_running_tasks", "len", "self", "running"], ["self", "log", "debug", "num_running_tasks"], ["Stats", "gauge", "value", "num_running_tasks", "tags", "self", "__class__", "__name__"]], "open_slots": [["open_slots", "len", "self", "queued_tasks"], ["open_slots", "self", "parallelism", "len", "self", "running"], ["self", "log", "debug", "open_slots"], ["Stats", "gauge", "value", "open_slots", "tags", "self", "__class__", "__name__"], ["self", "trigger_tasks", "open_slots"]]}, "name": "heartbeat", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "parallelism"], ["open_slots", "len", "self", "queued_tasks"], ["open_slots", "self", "parallelism", "len", "self", "running"], ["num_running_tasks", "len", "self", "running"], ["num_queued_tasks", "len", "self", "queued_tasks"], ["self", "log", "debug", "num_running_tasks"], ["self", "log", "debug", "num_queued_tasks"], ["self", "log", "debug", "open_slots"], ["Stats", "gauge", "value", "open_slots", "tags", "self", "__class__", "__name__"], ["Stats", "gauge", "value", "num_queued_tasks", "tags", "self", "__class__", "__name__"], ["Stats", "gauge", "value", "num_running_tasks", "tags", "self", "__class__", "__name__"], ["self", "trigger_tasks", "open_slots"], ["self", "log", "debug", "self", "__class__"], ["self", "sync"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.heartbeat", "ret_exprs": [], "ret_type": "None", "variables": {"num_queued_tasks": "", "num_running_tasks": "", "open_slots": ""}, "variables_p": {"num_queued_tasks": [["int", 0.8036725023291923], ["List[int]", 0.1963274976708076]], "num_running_tasks": [["int", 0.9019814289574264]], "open_slots": [["int", 0.9999999999999998]]}}, {"docstring": {"func": "Orders the queued tasks by priority.", "long_descr": null, "ret": "List of tuples from the queued_tasks according to the priority."}, "fn_lc": [[237, 4], [247, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "order_queued_tasks_by_priority", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["sorted", "self", "queued_tasks", "items", "key", "x", "x", "reverse", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.order_queued_tasks_by_priority", "ret_exprs": ["return sorted( self.queued_tasks.items(), key=lambda x: x[1][1], reverse=True,)"], "ret_type": "builtins.list[builtins.tuple[airflow.models.taskinstancekey.TaskInstanceKey, QueuedTaskInstanceType]]", "ret_type_p": [["str", 0.20249994092908982], ["dict", 0.11418679645225362], ["Tuple[str]", 0.1002524971318795], ["Optional[str]", 0.09659434847528776]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Initiates async execution of the queued tasks, up to the number of available slots.", "long_descr": null, "ret": null}, "fn_lc": [[249, 4], [289, 44]], "fn_var_ln": {"_": [[259, 27], [259, 28]], "attempt": [[272, 16], [272, 23]], "command": [[259, 18], [259, 25]], "key": [[259, 12], [259, 15]], "queue": [[259, 30], [259, 35]], "sorted_queue": [[255, 8], [255, 20]], "task_tuples": [[256, 8], [256, 19]], "ti": [[259, 37], [259, 39]]}, "fn_var_occur": {"_": [["key", "command", "_", "queue", "ti", "sorted_queue", "pop"]], "attempt": [["attempt", "self", "attempts", "key"], ["attempt", "can_try_again"], ["self", "log", "info", "attempt", "total_tries", "key"], ["self", "log", "error", "key", "attempt", "total_tries"]], "command": [["key", "command", "_", "queue", "ti", "sorted_queue", "pop"], ["task_tuples", "append", "key", "command", "queue", "ti", "executor_config"]], "key": [["key", "command", "_", "queue", "ti", "sorted_queue", "pop"], ["key", "self", "running"], ["attempt", "self", "attempts", "key"], ["self", "log", "info", "attempt", "total_tries", "key"], ["self", "log", "error", "key", "attempt", "total_tries"], ["self", "attempts", "key"], ["self", "queued_tasks", "key"], ["key", "self", "attempts"], ["self", "attempts", "key"], ["task_tuples", "append", "key", "command", "queue", "ti", "executor_config"]], "queue": [["key", "command", "_", "queue", "ti", "sorted_queue", "pop"], ["task_tuples", "append", "key", "command", "queue", "ti", "executor_config"]], "sorted_queue": [["sorted_queue", "self", "order_queued_tasks_by_priority"], ["key", "command", "_", "queue", "ti", "sorted_queue", "pop"]], "task_tuples": [["task_tuples", "append", "key", "command", "queue", "ti", "executor_config"], ["self", "_process_tasks", "task_tuples"]], "ti": [["key", "command", "_", "queue", "ti", "sorted_queue", "pop"], ["task_tuples", "append", "key", "command", "queue", "ti", "executor_config"]]}, "name": "trigger_tasks", "params": {"open_slots": "builtins.int", "self": ""}, "params_descr": {"open_slots": "Number of open slots", "self": ""}, "params_occur": {"open_slots": [["range", "min", "open_slots", "len", "self", "queued_tasks"]], "self": [["sorted_queue", "self", "order_queued_tasks_by_priority"], ["range", "min", "open_slots", "len", "self", "queued_tasks"], ["key", "self", "running"], ["attempt", "self", "attempts", "key"], ["self", "log", "info", "attempt", "total_tries", "key"], ["self", "log", "error", "key", "attempt", "total_tries"], ["self", "attempts", "key"], ["self", "queued_tasks", "key"], ["key", "self", "attempts"], ["self", "attempts", "key"], ["self", "_process_tasks", "task_tuples"]]}, "params_p": {"args": [], "kwargs": [], "open_slots": [["List[int]", 0.1848766238991934], ["int", 0.1744378896239396], ["Sequence['cirq.Qid']", 0.10469893785956064], ["str", 0.09750841363688897], ["list", 0.08960235573253819], ["bool", 0.0872189448119698]], "self": []}, "q_name": "BaseExecutor.trigger_tasks", "ret_exprs": [], "ret_type": "None", "variables": {"_": "", "attempt": "", "command": "", "key": "", "queue": "", "sorted_queue": "", "task_tuples": "", "ti": ""}, "variables_p": {"_": [["Dict[int, str]", 0.2215979942520905], ["str", 0.1974191087703595], ["bytes", 0.19654993438691842], ["Iterator[Any]", 0.101539964927513], ["int", 0.09548082417846283], ["Dict[str, Any]", 0.09008491595985356]], "attempt": [["str", 0.8977796455047345]], "command": [["str", 0.49985119606238376], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any]]", 0.10767957916748487], ["List[List[str]]", 0.08843762525163104]], "key": [["str", 0.7980493871501921], ["Dict[str, List[str]]", 0.10761324529589687], ["List[str]", 0.09433736755391114]], "queue": [["str", 0.7259946546783734], ["List[Dict[str, str]]", 0.08635942125938417]], "sorted_queue": [["str", 0.12308213707926648], ["Dict[str, list]", 0.11490977004070366], ["dict", 0.09941427735167753], ["int", 0.09835807418671941], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, str]]", 0.09052395064934428]], "task_tuples": [["str", 0.3914684209898232], ["kippo.tasks.models.KippoTask", 0.09942221960121139], ["Dict[str, int]", 0.09695467111953684], ["Dict[str, List[str]]", 0.09614546824712195]], "ti": [["str", 0.7259946546783734], ["List[Dict[str, str]]", 0.08635942125938417]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 4], [295, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_process_tasks", "params": {"self": "", "task_tuples": "builtins.list[TaskTuple]"}, "params_descr": {"self": "", "task_tuples": ""}, "params_occur": {"self": [["self", "queued_tasks", "key"], ["self", "execute_async", "key", "key", "command", "command", "queue", "queue", "executor_config", "executor_config"], ["self", "running", "add", "key"]], "task_tuples": []}, "params_p": {"args": [], "kwargs": [], "self": [], "task_tuples": [["dict", 0.999999997906723], ["bool", 1.5160716056524192e-09], ["taskiapplication.models.task.Task", 1.52731122342342e-10], ["Callable", 1.1417466955732189e-10]]}, "q_name": "BaseExecutor._process_tasks", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Changes state of the task.", "long_descr": null, "ret": null}, "fn_lc": [[297, 4], [310, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "change_state", "params": {"info": "", "key": "airflow.models.taskinstancekey.TaskInstanceKey", "self": "", "state": "builtins.str"}, "params_descr": {"info": "Executor information for the task instance", "key": "Unique key for the task instance", "self": "", "state": "State to set for the task."}, "params_occur": {"info": [["self", "event_buffer", "key", "state", "info"]], "key": [["self", "log", "debug", "key"], ["self", "running", "remove", "key"], ["self", "log", "debug", "str", "key"], ["self", "event_buffer", "key", "state", "info"]], "self": [["self", "log", "debug", "key"], ["self", "running", "remove", "key"], ["self", "log", "debug", "str", "key"], ["self", "event_buffer", "key", "state", "info"]], "state": [["self", "event_buffer", "key", "state", "info"]]}, "params_p": {"args": [], "info": [["str", 0.2991455060024193], ["int", 0.18861071146465924], ["bytes", 0.10899977786252563]], "key": [["str", 0.8200486049976448], ["List[str]", 0.08762190026705623]], "kwargs": [], "self": [], "state": [["str", 0.2991455060024193], ["int", 0.18861071146465924], ["bytes", 0.10899977786252563]]}, "q_name": "BaseExecutor.change_state", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Set fail state for the event.", "long_descr": null, "ret": null}, "fn_lc": [[312, 4], [319, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "fail", "params": {"info": "", "key": "airflow.models.taskinstancekey.TaskInstanceKey", "self": ""}, "params_descr": {"info": "Executor information for the task instance", "key": "Unique key for the task instance", "self": ""}, "params_occur": {"info": [["self", "change_state", "key", "State", "FAILED", "info"]], "key": [["self", "change_state", "key", "State", "FAILED", "info"]], "self": [["self", "change_state", "key", "State", "FAILED", "info"]]}, "params_p": {"args": [], "info": [["str", 0.5215880260668744], ["bool", 0.09161882785598381]], "key": [["str", 0.5215880260668744], ["bool", 0.09161882785598381]], "kwargs": [], "self": []}, "q_name": "BaseExecutor.fail", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Set success state for the event.", "long_descr": null, "ret": null}, "fn_lc": [[321, 4], [328, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "success", "params": {"info": "", "key": "airflow.models.taskinstancekey.TaskInstanceKey", "self": ""}, "params_descr": {"info": "Executor information for the task instance", "key": "Unique key for the task instance", "self": ""}, "params_occur": {"info": [["self", "change_state", "key", "State", "SUCCESS", "info"]], "key": [["self", "change_state", "key", "State", "SUCCESS", "info"]], "self": [["self", "change_state", "key", "State", "SUCCESS", "info"]]}, "params_p": {"args": [], "info": [["str", 0.4309373324734005], ["bool", 0.1092440479031486], ["Optional[int]", 0.10289951934006547], ["list", 0.08752153636878304], ["KT", 0.0858526668319164], ["Dict[str, str]", 0.08552591271876936]], "key": [["str", 0.4309373324734005], ["bool", 0.1092440479031486], ["Optional[int]", 0.10289951934006547], ["list", 0.08752153636878304], ["KT", 0.0858526668319164], ["Dict[str, str]", 0.08552591271876936]], "kwargs": [], "self": []}, "q_name": "BaseExecutor.success", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return and flush the event buffer.", "long_descr": "In case dag_ids is specified it will only return and flush events\nfor the given dag_ids. Otherwise, it returns and flushes all events.", "ret": "a dict of events"}, "fn_lc": [[330, 4], [349, 29]], "fn_var_ln": {"cleared_events": [[342, 12], [342, 26]], "event_buffer": [[343, 12], [343, 29]]}, "fn_var_occur": {"cleared_events": [["cleared_events", "builtins", "dict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "EventBufferValueType"], ["cleared_events", "self", "event_buffer"], ["cleared_events", "ti_key", "self", "event_buffer", "pop", "ti_key"]], "event_buffer": [["cleared_events", "self", "event_buffer"], ["self", "event_buffer"], ["list", "self", "event_buffer", "keys"], ["cleared_events", "ti_key", "self", "event_buffer", "pop", "ti_key"]]}, "name": "get_event_buffer", "params": {"dag_ids": "", "self": ""}, "params_descr": {"dag_ids": "the dag_ids to return events for; returns all if given ``None``.", "self": ""}, "params_occur": {"dag_ids": [["dag_ids", "None"], ["ti_key", "dag_id", "dag_ids"]], "self": [["cleared_events", "self", "event_buffer"], ["self", "event_buffer"], ["list", "self", "event_buffer", "keys"], ["cleared_events", "ti_key", "self", "event_buffer", "pop", "ti_key"]]}, "params_p": {"args": [], "dag_ids": [["Optional[str]", 0.35900888605370723], ["str", 0.32062781379945693], ["Optional[int]", 0.24752658145704992], ["int", 0.07283671868978603]], "kwargs": [], "self": []}, "q_name": "BaseExecutor.get_event_buffer", "ret_exprs": ["return cleared_events"], "ret_type": "builtins.dict[airflow.models.taskinstancekey.TaskInstanceKey, EventBufferValueType]", "ret_type_p": [["str", 0.39865145860127815], ["cmk.utils.type_defs.HostName", 0.09300160092306509], ["cmk.utils.type_defs.ServiceName", 0.09300160092306509], ["app.models.Game", 0.08777582305669597]], "variables": {"cleared_events": "", "event_buffer": ""}, "variables_p": {"cleared_events": [["dict", 0.5382510923246078], ["Dict[str, Any]", 0.16177438050845305]], "event_buffer": [["list", 0.27942237765572103], ["str", 0.2047703265902005], ["Dict[str, str]", 0.11916172535942718], ["Tuple[int, int]", 0.0949629513155392]]}}, {"docstring": {"func": "This method will execute the command asynchronously.", "long_descr": null, "ret": null}, "fn_lc": [[351, 4], [366, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "execute_async", "params": {"command": "CommandType", "executor_config": "Any | None", "key": "airflow.models.taskinstancekey.TaskInstanceKey", "queue": "str | None", "self": ""}, "params_descr": {"command": "Command to run", "executor_config": "Configuration passed to the executor.", "key": "Unique key for the task instance", "queue": "name of the queue", "self": ""}, "params_occur": {"command": [], "executor_config": [], "key": [], "queue": [], "self": []}, "params_p": {"args": [], "command": [["float", 0.26495807522352777], ["Union[None, str, Iterable[str]]", 0.22387821500643992], ["int", 0.19973923256189424], ["bool", 0.0955491386357271], ["List[Dict]", 0.08878654484414722]], "executor_config": [["float", 0.26495807522352777], ["Union[None, str, Iterable[str]]", 0.22387821500643992], ["int", 0.19973923256189424], ["bool", 0.0955491386357271], ["List[Dict]", 0.08878654484414722]], "key": [["float", 0.26495807522352777], ["Union[None, str, Iterable[str]]", 0.22387821500643992], ["int", 0.19973923256189424], ["bool", 0.0955491386357271], ["List[Dict]", 0.08878654484414722]], "kwargs": [], "queue": [["float", 0.26495807522352777], ["Union[None, str, Iterable[str]]", 0.22387821500643992], ["int", 0.19973923256189424], ["bool", 0.0955491386357271], ["List[Dict]", 0.08878654484414722]], "self": []}, "q_name": "BaseExecutor.execute_async", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method can be implemented by any child class to return the task logs.", "long_descr": null, "ret": "tuple of logs and messages"}, "fn_lc": [[368, 4], [376, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_task_log", "params": {"self": "", "ti": "airflow.models.taskinstance.TaskInstance", "try_number": "builtins.int"}, "params_descr": {"self": "", "ti": "A TaskInstance object", "try_number": "current try_number to read log from"}, "params_occur": {"self": [], "ti": [], "try_number": []}, "params_p": {"args": [], "kwargs": [], "self": [], "ti": [["bool", 0.5301088402340536], ["str", 0.0826387280535913], ["Mapping[str, Any]", 0.08031107813727457]], "try_number": [["bool", 0.5301088402340536], ["str", 0.0826387280535913], ["Mapping[str, Any]", 0.08031107813727457]]}, "q_name": "BaseExecutor.get_task_log", "ret_exprs": ["return [], []"], "ret_type": "builtins.tuple[builtins.list[builtins.str], builtins.list[builtins.str]]", "ret_type_p": [["bool", 0.4962636184766833], ["str", 0.16311175275126538], ["int", 0.09360549258354418]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Wait synchronously for the previously submitted job to complete.", "long_descr": null, "ret": null}, "fn_lc": [[378, 4], [380, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "end", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.end", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method is called when the daemon receives a SIGTERM.", "long_descr": null, "ret": null}, "fn_lc": [[382, 4], [384, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "terminate", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.terminate", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Handle remnants of tasks that were failed because they were stuck in queued.", "long_descr": "Tasks can get stuck in queued. If such a task is detected, it will be marked\nas `UP_FOR_RETRY` if the task instance has remaining retries or marked as `FAILED`\nif it doesn't.", "ret": "List of readable task instances for a warning message"}, "fn_lc": [[386, 4], [397, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "cleanup_stuck_queued_tasks", "params": {"self": "", "tis": "builtins.list[airflow.models.taskinstance.TaskInstance]"}, "params_descr": {"self": "", "tis": "List of Task Instances to clean up"}, "params_occur": {"self": [], "tis": []}, "params_p": {"args": [], "kwargs": [], "self": [], "tis": [["T", 0.9999999907701093], ["bool", 2.9269942348257436e-09], ["List[dict]", 1.7188680653220874e-09], ["Awaitable[Any]", 1.2882879924793724e-09]]}, "q_name": "BaseExecutor.cleanup_stuck_queued_tasks", "ret_exprs": [], "ret_type": "builtins.list[builtins.str]", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Try to adopt running task instances that have been abandoned by a SchedulerJob dying.", "long_descr": "Anything that is not adopted will be cleared by the scheduler (and then become eligible for\nre-scheduling)", "ret": "any TaskInstances that were unable to be adopted"}, "fn_lc": [[399, 4], [410, 18]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "try_adopt_task_instances", "params": {"self": "", "tis": "typing.Sequence[airflow.models.taskinstance.TaskInstance]"}, "params_descr": {"self": "", "tis": ""}, "params_occur": {"self": [], "tis": []}, "params_p": {"args": [], "kwargs": [], "self": [], "tis": [["T", 0.23299711363537384], ["int", 0.0937932048876302], ["Awaitable[Any]", 0.044736972817813435], ["List[dict]", 0.040094674538955426]]}, "q_name": "BaseExecutor.try_adopt_task_instances", "ret_exprs": ["return tis"], "ret_type": "typing.Sequence[airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["str", 0.21726636648779765], ["bytes", 0.11137334121777376], ["bool", 0.10142916838373614], ["Sequence[float]", 0.0845756035539661]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Number of new tasks this executor instance can accept.", "long_descr": null, "ret": null}, "fn_lc": [[413, 4], [418, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "slots_available", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "parallelism"], ["self", "parallelism", "len", "self", "running", "len", "self", "queued_tasks"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.slots_available", "ret_exprs": ["return self.parallelism - len(self.running) - len(self.queued_tasks)", "return sys.maxsize"], "ret_type": "", "ret_type_p": [["int", 0.2818121108127036], ["bool", 0.1709588427639912], ["Callable", 0.09250584585840628]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Back-compat method to Check if the command to execute is airflow command.", "long_descr": null, "ret": null}, "fn_lc": [[421, 4], [434, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "validate_command", "params": {"command": "builtins.list[builtins.str]"}, "params_descr": {"command": "command to check"}, "params_occur": {"command": [["BaseExecutor", "validate_airflow_tasks_run_command", "command"]]}, "params_p": {"args": [], "command": [["str", 0.3081708914796521]], "kwargs": [], "self": []}, "q_name": "BaseExecutor.validate_command", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if the command to execute is airflow command.", "long_descr": "Returns tuple (dag_id,task_id) retrieved from the command (replaced with None values if missing)", "ret": null}, "fn_lc": [[437, 4], [456, 25]], "fn_var_ln": {"dag_id": [[451, 24], [451, 30]], "task_id": [[453, 24], [453, 31]]}, "fn_var_occur": {"dag_id": [["dag_id", "str", "None", "None"], ["dag_id", "None"], ["dag_id", "arg"], ["dag_id", "task_id"]], "task_id": [["task_id", "str", "None", "None"], ["task_id", "arg"], ["dag_id", "task_id"]]}, "name": "validate_airflow_tasks_run_command", "params": {"command": "builtins.list[builtins.str]"}, "params_descr": {"command": ""}, "params_occur": {"command": [["len", "command", "command"]]}, "params_p": {"args": [], "command": [["str", 0.5214744973814343], ["List[str]", 0.1046240078378762], ["zerver.models.Message", 0.09925563174857283], ["int", 0.09010787423201531]], "kwargs": [], "self": []}, "q_name": "BaseExecutor.validate_airflow_tasks_run_command", "ret_exprs": ["return dag_id, task_id", "return None, None"], "ret_type": "builtins.tuple[str | None, str | None]", "ret_type_p": [["Optional[bool]", 0.291176199117906], ["Dict[str, mypy.build.State]", 0.19234012673416004], ["int", 0.16696223174225816], ["Optional[float]", 0.08962091530737268], ["Optional[str]", 0.0871163322923826], ["bool", 0.08380133315068278]], "variables": {"dag_id": "", "task_id": ""}, "variables_p": {"dag_id": [["Optional[str]", 0.6891862640463474], ["dict", 0.21729008427082872], ["set", 0.09352365168282396]], "task_id": [["str", 0.4836598972363787], ["Optional[str]", 0.3278562097746151], ["Dict[str, str]", 0.0961037110901765]]}}, {"docstring": {"func": "Called in response to SIGUSR2 by the scheduler.", "long_descr": null, "ret": null}, "fn_lc": [[458, 4], [470, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "debug_dump", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "log", "info", "len", "self", "queued_tasks", "join", "map", "repr", "self", "queued_tasks", "items"], ["self", "log", "info", "len", "self", "running", "join", "map", "repr", "self", "running"], ["self", "log", "info", "len", "self", "event_buffer", "join", "map", "repr", "self", "event_buffer", "items"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseExecutor.debug_dump", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Sends callback for execution.", "long_descr": "Provides a default implementation which sends the callback to the `callback_sink` object.", "ret": null}, "fn_lc": [[472, 4], [481, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "send_callback", "params": {"request": "airflow.callbacks.callback_requests.CallbackRequest", "self": ""}, "params_descr": {"request": "Callback request to be executed.", "self": ""}, "params_occur": {"request": [["self", "callback_sink", "send", "request"]], "self": [["self", "callback_sink"], ["self", "callback_sink", "send", "request"]]}, "params_p": {"args": [], "kwargs": [], "request": [["grouper.models.user.User", 0.0948397989809656], ["grouper.models.base.session.Session", 0.0948397989809656]], "self": []}, "q_name": "BaseExecutor.send_callback", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "BaseExecutor", "q_name": "BaseExecutor", "variables": {"callback_sink": "BaseCallbackSink | None", "change_sensor_mode_to_reschedule": "builtins.bool", "is_local": "builtins.bool", "is_production": "builtins.bool", "is_single_threaded": "builtins.bool", "job_id": "None | int | str", "serve_logs": "builtins.bool", "supports_ad_hoc_ti_run": "builtins.bool", "supports_pickling": "builtins.bool", "supports_sentry": "builtins.bool"}, "variables_p": {"callback_sink": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "change_sensor_mode_to_reschedule": [["Dict[str, str]", 0.35623564225960885], ["Dict[Any, int]", 0.22089725273363514], ["str", 0.16805800967276863], ["int", 0.14252496330278583], ["Dict[str, int]", 0.11228413203120123]], "is_local": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "is_production": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "is_single_threaded": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "job_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "serve_logs": [["int", 0.3], ["str", 0.19999999999999998], ["bool", 0.09999999999999999], ["Tuple[str, str, str, str]", 0.09999999999999999], ["logging.Logger", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999], ["datetime.timedelta", 0.09999999999999999]], "supports_ad_hoc_ti_run": [["int", 0.9999999989659624], ["str", 8.733872743618552e-10], ["Dict[str, str]", 1.6065037170899338e-10]], "supports_pickling": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "supports_sentry": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "sys", "warnings", "collections", "OrderedDict", "defaultdict", "dataclasses", "dataclass", "field", "datetime", "datetime", "typing", "TYPE_CHECKING", "Any", "List", "Optional", "Sequence", "Tuple", "pendulum", "airflow", "configuration", "conf", "airflow", "exceptions", "RemovedInAirflow3Warning", "airflow", "stats", "Stats", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "utils", "state", "State", "airflow", "callbacks", "base_callback_sink", "BaseCallbackSink", "airflow", "callbacks", "callback_requests", "CallbackRequest", "airflow", "models", "taskinstance", "TaskInstance", "airflow", "models", "taskinstancekey", "TaskInstanceKey"], "mod_var_ln": {"CommandType": [[47, 4], [47, 15]], "EventBufferValueType": [[57, 4], [57, 24]], "PARALLELISM": [[36, 0], [36, 11]], "QueuedTaskInstanceType": [[53, 4], [53, 26]], "TaskTuple": [[60, 4], [60, 13]], "log": [[62, 0], [62, 3]]}, "mod_var_occur": {"CommandType": [["QueuedTaskInstanceType", "Tuple", "CommandType", "int", "Optional", "str", "TaskInstance"], ["TaskTuple", "Tuple", "TaskInstanceKey", "CommandType", "Optional", "str", "Optional", "Any"]], "EventBufferValueType": [["self", "event_buffer", "builtins", "dict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "EventBufferValueType"], ["cleared_events", "builtins", "dict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "EventBufferValueType"]], "PARALLELISM": [], "QueuedTaskInstanceType": [["self", "queued_tasks", "collections", "OrderedDict", "airflow", "models", "taskinstancekey", "TaskInstanceKey", "QueuedTaskInstanceType", "OrderedDict"]], "TaskTuple": [], "log": [["log", "debug", "elapsed", "self", "total_tries"], ["self", "log", "info", "command"], ["self", "log", "error", "task_instance", "key"], ["self", "log", "debug", "command_list_to_run"], ["self", "log", "debug", "num_running_tasks"], ["self", "log", "debug", "num_queued_tasks"], ["self", "log", "debug", "open_slots"], ["self", "log", "debug", "self", "__class__"], ["self", "log", "info", "attempt", "total_tries", "key"], ["self", "log", "error", "key", "attempt", "total_tries"], ["self", "log", "debug", "key"], ["self", "log", "debug", "str", "key"], ["self", "log", "info", "len", "self", "queued_tasks", "join", "map", "repr", "self", "queued_tasks", "items"], ["self", "log", "info", "len", "self", "running", "join", "map", "repr", "self", "running"], ["self", "log", "info", "len", "self", "event_buffer", "join", "map", "repr", "self", "event_buffer", "items"]]}, "no_types_annot": {"D": 69, "I": 0, "U": 37}, "session_id": "M4FzlnIbZCUVqkkbCi9BAo01saS3FZteHFuKKEW69UE", "set": null, "tc": [false, null], "type_annot_cove": 0.65, "typed_seq": "", "untyped_seq": "", "variables": {"CommandType": "", "EventBufferValueType": "", "PARALLELISM": "builtins.int", "QueuedTaskInstanceType": "", "TaskTuple": "", "log": ""}, "variables_p": {"CommandType": [["dict", 0.4768479958141786], ["Dict[str, Any]", 0.08076217913934997]], "EventBufferValueType": [["Dict[str, Any]", 0.7426369613133961], ["List[str]", 0.09097698272253504], ["Dict[Type[Any], Type[Any]]", 0.08504577252519412], ["Dict[str, str]", 0.0813402834388748]], "PARALLELISM": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "QueuedTaskInstanceType": [["int", 0.5167768888833328], ["Dict[int, Any]", 0.1040428546807481], ["Dict[str, Optional[str]]", 0.09774074587931562], ["Dict[str, str]", 0.09406757126051227]], "TaskTuple": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "log": [["logging.Logger", 1.0]]}}}