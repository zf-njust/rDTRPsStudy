{"error": null, "response": {"classes": [{"cls_lc": [[35, 0], [45, 32]], "cls_var_ln": {"DISABLE_PROPAGATE": [[45, 4], [45, 21]], "MAINTAIN_PROPAGATE": [[43, 4], [43, 22]]}, "cls_var_occur": {"DISABLE_PROPAGATE": [], "MAINTAIN_PROPAGATE": []}, "funcs": [], "name": "SetContextPropagate", "q_name": "SetContextPropagate", "variables": {"DISABLE_PROPAGATE": "", "MAINTAIN_PROPAGATE": ""}, "variables_p": {"DISABLE_PROPAGATE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "MAINTAIN_PROPAGATE": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[67, 0], [93, 42]], "cls_var_ln": {"_log": [[70, 4], [70, 8]]}, "cls_var_occur": {"_log": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [73, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"context": "", "self": ""}, "params_descr": {"context": "", "self": ""}, "params_occur": {"context": [["self", "_set_context", "context"]], "self": [["self", "_set_context", "context"]]}, "params_p": {"args": [], "context": [["str", 0.29313584353978517], ["int", 0.173432686614799], ["Optional[Callable]", 0.09476337880014087], ["metrics_backend.utils.Address", 0.08148188910950115], ["bool", 0.07550655152936327]], "kwargs": [], "self": []}, "q_name": "LoggingMixin.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 4], [79, 23]], "fn_var_ln": {"_log": [[78, 12], [78, 20]]}, "fn_var_occur": {"_log": [["obj", "_log", "None"], ["obj", "_log", "logging", "getLogger", "clazz", "__module__", "clazz", "__name__"], ["obj", "_log"]]}, "name": "_get_log", "params": {"clazz": "builtins.type[_T]", "obj": "typing.Any"}, "params_descr": {"clazz": "", "obj": ""}, "params_occur": {"clazz": [["obj", "_log", "logging", "getLogger", "clazz", "__module__", "clazz", "__name__"]], "obj": [["obj", "_log", "None"], ["obj", "_log", "logging", "getLogger", "clazz", "__module__", "clazz", "__name__"], ["obj", "_log"]]}, "params_p": {"args": [], "clazz": [["logging.Logger", 0.6381690091714166], ["str", 0.18026623352465765], ["Optional[logging.Logger]", 0.08958327827940239]], "kwargs": [], "obj": [["logging.Logger", 0.44272191200834027], ["Optional[logging.Logger]", 0.18370395680695067], ["bool", 0.09515240690816362], ["logging.Formatter", 0.09099239037660507], ["str", 0.09034450292415722]], "self": []}, "q_name": "LoggingMixin._get_log", "ret_exprs": ["return obj._log"], "ret_type": "logging.Logger", "ret_type_p": [["bool", 0.2962995119028112], ["str", 0.1775120104825775], ["Optional[str]", 0.11408267937948798], ["Dict[str, 'LabwareDefinition']", 0.11275370129876054], ["List[str]", 0.087901781336318]], "variables": {"_log": ""}, "variables_p": {"_log": [["logging.Logger", 0.9132749555729041], ["Optional[logging.Logger]", 0.08672504442709585]]}}, {"docstring": {"func": "Returns a logger.", "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [84, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "logger", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["LoggingMixin", "_get_log", "cls", "cls"]]}, "params_p": {"args": [], "cls": [["Dict[str, Any]", 0.2854759902070255], ["dict", 0.19662371878733303], ["IO", 0.11020762056828123], ["Match", 0.09443290409189035]], "kwargs": [], "self": []}, "q_name": "LoggingMixin.logger", "ret_exprs": ["return LoggingMixin._get_log(cls, cls)"], "ret_type": "logging.Logger", "ret_type_p": [["str", 0.5088460939281539], ["int", 0.280766793698777]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns a logger.", "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [89, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "log", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["LoggingMixin", "_get_log", "self", "self", "__class__"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "LoggingMixin.log", "ret_exprs": ["return LoggingMixin._get_log(self, self.__class__)"], "ret_type": "logging.Logger", "ret_type_p": [["Optional[str]", 0.5199249393961793], ["str", 0.26702091901417047], ["Tuple[str, str]", 0.13023436229954255], ["Tuple[Optional[str], Optional[str]]", 0.0828197792901075]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [93, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_set_context", "params": {"context": "", "self": ""}, "params_descr": {"context": "", "self": ""}, "params_occur": {"context": [["context", "None"], ["set_context", "self", "log", "context"]], "self": [["set_context", "self", "log", "context"]]}, "params_p": {"args": [], "context": [["Optional[bool]", 0.36851995024771134], ["Optional[float]", 0.17241930320922935], ["int", 0.09152761158720904], ["bool", 0.08929043459569422]], "kwargs": [], "self": []}, "q_name": "LoggingMixin._set_context", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "LoggingMixin", "q_name": "LoggingMixin", "variables": {"_log": "logging.Logger | None"}, "variables_p": {"_log": [["str", 0.30000000000000004], ["logging.Logger", 0.2], ["bool", 0.1], ["Dict[str, Union[Any, Any, Any]]", 0.1], ["Dict[str, Union[Any, Any, Any, Any]]", 0.1], ["Dict[str, Union[dict, Any, Any, Any, Any]]", 0.1], ["neonbohelpers.log.Log", 0.1]]}}, {"cls_lc": [[96, 0], [111, 71]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Return log name.", "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [102, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "log_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ExternalLoggingMixin.log_name", "ret_exprs": [], "ret_type": "builtins.str", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return the URL for log visualization in the external service.", "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [106, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_external_log_url", "params": {"self": "", "task_instance": "", "try_number": ""}, "params_descr": {"self": "", "task_instance": "", "try_number": ""}, "params_occur": {"self": [], "task_instance": [], "try_number": []}, "params_p": {"args": [], "kwargs": [], "self": [], "task_instance": [["Dict[str, Any]", 0.2641743740047296], ["dict", 0.13413203424975248], ["bool", 0.1273673308955477], ["Callable", 0.06336883896457361]], "try_number": [["Dict[str, Any]", 0.2641743740047296], ["dict", 0.13413203424975248], ["bool", 0.1273673308955477], ["Callable", 0.06336883896457361]]}, "q_name": "ExternalLoggingMixin.get_external_log_url", "ret_exprs": [], "ret_type": "builtins.str", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return whether handler is able to support external links.", "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [111, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "supports_external_link", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ExternalLoggingMixin.supports_external_link", "ret_exprs": [], "ret_type": "builtins.bool", "variables": {}, "variables_p": {}}], "name": "ExternalLoggingMixin", "q_name": "ExternalLoggingMixin", "variables": {}, "variables_p": {}}, {"cls_lc": [[120, 0], [179, 20]], "cls_var_ln": {"encoding": [[123, 4], [123, 12]]}, "cls_var_occur": {"encoding": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": ""}, "fn_lc": [[125, 4], [132, 25]], "fn_var_ln": {"_buffer": [[132, 8], [132, 20]], "level": [[131, 8], [131, 18]], "logger": [[130, 8], [130, 19]]}, "fn_var_occur": {"_buffer": [["self", "_buffer"]], "level": [["self", "level", "level"]], "logger": [["self", "logger", "logger"]]}, "name": "__init__", "params": {"level": "", "logger": "", "self": ""}, "params_descr": {"level": "", "logger": "", "self": ""}, "params_occur": {"level": [["self", "level", "level"]], "logger": [["self", "logger", "logger"]], "self": [["self", "logger", "logger"], ["self", "level", "level"], ["self", "_buffer"]]}, "params_p": {"args": [], "kwargs": [], "level": [["int", 0.2990856771869281], ["bool", 0.09969522572897603]], "logger": [["str", 0.3450386330563593], ["logging.Logger", 0.3021400589398521], ["List[str]", 0.10098284255189445], ["Tuple[Tuple[str, ...]]", 0.08529929804808717]], "self": []}, "q_name": "StreamLogWriter.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_buffer": "", "level": "", "logger": ""}, "variables_p": {"_buffer": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "level": [["int", 0.9999999999625897], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 1.2641112853650752e-11], ["float", 1.2543617338401103e-11], ["frozenset[str]", 1.2225574607675258e-11]], "logger": [["logging.Logger", 0.9999999998421858], ["pineboolib.core.utils.logging.Logger", 1.5781413612771555e-10]]}}, {"docstring": {"func": "Provide close method, for compatibility with the io.IOBase interface.", "long_descr": "This is a no-op method.", "ret": null}, "fn_lc": [[134, 4], [139, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "close", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StreamLogWriter.close", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns False to indicate that the stream is not closed, as it will be", "long_descr": "open for the duration of Airflow's lifecycle.\n\nFor compatibility with the io.IOBase interface.", "ret": null}, "fn_lc": [[142, 4], [149, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "closed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StreamLogWriter.closed", "ret_exprs": ["return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Propagate message removing escape codes.", "long_descr": null, "ret": null}, "fn_lc": [[151, 4], [153, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_propagate_log", "params": {"message": "", "self": ""}, "params_descr": {"message": "", "self": ""}, "params_occur": {"message": [["self", "logger", "log", "self", "level", "remove_escape_codes", "message"]], "self": [["self", "logger", "log", "self", "level", "remove_escape_codes", "message"]]}, "params_p": {"args": [], "kwargs": [], "message": [["int", 1.0]], "self": []}, "q_name": "StreamLogWriter._propagate_log", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Do whatever it takes to actually log the specified logging record.", "long_descr": null, "ret": null}, "fn_lc": [[155, 4], [165, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "write", "params": {"message": "", "self": ""}, "params_descr": {"message": "message to log", "self": ""}, "params_occur": {"message": [["message", "endswith"], ["self", "_buffer", "message"], ["self", "_buffer", "message", "rstrip"]], "self": [["self", "_buffer", "message"], ["self", "_buffer", "message", "rstrip"], ["self", "flush"]]}, "params_p": {"args": [], "kwargs": [], "message": [["str", 0.767370384753479], ["bool", 0.14904132127572184], ["int", 0.08358829397079948]], "self": []}, "q_name": "StreamLogWriter.write", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Ensure all logging output has been flushed.", "long_descr": null, "ret": null}, "fn_lc": [[167, 4], [172, 36]], "fn_var_ln": {"_buffer": [[171, 12], [171, 24]], "buf": [[169, 8], [169, 11]]}, "fn_var_occur": {"_buffer": [["buf", "self", "_buffer"], ["self", "_buffer"]], "buf": [["buf", "self", "_buffer"], ["len", "buf"], ["self", "_propagate_log", "buf"]]}, "name": "flush", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["buf", "self", "_buffer"], ["self", "_buffer"], ["self", "_propagate_log", "buf"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StreamLogWriter.flush", "ret_exprs": [], "ret_type": "", "variables": {"_buffer": "", "buf": ""}, "variables_p": {"_buffer": [["int", 0.2500000000278155], ["float", 0.24999999997218456], ["list", 0.24999999997218456], ["List[Callable[[], bool]]", 0.24999999997218456], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.8543653751156643e-11], ["bool", 1.8543653751156643e-11], ["Type[str]", 1.8543653751156643e-11]], "buf": [["str", 0.3610341982786204], ["int", 0.2026480668851286], ["bytes", 0.174212407810634], ["bytearray", 0.07207184045443316]]}}, {"docstring": {"func": "Returns False to indicate the fd is not connected to a tty(-like) device.", "long_descr": "For compatibility reasons.", "ret": null}, "fn_lc": [[174, 4], [179, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "isatty", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StreamLogWriter.isatty", "ret_exprs": ["return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}], "name": "StreamLogWriter", "q_name": "StreamLogWriter", "variables": {"encoding": "None"}, "variables_p": {"encoding": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[182, 0], [215, 25]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [203, 30]], "fn_var_ln": {"_orig_stream": [[201, 12], [201, 29]], "_use_stderr": [[198, 12], [198, 28]]}, "fn_var_occur": {"_orig_stream": [["self", "_orig_stream", "sys", "stdout"], ["self", "_orig_stream", "sys", "stderr"]], "_use_stderr": [["self", "_use_stderr", "True"], ["self", "_use_stderr", "False"]]}, "name": "__init__", "params": {"self": "", "stream": ""}, "params_descr": {"self": "", "stream": ""}, "params_occur": {"self": [["self", "_use_stderr", "True"], ["self", "_use_stderr", "False"], ["self", "_orig_stream", "sys", "stdout"], ["self", "_orig_stream", "sys", "stderr"], ["Handler", "__init__", "self"]], "stream": [["isinstance", "stream", "str"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "stream": [["bytes", 0.19254911668304597], ["dict", 0.17931186525003365], ["str", 0.09595396060269455]]}, "q_name": "RedirectStdHandler.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_orig_stream": "", "_use_stderr": ""}, "variables_p": {"_orig_stream": [["str", 0.22142573699069037], ["bytes", 0.19543728710902888], ["list", 0.19264197584931728], ["float", 0.09640007451644636], ["int", 0.09364844866143972]], "_use_stderr": [["str", 0.7788892576190155], ["bool", 0.08619701634247427]]}}, {"docstring": {"func": "Returns current stream.", "long_descr": null, "ret": null}, "fn_lc": [[206, 4], [215, 25]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "stream", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_orig_stream"], ["self", "_use_stderr"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "RedirectStdHandler.stream", "ret_exprs": ["return self._orig_stream", "return sys.stderr", "return sys.stdout"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}], "name": "RedirectStdHandler", "q_name": "RedirectStdHandler", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 0], [53, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__getattr__", "params": {"name": ""}, "params_descr": {"name": ""}, "params_occur": {"name": [["AttributeError", "__name__", "name"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.9154605791818489], ["Sequence[str]", 0.08453942081815131]]}, "q_name": "__getattr__", "ret_exprs": ["return SetContextPropagate.DISABLE_PROPAGATE"], "ret_type": "", "ret_type_p": [["List[str]", 0.19157445352231398], ["Set[str]", 0.1567594398604707], ["set", 0.15070887575711223], ["str", 0.12318252840252543], ["Dict[str, Set[str]]", 0.08586466192433476], ["Callable[..., None]", 0.08345049998380749]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Remove ANSI escapes codes from string. It's used to remove", "long_descr": "\"colors\" from log messages.", "ret": null}, "fn_lc": [[56, 0], [61, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "remove_escape_codes", "params": {"text": "builtins.str"}, "params_descr": {"text": ""}, "params_occur": {"text": [["ANSI_ESCAPE", "sub", "text"]]}, "params_p": {"args": [], "kwargs": [], "text": [["str", 1.0000000000000002]]}, "q_name": "remove_escape_codes", "ret_exprs": ["return ANSI_ESCAPE.sub(\"\", text)"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.29686333806363646], ["List[str]", 0.0991328343087208], ["bool", 0.09472315205669102], ["Iterable[int]", 0.09214498792412892]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Walks the tree of loggers and tries to set the context for each handler.", "long_descr": null, "ret": null}, "fn_lc": [[218, 0], [245, 17]], "fn_var_ln": {"flag": [[236, 16], [236, 20]], "logger": [[243, 12], [243, 18]], "orig_propagate": [[226, 8], [226, 22]], "propagate": [[240, 20], [240, 36]]}, "fn_var_occur": {"flag": [["flag", "cast", "FileTaskHandler", "handler", "set_context", "value"], ["flag", "SetContextPropagate", "MAINTAIN_PROPAGATE"]], "logger": [["orig_propagate", "logger", "propagate"], ["logger", "handlers"], ["logger", "propagate", "False"], ["logger", "logger", "parent"]], "orig_propagate": [["orig_propagate", "logger", "propagate"], ["orig_propagate", "True"]], "propagate": [["orig_propagate", "logger", "propagate"], ["logger", "propagate", "False"]]}, "name": "set_context", "params": {"logger": "", "value": ""}, "params_descr": {"logger": "logger", "value": "value to set"}, "params_occur": {"logger": [["orig_propagate", "logger", "propagate"], ["logger", "handlers"], ["logger", "propagate", "False"], ["logger", "logger", "parent"]], "value": [["flag", "cast", "FileTaskHandler", "handler", "set_context", "value"]]}, "params_p": {"args": [], "kwargs": [], "logger": [["int", 0.308027206899402], ["str", 0.22258506418725688], ["logging.Logger", 0.19033593332529097], ["Exception", 0.08469783168359564]], "value": [["bool", 0.11179058166855849], ["int", 0.1075011358715142], ["List[Dict[str, Any]]", 0.10041839300276967], ["float", 0.09810569957904301], ["str", 0.09782321402829057], ["Optional[bool]", 0.09782321402829057], ["Dict[str, Any]", 0.09716164077327476], ["Dict[str, object]", 0.09577645350998407]]}, "q_name": "set_context", "ret_exprs": [], "ret_type": "", "variables": {"flag": "", "logger": "", "orig_propagate": "", "propagate": ""}, "variables_p": {"flag": [["str", 0.4866883090613985], ["List[str]", 0.236343488152519], ["logging.Formatter", 0.08013553091372637]], "logger": [["logging.Logger", 0.9999999999999999]], "orig_propagate": [["iris.utils.prom_helpers.PromFileWriter", 0.10438364810785847], ["Union[Literal, str]", 0.10427131970460268], ["Union[Literal[True], str]", 0.10427131970460268]], "propagate": [["logging.StreamHandler", 0.5148665161075594], ["logging.Handler", 0.07621541008399199], ["logging.FileHandler", 0.07566583029039393], ["logging.handlers.RotatingFileHandler", 0.07340755845605727]]}}], "imports": ["__future__", "annotations", "abc", "enum", "logging", "sys", "io", "IOBase", "logging", "Handler", "Logger", "StreamHandler", "typing", "IO", "Any", "TypeVar", "cast", "re2", "airflow", "settings", "IS_K8S_EXECUTOR_POD", "airflow", "utils", "log", "file_task_handler", "FileTaskHandler"], "mod_var_ln": {"ANSI_ESCAPE": [[31, 0], [31, 11]], "_T": [[64, 0], [64, 2]]}, "mod_var_occur": {"ANSI_ESCAPE": [["ANSI_ESCAPE", "sub", "text"]], "_T": []}, "no_types_annot": {"D": 12, "I": 0, "U": 39}, "session_id": "zjMQjXFtjf7H0niv706xyNeWPuDm84MYZruEB53kJcE", "set": null, "tc": [false, null], "type_annot_cove": 0.24, "typed_seq": "", "untyped_seq": "", "variables": {"ANSI_ESCAPE": "", "_T": ""}, "variables_p": {"ANSI_ESCAPE": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "_T": [["str", 0.9999999999999999]]}}}