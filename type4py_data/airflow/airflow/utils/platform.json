{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Checks if the standard output is connected (is associated with a terminal device) to a tty(-like)", "long_descr": "device.", "ret": null}, "fn_lc": [[34, 0], [41, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_tty", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_tty", "ret_exprs": ["return False", "return sys.stdout.isatty()"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Try to determine if the current terminal supports colors.", "long_descr": null, "ret": null}, "fn_lc": [[44, 0], [55, 16]], "fn_var_ln": {"term": [[52, 4], [52, 8]]}, "fn_var_occur": {"term": [["term", "os", "environ", "get", "lower"], ["term", "term"]]}, "name": "is_terminal_support_colors", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "is_terminal_support_colors", "ret_exprs": ["return False", "return False", "return True", "return True", "return False"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"term": ""}, "variables_p": {"term": [["str", 1.0]]}}, {"docstring": {"func": "Returns the git commit hash representing the current version of the application.", "long_descr": null, "ret": null}, "fn_lc": [[58, 0], [66, 22]], "fn_var_ln": {"git_version": [[62, 8], [62, 19]]}, "fn_var_occur": {"git_version": [["git_version", "None"], ["git_version", "str", "pkgutil", "get_data", "encoding"]]}, "name": "get_airflow_git_version", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_airflow_git_version", "ret_exprs": ["return git_version"], "ret_type": "", "ret_type_p": [["str", 0.8100548420399551]], "variables": {"git_version": ""}, "variables_p": {"git_version": [["Optional[str]", 0.5358831803958853], ["str", 0.0858607231193377]]}}, {"docstring": {"func": "Gets the username associated with the current user, or error with a nice", "long_descr": "error message if there's no current user.\n\nWe don't want to fall back to os.getuid() because not having a username\nprobably means the rest of the user environment is wrong (e.g. no $HOME).\nExplicit failure is better than silently trying to work badly.", "ret": null}, "fn_lc": [[70, 0], [89, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "getuser", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "getuser", "ret_exprs": ["return getpass.getuser()"], "ret_type": "builtins.str", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "getpass", "logging", "os", "pkgutil", "platform", "sys", "airflow", "compat", "functools", "cache", "airflow", "exceptions", "AirflowConfigException"], "mod_var_ln": {"IS_WINDOWS": [[29, 0], [29, 10]], "log": [[31, 0], [31, 3]]}, "mod_var_occur": {"IS_WINDOWS": [], "log": [["log", "debug", "e"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 6}, "session_id": "wkEZMMQZ4J6xIjAQqf4CRDAtL76EBZr7OlsqG4uUXqk", "set": null, "tc": [false, null], "type_annot_cove": 0.25, "typed_seq": "", "untyped_seq": "", "variables": {"IS_WINDOWS": "", "log": ""}, "variables_p": {"IS_WINDOWS": [["bool", 1.0]], "log": [["logging.Logger", 0.9999999999999999]]}}}