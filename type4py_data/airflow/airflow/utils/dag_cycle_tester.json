{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "A wrapper function of `check_cycle` for backward compatibility purpose.", "long_descr": "New code should use `check_cycle` instead since this function name `test_cycle` starts with 'test_' and\nwill be considered as a unit test by pytest, resulting in failure.", "ret": null}, "fn_lc": [[33, 0], [46, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cycle", "params": {"dag": "airflow.models.dag.DAG"}, "params_descr": {"dag": ""}, "params_occur": {"dag": [["check_cycle", "dag"]]}, "params_p": {"args": [], "dag": [["str", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": []}, "q_name": "test_cycle", "ret_exprs": ["return check_cycle(dag)"], "ret_type": "None", "ret_type_p": [["str", 0.09999999999999999], ["float", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns first untraversed child task, else None if all tasks traversed.", "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [67, 19]], "fn_var_ln": {"msg": [[63, 16], [63, 19]]}, "fn_var_occur": {"msg": [["msg", "dag", "dag_id", "task_id"], ["AirflowDagCycleException", "msg"]]}, "name": "_check_adjacent_tasks", "params": {"current_task": "", "task_id": ""}, "params_descr": {"current_task": "", "task_id": ""}, "params_occur": {"current_task": [["current_task", "get_direct_relative_ids"]], "task_id": [["msg", "dag", "dag_id", "task_id"]]}, "params_p": {"args": [], "current_task": [["bool", 0.194954202336604], ["dict", 0.12709128495517005], ["str", 0.09086909061636006]], "kwargs": [], "task_id": [["str", 0.409287159083706], ["Dict[str, Any]", 0.10901323479886317], ["Mapping[str, Any]", 0.09752759145722649], ["int", 0.09752759145722649]]}, "q_name": "check_cycle.<locals>._check_adjacent_tasks", "ret_exprs": ["return adjacent_task", "return None"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.20975425329882866], ["Optional[bool]", 0.1743306205892851], ["Iterable[T]", 0.11351506388167457], ["dict", 0.11056387785142881], ["Optional[dict]", 0.08896751063745158]], "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.496889273385688], ["int", 0.18543302484962151]]}}, {"docstring": {"func": "Check to see if there are any cycles in the DAG.", "long_descr": null, "ret": null}, "fn_lc": [[49, 0], [83, 49]], "fn_var_ln": {"child_to_check": [[78, 12], [78, 26]], "current_task_id": [[74, 12], [74, 27]], "path_stack": [[56, 4], [56, 14]], "task": [[77, 12], [77, 16]], "task_dict": [[57, 4], [57, 13]], "visited": [[55, 4], [55, 11]]}, "fn_var_occur": {"child_to_check": [["child_to_check", "_check_adjacent_tasks", "current_task_id", "task"], ["path_stack", "append", "child_to_check"]], "current_task_id": [["current_task_id", "path_stack"], ["visited", "current_task_id", "CYCLE_NEW"], ["visited", "current_task_id", "CYCLE_IN_PROGRESS"], ["task", "task_dict", "current_task_id"], ["child_to_check", "_check_adjacent_tasks", "current_task_id", "task"], ["visited", "current_task_id", "CYCLE_DONE"]], "path_stack": [["path_stack", "append", "dag_task_id"], ["current_task_id", "path_stack"], ["path_stack", "pop"], ["path_stack", "append", "child_to_check"]], "task": [["task", "task_dict", "current_task_id"], ["child_to_check", "_check_adjacent_tasks", "current_task_id", "task"]], "task_dict": [["dag", "task_dict", "keys"], ["task", "task_dict", "current_task_id"]], "visited": [["visited", "dag_task_id", "CYCLE_DONE"], ["visited", "current_task_id", "CYCLE_NEW"], ["visited", "current_task_id", "CYCLE_IN_PROGRESS"], ["visited", "current_task_id", "CYCLE_DONE"]]}, "name": "check_cycle", "params": {"dag": "airflow.models.dag.DAG"}, "params_descr": {"dag": ""}, "params_occur": {"dag": [["dag", "task_dict", "keys"]]}, "params_p": {"args": [], "dag": [["str", 0.3923683003920948], ["List[Dict[str, Any]]", 0.20033047122393322], ["Dict[str, Any]", 0.09857662996202836]], "kwargs": []}, "q_name": "check_cycle", "ret_exprs": [], "ret_type": "None", "variables": {"child_to_check": "", "current_task_id": "", "path_stack": "collections.deque[builtins.str]", "task": "", "task_dict": "", "visited": "builtins.dict[builtins.str, builtins.int]"}, "variables_p": {"child_to_check": [["Dict[str, Any]", 0.20276875499695957], ["Dict[Any, str]", 0.18357488160976435], ["Dict[str, str]", 0.13652797398438435], ["dict", 0.09865505412482073], ["List[str]", 0.0943747900817642], ["Pattern[Any]", 0.09385947467143604], ["list", 0.09373184960877119]], "current_task_id": [["int", 0.22839937010079553], ["Set[int]", 0.17823997964311722], ["str", 0.09579272027602762], ["taxonomy.db.models.base.EnumField", 0.09573403765259521], ["Dict[str, int]", 0.09462784091948111]], "path_stack": [["list", 0.9999999999999999]], "task": [["dict", 0.5191781504507015], ["Dict[str, Any]", 0.3942967437588185]], "task_dict": [["Dict[str, Any]", 0.3833383872245898], ["dict", 0.33282466575230096], ["Dict[str, str]", 0.09634273292774871], ["zerver.models.UserProfile", 0.09463348997235212], ["str", 0.09286072412300837]], "visited": [["dict", 0.3945486383397152], ["List[str]", 0.200703538319196], ["Dict[str, str]", 0.10919350665976889], ["DefaultDict[Any, List[Any]]", 0.10394113284022129], ["Dict[int, Union[Any, Any, Any, Any]]", 0.09687555955554447]]}}], "imports": ["__future__", "annotations", "collections", "defaultdict", "deque", "typing", "TYPE_CHECKING", "airflow", "exceptions", "AirflowDagCycleException", "RemovedInAirflow3Warning", "airflow", "models", "dag", "DAG", "warnings", "warn"], "mod_var_ln": {"CYCLE_DONE": [[30, 0], [30, 10]], "CYCLE_IN_PROGRESS": [[29, 0], [29, 17]], "CYCLE_NEW": [[28, 0], [28, 9]]}, "mod_var_occur": {"CYCLE_DONE": [["visited", "dag_task_id", "CYCLE_DONE"], ["visited", "current_task_id", "CYCLE_DONE"]], "CYCLE_IN_PROGRESS": [["visited", "adjacent_task", "CYCLE_IN_PROGRESS"], ["visited", "current_task_id", "CYCLE_IN_PROGRESS"]], "CYCLE_NEW": [["visited", "adjacent_task", "CYCLE_NEW"], ["visited", "current_task_id", "CYCLE_NEW"]]}, "no_types_annot": {"D": 6, "I": 0, "U": 11}, "session_id": "y4bWW8Z76eBRCPwRV4vuD7Z-5G1nCaV5FRwBUsISRrc", "set": null, "tc": [false, null], "type_annot_cove": 0.35, "typed_seq": "", "untyped_seq": "", "variables": {"CYCLE_DONE": "", "CYCLE_IN_PROGRESS": "", "CYCLE_NEW": ""}, "variables_p": {"CYCLE_DONE": [["int", 0.2844735704463261], ["Dict[str, Dict[str, Any]]", 0.13719183223304063], ["dict", 0.12818663150040546], ["List[str]", 0.08778955608829048], ["set", 0.084791154975735], ["str", 0.08090481876915155]], "CYCLE_IN_PROGRESS": [["int", 0.38971803787505355], ["Set[int]", 0.11553295724764959], ["Dict[str, Type]", 0.10247828595335275], ["Tuple[int, int]", 0.10089079427801986], ["str", 0.10010425132244115], ["list", 0.09056580835746317]], "CYCLE_NEW": [["Dict[str, int]", 0.39743941173627856], ["list", 0.1317007074205818], ["Pattern[Any]", 0.09492544603711066], ["List[Tuple[str, str]]", 0.09153346147978265], ["str", 0.09094157044979016], ["Union[bytes, str]", 0.09047232059095835]]}}}