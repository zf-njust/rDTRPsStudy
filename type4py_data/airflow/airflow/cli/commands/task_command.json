{"error": null, "response": {"classes": [{"cls_lc": [[346, 0], [347, 93]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "TaskCommandMarker", "q_name": "TaskCommandMarker", "variables": {}, "variables_p": {}}, {"cls_lc": [[492, 0], [494, 11]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[493, 4], [494, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "post_mortem", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "_SupportedDebugger.post_mortem", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "_SupportedDebugger", "q_name": "_SupportedDebugger", "variables": {}, "variables_p": {}}, {"cls_lc": [[686, 0], [733, 20]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[693, 4], [697, 35]], "fn_var_ln": {"handlers": [[694, 8], [694, 21]], "level": [[695, 8], [695, 18]], "propagate": [[696, 8], [696, 22]], "source_logger": [[697, 8], [697, 26]]}, "fn_var_occur": {"handlers": [["self", "handlers", "logger", "handlers"]], "level": [["self", "level", "logger", "level"]], "propagate": [["self", "propagate", "logger", "propagate"]], "source_logger": [["self", "source_logger", "logger"]]}, "name": "__init__", "params": {"logger": "logging.Logger", "self": ""}, "params_descr": {"logger": "", "self": ""}, "params_occur": {"logger": [["self", "handlers", "logger", "handlers"], ["self", "level", "logger", "level"], ["self", "propagate", "logger", "propagate"], ["self", "source_logger", "logger"]], "self": [["self", "handlers", "logger", "handlers"], ["self", "level", "logger", "level"], ["self", "propagate", "logger", "propagate"], ["self", "source_logger", "logger"]]}, "params_p": {"args": [], "kwargs": [], "logger": [["int", 0.5159991421658885], ["logging.Logger", 0.23670065088264747], ["qutebrowser.utils.usertypes.KeyMode", 0.08643514100008437], ["Exception", 0.08128856650715859], ["str", 0.07957649944422107]], "self": []}, "q_name": "LoggerMutationHelper.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"handlers": "", "level": "", "propagate": "", "source_logger": ""}, "variables_p": {"handlers": [["dict", 0.13942321029299612], ["logging.Formatter", 0.13202879491759464], ["int", 0.11096213553802507], ["bool", 0.09256381430060431], ["logging.Logger", 0.08830928612203624], ["str", 0.07866790885109988]], "level": [["Dict[str, str]", 0.35760784934462236], ["Type[Callable[Any, str]]", 0.10593472631953546], ["List[str]", 0.09825311204433207], ["str", 0.09537265803978989]], "propagate": [["logging.Formatter", 0.8720865546570029], ["logging.StreamHandler", 0.06538938882158661]], "source_logger": [["str", 0.42114028094912326], ["dict", 0.3656497987662034], ["int", 0.1338570267302753], ["Union[str, int]", 0.07935289355439805]]}}, {"docstring": {"func": "Set ``logger`` with attrs stored on instance.", "long_descr": "If ``logger`` is root logger, don't change propagate.", "ret": null}, "fn_lc": [[699, 4], [713, 45]], "fn_var_ln": {"level": [[711, 8], [711, 20]], "propagate": [[713, 12], [713, 28]]}, "fn_var_occur": {"level": [["logger", "level", "self", "level"]], "propagate": [["logger", "propagate", "self", "propagate"]]}, "name": "apply", "params": {"logger": "logging.Logger", "replace": "builtins.bool", "self": ""}, "params_descr": {"logger": "", "replace": "", "self": ""}, "params_occur": {"logger": [["logger", "handlers", "self", "handlers"], ["h", "logger", "handlers"], ["logger", "addHandler", "h"], ["logger", "level", "self", "level"], ["logger", "logging", "getLogger"], ["logger", "propagate", "self", "propagate"]], "replace": [], "self": [["logger", "handlers", "self", "handlers"], ["self", "handlers"], ["logger", "level", "self", "level"], ["logger", "propagate", "self", "propagate"]]}, "params_p": {"args": [], "kwargs": [], "logger": [["logging.Logger", 0.7177743276629717], ["float", 0.11137043506955013], ["str", 0.061239925802815426], ["bool", 0.05094438118569622]], "replace": [["Iterable[str]", 0.999999429444794], ["str", 1.0907728306813754e-07], ["int", 1.0907728306813754e-07], ["Optional[logging.Logger]", 7.355193919388889e-08], ["utils.CWLObjectType", 7.355193919388889e-08], ["Callable[[str], None]", 5.8192882983697113e-08]], "self": []}, "q_name": "LoggerMutationHelper.apply", "ret_exprs": [], "ret_type": "None", "variables": {"level": "", "propagate": ""}, "variables_p": {"level": [["Optional[str]", 0.2958483266082038], ["dict", 0.2371973447661455], ["str", 0.15826862575262232], ["list", 0.10503479700181349], ["Optional[int]", 0.09861610886940127]], "propagate": [["str", 0.3934111344846902], ["float", 0.21035396204297985], ["set", 0.17984091202737496], ["int", 0.13819773564012344], ["List[int]", 0.07819625580483171]]}}, {"docstring": {"func": "Replace ``logger`` attrs with those from source.", "long_descr": null, "ret": null}, "fn_lc": [[715, 4], [724, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "move", "params": {"logger": "logging.Logger", "replace": "builtins.bool", "self": ""}, "params_descr": {"logger": "target logger", "replace": "if True, remove all handlers from target first; otherwise add if not present.", "self": ""}, "params_occur": {"logger": [["self", "apply", "logger", "replace", "replace"]], "replace": [["self", "apply", "logger", "replace", "replace"]], "self": [["self", "apply", "logger", "replace", "replace"], ["self", "source_logger", "propagate", "True"], ["self", "source_logger", "handlers"]]}, "params_p": {"args": [], "kwargs": [], "logger": [["str", 0.195410676657212], ["int", 0.08297022656770424], ["logging.LogRecord", 0.06239753704342287]], "replace": [["str", 0.195410676657212], ["int", 0.08297022656770424], ["logging.LogRecord", 0.06239753704342287]], "self": []}, "q_name": "LoggerMutationHelper.move", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[726, 4], [727, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "reset", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "apply", "self", "source_logger"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "LoggerMutationHelper.reset", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[729, 4], [730, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__enter__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "LoggerMutationHelper.__enter__", "ret_exprs": ["return self"], "ret_type": "LoggerMutationHelper", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[732, 4], [733, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__exit__", "params": {"exc_tb": "", "exc_type": "", "exc_val": "", "self": ""}, "params_descr": {"exc_tb": "", "exc_type": "", "exc_val": "", "self": ""}, "params_occur": {"exc_tb": [], "exc_type": [], "exc_val": [], "self": [["self", "reset"]]}, "params_p": {"args": [], "exc_tb": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "exc_type": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "exc_val": [["Optional[Type[BaseException]]", 0.19999999999999998], ["str", 0.09999999999999999], ["BaseException", 0.09999999999999999], ["Optional[BaseException]", 0.09999999999999999], ["Exception", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "LoggerMutationHelper.__exit__", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "LoggerMutationHelper", "q_name": "LoggerMutationHelper", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Generate a ``run_id`` for a DAG run that will be created temporarily.", "long_descr": "This is used mostly by ``airflow task test`` to create a DAG run that will\nbe deleted after the task is run.", "ret": null}, "fn_lc": [[75, 0], [81, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_generate_temporary_run_id", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_generate_temporary_run_id", "ret_exprs": ["return f\"__airflow_temporary_run_{timezone.utcnow().isoformat()}__\""], "ret_type": "builtins.str", "ret_type_p": [["str", 0.8117179482096801], ["Tuple[str]", 0.0860298103746714]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Try to retrieve a DAG run from a string representing either a run ID or logical date.", "long_descr": "This checks DAG runs like this:\n\n1. If the input ``exec_date_or_run_id`` matches a DAG run ID, return the run.\n2. Try to parse the input as a date. If that works, and the resulting\n   date matches a DAG run's logical date, return the run.\n3. If ``create_if_necessary`` is *False* and the input works for neither of\n   the above, raise ``DagRunNotFound``.\n4. Try to create a new DAG run. If the input looks like a date, use it as\n   the logical date; otherwise use it as a run ID and set the logical date\n   to the current time.", "ret": null}, "fn_lc": [[84, 0], [145, 83]], "fn_var_ln": {"dag_run": [[137, 8], [137, 15]], "dag_run_execution_date": [[131, 8], [131, 30]], "execution_date": [[112, 12], [112, 26]]}, "fn_var_occur": {"dag_run": [["dag_run", "dag", "get_dagrun", "run_id", "exec_date_or_run_id", "session", "session"], ["dag_run", "False"], ["dag_run", "session", "query", "DagRun", "filter", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "execution_date", "one"], ["dag_run", "False"], ["dag_run", "DagRun", "dag", "dag_id", "run_id", "exec_date_or_run_id", "execution_date", "dag_run_execution_date"], ["dag_run", "True"], ["dag_run", "dag", "create_dagrun", "state", "DagRunState", "QUEUED", "execution_date", "dag_run_execution_date", "run_id", "_generate_temporary_run_id", "data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "dag_run_execution_date", "session", "session"], ["dag_run", "True"]], "dag_run_execution_date": [["dag_run_execution_date", "execution_date"], ["dag_run_execution_date", "pendulum", "instance", "timezone", "utcnow"], ["dag_run", "DagRun", "dag", "dag_id", "run_id", "exec_date_or_run_id", "execution_date", "dag_run_execution_date"], ["dag_run", "dag", "create_dagrun", "state", "DagRunState", "QUEUED", "execution_date", "dag_run_execution_date", "run_id", "_generate_temporary_run_id", "data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "dag_run_execution_date", "session", "session"]], "execution_date": [["execution_date", "pendulum", "DateTime", "None", "None"], ["execution_date", "timezone", "parse", "exec_date_or_run_id"], ["dag_run", "session", "query", "DagRun", "filter", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "execution_date", "one"], ["execution_date", "None"], ["dag_run_execution_date", "execution_date"], ["dag_run", "DagRun", "dag", "dag_id", "run_id", "exec_date_or_run_id", "execution_date", "dag_run_execution_date"], ["dag_run", "dag", "create_dagrun", "state", "DagRunState", "QUEUED", "execution_date", "dag_run_execution_date", "run_id", "_generate_temporary_run_id", "data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "dag_run_execution_date", "session", "session"]]}, "name": "_get_dag_run", "params": {"create_if_necessary": "CreateIfNecessary", "dag": "airflow.models.dag.DAG", "exec_date_or_run_id": "str | None", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"create_if_necessary": "", "dag": "", "exec_date_or_run_id": "", "session": ""}, "params_occur": {"create_if_necessary": [["exec_date_or_run_id", "create_if_necessary"], ["ValueError", "create_if_necessary"]], "dag": [["dag_run", "dag", "get_dagrun", "run_id", "exec_date_or_run_id", "session", "session"], ["dag_run", "session", "query", "DagRun", "filter", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "execution_date", "one"], ["DagRunNotFound", "dag", "dag_id", "exec_date_or_run_id", "None"], ["dag_run", "DagRun", "dag", "dag_id", "run_id", "exec_date_or_run_id", "execution_date", "dag_run_execution_date"], ["dag_run", "dag", "create_dagrun", "state", "DagRunState", "QUEUED", "execution_date", "dag_run_execution_date", "run_id", "_generate_temporary_run_id", "data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "dag_run_execution_date", "session", "session"]], "exec_date_or_run_id": [["exec_date_or_run_id", "create_if_necessary"], ["dag_run", "dag", "get_dagrun", "run_id", "exec_date_or_run_id", "session", "session"], ["execution_date", "timezone", "parse", "exec_date_or_run_id"], ["DagRunNotFound", "dag", "dag_id", "exec_date_or_run_id", "None"], ["dag_run", "DagRun", "dag", "dag_id", "run_id", "exec_date_or_run_id", "execution_date", "dag_run_execution_date"]], "session": [["dag_run", "dag", "get_dagrun", "run_id", "exec_date_or_run_id", "session", "session"], ["dag_run", "session", "query", "DagRun", "filter", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "execution_date", "one"], ["dag_run", "dag", "create_dagrun", "state", "DagRunState", "QUEUED", "execution_date", "dag_run_execution_date", "run_id", "_generate_temporary_run_id", "data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "dag_run_execution_date", "session", "session"]]}, "params_p": {"args": [], "create_if_necessary": [["str", 0.5899716518377232], ["int", 0.4100283481622768]], "dag": [["str", 0.2016962264551808], ["bool", 0.14632924074631376], ["int", 0.08692043278745544]], "exec_date_or_run_id": [["str", 0.7024121591196357], ["int", 0.20306684420308369], ["transfer.models.ListID", 0.09452099667728053]], "kwargs": [], "session": [["str", 0.2016962264551808], ["bool", 0.14632924074631376], ["int", 0.08692043278745544]]}, "q_name": "_get_dag_run", "ret_exprs": ["return dag_run, False", "return dag_run, False", "return dag_run, True", "return dag_run, True"], "ret_type": "builtins.tuple[airflow.models.dagrun.DagRun, builtins.bool]", "ret_type_p": [["bool", 0.8330068328899974]], "variables": {"dag_run": "", "dag_run_execution_date": "", "execution_date": ""}, "variables_p": {"dag_run": [["Dict[str, str]", 0.21059688450983066], ["str", 0.09837792573676384], ["bytes", 0.09416727639622995]], "dag_run_execution_date": [["Pattern[str]", 0.09627472610919781], ["pendulum.DateTime", 0.09578022606906797]], "execution_date": [["Type[prm.journals.models.moods.Mood]", 0.13928168777174363], ["List[Union[Any, Any]]", 0.09258993821965526], ["int", 0.09251118524417117]]}}, {"docstring": {"func": "Get the task instance through DagRun.run_id, if that fails, get the TI the old way.", "long_descr": null, "ret": null}, "fn_lc": [[149, 0], [189, 25]], "fn_var_ln": {"dag": [[159, 4], [159, 7]], "dag_run": [[185, 8], [185, 18]], "dr_created": [[169, 13], [169, 23]], "ti": [[187, 8], [187, 10]], "ti_or_none": [[176, 4], [176, 14]]}, "fn_var_occur": {"dag": [["dag", "task", "dag"], ["dag", "None"], ["dag_run", "dr_created", "_get_dag_run", "dag", "dag", "exec_date_or_run_id", "exec_date_or_run_id", "create_if_necessary", "create_if_necessary", "session", "session"], ["TaskInstanceNotFound", "dag", "dag_id", "task", "task_id", "map_index", "exec_date_or_run_id"]], "dag_run": [["dag_run", "dr_created", "_get_dag_run", "dag", "dag", "exec_date_or_run_id", "exec_date_or_run_id", "create_if_necessary", "create_if_necessary", "session", "session"], ["ti_or_none", "dag_run", "get_task_instance", "task", "task_id", "map_index", "map_index", "session", "session"], ["ti", "TaskInstance", "task", "run_id", "dag_run", "run_id", "map_index", "map_index"], ["ti", "dag_run", "dag_run"]], "dr_created": [["dag_run", "dr_created", "_get_dag_run", "dag", "dag", "exec_date_or_run_id", "exec_date_or_run_id", "create_if_necessary", "create_if_necessary", "session", "session"], ["ti", "dr_created"]], "ti": [["ti", "TaskInstance", "task", "run_id", "dag_run", "run_id", "map_index", "map_index"], ["ti", "dag_run", "dag_run"], ["ti", "ti_or_none"], ["ti", "refresh_from_task", "task", "pool_override", "pool"], ["ti", "dr_created"]], "ti_or_none": [["ti_or_none", "dag_run", "get_task_instance", "task", "task_id", "map_index", "map_index", "session", "session"], ["ti_or_none", "None"], ["ti", "ti_or_none"]]}, "name": "_get_ti", "params": {"create_if_necessary": "CreateIfNecessary", "exec_date_or_run_id": "str | None", "map_index": "builtins.int", "pool": "str | None", "session": "sqlalchemy.orm.session.Session", "task": "airflow.models.operator.Operator"}, "params_descr": {"create_if_necessary": "", "exec_date_or_run_id": "", "map_index": "", "pool": "", "session": "", "task": ""}, "params_occur": {"create_if_necessary": [["exec_date_or_run_id", "create_if_necessary"], ["dag_run", "dr_created", "_get_dag_run", "dag", "dag", "exec_date_or_run_id", "exec_date_or_run_id", "create_if_necessary", "create_if_necessary", "session", "session"]], "exec_date_or_run_id": [["exec_date_or_run_id", "create_if_necessary"], ["dag_run", "dr_created", "_get_dag_run", "dag", "dag", "exec_date_or_run_id", "exec_date_or_run_id", "create_if_necessary", "create_if_necessary", "session", "session"], ["TaskInstanceNotFound", "dag", "dag_id", "task", "task_id", "map_index", "exec_date_or_run_id"]], "map_index": [["ti_or_none", "dag_run", "get_task_instance", "task", "task_id", "map_index", "map_index", "session", "session"], ["TaskInstanceNotFound", "dag", "dag_id", "task", "task_id", "map_index", "exec_date_or_run_id"], ["ti", "TaskInstance", "task", "run_id", "dag_run", "run_id", "map_index", "map_index"]], "pool": [["ti", "refresh_from_task", "task", "pool_override", "pool"]], "session": [["dag_run", "dr_created", "_get_dag_run", "dag", "dag", "exec_date_or_run_id", "exec_date_or_run_id", "create_if_necessary", "create_if_necessary", "session", "session"], ["ti_or_none", "dag_run", "get_task_instance", "task", "task_id", "map_index", "map_index", "session", "session"]], "task": [["dag", "task", "dag"], ["needs_expansion", "task"], ["ti_or_none", "dag_run", "get_task_instance", "task", "task_id", "map_index", "map_index", "session", "session"], ["TaskInstanceNotFound", "dag", "dag_id", "task", "task_id", "map_index", "exec_date_or_run_id"], ["ti", "TaskInstance", "task", "run_id", "dag_run", "run_id", "map_index", "map_index"], ["ti", "refresh_from_task", "task", "pool_override", "pool"]]}, "params_p": {"args": [], "create_if_necessary": [["str", 0.6090926371169875], ["int", 0.19949190599375727], ["transfer.models.ListID", 0.0980498337264348], ["Optional[str]", 0.09336562316282035]], "exec_date_or_run_id": [["str", 0.6090926371169875], ["int", 0.19949190599375727], ["transfer.models.ListID", 0.0980498337264348], ["Optional[str]", 0.09336562316282035]], "kwargs": [], "map_index": [["zerver.models.UserProfile", 0.33075217869813733], ["Optional[dict]", 0.11477025298415024], ["Dict[str, Any]", 0.09156033707467393], ["arxiv.users.domain.Session", 0.08682409438433776], ["str", 0.08666929276926814], ["int", 0.08666929276926814]], "pool": [["str", 0.8144420483447732], ["int", 0.09370067590619356], ["IO[bytes]", 0.09185727574903306]], "session": [["str", 0.6017666463157064], ["int", 0.30088332315785316], ["Optional[str]", 0.09735003052644042]], "task": [["dict", 0.17767557843855744], ["Optional[requests.Session]", 0.12030712590286657], ["str", 0.12030712590286657], ["Dict[str, Any]", 0.10515045957175567], ["medtagger.database.models.Task", 0.09915469164335426]]}, "q_name": "_get_ti", "ret_exprs": ["return ti, dr_created"], "ret_type": "builtins.tuple[airflow.models.TaskInstance, builtins.bool]", "ret_type_p": [["str", 0.38070981894785083], ["raiden.utils.Tuple[int, int]", 0.09377253429255945], ["bytes", 0.09377253429255945]], "variables": {"dag": "", "dag_run": "", "dr_created": "", "ti": "", "ti_or_none": ""}, "variables_p": {"dag": [["str", 0.2268619300881755], ["Dict[str, str]", 0.09791632564656118], ["List[str]", 0.09274202151417948], ["list", 0.08983735727073058], ["Counter", 0.08983735727073058]], "dag_run": [["Set[str]", 0.13539979007243919], ["bytes", 0.09565890399198244], ["float", 0.09252456622786366], ["int", 0.09120823924593868]], "dr_created": [["int", 0.28758540698622703], ["str", 0.20726515500744586], ["bool", 0.09949648482513473], ["Set[str]", 0.09569627908249694], ["raiden.transfer.state.TransactionExecutionStatus", 0.09403459805565277]], "ti": [["str", 0.2630017725927266], ["List[str]", 0.1503349257244714], ["Dict[int, str]", 0.14163799936244315], ["int", 0.08868452468136787], ["Optional[Match[str]]", 0.08146076514139247]], "ti_or_none": [["int", 0.28347777760649584], ["bool", 0.13080450345172712], ["str", 0.13080450345172712], ["Dict[str, Dict[str, Any]]", 0.09202091025864044], ["raiden.transfer.state.TransactionExecutionStatus", 0.09139762638794384], ["Dict[str, str]", 0.0905572086385342], ["Dict[str, Dict[str, str]]", 0.0864947262094156]]}}, {"docstring": {"func": "Runs the task based on a mode.", "long_descr": "Any of the 3 modes are available:\n\n- using LocalTaskJob\n- as raw task\n- by executor", "ret": null}, "fn_lc": [[192, 0], [207, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_run_task_by_selected_method", "params": {"args": "", "dag": "airflow.models.dag.DAG", "ti": "airflow.models.TaskInstance"}, "params_descr": {"args": "", "dag": "", "ti": ""}, "params_occur": {"args": [["args", "local"], ["_run_task_by_local_task_job", "args", "ti"], ["args", "raw"], ["_run_raw_task", "args", "ti"], ["_run_task_by_executor", "args", "dag", "ti"]], "dag": [["_run_task_by_executor", "args", "dag", "ti"]], "ti": [["_run_task_by_local_task_job", "args", "ti"], ["_run_raw_task", "args", "ti"], ["_run_task_by_executor", "args", "dag", "ti"]]}, "params_p": {"args": [], "dag": [["Sequence[str]", 0.160761876877177], ["Dict[str, Any]", 0.08212049721536449]], "kwargs": [], "ti": [["Dict[str, Any]", 0.12205902518350852], ["Sequence[str]", 0.09221010273362452], ["List[core_lib.core.models.Event]", 0.08938325581327804]]}, "q_name": "_run_task_by_selected_method", "ret_exprs": ["return _run_task_by_local_task_job(args, ti)", "return _run_raw_task(args, ti)", "return None"], "ret_type": "None | TaskReturnCode", "ret_type_p": [["bool", 0.203221392198216], ["Mapping[str, Any]", 0.19715753444317713], ["Union[Callable, None]", 0.1833653727572798], ["dict", 0.12262465475107867]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Sends the task to the executor for execution.", "long_descr": "This can result in the task being started by another host if the executor implementation does.", "ret": null}, "fn_lc": [[210, 0], [246, 18]], "fn_var_ln": {"executor": [[230, 4], [230, 12]], "job_id": [[231, 4], [231, 19]], "pickle": [[221, 16], [221, 22]], "pickle_id": [[223, 12], [223, 21]]}, "fn_var_occur": {"executor": [["executor", "ExecutorLoader", "get_default_executor"], ["executor", "job_id", "None"], ["executor", "start"], ["executor", "queue_task_instance", "ti", "mark_success", "args", "mark_success", "pickle_id", "pickle_id", "ignore_all_deps", "args", "ignore_all_dependencies", "ignore_depends_on_past", "should_ignore_depends_on_past", "args", "wait_for_past_depends_before_skipping", "args", "depends_on_past", "ignore_task_deps", "args", "ignore_dependencies", "ignore_ti_state", "args", "force", "pool", "args", "pool"], ["executor", "heartbeat"], ["executor", "end"]], "job_id": [["executor", "job_id", "None"]], "pickle": [["pickle", "DagPickle", "dag"], ["session", "add", "pickle"], ["pickle_id", "pickle", "id"]], "pickle_id": [["pickle_id", "None"], ["pickle_id", "pickle", "id"], ["print", "dag", "pickle_id"], ["executor", "queue_task_instance", "ti", "mark_success", "args", "mark_success", "pickle_id", "pickle_id", "ignore_all_deps", "args", "ignore_all_dependencies", "ignore_depends_on_past", "should_ignore_depends_on_past", "args", "wait_for_past_depends_before_skipping", "args", "depends_on_past", "ignore_task_deps", "args", "ignore_dependencies", "ignore_ti_state", "args", "force", "pool", "args", "pool"]]}, "name": "_run_task_by_executor", "params": {"args": "", "dag": "airflow.models.dag.DAG", "ti": "airflow.models.TaskInstance"}, "params_descr": {"args": "", "dag": "", "ti": ""}, "params_occur": {"args": [["args", "ship_dag"], ["executor", "queue_task_instance", "ti", "mark_success", "args", "mark_success", "pickle_id", "pickle_id", "ignore_all_deps", "args", "ignore_all_dependencies", "ignore_depends_on_past", "should_ignore_depends_on_past", "args", "wait_for_past_depends_before_skipping", "args", "depends_on_past", "ignore_task_deps", "args", "ignore_dependencies", "ignore_ti_state", "args", "force", "pool", "args", "pool"]], "dag": [["pickle", "DagPickle", "dag"], ["print", "dag", "pickle_id"]], "ti": [["executor", "queue_task_instance", "ti", "mark_success", "args", "mark_success", "pickle_id", "pickle_id", "ignore_all_deps", "args", "ignore_all_dependencies", "ignore_depends_on_past", "should_ignore_depends_on_past", "args", "wait_for_past_depends_before_skipping", "args", "depends_on_past", "ignore_task_deps", "args", "ignore_dependencies", "ignore_ti_state", "args", "force", "pool", "args", "pool"]]}, "params_p": {"args": [], "dag": [["str", 0.1977087306482402], ["models.Route", 0.09455730381633992]], "kwargs": [], "ti": [["Dict[str, Any]", 0.19185525613804227], ["bool", 0.1234083507256309], ["zerver.models.Message", 0.10264940113371789]]}, "q_name": "_run_task_by_executor", "ret_exprs": [], "ret_type": "None", "variables": {"executor": "", "job_id": "", "pickle": "", "pickle_id": ""}, "variables_p": {"executor": [["str", 0.18653648450481192], ["Dict[str, str]", 0.11094928166155568], ["Type[Tuple[str, Any]]", 0.10450294193450455], ["list", 0.09447113226419358], ["Optional[int]", 0.09386647146731977]], "job_id": [["int", 0.7839623932831198], ["str", 0.21603760671688021]], "pickle": [["grpy.core.models.Grouping", 0.30124961132015793], ["str", 0.15900543277511728], ["geode.models.common.Address", 0.13308557812305769], ["khetha.models.Question", 0.07619702766264334]], "pickle_id": [["int", 0.3671890566353217], ["Optional[int]", 0.27367361862544354], ["Generator[Any, None, None]", 0.18210928620209096], ["Optional[cmk.utils.type_defs.UserId]", 0.08792554166952313]]}}, {"docstring": {"func": "Run LocalTaskJob, which monitors the raw task execution process.", "long_descr": null, "ret": null}, "fn_lc": [[249, 0], [271, 15]], "fn_var_ln": {"job_runner": [[251, 4], [251, 14]], "ret": [[265, 8], [265, 11]]}, "fn_var_occur": {"job_runner": [["job_runner", "LocalTaskJobRunner", "job", "Job", "dag_id", "ti", "dag_id", "task_instance", "ti", "mark_success", "args", "mark_success", "pickle_id", "args", "pickle", "ignore_all_deps", "args", "ignore_all_dependencies", "ignore_depends_on_past", "should_ignore_depends_on_past", "args", "wait_for_past_depends_before_skipping", "args", "depends_on_past", "ignore_task_deps", "args", "ignore_dependencies", "ignore_ti_state", "args", "force", "pool", "args", "pool", "external_executor_id", "_extract_external_executor_id", "args"], ["ret", "run_job", "job", "job_runner", "job", "execute_callable", "job_runner", "_execute"]], "ret": [["ret", "run_job", "job", "job_runner", "job", "execute_callable", "job_runner", "_execute"], ["TaskReturnCode", "ret"]]}, "name": "_run_task_by_local_task_job", "params": {"args": "", "ti": "airflow.models.TaskInstance"}, "params_descr": {"args": "", "ti": ""}, "params_occur": {"args": [["job_runner", "LocalTaskJobRunner", "job", "Job", "dag_id", "ti", "dag_id", "task_instance", "ti", "mark_success", "args", "mark_success", "pickle_id", "args", "pickle", "ignore_all_deps", "args", "ignore_all_dependencies", "ignore_depends_on_past", "should_ignore_depends_on_past", "args", "wait_for_past_depends_before_skipping", "args", "depends_on_past", "ignore_task_deps", "args", "ignore_dependencies", "ignore_ti_state", "args", "force", "pool", "args", "pool", "external_executor_id", "_extract_external_executor_id", "args"], ["args", "shut_down_logging"]], "ti": [["job_runner", "LocalTaskJobRunner", "job", "Job", "dag_id", "ti", "dag_id", "task_instance", "ti", "mark_success", "args", "mark_success", "pickle_id", "args", "pickle", "ignore_all_deps", "args", "ignore_all_dependencies", "ignore_depends_on_past", "should_ignore_depends_on_past", "args", "wait_for_past_depends_before_skipping", "args", "depends_on_past", "ignore_task_deps", "args", "ignore_dependencies", "ignore_ti_state", "args", "force", "pool", "args", "pool", "external_executor_id", "_extract_external_executor_id", "args"]]}, "params_p": {"args": [], "kwargs": [], "ti": [["int", 0.11036197599054338], ["cmk.utils.type_defs.HostName", 0.10001341532677338], ["Dict[str, Any]", 0.08731985465868551]]}, "q_name": "_run_task_by_local_task_job", "ret_exprs": ["return TaskReturnCode(ret)", "return None"], "ret_type": "TaskReturnCode | None", "ret_type_p": [["cmk.utils.type_defs.UserId", 0.11210383582595874], ["str", 0.09792136610742], ["viewer.models.Gallery", 0.09600733228370224], ["Dict[str, Any]", 0.09466764192611798], ["int", 0.09054021843184387], ["Dict[str, str]", 0.08955904030769461]], "variables": {"job_runner": "", "ret": ""}, "variables_p": {"job_runner": [], "ret": [["Dict[str, Union[int, str]]", 0.20590267117605945], ["Generator[Any, None, None]", 0.18301477329147647], ["list", 0.16934604944478027], ["OrderedDict[str, Any]", 0.09860606558787377], ["set", 0.0905529206071998], ["Dict[str, List[Any]]", 0.07883302286505942]]}}, {"docstring": {"func": "Runs the main task handling code.", "long_descr": null, "ret": null}, "fn_lc": [[282, 0], [288, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_run_raw_task", "params": {"args": "", "ti": "airflow.models.TaskInstance"}, "params_descr": {"args": "", "ti": ""}, "params_occur": {"args": [["ti", "_run_raw_task", "mark_success", "args", "mark_success", "job_id", "args", "job_id", "pool", "args", "pool"]], "ti": [["ti", "_run_raw_task", "mark_success", "args", "mark_success", "job_id", "args", "job_id", "pool", "args", "pool"]]}, "params_p": {"args": [], "kwargs": [], "ti": [["Sequence[str]", 0.12106888231246117], ["str", 0.09199665356840954], ["Callable", 0.09199665356840954]]}, "q_name": "_run_raw_task", "ret_exprs": ["return ti._run_raw_task( mark_success=args.mark_success, job_id=args.job_id, pool=args.pool,)"], "ret_type": "None | TaskReturnCode", "ret_type_p": [["bool", 0.2930786391789032], ["slice", 0.11465703531730946], ["audiopyle.lib.models.resulAnalysisStats", 0.08886210668686227]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 0], [294, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_extract_external_executor_id", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["hasattr", "args"], ["getattr", "args"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "_extract_external_executor_id", "ret_exprs": ["return getattr(args, \"external_executor_id\")", "return os.environ.get(\"external_executor_id\", None)"], "ret_type": "str | None", "ret_type_p": [["str", 0.3933539991393817], ["bool", 0.18592768096679357], ["recidiviz.utils.regions.Region", 0.10956769222663812], ["List[int]", 0.10729123416315832], ["Optional[str]", 0.09656815934086997]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Move handlers for task logging to root logger.", "long_descr": "We want anything logged during task run to be propagated to task log handlers.\nIf running in a k8s executor pod, also keep the stream handler on root logger\nso that logs are still emitted to stdout.", "ret": null}, "fn_lc": [[298, 0], [321, 13]], "fn_var_ln": {"console_handler": [[315, 4], [315, 19]], "root_logger": [[314, 4], [314, 15]]}, "fn_var_occur": {"console_handler": [["console_handler", "next", "h", "h", "root_logger", "handlers", "h", "name", "None"], ["console_handler", "console_handler", "root_logger", "handlers"], ["root_logger", "addHandler", "console_handler"]], "root_logger": [["root_logger", "logging", "getLogger"], ["console_handler", "next", "h", "h", "root_logger", "handlers", "h", "name", "None"], ["LoggerMutationHelper", "root_logger"], ["task_helper", "move", "root_logger"], ["console_handler", "console_handler", "root_logger", "handlers"], ["root_logger", "addHandler", "console_handler"]]}, "name": "_move_task_handlers_to_root", "params": {"ti": "airflow.models.TaskInstance"}, "params_descr": {"ti": ""}, "params_occur": {"ti": [["ti", "log", "handlers", "settings", "DONOT_MODIFY_HANDLERS"]]}, "params_p": {"args": [], "kwargs": [], "ti": [["logging.Logger", 0.42429007486006287], ["str", 0.23197680144460858], ["logging.LogRecord", 0.09124855833500456]]}, "q_name": "_move_task_handlers_to_root", "ret_exprs": ["return"], "ret_type": "typing.Generator[None, None, None]", "ret_type_p": [["Iterator[T]", 0.19280264890100052], ["Iterator", 0.1116170447820982], ["AsyncIterator[T]", 0.09288521106916067], ["Optional[str]", 0.08990731516057034]], "variables": {"console_handler": "", "root_logger": ""}, "variables_p": {"console_handler": [["dict", 0.10300019657015119], ["qcodes.configuration.config.Config", 0.09747158799149255], ["Dict[str, Any]", 0.09660822307854]], "root_logger": [["logging.Logger", 1.0]]}}, {"docstring": {"func": "Redirect stdout to ti logger.", "long_descr": "Redirect stdout and stderr to the task instance log as INFO and WARNING\nlevel messages, respectively.\n\nIf stdout already redirected (possible when task running with option\n`--local`), don't redirect again.", "ret": null}, "fn_lc": [[325, 0], [343, 13]], "fn_var_ln": {"info_writer": [[338, 8], [338, 19]], "warning_writer": [[339, 8], [339, 22]]}, "fn_var_occur": {"info_writer": [["info_writer", "StreamLogWriter", "ti", "log", "logging", "INFO"], ["redirect_stdout", "info_writer"]], "warning_writer": [["warning_writer", "StreamLogWriter", "ti", "log", "logging", "WARNING"]]}, "name": "_redirect_stdout_to_ti_log", "params": {"ti": "airflow.models.TaskInstance"}, "params_descr": {"ti": ""}, "params_occur": {"ti": [["info_writer", "StreamLogWriter", "ti", "log", "logging", "INFO"], ["warning_writer", "StreamLogWriter", "ti", "log", "logging", "WARNING"]]}, "params_p": {"args": [], "kwargs": [], "ti": [["str", 0.2971249675840157], ["metrics_backend.utils.Address", 0.10301381896094157], ["bool", 0.09557790073168315]]}, "q_name": "_redirect_stdout_to_ti_log", "ret_exprs": [], "ret_type": "typing.Generator[None, None, None]", "variables": {"info_writer": "", "warning_writer": ""}, "variables_p": {"info_writer": [["str", 0.2966155315092057], ["Tuple[int]", 0.10295122569002255], ["list", 0.0951375519071477]], "warning_writer": [["str", 0.16649083568240508], ["int", 0.11063641037788441], ["Dict[int, Union[Any, Any, Any, Any, Any, Any]]", 0.07441597756659732], ["bool", 0.06826579395553346]]}}, {"docstring": {"func": "Run a single task instance.", "long_descr": "Note that there must be at least one DagRun for this to start,\ni.e. it must have been scheduled and/or triggered previously.\nAlternatively, if you just need to run it for testing then use\n\"airflow tasks test ...\" command instead.", "ret": null}, "fn_lc": [[351, 0], [433, 27]], "fn_var_ln": {"MASK_SECRETS_IN_LOGS": [[393, 4], [393, 33]], "_": [[405, 8], [405, 9]], "_dag": [[403, 8], [403, 12]], "conf_dict": [[385, 12], [385, 21]], "hostname": [[408, 4], [408, 12]], "task": [[404, 4], [404, 8]], "task_return_code": [[425, 16], [425, 32]], "ti": [[405, 4], [405, 6]], "unsupported_flags": [[373, 12], [373, 29]], "unsupported_options": [[369, 8], [369, 27]], "unsupported_raw_task_flags": [[372, 12], [372, 38]]}, "fn_var_occur": {"MASK_SECRETS_IN_LOGS": [["settings", "MASK_SECRETS_IN_LOGS", "True"]], "_": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "pool", "args", "pool"]], "_dag": [["_dag", "get_dag_by_pickle", "args", "pickle"], ["_dag", "get_dag", "args", "subdir", "args", "dag_id", "args", "read_from_db"], ["_dag", "dag"], ["task", "_dag", "get_task", "task_id", "args", "task_id"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"]], "conf_dict": [["conf_dict", "json", "load", "conf_file"], ["conf", "read_dict", "conf_dict", "source", "args", "cfg_path"]], "hostname": [["hostname", "get_hostname"], ["log", "info", "ti", "hostname"]], "task": [["task", "_dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "pool", "args", "pool"]], "task_return_code": [["task_return_code", "None"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"], ["task_return_code", "TaskReturnCode", "DEFERRED"]], "ti": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "pool", "args", "pool"], ["ti", "init_run_context", "raw", "args", "raw"], ["log", "info", "ti", "hostname"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"], ["_move_task_handlers_to_root", "ti"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"]], "unsupported_flags": [["unsupported_flags", "join", "o", "o", "unsupported_options"], ["AirflowException", "unsupported_raw_task_flags", "unsupported_flags"]], "unsupported_options": [["unsupported_options", "o", "o", "RAW_TASK_UNSUPPORTED_OPTION", "getattr", "args", "o"], ["unsupported_flags", "join", "o", "o", "unsupported_options"]], "unsupported_raw_task_flags": [["unsupported_raw_task_flags", "join", "o", "o", "RAW_TASK_UNSUPPORTED_OPTION"], ["AirflowException", "unsupported_raw_task_flags", "unsupported_flags"]]}, "name": "task_run", "params": {"args": "", "dag": "DAG | None"}, "params_descr": {"args": "", "dag": ""}, "params_occur": {"args": [["args", "local", "args", "raw"], ["args", "raw"], ["unsupported_options", "o", "o", "RAW_TASK_UNSUPPORTED_OPTION", "getattr", "args", "o"], ["dag", "args", "pickle"], ["args", "cfg_path"], ["open", "args", "cfg_path", "conf_file"], ["os", "path", "exists", "args", "cfg_path"], ["os", "remove", "args", "cfg_path"], ["conf", "read_dict", "conf_dict", "source", "args", "cfg_path"], ["args", "pickle"], ["print", "args", "pickle"], ["_dag", "get_dag_by_pickle", "args", "pickle"], ["_dag", "get_dag", "args", "subdir", "args", "dag_id", "args", "read_from_db"], ["task", "_dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "pool", "args", "pool"], ["ti", "init_run_context", "raw", "args", "raw"], ["args", "interactive"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"], ["task_return_code", "_run_task_by_selected_method", "args", "_dag", "ti"]], "dag": [["dag", "args", "pickle"], ["_dag", "dag"]]}, "params_p": {"args": [], "dag": [["tuple", 0.20840182510537622], ["List[str]", 0.20840182510537622], ["Callable[..., str]", 0.14696692324065322], ["dict", 0.14696692324065322], ["Sequence[str]", 0.07972594735909322], ["list", 0.06984551864961598]], "kwargs": []}, "q_name": "task_run", "ret_exprs": ["return task_return_code"], "ret_type": "TaskReturnCode | None", "ret_type_p": [["Dict[str, Any]", 0.20079706908628261], ["cmk.utils.type_defs.UserId", 0.10582709217445059], ["viewer.models.Gallery", 0.0952683603480008], ["Optional[str]", 0.09350236338576112], ["str", 0.0932572341358467]], "variables": {"MASK_SECRETS_IN_LOGS": "", "_": "", "_dag": "", "conf_dict": "", "hostname": "", "task": "", "task_return_code": "", "ti": "", "unsupported_flags": "", "unsupported_options": "", "unsupported_raw_task_flags": ""}, "variables_p": {"MASK_SECRETS_IN_LOGS": [["int", 0.2770417285189542], ["str", 0.2239708244100208], ["bool", 0.18037085928386454], ["float", 0.1259206256992853], ["Dict[str, int]", 0.09703573761608317], ["Union[bool, str]", 0.09566022447179198]], "_": [["int", 0.4386993802997854], ["str", 0.11145836833875905], ["tuple", 0.09010801720295127], ["Dict[str, Union[Any, Any]]", 0.0886219967876554], ["Dict[int, Any]", 0.086229843424375]], "_dag": [["int", 0.29346557939922285], ["list", 0.1948184783606678], ["Dict[str, Union[Any, Any]]", 0.09247303000572521]], "conf_dict": [["dict", 0.9999999999999999]], "hostname": [["str", 0.6129051467288542], ["float", 0.22291425527059158], ["set", 0.0873625868404032], ["List[int]", 0.07681801116015097]], "task": [["Sequence", 0.137955324691008], ["List[str]", 0.11654187018008812], ["Mapping", 0.08826757683092351]], "task_return_code": [["int", 0.6320234344324702], ["str", 0.27845495858377034], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.08952160698375931]], "ti": [["int", 0.4386993802997854], ["str", 0.11145836833875905], ["tuple", 0.09010801720295127], ["Dict[str, Union[Any, Any]]", 0.0886219967876554], ["Dict[int, Any]", 0.086229843424375]], "unsupported_flags": [["str", 0.2943973453904291], ["Dict[str, str]", 0.206986158713024], ["TypeError", 0.10256129713750921], ["Type[str]", 0.0970191670366533], ["ImportError", 0.09639810723471635]], "unsupported_options": [["list", 0.6694480680346885], ["List[dict]", 0.11878980929965367], ["Tuple[Literal, Literal]", 0.10746314586263665], ["List[str]", 0.1042989768030213]], "unsupported_raw_task_flags": [["str", 0.5017832647148902], ["Optional[str]", 0.30635149375848086], ["float", 0.10295892742764304], ["Pattern[str]", 0.08890631409898583]]}}, {"docstring": {"func": "Get task instance dependencies that were not met.", "long_descr": "Returns the unmet dependencies for a task instance from the perspective of the\nscheduler (i.e. why a task instance doesn't get scheduled and then queued by the\nscheduler, and then run by an executor).\n>>> airflow tasks failed-deps tutorial sleep 2015-01-01\nTask instance dependencies not met:\nDagrun Running: Task instance's dagrun did not exist: Unknown reason\nTrigger Rule: Task's trigger rule 'all_success' requires all upstream tasks\nto have succeeded, but found 1 non-success(es).", "ret": null}, "fn_lc": [[437, 0], [462, 56]], "fn_var_ln": {"_": [[452, 8], [452, 9]], "dag": [[450, 4], [450, 7]], "dep_context": [[454, 4], [454, 15]], "failed_deps": [[455, 4], [455, 15]], "task": [[451, 4], [451, 8]], "ti": [[452, 4], [452, 6]]}, "fn_var_occur": {"_": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"]], "dag": [["dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"]], "dep_context": [["dep_context", "DepContext", "deps", "SCHEDULER_QUEUED_DEPS"], ["failed_deps", "list", "ti", "get_failed_dep_statuses", "dep_context", "dep_context"]], "failed_deps": [["failed_deps", "list", "ti", "get_failed_dep_statuses", "dep_context", "dep_context"]], "task": [["task", "dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"]], "ti": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"], ["failed_deps", "list", "ti", "get_failed_dep_statuses", "dep_context", "dep_context"]]}, "name": "task_failed_deps", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "task_failed_deps", "ret_exprs": [], "ret_type": "None", "variables": {"_": "", "dag": "", "dep_context": "", "failed_deps": "", "task": "", "ti": ""}, "variables_p": {"_": [["int", 0.7059379113105718], ["str", 0.0971587073266928], ["Dict[str, Union[Any, Any]]", 0.09209198060963113]], "dag": [["list", 0.1953559989637822], ["List[str]", 0.1772680759205182]], "dep_context": [], "failed_deps": [["float", 0.18443706473439436], ["int", 0.12100408096834188], ["List[str]", 0.09373938165674467]], "task": [["Sequence", 0.137955324691008], ["List[str]", 0.11654187018008812], ["Mapping", 0.08826757683092351]], "ti": [["int", 0.7005888785913501], ["Dict[str, Union[Any, Any]]", 0.10050821662750327]]}}, {"docstring": {"func": "Returns the state of a TaskInstance at the command line.", "long_descr": ">>> airflow tasks state tutorial sleep 2015-01-01\nsuccess", "ret": null}, "fn_lc": [[467, 0], [477, 29]], "fn_var_ln": {"_": [[476, 8], [476, 9]], "dag": [[474, 4], [474, 7]], "task": [[475, 4], [475, 8]], "ti": [[476, 4], [476, 6]]}, "fn_var_occur": {"_": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"]], "dag": [["dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"]], "task": [["task", "dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"]], "ti": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"], ["print", "ti", "current_state"]]}, "name": "task_state", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "task_state", "ret_exprs": [], "ret_type": "None", "variables": {"_": "", "dag": "", "task": "", "ti": ""}, "variables_p": {"_": [["int", 0.7059379113105718], ["str", 0.0971587073266928], ["Dict[str, Union[Any, Any]]", 0.09209198060963113]], "dag": [["list", 0.1953559989637822], ["List[str]", 0.1772680759205182]], "task": [["Sequence", 0.137955324691008], ["List[str]", 0.11654187018008812], ["Mapping", 0.08826757683092351]], "ti": [["int", 0.7080170283143767], ["str", 0.0968005302319474], ["Dict[str, Union[Any, Any]]", 0.08997365801026726]]}}, {"docstring": {"func": "Lists the tasks within a DAG at the command line.", "long_descr": null, "ret": null}, "fn_lc": [[482, 0], [489, 31]], "fn_var_ln": {"dag": [[484, 4], [484, 7]], "tasks": [[488, 8], [488, 13]]}, "fn_var_occur": {"dag": [["dag", "dag", "get_dag", "args", "subdir", "args", "dag_id"], ["dag", "tree_view"], ["tasks", "sorted", "t", "task_id", "t", "dag", "tasks"]], "tasks": [["tasks", "sorted", "t", "task_id", "t", "dag", "tasks"], ["print", "join", "tasks"]]}, "name": "task_list", "params": {"args": "", "dag": "DAG | None"}, "params_descr": {"args": "", "dag": ""}, "params_occur": {"args": [["dag", "dag", "get_dag", "args", "subdir", "args", "dag_id"], ["args", "tree"]], "dag": [["dag", "dag", "get_dag", "args", "subdir", "args", "dag_id"], ["dag", "tree_view"], ["tasks", "sorted", "t", "task_id", "t", "dag", "tasks"]]}, "params_p": {"args": [], "dag": [["str", 0.09428822810812558]], "kwargs": []}, "q_name": "task_list", "ret_exprs": [], "ret_type": "None", "variables": {"dag": "", "tasks": ""}, "variables_p": {"dag": [["int", 0.21476354944737264], ["float", 0.10501757096167531], ["List[str]", 0.09460783771163331], ["Iterator[Any]", 0.0939284300323833]], "tasks": [["list", 0.23040033465764928], ["Dict[str, Any]", 0.20348796174895972], ["ChainMap[str, Any]", 0.10190785072612303], ["Dict[str, List[Any]]", 0.09170841126244246], ["Dict[str, Dict[str, str]]", 0.08953284764296747]]}}, {"docstring": {"func": "Trying to guess the debugger used by the user.", "long_descr": "When it doesn't find any user-installed debugger, returns ``pdb``.\n\nList of supported debuggers:\n\n* `pudb <https://github.com/inducer/pudb>`__\n* `web_pdb <https://github.com/romanvm/python-web-pdb>`__\n* `ipdb <https://github.com/gotcha/ipdb>`__\n* `pdb <https://docs.python.org/3/library/pdb.html>`__", "ret": null}, "fn_lc": [[505, 0], [524, 13]], "fn_var_ln": {"exc": [[523, 12], [523, 15]]}, "fn_var_occur": {"exc": [["exc", "builtins", "Exception"], ["exc", "e"]]}, "name": "_guess_debugger", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_guess_debugger", "ret_exprs": ["return cast(_SupportedDebugger, importlib.import_module(mod_name))"], "ret_type": "_SupportedDebugger", "ret_type_p": [["str", 0.286179903929353], ["float", 0.12397090943873906], ["esm.models.service_type.ServiceType", 0.11426311164910728], ["Dict[str, int]", 0.10860453748719222], ["int", 0.09597338041022241], ["dict", 0.09367674236302724]], "variables": {"exc": ""}, "variables_p": {"exc": [["Exception", 0.9071468859129657]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[556, 4], [567, 19]], "fn_var_ln": {"data": [[557, 8], [557, 12]]}, "fn_var_occur": {"data": [["data", "ti", "dag_id", "dag_run", "execution_date", "isoformat", "ti", "task_id", "ti", "state", "ti", "start_date", "isoformat", "ti", "start_date", "ti", "end_date", "isoformat", "ti", "end_date"], ["data", "str", "ti", "map_index", "ti", "map_index"]]}, "name": "format_task_instance", "params": {"ti": "airflow.models.TaskInstance"}, "params_descr": {"ti": ""}, "params_occur": {"ti": [["has_mapped_instances", "any", "ti", "map_index", "ti", "dag_run", "task_instances"], ["data", "ti", "dag_id", "dag_run", "execution_date", "isoformat", "ti", "task_id", "ti", "state", "ti", "start_date", "isoformat", "ti", "start_date", "ti", "end_date", "isoformat", "ti", "end_date"], ["data", "str", "ti", "map_index", "ti", "map_index"]]}, "params_p": {"args": [], "kwargs": [], "ti": [["bytes", 0.24726552986608025], ["Optional[Exception]", 0.18528796636129585], ["zam_repondeur.models.Lecture", 0.09185027450373338]]}, "q_name": "task_states_for_dag_run.<locals>.format_task_instance", "ret_exprs": ["return data"], "ret_type": "builtins.dict[builtins.str, builtins.str]", "ret_type_p": [["str", 0.21504440876745384], ["Dict[str, List[int]]", 0.18411436338915324], ["dict", 0.17528124543796508], ["Dict[str, Any]", 0.09478864628479033], ["Callable", 0.08879478982649128]], "variables": {"data": ""}, "variables_p": {"data": [["list", 0.18664457920360894], ["dict", 0.14644283114399068], ["Optional[str]", 0.11912925484220133], ["str", 0.09128187510492664], ["List[Tuple[Any, str]]", 0.08982958282920851], ["Tuple[str, str]", 0.08814606242281799], ["Tuple[str, str, str]", 0.08814606242281799]]}}, {"docstring": {"func": "Get the status of all task instances in a DagRun.", "long_descr": null, "ret": null}, "fn_lc": [[530, 0], [569, 107]], "fn_var_ln": {"dag_run": [[540, 12], [540, 19]], "execution_date": [[539, 12], [539, 26]], "has_mapped_instances": [[554, 4], [554, 24]]}, "fn_var_occur": {"dag_run": [["AirflowConsole", "print_as", "data", "dag_run", "task_instances", "output", "args", "output", "mapper", "format_task_instance"]], "execution_date": [], "has_mapped_instances": []}, "name": "task_states_for_dag_run", "params": {"args": "", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"args": "", "session": ""}, "params_occur": {"args": [["AirflowConsole", "print_as", "data", "dag_run", "task_instances", "output", "args", "output", "mapper", "format_task_instance"]], "session": []}, "params_p": {"args": [], "kwargs": [], "session": [["sqlalchemy.orm.Session", 0.2847151477801927], ["bool", 0.1559646899880202], ["recidiviz.persistence.database.session.Session", 0.07223867189675141], ["List[recidiviz.persistence.database.schema.state.schema.StatePerson]", 0.07223867189675141], ["sqlalchemy.orm.unitofwork.UOWTransaction", 0.07081617010101025], ["sqlalchemy.orm.scoping.scoped_session", 0.05931150055708143]]}, "q_name": "task_states_for_dag_run", "ret_exprs": [], "ret_type": "None", "variables": {"dag_run": "", "execution_date": "", "has_mapped_instances": ""}, "variables_p": {"dag_run": [["int", 0.32129040409587684], ["str", 0.11322096149813875]], "execution_date": [["str", 0.5309981072561922], ["Dict[str, Dict[str, str]]", 0.14365386517434214], ["float", 0.13232945606051183], ["bytes", 0.10537212890330082], ["int", 0.08764644260565306]], "has_mapped_instances": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": "Tests task for a given dag_id.", "long_descr": null, "ret": null}, "fn_lc": [[573, 0], [629, 42]], "fn_var_ln": {"MASK_SECRETS_IN_LOGS": [[579, 4], [579, 33]], "already_has_stream_handler": [[584, 8], [584, 34]], "dag": [[595, 4], [595, 7]], "debugger": [[618, 12], [618, 20]], "dr_created": [[606, 8], [606, 18]], "env_vars": [[590, 4], [590, 12]], "handlers": [[581, 4], [581, 12]], "passed_in_params": [[600, 8], [600, 24]], "task": [[597, 4], [597, 8]], "ti": [[606, 4], [606, 6]]}, "fn_var_occur": {"MASK_SECRETS_IN_LOGS": [["settings", "MASK_SECRETS_IN_LOGS", "True"]], "already_has_stream_handler": [["already_has_stream_handler", "False"], ["already_has_stream_handler", "isinstance", "handler", "logging", "StreamHandler"]], "dag": [["dag", "dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"]], "debugger": [["debugger", "_guess_debugger"], ["debugger", "post_mortem"]], "dr_created": [["ti", "dr_created", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"]], "env_vars": [["args", "env_vars"], ["env_vars", "update", "args", "env_vars"], ["os", "environ", "update", "env_vars"]], "handlers": [["handlers", "logging", "getLogger", "handlers"]], "passed_in_params": [["passed_in_params", "json", "loads", "args", "task_params"], ["task", "params", "update", "passed_in_params"]], "task": [["task", "dag", "get_task", "task_id", "args", "task_id"], ["task", "params", "update", "passed_in_params"], ["task", "params", "isinstance", "task", "params", "ParamsDict"], ["task", "params", "validate"], ["ti", "dr_created", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"]], "ti": [["ti", "dr_created", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"], ["ti", "dry_run"], ["ti", "run", "ignore_task_deps", "True", "ignore_ti_state", "True", "test_mode", "True"], ["session", "delete", "ti", "dag_run"]]}, "name": "task_test", "params": {"args": "", "dag": "DAG | None"}, "params_descr": {"args": "", "dag": ""}, "params_occur": {"args": [["args", "env_vars"], ["env_vars", "update", "args", "env_vars"], ["dag", "dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"], ["args", "task_params"], ["passed_in_params", "json", "loads", "args", "task_params"], ["ti", "dr_created", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"], ["args", "dry_run"], ["args", "post_mortem"]], "dag": [["dag", "dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"]]}, "params_p": {"args": [], "dag": [["logging.LogRecord", 0.12085809335352882]], "kwargs": []}, "q_name": "task_test", "ret_exprs": [], "ret_type": "None", "variables": {"MASK_SECRETS_IN_LOGS": "", "already_has_stream_handler": "", "dag": "", "debugger": "", "dr_created": "", "env_vars": "", "handlers": "", "passed_in_params": "", "task": "", "ti": ""}, "variables_p": {"MASK_SECRETS_IN_LOGS": [["int", 0.2770417285189542], ["str", 0.2239708244100208], ["bool", 0.18037085928386454], ["float", 0.1259206256992853], ["Dict[str, int]", 0.09703573761608317], ["Union[bool, str]", 0.09566022447179198]], "already_has_stream_handler": [["logging.StreamHandler", 0.42575110304721836], ["logging.Formatter", 0.16940989307186366], ["List[logging.Handler]", 0.13360496745188463], ["logging.Handler", 0.08101304929711309]], "dag": [["list", 0.19049180423989126], ["List[str]", 0.09077784544676554], ["dict", 0.0860165882810082]], "debugger": [["str", 0.26394621209804503]], "dr_created": [["int", 0.8455309094780391]], "env_vars": [["Dict[str, Union[bool, str]]", 0.0912665861217691], ["str", 0.07869139427141073], ["Dict[str, str]", 0.07602630186973344]], "handlers": [["logging.Logger", 0.9314341389900689], ["pineboolib.core.utils.logging.Logger", 0.06856586100993095]], "passed_in_params": [["Dict[str, Any]", 0.27586142797471325], ["Dict[str, bool]", 0.12783558659147862], ["List[str]", 0.12414951891862322], ["int", 0.09462986887952447], ["str", 0.09275606488407212], ["Dict[str, Union[int, Any]]", 0.0877575447844016], ["Dict[str, int]", 0.0810134590508158]], "task": [["Dict[str, Any]", 0.20913945786717467], ["str", 0.20105719900394625], ["Mapping", 0.1182112433954159], ["Sequence", 0.11421639605543793], ["Dict[str, Union[int, str]]", 0.09122084963355388], ["Dict[str, int]", 0.08933602535270238], ["List[str]", 0.08907404509294278], ["Dict[str, Union[Any, Any]]", 0.0877447835988262]], "ti": [["int", 0.6303729572397931], ["str", 0.07437446761509302]]}}, {"docstring": {"func": "Renders and displays templated fields for a given task.", "long_descr": null, "ret": null}, "fn_lc": [[634, 0], [652, 9]], "fn_var_ln": {"_": [[639, 8], [639, 9]], "dag": [[637, 8], [637, 11]], "task": [[638, 4], [638, 8]], "ti": [[639, 4], [639, 6]]}, "fn_var_occur": {"_": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"]], "dag": [["dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"]], "task": [["task", "dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"], ["task", "template_fields"], ["print", "textwrap", "dedent", "attr", "getattr", "ti", "task", "attr"]], "ti": [["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"], ["ti", "render_templates"], ["print", "textwrap", "dedent", "attr", "getattr", "ti", "task", "attr"]]}, "name": "task_render", "params": {"args": "", "dag": "DAG | None"}, "params_descr": {"args": "", "dag": ""}, "params_occur": {"args": [["dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"], ["ti", "_", "_get_ti", "task", "args", "map_index", "exec_date_or_run_id", "args", "execution_date_or_run_id", "create_if_necessary"]], "dag": [["dag", "get_dag", "args", "subdir", "args", "dag_id"], ["task", "dag", "get_task", "task_id", "args", "task_id"]]}, "params_p": {"args": [], "dag": [["logging.LogRecord", 0.12600462596515044], ["Dict[str, Any]", 0.08709138088672273]], "kwargs": []}, "q_name": "task_render", "ret_exprs": [], "ret_type": "None", "variables": {"_": "", "dag": "", "task": "", "ti": ""}, "variables_p": {"_": [["int", 0.7242941071342374], ["str", 0.09070074078511939]], "dag": [["list", 0.1953559989637822], ["List[str]", 0.1772680759205182]], "task": [["Sequence", 0.137955324691008], ["List[str]", 0.11654187018008812], ["Mapping", 0.08826757683092351]], "ti": [["int", 0.7242941071342374], ["str", 0.09070074078511939]]}}, {"docstring": {"func": "Clears all task instances or only those matched by regex for a DAG(s).", "long_descr": null, "ret": null}, "fn_lc": [[656, 0], [683, 5]], "fn_var_ln": {"dags": [[664, 8], [664, 12]]}, "fn_var_occur": {"dags": [["dags", "get_dag_by_file_location", "args", "dag_id"], ["dags", "get_dags", "args", "subdir", "args", "dag_id", "use_regex", "args", "dag_regex"], ["enumerate", "dags"], ["dags", "idx", "dag", "partial_subset", "task_ids_or_regex", "args", "task_regex", "include_downstream", "args", "downstream", "include_upstream", "args", "upstream"], ["DAG", "clear_dags", "dags", "start_date", "args", "start_date", "end_date", "args", "end_date", "only_failed", "args", "only_failed", "only_running", "args", "only_running", "confirm_prompt", "args", "yes", "include_subdags", "args", "exclude_subdags", "include_parentdag", "args", "exclude_parentdag"]]}, "name": "task_clear", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["args", "dag_id", "args", "subdir", "args", "dag_regex", "args", "task_regex"], ["dags", "get_dag_by_file_location", "args", "dag_id"], ["dags", "get_dags", "args", "subdir", "args", "dag_id", "use_regex", "args", "dag_regex"], ["args", "task_regex"], ["dags", "idx", "dag", "partial_subset", "task_ids_or_regex", "args", "task_regex", "include_downstream", "args", "downstream", "include_upstream", "args", "upstream"], ["DAG", "clear_dags", "dags", "start_date", "args", "start_date", "end_date", "args", "end_date", "only_failed", "args", "only_failed", "only_running", "args", "only_running", "confirm_prompt", "args", "yes", "include_subdags", "args", "exclude_subdags", "include_parentdag", "args", "exclude_parentdag"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "task_clear", "ret_exprs": [], "ret_type": "None", "variables": {"dags": ""}, "variables_p": {"dags": [["Dict[int, Any]", 0.15672145976665225], ["dict", 0.117813191313978], ["int", 0.07010736216899531], ["str", 0.058906595656989]]}}], "imports": ["__future__", "annotations", "importlib", "json", "logging", "os", "sys", "textwrap", "contextlib", "contextmanager", "redirect_stderr", "redirect_stdout", "suppress", "typing", "Generator", "Union", "cast", "pendulum", "pendulum", "parsing", "exceptions", "ParserError", "sqlalchemy", "orm", "exc", "NoResultFound", "sqlalchemy", "orm", "session", "Session", "airflow", "settings", "airflow", "cli", "simple_table", "AirflowConsole", "airflow", "configuration", "conf", "airflow", "exceptions", "AirflowException", "DagRunNotFound", "TaskInstanceNotFound", "airflow", "executors", "executor_loader", "ExecutorLoader", "airflow", "jobs", "job", "Job", "run_job", "airflow", "jobs", "local_task_job_runner", "LocalTaskJobRunner", "airflow", "listeners", "listener", "get_listener_manager", "airflow", "models", "DagPickle", "TaskInstance", "airflow", "models", "dag", "DAG", "airflow", "models", "dagrun", "DagRun", "airflow", "models", "operator", "Operator", "needs_expansion", "airflow", "models", "param", "ParamsDict", "airflow", "models", "taskinstance", "TaskReturnCode", "airflow", "settings", "IS_K8S_EXECUTOR_POD", "airflow", "ti_deps", "dep_context", "DepContext", "airflow", "ti_deps", "dependencies_deps", "SCHEDULER_QUEUED_DEPS", "airflow", "typing_compat", "Literal", "Protocol", "airflow", "utils", "cli", "cli_utils", "airflow", "utils", "cli", "get_dag", "get_dag_by_file_location", "get_dag_by_pickle", "get_dags", "should_ignore_depends_on_past", "suppress_logs_and_warning", "airflow", "utils", "dates", "timezone", "airflow", "utils", "log", "file_task_handler", "_set_task_deferred_context_var", "airflow", "utils", "log", "logging_mixin", "StreamLogWriter", "airflow", "utils", "log", "secrets_masker", "RedactedIO", "airflow", "utils", "net", "get_hostname", "airflow", "utils", "session", "NEW_SESSION", "create_session", "provide_session", "airflow", "utils", "state", "DagRunState"], "mod_var_ln": {"CreateIfNecessary": [[72, 0], [72, 17]], "RAW_TASK_UNSUPPORTED_OPTION": [[274, 0], [274, 27]], "SUPPORTED_DEBUGGER_MODULES": [[497, 0], [497, 26]], "log": [[70, 0], [70, 3]]}, "mod_var_occur": {"CreateIfNecessary": [], "RAW_TASK_UNSUPPORTED_OPTION": [["unsupported_options", "o", "o", "RAW_TASK_UNSUPPORTED_OPTION", "getattr", "args", "o"], ["unsupported_raw_task_flags", "join", "o", "o", "RAW_TASK_UNSUPPORTED_OPTION"]], "SUPPORTED_DEBUGGER_MODULES": [["SUPPORTED_DEBUGGER_MODULES"]], "log": [["ti", "log", "handlers", "settings", "DONOT_MODIFY_HANDLERS"], ["info_writer", "StreamLogWriter", "ti", "log", "logging", "INFO"], ["warning_writer", "StreamLogWriter", "ti", "log", "logging", "WARNING"], ["log", "info", "ti", "hostname"]]}, "no_types_annot": {"D": 53, "I": 0, "U": 87}, "session_id": "dwPmE3hbyG0TYAvGA1YSYHmVAWDOvWcnAeQF0SpvPQQ", "set": null, "tc": [false, null], "type_annot_cove": 0.38, "typed_seq": "", "untyped_seq": "", "variables": {"CreateIfNecessary": "", "RAW_TASK_UNSUPPORTED_OPTION": "", "SUPPORTED_DEBUGGER_MODULES": "", "log": ""}, "variables_p": {"CreateIfNecessary": [["Type[orders.models.OrderSellerComment]", 0.09999999999999999], ["int", 0.09999999999999999], ["Type[ajapaik.ajapaik.models.Points]", 0.09999999999999999], ["Type[nativecards.models.CommonInfo]", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "RAW_TASK_UNSUPPORTED_OPTION": [["list", 0.3951861557265884], ["int", 0.12454408421031184], ["tuple", 0.08836590028516296]], "SUPPORTED_DEBUGGER_MODULES": [["List[str]", 0.9999999998837672], ["list", 3.9242447292651966e-11], ["List[List[Any]]", 1.9292714219104022e-11], ["Dict[str, Set[str]]", 1.9232596224256484e-11], ["float", 1.9232596224256484e-11], ["int", 1.9232596224256484e-11]], "log": [["logging.StreamHandler", 0.7373973958794113], ["logging.Formatter", 0.1454870972331307], ["logging.Logger", 0.11711550688745818]]}}}