{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [269, 43]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "CLI entrypoint, called by the main CLI system.", "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [50, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "entrypoint", "params": {"args": "", "cls": ""}, "params_descr": {"args": "", "cls": ""}, "params_occur": {"args": [], "cls": []}, "params_p": {"args": [], "cls": [["memoryview", 0.09999999999999999], ["bool", 0.09999999999999999], ["str", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.entrypoint", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [57, 28]], "fn_var_ln": {"output_queue": [[54, 8], [54, 25]], "ready_delay": [[57, 8], [57, 24]], "ready_time": [[56, 8], [56, 23]], "subcommands": [[53, 8], [53, 24]], "user_info": [[55, 8], [55, 22]]}, "fn_var_occur": {"output_queue": [["self", "output_queue", "deque"]], "ready_delay": [["self", "ready_delay"]], "ready_time": [["self", "ready_time", "None"]], "subcommands": [["self", "subcommands"]], "user_info": [["self", "user_info"]]}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "subcommands"], ["self", "output_queue", "deque"], ["self", "user_info"], ["self", "ready_time", "None"], ["self", "ready_delay"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.__init__", "ret_exprs": [], "ret_type": "", "variables": {"output_queue": "", "ready_delay": "", "ready_time": "", "subcommands": "", "user_info": ""}, "variables_p": {"output_queue": [["str", 0.8153504234450227], ["int", 0.09468179577388205], ["tuple", 0.08996778078109495]], "ready_delay": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "ready_time": [["float", 0.5005265129210553]], "subcommands": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "user_info": [["str", 0.6294095654691636], ["Callable[[], Any]", 0.18477727380610412]]}}, {"docstring": {"func": "Main run loop.", "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [118, 51]], "fn_var_ln": {"env": [[65, 8], [65, 11]], "ready_time": [[100, 20], [100, 35]], "shown_ready": [[107, 20], [107, 31]], "web_server_port": [[87, 8], [87, 28]]}, "fn_var_occur": {"env": [["env", "self", "calculate_env"], ["self", "subcommands", "SubCommand", "self", "name", "command", "env", "env"], ["self", "subcommands", "SubCommand", "self", "name", "command", "env", "env"], ["self", "subcommands", "SubCommand", "self", "name", "command", "env", "env"]], "ready_time": [["self", "ready_time", "self", "is_ready"], ["self", "ready_time", "time", "monotonic"], ["shown_ready", "self", "ready_time", "time", "monotonic", "self", "ready_time", "self", "ready_delay"]], "shown_ready": [["shown_ready", "False"], ["shown_ready", "self", "ready_time", "time", "monotonic", "self", "ready_time", "self", "ready_delay"], ["shown_ready", "True"]], "web_server_port": [["self", "web_server_port", "conf", "getint", "fallback"]]}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "print_output"], ["env", "self", "calculate_env"], ["self", "initialize_database"], ["self", "subcommands", "SubCommand", "self", "name", "command", "env", "env"], ["self", "subcommands", "SubCommand", "self", "name", "command", "env", "env"], ["self", "subcommands", "SubCommand", "self", "name", "command", "env", "env"], ["self", "web_server_port", "conf", "getint", "fallback"], ["self", "subcommands", "values"], ["self", "update_output"], ["self", "ready_time", "self", "is_ready"], ["self", "ready_time", "time", "monotonic"], ["shown_ready", "self", "ready_time", "time", "monotonic", "self", "ready_time", "self", "ready_delay"], ["self", "print_ready"], ["self", "print_output"], ["self", "subcommands", "values"], ["self", "subcommands", "values"], ["self", "print_output"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.run", "ret_exprs": [], "ret_type": "", "variables": {"env": "", "ready_time": "", "shown_ready": "", "web_server_port": ""}, "variables_p": {"env": [["str", 0.4800573167132483], ["List[str]", 0.1259409615159882], ["set", 0.11823131326742219], ["Callable(subprocess.check_output)[..., Any][[[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Literal[True])], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, str), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, bool, default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, str), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), KeywordOnly(universal_newlines, Literal[True]), KeywordOnly(startupinfo, Any, default), KeywordOnly(creationflags, int, default), KeywordOnly(restore_signals, bool, default), KeywordOnly(start_new_session, bool, default), KeywordOnly(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, Optional[str], default), KeywordOnly(errors, Optional[str], default), KeywordOnly(text, Optional[bool], default)], str][[Named(args, Union[Sequence[Union[_PathLike[bytes], _PathLike[str], bytes, str]], bytes, str]), Named(bufsize, int, default), Named(executable, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(stdin, Union[None, IO[Any], int], default), Named(stderr, Union[None, IO[Any], int], default), Named(preexec_fn, Optional[Callable[[], Any]], default), Named(close_fds, bool, default), Named(shell, bool, default), Named(cwd, Union[None, _PathLike[bytes], _PathLike[str], bytes, str], default), Named(env, Union[None, Mapping[bytes, Union[bytes, str]], Mapping[str, Union[bytes, str]]], default), Named(universal_newlines, Literal[False], default), Named(startupinfo, Any, default), Named(creationflags, int, default), Named(restore_signals, bool, default), Named(start_new_session, bool, default), Named(pass_fds, Any, default), KeywordOnly(timeout, Optional[float], default), KeywordOnly(input, Union[bytes, str], default), KeywordOnly(encoding, None, default), KeywordOnly(errors, None, default), KeywordOnly(text, Optional[Literal[False]], default)], bytes][Any, Any]]", 0.09534203762142389], ["list", 0.09196209140376443], ["Optional[str]", 0.08846627947815312]], "ready_time": [["float", 0.4742850011242671], ["time.struct_time", 0.21322527316786583], ["int", 0.09215307634418789]], "shown_ready": [["int", 0.21558281255788436], ["dict", 0.09002583370697495]], "web_server_port": [["str", 0.3976033988838368], ["Dict[str, Any]", 0.09933478840952348]]}}, {"docstring": {"func": "Drains the output queue and prints its contents to the screen.", "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [127, 45]], "fn_var_ln": {"line": [[124, 18], [124, 22]], "line_str": [[126, 12], [126, 20]], "name": [[124, 12], [124, 16]]}, "fn_var_occur": {"line": [["name", "line", "self", "output_queue", "popleft"], ["line_str", "line", "decode", "strip"]], "line_str": [["line_str", "line", "decode", "strip"], ["self", "print_output", "name", "line_str"]], "name": [["name", "line", "self", "output_queue", "popleft"], ["self", "print_output", "name", "line_str"]]}, "name": "update_output", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "output_queue"], ["name", "line", "self", "output_queue", "popleft"], ["self", "print_output", "name", "line_str"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.update_output", "ret_exprs": [], "ret_type": "", "variables": {"line": "", "line_str": "", "name": ""}, "variables_p": {"line": [["List[str]", 0.38003453872781817], ["str", 0.21029226315282395], ["Callable[[List[str]], Iterable[str]]", 0.12908520355818787]], "line_str": [["str", 0.5975177213005121], ["Type[str]", 0.20503874601088948], ["List[str]", 0.10363948776262712], ["list", 0.09380404492597148]], "name": [["str", 0.8814645270047304]]}}, {"docstring": {"func": "Prints an output line with name and colouring.", "long_descr": "You can pass multiple lines to output if you wish; it will be split for you.", "ret": null}, "fn_lc": [[129, 4], [143, 55]], "fn_var_ln": {"color": [[135, 8], [135, 13]], "colorised_name": [[141, 8], [141, 22]]}, "fn_var_occur": {"color": [["color", "get", "name"], ["colorised_name", "colored", "name", "color"]], "colorised_name": [["colorised_name", "colored", "name", "color"], ["print", "colorised_name", "line", "strip"]]}, "name": "print_output", "params": {"name": "builtins.str", "output": "", "self": ""}, "params_descr": {"name": "", "output": "", "self": ""}, "params_occur": {"name": [["color", "get", "name"], ["colorised_name", "colored", "name", "color"]], "output": [["output", "split"]], "self": []}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.6879511343898131], ["Optional[str]", 0.12481071352135212]], "output": [["str", 0.9047648420341343], ["Union[str, Iterable[str]]", 0.09523515796586554]], "self": []}, "q_name": "StandaloneCommand.print_output", "ret_exprs": [], "ret_type": "", "variables": {"color": "", "colorised_name": ""}, "variables_p": {"color": [["str", 0.39533938147798414], ["List[str]", 0.11128465233519103], ["list", 0.09490048444332828], ["dict", 0.08798209640690466]], "colorised_name": [["str", 0.9999999999999998]]}}, {"docstring": {"func": "Prints an error message to the console.", "long_descr": "This is the same as print_output but with the text red", "ret": null}, "fn_lc": [[145, 4], [151, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "print_error", "params": {"name": "builtins.str", "output": "", "self": ""}, "params_descr": {"name": "", "output": "", "self": ""}, "params_occur": {"name": [["self", "print_output", "name", "colored", "output"]], "output": [["self", "print_output", "name", "colored", "output"]], "self": [["self", "print_output", "name", "colored", "output"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.41430555448168865], ["Optional[str]", 0.2928472227591556], ["List[str]", 0.09761574091971853]], "output": [["str", 0.41430555448168865], ["Optional[str]", 0.2928472227591556], ["List[str]", 0.09761574091971853]], "self": []}, "q_name": "StandaloneCommand.print_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Works out the environment variables needed to run subprocesses.", "long_descr": "We override some settings as part of being standalone.", "ret": null}, "fn_lc": [[153, 4], [170, 18]], "fn_var_ln": {"_": [[162, 24], [162, 25]], "env": [[159, 8], [159, 11]], "executor_class": [[162, 8], [162, 22]]}, "fn_var_occur": {"_": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"]], "env": [["env", "dict", "os", "environ"], ["env", "executor_constants", "SEQUENTIAL_EXECUTOR"], ["env", "executor_constants", "LOCAL_EXECUTOR"]], "executor_class": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"], ["executor_class", "is_local"]]}, "name": "calculate_env", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "print_output"], ["self", "print_output"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.calculate_env", "ret_exprs": ["return env"], "ret_type": "", "ret_type_p": [["Dict[str, str]", 0.19056433717250942], ["List[str]", 0.11329039987920705], ["str", 0.10622998385385227], ["Mapping[str, str]", 0.09460142852550789], ["\"jinja2.Environment\"", 0.09460142852550789]], "variables": {"_": "", "env": "", "executor_class": ""}, "variables_p": {"_": [["str", 0.6986583503136683], ["Callable(os.path.join)[..., Any][[[Named(a, Union[_PathLike[str], str]), Variable(Union[_PathLike[str], str])], str][Any, Any]]", 0.21449626573549865], ["float", 0.08684538395083312]], "env": [["str", 0.5875323018772022], ["int", 0.11704646848797429]], "executor_class": [["str", 1.0]]}}, {"docstring": {"func": "Makes sure all the tables are created.", "long_descr": null, "ret": null}, "fn_lc": [[172, 4], [211, 68]], "fn_var_ln": {"password": [[209, 12], [209, 20]], "password_path": [[188, 8], [188, 21]], "role": [[193, 12], [193, 16]], "user_exists": [[187, 12], [187, 23]], "user_info": [[211, 8], [211, 22]], "we_know_password": [[189, 8], [189, 24]]}, "fn_var_occur": {"password": [["password", "join", "random", "choice", "i", "range"], ["file", "write", "password"], ["appbuilder", "sm", "add_user", "role", "password"], ["password", "file", "read", "strip"], ["password", "None"], ["self", "user_info", "password"]], "password_path": [["password_path", "os", "path", "join", "AIRFLOW_HOME"], ["we_know_password", "os", "path", "isfile", "password_path"], ["open", "password_path", "file"], ["make_group_other_inaccessible", "password_path"], ["open", "password_path", "file"]], "role": [["role", "appbuilder", "sm", "find_role"], ["role", "None"], ["appbuilder", "sm", "add_user", "role", "password"]], "user_exists": [["user_exists", "appbuilder", "sm", "find_user"], ["user_exists", "we_know_password"]], "user_info": [["self", "user_info", "password"]], "we_know_password": [["we_know_password", "os", "path", "isfile", "password_path"], ["user_exists", "we_know_password"]]}, "name": "initialize_database", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "print_output"], ["self", "print_output"], ["self", "print_output"], ["self", "print_output"], ["self", "user_info", "password"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.initialize_database", "ret_exprs": [], "ret_type": "", "variables": {"password": "", "password_path": "", "role": "", "user_exists": "", "user_info": "", "we_know_password": ""}, "variables_p": {"password": [["str", 0.7931074076661192], ["Dict[str, str]", 0.2068925923338808]], "password_path": [["str", 1.0]], "role": [], "user_exists": [["str", 0.16142484527989315], ["int", 0.13550745737930606]], "user_info": [["Optional[bytes]", 0.36544681037143156], ["str", 0.20387906406280035], ["List[str]", 0.13092744099590317], ["Optional[Dict]", 0.10193953203140017]], "we_know_password": [["str", 0.6994508349675879], ["Sequence[str]", 0.10025962917245222]]}}, {"docstring": {"func": "Detects when all Airflow components are ready to serve.", "long_descr": "For now, it's simply time-based.", "ret": null}, "fn_lc": [[213, 4], [223, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_ready", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "port_open", "self", "web_server_port", "self", "job_running", "SchedulerJobRunner", "self", "job_running", "TriggererJobRunner"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.is_ready", "ret_exprs": ["return ( self.port_open(self.web_server_port) and self.job_running(SchedulerJobRunner) and self.job_running(TriggererJobRunner))"], "ret_type": "", "ret_type_p": [["str", 0.1954553501381649], ["Iterator", 0.10322412136357306], ["Dict[str, Any]", 0.09871737507304965], ["int", 0.09519714508182649]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Checks if the given port is listening on the local machine.", "long_descr": "Used to tell if webserver is alive.", "ret": null}, "fn_lc": [[225, 4], [239, 19]], "fn_var_ln": {"sock": [[232, 12], [232, 16]]}, "fn_var_occur": {"sock": [["sock", "socket", "socket", "socket", "AF_INET", "socket", "SOCK_STREAM"], ["sock", "settimeout"], ["sock", "connect", "port"], ["sock", "close"]]}, "name": "port_open", "params": {"port": "", "self": ""}, "params_descr": {"port": "", "self": ""}, "params_occur": {"port": [["sock", "connect", "port"]], "self": []}, "params_p": {"args": [], "kwargs": [], "port": [["bool", 0.9999999959255538], ["str", 1.2868146768147886e-09], ["int", 7.113082394546664e-10]], "self": []}, "q_name": "StandaloneCommand.port_open", "ret_exprs": ["return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"sock": ""}, "variables_p": {"sock": [["socket", 0.07310038987134272]]}}, {"docstring": {"func": "Checks if the given job name is running and heartbeating correctly.", "long_descr": "Used to tell if scheduler is alive.", "ret": null}, "fn_lc": [[241, 4], [250, 32]], "fn_var_ln": {"recent": [[247, 8], [247, 14]]}, "fn_var_occur": {"recent": [["recent", "most_recent_job", "job_runner_class", "job_type"], ["recent", "is_alive"]]}, "name": "job_running", "params": {"job_runner_class": "builtins.type[airflow.jobs.base_job_runner.BaseJobRunner]", "self": ""}, "params_descr": {"job_runner_class": "", "self": ""}, "params_occur": {"job_runner_class": [["recent", "most_recent_job", "job_runner_class", "job_type"]], "self": []}, "params_p": {"args": [], "job_runner_class": [["str", 0.22953513514463775], ["bool", 0.16934715318893936], ["Type['Model']", 0.09171348483580803], ["Type[Any]", 0.08946373311447701]], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.job_running", "ret_exprs": ["return False", "return recent.is_alive()"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {"recent": ""}, "variables_p": {"recent": [["Dict[str, str]", 0.17353722084771536], ["Type[Tuple[str, ...]]", 0.14211939125100084], ["list", 0.11981674945758335], ["set", 0.09400027771117613], ["Dict[str, OrderedDict[str, Any]]", 0.09037234094035675], ["str", 0.08642795453146092]]}}, {"docstring": {"func": "Prints the banner shown when Airflow is ready to go.", "long_descr": "Include with login details.", "ret": null}, "fn_lc": [[252, 4], [269, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "print_ready", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "print_output"], ["self", "print_output"], ["self", "user_info"], ["self", "print_output", "self", "user_info", "self", "user_info"], ["self", "print_output"], ["self", "print_output"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "StandaloneCommand.print_ready", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "StandaloneCommand", "q_name": "StandaloneCommand", "variables": {}, "variables_p": {}}, {"cls_lc": [[272, 0], [301, 32]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[281, 4], [286, 22]], "fn_var_ln": {"command": [[285, 8], [285, 20]], "env": [[286, 8], [286, 16]], "name": [[284, 8], [284, 17]], "parent": [[283, 8], [283, 19]]}, "fn_var_occur": {"command": [["self", "command", "command"]], "env": [["self", "env", "env"]], "name": [["self", "name", "name"]], "parent": [["self", "parent", "parent"]]}, "name": "__init__", "params": {"command": "builtins.list[builtins.str]", "env": "builtins.dict[builtins.str, builtins.str]", "name": "builtins.str", "parent": "", "self": ""}, "params_descr": {"command": "", "env": "", "name": "", "parent": "", "self": ""}, "params_occur": {"command": [["self", "command", "command"]], "env": [["self", "env", "env"]], "name": [["self", "name", "name"]], "parent": [["self", "parent", "parent"]], "self": [["self", "parent", "parent"], ["self", "name", "name"], ["self", "command", "command"], ["self", "env", "env"]]}, "params_p": {"args": [], "command": [["Optional[str]", 0.6405362530424393], ["bool", 0.2822917346928816], ["int", 0.07717201226467896]], "env": [["Optional[str]", 0.6405362530424393], ["bool", 0.2822917346928816], ["int", 0.07717201226467896]], "kwargs": [], "name": [["str", 0.6576238981963228], ["Optional[str]", 0.08597099306854582], ["Optional[Dict[str, str]]", 0.08597099306854582], ["bool", 0.08521705783329284]], "parent": [["str", 0.31300526772812953], ["Iterable", 0.19940318130621973], ["Dict[str, cmk.gui.plugins.views.utils.Painter]", 0.10454813720177766], ["Optional[str]", 0.10286671848856002], ["T", 0.09975243848352196], ["bool", 0.09021212839589567], ["cmk.utils.type_defs.TagGroups", 0.09021212839589567]], "self": []}, "q_name": "SubCommand.__init__", "ret_exprs": [], "ret_type": "", "variables": {"command": "", "env": "", "name": "", "parent": ""}, "variables_p": {"command": [["int", 5.5989668575698766e-11], ["dict", 2.2256966047165896e-11], ["str", 1.8663222858566254e-11], ["Iterable[Tuple[str, str]]", 1.3259857920969148e-11]], "env": [["set", 0.12408321421154699], ["str", 0.11434552042671528], ["dict", 0.0452453339386799]], "name": [["str", 0.9999999999637337], ["Dict[str, str]", 3.626623568486625e-11]], "parent": [["\"PNSqlCursor\"", 0.9999999999104979], ["Callable", 1.8620967021336764e-11], ["int", 1.537128377594087e-11], ["Type[T]", 1.1737746179994775e-11], ["dict", 7.42045877920996e-12], ["list", 7.2741412310679416e-12]]}}, {"docstring": {"func": "Runs the actual process and captures it output to a queue.", "long_descr": null, "ret": null}, "fn_lc": [[288, 4], [297, 62]], "fn_var_ln": {"process": [[290, 8], [290, 20]]}, "fn_var_occur": {"process": [["self", "process", "subprocess", "Popen", "self", "command", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "STDOUT", "env", "self", "env"], ["self", "process", "stdout"]]}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "process", "subprocess", "Popen", "self", "command", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "STDOUT", "env", "self", "env"], ["self", "process", "stdout"], ["self", "parent", "output_queue", "append", "self", "name", "line"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SubCommand.run", "ret_exprs": [], "ret_type": "", "variables": {"process": ""}, "variables_p": {"process": [["str", 0.42126641382900964], ["Optional[str]", 0.09262636091002359], ["list", 0.0842114963669424], ["Dict[str, int]", 0.08358453297735151]]}}, {"docstring": {"func": "Call to stop this process (and thus this thread).", "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [301, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "stop", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "process", "terminate"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SubCommand.stop", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "SubCommand", "q_name": "SubCommand", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "os", "random", "socket", "subprocess", "threading", "time", "collections", "deque", "termcolor", "colored", "airflow", "configuration", "AIRFLOW_HOME", "conf", "make_group_other_inaccessible", "airflow", "executors", "executor_constants", "airflow", "executors", "executor_loader", "ExecutorLoader", "airflow", "jobs", "base_job_runner", "BaseJobRunner", "airflow", "jobs", "job", "most_recent_job", "airflow", "jobs", "scheduler_job_runner", "SchedulerJobRunner", "airflow", "jobs", "triggerer_job_runner", "TriggererJobRunner", "airflow", "utils", "db", "airflow", "utils", "cli_app_builder", "get_application_builder"], "mod_var_ln": {"standalone": [[305, 0], [305, 10]]}, "mod_var_occur": {"standalone": []}, "no_types_annot": {"D": 3, "I": 0, "U": 51}, "session_id": "zdvivCMRzjCqhYJ9ToiWxu21g8geXTg_lG5wh08x50Q", "set": null, "tc": [false, null], "type_annot_cove": 0.06, "typed_seq": "", "untyped_seq": "", "variables": {"standalone": ""}, "variables_p": {"standalone": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}