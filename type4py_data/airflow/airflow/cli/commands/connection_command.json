{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 0], [60, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_connection_mapper", "params": {"conn": "airflow.models.Connection"}, "params_descr": {"conn": ""}, "params_occur": {"conn": [["conn", "id", "conn", "conn_id", "conn", "conn_type", "conn", "description", "conn", "host", "conn", "schema", "conn", "login", "conn", "password", "conn", "port", "conn", "is_encrypted", "conn", "is_encrypted", "conn", "extra_dejson", "conn", "get_uri"]]}, "params_p": {"args": [], "conn": [["str", 0.41736560749629825], ["Optional[str]", 0.1698799114166613], ["bool", 0.108469529711892], ["pathlib.Path", 0.10648620211930498], ["Hashable", 0.0880363106571982]], "kwargs": []}, "q_name": "_connection_mapper", "ret_exprs": ["return { \"id\": conn.id, \"conn_id\": conn.conn_id, \"conn_type\": conn.conn_type, \"description\": conn.description, \"host\": conn.host, \"schema\": conn.schema, \"login\": conn.login, \"password\": conn.password, \"port\": conn.port, \"is_encrypted\": conn.is_encrypted, \"is_extra_encrypted\": conn.is_encrypted, \"extra_dejson\": conn.extra_dejson, \"get_uri\": conn.get_uri(),}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["int", 0.1764231981610933], ["models.seat_group.SeatGroup", 0.14189925745228293], ["ticketing.models.ticket_bundle.TicketBundle", 0.14189925745228293], ["dict", 0.09746196693449306]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get a connection.", "long_descr": null, "ret": null}, "fn_lc": [[64, 0], [74, 5]], "fn_var_ln": {"conn": [[67, 8], [67, 12]]}, "fn_var_occur": {"conn": [["conn", "BaseHook", "get_connection", "args", "conn_id"], ["AirflowConsole", "print_as", "data", "conn", "output", "args", "output", "mapper", "_connection_mapper"]]}, "name": "connections_get", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["conn", "BaseHook", "get_connection", "args", "conn_id"], ["AirflowConsole", "print_as", "data", "conn", "output", "args", "output", "mapper", "_connection_mapper"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "connections_get", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["list", 0.2261750081243379], ["Dict[Any, int]", 0.08820913536290798]]}}, {"docstring": {"func": "Lists all connections at the command line.", "long_descr": null, "ret": null}, "fn_lc": [[78, 0], [91, 9]], "fn_var_ln": {"conns": [[85, 8], [85, 13]], "query": [[84, 8], [84, 13]]}, "fn_var_occur": {"conns": [["conns", "query", "all"], ["AirflowConsole", "print_as", "data", "conns", "output", "args", "output", "mapper", "_connection_mapper"]], "query": [["query", "select", "Connection"], ["query", "query", "where", "Connection", "conn_id", "args", "conn_id"], ["query", "session", "scalars", "query"], ["conns", "query", "all"]]}, "name": "connections_list", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["args", "conn_id"], ["query", "query", "where", "Connection", "conn_id", "args", "conn_id"], ["AirflowConsole", "print_as", "data", "conns", "output", "args", "output", "mapper", "_connection_mapper"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "connections_list", "ret_exprs": [], "ret_type": "", "variables": {"conns": "", "query": ""}, "variables_p": {"conns": [["int", 0.3435847941787367], ["str", 0.28065903232263434], ["Dict[str, Dict[str, Any]]", 0.10764380912527215], ["Dict[str, str]", 0.08841473602360629]], "query": [["str", 0.21917112616134732], ["dict", 0.12992331105722796], ["List[str]", 0.09911725645512796], ["list", 0.09466216194757698], ["sqlalchemy.orm.Session", 0.08852466775051153], ["Dict[str, str]", 0.08442245319641851]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 0], [104, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_connection_to_dict", "params": {"conn": "airflow.models.Connection"}, "params_descr": {"conn": ""}, "params_occur": {"conn": [["dict", "conn_type", "conn", "conn_type", "description", "conn", "description", "login", "conn", "login", "password", "conn", "password", "host", "conn", "host", "port", "conn", "port", "schema", "conn", "schema", "extra", "conn", "extra"]]}, "params_p": {"args": [], "conn": [["Optional[str]", 0.12304252251754261], ["Dict[str, Any]", 0.11916009464243536], ["pywirelessmbus.utils.IMSTMessage", 0.10459105432594211], ["int", 0.08639502570920747]], "kwargs": []}, "q_name": "_connection_to_dict", "ret_exprs": ["return dict( conn_type=conn.conn_type, description=conn.description, login=conn.login, password=conn.password, host=conn.host, port=conn.port, schema=conn.schema, extra=conn.extra,)"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.15506116801030997], ["Dict[str, Any]", 0.09831507622572547], ["bool", 0.09686268495108839], ["Dict[str, float]", 0.09386151552772815], ["Dict[str, str]", 0.09344027521021489], ["Dict[str, models.DeviceRow]", 0.09322559506119758], ["Dict[str, models.HistoryRow]", 0.09322559506119758], ["Optional[Dict[str, Any]]", 0.0913914960795574]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 0], [130, 39]], "fn_var_ln": {"connections_dict": [[120, 4], [120, 20]], "connections_env": [[115, 8], [115, 23]], "serializer_func": [[111, 8], [111, 23]]}, "fn_var_occur": {"connections_dict": [["connections_dict", "conn", "conn_id", "_connection_to_dict", "conn"], ["yaml", "dump", "connections_dict"], ["json", "dumps", "connections_dict", "indent"], ["json", "dumps", "connections_dict"]], "connections_env": [["connections_env", "conn", "conn_id", "serializer_func", "conn"]], "serializer_func": [["serializer_func", "x", "json", "dumps", "_connection_to_dict", "x"], ["serializer_func", "Connection", "get_uri"], ["connections_env", "conn", "conn_id", "serializer_func", "conn"]]}, "name": "_format_connections", "params": {"conns": "builtins.list[airflow.models.Connection]", "file_format": "builtins.str", "serialization_format": "builtins.str"}, "params_descr": {"conns": "", "file_format": "", "serialization_format": ""}, "params_occur": {"conns": [], "file_format": [], "serialization_format": [["SystemExit", "serialization_format"]]}, "params_p": {"args": [], "conns": [["str", 0.3957928141688663], ["bool", 0.3174477381620582], ["List[str]", 0.09838966763240613], ["List[int]", 0.09838966763240613], ["list", 0.0899801124042632]], "file_format": [["str", 0.3957928141688663], ["bool", 0.3174477381620582], ["List[str]", 0.09838966763240613], ["List[int]", 0.09838966763240613], ["list", 0.0899801124042632]], "kwargs": [], "serialization_format": [["str", 0.38599933581081736], ["int", 0.21337684453874878]]}, "q_name": "_format_connections", "ret_exprs": ["return connections_env", "return yaml.dump(connections_dict)", "return json.dumps(connections_dict, indent=2)", "return json.dumps(connections_dict)"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.1985851504165829]], "variables": {"connections_dict": "", "connections_env": "", "serializer_func": ""}, "variables_p": {"connections_dict": [["Dict[Any, str]", 0.3014883540913268], ["dict", 0.2996994537311354], ["Dict[Any, dict]", 0.19286386954410153], ["Dict[str, Union[int, str]]", 0.11656397084513252]], "connections_env": [["Dict[str, str]", 0.201743761048511], ["alerta.models.user.User", 0.18236901262652533], ["List[str]", 0.12935255041923], ["Dict[Optional[str], str]", 0.10591750927936061], ["str", 0.10216750496636148], ["list", 0.09415874022259435], ["cmk.base.check_utils.CheckTable", 0.09161399063799673]], "serializer_func": [["list", 0.5033433031122834], ["str", 0.1873711842870319]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 0], [134, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_is_stdout", "params": {"fileio": "io.TextIOWrapper"}, "params_descr": {"fileio": ""}, "params_occur": {"fileio": [["fileio", "name"]]}, "params_p": {"args": [], "fileio": [["Optional[zerver.models.Stream]", 0.19275047606755424], ["zerver.models.Stream", 0.15977510635601427], ["Dict[str, Any]", 0.0710271896669384], ["int", 0.06472308933749356]], "kwargs": []}, "q_name": "_is_stdout", "ret_exprs": ["return fileio.name == \"<stdout>\""], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.5841683334912898], ["zerver.models.Realm", 0.1827809135683833], ["Optional[str]", 0.11652537647016342]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if a URI is valid, by checking if scheme (conn_type) provided.", "long_descr": null, "ret": null}, "fn_lc": [[137, 0], [139, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_valid_uri", "params": {"uri": "builtins.str"}, "params_descr": {"uri": ""}, "params_occur": {"uri": [["urlsplit", "uri", "scheme"]]}, "params_p": {"args": [], "kwargs": [], "uri": [["Callable[[str], bool]", 0.19999999989539743], ["List[object]", 0.19999999989539743], ["Optional[str]", 0.19999999989539743], ["dict", 0.19999999989539743], ["int", 1.0541910459914348e-10]]}, "q_name": "_valid_uri", "ret_exprs": ["return urlsplit(uri).scheme != \"\""], "ret_type": "builtins.bool", "ret_type_p": [["Callable[[str], bool]", 0.19999999989539743], ["List[object]", 0.19999999989539743], ["Optional[str]", 0.19999999989539743], ["dict", 0.19999999989539743], ["int", 1.0541910459914348e-10]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns connection types available.", "long_descr": null, "ret": null}, "fn_lc": [[143, 0], [150, 28]], "fn_var_ln": {"_connection_types": [[145, 4], [145, 21]], "providers_manager": [[146, 4], [146, 21]]}, "fn_var_occur": {"_connection_types": [["_connection_types", "append", "connection_type"]], "providers_manager": [["providers_manager", "ProvidersManager"], ["providers_manager", "hooks", "items"]]}, "name": "_get_connection_types", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_get_connection_types", "ret_exprs": ["return _connection_types"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["zam_repondeur.models.division.SubDiv", 0.042158015426430405]], "variables": {"_connection_types": "", "providers_manager": ""}, "variables_p": {"_connection_types": [["list", 0.7919577639584022], ["str", 0.10448847065337273], ["List[Tuple[str, Any]]", 0.10355376538822485]], "providers_manager": []}}, {"docstring": {"func": "Exports all connections to a file.", "long_descr": null, "ret": null}, "fn_lc": [[153, 0], [196, 72]], "fn_var_ln": {"connections": [[182, 8], [182, 19]], "default_format": [[160, 4], [160, 18]], "file_formats": [[155, 4], [155, 16]], "file_is_stdout": [[165, 4], [165, 18]], "filetype": [[172, 8], [172, 16]], "msg": [[184, 4], [184, 7]], "provided_file_format": [[163, 8], [163, 28]]}, "fn_var_occur": {"connections": [["connections", "session", "scalars", "select", "Connection", "order_by", "Connection", "conn_id", "all"], ["msg", "_format_connections", "conns", "connections", "file_format", "filetype", "serialization_format", "args", "serialization_format"]], "default_format": [["filetype", "provided_file_format", "default_format"]], "file_formats": [["filetype", "file_formats"], ["SystemExit", "join", "file_formats"]], "file_is_stdout": [["file_is_stdout", "_is_stdout", "args", "file"]], "filetype": [["filetype", "provided_file_format", "default_format"], ["filetype", "provided_file_format"], ["filetype", "Path", "args", "file", "name", "suffix"], ["filetype", "filetype", "lower"], ["filetype", "file_formats"], ["args", "serialization_format", "filetype"], ["msg", "_format_connections", "conns", "connections", "file_format", "filetype", "serialization_format", "args", "serialization_format"]], "msg": [["msg", "_format_connections", "conns", "connections", "file_format", "filetype", "serialization_format", "args", "serialization_format"], ["f", "write", "msg"]], "provided_file_format": [["provided_file_format", "None"], ["provided_file_format", "args", "format", "args", "file_format", "lower"], ["filetype", "provided_file_format", "default_format"], ["filetype", "provided_file_format"]]}, "name": "connections_export", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["args", "format"], ["args", "format", "args", "file_format"], ["args", "format", "args", "file_format"], ["provided_file_format", "args", "format", "args", "file_format", "lower"], ["file_is_stdout", "_is_stdout", "args", "file"], ["filetype", "Path", "args", "file", "name", "suffix"], ["args", "serialization_format", "filetype"], ["msg", "_format_connections", "conns", "connections", "file_format", "filetype", "serialization_format", "args", "serialization_format"], ["args", "file", "f"], ["print", "args", "file", "name"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "connections_export", "ret_exprs": [], "ret_type": "", "variables": {"connections": "", "default_format": "", "file_formats": "", "file_is_stdout": "", "filetype": "", "msg": "", "provided_file_format": ""}, "variables_p": {"connections": [["str", 0.41568567209223756], ["viewer.models.Gallery", 0.1128177123782662], ["List[str]", 0.10388094458220502], ["float", 0.09322828222875235]], "default_format": [["str", 0.9999999999999999]], "file_formats": [["str", 0.9032939241336466], ["int", 0.09670607586635334]], "file_is_stdout": [["List[str]", 0.3308512648762313]], "filetype": [["str", 0.5928121743259909], ["Callable(os.path.join)[..., Any][[[Named(a, Union[_PathLike[str], str]), Variable(Union[_PathLike[str], str])], str][Any, Any]]", 0.31902355902283064]], "msg": [["str", 0.29931573712658155], ["pathlib.Path", 0.1807797043961846], ["List[pathlib.Path]", 0.11806753699250119]], "provided_file_format": [["str", 0.6356140674532952], ["int", 0.2222328638119485], ["List[str]", 0.14215306873475625]]}}, {"docstring": {"func": "Adds new connection.", "long_descr": null, "ret": null}, "fn_lc": [[203, 0], [290, 33]], "fn_var_ln": {"conn_type": [[227, 8], [227, 22]], "has_json": [[206, 4], [206, 12]], "has_type": [[207, 4], [207, 12]], "has_uri": [[205, 4], [205, 11]], "invalid_args": [[230, 8], [230, 20]], "msg": [[289, 12], [289, 15]], "new_conn": [[256, 8], [256, 16]]}, "fn_var_occur": {"conn_type": [["has_type", "bool", "args", "conn_type"], ["has_type", "args", "conn_type", "_get_connection_types"], ["warnings", "warn", "args", "conn_type"], ["args", "conn_type"], ["new_conn", "conn_type"], ["new_conn", "Connection", "conn_id", "args", "conn_id", "conn_type", "args", "conn_type", "description", "args", "conn_description", "host", "args", "conn_host", "login", "args", "conn_login", "password", "args", "conn_password", "schema", "args", "conn_schema", "port", "args", "conn_port"], ["msg", "msg", "format", "conn_id", "new_conn", "conn_id", "uri", "args", "conn_uri", "urlunsplit", "new_conn", "conn_type", "new_conn", "login", "new_conn", "password", "new_conn", "host", "new_conn", "port", "new_conn", "schema"]], "has_json": [["has_json", "bool", "args", "conn_json"], ["has_type", "has_json", "has_uri"], ["has_json", "has_uri"], ["has_uri", "has_json"], ["has_json", "args", "conn_extra"]], "has_type": [["has_type", "bool", "args", "conn_type"], ["has_type", "has_json", "has_uri"], ["has_type", "args", "conn_type", "_get_connection_types"]], "has_uri": [["has_uri", "bool", "args", "conn_uri"], ["has_type", "has_json", "has_uri"], ["has_json", "has_uri"], ["has_uri", "has_json"], ["has_uri", "_valid_uri", "args", "conn_uri"], ["SystemExit", "has_uri", "invalid_args"]], "invalid_args": [["invalid_args", "append", "arg"], ["invalid_args", "append"], ["SystemExit", "has_uri", "invalid_args"]], "msg": [["msg", "msg", "format", "conn_id", "new_conn", "conn_id", "uri", "args", "conn_uri", "urlunsplit", "new_conn", "conn_type", "new_conn", "login", "new_conn", "password", "new_conn", "host", "new_conn", "port", "new_conn", "schema"], ["print", "msg"], ["msg", "new_conn", "conn_id"], ["SystemExit", "msg"]], "new_conn": [["new_conn", "Connection", "conn_id", "args", "conn_id", "description", "args", "conn_description", "uri", "args", "conn_uri"], ["new_conn", "set_extra", "args", "conn_extra"], ["new_conn", "Connection", "from_json", "conn_id", "args", "conn_id", "value", "args", "conn_json"], ["new_conn", "conn_type"], ["new_conn", "Connection", "conn_id", "args", "conn_id", "conn_type", "args", "conn_type", "description", "args", "conn_description", "host", "args", "conn_host", "login", "args", "conn_login", "password", "args", "conn_password", "schema", "args", "conn_schema", "port", "args", "conn_port"], ["new_conn", "set_extra", "args", "conn_extra"], ["session", "scalar", "select", "Connection", "where", "Connection", "conn_id", "new_conn", "conn_id", "limit"], ["session", "add", "new_conn"], ["msg", "msg", "format", "conn_id", "new_conn", "conn_id", "uri", "args", "conn_uri", "urlunsplit", "new_conn", "conn_type", "new_conn", "login", "new_conn", "password", "new_conn", "host", "new_conn", "port", "new_conn", "schema"], ["msg", "new_conn", "conn_id"]]}, "name": "connections_add", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["has_uri", "bool", "args", "conn_uri"], ["has_json", "bool", "args", "conn_json"], ["has_type", "bool", "args", "conn_type"], ["helpers", "validate_key", "args", "conn_id", "max_length"], ["has_type", "args", "conn_type", "_get_connection_types"], ["warnings", "warn", "args", "conn_type"], ["args", "conn_type"], ["has_uri", "_valid_uri", "args", "conn_uri"], ["SystemExit", "args", "conn_uri"], ["getattr", "args", "arg", "None"], ["has_json", "args", "conn_extra"], ["args", "conn_uri"], ["new_conn", "Connection", "conn_id", "args", "conn_id", "description", "args", "conn_description", "uri", "args", "conn_uri"], ["args", "conn_extra", "None"], ["new_conn", "set_extra", "args", "conn_extra"], ["args", "conn_json"], ["new_conn", "Connection", "from_json", "conn_id", "args", "conn_id", "value", "args", "conn_json"], ["new_conn", "Connection", "conn_id", "args", "conn_id", "conn_type", "args", "conn_type", "description", "args", "conn_description", "host", "args", "conn_host", "login", "args", "conn_login", "password", "args", "conn_password", "schema", "args", "conn_schema", "port", "args", "conn_port"], ["args", "conn_extra", "None"], ["new_conn", "set_extra", "args", "conn_extra"], ["msg", "msg", "format", "conn_id", "new_conn", "conn_id", "uri", "args", "conn_uri", "urlunsplit", "new_conn", "conn_type", "new_conn", "login", "new_conn", "password", "new_conn", "host", "new_conn", "port", "new_conn", "schema"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "connections_add", "ret_exprs": [], "ret_type": "", "variables": {"conn_type": "", "has_json": "", "has_type": "", "has_uri": "", "invalid_args": "", "msg": "", "new_conn": ""}, "variables_p": {"conn_type": [["Type[None]", 0.2509189257465793], ["List[str]", 0.09512199976879629], ["Dict[str, list]", 0.0942938806498132], ["functools.partial[bool]", 0.09381940295496517], ["Callable", 0.09042051934674043]], "has_json": [["dict", 0.3109556243874522], ["Dict[Type[Any], Any]", 0.09836688265450688], ["T", 0.09397202118317338], ["Dict[str, Tuple[str, str]]", 0.09363034543693434], ["str", 0.09362128857685266]], "has_type": [["List[str]", 0.23908771122374067], ["faustypes.models.IsInstanceArgT", 0.12134295714698329], ["Type[range]", 0.10595955324442109], ["bool", 0.09325729759903642], ["Dict[str, list]", 0.08917472736345557]], "has_uri": [["dict", 0.30619908464264756], ["Dict[str, Tuple[str, str]]", 0.1051573792644502], ["Dict[Type[Any], Any]", 0.09870097379240865], ["Dict[str, Any]", 0.09500616009384834]], "invalid_args": [["list", 0.7537128230020612], ["List[List[Any]]", 0.17299702073066855]], "msg": [["str", 0.4890993320019069], ["list", 0.11287979970913327], ["Dict[str, str]", 0.10015078463509791], ["tagstore.models.entity.EntityId", 0.09635972140368959], ["Callable", 0.09366081782581051]], "new_conn": [["dict", 0.27216074619249453], ["List[str]", 0.09275144900215124], ["str", 0.08505062697505733]]}}, {"docstring": {"func": "Deletes connection from DB.", "long_descr": null, "ret": null}, "fn_lc": [[294, 0], [305, 88]], "fn_var_ln": {"to_delete": [[298, 12], [298, 21]]}, "fn_var_occur": {"to_delete": [["to_delete", "session", "scalars", "select", "Connection", "where", "Connection", "conn_id", "args", "conn_id", "one"], ["session", "delete", "to_delete"], ["print", "to_delete", "conn_id"]]}, "name": "connections_delete", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["to_delete", "session", "scalars", "select", "Connection", "where", "Connection", "conn_id", "args", "conn_id", "one"], ["SystemExit", "args", "conn_id"], ["SystemExit", "args", "conn_id"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "connections_delete", "ret_exprs": [], "ret_type": "", "variables": {"to_delete": ""}, "variables_p": {"to_delete": [["str", 0.1783547945607475], ["int", 0.09023846925603501], ["List[str]", 0.08473292675464257], ["Dict[str, List[str]]", 0.08426075396889351]]}}, {"docstring": {"func": "Imports connections from a file.", "long_descr": null, "ret": null}, "fn_lc": [[309, 0], [314, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "connections_import", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["os", "path", "exists", "args", "file"], ["_import_helper", "args", "file", "args", "overwrite"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "connections_import", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Load connections from a file and save them to the DB.", "long_descr": null, "ret": null}, "fn_lc": [[317, 0], [342, 51]], "fn_var_ln": {"connections_dict": [[322, 4], [322, 20]], "existing_conn_id": [[331, 12], [331, 28]], "id": [[338, 16], [338, 23]]}, "fn_var_occur": {"connections_dict": [["connections_dict", "load_connections_dict", "file_path"], ["connections_dict", "items"]], "existing_conn_id": [["existing_conn_id", "session", "scalar", "select", "Connection", "id", "where", "Connection", "conn_id", "conn_id"], ["existing_conn_id", "None"], ["conn", "id", "existing_conn_id"]], "id": [["existing_conn_id", "session", "scalar", "select", "Connection", "id", "where", "Connection", "conn_id", "conn_id"], ["conn", "id", "existing_conn_id"]]}, "name": "_import_helper", "params": {"file_path": "builtins.str", "overwrite": "builtins.bool"}, "params_descr": {"file_path": "", "overwrite": "Whether to skip or overwrite on collision."}, "params_occur": {"file_path": [["connections_dict", "load_connections_dict", "file_path"]], "overwrite": []}, "params_p": {"args": [], "file_path": [["str", 0.6377847964092067], ["dict", 0.17740299256110648], ["pathlib.Path", 0.09268222319053578]], "kwargs": [], "overwrite": [["str", 0.7999999999999999], ["list", 0.1]]}, "q_name": "_import_helper", "ret_exprs": [], "ret_type": "None", "variables": {"connections_dict": "", "existing_conn_id": "", "id": ""}, "variables_p": {"connections_dict": [["Dict[Any, Union[int, str]]", 0.28971658007240764], ["Dict[Any, Dict[Any, Any]]", 0.2844783408167696], ["Dict[str, Union[dict, Any]]", 0.11336855923564654], ["Dict[str, str]", 0.10990660519260145], ["Dict[Any, Dict[str, Any]]", 0.1045899581487931], ["Dict[str, Union[int, str]]", 0.09793995653378182]], "existing_conn_id": [["int", 0.3076170727108238], ["Pattern[Any]", 0.11279896807566922], ["Optional[str]", 0.09452971199029866]], "id": [["int", 0.2244743162206822], ["Type[Tuple[str, Any]]", 0.18762721646147276], ["Pattern[Any]", 0.1522572918077455], ["str", 0.08824028111319633]]}}, {"docstring": {"func": "Test an Airflow connection.", "long_descr": null, "ret": null}, "fn_lc": [[346, 0], [368, 77]], "fn_var_ln": {"conn": [[358, 8], [358, 12]], "console": [[348, 4], [348, 11]], "message": [[364, 12], [364, 19]], "status": [[364, 4], [364, 10]]}, "fn_var_occur": {"conn": [["conn", "BaseHook", "get_connection", "args", "conn_id"], ["status", "message", "conn", "test_connection"]], "console": [["console", "AirflowConsole"], ["console", "print"], ["console", "print"], ["console", "print"], ["console", "print", "message"]], "message": [["status", "message", "conn", "test_connection"], ["console", "print", "message"]], "status": [["status", "message", "conn", "test_connection"], ["status", "True"]]}, "name": "connections_test", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": [["print", "args", "conn_id"], ["conn", "BaseHook", "get_connection", "args", "conn_id"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "connections_test", "ret_exprs": [], "ret_type": "None", "variables": {"conn": "", "console": "", "message": "", "status": ""}, "variables_p": {"conn": [["raiden.utils.Any", 0.16953727591729023], ["int", 0.14502602139530263], ["Optional[Callable]", 0.08636932561455378], ["str", 0.08540573128707592]], "console": [["int", 0.49978832292831676], ["deque[int]", 0.12288535766247981], ["set", 0.10875998268850322], ["list", 0.08988472627124734], ["str", 0.08800360850976627]], "message": [["str", 0.38658830649163506], ["int", 0.32119884005463895], ["Dict[Any, str]", 0.089556885962042]], "status": [["str", 0.4921983999368108], ["int", 0.4203149783559935], ["list", 0.0874866217071958]]}}], "imports": ["__future__", "annotations", "io", "json", "os", "sys", "warnings", "pathlib", "Path", "typing", "Any", "urllib", "parse", "urlsplit", "urlunsplit", "sqlalchemy", "select", "sqlalchemy", "orm", "exc", "airflow", "cli", "simple_table", "AirflowConsole", "airflow", "compat", "functools", "cache", "airflow", "configuration", "conf", "airflow", "exceptions", "AirflowNotFoundException", "airflow", "hooks", "base", "BaseHook", "airflow", "models", "Connection", "airflow", "providers_manager", "ProvidersManager", "airflow", "secrets", "local_filesystem", "load_connections_dict", "airflow", "utils", "cli", "cli_utils", "helpers", "yaml", "airflow", "utils", "cli", "suppress_logs_and_warning", "airflow", "utils", "session", "create_session"], "mod_var_ln": {"alternative_conn_specs": [[199, 0], [199, 22]]}, "mod_var_occur": {"alternative_conn_specs": [["alternative_conn_specs"]]}, "no_types_annot": {"D": 17, "I": 0, "U": 44}, "session_id": "_HjaJC4KLdaqMiTHZivx4NzP17hgoAWjOBCn_NwhgXk", "set": null, "tc": [false, null], "type_annot_cove": 0.28, "typed_seq": "", "untyped_seq": "", "variables": {"alternative_conn_specs": ""}, "variables_p": {"alternative_conn_specs": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["Callable(functools.wraps)[[Named(wrapped, Callable[..., Any]), Named(assigned, Sequence[str], default), Named(updated, Sequence[str], default)], Callable[Any, Any]]", 0.1], ["str", 0.1]]}}}