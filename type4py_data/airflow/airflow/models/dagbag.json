{"error": null, "response": {"classes": [{"cls_lc": [[64, 0], [71, 22]], "cls_var_ln": {"dag_num": [[69, 4], [69, 11]], "dags": [[71, 4], [71, 8]], "duration": [[68, 4], [68, 12]], "file": [[67, 4], [67, 8]], "task_num": [[70, 4], [70, 12]]}, "cls_var_occur": {"dag_num": [], "dags": [], "duration": [], "file": [], "task_num": []}, "funcs": [], "name": "FileLoadStat", "q_name": "FileLoadStat", "variables": {"dag_num": "builtins.int", "dags": "builtins.str", "duration": "datetime.timedelta", "file": "builtins.str", "task_num": "builtins.int"}, "variables_p": {"dag_num": [["int", 0.6000000000000001], ["bool", 0.10000000000000002], ["fatf.utils.models.models.KNN", 0.10000000000000002], ["cmk.gui.plugins.openapi.livestatus_helpers.types.Column", 0.10000000000000002], ["str", 0.10000000000000002]], "dags": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "duration": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "file": [["Dict[str, str]", 0.4], ["str", 0.2], ["int", 0.1], ["Type[apps.banners.models.Banner]", 0.1], ["List[Tuple[str, str]]", 0.1], ["List[str]", 0.1]], "task_num": [["Tuple[pathlib.Path]", 0.2281114878737916], ["Type[todo.models.Comment]", 0.09816836568402464], ["str", 0.09816836568402464], ["Type[Dict[str, Any]]", 0.08589179629735193], ["List[str]", 0.08589179629735193], ["int", 0.08363389732344417], ["Dict[Any, Union[Any, Any]]", 0.08313605666018259]]}}, {"cls_lc": [[74, 0], [700, 75]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [149, 42]], "fn_var_ln": {"dag_folder": [[127, 8], [127, 23]], "dagbag_import_error_traceback_depth": [[140, 8], [140, 48]], "dagbag_import_error_tracebacks": [[139, 8], [139, 43]], "dags": [[128, 8], [128, 17]], "dags_hash": [[137, 8], [137, 22]], "dags_last_fetched": [[135, 8], [135, 30]], "file_last_changed": [[130, 8], [130, 30]], "has_logged": [[132, 8], [132, 23]], "import_errors": [[131, 8], [131, 26]], "include_examples": [[108, 8], [108, 24]], "load_op_links": [[149, 8], [149, 26]], "read_dags_from_db": [[133, 8], [133, 30]], "safe_mode": [[113, 8], [113, 17]]}, "fn_var_occur": {"dag_folder": [["dag_folder", "dag_folder", "settings", "DAGS_FOLDER"], ["self", "dag_folder", "dag_folder"], ["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"]], "dagbag_import_error_traceback_depth": [["self", "dagbag_import_error_traceback_depth", "conf", "getint"]], "dagbag_import_error_tracebacks": [["self", "dagbag_import_error_tracebacks", "conf", "getboolean"]], "dags": [["self", "dags", "builtins", "dict", "builtins", "str", "airflow", "models", "dag", "DAG"]], "dags_hash": [["self", "dags_hash", "builtins", "dict", "builtins", "str", "builtins", "str"]], "dags_last_fetched": [["self", "dags_last_fetched", "builtins", "dict", "builtins", "str", "datetime", "datetime"]], "file_last_changed": [["self", "file_last_changed", "builtins", "dict", "builtins", "str", "datetime", "datetime"]], "has_logged": [["self", "has_logged", "False"]], "import_errors": [["self", "import_errors", "builtins", "dict", "builtins", "str", "builtins", "str"]], "include_examples": [["include_examples", "include_examples", "isinstance", "include_examples", "bool", "conf", "getboolean"], ["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"]], "load_op_links": [["self", "load_op_links", "load_op_links"]], "read_dags_from_db": [["read_dags_from_db", "store_serialized_dags"], ["self", "read_dags_from_db", "read_dags_from_db"]], "safe_mode": [["safe_mode", "safe_mode", "isinstance", "safe_mode", "bool", "conf", "getboolean"], ["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"]]}, "name": "__init__", "params": {"collect_dags": "builtins.bool", "dag_folder": "str | pathlib.Path | None", "include_examples": "bool | ArgNotSet", "load_op_links": "builtins.bool", "read_dags_from_db": "builtins.bool", "safe_mode": "bool | ArgNotSet", "self": "", "store_serialized_dags": "bool | None"}, "params_descr": {"collect_dags": "", "dag_folder": "", "include_examples": "", "load_op_links": "", "read_dags_from_db": "", "safe_mode": "", "self": "", "store_serialized_dags": ""}, "params_occur": {"collect_dags": [["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"]], "dag_folder": [["dag_folder", "dag_folder", "settings", "DAGS_FOLDER"], ["self", "dag_folder", "dag_folder"], ["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"]], "include_examples": [["include_examples", "include_examples", "isinstance", "include_examples", "bool", "conf", "getboolean"], ["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"]], "load_op_links": [["self", "load_op_links", "load_op_links"]], "read_dags_from_db": [["read_dags_from_db", "store_serialized_dags"], ["self", "read_dags_from_db", "read_dags_from_db"]], "safe_mode": [["safe_mode", "safe_mode", "isinstance", "safe_mode", "bool", "conf", "getboolean"], ["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"]], "self": [["self", "dag_folder", "dag_folder"], ["self", "dags", "builtins", "dict", "builtins", "str", "airflow", "models", "dag", "DAG"], ["self", "file_last_changed", "builtins", "dict", "builtins", "str", "datetime", "datetime"], ["self", "import_errors", "builtins", "dict", "builtins", "str", "builtins", "str"], ["self", "has_logged", "False"], ["self", "read_dags_from_db", "read_dags_from_db"], ["self", "dags_last_fetched", "builtins", "dict", "builtins", "str", "datetime", "datetime"], ["self", "dags_hash", "builtins", "dict", "builtins", "str", "builtins", "str"], ["self", "dagbag_import_error_tracebacks", "conf", "getboolean"], ["self", "dagbag_import_error_traceback_depth", "conf", "getint"], ["self", "collect_dags", "dag_folder", "dag_folder", "include_examples", "include_examples", "safe_mode", "safe_mode"], ["self", "load_op_links", "load_op_links"]], "store_serialized_dags": [["read_dags_from_db", "store_serialized_dags"]]}, "params_p": {"args": [], "collect_dags": [["bool", 0.29853654518162154], ["Callable", 0.21705076959042566], ["str", 0.1812461917190516]], "dag_folder": [["bool", 0.2948870014673852], ["Optional[str]", 0.18488809050012073], ["Dict[str, str]", 0.14480237709229205], ["List[Optional[str]]", 0.09963703997161322], ["Sequence[str]", 0.09192849698952961], ["str", 0.09192849698952961]], "include_examples": [["bool", 0.4884454292286764], ["Dict[int, int]", 0.09634445526290852], ["raiden.utils.PaymentAmount", 0.09383101715584731], ["raiden.utils.PaymentID", 0.09383101715584731]], "kwargs": [], "load_op_links": [["Optional[List[Any]]", 0.18626107157279254], ["str", 0.1333333832770356], ["bool", 0.1216223304317945], ["int", 0.09313053578639627], ["Optional[bool]", 0.09313053578639627]], "read_dags_from_db": [["Optional[Union['Part', str]]", 0.18638299355872892], ["Optional[List]", 0.18638299355872892], ["bool", 0.13887344590677028], ["str", 0.09534493023210541], ["int", 0.09292273980712465]], "safe_mode": [["Optional[datetime.datetime]", 0.3212180982413974], ["Optional[str]", 0.2845827672254878], ["Optional[bool]", 0.2721262953732856], ["Optional[zerver.models.UserProfile]", 0.12207283915982906]], "self": [], "store_serialized_dags": [["int", 0.3702778873443622], ["bool", 0.182472091445816], ["float", 0.17167536582717174], ["List[str]", 0.10439336473987768]]}, "q_name": "DagBag.__init__", "ret_exprs": [], "ret_type": "", "variables": {"dag_folder": "", "dagbag_import_error_traceback_depth": "", "dagbag_import_error_tracebacks": "", "dags": "builtins.dict[builtins.str, airflow.models.dag.DAG]", "dags_hash": "builtins.dict[builtins.str, builtins.str]", "dags_last_fetched": "builtins.dict[builtins.str, datetime.datetime]", "file_last_changed": "builtins.dict[builtins.str, datetime.datetime]", "has_logged": "", "import_errors": "builtins.dict[builtins.str, builtins.str]", "include_examples": "", "load_op_links": "", "read_dags_from_db": "", "safe_mode": ""}, "variables_p": {"dag_folder": [["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.17987146434406115], ["list", 0.12243661270866109], ["deque[str]", 0.11060572720117112], ["Dict[str, Tuple[Any, Any]]", 0.0985212771966972], ["Optional[str]", 0.09520308667575579], ["requests.sessions.Session", 0.09335442262038629]], "dagbag_import_error_traceback_depth": [["int", 0.5688996321439339], ["Tuple[Union[int, str]]", 0.10541541217834112], ["str", 0.10379484181091997], ["Dict[int, int]", 0.0988389196955849]], "dagbag_import_error_tracebacks": [["int", 0.5688996321439339], ["Tuple[Union[int, str]]", 0.10541541217834112], ["str", 0.10379484181091997], ["Dict[int, int]", 0.0988389196955849]], "dags": [["Dict[str, Any]", 0.40266390526873486], ["str", 0.18286605469361136], ["Dict[str, Sequence[Any]]", 0.10748625844580613], ["dict", 0.10273795803493749], ["Type[Callable[..., Any]]", 0.09686264204473202]], "dags_hash": [["Dict[str, Callable[[], Any]]", 0.27269406111317546], ["List[str]", 0.1956362623813475], ["Set[str]", 0.12720197707271122], ["str", 0.12246705803552835], ["Dict[int, int]", 0.10226963378691865], ["Optional[str]", 0.09032925786281143], ["bool", 0.08940174974750743]], "dags_last_fetched": [["Dict[str, Any]", 0.36103393038765413], ["Dict[str, str]", 0.29741628268946096], ["Dict[str, Optional[str]]", 0.22495350909721645], ["dict", 0.11659627782566863]], "file_last_changed": [["Dict[str, str]", 0.43135218529636976], ["Dict[str, Union[Any, Any]]", 0.10955718238764336], ["Set[str]", 0.10876453805229162], ["Dict[str, Dict[str, Any]]", 0.0873913510231833], ["Dict[Any, str]", 0.08734665475218364], ["str", 0.08571565762493594]], "has_logged": [["str", 0.8984213565359762]], "import_errors": [["Dict[str, str]", 0.5812962153836294], ["Dict[str, Any]", 0.1686318824714393], ["bool", 0.16733872112463746], ["List[str]", 0.08273318102029371]], "include_examples": [], "load_op_links": [["int", 0.36812199288836667], ["Tuple[str, str]", 0.18172986188063908], ["Dict[Union[Any, Any], str]", 0.1508876598959974], ["str", 0.11123130488242663], ["datetime.datetime.datetime", 0.10615692893631186], ["List[str]", 0.08187225151625833]], "read_dags_from_db": [["Optional[str]", 0.19309840299616401], ["Dict[int, int]", 0.10596799101707031], ["Dict[str, Any]", 0.10270858874597887], ["int", 0.08735016460412222]], "safe_mode": [["str", 0.3269440581712083], ["Tuple[Any, Any]", 0.10253315408802165], ["Optional[str]", 0.10223963596403601], ["int", 0.09484932096490552], ["List[Tuple[str, str]]", 0.09094137972965578], ["float", 0.08756380442477293]]}}, {"docstring": {"func": null, "long_descr": null, "ret": "the amount of dags contained in this dagbag"}, "fn_lc": [[151, 4], [153, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "size", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["len", "self", "dags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DagBag.size", "ret_exprs": ["return len(self.dags)"], "ret_type": "builtins.int", "ret_type_p": [["bool", 0.5000000000000001], ["float", 0.10000000000000002]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Whether to read dags from DB.", "long_descr": null, "ret": null}, "fn_lc": [[156, 4], [163, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "store_serialized_dags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "read_dags_from_db"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DagBag.store_serialized_dags", "ret_exprs": ["return self.read_dags_from_db"], "ret_type": "builtins.bool", "ret_type_p": [["dict", 0.18577332060359247], ["List[str]", 0.13278837774564156], ["cmk.utils.type_defs.UserId", 0.10729382065207423], ["werkzeug.exceptions.HTTPException", 0.09228611467685681], ["int", 0.09188048017034163]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get DAG ids.", "long_descr": null, "ret": "a list of DAG IDs in this bag"}, "fn_lc": [[166, 4], [172, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dag_ids", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["list", "self", "dags", "keys"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DagBag.dag_ids", "ret_exprs": ["return list(self.dags.keys())"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["List[str]", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Gets the DAG out of the dictionary, and refreshes it if expired.", "long_descr": null, "ret": null}, "fn_lc": [[175, 4], [261, 36]], "fn_var_ln": {"dag": [[231, 12], [231, 15]], "dags": [[245, 12], [245, 21]], "found_dags": [[252, 12], [252, 22]], "is_expired": [[242, 8], [242, 18]], "is_missing": [[241, 8], [241, 18]], "min_serialized_dag_fetch_secs": [[200, 12], [200, 41]], "orm_dag": [[236, 8], [236, 15]], "root_dag_id": [[233, 16], [233, 27]], "sd_last_updated_datetime": [[217, 35], [217, 59]], "sd_latest_version": [[217, 16], [217, 33]], "sd_latest_version_and_updated_datetime": [[205, 16], [205, 54]]}, "fn_var_occur": {"dag": [["airflow", "models", "dag", "DagModel"], ["dag", "None"], ["dag", "self", "dags", "dag_id"], ["dag", "parent_dag"], ["root_dag_id", "dag", "parent_dag", "dag_id"], ["is_expired", "orm_dag", "last_expired", "dag", "dag", "last_loaded", "orm_dag", "last_expired"], ["self", "dags", "key", "dag", "key", "dag", "self", "dags", "items", "root_dag_id", "key", "dag", "parent_dag", "root_dag_id", "dag", "parent_dag", "dag_id"]], "dags": [["dag_id", "self", "dags"], ["self", "dags", "get", "dag_id"], ["self", "dags", "dag_id"], ["self", "dags", "get", "dag_id"], ["dag_id", "self", "dags"], ["dag", "self", "dags", "dag_id"], ["self", "dags", "get", "dag_id"], ["is_missing", "root_dag_id", "self", "dags"], ["self", "dags", "key", "dag", "key", "dag", "self", "dags", "items", "root_dag_id", "key", "dag", "parent_dag", "root_dag_id", "dag", "parent_dag", "dag_id"], ["self", "dags", "dag_id"], ["dag_id", "self", "dags"], ["self", "dags", "dag_id"], ["self", "dags", "get", "dag_id"]], "found_dags": [["found_dags", "self", "process_file", "filepath", "correct_maybe_zipped", "orm_dag", "fileloc", "only_if_updated", "False"], ["found_dags", "dag_id", "found_dag", "dag_id", "found_dag", "found_dags"]], "is_expired": [["is_expired", "orm_dag", "last_expired", "dag", "dag", "last_loaded", "orm_dag", "last_expired"], ["is_missing", "is_expired"]], "is_missing": [["is_missing", "root_dag_id", "self", "dags"], ["is_missing", "is_expired"]], "min_serialized_dag_fetch_secs": [["min_serialized_dag_fetch_secs", "timedelta", "seconds", "settings", "MIN_SERIALIZED_DAG_FETCH_INTERVAL"], ["dag_id", "self", "dags_last_fetched", "timezone", "utcnow", "self", "dags_last_fetched", "dag_id", "min_serialized_dag_fetch_secs"]], "orm_dag": [["orm_dag", "DagModel", "get_current", "root_dag_id", "session", "session"], ["is_expired", "orm_dag", "last_expired", "dag", "dag", "last_loaded", "orm_dag", "last_expired"], ["found_dags", "self", "process_file", "filepath", "correct_maybe_zipped", "orm_dag", "fileloc", "only_if_updated", "False"]], "root_dag_id": [["root_dag_id", "dag_id"], ["root_dag_id", "dag", "parent_dag", "dag_id"], ["orm_dag", "DagModel", "get_current", "root_dag_id", "session", "session"], ["is_missing", "root_dag_id", "self", "dags"], ["self", "dags", "key", "dag", "key", "dag", "self", "dags", "items", "root_dag_id", "key", "dag", "parent_dag", "root_dag_id", "dag", "parent_dag", "dag_id"]], "sd_last_updated_datetime": [["sd_latest_version", "sd_last_updated_datetime", "sd_latest_version_and_updated_datetime"], ["sd_last_updated_datetime", "self", "dags_last_fetched", "dag_id", "sd_latest_version", "self", "dags_hash", "dag_id"]], "sd_latest_version": [["sd_latest_version", "sd_last_updated_datetime", "sd_latest_version_and_updated_datetime"], ["sd_last_updated_datetime", "self", "dags_last_fetched", "dag_id", "sd_latest_version", "self", "dags_hash", "dag_id"]], "sd_latest_version_and_updated_datetime": [["sd_latest_version_and_updated_datetime", "SerializedDagModel", "get_latest_version_hash_and_updated_datetime", "dag_id", "dag_id", "session", "session"], ["sd_latest_version", "sd_last_updated_datetime", "sd_latest_version_and_updated_datetime"]]}, "name": "get_dag", "params": {"dag_id": "", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_id": "DAG ID", "self": "", "session": ""}, "params_occur": {"dag_id": [["dag_id", "self", "dags"], ["self", "_add_dag_from_db", "dag_id", "dag_id", "session", "session"], ["self", "dags", "get", "dag_id"], ["dag_id", "self", "dags_last_fetched", "timezone", "utcnow", "self", "dags_last_fetched", "dag_id", "min_serialized_dag_fetch_secs"], ["sd_latest_version_and_updated_datetime", "SerializedDagModel", "get_latest_version_hash_and_updated_datetime", "dag_id", "dag_id", "session", "session"], ["self", "log", "warning", "dag_id"], ["self", "dags", "dag_id"], ["self", "dags_last_fetched", "dag_id"], ["self", "dags_hash", "dag_id"], ["sd_last_updated_datetime", "self", "dags_last_fetched", "dag_id", "sd_latest_version", "self", "dags_hash", "dag_id"], ["self", "_add_dag_from_db", "dag_id", "dag_id", "session", "session"], ["self", "dags", "get", "dag_id"], ["root_dag_id", "dag_id"], ["dag_id", "self", "dags"], ["dag", "self", "dags", "dag_id"], ["root_dag_id", "dag", "parent_dag", "dag_id"], ["self", "dags", "get", "dag_id"], ["self", "dags", "key", "dag", "key", "dag", "self", "dags", "items", "root_dag_id", "key", "dag", "parent_dag", "root_dag_id", "dag", "parent_dag", "dag_id"], ["found_dags", "dag_id", "found_dag", "dag_id", "found_dag", "found_dags"], ["self", "dags", "dag_id"], ["dag_id", "self", "dags"], ["self", "dags", "dag_id"], ["self", "dags", "get", "dag_id"]], "self": [["self", "read_dags_from_db"], ["dag_id", "self", "dags"], ["self", "_add_dag_from_db", "dag_id", "dag_id", "session", "session"], ["self", "dags", "get", "dag_id"], ["dag_id", "self", "dags_last_fetched", "timezone", "utcnow", "self", "dags_last_fetched", "dag_id", "min_serialized_dag_fetch_secs"], ["self", "log", "warning", "dag_id"], ["self", "dags", "dag_id"], ["self", "dags_last_fetched", "dag_id"], ["self", "dags_hash", "dag_id"], ["sd_last_updated_datetime", "self", "dags_last_fetched", "dag_id", "sd_latest_version", "self", "dags_hash", "dag_id"], ["self", "_add_dag_from_db", "dag_id", "dag_id", "session", "session"], ["self", "dags", "get", "dag_id"], ["dag_id", "self", "dags"], ["dag", "self", "dags", "dag_id"], ["self", "dags", "get", "dag_id"], ["is_missing", "root_dag_id", "self", "dags"], ["self", "dags", "key", "dag", "key", "dag", "self", "dags", "items", "root_dag_id", "key", "dag", "parent_dag", "root_dag_id", "dag", "parent_dag", "dag_id"], ["found_dags", "self", "process_file", "filepath", "correct_maybe_zipped", "orm_dag", "fileloc", "only_if_updated", "False"], ["self", "dags", "dag_id"], ["dag_id", "self", "dags"], ["self", "dags", "dag_id"], ["self", "dags", "get", "dag_id"]], "session": [["self", "_add_dag_from_db", "dag_id", "dag_id", "session", "session"], ["sd_latest_version_and_updated_datetime", "SerializedDagModel", "get_latest_version_hash_and_updated_datetime", "dag_id", "dag_id", "session", "session"], ["self", "_add_dag_from_db", "dag_id", "dag_id", "session", "session"], ["orm_dag", "DagModel", "get_current", "root_dag_id", "session", "session"]]}, "params_p": {"args": [], "dag_id": [["int", 0.299240972963919], ["str", 0.19760862066418983], ["models.User", 0.10552822768460739], ["django.conf.settings.AUTH_USER_MODEL", 0.1038083992426441], ["Sequence[int]", 0.1032454861317115], ["sqlalchemy.orm.Session", 0.0956701119883917]], "kwargs": [], "self": [], "session": [["int", 0.21538078450438855], ["sqlalchemy.orm.Session", 0.14009446115706423], ["medtagger.types.ScanID", 0.09349707816279841], ["core.types.FBUserID", 0.09322610392152418], ["raiden.utils.TokenNetworkAddress", 0.09187364966644194], ["sqlalchemy.orm.scoping.scoped_session", 0.09071752582690736]]}, "q_name": "DagBag.get_dag", "ret_exprs": ["return self.dags.get(dag_id)", "return None", "return self.dags.get(dag_id)", "return self.dags.get(dag_id)", "return self.dags[dag_id]", "return self.dags.get(dag_id)"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.3710731305597671], ["str", 0.25739069941844894], ["Optional[List[str]]", 0.11207248865684118], ["int", 0.0858840741733793]], "variables": {"dag": "", "dags": "", "found_dags": "", "is_expired": "", "is_missing": "", "min_serialized_dag_fetch_secs": "", "orm_dag": "", "root_dag_id": "", "sd_last_updated_datetime": "", "sd_latest_version": "", "sd_latest_version_and_updated_datetime": ""}, "variables_p": {"dag": [["pili.models.User", 0.39852347433314067], ["salon.models.StylistService", 0.1844337902047689], ["currencies.models.Currency", 0.1300100266720371], ["jinete.models.routes.Route", 0.09929588398115972], ["finances.models.Order", 0.0975631088744069], ["salon.models.StylisAvailableWeekDay", 0.09017371593448668]], "dags": [["str", 0.5613379332659487], ["viewer.models.Gallery", 0.14587183831978906], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10830323061969134], ["int", 0.08746162318563025]], "found_dags": [["int", 0.300056345618848], ["Union[None, bool, str]", 0.10942439993312078], ["str", 0.10759770136661322], ["myia.operations.utils.Operation", 0.1010474941549079], ["myia.utils.unify.Var", 0.09719525685633644]], "is_expired": [["bool", 0.8999999999999999]], "is_missing": [["str", 0.6946382495173764], ["bool", 0.22005098810626583], ["Dict[str, Any]", 0.08531076237635753]], "min_serialized_dag_fetch_secs": [], "orm_dag": [["asgard.models.app.AppStats", 0.11186266109792815], ["Tuple[Any, Any]", 0.10053099665758942], ["raiden.utils.FeeAmount", 0.09228676226577043], ["decksite.data.models.person.Person", 0.08453403049868519]], "root_dag_id": [["str", 0.5044936271319331], ["list", 0.110843911432202], ["List[str]", 0.10595349617651181], ["List[int]", 0.09062876461553168]], "sd_last_updated_datetime": [["cmk.utils.piggyback.PiggybackTimeSettings", 0.10406495873650139]], "sd_latest_version": [["int", 0.272940283641897], ["list", 0.09812872526477454], ["str", 0.0930499749042495], ["cmk.gui.utils.html.HTML", 0.09293498475201893]], "sd_latest_version_and_updated_datetime": [["str", 0.5118408049749262], ["dict", 0.20580226367177104], ["int", 0.10653308200056497], ["Dict[str, Dict[str, str]]", 0.08928860066603449]]}}, {"docstring": {"func": "Add DAG to DagBag from DB.", "long_descr": null, "ret": null}, "fn_lc": [[263, 4], [277, 49]], "fn_var_ln": {"dag": [[272, 8], [272, 11]], "load_op_links": [[271, 8], [271, 25]], "row": [[267, 8], [267, 11]]}, "fn_var_occur": {"dag": [["dag", "row", "dag"], ["dag", "subdags"], ["self", "dags", "dag", "dag_id", "dag"], ["self", "dags_last_fetched", "dag", "dag_id", "timezone", "utcnow"], ["self", "dags_hash", "dag", "dag_id", "row", "dag_hash"]], "load_op_links": [["row", "load_op_links", "self", "load_op_links"]], "row": [["row", "SerializedDagModel", "get", "dag_id", "session"], ["row", "load_op_links", "self", "load_op_links"], ["dag", "row", "dag"], ["self", "dags_hash", "dag", "dag_id", "row", "dag_hash"]]}, "name": "_add_dag_from_db", "params": {"dag_id": "builtins.str", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_id": "", "self": "", "session": ""}, "params_occur": {"dag_id": [["row", "SerializedDagModel", "get", "dag_id", "session"], ["self", "dags", "subdag", "dag_id", "subdag"], ["self", "dags", "dag", "dag_id", "dag"], ["self", "dags_last_fetched", "dag", "dag_id", "timezone", "utcnow"], ["self", "dags_hash", "dag", "dag_id", "row", "dag_hash"]], "self": [["row", "load_op_links", "self", "load_op_links"], ["self", "dags", "subdag", "dag_id", "subdag"], ["self", "dags", "dag", "dag_id", "dag"], ["self", "dags_last_fetched", "dag", "dag_id", "timezone", "utcnow"], ["self", "dags_hash", "dag", "dag_id", "row", "dag_hash"]], "session": [["row", "SerializedDagModel", "get", "dag_id", "session"]]}, "params_p": {"args": [], "dag_id": [["int", 0.5929972485098136], ["str", 0.1132486263082836], ["dict", 0.09671769352603642]], "kwargs": [], "self": [], "session": [["str", 0.8245219382311607], ["int", 0.08271210804988453]]}, "q_name": "DagBag._add_dag_from_db", "ret_exprs": ["return None"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.18282004858597972], ["str", 0.17831663123549038], ["Optional[Dict]", 0.14594760415112118], ["Optional[List[str]]", 0.09637991531269782], ["Optional[float]", 0.08157987421938873]], "variables": {"dag": "", "load_op_links": "", "row": ""}, "variables_p": {"dag": [["str", 0.43544822294483515], ["Type[str]", 0.2745830996632557], ["dict", 0.19484348097032939], ["List[str]", 0.09512519642157966]], "load_op_links": [["str", 0.5479007084655765], ["int", 0.3655893960152497], ["List[str]", 0.08650989551917365]], "row": [["str", 0.4036927280098933], ["list", 0.1939954682979779], ["int", 0.10193521737653], ["List[Tuple[Any, str]]", 0.1008756436902339]]}}, {"docstring": {"func": "Given a path to a python module or zip file, this method imports", "long_descr": "the module and look for dag objects within it.", "ret": null}, "fn_lc": [[279, 4], [318, 25]], "fn_var_ln": {"file_last_changed_on_disk": [[296, 12], [296, 37]], "found_dags": [[315, 8], [315, 18]], "mods": [[313, 12], [313, 16]]}, "fn_var_occur": {"file_last_changed_on_disk": [["file_last_changed_on_disk", "datetime", "fromtimestamp", "os", "path", "getmtime", "filepath"], ["only_if_updated", "filepath", "self", "file_last_changed", "file_last_changed_on_disk", "self", "file_last_changed", "filepath"], ["found_dags", "self", "_process_modules", "filepath", "mods", "file_last_changed_on_disk"], ["self", "file_last_changed", "filepath", "file_last_changed_on_disk"]], "found_dags": [["found_dags", "self", "_process_modules", "filepath", "mods", "file_last_changed_on_disk"]], "mods": [["mods", "self", "_load_modules_from_file", "filepath", "safe_mode"], ["mods", "self", "_load_modules_from_zip", "filepath", "safe_mode"], ["found_dags", "self", "_process_modules", "filepath", "mods", "file_last_changed_on_disk"]]}, "name": "process_file", "params": {"filepath": "", "only_if_updated": "", "safe_mode": "", "self": ""}, "params_descr": {"filepath": "", "only_if_updated": "", "safe_mode": "", "self": ""}, "params_occur": {"filepath": [["filepath", "None", "os", "path", "isfile", "filepath"], ["file_last_changed_on_disk", "datetime", "fromtimestamp", "os", "path", "getmtime", "filepath"], ["only_if_updated", "filepath", "self", "file_last_changed", "file_last_changed_on_disk", "self", "file_last_changed", "filepath"], ["filepath", "endswith", "zipfile", "is_zipfile", "filepath"], ["mods", "self", "_load_modules_from_file", "filepath", "safe_mode"], ["mods", "self", "_load_modules_from_zip", "filepath", "safe_mode"], ["found_dags", "self", "_process_modules", "filepath", "mods", "file_last_changed_on_disk"], ["self", "file_last_changed", "filepath", "file_last_changed_on_disk"]], "only_if_updated": [["only_if_updated", "filepath", "self", "file_last_changed", "file_last_changed_on_disk", "self", "file_last_changed", "filepath"]], "safe_mode": [["mods", "self", "_load_modules_from_file", "filepath", "safe_mode"], ["mods", "self", "_load_modules_from_zip", "filepath", "safe_mode"]], "self": [["only_if_updated", "filepath", "self", "file_last_changed", "file_last_changed_on_disk", "self", "file_last_changed", "filepath"], ["self", "log", "exception", "e"], ["mods", "self", "_load_modules_from_file", "filepath", "safe_mode"], ["mods", "self", "_load_modules_from_zip", "filepath", "safe_mode"], ["found_dags", "self", "_process_modules", "filepath", "mods", "file_last_changed_on_disk"], ["self", "file_last_changed", "filepath", "file_last_changed_on_disk"]]}, "params_p": {"args": [], "filepath": [["Optional[str]", 0.3085707689262374], ["str", 0.20951348940999553], ["bool", 0.19276629666550685], ["int", 0.09638314833275342], ["Optional[List[str]]", 0.09638314833275342]], "kwargs": [], "only_if_updated": [["bytes", 0.22491153170045913], ["dict", 0.1403365813104768], ["int", 0.07902627056551752], ["datetime", 0.069492339355978]], "safe_mode": [["bool", 0.6265611641203142], ["Dict[int, Set[int]]", 0.10385500931235843], ["mode.utils.logging.Severity", 0.08752858570919883]], "self": []}, "q_name": "DagBag.process_file", "ret_exprs": ["return []", "return []", "return []", "return found_dags"], "ret_type": "", "ret_type_p": [["List[str]", 0.38739425062341337], ["str", 0.190837869796578], ["Dict[str, str]", 0.16387073265226113], ["bool", 0.09590679496093266], ["Dict[str, Any]", 0.08157202450864234], ["Set[Tuple[str, ...]]", 0.08041832745817235]], "variables": {"file_last_changed_on_disk": "", "found_dags": "", "mods": ""}, "variables_p": {"file_last_changed_on_disk": [["str", 0.6979900603050724], ["List[Pattern[str]]", 0.10224892530069443], ["dict", 0.10138645984515461]], "found_dags": [["str", 0.797094350289451], ["int", 0.09054161548937527]], "mods": [["int", 0.21651785067563786], ["Dict[Any, str]", 0.10129974525441093], ["Callable", 0.09816598649825474], ["str", 0.08830220744944121]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[340, 8], [357, 25]], "fn_var_ln": {"loader": [[342, 16], [342, 22]], "new_module": [[344, 16], [344, 26]], "spec": [[343, 16], [343, 20]]}, "fn_var_occur": {"loader": [["loader", "importlib", "machinery", "SourceFileLoader", "mod_name", "filepath"], ["spec", "importlib", "util", "spec_from_loader", "mod_name", "loader"], ["loader", "exec_module", "new_module"]], "new_module": [["new_module", "importlib", "util", "module_from_spec", "spec"], ["sys", "modules", "spec", "name", "new_module"], ["loader", "exec_module", "new_module"]], "spec": [["spec", "importlib", "util", "spec_from_loader", "mod_name", "loader"], ["new_module", "importlib", "util", "module_from_spec", "spec"], ["sys", "modules", "spec", "name", "new_module"]]}, "name": "parse", "params": {"filepath": "", "mod_name": ""}, "params_descr": {"filepath": "", "mod_name": ""}, "params_occur": {"filepath": [["might_contain_dag", "filepath", "safe_mode"], ["self", "log", "info", "filepath"], ["self", "log", "debug", "filepath"], ["org_mod_name", "_", "os", "path", "splitext", "os", "path", "split", "filepath"], ["path_hash", "hashlib", "sha1", "filepath", "encode", "hexdigest"], ["loader", "importlib", "machinery", "SourceFileLoader", "mod_name", "filepath"], ["self", "log", "exception", "filepath"], ["self", "import_errors", "filepath", "traceback", "format_exc", "limit", "self", "dagbag_import_error_traceback_depth"], ["self", "import_errors", "filepath", "str", "e"]], "mod_name": [["mod_name", "path_hash", "org_mod_name"], ["mod_name", "sys", "modules"], ["sys", "modules", "mod_name"], ["DagContext", "current_autoregister_module_name", "mod_name"], ["loader", "importlib", "machinery", "SourceFileLoader", "mod_name", "filepath"], ["spec", "importlib", "util", "spec_from_loader", "mod_name", "loader"]]}, "params_p": {"args": [], "filepath": [["str", 0.7942918218570714], ["Callable", 0.10736236788133999]], "kwargs": [], "mod_name": [["str", 0.8984811773732311]], "self": []}, "q_name": "DagBag._load_modules_from_file.<locals>.parse", "ret_exprs": ["return [new_module]", "return []"], "ret_type": "", "ret_type_p": [["int", 0.10853304712691725], ["str", 0.09375822530005194], ["list", 0.09375822530005194], ["Optional[List[str]]", 0.09375822530005194], ["annofabapi.models.Inspection", 0.09375822530005194]], "variables": {"loader": "", "new_module": "", "spec": ""}, "variables_p": {"loader": [["str", 0.09583046432145417], ["pathlib.Path", 0.09503311166218001], ["Dict[str, Type[Any]]", 0.08786519640438405]], "new_module": [["List[str]", 0.09576356896185516], ["List[piccolo.conf.apps.PiccoloAppModule]", 0.09465941445172328], ["str", 0.09037976757080109]], "spec": [["fal.orm.Season", 0.12089177101127804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[320, 4], [376, 44]], "fn_var_ln": {"_": [[331, 22], [331, 23]], "current_autoregister_module_name": [[338, 8], [338, 51]], "dagbag_import_timeout": [[359, 8], [359, 29]], "has_logged": [[326, 16], [326, 31]], "mod_name": [[333, 8], [333, 16]], "org_mod_name": [[331, 8], [331, 20]], "path_hash": [[332, 8], [332, 17]], "timeout_msg": [[369, 8], [369, 19]]}, "fn_var_occur": {"_": [], "current_autoregister_module_name": [], "dagbag_import_timeout": [["dagbag_import_timeout", "settings", "get_dagbag_import_timeout", "filepath"], ["isinstance", "dagbag_import_timeout", "int", "float"], ["TypeError", "dagbag_import_timeout"], ["timeout_msg", "filepath", "dagbag_import_timeout", "get_docs_url", "get_docs_url"], ["timeout", "dagbag_import_timeout", "error_message", "timeout_msg"]], "has_logged": [], "mod_name": [["parse", "mod_name", "filepath"], ["parse", "mod_name", "filepath"]], "org_mod_name": [], "path_hash": [], "timeout_msg": [["timeout_msg", "filepath", "dagbag_import_timeout", "get_docs_url", "get_docs_url"], ["timeout", "dagbag_import_timeout", "error_message", "timeout_msg"]]}, "name": "_load_modules_from_file", "params": {"filepath": "", "safe_mode": "", "self": ""}, "params_descr": {"filepath": "", "safe_mode": "", "self": ""}, "params_occur": {"filepath": [["dagbag_import_timeout", "settings", "get_dagbag_import_timeout", "filepath"], ["parse", "mod_name", "filepath"], ["timeout_msg", "filepath", "dagbag_import_timeout", "get_docs_url", "get_docs_url"], ["parse", "mod_name", "filepath"]], "safe_mode": [], "self": []}, "params_p": {"args": [], "filepath": [["str", 0.6043096491655684], ["pathlib.Path", 0.10521408289291818], ["Optional[str]", 0.10063146731418388], ["float", 0.09821960877647275]], "kwargs": [], "safe_mode": [["bool", 0.3031879014133007], ["Optional[Iterable[str]]", 0.174822188802279], ["List[str]", 0.08291345617042363]], "self": []}, "q_name": "DagBag._load_modules_from_file", "ret_exprs": ["return []", "return parse(mod_name, filepath)", "return parse(mod_name, filepath)"], "ret_type": "", "ret_type_p": [["str", 0.39102127380936647], ["Dict[str, Type]", 0.18226619752452267], ["Dict[str, str]", 0.125516475704992], ["bool", 0.10998113695974507], ["list", 0.0985824993025216]], "variables": {"_": "", "current_autoregister_module_name": "", "dagbag_import_timeout": "", "has_logged": "", "mod_name": "", "org_mod_name": "", "path_hash": "", "timeout_msg": ""}, "variables_p": {"_": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "current_autoregister_module_name": [["int", 0.6666666662489126], ["Optional[str]", 0.33333333271841276], ["Dict[str, str]", 3.4546213432002694e-10], ["str", 3.112967610767121e-10], ["float", 2.0334204428823769e-10]], "dagbag_import_timeout": [["int", 0.9097366718343355], ["float", 0.09026332816566464]], "has_logged": [["int", 0.3], ["str", 0.19999999999999998], ["bool", 0.09999999999999999], ["Tuple[str, str, str, str]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999], ["datetime.timedelta", 0.09999999999999999]], "mod_name": [["str", 0.9088110267462249], ["Dict[str, str]", 0.09118897325377502]], "org_mod_name": [["str", 0.7999999999999999], ["List[str]", 0.09999999999999999], ["dict", 0.09999999999999999]], "path_hash": [["str", 0.35663905984681327], ["Optional[Match[str]]", 0.15795499188025555], ["bool", 0.13682559509604483], ["Type[axes.models.AccessBase]", 0.1340624853865844], ["int", 0.1192739898546503], ["dict", 0.09524387793565152]], "timeout_msg": [["deeplearning.ml4pl.models.log_analysis.RunLogAnalyzer", 0.2448323227978652], ["int", 0.17238207182830362], ["str", 0.09581076017597553]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[378, 4], [427, 19]], "fn_var_ln": {"_": [[384, 22], [384, 23]], "current_autoregister_module_name": [[409, 16], [409, 59]], "current_module": [[412, 20], [412, 34]], "ext": [[385, 26], [385, 29]], "fileloc": [[416, 20], [416, 27]], "has_logged": [[400, 24], [400, 39]], "head": [[384, 16], [384, 20]], "mod_name": [[385, 16], [385, 24]], "mods": [[381, 8], [381, 12]]}, "fn_var_occur": {"_": [["head", "_", "os", "path", "split", "zip_info", "filename"]], "current_autoregister_module_name": [["DagContext", "current_autoregister_module_name", "mod_name"]], "current_module": [["current_module", "importlib", "import_module", "mod_name"], ["mods", "append", "current_module"]], "ext": [["mod_name", "ext", "os", "path", "splitext", "zip_info", "filename"], ["self", "log", "warning", "ext", "filepath"]], "fileloc": [["fileloc", "os", "path", "join", "filepath", "zip_info", "filename"], ["self", "log", "exception", "fileloc"], ["self", "import_errors", "fileloc", "traceback", "format_exc", "limit", "self", "dagbag_import_error_traceback_depth"], ["self", "import_errors", "fileloc", "str", "e"]], "has_logged": [["self", "has_logged"], ["self", "has_logged", "True"]], "head": [["head", "_", "os", "path", "split", "zip_info", "filename"]], "mod_name": [["mod_name", "ext", "os", "path", "splitext", "zip_info", "filename"], ["mod_name", "sys", "modules"], ["sys", "modules", "mod_name"], ["DagContext", "current_autoregister_module_name", "mod_name"], ["current_module", "importlib", "import_module", "mod_name"]], "mods": [["mods", "append", "current_module"]]}, "name": "_load_modules_from_zip", "params": {"filepath": "", "safe_mode": "", "self": ""}, "params_descr": {"filepath": "", "safe_mode": "", "self": ""}, "params_occur": {"filepath": [["zipfile", "ZipFile", "filepath", "current_zip_file"], ["self", "log", "warning", "ext", "filepath"], ["self", "log", "debug", "zip_info", "filename", "filepath"], ["self", "log", "info", "filepath", "zip_info", "filename"], ["sys", "path", "insert", "filepath"], ["fileloc", "os", "path", "join", "filepath", "zip_info", "filename"], ["sys", "path", "filepath"]], "safe_mode": [["might_contain_dag", "zip_info", "filename", "safe_mode", "current_zip_file"]], "self": [["self", "log", "warning", "ext", "filepath"], ["self", "log", "debug", "zip_info", "filename", "filepath"], ["self", "has_logged"], ["self", "has_logged", "True"], ["self", "log", "info", "filepath", "zip_info", "filename"], ["self", "log", "exception", "fileloc"], ["self", "dagbag_import_error_tracebacks"], ["self", "import_errors", "fileloc", "traceback", "format_exc", "limit", "self", "dagbag_import_error_traceback_depth"], ["self", "import_errors", "fileloc", "str", "e"]]}, "params_p": {"args": [], "filepath": [["str", 0.5312398045111716], ["int", 0.10769264650467024], ["pathlib.Path", 0.09419429054529173], ["Optional[str]", 0.08360448748988906], ["IO[bytes]", 0.08347442673100161]], "kwargs": [], "safe_mode": [["tracim.models.data.Content", 0.201510439441897], ["nativecards.models.Settings", 0.18397776183136386], ["List[str]", 0.09141663521427135]], "self": []}, "q_name": "DagBag._load_modules_from_zip", "ret_exprs": ["return mods"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.1627532403473272], ["Dict[int, Dict[str, Any]]", 0.09511546582260635], ["dict", 0.09511546582260635]], "variables": {"_": "", "current_autoregister_module_name": "", "current_module": "", "ext": "", "fileloc": "", "has_logged": "", "head": "", "mod_name": "", "mods": ""}, "variables_p": {"_": [["str", 0.9008103858894421], ["Optional[int]", 0.09918961411055803]], "current_autoregister_module_name": [["str", 0.8893882675705614], ["Union[Literal, str]", 0.11061173242943849]], "current_module": [["dict", 0.24314354615982278], ["List[Tuple[str, Any]]", 0.21318560634855943], ["list", 0.1720578816037978], ["str", 0.10469673405368839], ["Mapping[str, Sequence[str]]", 0.08997134371590187]], "ext": [["str", 0.5025040661091595], ["bool", 0.19421325952581725], ["List[str]", 0.1843929580854818], ["pathlib.Path", 0.11888971627954147]], "fileloc": [["str", 0.905851058358328], ["List[str]", 0.0941489416416718]], "has_logged": [["str", 0.5571539087227817], ["Dict[str, Any]", 0.1367166451086757], ["List[str]", 0.07508876162624854]], "head": [["str", 0.9008103858894421], ["Optional[int]", 0.09918961411055803]], "mod_name": [["str", 1.0]], "mods": [["list", 0.5730776431276439], ["int", 0.22397290859465457]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[429, 4], [455, 25]], "fn_var_ln": {"current_autoregister_module_name": [[436, 8], [436, 51]], "fileloc": [[442, 12], [442, 23]], "found_dags": [[439, 8], [439, 18]], "top_level_dags": [[432, 8], [432, 22]]}, "fn_var_occur": {"current_autoregister_module_name": [["DagContext", "current_autoregister_module_name", "None"]], "fileloc": [["dag", "fileloc", "mod", "__file__"], ["self", "log", "exception", "dag", "fileloc"], ["self", "import_errors", "dag", "fileloc", "type", "e", "__name__", "e"], ["self", "file_last_changed", "dag", "fileloc", "file_last_changed_on_disk"]], "found_dags": [["found_dags", "append", "dag"], ["found_dags", "dag", "subdags"]], "top_level_dags": [["top_level_dags", "o", "m", "m", "mods", "o", "m", "__dict__", "values", "isinstance", "o", "DAG"], ["top_level_dags", "update", "DagContext", "autoregistered_dags"]]}, "name": "_process_modules", "params": {"file_last_changed_on_disk": "", "filepath": "", "mods": "", "self": ""}, "params_descr": {"file_last_changed_on_disk": "", "filepath": "", "mods": "", "self": ""}, "params_occur": {"file_last_changed_on_disk": [["self", "file_last_changed", "dag", "fileloc", "file_last_changed_on_disk"]], "filepath": [], "mods": [["top_level_dags", "o", "m", "m", "mods", "o", "m", "__dict__", "values", "isinstance", "o", "DAG"]], "self": [["self", "bag_dag", "dag", "dag", "root_dag", "dag"], ["self", "log", "exception", "dag", "fileloc"], ["self", "import_errors", "dag", "fileloc", "type", "e", "__name__", "e"], ["self", "file_last_changed", "dag", "fileloc", "file_last_changed_on_disk"]]}, "params_p": {"args": [], "file_last_changed_on_disk": [["str", 0.20267238956351247], ["Dict[str, str]", 0.11206019995507631], ["pathlib.Path", 0.10739798860805304], ["datetime.datetime", 0.09657078037815817], ["dict", 0.0960201916139488]], "filepath": [["Union[List, set]", 0.30000000000000004], ["bool", 0.1], ["Optional[str]", 0.1], ["IO[str]", 0.1], ["str", 0.1]], "kwargs": [], "mods": [["int", 0.28831205650070724], ["List[Dict]", 0.10284223493524], ["types.ServiceT", 0.10225340716190096]], "self": []}, "q_name": "DagBag._process_modules", "ret_exprs": ["return found_dags"], "ret_type": "", "ret_type_p": [["bool", 0.21877190752286577], ["str", 0.1887878009107739], ["Tuple[str, Optional[str]]", 0.09551304128463824], ["Optional[str]", 0.09478640773041241], ["List[str]", 0.08115507014657396]], "variables": {"current_autoregister_module_name": "", "fileloc": "", "found_dags": "", "top_level_dags": ""}, "variables_p": {"current_autoregister_module_name": [["str", 0.8967568562217823], ["Set[str]", 0.10324314377821775]], "fileloc": [["str", 0.8107248910298025], ["datetime.datetime.timedelta", 0.09243672802802815]], "found_dags": [["list", 0.3180255446348864], ["Pattern[str]", 0.25835068179229215], ["str", 0.15452988722641492], ["List[str]", 0.11105662846579839], ["List[float]", 0.08543533394037035], ["List[Tuple[str, Any]]", 0.07260192394023775]], "top_level_dags": [["Set[int]", 0.3214959675320372], ["datetime.datetime.datetime", 0.11186125908236243], ["List[Tuple[int, str]]", 0.08825665538911423], ["list", 0.08324497938017389]]}}, {"docstring": {"func": "Adds the DAG into the bag, recurses into sub dags.", "long_descr": null, "ret": null}, "fn_lc": [[457, 4], [464, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "bag_dag", "params": {"dag": "", "root_dag": "", "self": ""}, "params_descr": {"dag": "", "root_dag": "", "self": ""}, "params_occur": {"dag": [["self", "_bag_dag", "dag", "dag", "root_dag", "root_dag", "recursive", "True"]], "root_dag": [["self", "_bag_dag", "dag", "dag", "root_dag", "root_dag", "recursive", "True"]], "self": [["self", "_bag_dag", "dag", "dag", "root_dag", "root_dag", "recursive", "True"]]}, "params_p": {"args": [], "dag": [["str", 0.36416260056925487], ["int", 0.09201294954103383], ["float", 0.09201294954103383]], "kwargs": [], "root_dag": [["str", 0.36416260056925487], ["int", 0.09201294954103383], ["float", 0.09201294954103383]], "self": []}, "q_name": "DagBag.bag_dag", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Actual implementation of bagging a dag.", "long_descr": "The only purpose of this is to avoid exposing ``recursive`` in ``bag_dag()``,\nintended to only be used by the ``_bag_dag()`` implementation.", "ret": null}, "fn_lc": [[466, 4], [518, 17]], "fn_var_ln": {"fileloc": [[496, 20], [496, 34]], "last_loaded": [[475, 8], [475, 23]], "parent_dag": [[497, 20], [497, 37]], "prev_dag": [[500, 12], [500, 20]], "subdags": [[489, 8], [489, 15]]}, "fn_var_occur": {"fileloc": [["subdag", "fileloc", "dag", "fileloc"], ["prev_dag", "prev_dag", "fileloc", "dag", "fileloc"], ["AirflowDagDuplicatedIdException", "dag_id", "dag", "dag_id", "incoming", "dag", "fileloc", "existing", "self", "dags", "dag", "dag_id", "fileloc"]], "last_loaded": [["dag", "last_loaded", "timezone", "utcnow"]], "parent_dag": [["subdag", "parent_dag", "dag"]], "prev_dag": [["prev_dag", "self", "dags", "get", "dag", "dag_id"], ["prev_dag", "prev_dag", "fileloc", "dag", "fileloc"]], "subdags": [["subdags", "dag", "subdags"]]}, "name": "_bag_dag", "params": {"dag": "", "recursive": "", "root_dag": "", "self": ""}, "params_descr": {"dag": "", "recursive": "", "root_dag": "", "self": ""}, "params_occur": {"dag": [["check_cycle", "dag"], ["dag", "resolve_template_files"], ["dag", "last_loaded", "timezone", "utcnow"], ["settings", "dag_policy", "dag"], ["dag", "tasks"], ["subdags", "dag", "subdags"], ["subdag", "fileloc", "dag", "fileloc"], ["subdag", "parent_dag", "dag"], ["self", "_bag_dag", "dag", "subdag", "root_dag", "root_dag", "recursive", "False"], ["prev_dag", "self", "dags", "get", "dag", "dag_id"], ["prev_dag", "prev_dag", "fileloc", "dag", "fileloc"], ["AirflowDagDuplicatedIdException", "dag_id", "dag", "dag_id", "incoming", "dag", "fileloc", "existing", "self", "dags", "dag", "dag_id", "fileloc"], ["self", "dags", "dag", "dag_id", "dag"], ["self", "log", "debug", "dag"], ["self", "log", "exception", "dag", "dag_id"]], "recursive": [["self", "_bag_dag", "dag", "subdag", "root_dag", "root_dag", "recursive", "False"]], "root_dag": [["self", "_bag_dag", "dag", "subdag", "root_dag", "root_dag", "recursive", "False"]], "self": [["self", "log", "exception", "e"], ["self", "_bag_dag", "dag", "subdag", "root_dag", "root_dag", "recursive", "False"], ["prev_dag", "self", "dags", "get", "dag", "dag_id"], ["AirflowDagDuplicatedIdException", "dag_id", "dag", "dag_id", "incoming", "dag", "fileloc", "existing", "self", "dags", "dag", "dag_id", "fileloc"], ["self", "dags", "dag", "dag_id", "dag"], ["self", "log", "debug", "dag"], ["self", "log", "exception", "dag", "dag_id"], ["subdag", "dag_id", "self", "dags"], ["self", "dags", "subdag", "dag_id"]]}, "params_p": {"args": [], "dag": [["str", 0.2814964167560776], ["cmk.utils.type_defs.UserId", 0.13766280874801867], ["int", 0.11167137344817835], ["pathlib.Path", 0.09688236132827484], ["sqlalchemy.exdeclarative.DeclarativeMeta", 0.0919891947869032]], "kwargs": [], "recursive": [["int", 0.09516763984873043]], "root_dag": [["int", 0.09516763984873043]], "self": []}, "q_name": "DagBag._bag_dag", "ret_exprs": [], "ret_type": "", "variables": {"fileloc": "", "last_loaded": "", "parent_dag": "", "prev_dag": "", "subdags": ""}, "variables_p": {"fileloc": [["Tuple[str, str]", 0.09786523532023288], ["int", 0.09287784437070484]], "last_loaded": [["Dict[str, int]", 0.29627460359285146], ["int", 0.2099343904190628], ["str", 0.1975164023952343], ["set", 0.09875820119761715]], "parent_dag": [["bool", 2.967193962743239e-11], ["str", 2.109323892093714e-11], ["List[str]", 2.109323892093714e-11], ["Set[str]", 2.109323892093714e-11], ["list", 2.109323892093714e-11], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 2.109323892093714e-11]], "prev_dag": [["str", 0.30891987828499845], ["dict", 0.10565961708356596], ["Dict[str, Union[None, Any, str]]", 0.10528949615377768], ["int", 0.0927580002977994], ["Type[apps.blog.models.Post]", 0.08481331761312946], ["Dict[str, str]", 0.08026978991556016]], "subdags": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": "Given a file path or a folder, this method looks for python modules,", "long_descr": "imports them and adds them to the dagbag collection.\n\nNote that if a ``.airflowignore`` file is found while processing\nthe directory, it will behave much like a ``.gitignore``,\nignoring files that match any of the patterns specified\nin the file.\n\n**Note**: The patterns in ``.airflowignore`` are interpreted as either\nun-anchored regexes or gitignore-like glob expressions, depending on\nthe ``DAG_IGNORE_FILE_SYNTAX`` configuration parameter.", "ret": null}, "fn_lc": [[520, 4], [572, 81]], "fn_var_ln": {"dag_folder": [[549, 8], [549, 18]], "dagbag_stats": [[572, 8], [572, 25]], "file_parse_end_dttm": [[559, 16], [559, 35]], "file_parse_start_dttm": [[556, 16], [556, 37]], "found_dags": [[557, 16], [557, 26]], "stats": [[546, 8], [546, 13]]}, "fn_var_occur": {"dag_folder": [["self", "log", "info", "dag_folder"], ["dag_folder", "dag_folder", "self", "dag_folder"], ["dag_folder", "correct_maybe_zipped", "str", "dag_folder"], ["list_py_file_paths", "dag_folder", "safe_mode", "safe_mode", "include_examples", "include_examples"]], "dagbag_stats": [["self", "dagbag_stats", "sorted", "stats", "key", "x", "x", "duration", "reverse", "True"]], "file_parse_end_dttm": [["file_parse_end_dttm", "timezone", "utcnow"], ["stats", "append", "FileLoadStat", "file", "filepath", "replace", "settings", "DAGS_FOLDER", "duration", "file_parse_end_dttm", "file_parse_start_dttm", "dag_num", "len", "found_dags", "task_num", "sum", "len", "dag", "tasks", "dag", "found_dags", "dags", "str", "dag", "dag_id", "dag", "found_dags"]], "file_parse_start_dttm": [["file_parse_start_dttm", "timezone", "utcnow"], ["stats", "append", "FileLoadStat", "file", "filepath", "replace", "settings", "DAGS_FOLDER", "duration", "file_parse_end_dttm", "file_parse_start_dttm", "dag_num", "len", "found_dags", "task_num", "sum", "len", "dag", "tasks", "dag", "found_dags", "dags", "str", "dag", "dag_id", "dag", "found_dags"]], "found_dags": [["found_dags", "self", "process_file", "filepath", "only_if_updated", "only_if_updated", "safe_mode", "safe_mode"], ["stats", "append", "FileLoadStat", "file", "filepath", "replace", "settings", "DAGS_FOLDER", "duration", "file_parse_end_dttm", "file_parse_start_dttm", "dag_num", "len", "found_dags", "task_num", "sum", "len", "dag", "tasks", "dag", "found_dags", "dags", "str", "dag", "dag_id", "dag", "found_dags"]], "stats": [["stats", "append", "FileLoadStat", "file", "filepath", "replace", "settings", "DAGS_FOLDER", "duration", "file_parse_end_dttm", "file_parse_start_dttm", "dag_num", "len", "found_dags", "task_num", "sum", "len", "dag", "tasks", "dag", "found_dags", "dags", "str", "dag", "dag_id", "dag", "found_dags"], ["self", "dagbag_stats", "sorted", "stats", "key", "x", "x", "duration", "reverse", "True"]]}, "name": "collect_dags", "params": {"dag_folder": "str | pathlib.Path | None", "include_examples": "builtins.bool", "only_if_updated": "builtins.bool", "safe_mode": "builtins.bool", "self": ""}, "params_descr": {"dag_folder": "", "include_examples": "", "only_if_updated": "", "safe_mode": "", "self": ""}, "params_occur": {"dag_folder": [["self", "log", "info", "dag_folder"], ["dag_folder", "dag_folder", "self", "dag_folder"], ["dag_folder", "correct_maybe_zipped", "str", "dag_folder"], ["list_py_file_paths", "dag_folder", "safe_mode", "safe_mode", "include_examples", "include_examples"]], "include_examples": [["list_py_file_paths", "dag_folder", "safe_mode", "safe_mode", "include_examples", "include_examples"]], "only_if_updated": [["found_dags", "self", "process_file", "filepath", "only_if_updated", "only_if_updated", "safe_mode", "safe_mode"]], "safe_mode": [["list_py_file_paths", "dag_folder", "safe_mode", "safe_mode", "include_examples", "include_examples"], ["found_dags", "self", "process_file", "filepath", "only_if_updated", "only_if_updated", "safe_mode", "safe_mode"]], "self": [["self", "read_dags_from_db"], ["self", "log", "info", "dag_folder"], ["dag_folder", "dag_folder", "self", "dag_folder"], ["found_dags", "self", "process_file", "filepath", "only_if_updated", "only_if_updated", "safe_mode", "safe_mode"], ["self", "log", "exception", "e"], ["self", "dagbag_stats", "sorted", "stats", "key", "x", "x", "duration", "reverse", "True"]]}, "params_p": {"args": [], "dag_folder": [["str", 0.4036229023676536], ["bool", 0.28422974174159726], ["Optional[str]", 0.11367193421919623], ["Iterable[str]", 0.0918072307699733]], "include_examples": [["str", 0.6121281653034331], ["bool", 0.2188798676617174], ["Optional[str]", 0.0939174975412046]], "kwargs": [], "only_if_updated": [["bool", 0.3104447261532164], ["raiden.utils.Tuple[raiden.utils.Tuple[raiden.utils.TokenAddress, raiden.utils.ProportionalFeeAmount], ...]", 0.2715210761366688], ["str", 0.16109568991521073], ["raiden.utils.OneToNAddress", 0.09869250405892177], ["bytes", 0.07921613584607473], ["Optional[str]", 0.07902986788990737]], "safe_mode": [["Optional[str]", 0.21114107739651308], ["bool", 0.19146115195855934], ["Optional[Dict[str, str]]", 0.10306361501588714], ["int", 0.10306361501588714], ["Union[str, Dict[str, Any]]", 0.10175441193241164], ["str", 0.09573057597927967], ["List[Dict]", 0.09573057597927967]], "self": []}, "q_name": "DagBag.collect_dags", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"dag_folder": "", "dagbag_stats": "", "file_parse_end_dttm": "", "file_parse_start_dttm": "", "found_dags": "", "stats": ""}, "variables_p": {"dag_folder": [["str", 0.6823442495343888]], "dagbag_stats": [["Dict[str, str]", 0.2404328068265906], ["Tuple[int]", 0.09812361545796108], ["list", 0.09532577885248784], ["Tuple[int, int]", 0.09460148645864008], ["List[int]", 0.0897651811881787], ["Set[Tuple[str, str]]", 0.08674395278791439]], "file_parse_end_dttm": [["hashlib._Hash", 0.14060855319995685]], "file_parse_start_dttm": [["bool", 0.19130793951832661], ["str", 0.10919254535749574], ["int", 0.10110537495549461], ["dict", 0.09946524203554871], ["Type[List[Any]]", 0.09788342318545785], ["list", 0.08818198989676147]], "found_dags": [["Union[List[Any], List[str]]", 0.21769311098392358], ["Dict[str, str]", 0.18500897756884563], ["List[int]", 0.10101689257101285], ["int", 0.10065968904917175], ["Dict[str, int]", 0.09250448878442281], ["Dict[str, Union[int, str]]", 0.09250448878442281]], "stats": [["pathlib.Path", 0.32117981981921684], ["list", 0.3043055151601223], ["Dict[str, Dict[str, Any]]", 0.10443770076642023]]}}, {"docstring": {"func": "Collects DAGs from database.", "long_descr": null, "ret": null}, "fn_lc": [[574, 4], [592, 37]], "fn_var_ln": {"dags": [[583, 12], [583, 21]], "subdags": [[588, 12], [588, 19]]}, "fn_var_occur": {"dags": [["self", "dags", "SerializedDagModel", "read_all_dags"], ["self", "dags", "values"], ["self", "dags", "update", "subdags"]], "subdags": [["dag", "subdags"], ["subdags", "subdag", "dag_id", "subdag"], ["self", "dags", "update", "subdags"]]}, "name": "collect_dags_from_db", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "log", "info"], ["self", "dags", "SerializedDagModel", "read_all_dags"], ["self", "dags", "values"], ["self", "dags", "update", "subdags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DagBag.collect_dags_from_db", "ret_exprs": [], "ret_type": "", "variables": {"dags": "", "subdags": ""}, "variables_p": {"dags": [["str", 0.13752750370394487], ["datetime.date", 0.10403859019441983], ["Dict[str, List[Any]]", 0.09740755541828205]], "subdags": [["int", 0.3204288240614787], ["str", 0.08691213144104937]]}}, {"docstring": {"func": "Prints a report around DagBag loading stats.", "long_descr": null, "ret": null}, "fn_lc": [[594, 4], [613, 21]], "fn_var_ln": {"dag_folder": [[597, 8], [597, 18]], "dag_num": [[599, 8], [599, 15]], "duration": [[598, 8], [598, 16]], "report": [[603, 8], [603, 14]], "stats": [[596, 8], [596, 13]], "table": [[601, 8], [601, 13]], "task_num": [[600, 8], [600, 16]]}, "fn_var_occur": {"dag_folder": [["dag_folder", "self", "dag_folder"], ["report", "textwrap", "dedent", "dag_folder", "dag_num", "task_num", "duration", "table"]], "dag_num": [["dag_num", "sum", "o", "dag_num", "o", "stats"], ["report", "textwrap", "dedent", "dag_folder", "dag_num", "task_num", "duration", "table"]], "duration": [["duration", "sum", "o", "duration", "o", "stats", "timedelta", "total_seconds"], ["report", "textwrap", "dedent", "dag_folder", "dag_num", "task_num", "duration", "table"]], "report": [["report", "textwrap", "dedent", "dag_folder", "dag_num", "task_num", "duration", "table"]], "stats": [["stats", "self", "dagbag_stats"], ["duration", "sum", "o", "duration", "o", "stats", "timedelta", "total_seconds"], ["dag_num", "sum", "o", "dag_num", "o", "stats"], ["task_num", "sum", "o", "task_num", "o", "stats"], ["table", "tabulate", "stats", "headers"]], "table": [["table", "tabulate", "stats", "headers"], ["report", "textwrap", "dedent", "dag_folder", "dag_num", "task_num", "duration", "table"]], "task_num": [["task_num", "sum", "o", "task_num", "o", "stats"], ["report", "textwrap", "dedent", "dag_folder", "dag_num", "task_num", "duration", "table"]]}, "name": "dagbag_report", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["stats", "self", "dagbag_stats"], ["dag_folder", "self", "dag_folder"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DagBag.dagbag_report", "ret_exprs": ["return report"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"dag_folder": "", "dag_num": "", "duration": "", "report": "", "stats": "", "table": "", "task_num": ""}, "variables_p": {"dag_folder": [["str", 0.15101529172063186], ["datetime.date.time.datetime", 0.14965007284650653], ["Dict[str, bool]", 0.0969435617731456], ["DefaultDict[Any, int]", 0.07803520676187783], ["dict", 0.07084902577199463], ["Dict[int, Any]", 0.06848379675883468], ["Dict[int, str]", 0.06555747327795997]], "dag_num": [["int", 0.462877433255813], ["str", 0.22370341330618204], ["Dict[str, Any]", 0.12024225752843978], ["List[float]", 0.09431810768451146]], "duration": [["float", 0.21220473110418225], ["dict", 0.08997436500089379]], "report": [["str", 0.6317677609910177], ["Pattern[str]", 0.2791263169065741], ["Dict[str, str]", 0.08910592210240818]], "stats": [["int", 0.2589418342758317], ["float", 0.18801571344654883], ["str", 0.18481827573148427], ["List[Tuple[int, int, int, int, int, int]]", 0.09196931645370787], ["List[int]", 0.08614965223613408]], "table": [["str", 0.18532208927694457], ["cmp_command_processor.src.file.user.UserObject", 0.12175648823809779], ["pathlib.Path", 0.08897041520107471], ["legistar.models.EventItem", 0.08376102351923824]], "task_num": [["str", 0.3240687786731814], ["int", 0.19425680881135787], ["List[str]", 0.18840675222126388], ["list", 0.11770391507564702], ["dict", 0.08816326536761963], ["bytes", 0.08740047985093019]]}}, {"docstring": {"func": "Try to serialize the dag to the DB, but make a note of any errors.", "long_descr": "We can't place them directly in import_errors, as this may be retried, and work the next time", "ret": null}, "fn_lc": [[630, 8], [655, 104]], "fn_var_ln": {"dag_was_updated": [[640, 16], [640, 31]], "dagbag_import_error_traceback_depth": [[652, 16], [652, 51]]}, "fn_var_occur": {"dag_was_updated": [["dag_was_updated", "SerializedDagModel", "write_dag", "dag", "min_update_interval", "settings", "MIN_SERIALIZED_DAG_UPDATE_INTERVAL", "session", "session"]], "dagbag_import_error_traceback_depth": [["dagbag_import_error_traceback_depth", "conf", "getint"], ["dag", "fileloc", "traceback", "format_exc", "limit", "dagbag_import_error_traceback_depth"]]}, "name": "_serialize_dag_capturing_errors", "params": {"dag": "", "session": ""}, "params_descr": {"dag": "", "session": ""}, "params_occur": {"dag": [["airflow", "models", "dag", "DAG"], ["dag", "is_subdag"], ["dag_was_updated", "SerializedDagModel", "write_dag", "dag", "min_update_interval", "settings", "MIN_SERIALIZED_DAG_UPDATE_INTERVAL", "session", "session"], ["DagBag", "_sync_perm_for_dag", "dag", "session", "session"], ["log", "exception", "dag", "fileloc"], ["dag", "fileloc", "traceback", "format_exc", "limit", "dagbag_import_error_traceback_depth"]], "session": [["dag_was_updated", "SerializedDagModel", "write_dag", "dag", "min_update_interval", "settings", "MIN_SERIALIZED_DAG_UPDATE_INTERVAL", "session", "session"], ["DagBag", "_sync_perm_for_dag", "dag", "session", "session"]]}, "params_p": {"args": [], "dag": [["daylighdb.models.User", 0.06779437762474545]], "kwargs": [], "self": [], "session": [["int", 0.19840268250477908], ["str", 0.1935054093254435]]}, "q_name": "DagBag._sync_to_db.<locals>._serialize_dag_capturing_errors", "ret_exprs": ["return []", "return []", "return [(dag.fileloc, traceback.format_exc(limit=-dagbag_import_error_traceback_depth))]"], "ret_type": "", "ret_type_p": [["str", 0.6008626266966527]], "variables": {"dag_was_updated": "", "dagbag_import_error_traceback_depth": ""}, "variables_p": {"dag_was_updated": [], "dagbag_import_error_traceback_depth": [["str", 0.5155197540827661], ["int", 0.17172210180744374], ["Tuple[str, str]", 0.12648704332220845]]}}, {"docstring": {"func": "Save attributes about list of DAG to the DB.", "long_descr": null, "ret": null}, "fn_lc": [[617, 4], [683, 28]], "fn_var_ln": {"import_errors": [[660, 8], [660, 21]], "log": [[628, 8], [628, 11]], "serialize_errors": [[663, 16], [663, 32]]}, "fn_var_occur": {"import_errors": [["import_errors", "update", "dict", "serialize_errors"]], "log": [["run_with_db_retries", "logger", "log"], ["log", "debug", "attempt", "retry_state", "attempt_number", "MAX_DB_RETRIES"], ["log", "debug"]], "serialize_errors": [["serialize_errors", "extend", "_serialize_dag_capturing_errors", "dag", "session"], ["import_errors", "update", "dict", "serialize_errors"]]}, "name": "_sync_to_db", "params": {"cls": "", "dags": "builtins.dict[builtins.str, airflow.models.dag.DAG]", "processor_subdir": "str | None", "session": "sqlalchemy.orm.Session"}, "params_descr": {"cls": "", "dags": "", "processor_subdir": "", "session": ""}, "params_occur": {"cls": [], "dags": [["dags", "values"], ["DAG", "bulk_write_to_db", "dags", "values", "processor_subdir", "processor_subdir", "session", "session"]], "processor_subdir": [["DAG", "bulk_write_to_db", "dags", "values", "processor_subdir", "processor_subdir", "session", "session"]], "session": [["serialize_errors", "extend", "_serialize_dag_capturing_errors", "dag", "session"], ["DAG", "bulk_write_to_db", "dags", "values", "processor_subdir", "processor_subdir", "session", "session"], ["session", "rollback"]]}, "params_p": {"args": [], "cls": [["bool", 0.18911272961854453], ["Iterable[int]", 0.10268780924022233], ["Iterable[str]", 0.07956797847625781], ["Type[T]", 0.07907308575697154]], "dags": [["str", 0.07710703675821864], ["types.ExistentialTyVar", 0.07629054462414123]], "kwargs": [], "processor_subdir": [["str", 0.28211178684095695], ["int", 0.25048405121623873], ["dict", 0.1841525036516958], ["Optional[Union[str, int]]", 0.09126329726431416]], "self": [], "session": [["str", 0.21945725607512934], ["Exception", 0.2089399720094009], ["dict", 0.0910881644208445], ["bool", 0.08938666854491283], ["Set[str]", 0.08831769041348404]]}, "q_name": "DagBag._sync_to_db", "ret_exprs": ["return import_errors"], "ret_type": "", "ret_type_p": [["Optional[Callable]", 0.12085035270660342], ["Callable", 0.09704128175090686]], "variables": {"import_errors": "", "log": "", "serialize_errors": ""}, "variables_p": {"import_errors": [["Dict[str, str]", 0.3814315164347311], ["Dict[Any, Tuple[int, str]]", 0.3322794043397994], ["List[Tuple[str, str]]", 0.08842812035863375], ["Dict[str, Union[Any, Any, str]]", 0.07642354321171607], ["Dict[str, Union[Any, Any]]", 0.06137426724464468], ["dict", 0.06006314841047507]], "log": [["int", 0.08770904862255383]], "serialize_errors": [["str", 0.7023541640249249], ["List[str]", 0.19577488697429615], ["dict", 0.10187094900077891]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[686, 4], [688, 48]], "fn_var_ln": {"import_errors": [[687, 8], [687, 21]]}, "fn_var_occur": {"import_errors": [["import_errors", "DagBag", "_sync_to_db", "dags", "self", "dags", "processor_subdir", "processor_subdir", "session", "session"], ["self", "import_errors", "update", "import_errors"]]}, "name": "sync_to_db", "params": {"processor_subdir": "str | None", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"processor_subdir": "", "self": "", "session": ""}, "params_occur": {"processor_subdir": [["import_errors", "DagBag", "_sync_to_db", "dags", "self", "dags", "processor_subdir", "processor_subdir", "session", "session"]], "self": [["import_errors", "DagBag", "_sync_to_db", "dags", "self", "dags", "processor_subdir", "processor_subdir", "session", "session"], ["self", "import_errors", "update", "import_errors"]], "session": [["import_errors", "DagBag", "_sync_to_db", "dags", "self", "dags", "processor_subdir", "processor_subdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "processor_subdir": [["pathlib.Path", 0.18869401971358668], ["sqlalchemy.orm.session.Session", 0.11994766027427473], ["bool", 0.10087937684054135], ["cmk.utils.type_defs.UserId", 0.09692800590678863], ["int", 0.08782084654825444], ["bytes", 0.08718144662596908]], "self": [], "session": [["pathlib.Path", 0.18869401971358668], ["sqlalchemy.orm.session.Session", 0.11994766027427473], ["bool", 0.10087937684054135], ["cmk.utils.type_defs.UserId", 0.09692800590678863], ["int", 0.08782084654825444], ["bytes", 0.08718144662596908]]}, "q_name": "DagBag.sync_to_db", "ret_exprs": [], "ret_type": "", "variables": {"import_errors": ""}, "variables_p": {"import_errors": [["str", 0.8015432794405828], ["Type[Dict[Any, str]]", 0.10447194201755716], ["list", 0.09398477854186008]]}}, {"docstring": {"func": "Sync DAG specific permissions.", "long_descr": null, "ret": null}, "fn_lc": [[692, 4], [700, 75]], "fn_var_ln": {"root_dag_id": [[694, 8], [694, 19]], "security_manager": [[699, 8], [699, 24]]}, "fn_var_occur": {"root_dag_id": [["root_dag_id", "dag", "parent_dag", "dag_id", "dag", "parent_dag", "dag", "dag_id"], ["cls", "logger", "debug", "root_dag_id"], ["security_manager", "sync_perm_for_dag", "root_dag_id", "dag", "access_control"]], "security_manager": [["security_manager", "ApplessAirflowSecurityManager", "session", "session"], ["security_manager", "sync_perm_for_dag", "root_dag_id", "dag", "access_control"]]}, "name": "_sync_perm_for_dag", "params": {"cls": "", "dag": "airflow.models.dag.DAG", "session": "sqlalchemy.orm.Session"}, "params_descr": {"cls": "", "dag": "", "session": ""}, "params_occur": {"cls": [["cls", "logger", "debug", "root_dag_id"]], "dag": [["root_dag_id", "dag", "parent_dag", "dag_id", "dag", "parent_dag", "dag", "dag_id"], ["security_manager", "sync_perm_for_dag", "root_dag_id", "dag", "access_control"]], "session": [["security_manager", "ApplessAirflowSecurityManager", "session", "session"]]}, "params_p": {"args": [], "cls": [["int", 0.24426313767078559], ["Dict[str, Any]", 0.16904176563189718], ["zerver.models.Message", 0.16279640405335533], ["list", 0.09254572544321582], ["Union[int, str]", 0.08066346248523694], ["werkzeug.exceptions.BadRequest", 0.07642125878747186]], "dag": [["mwapi.Session", 0.25357724069104925], ["dict", 0.0998652414057494]], "kwargs": [], "self": [], "session": [["deeplearning.ml4pl.models.log_database.Database", 0.09653317482564198]]}, "q_name": "DagBag._sync_perm_for_dag", "ret_exprs": [], "ret_type": "", "variables": {"root_dag_id": "", "security_manager": ""}, "variables_p": {"root_dag_id": [["str", 0.5138702373611763], ["int", 0.18057411393185335], ["list", 0.11791459163542041], ["Pattern[str]", 0.09922505514865472], ["Dict[str, str]", 0.08841600192289509]], "security_manager": []}}], "name": "DagBag", "q_name": "DagBag", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "hashlib", "importlib", "importlib.machinery", "importlib.util", "os", "sys", "textwrap", "traceback", "warnings", "zipfile", "datetime", "datetime", "timedelta", "typing", "TYPE_CHECKING", "NamedTuple", "sqlalchemy", "exc", "OperationalError", "sqlalchemy", "orm", "Session", "tabulate", "tabulate", "airflow", "settings", "airflow", "configuration", "conf", "airflow", "exceptions", "AirflowClusterPolicyError", "AirflowClusterPolicySkipDag", "AirflowClusterPolicyViolation", "AirflowDagCycleException", "AirflowDagDuplicatedIdException", "RemovedInAirflow3Warning", "airflow", "stats", "Stats", "airflow", "utils", "timezone", "airflow", "utils", "dag_cycle_tester", "check_cycle", "airflow", "utils", "docs", "get_docs_url", "airflow", "utils", "file", "correct_maybe_zipped", "list_py_file_paths", "might_contain_dag", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "utils", "retries", "MAX_DB_RETRIES", "run_with_db_retries", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "airflow", "utils", "timeout", "timeout", "airflow", "utils", "types", "NOTSET", "ArgNotSet", "pathlib", "airflow", "models", "dag", "DAG", "airflow", "models", "dag", "DagModel", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "models", "dag", "DagContext", "airflow", "models", "dag", "DagContext", "airflow", "models", "dag", "DagContext", "airflow", "models", "dag", "DAG", "DagContext", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "models", "dag", "DAG", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "www", "security", "ApplessAirflowSecurityManager"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 28, "I": 0, "U": 116}, "session_id": "KbqMg3Z2gNZt8YiZ9L77Hvcrxu4v7lji6H-kvUGV8-A", "set": null, "tc": [false, null], "type_annot_cove": 0.19, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}