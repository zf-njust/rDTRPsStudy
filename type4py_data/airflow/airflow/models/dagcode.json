{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [203, 101]], "cls_var_ln": {"__tablename__": [[48, 4], [48, 17]], "fileloc": [[51, 4], [51, 11]], "fileloc_hash": [[50, 4], [50, 16]], "last_updated": [[53, 4], [53, 16]], "source_code": [[54, 4], [54, 15]]}, "cls_var_occur": {"__tablename__": [], "fileloc": [["self", "fileloc_hash", "DagCode", "dag_fileloc_hash", "self", "fileloc"], ["self", "source_code", "source_code", "DagCode", "code", "self", "fileloc"], ["filelocs_to_hashes", "fileloc", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "filelocs"], ["hashes_to_filelocs", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "fileloc", "filelocs"], ["filename", "hashes_to_filelocs", "DagCode", "dag_fileloc_hash", "fileloc"], ["orm_dag_code", "DagCode", "fileloc", "cls", "_get_code_from_file", "fileloc"]], "fileloc_hash": [["self", "fileloc_hash", "DagCode", "dag_fileloc_hash", "self", "fileloc"], ["existing_orm_dag_codes", "session", "scalars", "select", "DagCode", "filter", "DagCode", "fileloc_hash", "in_", "filelocs_to_hashes", "values", "with_for_update", "of", "DagCode", "all"]], "last_updated": [], "source_code": [["self", "source_code", "source_code", "DagCode", "code", "self", "fileloc"]]}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [60, 68]], "fn_var_ln": {"fileloc": [[57, 8], [57, 20]], "fileloc_hash": [[58, 8], [58, 25]], "last_updated": [[59, 8], [59, 25]], "source_code": [[60, 8], [60, 24]]}, "fn_var_occur": {"fileloc": [["self", "fileloc", "full_filepath"], ["self", "fileloc_hash", "DagCode", "dag_fileloc_hash", "self", "fileloc"], ["self", "source_code", "source_code", "DagCode", "code", "self", "fileloc"]], "fileloc_hash": [["self", "fileloc_hash", "DagCode", "dag_fileloc_hash", "self", "fileloc"]], "last_updated": [["self", "last_updated", "timezone", "utcnow"]], "source_code": [["self", "source_code", "source_code", "DagCode", "code", "self", "fileloc"]]}, "name": "__init__", "params": {"full_filepath": "builtins.str", "self": "", "source_code": "str | None"}, "params_descr": {"full_filepath": "", "self": "", "source_code": ""}, "params_occur": {"full_filepath": [["self", "fileloc", "full_filepath"]], "self": [["self", "fileloc", "full_filepath"], ["self", "fileloc_hash", "DagCode", "dag_fileloc_hash", "self", "fileloc"], ["self", "last_updated", "timezone", "utcnow"], ["self", "source_code", "source_code", "DagCode", "code", "self", "fileloc"]], "source_code": [["self", "source_code", "source_code", "DagCode", "code", "self", "fileloc"]]}, "params_p": {"args": [], "full_filepath": [["str", 0.42853584882955403], ["bool", 0.3813810044412117], ["List[List[str]]", 0.07963939284532603]], "kwargs": [], "self": [], "source_code": [["int", 0.9999999999999999]]}, "q_name": "DagCode.__init__", "ret_exprs": [], "ret_type": "", "variables": {"fileloc": "", "fileloc_hash": "", "last_updated": "", "source_code": ""}, "variables_p": {"fileloc": [["str", 0.524806074899896], ["float", 0.10524315647630723], ["Dict[str, Optional[str]]", 0.09713996293638298], ["dict", 0.09478571271286614], ["Tuple[Literal, Literal, int]", 0.09268431670301863], ["Optional[Match[str]]", 0.08534077627152888]], "fileloc_hash": [["Dict[str, str]", 0.19654961187561598], ["str", 0.18160832050419867], ["dict", 0.12521737535586994], ["datetime.timedelta", 0.10854295427900458], ["Type[str]", 0.10839805673886953], ["Dict[Any, int]", 0.10586563172950562], ["Pattern[str]", 0.08471372176041313]], "last_updated": [["int", 0.9999999998139011], ["str", 1.5887866826924776e-10], ["Set[int]", 2.7220463295291578e-11]], "source_code": [["str", 0.5993667441146889], ["int", 0.18009094977559215], ["List[str]", 0.13879210182813903], ["property", 0.08175020428158002]]}}, {"docstring": {"func": "Writes code into database.", "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [68, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "sync_to_db", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": "ORM Session"}, "params_occur": {"self": [["self", "bulk_sync_to_db", "self", "fileloc", "session"]], "session": [["self", "bulk_sync_to_db", "self", "fileloc", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["bool", 0.24993790723812198], ["Dict[str, Any]", 0.1849333518168889], ["Dict[str, str]", 0.1011692948269964], ["str", 0.09234002282486696], ["apistar.http.Session", 0.09234002282486696]]}, "q_name": "DagCode.sync_to_db", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Writes code in bulk into database.", "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [124, 43]], "fn_var_ln": {"conflicting_filelocs": [[96, 12], [96, 32]], "current_version": [[115, 12], [115, 27]], "existing_filelocs": [[107, 8], [107, 25]], "existing_orm_dag_codes": [[80, 8], [80, 30]], "existing_orm_dag_codes_by_fileloc_hashes": [[93, 8], [93, 48]], "existing_orm_dag_codes_map": [[91, 12], [91, 38]], "existing_orm_filelocs": [[94, 8], [94, 29]], "file_mod_time": [[116, 12], [116, 25]], "filelocs": [[78, 8], [78, 16]], "filelocs_to_hashes": [[79, 8], [79, 26]], "filename": [[100, 16], [100, 24]], "hashes_to_filelocs": [[97, 12], [97, 30]], "last_updated": [[122, 16], [122, 41]], "message": [[98, 12], [98, 19]], "missing_filelocs": [[108, 8], [108, 24]], "orm_dag_code": [[121, 16], [121, 28]], "source_code": [[123, 16], [123, 40]]}, "fn_var_occur": {"conflicting_filelocs": [["conflicting_filelocs", "existing_orm_filelocs", "difference", "filelocs"]], "current_version": [["current_version", "existing_orm_dag_codes_by_fileloc_hashes", "filelocs_to_hashes", "fileloc"], ["file_mod_time", "current_version", "last_updated"]], "existing_filelocs": [["existing_filelocs", "dag_code", "fileloc", "dag_code", "existing_orm_dag_codes"], ["missing_filelocs", "filelocs", "difference", "existing_filelocs"]], "existing_orm_dag_codes": [["existing_orm_dag_codes", "session", "scalars", "select", "DagCode", "filter", "DagCode", "fileloc_hash", "in_", "filelocs_to_hashes", "values", "with_for_update", "of", "DagCode", "all"], ["existing_orm_dag_codes_map", "orm_dag_code", "fileloc", "orm_dag_code", "orm_dag_code", "existing_orm_dag_codes"], ["existing_orm_dag_codes_by_fileloc_hashes", "orm", "fileloc_hash", "orm", "orm", "existing_orm_dag_codes"], ["existing_filelocs", "dag_code", "fileloc", "dag_code", "existing_orm_dag_codes"]], "existing_orm_dag_codes_by_fileloc_hashes": [["existing_orm_dag_codes_by_fileloc_hashes", "orm", "fileloc_hash", "orm", "orm", "existing_orm_dag_codes"], ["existing_orm_filelocs", "orm", "fileloc", "orm", "existing_orm_dag_codes_by_fileloc_hashes", "values"], ["current_version", "existing_orm_dag_codes_by_fileloc_hashes", "filelocs_to_hashes", "fileloc"]], "existing_orm_dag_codes_map": [["existing_orm_dag_codes_map", "orm_dag_code", "fileloc", "orm_dag_code", "orm_dag_code", "existing_orm_dag_codes"], ["orm_dag_code", "existing_orm_dag_codes_map", "fileloc"]], "existing_orm_filelocs": [["existing_orm_filelocs", "orm", "fileloc", "orm", "existing_orm_dag_codes_by_fileloc_hashes", "values"], ["existing_orm_filelocs", "issubset", "filelocs"], ["conflicting_filelocs", "existing_orm_filelocs", "difference", "filelocs"]], "file_mod_time": [["file_mod_time", "datetime", "fromtimestamp", "os", "path", "getmtime", "correct_maybe_zipped", "fileloc", "tz", "timezone", "utc"], ["file_mod_time", "current_version", "last_updated"], ["orm_dag_code", "last_updated", "file_mod_time"]], "filelocs": [["filelocs", "set", "filelocs"], ["filelocs_to_hashes", "fileloc", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "filelocs"], ["existing_orm_filelocs", "issubset", "filelocs"], ["conflicting_filelocs", "existing_orm_filelocs", "difference", "filelocs"], ["hashes_to_filelocs", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "fileloc", "filelocs"], ["missing_filelocs", "filelocs", "difference", "existing_filelocs"]], "filelocs_to_hashes": [["filelocs_to_hashes", "fileloc", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "filelocs"], ["existing_orm_dag_codes", "session", "scalars", "select", "DagCode", "filter", "DagCode", "fileloc_hash", "in_", "filelocs_to_hashes", "values", "with_for_update", "of", "DagCode", "all"], ["current_version", "existing_orm_dag_codes_by_fileloc_hashes", "filelocs_to_hashes", "fileloc"]], "filename": [["filename", "hashes_to_filelocs", "DagCode", "dag_fileloc_hash", "fileloc"], ["message", "filename", "fileloc"]], "hashes_to_filelocs": [["hashes_to_filelocs", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "fileloc", "filelocs"], ["filename", "hashes_to_filelocs", "DagCode", "dag_fileloc_hash", "fileloc"]], "last_updated": [["file_mod_time", "current_version", "last_updated"], ["orm_dag_code", "last_updated", "file_mod_time"]], "message": [["message", "filename", "fileloc"], ["AirflowException", "message"]], "missing_filelocs": [["missing_filelocs", "filelocs", "difference", "existing_filelocs"]], "orm_dag_code": [["existing_orm_dag_codes_map", "orm_dag_code", "fileloc", "orm_dag_code", "orm_dag_code", "existing_orm_dag_codes"], ["orm_dag_code", "DagCode", "fileloc", "cls", "_get_code_from_file", "fileloc"], ["session", "add", "orm_dag_code"], ["orm_dag_code", "existing_orm_dag_codes_map", "fileloc"], ["orm_dag_code", "last_updated", "file_mod_time"], ["orm_dag_code", "source_code", "cls", "_get_code_from_file", "orm_dag_code", "fileloc"], ["session", "merge", "orm_dag_code"]], "source_code": [["orm_dag_code", "source_code", "cls", "_get_code_from_file", "orm_dag_code", "fileloc"]]}, "name": "bulk_sync_to_db", "params": {"cls": "", "filelocs": "typing.Iterable[builtins.str]", "session": "sqlalchemy.orm.Session"}, "params_descr": {"cls": "", "filelocs": "file paths of DAGs to sync", "session": "ORM Session"}, "params_occur": {"cls": [["orm_dag_code", "DagCode", "fileloc", "cls", "_get_code_from_file", "fileloc"], ["orm_dag_code", "source_code", "cls", "_get_code_from_file", "orm_dag_code", "fileloc"]], "filelocs": [["filelocs", "set", "filelocs"], ["filelocs_to_hashes", "fileloc", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "filelocs"], ["existing_orm_filelocs", "issubset", "filelocs"], ["conflicting_filelocs", "existing_orm_filelocs", "difference", "filelocs"], ["hashes_to_filelocs", "DagCode", "dag_fileloc_hash", "fileloc", "fileloc", "fileloc", "filelocs"], ["missing_filelocs", "filelocs", "difference", "existing_filelocs"]], "session": [["existing_orm_dag_codes", "session", "scalars", "select", "DagCode", "filter", "DagCode", "fileloc_hash", "in_", "filelocs_to_hashes", "values", "with_for_update", "of", "DagCode", "all"], ["session", "add", "orm_dag_code"], ["session", "merge", "orm_dag_code"]]}, "params_p": {"args": [], "cls": [["str", 0.294685165701753], ["bool", 0.09917451382140802], ["Sequence[str]", 0.09917451382140802], ["dict", 0.09917451382140802], ["Optional[dict]", 0.09786448489528952], ["yawasscanner.session.Session", 0.09397629743948664]], "filelocs": [["int", 0.17718196604606096], ["Optional[int]", 0.15878979008657518], ["alerta.database.base.Query", 0.1349558117606469], ["bool", 0.10434336494805287], ["sqlalchemy.orm.Session", 0.08724675677628368], ["str", 0.08332623158567903], ["float", 0.08017729591694506]], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.27266504848361006], ["recidiviz.persistence.database.session.Session", 0.17347840841435014], ["sqlalchemy.orm.Session", 0.10687862691143177], ["Optional[mwapi.Session]", 0.10185514937745033], ["requests.Session", 0.08076600450116628], ["alerta.database.base.Query", 0.07483554449563773]]}, "q_name": "DagCode.bulk_sync_to_db", "ret_exprs": [], "ret_type": "None", "variables": {"conflicting_filelocs": "", "current_version": "", "existing_filelocs": "", "existing_orm_dag_codes": "", "existing_orm_dag_codes_by_fileloc_hashes": "", "existing_orm_dag_codes_map": "", "existing_orm_filelocs": "", "file_mod_time": "", "filelocs": "", "filelocs_to_hashes": "", "filename": "", "hashes_to_filelocs": "", "last_updated": "", "message": "", "missing_filelocs": "", "orm_dag_code": "", "source_code": ""}, "variables_p": {"conflicting_filelocs": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "current_version": [["int", 0.24281281672933547], ["str", 0.19415327094917342], ["list", 0.0909159566844606]], "existing_filelocs": [["str", 0.22345647590587409], ["int", 0.20676328887479356], ["slice", 0.13479730411701765], ["Tuple[str, str, str]", 0.09145206145815406]], "existing_orm_dag_codes": [["str", 0.47026148344577356], ["int", 0.13945819083551858], ["List[str]", 0.09314576282813719], ["dict", 0.0855829967210869]], "existing_orm_dag_codes_by_fileloc_hashes": [["int", 0.3132227664591488], ["Tuple[float, float, float]", 0.10186813980482617]], "existing_orm_dag_codes_map": [["int", 0.5804316294284468], ["bytes", 0.12156866570821416], ["Dict[str, str]", 0.09962891232738913], ["List[int]", 0.09549365257465436]], "existing_orm_filelocs": [], "file_mod_time": [["int", 0.3216012747345806], ["float", 0.11323820687550779], ["Tuple[int, int]", 0.1105595958818575], ["List[Tuple[str, str]]", 0.10934218761100627], ["Optional[base.cell.Cell]", 0.08948894110048779], ["str", 0.08543447616083646], ["datetime.timedelta", 0.08097339098254858]], "filelocs": [["int", 0.48014532598206516], ["List[int]", 0.17089057267596686], ["str", 0.17089057267596686], ["list", 0.09262824232801752], ["float", 0.08544528633798343]], "filelocs_to_hashes": [["str", 0.6455871623552902], ["Dict[str, str]", 0.23734014882208618], ["Dict[Any, str]", 0.11707268882262353]], "filename": [["list", 0.455816564130579], ["str", 0.2040964291932774], ["List[str]", 0.08795870237981629], ["Dict[str, Any]", 0.08742174869385085], ["slice", 0.08480611389063904]], "hashes_to_filelocs": [["int", 0.6129524938377402], ["bytes", 0.11160496608778735], ["float", 0.09796004596984077], ["str", 0.07952244813479081]], "last_updated": [["int", 0.5558279054385867], ["str", 0.27150950346575636], ["float", 0.086840172281633], ["set", 0.08582241881402404]], "message": [["str", 0.47683870310264825], ["List[str]", 0.23592682794594655], ["Pattern[str]", 0.10475559067568418], ["Set[str]", 0.09255466697800362]], "missing_filelocs": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "orm_dag_code": [["int", 0.19680970212250176], ["str", 0.1008177249538428], ["Tuple[Tuple[str, str], Tuple[str, str]]", 0.09562129661812584]], "source_code": [["str", 0.9088900575628808], ["List[str]", 0.09110994243711916]]}}, {"docstring": {"func": "Deletes code not included in alive_dag_filelocs.", "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [142, 9]], "fn_var_ln": {"alive_fileloc_hashes": [[134, 8], [134, 28]]}, "fn_var_occur": {"alive_fileloc_hashes": [["alive_fileloc_hashes", "cls", "dag_fileloc_hash", "fileloc", "fileloc", "alive_dag_filelocs"], ["session", "execute", "delete", "cls", "where", "cls", "fileloc_hash", "notin_", "alive_fileloc_hashes", "cls", "fileloc", "notin_", "alive_dag_filelocs", "execution_options", "synchronize_session"]]}, "name": "remove_deleted_code", "params": {"alive_dag_filelocs": "typing.Collection[builtins.str]", "cls": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"alive_dag_filelocs": "file paths of alive DAGs", "cls": "", "session": "ORM Session"}, "params_occur": {"alive_dag_filelocs": [["alive_fileloc_hashes", "cls", "dag_fileloc_hash", "fileloc", "fileloc", "alive_dag_filelocs"], ["session", "execute", "delete", "cls", "where", "cls", "fileloc_hash", "notin_", "alive_fileloc_hashes", "cls", "fileloc", "notin_", "alive_dag_filelocs", "execution_options", "synchronize_session"]], "cls": [["alive_fileloc_hashes", "cls", "dag_fileloc_hash", "fileloc", "fileloc", "alive_dag_filelocs"], ["log", "debug", "cls", "__tablename__"], ["session", "execute", "delete", "cls", "where", "cls", "fileloc_hash", "notin_", "alive_fileloc_hashes", "cls", "fileloc", "notin_", "alive_dag_filelocs", "execution_options", "synchronize_session"]], "session": [["session", "execute", "delete", "cls", "where", "cls", "fileloc_hash", "notin_", "alive_fileloc_hashes", "cls", "fileloc", "notin_", "alive_dag_filelocs", "execution_options", "synchronize_session"]]}, "params_p": {"alive_dag_filelocs": [["bool", 0.18941006623640894], ["Type[T]", 0.10441703874230157], ["Iterator[Any]", 0.08945240251840347], ["Tuple[str, str]", 0.08676475687414126]], "args": [], "cls": [["bool", 0.31184059126800423], ["utils.ContextType", 0.10738850901206991], ["type", 0.09657808615853648], ["Callable", 0.09482879371480658], ["List[alerta.models.enums.Scope]", 0.09181347188854751]], "kwargs": [], "self": [], "session": [["Optional[List[Type]]", 0.322980701289037]]}, "q_name": "DagCode.remove_deleted_code", "ret_exprs": [], "ret_type": "None", "variables": {"alive_fileloc_hashes": ""}, "variables_p": {"alive_fileloc_hashes": [["set", 0.21874371919155433], ["Optional[Match[str]]", 0.10035223279365137], ["Type[str]", 0.09744322213084221], ["int", 0.0891046891786044], ["str", 0.08884955052061214]]}}, {"docstring": {"func": "Checks a file exist in dag_code table.", "long_descr": null, "ret": null}, "fn_lc": [[146, 4], [156, 9]], "fn_var_ln": {"fileloc_hash": [[152, 8], [152, 20]]}, "fn_var_occur": {"fileloc_hash": [["fileloc_hash", "cls", "dag_fileloc_hash", "fileloc"], ["session", "scalars", "select", "literal", "True", "where", "cls", "fileloc_hash", "fileloc_hash", "one_or_none", "None"]]}, "name": "has_dag", "params": {"cls": "", "fileloc": "builtins.str", "session": "sqlalchemy.orm.Session"}, "params_descr": {"cls": "", "fileloc": "the file to check", "session": "ORM Session"}, "params_occur": {"cls": [["fileloc_hash", "cls", "dag_fileloc_hash", "fileloc"], ["session", "scalars", "select", "literal", "True", "where", "cls", "fileloc_hash", "fileloc_hash", "one_or_none", "None"]], "fileloc": [["fileloc_hash", "cls", "dag_fileloc_hash", "fileloc"]], "session": [["session", "scalars", "select", "literal", "True", "where", "cls", "fileloc_hash", "fileloc_hash", "one_or_none", "None"]]}, "params_p": {"args": [], "cls": [["Exception", 0.0898885297046344]], "fileloc": [["int", 0.2428010042615086], ["dict", 0.19148854062173415], ["flask_appbuilder.models.sqla.Model", 0.10894864524092389]], "kwargs": [], "self": [], "session": [["\"Atom\"", 0.18335529224207456], ["dict", 0.10320230506801145], ["Optional[Callable]", 0.08948483435432684]]}, "q_name": "DagCode.has_dag", "ret_exprs": ["return ( session.scalars(select(literal(True)).where(cls.fileloc_hash == fileloc_hash)).one_or_none() is not None)"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.6847750457647652], ["OrderedDict", 0.10573771396019221], ["str", 0.09232670153224617]], "variables": {"fileloc_hash": ""}, "variables_p": {"fileloc_hash": [["str", 0.2600156848259102], ["int", 0.11178549372061497], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09292816230598207], ["Dict[str, Type[Any]]", 0.09246512713022612], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09018771992825146], ["Type[projecbetting.models.Odd]", 0.07909701681524875]]}}, {"docstring": {"func": "Returns source code for a given fileloc.", "long_descr": null, "ret": "source code as string"}, "fn_lc": [[159, 4], [165, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_code_by_fileloc", "params": {"cls": "", "fileloc": "builtins.str"}, "params_descr": {"cls": "", "fileloc": "file path of a DAG"}, "params_occur": {"cls": [["cls", "code", "fileloc"]], "fileloc": [["cls", "code", "fileloc"]]}, "params_p": {"args": [], "cls": [["str", 0.35594306450267693], ["sqlalchemy.exdeclarative.DeclarativeMeta", 0.11062026639240166], ["Union[str, bytes]", 0.08736211547686111], ["Union[str, int]", 0.07181636543774626]], "fileloc": [["str", 0.35594306450267693], ["sqlalchemy.exdeclarative.DeclarativeMeta", 0.11062026639240166], ["Union[str, bytes]", 0.08736211547686111], ["Union[str, int]", 0.07181636543774626]], "kwargs": [], "self": []}, "q_name": "DagCode.get_code_by_fileloc", "ret_exprs": ["return cls.code(fileloc)"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.2892118035234895], ["dict", 0.20611142792908105], ["Optional[str]", 0.11798479239635612], ["Dict[str, Any]", 0.10489715929490204], ["Callable", 0.09402699012616714]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns source code for this DagCode object.", "long_descr": null, "ret": "source code as string"}, "fn_lc": [[168, 4], [173, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "code", "params": {"cls": "", "fileloc": ""}, "params_descr": {"cls": "", "fileloc": ""}, "params_occur": {"cls": [["cls", "_get_code_from_db", "fileloc"]], "fileloc": [["cls", "_get_code_from_db", "fileloc"]]}, "params_p": {"args": [], "cls": [["datetime.datetime", 0.19347725291428333], ["int", 0.09554921803521586], ["dict", 0.09324632056771118]], "fileloc": [["datetime.datetime", 0.19347725291428333], ["int", 0.09554921803521586], ["dict", 0.09324632056771118]], "kwargs": [], "self": []}, "q_name": "DagCode.code", "ret_exprs": ["return cls._get_code_from_db(fileloc)"], "ret_type": "builtins.str", "ret_type_p": [["zerver.models.Stream", 0.10644695599999146], ["Iterable[str]", 0.09927262608557416], ["bool", 0.09789101102710263], ["Optional[cmk.utils.type_defs.SectionName]", 0.09677975010561947], ["Sequence[str]", 0.09607152457475149], ["cmk.utils.type_defs.UserId", 0.0910289129925595]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [179, 19]], "fn_var_ln": {"code": [[178, 12], [178, 16]]}, "fn_var_occur": {"code": [["code", "f", "read"]]}, "name": "_get_code_from_file", "params": {"fileloc": ""}, "params_descr": {"fileloc": ""}, "params_occur": {"fileloc": [["open_maybe_zipped", "fileloc", "f"]]}, "params_p": {"args": [], "fileloc": [["str", 0.4759969826469696], ["Dict[str, Any]", 0.15629710107649117]], "kwargs": [], "self": []}, "q_name": "DagCode._get_code_from_file", "ret_exprs": ["return code"], "ret_type": "", "ret_type_p": [["str", 0.7032252762775278], ["Dict[str, Any]", 0.10120346908646938]], "variables": {"code": ""}, "variables_p": {"code": [["str", 0.30476261430945634], ["int", 0.12269907947571428], ["List[str]", 0.09992501010625915], ["list", 0.0980270439345554], ["tuple", 0.09286779058578377], ["Set[int]", 0.09186421223243123]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[183, 4], [189, 19]], "fn_var_ln": {"code": [[188, 12], [188, 16]], "dag_code": [[184, 8], [184, 16]]}, "fn_var_occur": {"code": [["code", "dag_code", "source_code"]], "dag_code": [["dag_code", "session", "scalar", "select", "cls", "where", "cls", "fileloc_hash", "cls", "dag_fileloc_hash", "fileloc"], ["code", "dag_code", "source_code"]]}, "name": "_get_code_from_db", "params": {"cls": "", "fileloc": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"cls": "", "fileloc": "", "session": ""}, "params_occur": {"cls": [["dag_code", "session", "scalar", "select", "cls", "where", "cls", "fileloc_hash", "cls", "dag_fileloc_hash", "fileloc"]], "fileloc": [["dag_code", "session", "scalar", "select", "cls", "where", "cls", "fileloc_hash", "cls", "dag_fileloc_hash", "fileloc"]], "session": [["dag_code", "session", "scalar", "select", "cls", "where", "cls", "fileloc_hash", "cls", "dag_fileloc_hash", "fileloc"]]}, "params_p": {"args": [], "cls": [["str", 0.24032004021054193], ["sqlalchemy.orm.scoping.scoped_session", 0.15141942179491716], ["apistar.backends.sqlalchemy_backend.Session", 0.14034885403315744], ["sqlalchemy.orm.session.Session", 0.1288821736492503], ["tracim.models.auth.User", 0.09775468615590949], ["musictaxonomy.spotify.models.SpotifyUser", 0.08497883682646469], ["int", 0.07814799366487948], ["tracim.models.data.Workspace", 0.07814799366487948]], "fileloc": [["str", 0.24032004021054193], ["sqlalchemy.orm.scoping.scoped_session", 0.15141942179491716], ["apistar.backends.sqlalchemy_backend.Session", 0.14034885403315744], ["sqlalchemy.orm.session.Session", 0.1288821736492503], ["tracim.models.auth.User", 0.09775468615590949], ["musictaxonomy.spotify.models.SpotifyUser", 0.08497883682646469], ["int", 0.07814799366487948], ["tracim.models.data.Workspace", 0.07814799366487948]], "kwargs": [], "self": [], "session": [["str", 0.24032004021054193], ["sqlalchemy.orm.scoping.scoped_session", 0.15141942179491716], ["apistar.backends.sqlalchemy_backend.Session", 0.14034885403315744], ["sqlalchemy.orm.session.Session", 0.1288821736492503], ["tracim.models.auth.User", 0.09775468615590949], ["musictaxonomy.spotify.models.SpotifyUser", 0.08497883682646469], ["int", 0.07814799366487948], ["tracim.models.data.Workspace", 0.07814799366487948]]}, "q_name": "DagCode._get_code_from_db", "ret_exprs": ["return code"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.5080073490525343], ["tracim.models.data.Content", 0.21256659647856666], ["int", 0.09274840847629587], ["Union[str, Iterable[str]]", 0.09259236433021986]], "variables": {"code": "", "dag_code": ""}, "variables_p": {"code": [["int", 0.8999999999999999], ["str", 0.1]], "dag_code": [["str", 0.47863611961341135], ["Set[int]", 0.19037930131386488], ["Dict[str, int]", 0.1278612118437836], ["Optional[int]", 0.09158138337484442]]}}, {"docstring": {"func": "Hashing file location for indexing.", "long_descr": null, "ret": "hashed full_filepath"}, "fn_lc": [[192, 4], [203, 101]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dag_fileloc_hash", "params": {"full_filepath": "builtins.str"}, "params_descr": {"full_filepath": "full filepath of DAG file"}, "params_occur": {"full_filepath": [["struct", "unpack", "hashlib", "sha1", "full_filepath", "encode", "digest"]]}, "params_p": {"args": [], "full_filepath": [["Optional[str]", 0.10629425709257295], ["bool", 0.10629425709257295]], "kwargs": [], "self": []}, "q_name": "DagCode.dag_fileloc_hash", "ret_exprs": ["return struct.unpack(\">Q\", hashlib.sha1(full_filepath.encode(\"utf-8\")).digest()[-8:])[0] >> 8"], "ret_type": "builtins.int", "ret_type_p": [["float", 1.1441670916086767e-09], ["str", 6.661131163291016e-10], ["models.tickeTicket", 6.425113236991346e-10], ["Tuple[str, int]", 5.901679401720416e-10], ["models.Trip", 5.419119180445295e-10]], "variables": {}, "variables_p": {}}], "name": "DagCode", "q_name": "DagCode", "variables": {"__tablename__": "", "fileloc": "", "fileloc_hash": "", "last_updated": "", "source_code": ""}, "variables_p": {"__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "fileloc": [["int", 0.47853694945705316], ["str", 0.31184243890484953], ["Pattern[str]", 0.11089697120497748], ["Dict[str, int]", 0.09872364043311997]], "fileloc_hash": [["str", 0.6330841052896476], ["int", 0.2771240630566869]], "last_updated": [["datetime.datetime", 0.3], ["str", 0.19999999999999998], ["Type[weather.models.AirPollution]", 0.09999999999999999], ["Type[orders.models.Order]", 0.09999999999999999], ["datetime.date", 0.09999999999999999], ["Optional[datetime.datetime]", 0.09999999999999999], ["Type[projeccore.models.LoadSource]", 0.09999999999999999]], "source_code": [["str", 0.5993667441146889], ["int", 0.18009094977559215], ["List[str]", 0.13879210182813903], ["property", 0.08175020428158002]]}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "os", "struct", "datetime", "datetime", "typing", "Collection", "Iterable", "sqlalchemy", "BigInteger", "Column", "String", "Text", "delete", "select", "sqlalchemy", "dialects", "mysql", "MEDIUMTEXT", "sqlalchemy", "orm", "Session", "sqlalchemy", "sql", "expression", "literal", "airflow", "exceptions", "AirflowException", "DagCodeNotFound", "airflow", "models", "base", "Base", "airflow", "utils", "timezone", "airflow", "utils", "file", "correct_maybe_zipped", "open_maybe_zipped", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "airflow", "utils", "sqlalchemy", "UtcDateTime", "hashlib"], "mod_var_ln": {"log": [[37, 0], [37, 3]]}, "mod_var_occur": {"log": [["log", "debug", "cls", "__tablename__"]]}, "no_types_annot": {"D": 18, "I": 0, "U": 43}, "session_id": "KC-UOPQbUgl3NpRRjTvTOAWMoa7chhyjTXtI-rbdF0E", "set": null, "tc": [false, null], "type_annot_cove": 0.3, "typed_seq": "", "untyped_seq": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.9999999999999998]]}}}