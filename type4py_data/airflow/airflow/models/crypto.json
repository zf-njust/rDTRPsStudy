{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [36, 34]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Decrypt with Fernet.", "long_descr": null, "ret": null}, "fn_lc": [[32, 4], [33, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "decrypt", "params": {"b": "", "self": ""}, "params_descr": {"b": "", "self": ""}, "params_occur": {"b": [], "self": []}, "params_p": {"args": [], "b": [["Optional[bool]", 0.24999999573526926], ["bytes", 0.24999999573526926], ["int", 0.24999999573526926], ["bool", 1.7012139849815217e-08]], "kwargs": [], "self": []}, "q_name": "FernetProtocol.decrypt", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Encrypt with Fernet.", "long_descr": null, "ret": null}, "fn_lc": [[35, 4], [36, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "encrypt", "params": {"b": "", "self": ""}, "params_descr": {"b": "", "self": ""}, "params_occur": {"b": [], "self": []}, "params_p": {"args": [], "b": [["Optional[bool]", 0.24999999573526926], ["bytes", 0.24999999573526926], ["int", 0.24999999573526926], ["bool", 1.7012139849815217e-08]], "kwargs": [], "self": []}, "q_name": "FernetProtocol.encrypt", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "FernetProtocol", "q_name": "FernetProtocol", "variables": {}, "variables_p": {}}, {"cls_lc": [[39, 0], [57, 16]], "cls_var_ln": {"is_encrypted": [[49, 4], [49, 16]]}, "cls_var_occur": {"is_encrypted": []}, "funcs": [{"docstring": {"func": "Decrypt with Fernet.", "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [53, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "decrypt", "params": {"b": "", "self": ""}, "params_descr": {"b": "", "self": ""}, "params_occur": {"b": [], "self": []}, "params_p": {"args": [], "b": [["Optional[bool]", 0.24999999573526926], ["bytes", 0.24999999573526926], ["int", 0.24999999573526926], ["bool", 1.7012139849815217e-08]], "kwargs": [], "self": []}, "q_name": "NullFernet.decrypt", "ret_exprs": ["return b"], "ret_type": "", "ret_type_p": [["bool", 0.0832464831909122], ["str", 0.0784432595426524], ["bytes", 0.034687974405105314]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Encrypt with Fernet.", "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [57, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "encrypt", "params": {"b": "", "self": ""}, "params_descr": {"b": "", "self": ""}, "params_occur": {"b": [], "self": []}, "params_p": {"args": [], "b": [["Optional[bool]", 0.24999999573526926], ["bytes", 0.24999999573526926], ["int", 0.24999999573526926], ["bool", 1.7012139849815217e-08]], "kwargs": [], "self": []}, "q_name": "NullFernet.encrypt", "ret_exprs": ["return b"], "ret_type": "", "ret_type_p": [["bool", 0.0832464831909122], ["str", 0.0784432595426524], ["bytes", 0.034687974405105314]], "variables": {}, "variables_p": {}}], "name": "NullFernet", "q_name": "NullFernet", "variables": {"is_encrypted": ""}, "variables_p": {"is_encrypted": [["bool", 0.6], ["int", 0.2]]}}], "funcs": [{"docstring": {"func": "Deferred load of Fernet key.", "long_descr": "This function could fail either because Cryptography is not installed\nor because the Fernet key is invalid.", "ret": "Fernet object"}, "fn_lc": [[63, 0], [93, 18]], "fn_var_ln": {"_fernet": [[86, 12], [86, 19]], "fernet_key": [[81, 8], [81, 18]], "is_encrypted": [[89, 12], [89, 32]]}, "fn_var_occur": {"_fernet": [["_fernet", "NullFernet"], ["_fernet", "MultiFernet", "Fernet", "fernet_part", "encode", "fernet_part", "fernet_key", "split"], ["_fernet", "is_encrypted", "True"]], "fernet_key": [["fernet_key", "conf", "get"], ["_fernet", "MultiFernet", "Fernet", "fernet_part", "encode", "fernet_part", "fernet_key", "split"]], "is_encrypted": [["_fernet", "is_encrypted", "True"]]}, "name": "get_fernet", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_fernet", "ret_exprs": ["return _fernet", "return _fernet"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"_fernet": "", "fernet_key": "", "is_encrypted": ""}, "variables_p": {"_fernet": [["str", 0.2912787508471997], ["int", 0.09753205606946987], ["Dict[str, str]", 0.09034443087273139], ["Dict[str, float]", 0.09034443087273139]], "fernet_key": [["str", 1.0]], "is_encrypted": [["bool", 1.0000000000000002]]}}], "imports": ["__future__", "annotations", "logging", "airflow", "configuration", "conf", "airflow", "exceptions", "AirflowException", "airflow", "typing_compat", "Protocol", "cryptography", "fernet", "Fernet", "MultiFernet"], "mod_var_ln": {"_fernet": [[60, 0], [60, 7]], "log": [[26, 0], [26, 3]]}, "mod_var_occur": {"_fernet": [["_fernet"], ["_fernet"], ["_fernet"], ["_fernet", "NullFernet"], ["_fernet", "MultiFernet", "Fernet", "fernet_part", "encode", "fernet_part", "fernet_key", "split"], ["_fernet", "is_encrypted", "True"], ["_fernet"]], "log": [["log", "warning"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 14}, "session_id": "7Om5lZcMOYODrsCs4qnTXGMOmujYU5pgK8qxRA6EMkM", "set": null, "tc": [false, null], "type_annot_cove": 0.07, "typed_seq": "", "untyped_seq": "", "variables": {"_fernet": "FernetProtocol | None", "log": ""}, "variables_p": {"_fernet": [["cryptography.ferneFernet", 0.10364751083779536], ["Callable[[], Any]", 0.09792276734510112], ["List[str]", 0.094646323409229], ["int", 0.09073123008565816], ["dict", 0.08878693198925769]], "log": [["logging.Logger", 0.8999999999999999], ["Dict[str, Union[Any, Any, Any, Any]]", 0.1]]}}}