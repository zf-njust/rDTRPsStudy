{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [272, 19]], "cls_var_ln": {"__NO_DEFAULT_SENTINEL": [[47, 4], [47, 25]], "__tablename__": [[46, 4], [46, 17]], "_val": [[51, 4], [51, 8]], "description": [[52, 4], [52, 15]], "id": [[49, 4], [49, 6]], "is_encrypted": [[53, 4], [53, 16]], "key": [[50, 4], [50, 7]]}, "cls_var_occur": {"__NO_DEFAULT_SENTINEL": [], "__tablename__": [], "_val": [], "description": [["Variable", "set", "key", "default", "description", "description", "serialize_json", "deserialize_json"], ["session", "add", "Variable", "key", "key", "val", "stored_value", "description", "description"], ["Variable", "set", "key", "value", "description", "obj", "description", "serialize_json", "serialize_json"]], "id": [], "is_encrypted": [], "key": [["obj", "Variable", "get", "key", "default_var", "None", "deserialize_json", "deserialize_json"], ["Variable", "set", "key", "default", "description", "description", "serialize_json", "deserialize_json"], ["var_val", "Variable", "get_variable_from_secrets", "key", "key"], ["Variable", "check_for_write_conflict", "key"], ["Variable", "delete", "key", "session", "session"], ["session", "add", "Variable", "key", "key", "val", "stored_value", "description", "description"], ["Variable", "check_for_write_conflict", "key"], ["Variable", "get_variable_from_secrets", "key", "key", "None"], ["obj", "session", "query", "Variable", "filter", "Variable", "key", "key", "first"], ["Variable", "set", "key", "value", "description", "obj", "description", "serialize_json", "serialize_json"], ["session", "execute", "delete", "Variable", "where", "Variable", "key", "key", "rowcount"]]}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [59, 38]], "fn_var_ln": {"description": [[59, 8], [59, 24]], "key": [[57, 8], [57, 16]], "val": [[58, 8], [58, 16]]}, "fn_var_occur": {"description": [["self", "description", "description"]], "key": [["self", "key", "key"]], "val": [["self", "val", "val"]]}, "name": "__init__", "params": {"description": "", "key": "", "self": "", "val": ""}, "params_descr": {"description": "", "key": "", "self": "", "val": ""}, "params_occur": {"description": [["self", "description", "description"]], "key": [["self", "key", "key"]], "self": [["self", "key", "key"], ["self", "val", "val"], ["self", "description", "description"]], "val": [["self", "val", "val"]]}, "params_p": {"args": [], "description": [["str", 0.2920938677529507], ["int", 0.2443638303520337], ["bytes", 0.12722349782111922], ["float", 0.08052575467730513]], "key": [["str", 0.7351174356348931], ["Union[str, int]", 0.09243320056237349], ["Optional[Callable]", 0.08805500632351668]], "kwargs": [], "self": [], "val": [["str", 0.2920938677529507], ["int", 0.2443638303520337], ["bytes", 0.12722349782111922], ["float", 0.08052575467730513]]}, "q_name": "Variable.__init__", "ret_exprs": [], "ret_type": "", "variables": {"description": "", "key": "", "val": ""}, "variables_p": {"description": [["str", 0.797444417937712], ["Dict[str, Union[Any, Any]]", 0.11633190069796367]], "key": [["str", 0.7972017388816628], ["bytes", 0.11644947608617726]], "val": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [64, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "on_db_load", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_val"], ["mask_secret", "self", "val", "self", "key"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Variable.on_db_load", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[66, 4], [68, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "key", "self", "_val"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Variable.__repr__", "ret_exprs": ["return f\"{self.key} : {self._val}\""], "ret_type": "", "ret_type_p": [["str", 0.217974493481085], ["models.Subtask", 0.1835116663780544], ["Union[str, bytes]", 0.1194789137448661], ["MutableMapping[str, Any]", 0.09933608273517737], ["Sequence[str]", 0.09911492022441518], ["List[Dict[str, Any]]", 0.08922521107386419], ["List[str]", 0.08922521107386419]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get Airflow Variable from Metadata DB and decode it using the Fernet Key.", "long_descr": null, "ret": null}, "fn_lc": [[70, 4], [85, 28]], "fn_var_ln": {"fernet": [[76, 16], [76, 22]]}, "fn_var_occur": {"fernet": [["cryptography", "fernet", "InvalidToken", "InvalidFernetToken"], ["fernet", "get_fernet"], ["fernet", "decrypt", "bytes", "self", "_val", "decode"]]}, "name": "get_val", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_val", "None", "self", "is_encrypted"], ["fernet", "decrypt", "bytes", "self", "_val", "decode"], ["self", "log", "error", "self", "key"], ["self", "log", "error", "self", "key"], ["self", "_val"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Variable.get_val", "ret_exprs": ["return fernet.decrypt(bytes(self._val, \"utf-8\")).decode()", "return None", "return None", "return self._val"], "ret_type": "", "ret_type_p": [["str", 0.3188139185960652], ["Optional[str]", 0.19380748357585426]], "variables": {"fernet": ""}, "variables_p": {"fernet": [["freqtrade.configuration.timerange.TimeRange", 0.191057390370184]]}}, {"docstring": {"func": "Encode the specified value with Fernet Key and store it in Variables Table.", "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [92, 51]], "fn_var_ln": {"_val": [[91, 12], [91, 21]], "fernet": [[90, 12], [90, 18]], "is_encrypted": [[92, 12], [92, 29]]}, "fn_var_occur": {"_val": [["self", "_val", "fernet", "encrypt", "bytes", "value", "decode"]], "fernet": [["fernet", "get_fernet"], ["self", "_val", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "is_encrypted", "fernet", "is_encrypted"]], "is_encrypted": [["self", "is_encrypted", "fernet", "is_encrypted"]]}, "name": "set_val", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["self", "_val", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "is_encrypted", "fernet", "is_encrypted"]], "value": [["value", "None"], ["self", "_val", "fernet", "encrypt", "bytes", "value", "decode"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["Optional[bytes]", 0.2781992655411863], ["Optional[int]", 0.2694563447097284], ["str", 0.18412658200423582], ["Optional[float]", 0.09206329100211791], ["dict", 0.0840912257406135]]}, "q_name": "Variable.set_val", "ret_exprs": [], "ret_type": "", "variables": {"_val": "", "fernet": "", "is_encrypted": ""}, "variables_p": {"_val": [["bytes", 0.4922534695352604], ["str", 0.3938027756282083], ["Dict[str, int]", 0.11394375483653132]], "fernet": [["str", 0.40014147454807775], ["bytes", 0.29247856586751364], ["int", 0.19498571057834244]], "is_encrypted": [["bool", 0.999999999910124], ["str", 3.306462738767837e-11], ["List[str]", 2.1317488485887237e-11]]}}, {"docstring": {"func": "Get Airflow Variable from Metadata DB and decode it using the Fernet Key.", "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [97, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "val", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["synonym", "descriptor", "property", "cls", "get_val", "cls", "set_val"]]}, "params_p": {"args": [], "cls": [["str", 0.20241265662073135], ["bool", 0.10685705763484044], ["Dict[str, str]", 0.10278346152748592], ["Optional[Dict[str, str]]", 0.10278346152748592], ["Tuple[str, str]", 0.09670757349355115], ["Optional[str]", 0.08773849027541242]], "kwargs": [], "self": []}, "q_name": "Variable.val", "ret_exprs": ["return synonym(\"_val\", descriptor=property(cls.get_val, cls.set_val))"], "ret_type": "", "ret_type_p": [["str", 0.4044454180085393], ["int", 0.1078035802050528]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Like a Python builtin dict object, setdefault returns the current value", "long_descr": "for a key, and if it isn't there, stores the default value and returns it.", "ret": "Mixed"}, "fn_lc": [[100, 4], [121, 22]], "fn_var_ln": {"obj": [[113, 8], [113, 11]]}, "fn_var_occur": {"obj": [["obj", "Variable", "get", "key", "default_var", "None", "deserialize_json", "deserialize_json"], ["obj", "None"]]}, "name": "setdefault", "params": {"cls": "", "default": "", "description": "", "deserialize_json": "", "key": ""}, "params_descr": {"cls": "", "default": "Default value to set and return if the variable\nisn't already in the DB", "description": "Default value to set Description of the Variable", "deserialize_json": "Store this as a JSON encoded value in the DB\nand un-encode it when retrieving a value", "key": "Dict key for this Variable"}, "params_occur": {"cls": [], "default": [["default", "None"], ["Variable", "set", "key", "default", "description", "description", "serialize_json", "deserialize_json"]], "description": [["Variable", "set", "key", "default", "description", "description", "serialize_json", "deserialize_json"]], "deserialize_json": [["obj", "Variable", "get", "key", "default_var", "None", "deserialize_json", "deserialize_json"], ["Variable", "set", "key", "default", "description", "description", "serialize_json", "deserialize_json"]], "key": [["obj", "Variable", "get", "key", "default_var", "None", "deserialize_json", "deserialize_json"], ["Variable", "set", "key", "default", "description", "description", "serialize_json", "deserialize_json"]]}, "params_p": {"args": [], "cls": [["float", 0.3736240913938304], ["bool", 0.12322336354121186], ["Optional[List[str]]", 0.11125517004114771], ["set", 0.09112186239471015]], "default": [["T", 0.19231203749523512], ["Optional[int]", 0.1252233298646366], ["bool", 0.10276245657395904], ["Optional[Any]", 0.10251696552477595], ["Optional[bool]", 0.09256113555092305]], "description": [["List[Type]", 0.1931869916095827], ["List[int]", 0.10368500297934446], ["str", 0.10291501380903897], ["bool", 0.10291501380903897], ["Tuple[str]", 0.10291501380903897], ["Mapping[Any, Any]", 0.09769600087944459]], "deserialize_json": [["Dict[str, Set[str]]", 0.2759168139545555], ["Dict[str, Any]", 0.1208341541984119], ["Optional[Optional]", 0.1208341541984119], ["dict", 0.10678189479290612], ["Hashable", 0.08563755645963157]], "key": [["Dict[str, Set[str]]", 0.2759168139545555], ["Dict[str, Any]", 0.1208341541984119], ["Optional[Optional]", 0.1208341541984119], ["dict", 0.10678189479290612], ["Hashable", 0.08563755645963157]], "kwargs": [], "self": []}, "q_name": "Variable.setdefault", "ret_exprs": ["return default", "return obj"], "ret_type": "", "ret_type_p": [["list", 0.19940831020076882], ["bool", 0.11470233095294594], ["Dict[str, Any]", 0.09577212583498018], ["base.ConfigOptions", 0.09577212583498018]], "variables": {"obj": ""}, "variables_p": {"obj": [["dict", 0.30656709012154404], ["Dict[str, Union[Any, Any, Any]]", 0.19220380692066374], ["Set[str]", 0.119997465132334], ["str", 0.10282080439521353], ["Dict[str, Any]", 0.08560326047526744]]}}, {"docstring": {"func": "Gets a value for an Airflow Variable Key.", "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [149, 30]], "fn_var_ln": {"obj": [[144, 16], [144, 19]], "var_val": [[136, 8], [136, 15]]}, "fn_var_occur": {"obj": [["obj", "json", "loads", "var_val"], ["mask_secret", "obj", "key"]], "var_val": [["var_val", "Variable", "get_variable_from_secrets", "key", "key"], ["var_val", "None"], ["obj", "json", "loads", "var_val"], ["mask_secret", "var_val", "key"]]}, "name": "get", "params": {"cls": "", "default_var": "typing.Any", "deserialize_json": "builtins.bool", "key": "builtins.str"}, "params_descr": {"cls": "", "default_var": "Default value of the Variable if the Variable doesn't exist", "deserialize_json": "Deserialize the value to a Python dict", "key": "Variable Key"}, "params_occur": {"cls": [["default_var", "cls", "__NO_DEFAULT_SENTINEL"]], "default_var": [["default_var", "cls", "__NO_DEFAULT_SENTINEL"]], "deserialize_json": [], "key": [["var_val", "Variable", "get_variable_from_secrets", "key", "key"], ["KeyError", "key"], ["mask_secret", "obj", "key"], ["mask_secret", "var_val", "key"]]}, "params_p": {"args": [], "cls": [["Type[T]", 0.09913629025372445], ["cmk.utils.type_defs.HostAddress", 0.0824134764113559], ["Mapping", 0.08021153096312536]], "default_var": [["Type[T]", 0.09913629025372445], ["cmk.utils.type_defs.HostAddress", 0.0824134764113559], ["Mapping", 0.08021153096312536]], "deserialize_json": [["bool", 0.3092448601988902], ["Callable", 0.27059196542528663], ["str", 0.1023538402550036]], "key": [["list", 0.10936892173465831], ["Callable", 0.10312369408240875], ["str", 0.10187628086567954], ["dict", 0.10187628086567954], ["Optional[str]", 0.09694792903716624]], "kwargs": [], "self": []}, "q_name": "Variable.get", "ret_exprs": ["return default_var", "return obj", "return var_val"], "ret_type": "typing.Any", "ret_type_p": [["str", 0.3908871405792603], ["bool", 0.30278491408385766], ["Callable[[KT], VT]", 0.10586036442722396], ["int", 0.10508944711101965], ["Sequence", 0.09537813379863838]], "variables": {"obj": "", "var_val": ""}, "variables_p": {"obj": [["dict", 0.335436688420778], ["str", 0.27452640960602737], ["Dict[str, str]", 0.2292548227974589], ["List[Tuple[str, str, str]]", 0.08193147599649128], ["Dict[Tuple[str, str], str]", 0.07885060317924446]], "var_val": [["list", 0.2094465878370735], ["Dict[str, Tuple[float, float]]", 0.1335691738857395], ["Generator[Any, None, None]", 0.12285443021343846], ["Dict[str, Any]", 0.09736973450638314]]}}, {"docstring": {"func": "Sets a value for an Airflow Variable with a given Key.", "long_descr": "This operation overwrites an existing variable.", "ret": null}, "fn_lc": [[154, 4], [179, 23]], "fn_var_ln": {"stored_value": [[175, 12], [175, 24]]}, "fn_var_occur": {"stored_value": [["stored_value", "json", "dumps", "value", "indent"], ["stored_value", "str", "value"], ["session", "add", "Variable", "key", "key", "val", "stored_value", "description", "description"]]}, "name": "set", "params": {"description": "str | None", "key": "builtins.str", "serialize_json": "builtins.bool", "session": "sqlalchemy.orm.Session", "value": "typing.Any"}, "params_descr": {"description": "Description of the Variable", "key": "Variable Key", "serialize_json": "Serialize the value to a JSON string", "session": "", "value": "Value to set for the Variable"}, "params_occur": {"description": [["session", "add", "Variable", "key", "key", "val", "stored_value", "description", "description"]], "key": [["Variable", "check_for_write_conflict", "key"], ["Variable", "delete", "key", "session", "session"], ["session", "add", "Variable", "key", "key", "val", "stored_value", "description", "description"]], "serialize_json": [], "session": [["Variable", "delete", "key", "session", "session"], ["session", "add", "Variable", "key", "key", "val", "stored_value", "description", "description"], ["session", "flush"]], "value": [["stored_value", "json", "dumps", "value", "indent"], ["stored_value", "str", "value"]]}, "params_p": {"args": [], "description": [["str", 0.18786940506710545], ["Dict[Any, list]", 0.11014925731116972], ["dict", 0.10809707849525516], ["Optional[Callable]", 0.10207990976270044], ["Union[float, None, int]", 0.09393470253355272], ["bool", 0.09393470253355272]], "key": [["str", 0.29950949376548974], ["Optional[str]", 0.19992757221869148], ["Union[Dict, List]", 0.0910075376803379], ["int", 0.09091249053089345], ["Union[str, bytes]", 0.0906028085500729]], "kwargs": [], "self": [], "serialize_json": [["bool", 0.21783967080936859], ["str", 0.1881068861270876], ["bytes", 0.1881068861270876], ["float", 0.1881068861270876], ["Hashable", 0.09932286067192511]], "session": [["dict", 0.5373680833528871], ["Dict[str, Any]", 0.11725245946140095], ["str", 0.10618400192270952], ["Optional[str]", 0.10382077335758091]], "value": [["str", 0.5938047511209058], ["Exception", 0.11356424315476293], ["bytes", 0.10627121034853224], ["bool", 0.09610503512174079], ["Union[str, bytes]", 0.09025476025405824]]}, "q_name": "Variable.set", "ret_exprs": [], "ret_type": "None", "variables": {"stored_value": ""}, "variables_p": {"stored_value": [["Dict[str, bool]", 0.24952983756858954], ["Dict[str, Any]", 0.168861304797234], ["str", 0.158615838350954], ["Dict[str, Dict[str, Any]]", 0.12658435447783317], ["List[str]", 0.12346078750776537], ["float", 0.09400494106380246], ["Dict[str, Callable[[], Any]]", 0.07894293623382134]]}}, {"docstring": {"func": "Updates a given Airflow Variable with the Provided value.", "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [205, 92]], "fn_var_ln": {"obj": [[201, 8], [201, 11]]}, "fn_var_occur": {"obj": [["obj", "session", "query", "Variable", "filter", "Variable", "key", "key", "first"], ["obj", "None"], ["Variable", "set", "key", "value", "description", "obj", "description", "serialize_json", "serialize_json"]]}, "name": "update", "params": {"key": "builtins.str", "serialize_json": "builtins.bool", "session": "sqlalchemy.orm.Session", "value": "typing.Any"}, "params_descr": {"key": "Variable Key", "serialize_json": "Serialize the value to a JSON string", "session": "", "value": "Value to set for the Variable"}, "params_occur": {"key": [["Variable", "check_for_write_conflict", "key"], ["Variable", "get_variable_from_secrets", "key", "key", "None"], ["KeyError", "key"], ["obj", "session", "query", "Variable", "filter", "Variable", "key", "key", "first"], ["AttributeError", "key"], ["Variable", "set", "key", "value", "description", "obj", "description", "serialize_json", "serialize_json"]], "serialize_json": [["Variable", "set", "key", "value", "description", "obj", "description", "serialize_json", "serialize_json"]], "session": [["obj", "session", "query", "Variable", "filter", "Variable", "key", "key", "first"]], "value": [["Variable", "set", "key", "value", "description", "obj", "description", "serialize_json", "serialize_json"]]}, "params_p": {"args": [], "key": [["dict", 0.45331353650213285], ["Optional[Any]", 0.22068334072084667], ["Optional[str]", 0.09194218379976048]], "kwargs": [], "self": [], "serialize_json": [["str", 0.5299769720120557], ["Optional[str]", 0.2615930737394242], ["List[str]", 0.20842995424852007]], "session": [["str", 0.23193107252710154], ["dict", 0.10657540233368697], ["Type[MutableMapping]", 0.09928034646584429], ["List[zerver.models.Stream]", 0.09427083450460332], ["Optional[str]", 0.09186344510200213], ["Optional[Sequence[Any]]", 0.09069076666229715]], "value": [["str", 0.5299769720120557], ["Optional[str]", 0.2615930737394242], ["List[str]", 0.20842995424852007]]}, "q_name": "Variable.update", "ret_exprs": [], "ret_type": "None", "variables": {"obj": ""}, "variables_p": {"obj": [["str", 0.283995799094823], ["list", 0.12363845277933602], ["Dict[str, Tuple[str, str]]", 0.09711066811798004], ["Dict[str, Union[Any, Any, Any]]", 0.0962029086593457], ["List[Union[Any, Any, Any, Any]]", 0.09040590899432073], ["List[Tuple[Any, Any]]", 0.08996836811177934]]}}, {"docstring": {"func": "Delete an Airflow Variable for a given key.", "long_descr": null, "ret": null}, "fn_lc": [[210, 4], [215, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "delete", "params": {"key": "builtins.str", "session": "sqlalchemy.orm.Session"}, "params_descr": {"key": "Variable Keys", "session": ""}, "params_occur": {"key": [["session", "execute", "delete", "Variable", "where", "Variable", "key", "key", "rowcount"]], "session": [["session", "execute", "delete", "Variable", "where", "Variable", "key", "key", "rowcount"]]}, "params_p": {"args": [], "key": [["str", 0.6721080833172486], ["bytes", 0.13788651397428706], ["Iterable[Hashable]", 0.09008998455053062]], "kwargs": [], "self": [], "session": [["str", 0.6721080833172486], ["bytes", 0.13788651397428706], ["Iterable[Hashable]", 0.09008998455053062]]}, "q_name": "Variable.delete", "ret_exprs": ["return session.execute(delete(Variable).where(Variable.key == key)).rowcount"], "ret_type": "builtins.int", "ret_type_p": [["str", 0.31790001401665974], ["Optional[int]", 0.1112915950955743], ["List[str]", 0.09740737342364413], ["djmoney.contrib.exchange.models.Rate", 0.09514677870316052], ["zerver.models.Realm", 0.09514677870316052], ["dict", 0.09391627904857118], ["Dict[str, Any]", 0.09117163590480054]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Rotate Fernet Key.", "long_descr": null, "ret": null}, "fn_lc": [[217, 4], [221, 73]], "fn_var_ln": {"_val": [[221, 12], [221, 21]], "fernet": [[219, 8], [219, 14]]}, "fn_var_occur": {"_val": [["self", "_val", "self", "is_encrypted"], ["self", "_val", "fernet", "rotate", "self", "_val", "encode", "decode"]], "fernet": [["fernet", "get_fernet"], ["self", "_val", "fernet", "rotate", "self", "_val", "encode", "decode"]]}, "name": "rotate_fernet_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_val", "self", "is_encrypted"], ["self", "_val", "fernet", "rotate", "self", "_val", "encode", "decode"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Variable.rotate_fernet_key", "ret_exprs": [], "ret_type": "", "variables": {"_val": "", "fernet": ""}, "variables_p": {"_val": [["str", 0.5590793160995529], ["int", 0.44092068390044703]], "fernet": [["str", 0.4660983883619999], ["int", 0.32137572369371714], ["Dict[str, List[str]]", 0.11161677460687748]]}}, {"docstring": {"func": "Logs a warning if a variable exists outside of the metastore.", "long_descr": "If we try to write a variable to the metastore while the same key\nexists in an environment variable or custom secrets backend, then\nsubsequent reads will not read the set value.", "ret": null}, "fn_lc": [[224, 4], [251, 23]], "fn_var_ln": {"var_val": [[236, 20], [236, 27]]}, "fn_var_occur": {"var_val": [["var_val", "secrets_backend", "get_variable", "key", "key"], ["var_val", "None"]]}, "name": "check_for_write_conflict", "params": {"key": "builtins.str"}, "params_descr": {"key": "Variable Key"}, "params_occur": {"key": [["var_val", "secrets_backend", "get_variable", "key", "key"], ["log", "warning", "format", "key", "key", "cls", "secrets_backend", "__class__", "__name__"]]}, "params_p": {"args": [], "key": [["str", 0.5029650674943007], ["int", 0.08682918516672737]], "kwargs": [], "self": []}, "q_name": "Variable.check_for_write_conflict", "ret_exprs": ["return", "return None"], "ret_type": "None", "ret_type_p": [["Optional[int]", 0.3832720072287985], ["Optional[str]", 0.10433974259442744], ["Optional[float]", 0.09925397773514136]], "variables": {"var_val": ""}, "variables_p": {"var_val": [["Optional[str]", 0.1261775070997564], ["Dict[str, Any]", 0.10949441724774112], ["str", 0.09565410805372453], ["Dict[str, Tuple[float, float]]", 0.09413891204140085]]}}, {"docstring": {"func": "Get Airflow Variable by iterating over all Secret Backends.", "long_descr": null, "ret": "Variable Value"}, "fn_lc": [[254, 4], [272, 19]], "fn_var_ln": {"var_val": [[263, 16], [263, 23]]}, "fn_var_occur": {"var_val": [["var_val", "secrets_backend", "get_variable", "key", "key"], ["var_val", "None"]]}, "name": "get_variable_from_secrets", "params": {"key": "builtins.str"}, "params_descr": {"key": "Variable Key"}, "params_occur": {"key": [["var_val", "secrets_backend", "get_variable", "key", "key"]]}, "params_p": {"args": [], "key": [["str", 0.7132256727841261], ["bytes", 0.09610370132889755]], "kwargs": [], "self": []}, "q_name": "Variable.get_variable_from_secrets", "ret_exprs": ["return var_val", "return None"], "ret_type": "str | None", "ret_type_p": [["bool", 0.39396026337353335], ["str", 0.3301128271204574], ["Optional[int]", 0.0943978852232798], ["Optional[str]", 0.0943978852232798]], "variables": {"var_val": ""}, "variables_p": {"var_val": [["Optional[str]", 0.1261775070997564], ["Dict[str, Any]", 0.10949441724774112], ["str", 0.09565410805372453], ["Dict[str, Tuple[float, float]]", 0.09413891204140085]]}}], "name": "Variable", "q_name": "Variable", "variables": {"__NO_DEFAULT_SENTINEL": "", "__tablename__": "", "_val": "", "description": "", "id": "", "is_encrypted": "", "key": ""}, "variables_p": {"__NO_DEFAULT_SENTINEL": [["str", 0.6666666666772149], ["int", 0.11111111110759508]], "__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_val": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "description": [["str", 0.594176488209431], ["list", 0.21288337216479775]], "id": [["int", 0.5], ["str", 0.2], ["Optional[int]", 0.1], ["Type[legocollector.inventory.models.Color]", 0.1]], "is_encrypted": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "key": [["str", 0.5111050083131397], ["Set[str]", 0.12036069950607678], ["Dict[str, Any]", 0.10716011071100907], ["Tuple[str]", 0.10272322581006409], ["Tuple[Any, Any, Any, Any]", 0.08034572572119031]]}}], "funcs": [], "imports": ["__future__", "annotations", "json", "logging", "typing", "Any", "sqlalchemy", "Boolean", "Column", "Integer", "String", "Text", "delete", "sqlalchemy", "dialects", "mysql", "MEDIUMTEXT", "sqlalchemy", "orm", "Session", "declared_attr", "reconstructor", "synonym", "airflow", "api_internal", "internal_api_call", "internal_api_call", "airflow", "configuration", "ensure_secrets_loaded", "airflow", "models", "base", "ID_LEN", "Base", "airflow", "models", "crypto", "get_fernet", "airflow", "secrets", "metastore", "MetastoreBackend", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "utils", "log", "secrets_masker", "mask_secret", "airflow", "utils", "session", "provide_session", "cryptography", "fernet", "InvalidToken", "InvalidFernetToken"], "mod_var_ln": {"log": [[37, 0], [37, 3]]}, "mod_var_occur": {"log": [["self", "log", "error", "self", "key"], ["self", "log", "error", "self", "key"], ["log", "warning", "format", "key", "key", "cls", "secrets_backend", "__class__", "__name__"], ["log", "exception", "type", "secrets_backend", "__name__"], ["log", "exception", "type", "secrets_backend", "__name__"]]}, "no_types_annot": {"D": 22, "I": 0, "U": 40}, "session_id": "g3zt6C_kVPw0mN-y8BKzn78j1vCDdMyD8qh_omseVCQ", "set": null, "tc": [false, null], "type_annot_cove": 0.35, "typed_seq": "", "untyped_seq": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.9074796781942651], ["logging.LoggerAdapter", 0.09252032180573488]]}}}