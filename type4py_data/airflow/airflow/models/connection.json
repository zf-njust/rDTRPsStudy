{"error": null, "response": {"classes": [{"cls_lc": [[61, 0], [480, 52]], "cls_var_ln": {"EXTRA_KEY": [[84, 4], [84, 13]], "__tablename__": [[86, 4], [86, 17]], "_extra": [[99, 4], [99, 10]], "_password": [[95, 4], [95, 13]], "conn_id": [[89, 4], [89, 11]], "conn_type": [[90, 4], [90, 13]], "description": [[91, 4], [91, 15]], "host": [[92, 4], [92, 8]], "id": [[88, 4], [88, 6]], "is_encrypted": [[97, 4], [97, 16]], "is_extra_encrypted": [[98, 4], [98, 22]], "login": [[94, 4], [94, 9]], "port": [[96, 4], [96, 8]], "schema": [[93, 4], [93, 10]]}, "cls_var_occur": {"EXTRA_KEY": [], "__tablename__": [], "_extra": [], "_password": [], "conn_id": [["Connection", "conn_id", "conn_id", "kwargs"]], "conn_type": [], "description": [], "host": [], "id": [], "is_encrypted": [], "is_extra_encrypted": [], "login": [], "port": [], "schema": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [139, 38]], "fn_var_ln": {"conn_id": [[115, 8], [115, 20]], "conn_type": [[128, 12], [128, 26]], "description": [[116, 8], [116, 24]], "extra": [[134, 12], [134, 22]], "host": [[129, 12], [129, 21]], "login": [[130, 12], [130, 22]], "password": [[131, 12], [131, 25]], "port": [[133, 12], [133, 21]], "schema": [[132, 12], [132, 23]]}, "fn_var_occur": {"conn_id": [["self", "conn_id", "conn_id"], ["self", "_validate_extra", "self", "extra", "self", "conn_id"]], "conn_type": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "conn_type", "conn_type"]], "description": [["self", "description", "description"]], "extra": [["extra", "isinstance", "extra", "str"], ["extra", "json", "dumps", "extra"], ["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "extra", "extra"], ["self", "extra"], ["self", "_validate_extra", "self", "extra", "self", "conn_id"]], "host": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "host", "host"]], "login": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "login", "login"]], "password": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "password", "password"], ["self", "password"], ["mask_secret", "self", "password"]], "port": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "port", "port"]], "schema": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "schema", "schema"]]}, "name": "__init__", "params": {"conn_id": "str | None", "conn_type": "str | None", "description": "str | None", "extra": "str | dict | None", "host": "str | None", "login": "str | None", "password": "str | None", "port": "int | None", "schema": "str | None", "self": "", "uri": "str | None"}, "params_descr": {"conn_id": "", "conn_type": "", "description": "", "extra": "", "host": "", "login": "", "password": "", "port": "", "schema": "", "self": "", "uri": ""}, "params_occur": {"conn_id": [["self", "conn_id", "conn_id"], ["self", "_validate_extra", "self", "extra", "self", "conn_id"]], "conn_type": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "conn_type", "conn_type"]], "description": [["self", "description", "description"]], "extra": [["extra", "isinstance", "extra", "str"], ["extra", "json", "dumps", "extra"], ["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "extra", "extra"], ["self", "extra"], ["self", "_validate_extra", "self", "extra", "self", "conn_id"]], "host": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "host", "host"]], "login": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "login", "login"]], "password": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "password", "password"], ["self", "password"], ["mask_secret", "self", "password"]], "port": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "port", "port"]], "schema": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "schema", "schema"]], "self": [["self", "conn_id", "conn_id"], ["self", "description", "description"], ["self", "_parse_from_uri", "uri"], ["self", "conn_type", "conn_type"], ["self", "host", "host"], ["self", "login", "login"], ["self", "password", "password"], ["self", "schema", "schema"], ["self", "port", "port"], ["self", "extra", "extra"], ["self", "extra"], ["self", "_validate_extra", "self", "extra", "self", "conn_id"], ["self", "password"], ["mask_secret", "self", "password"]], "uri": [["uri", "conn_type", "host", "login", "password", "schema", "port", "extra"], ["self", "_parse_from_uri", "uri"]]}, "params_p": {"args": [], "conn_id": [["List[str]", 0.19160765672842472], ["List['Action']", 0.11941773316062715], ["Set[int]", 0.11377626336604964], ["Optional[Dict[str, Any]]", 0.10272302973290347], ["Optional[List[str]]", 0.10272302973290347], ["bool", 0.09079856566924234]], "conn_type": [["str", 0.8988404900312289], ["bool", 0.10115950996877118]], "description": [["str", 0.7014330887497494], ["bool", 0.09633711318443662]], "extra": [["str", 0.9045927432285549]], "host": [["str", 0.7835964194492914], ["int", 0.21640358055070863]], "kwargs": [], "login": [["str", 0.5933528951644286], ["Optional[str]", 0.10504368026993123], ["bool", 0.08923462297302796]], "password": [["str", 0.5933528951644286], ["Optional[str]", 0.10504368026993123], ["bool", 0.08923462297302796]], "port": [["str", 0.6997639837055644], ["int", 0.2139441813699433], ["bool", 0.08629183492449222]], "schema": [["str", 0.5933528951644286], ["Optional[str]", 0.10504368026993123], ["bool", 0.08923462297302796]], "self": [], "uri": [["str", 0.6978048289058831], ["Optional[str]", 0.11123814354496907], ["bytes", 0.09547851377457378], ["Dict[str, str]", 0.09547851377457378]]}, "q_name": "Connection.__init__", "ret_exprs": [], "ret_type": "", "variables": {"conn_id": "", "conn_type": "", "description": "", "extra": "", "host": "", "login": "", "password": "", "port": "", "schema": ""}, "variables_p": {"conn_id": [["int", 0.9025448454191598]], "conn_type": [["Dict[str, str]", 0.3696630710073784], ["int", 0.3238358026378563], ["Set[int]", 0.10387900235984865], ["str", 0.10295690857651718]], "description": [["str", 0.797444417937712], ["Dict[str, Union[Any, Any]]", 0.11633190069796367]], "extra": [["str", 0.7194505728636535], ["List[str]", 0.0968054888680698]], "host": [["str", 1.0000000000000002]], "login": [["str", 0.6882219797236597], ["int", 0.3117780202763404]], "password": [["str", 0.582782941959473], ["int", 0.3055059802419441], ["Tuple[int, str]", 0.11171107779858303]], "port": [["int", 0.3937101319664693], ["str", 0.3372657366044764]], "schema": [["str", 0.6882219797236597], ["int", 0.3117780202763404]]}}, {"docstring": {"func": "Here we verify that ``extra`` is a JSON-encoded Python dict.  From Airflow 3.0, we should no", "long_descr": "longer suppress these errors but raise instead.", "ret": null}, "fn_lc": [[142, 4], [166, 19]], "fn_var_ln": {"extra_parsed": [[150, 12], [150, 24]]}, "fn_var_occur": {"extra_parsed": [["extra_parsed", "json", "loads", "extra"], ["isinstance", "extra_parsed", "dict"]]}, "name": "_validate_extra", "params": {"conn_id": "", "extra": ""}, "params_descr": {"conn_id": "", "extra": ""}, "params_occur": {"conn_id": [["warnings", "warn", "conn_id", "RemovedInAirflow3Warning", "stacklevel"], ["warnings", "warn", "conn_id", "RemovedInAirflow3Warning", "stacklevel"]], "extra": [["extra", "None"], ["extra_parsed", "json", "loads", "extra"]]}, "params_p": {"args": [], "conn_id": [["str", 0.702104562424533], ["int", 0.20484122254986792], ["Optional[str]", 0.09305421502559912]], "extra": [["Optional[str]", 0.5197033034413069], ["str", 0.20541218241208556], ["List[int]", 0.09618732987968115], ["bool", 0.09080581325905572], ["Dict[str, Any]", 0.08789137100787073]], "kwargs": [], "self": []}, "q_name": "Connection._validate_extra", "ret_exprs": ["return None", "return None"], "ret_type": "None", "ret_type_p": [["Optional[str]", 0.09838170821705132], ["type", 0.09587467416584561], ["Optional[List[Any]]", 0.09414241184630201], ["list", 0.09189170853038563]], "variables": {"extra_parsed": ""}, "variables_p": {"extra_parsed": [["dict", 0.6497632779424383], ["List[str]", 0.11224691379282879], ["str", 0.09487724308208943]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[169, 4], [171, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "on_db_load", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "password"], ["mask_secret", "self", "password"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.on_db_load", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method is deprecated. Please use uri parameter in constructor.", "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [179, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "parse_from_uri", "params": {"self": "", "uri": ""}, "params_descr": {"self": "", "uri": ""}, "params_occur": {"self": [["self", "_parse_from_uri", "uri"]], "uri": [["self", "_parse_from_uri", "uri"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "uri": [["float", 0.19999999999999998], ["Sequence[float]", 0.09999999999999999], ["Tuple[int, int]", 0.09999999999999999], ["tuple", 0.09999999999999999]]}, "q_name": "Connection.parse_from_uri", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[182, 4], [187, 24]], "fn_var_ln": {"conn_type": [[186, 12], [186, 21]]}, "fn_var_occur": {"conn_type": [["conn_type", "conn_type", "replace"]]}, "name": "_normalize_conn_type", "params": {"conn_type": ""}, "params_descr": {"conn_type": ""}, "params_occur": {"conn_type": [["conn_type", "conn_type", "replace"]]}, "params_p": {"args": [], "conn_type": [["str", 0.11131928226963096], ["BinaryIO", 0.09226966377919724]], "kwargs": [], "self": []}, "q_name": "Connection._normalize_conn_type", "ret_exprs": ["return conn_type"], "ret_type": "", "ret_type_p": [["zam_repondeur.models.division.SubDiv", 0.07245636662451664]], "variables": {"conn_type": ""}, "variables_p": {"conn_type": [["Dict[Any, str]", 0.3838624520901119], ["List[str]", 0.10910491840855306], ["str", 0.05932389730088959], ["Pattern[str]", 0.05898824570218891], ["Type[str]", 0.05613994248685196], ["Type[List[Any]]", 0.05451072450310035]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[189, 4], [216, 46]], "fn_var_ln": {"conn_type": [[196, 8], [196, 22]], "extra": [[216, 16], [216, 26]], "host": [[205, 8], [205, 17]], "host_with_protocol": [[193, 8], [193, 26]], "login": [[208, 8], [208, 18]], "password": [[209, 8], [209, 21]], "port": [[210, 8], [210, 17]], "protocol": [[203, 8], [203, 16]], "query": [[212, 12], [212, 17]], "quoted_schema": [[206, 8], [206, 21]], "rest_of_the_url": [[197, 8], [197, 23]], "schema": [[207, 8], [207, 19]], "schemes_count_in_uri": [[190, 8], [190, 28]], "uri_parts": [[202, 8], [202, 17]], "uri_splits": [[199, 12], [199, 22]]}, "fn_var_occur": {"conn_type": [["conn_type", "uri_parts", "scheme"], ["self", "conn_type", "self", "_normalize_conn_type", "conn_type"], ["rest_of_the_url", "uri", "replace", "conn_type", "host_with_protocol"]], "extra": [["self", "extra", "query", "self", "EXTRA_KEY"], ["self", "extra", "json", "dumps", "query"]], "host": [["host", "_parse_netloc_to_hostname", "uri_parts"], ["self", "host", "self", "_create_host", "protocol", "host"]], "host_with_protocol": [["host_with_protocol", "schemes_count_in_uri"], ["rest_of_the_url", "uri", "replace", "conn_type", "host_with_protocol"], ["protocol", "uri_parts", "scheme", "host_with_protocol", "None"]], "login": [["self", "login", "unquote", "uri_parts", "username", "uri_parts", "username", "uri_parts", "username"]], "password": [["self", "password", "unquote", "uri_parts", "password", "uri_parts", "password", "uri_parts", "password"]], "port": [["self", "port", "uri_parts", "port"]], "protocol": [["protocol", "uri_parts", "scheme", "host_with_protocol", "None"], ["self", "host", "self", "_create_host", "protocol", "host"]], "query": [["uri_parts", "query"], ["query", "dict", "parse_qsl", "uri_parts", "query", "keep_blank_values", "True"], ["self", "EXTRA_KEY", "query"], ["self", "extra", "query", "self", "EXTRA_KEY"], ["self", "extra", "json", "dumps", "query"]], "quoted_schema": [["quoted_schema", "uri_parts", "path"], ["self", "schema", "unquote", "quoted_schema", "quoted_schema", "quoted_schema"]], "rest_of_the_url": [["rest_of_the_url", "uri", "replace", "conn_type", "host_with_protocol"], ["uri_splits", "rest_of_the_url", "split"], ["uri_parts", "urlsplit", "rest_of_the_url"]], "schema": [["self", "schema", "unquote", "quoted_schema", "quoted_schema", "quoted_schema"]], "schemes_count_in_uri": [["schemes_count_in_uri", "uri", "count"], ["host_with_protocol", "schemes_count_in_uri"]], "uri_parts": [["uri_parts", "urlsplit", "uri"], ["conn_type", "uri_parts", "scheme"], ["uri_parts", "urlsplit", "rest_of_the_url"], ["protocol", "uri_parts", "scheme", "host_with_protocol", "None"], ["host", "_parse_netloc_to_hostname", "uri_parts"], ["quoted_schema", "uri_parts", "path"], ["self", "login", "unquote", "uri_parts", "username", "uri_parts", "username", "uri_parts", "username"], ["self", "password", "unquote", "uri_parts", "password", "uri_parts", "password", "uri_parts", "password"], ["self", "port", "uri_parts", "port"], ["uri_parts", "query"], ["query", "dict", "parse_qsl", "uri_parts", "query", "keep_blank_values", "True"]], "uri_splits": [["uri_splits", "rest_of_the_url", "split"], ["uri_splits", "uri_splits"]]}, "name": "_parse_from_uri", "params": {"self": "", "uri": "builtins.str"}, "params_descr": {"self": "", "uri": ""}, "params_occur": {"self": [["self", "conn_type", "self", "_normalize_conn_type", "conn_type"], ["self", "host", "self", "_create_host", "protocol", "host"], ["self", "schema", "unquote", "quoted_schema", "quoted_schema", "quoted_schema"], ["self", "login", "unquote", "uri_parts", "username", "uri_parts", "username", "uri_parts", "username"], ["self", "password", "unquote", "uri_parts", "password", "uri_parts", "password", "uri_parts", "password"], ["self", "port", "uri_parts", "port"], ["self", "EXTRA_KEY", "query"], ["self", "extra", "query", "self", "EXTRA_KEY"], ["self", "extra", "json", "dumps", "query"]], "uri": [["schemes_count_in_uri", "uri", "count"], ["AirflowException", "uri"], ["uri_parts", "urlsplit", "uri"], ["rest_of_the_url", "uri", "replace", "conn_type", "host_with_protocol"], ["AirflowException", "uri"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "uri": [["bool", 0.1049537365553843], ["Dict[str, object]", 0.09777116811692527], ["str", 0.07780418786049337]]}, "q_name": "Connection._parse_from_uri", "ret_exprs": [], "ret_type": "", "variables": {"conn_type": "", "extra": "", "host": "", "host_with_protocol": "", "login": "", "password": "", "port": "", "protocol": "", "query": "", "quoted_schema": "", "rest_of_the_url": "", "schema": "", "schemes_count_in_uri": "", "uri_parts": "", "uri_splits": ""}, "variables_p": {"conn_type": [["Dict[str, Union[Any, Any]]", 0.3093283780043864], ["str", 0.17909389212844046], ["Dict[str, str]", 0.10585760012617346], ["tuple", 0.10408018544182082], ["Dict[str, List[str]]", 0.09510259685254147]], "extra": [["Pattern[str]", 0.8944017290343231]], "host": [["str", 0.6360193878674396], ["int", 0.3639806121325604]], "host_with_protocol": [["str", 0.20685349989866358], ["dict", 0.1833457395774766]], "login": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "password": [["str", 0.6022818534632302], ["int", 0.07069632070401946], ["Dict[Any, Tuple[Any, Any, Any]]", 0.0688817754905547]], "port": [["Dict[str, Dict[int, str]]", 0.11729461192294889], ["float", 0.10511260567794765], ["Dict[str, Any]", 0.1023277984126176], ["Dict[int, int]", 0.09080961634049001], ["dict", 0.0907865051969819], ["str", 0.08810922939553283], ["Dict[str, int]", 0.08782874108798978]], "protocol": [["float", 0.12149100155385169], ["Optional[\"Environment\"]", 0.10702216905173587]], "query": [["str", 0.18862611988678277], ["Pattern[str]", 0.13962170709490468], ["int", 0.12338117699927313]], "quoted_schema": [["str", 1.0]], "rest_of_the_url": [["str", 0.9999999999999999]], "schema": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "schemes_count_in_uri": [["int", 0.6007174327536258], ["str", 0.31178152954481175], ["List[int]", 0.08750103770156249]], "uri_parts": [["List[int]", 0.09898065239879218], ["List[str]", 0.09355689327132653]], "uri_splits": [["Pattern[str]", 0.7187484808208391], ["str", 0.281251519179161]]}}, {"docstring": {"func": "Returns the connection host with the protocol.", "long_descr": null, "ret": null}, "fn_lc": [[219, 4], [225, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_create_host", "params": {"host": "", "protocol": ""}, "params_descr": {"host": "", "protocol": ""}, "params_occur": {"host": [["protocol", "host"]], "protocol": [["protocol", "host"]]}, "params_p": {"args": [], "host": [["bool", 0.5], ["float", 0.1]], "kwargs": [], "protocol": [["bool", 0.5], ["float", 0.1]], "self": []}, "q_name": "Connection._create_host", "ret_exprs": ["return host", "return f\"{protocol}://{host}\"", "return host"], "ret_type": "str | None", "ret_type_p": [["str", 0.4440887329899816]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return connection in URI format.", "long_descr": null, "ret": null}, "fn_lc": [[227, 4], [285, 18]], "fn_var_ln": {"authority_block": [[248, 8], [248, 23]], "host": [[243, 22], [243, 26]], "host_block": [[260, 8], [260, 18]], "protocol": [[243, 12], [243, 20]], "query": [[279, 16], [279, 21]], "uri": [[238, 12], [238, 15]]}, "fn_var_occur": {"authority_block": [["authority_block", "quote", "self", "login", "safe"], ["authority_block", "quote", "self", "password", "safe"], ["uri", "authority_block"], ["host_block", "authority_block"]], "host": [["self", "host", "self", "host"], ["protocol", "host", "self", "host", "split"], ["protocol", "host", "None", "self", "host"], ["host_block", "quote", "host", "safe"]], "host_block": [["host_block", "quote", "host", "safe"], ["host_block", "authority_block"], ["host_block", "self", "port"], ["host_block", "self", "port"], ["host_block", "quote", "self", "schema", "safe"], ["uri", "host_block"]], "protocol": [["protocol", "host", "self", "host", "split"], ["protocol", "host", "None", "self", "host"], ["uri", "protocol"]], "query": [["query", "str", "None", "urlencode", "self", "extra_dejson"], ["query", "None"], ["query", "self", "extra_dejson", "dict", "parse_qsl", "query", "keep_blank_values", "True"], ["uri", "self", "schema", "query"]], "uri": [["uri", "self", "conn_type", "lower", "replace"], ["uri", "protocol"], ["uri", "authority_block"], ["uri", "host_block"], ["uri", "self", "schema", "query"], ["uri", "self", "schema", "urlencode", "self", "EXTRA_KEY", "self", "extra"]]}, "name": "get_uri", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn_type", "self", "conn_type"], ["self", "log", "warning", "self", "conn_type"], ["self", "conn_type"], ["uri", "self", "conn_type", "lower", "replace"], ["self", "host", "self", "host"], ["protocol", "host", "self", "host", "split"], ["protocol", "host", "None", "self", "host"], ["self", "login", "None"], ["authority_block", "quote", "self", "login", "safe"], ["self", "password", "None"], ["authority_block", "quote", "self", "password", "safe"], ["self", "port"], ["host_block", "self", "port"], ["host_block", "self", "port"], ["self", "schema"], ["host_block", "quote", "self", "schema", "safe"], ["self", "extra"], ["query", "str", "None", "urlencode", "self", "extra_dejson"], ["query", "self", "extra_dejson", "dict", "parse_qsl", "query", "keep_blank_values", "True"], ["uri", "self", "schema", "query"], ["uri", "self", "schema", "urlencode", "self", "EXTRA_KEY", "self", "extra"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.get_uri", "ret_exprs": ["return uri"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"authority_block": "", "host": "", "host_block": "", "protocol": "", "query": "", "uri": ""}, "variables_p": {"authority_block": [["list", 0.1297497199764191], ["raiden.utils.Any", 0.10236365041964528], ["str", 0.09264147069191632]], "host": [["int", 0.5021058691462738], ["str", 0.4978941308537264]], "host_block": [], "protocol": [["str", 0.703342542524849], ["int", 0.2966574574751511]], "query": [["str", 0.507482749341682], ["Dict[str, Any]", 0.0969406196037377], ["list", 0.0964578421055113]], "uri": [["str", 0.314276042746777], ["int", 0.12410958385905586], ["nevergrad.optimization.base.ConfiguredOptimizer", 0.0940552342133963], ["float", 0.09087687850222852], ["Tuple[Any, Any]", 0.08697432187612747], ["raiden.utils.Any", 0.08480551473637717]]}}, {"docstring": {"func": "Return encrypted password.", "long_descr": null, "ret": null}, "fn_lc": [[287, 4], [298, 33]], "fn_var_ln": {"fernet": [[290, 12], [290, 18]]}, "fn_var_occur": {"fernet": [["fernet", "get_fernet"], ["fernet", "is_encrypted"], ["fernet", "decrypt", "bytes", "self", "_password", "decode"]]}, "name": "get_password", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_password", "self", "is_encrypted"], ["AirflowException", "self", "login"], ["fernet", "decrypt", "bytes", "self", "_password", "decode"], ["self", "_password"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.get_password", "ret_exprs": ["return fernet.decrypt(bytes(self._password, \"utf-8\")).decode()", "return self._password"], "ret_type": "str | None", "ret_type_p": [["str", 0.4407414004975655], ["Optional[int]", 0.15814638246996623], ["Dict[str, Any]", 0.07926057075548802], ["Optional[bool]", 0.07907319123498312], ["Optional[str]", 0.07907319123498312]], "variables": {"fernet": ""}, "variables_p": {"fernet": [["Pattern[str]", 0.36123820956142605], ["str", 0.19553071506529568], ["dict", 0.08947908857876227], ["List[str]", 0.08947908857876227], ["int", 0.0840618620440998]]}}, {"docstring": {"func": "Encrypt password and set in object attribute.", "long_descr": null, "ret": null}, "fn_lc": [[300, 4], [305, 51]], "fn_var_ln": {"_password": [[304, 12], [304, 26]], "fernet": [[303, 12], [303, 18]], "is_encrypted": [[305, 12], [305, 29]]}, "fn_var_occur": {"_password": [["self", "_password", "fernet", "encrypt", "bytes", "value", "decode"]], "fernet": [["fernet", "get_fernet"], ["self", "_password", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "is_encrypted", "fernet", "is_encrypted"]], "is_encrypted": [["self", "is_encrypted", "fernet", "is_encrypted"]]}, "name": "set_password", "params": {"self": "", "value": "str | None"}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["self", "_password", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "is_encrypted", "fernet", "is_encrypted"]], "value": [["self", "_password", "fernet", "encrypt", "bytes", "value", "decode"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["bytes", 0.4903065398432457], ["str", 0.2899684155786732], ["Tuple[bytearray, bytearray]", 0.1172009519616198]]}, "q_name": "Connection.set_password", "ret_exprs": [], "ret_type": "", "variables": {"_password": "", "fernet": "", "is_encrypted": ""}, "variables_p": {"_password": [["str", 0.5839096547993436], ["bytes", 0.10080041996126847], ["int", 0.08240297376760226]], "fernet": [["str", 0.40014147454807775], ["bytes", 0.29247856586751364], ["int", 0.19498571057834244]], "is_encrypted": [["bool", 0.999999999910124], ["str", 3.306462738767837e-11], ["List[str]", 2.1317488485887237e-11]]}}, {"docstring": {"func": "Password. The value is decrypted/encrypted when reading/setting the value.", "long_descr": null, "ret": null}, "fn_lc": [[308, 4], [310, 92]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "password", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["synonym", "descriptor", "property", "cls", "get_password", "cls", "set_password"]]}, "params_p": {"args": [], "cls": [["str", 0.41612237127853374], ["Optional[str]", 0.2936200789630419], ["bool", 0.10242647056963988], ["Optional[bool]", 0.09425570551222884], ["Callable", 0.09357537367655565]], "kwargs": [], "self": []}, "q_name": "Connection.password", "ret_exprs": ["return synonym(\"_password\", descriptor=property(cls.get_password, cls.set_password))"], "ret_type": "", "ret_type_p": [["socialhome.activities.models.Activity", 0.09095105004060734], ["Dict[str, Any]", 0.08960635688624029], ["zerver.models.Realm", 0.08802623974186953], ["Set[cmk.utils.type_defs.ParsedSectionName]", 0.0874117732865571], ["cmk.base.checkers.host_sections.MultiHostSections", 0.0874117732865571]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Return encrypted extra-data.", "long_descr": null, "ret": null}, "fn_lc": [[312, 4], [326, 24]], "fn_var_ln": {"extra_val": [[323, 12], [323, 21]], "fernet": [[315, 12], [315, 18]]}, "fn_var_occur": {"extra_val": [["extra_val", "fernet", "decrypt", "bytes", "self", "_extra", "decode"], ["extra_val", "self", "_extra"], ["self", "_validate_extra", "extra_val", "self", "conn_id"]], "fernet": [["fernet", "get_fernet"], ["fernet", "is_encrypted"], ["extra_val", "fernet", "decrypt", "bytes", "self", "_extra", "decode"]]}, "name": "get_extra", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_extra", "self", "is_extra_encrypted"], ["AirflowException", "self", "login"], ["extra_val", "fernet", "decrypt", "bytes", "self", "_extra", "decode"], ["extra_val", "self", "_extra"], ["self", "_validate_extra", "extra_val", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.get_extra", "ret_exprs": ["return extra_val"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"extra_val": "", "fernet": ""}, "variables_p": {"extra_val": [["bytes", 0.17772992736058427], ["int", 0.09863697893259077], ["str", 0.09028239096108533], ["Dict[str, Dict[str, str]]", 0.08778551212695591]], "fernet": [["Set[str]", 0.11339475027103339], ["str", 0.10512168236893826], ["Optional[str]", 0.08973801263490373]]}}, {"docstring": {"func": "Encrypt extra-data and save in object attribute to object.", "long_descr": null, "ret": null}, "fn_lc": [[328, 4], [337, 43]], "fn_var_ln": {"_extra": [[336, 12], [336, 23]], "fernet": [[332, 12], [332, 18]], "is_extra_encrypted": [[337, 12], [337, 35]]}, "fn_var_occur": {"_extra": [["self", "_extra", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "_extra", "value"]], "fernet": [["fernet", "get_fernet"], ["self", "_extra", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "is_extra_encrypted", "fernet", "is_encrypted"]], "is_extra_encrypted": [["self", "is_extra_encrypted", "fernet", "is_encrypted"], ["self", "is_extra_encrypted", "False"]]}, "name": "set_extra", "params": {"self": "", "value": "builtins.str"}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [["self", "_validate_extra", "value", "self", "conn_id"], ["self", "_extra", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "is_extra_encrypted", "fernet", "is_encrypted"], ["self", "_extra", "value"], ["self", "is_extra_encrypted", "False"]], "value": [["self", "_validate_extra", "value", "self", "conn_id"], ["self", "_extra", "fernet", "encrypt", "bytes", "value", "decode"], ["self", "_extra", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["bytes", 0.28921785053068055], ["float", 0.09657638607097013], ["str", 0.09219683572133358], ["int", 0.09166779785966045]]}, "q_name": "Connection.set_extra", "ret_exprs": [], "ret_type": "", "variables": {"_extra": "", "fernet": "", "is_extra_encrypted": ""}, "variables_p": {"_extra": [["bytes", 0.3059834879174846], ["int", 0.25525950318476015], ["float", 0.10029921315932384], ["Pattern[str]", 0.0940418125243261], ["Set[str]", 0.09028920562368221], ["List[int]", 0.07790308861828078]], "fernet": [["str", 0.40014147454807775], ["bytes", 0.29247856586751364], ["int", 0.19498571057834244]], "is_extra_encrypted": [["int", 0.3099098893879001], ["Union[int, str]", 0.18936250464322119], ["Optional[Mapping[str, Any]]", 0.12293875379911143], ["Tuple[str]", 0.09957009930639352], ["bool", 0.09327275163107146]]}}, {"docstring": {"func": "Extra data. The value is decrypted/encrypted when reading/setting the value.", "long_descr": null, "ret": null}, "fn_lc": [[340, 4], [342, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "extra", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["synonym", "descriptor", "property", "cls", "get_extra", "cls", "set_extra"]]}, "params_p": {"args": [], "cls": [["str", 0.20241265662073135], ["bool", 0.10685705763484044], ["Dict[str, str]", 0.10278346152748592], ["Optional[Dict[str, str]]", 0.10278346152748592], ["Tuple[str, str]", 0.09670757349355115], ["Optional[str]", 0.08773849027541242]], "kwargs": [], "self": []}, "q_name": "Connection.extra", "ret_exprs": ["return synonym(\"_extra\", descriptor=property(cls.get_extra, cls.set_extra))"], "ret_type": "", "ret_type_p": [["str", 0.4044454180085393], ["int", 0.1078035802050528]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Encrypts data with a new key. See: :ref:`security/fernet`.", "long_descr": null, "ret": null}, "fn_lc": [[344, 4], [350, 77]], "fn_var_ln": {"_extra": [[350, 12], [350, 23]], "_password": [[348, 12], [348, 26]], "fernet": [[346, 8], [346, 14]]}, "fn_var_occur": {"_extra": [["self", "_extra", "self", "is_extra_encrypted"], ["self", "_extra", "fernet", "rotate", "self", "_extra", "encode", "decode"]], "_password": [["self", "_password", "self", "is_encrypted"], ["self", "_password", "fernet", "rotate", "self", "_password", "encode", "decode"]], "fernet": [["fernet", "get_fernet"], ["self", "_password", "fernet", "rotate", "self", "_password", "encode", "decode"], ["self", "_extra", "fernet", "rotate", "self", "_extra", "encode", "decode"]]}, "name": "rotate_fernet_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_password", "self", "is_encrypted"], ["self", "_password", "fernet", "rotate", "self", "_password", "encode", "decode"], ["self", "_extra", "self", "is_extra_encrypted"], ["self", "_extra", "fernet", "rotate", "self", "_extra", "encode", "decode"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.rotate_fernet_key", "ret_exprs": [], "ret_type": "", "variables": {"_extra": "", "_password": "", "fernet": ""}, "variables_p": {"_extra": [["str", 0.546370644650171], ["int", 0.3051858109351825], ["Pattern[str]", 0.07055338899177659]], "_password": [["str", 0.5618792474012414], ["int", 0.29515908335720714], ["Union[str, int]", 0.1429616692415516]], "fernet": [["str", 0.39122285245085586], ["int", 0.16794981168918224], ["nevergrad.optimization.base.ConfiguredOptimizer", 0.1334064821594104], ["List[float]", 0.12585998789946493], ["raiden.utils.Any", 0.09647182773876312]]}}, {"docstring": {"func": "Return hook based on conn_type.", "long_descr": null, "ret": null}, "fn_lc": [[352, 4], [372, 93]], "fn_var_ln": {"hook": [[356, 8], [356, 12]], "hook_class": [[361, 12], [361, 22]], "hook_params": [[371, 12], [371, 23]]}, "fn_var_occur": {"hook": [["hook", "ProvidersManager", "hooks", "get", "self", "conn_type", "None"], ["hook", "None"], ["hook_class", "import_string", "hook", "hook_class_name"], ["warnings", "warn", "hook", "hook_class_name", "hook", "hook_name", "hook", "package_name"], ["hook_class", "hook", "connection_id_attribute_name", "self", "conn_id", "hook_params"]], "hook_class": [["hook_class", "import_string", "hook", "hook_class_name"], ["hook_class", "hook", "connection_id_attribute_name", "self", "conn_id", "hook_params"]], "hook_params": [["hook_params", "None"], ["hook_class", "hook", "connection_id_attribute_name", "self", "conn_id", "hook_params"]]}, "name": "get_hook", "params": {"hook_params": "", "self": ""}, "params_descr": {"hook_params": "", "self": ""}, "params_occur": {"hook_params": [["hook_params", "None"], ["hook_class", "hook", "connection_id_attribute_name", "self", "conn_id", "hook_params"]], "self": [["hook", "ProvidersManager", "hooks", "get", "self", "conn_type", "None"], ["AirflowException", "self", "conn_type"], ["hook_class", "hook", "connection_id_attribute_name", "self", "conn_id", "hook_params"]]}, "params_p": {"args": [], "hook_params": [["bool", 0.7500814952283723], ["Optional[List[str]]", 0.15803461595328627]], "kwargs": [], "self": []}, "q_name": "Connection.get_hook", "ret_exprs": ["return hook_class(**{hook.connection_id_attribute_name: self.conn_id}, **hook_params)"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.38134381678125023], ["str", 0.2947230756446052], ["Callable", 0.1405652461296266], ["Mapping[str, Any]", 0.08623615783928086]], "variables": {"hook": "", "hook_class": "", "hook_params": ""}, "variables_p": {"hook": [["dict", 0.27620600905508835], ["str", 0.10563083407814905], ["Set[str]", 0.09035819622043664]], "hook_class": [["dict", 0.2260282944326643], ["DefaultDict[Any, dict]", 0.11412315788892047], ["List[str]", 0.1137932623198336], ["int", 0.10614656931838139], ["str", 0.08432546725861413], ["\"OrderedDict[str, float]\"", 0.08192460063335603]], "hook_params": [["dict", 0.339838286349446], ["cmk.base.check_utils.Service", 0.17818551862308904], ["Type[projeccore.models.MatchReferee]", 0.12182244394264728]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[374, 4], [375, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.__repr__", "ret_exprs": ["return self.conn_id or \"\""], "ret_type": "", "ret_type_p": [["str", 0.3205651629610794], ["int", 0.1761531350069205]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method is deprecated. You can read each field individually or use the", "long_descr": "default representation (`__repr__`).", "ret": null}, "fn_lc": [[377, 4], [392, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "log_info", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn_id", "self", "host", "self", "port", "self", "schema", "self", "login", "self", "password", "None", "self", "extra_dejson", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.log_info", "ret_exprs": ["return ( f\"id: {self.conn_id}. Host: {self.host}, Port: {self.port}, Schema: {self.schema}, \" f\"Login: {self.login}, Password: {'XXXXXXXX' if self.password else None}, \" f\"extra: {'XXXXXXXX' if self.extra_dejson else None}\")"], "ret_type": "", "ret_type_p": [["bool", 0.2927726223329734], ["zerver.models.UserProfile", 0.158695273438033], ["cmk.utils.type_defs.UserId", 0.10113728159797829], ["float", 0.09414645250085417], ["taskiapplication.models.task.Task", 0.08078660908092086]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "This method is deprecated. You can read each field individually or use the", "long_descr": "default representation (`__repr__`).", "ret": null}, "fn_lc": [[394, 4], [409, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "debug_info", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn_id", "self", "host", "self", "port", "self", "schema", "self", "login", "self", "password", "None", "self", "extra_dejson"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.debug_info", "ret_exprs": ["return ( f\"id: {self.conn_id}. Host: {self.host}, Port: {self.port}, Schema: {self.schema}, \" f\"Login: {self.login}, Password: {'XXXXXXXX' if self.password else None}, \" f\"extra: {self.extra_dejson}\")"], "ret_type": "", "ret_type_p": [["str", 0.19086681446765263], ["bool", 0.14617473187226085], ["cmk.utils.type_defs.HostName", 0.10487718220470318], ["List['Product']", 0.09250802134875], ["app.models.Tweet", 0.08913442037689388], ["app.models.Position", 0.08913442037689388]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Calls out get_hook method and executes test_connection method on that.", "long_descr": null, "ret": null}, "fn_lc": [[411, 4], [425, 30]], "fn_var_ln": {"hook": [[415, 12], [415, 16]], "message": [[423, 12], [423, 19]], "status": [[417, 16], [417, 22]]}, "fn_var_occur": {"hook": [["hook", "self", "get_hook"], ["getattr", "hook", "False"], ["status", "message", "hook", "test_connection"], ["message", "hook", "__class__", "__name__"]], "message": [["status", "message", "False"], ["status", "message", "hook", "test_connection"], ["message", "hook", "__class__", "__name__"], ["message", "str", "e"], ["status", "message"]], "status": [["status", "message", "False"], ["status", "message", "hook", "test_connection"], ["status", "message"]]}, "name": "test_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["hook", "self", "get_hook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.test_connection", "ret_exprs": ["return status, message"], "ret_type": "", "ret_type_p": [["zerver.models.UserMessage", 0.20392005123124182], ["str", 0.11132540159615353]], "variables": {"hook": "", "message": "", "status": ""}, "variables_p": {"hook": [["str", 0.5371476529440329], ["Set[str]", 0.08342263945218865], ["bool", 0.08257899654107267]], "message": [["Pattern[str]", 0.40031376302411137], ["str", 0.17206810504968967], ["int", 0.11367676500103095], ["list", 0.08238566922425439]], "status": [["str", 0.3103172191362076], ["int", 0.28451317169638096], ["Set[str]", 0.14903426213498264], ["List[str]", 0.0883810155563201]]}}, {"docstring": {"func": "Returns the extra property by deserializing json.", "long_descr": null, "ret": null}, "fn_lc": [[428, 4], [441, 18]], "fn_var_ln": {"obj": [[433, 16], [433, 19]]}, "fn_var_occur": {"obj": [["obj", "json", "loads", "self", "extra"], ["mask_secret", "obj"]]}, "name": "extra_dejson", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "extra"], ["obj", "json", "loads", "self", "extra"], ["self", "log", "exception", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Connection.extra_dejson", "ret_exprs": ["return obj"], "ret_type": "builtins.dict", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"obj": ""}, "variables_p": {"obj": [["int", 0.228614769165416], ["dict", 0.10150578747282751], ["raiden.utils.Any", 0.10081500233722993], ["str", 0.0962689553754002], ["Dict[Any, Dict[str, str]]", 0.09469426322112524], ["float", 0.08952059582207589]]}}, {"docstring": {"func": "Get connection by conn_id.", "long_descr": null, "ret": "connection"}, "fn_lc": [[444, 4], [463, 80]], "fn_var_ln": {"conn": [[453, 16], [453, 20]]}, "fn_var_occur": {"conn": [["conn", "secrets_backend", "get_connection", "conn_id", "conn_id"]]}, "name": "get_connection_from_secrets", "params": {"cls": "", "conn_id": "builtins.str"}, "params_descr": {"cls": "", "conn_id": "connection id"}, "params_occur": {"cls": [], "conn_id": [["conn", "secrets_backend", "get_connection", "conn_id", "conn_id"], ["AirflowNotFoundException", "conn_id"]]}, "params_p": {"args": [], "cls": [["List[manager.models.reflection.Reflection]", 0.3825201260226964], ["str", 0.24480370513544775], ["List[manager.models.language.Language]", 0.10578417998930084], ["list", 0.07043122175766249], ["bool", 0.05370891055476523], ["models.Course", 0.0462280642674644]], "conn_id": [["str", 0.3913339076097476], ["Optional[str]", 0.21660243006572172], ["int", 0.19541579971323925], ["Mapping[str, Any]", 0.09832393130564566]], "kwargs": [], "self": []}, "q_name": "Connection.get_connection_from_secrets", "ret_exprs": ["return conn"], "ret_type": "Connection", "ret_type_p": [["str", 0.42526260012734224], ["bool", 0.1494747997453157], ["bytes", 0.06675857849046907]], "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.5168268178349327], ["Dict[str, List[Any]]", 0.10314708749865222], ["int", 0.10115971230573524], ["Tuple[str, str, str, str, str, str, str]", 0.09436853576577124]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[466, 4], [480, 52]], "fn_var_ln": {"conn_type": [[471, 8], [471, 17]], "extra": [[468, 8], [468, 13]], "kwargs": [[467, 8], [467, 14]], "port": [[474, 8], [474, 12]]}, "fn_var_occur": {"conn_type": [["conn_type", "kwargs", "pop", "None"], ["kwargs", "cls", "_normalize_conn_type", "conn_type"]], "extra": [["extra", "kwargs", "pop", "None"], ["kwargs", "extra", "isinstance", "extra", "str", "json", "dumps", "extra"]], "kwargs": [["kwargs", "json", "loads", "value"], ["extra", "kwargs", "pop", "None"], ["kwargs", "extra", "isinstance", "extra", "str", "json", "dumps", "extra"], ["conn_type", "kwargs", "pop", "None"], ["kwargs", "cls", "_normalize_conn_type", "conn_type"], ["port", "kwargs", "pop", "None"], ["kwargs", "int", "port"], ["Connection", "conn_id", "conn_id", "kwargs"]], "port": [["port", "kwargs", "pop", "None"], ["kwargs", "int", "port"], ["ValueError", "port"]]}, "name": "from_json", "params": {"cls": "", "conn_id": "", "value": ""}, "params_descr": {"cls": "", "conn_id": "", "value": ""}, "params_occur": {"cls": [["kwargs", "cls", "_normalize_conn_type", "conn_type"]], "conn_id": [["Connection", "conn_id", "conn_id", "kwargs"]], "value": [["kwargs", "json", "loads", "value"]]}, "params_p": {"args": [], "cls": [["str", 0.41683512450606], ["bool", 0.15494339300675786], ["List[str]", 0.0750833230518221]], "conn_id": [["int", 0.26662071974276924], ["List[int]", 0.1106116362956693], ["Optional[int]", 0.11018836385516208], ["tuple", 0.09364967645385978], ["Optional[List[Any]]", 0.08690472583759756], ["List['Token']", 0.08455673647135568], ["Sequence[str]", 0.08295041380766024]], "kwargs": [], "self": [], "value": [["str", 0.18562762436384883], ["Match", 0.11096556304418748], ["Dict[str, str]", 0.10586009534152137], ["Pattern", 0.10581865440083157], ["Dict[str, Any]", 0.0871711354871299], ["List[str]", 0.08620834810351248], ["Sequence[str]", 0.08027303702525088]]}, "q_name": "Connection.from_json", "ret_exprs": ["return Connection(conn_id=conn_id, **kwargs)"], "ret_type": "Connection", "ret_type_p": [["bool", 0.20678144296639697], ["Mapping[str, Any]", 0.12001658384103042], ["Optional[int]", 0.09711791676667754], ["core.models.Grouping", 0.09237839827478737]], "variables": {"conn_type": "", "extra": "", "kwargs": "", "port": ""}, "variables_p": {"conn_type": [["Type[Generator[Any, None, None]]", 0.8838149409216266], ["Tuple[Type[int]]", 0.11618505907837318]], "extra": [["str", 0.21534250504891175], ["List[str]", 0.11337795081209061], ["Dict[str, Dict[str, Any]]", 0.11055552726581301], ["set", 0.10197230458650626], ["dict", 0.09145488837995669], ["Dict[str, str]", 0.08860053315130717], ["Tuple[Any, Any]", 0.088213250856151]], "kwargs": [["dict", 0.2959068322190783], ["Optional[Dict[str, str]]", 0.10486291898846685], ["Dict[str, Union[Any, Any]]", 0.09568947320559974]], "port": [["int", 0.2812089947521313], ["str", 0.23107632732905117], ["Dict[Any, int]", 0.09213865160378434], ["List[Tuple[str, Any, Any]]", 0.0894250818115819]]}}], "name": "Connection", "q_name": "Connection", "variables": {"EXTRA_KEY": "", "__tablename__": "", "_extra": "", "_password": "", "conn_id": "", "conn_type": "", "description": "", "host": "", "id": "", "is_encrypted": "", "is_extra_encrypted": "", "login": "", "port": "", "schema": ""}, "variables_p": {"EXTRA_KEY": [["str", 0.8999999999999999], ["bytes", 0.1]], "__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_extra": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_password": [["str", 0.6], ["Type[mangle.common.models.User]", 0.09999999999999999], ["Tuple[str]", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "conn_id": [["List[str]", 0.5657742441369218], ["int", 0.28506794072842867], ["list", 0.11260540313771207], ["List[int]", 0.03655241199693757]], "conn_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]], "description": [["str", 0.6999999999999998], ["Optional[\"LocalizedString\"]", 0.09999999999999998], ["\"LocalizedString\"", 0.09999999999999998], ["Optional[str]", 0.09999999999999998]], "host": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "id": [["int", 0.5], ["str", 0.2], ["Optional[int]", 0.1], ["Type[legocollector.inventory.models.Color]", 0.1]], "is_encrypted": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "is_extra_encrypted": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "login": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "port": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "schema": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [{"docstring": {"func": "This method is deprecated.", "long_descr": null, "ret": null}, "fn_lc": [[40, 0], [43, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "parse_netloc_to_hostname", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [["_parse_netloc_to_hostname", "args", "kwargs"]], "kwargs": [["_parse_netloc_to_hostname", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "parse_netloc_to_hostname", "ret_exprs": ["return _parse_netloc_to_hostname(*args, **kwargs)"], "ret_type": "", "ret_type_p": [["fonduer.candidates.models.temporary_contexTemporaryContext", 0.1874017652129656], ["trezor.utils.Writer", 0.1313311113039338], ["Dict[str, Any]", 0.0861840822088674], ["str", 0.08371151226804338]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Parse a URI string to get correct Hostname.", "long_descr": null, "ret": null}, "fn_lc": [[48, 0], [58, 19]], "fn_var_ln": {"hostname": [[57, 8], [57, 16]]}, "fn_var_occur": {"hostname": [["hostname", "unquote", "uri_parts", "hostname"], ["hostname", "uri_parts", "netloc"], ["hostname", "hostname", "rsplit"], ["hostname", "hostname", "split"], ["hostname", "unquote", "hostname"]]}, "name": "_parse_netloc_to_hostname", "params": {"uri_parts": ""}, "params_descr": {"uri_parts": ""}, "params_occur": {"uri_parts": [["hostname", "unquote", "uri_parts", "hostname"], ["hostname", "uri_parts", "netloc"]]}, "params_p": {"args": [], "kwargs": [], "uri_parts": [["List[Exception]", 0.16764242726227158], ["Optional[float]", 0.08466767680702478], ["allennlp.models.model.Model", 0.08466767680702478], ["Union['Contributor', 'Coverage']", 0.08466767680702478], ["speedwagon.models.TabsModel", 0.08466767680702478]]}, "q_name": "_parse_netloc_to_hostname", "ret_exprs": ["return hostname"], "ret_type": "", "ret_type_p": [["float", 0.30000000000000004], ["int", 0.2], ["Union[bool, None]", 0.1], ["str", 0.1]], "variables": {"hostname": ""}, "variables_p": {"hostname": []}}], "imports": ["__future__", "annotations", "json", "logging", "warnings", "json", "JSONDecodeError", "urllib", "parse", "parse_qsl", "quote", "unquote", "urlencode", "urlsplit", "sqlalchemy", "Boolean", "Column", "Integer", "String", "Text", "sqlalchemy", "orm", "declared_attr", "reconstructor", "synonym", "airflow", "configuration", "ensure_secrets_loaded", "airflow", "exceptions", "AirflowException", "AirflowNotFoundException", "RemovedInAirflow3Warning", "airflow", "models", "base", "ID_LEN", "Base", "airflow", "models", "crypto", "get_fernet", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "utils", "log", "secrets_masker", "mask_secret", "airflow", "utils", "module_loading", "import_string", "airflow", "providers_manager", "ProvidersManager"], "mod_var_ln": {"log": [[37, 0], [37, 3]]}, "mod_var_occur": {"log": [["self", "log", "warning", "self", "conn_type"], ["self", "log", "exception", "self", "conn_id"], ["log", "exception", "type", "secrets_backend", "__name__"]]}, "no_types_annot": {"D": 13, "I": 0, "U": 103}, "session_id": "H7wRdKQ2lo0nYP48584hNT0k5PhGeb_jeDDlOdUNVV4", "set": null, "tc": [false, null], "type_annot_cove": 0.11, "typed_seq": "", "untyped_seq": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.9999999999999999]]}}}