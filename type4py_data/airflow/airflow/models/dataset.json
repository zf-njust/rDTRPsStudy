{"error": null, "response": {"classes": [{"cls_lc": [[44, 0], [103, 83]], "cls_var_ln": {"__table_args__": [[74, 4], [74, 18]], "__tablename__": [[73, 4], [73, 17]], "consuming_dags": [[70, 4], [70, 18]], "created_at": [[66, 4], [66, 14]], "extra": [[65, 4], [65, 9]], "id": [[52, 4], [52, 6]], "is_orphaned": [[68, 4], [68, 15]], "producing_tasks": [[71, 4], [71, 19]], "updated_at": [[67, 4], [67, 14]], "uri": [[53, 4], [53, 7]]}, "cls_var_occur": {"__table_args__": [], "__tablename__": [], "consuming_dags": [], "created_at": [], "extra": [], "id": [], "is_orphaned": [], "producing_tasks": [], "updated_at": [], "uri": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [81, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "from_public", "params": {"cls": "", "obj": "airflow.datasets.Dataset"}, "params_descr": {"cls": "", "obj": ""}, "params_occur": {"cls": [["cls", "uri", "obj", "uri", "extra", "obj", "extra"]], "obj": [["cls", "uri", "obj", "uri", "extra", "obj", "extra"]]}, "params_p": {"args": [], "cls": [["str", 0.7], ["Callable", 0.1], ["utils.types.Box3D", 0.1]], "kwargs": [], "obj": [["str", 0.7], ["Callable", 0.1], ["utils.types.Box3D", 0.1]], "self": []}, "q_name": "DatasetModel.from_public", "ret_exprs": ["return cls(uri=obj.uri, extra=obj.extra)"], "ret_type": "DatasetModel", "ret_type_p": [["str", 0.10158733687954798], ["Dict[str, Any]", 0.08964650447095976]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [91, 43]], "fn_var_ln": {"parsed": [[88, 8], [88, 14]]}, "fn_var_occur": {"parsed": [["parsed", "urlsplit", "uri"], ["parsed", "scheme", "parsed", "scheme", "lower"]]}, "name": "__init__", "params": {"kwargs": "", "self": "", "uri": "builtins.str"}, "params_descr": {"kwargs": "", "self": "", "uri": ""}, "params_occur": {"kwargs": [["super", "__init__", "uri", "uri", "kwargs"]], "self": [], "uri": [["uri", "encode"], ["parsed", "urlsplit", "uri"], ["super", "__init__", "uri", "uri", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "uri": [["str", 0.5780436928483865], ["BinaryIO", 0.13592918707233106], ["Dict[str, Any]", 0.096126506111904], ["int", 0.09115211340208595]]}, "q_name": "DatasetModel.__init__", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["List[str]", 0.10488859816868928], ["list", 0.10488859816868928], ["str", 0.0686028015906201]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [97, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__eq__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["isinstance", "other", "self", "__class__", "Dataset"], ["self", "uri", "other", "uri"]], "self": [["isinstance", "other", "self", "__class__", "Dataset"], ["self", "uri", "other", "uri"]]}, "params_p": {"args": [], "kwargs": [], "other": [["Tuple[int, int, int]", 0.15667954316270793], ["Any", 0.09437219248472815]], "self": []}, "q_name": "DatasetModel.__eq__", "ret_exprs": ["return self.uri == other.uri", "return NotImplemented"], "ret_type": "", "ret_type_p": [["bool", 0.28692467452883313], ["Optional[str]", 0.07928648954665708], ["models.JournalEntryOrigin", 0.07882633477869071], ["Optional[int]", 0.07882633477869071]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [100, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__hash__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["hash", "self", "uri"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DatasetModel.__hash__", "ret_exprs": ["return hash(self.uri)"], "ret_type": "", "ret_type_p": [["int", 0.590217972676678], ["Tuple[int, int]", 0.10977521283770898], ["bool", 0.10105449134577231]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[102, 4], [103, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "__class__", "__name__", "self", "uri", "self", "extra"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DatasetModel.__repr__", "ret_exprs": ["return f\"{self.__class__.__name__}(uri={self.uri!r}, extra={self.extra!r})\""], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {}, "variables_p": {}}], "name": "DatasetModel", "q_name": "DatasetModel", "variables": {"__table_args__": "", "__tablename__": "", "consuming_dags": "", "created_at": "", "extra": "", "id": "", "is_orphaned": "", "producing_tasks": "", "updated_at": "", "uri": ""}, "variables_p": {"__table_args__": [["Dict[str, str]", 0.5], ["Dict[str, Union[bool, str]]", 0.2], ["Dict[str, bool]", 0.1]], "__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "consuming_dags": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "created_at": [["Type[orders.models.OrderSellerComment]", 0.09999999999999999], ["int", 0.09999999999999999], ["Type[ajapaik.ajapaik.models.Points]", 0.09999999999999999], ["Type[nativecards.models.CommonInfo]", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "extra": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "id": [["int", 0.5], ["str", 0.2], ["Optional[int]", 0.1], ["Type[legocollector.inventory.models.Color]", 0.1]], "is_orphaned": [["bool", 0.6], ["int", 0.2], ["Type[gdpr.models.LegalReason]", 0.1], ["Type[pinner.users.models.User]", 0.1]], "producing_tasks": [["bool", 0.5], ["int", 0.2], ["Iterable[str]", 0.1], ["float", 0.1], ["str", 0.1]], "updated_at": [["str", 0.2], ["Type[schedule.models.events.Occurrence]", 0.1], ["Type[zanhu.users.models.User]", 0.1], ["Type[Python.Django.Django-2-by-Example.Chapter13.educa.courses.models.ItemBase]", 0.1], ["Type[app.models.BaseModelMixin]", 0.1], ["Type[backend.apps.wikipages.models.WikiPage]", 0.1], ["Type[newsletter.models.SignUp]", 0.1]], "uri": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[106, 0], [154, 62]], "cls_var_ln": {"__table_args__": [[125, 4], [125, 18]], "__tablename__": [[124, 4], [124, 17]], "created_at": [[111, 4], [111, 14]], "dag_id": [[110, 4], [110, 10]], "dataset": [[114, 4], [114, 11]], "dataset_id": [[109, 4], [109, 14]], "queue_records": [[115, 4], [115, 17]], "updated_at": [[112, 4], [112, 14]]}, "cls_var_occur": {"__table_args__": [], "__tablename__": [], "created_at": [], "dag_id": [], "dataset": [], "dataset_id": [], "queue_records": [], "updated_at": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[141, 4], [145, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__eq__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["isinstance", "other", "self", "__class__"], ["self", "dataset_id", "other", "dataset_id", "self", "dag_id", "other", "dag_id"]], "self": [["isinstance", "other", "self", "__class__"], ["self", "dataset_id", "other", "dataset_id", "self", "dag_id", "other", "dag_id"]]}, "params_p": {"args": [], "kwargs": [], "other": [["str", 0.2927258153739941], ["Dict[str, Any]", 0.096553176727734]], "self": []}, "q_name": "DagScheduleDatasetReference.__eq__", "ret_exprs": ["return self.dataset_id == other.dataset_id and self.dag_id == other.dag_id", "return NotImplemented"], "ret_type": "", "ret_type_p": [["Union[int, float, complex]", 0.10186119325882972], ["int", 0.087837657260321], ["List[str]", 0.08108120417096358]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[147, 4], [148, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__hash__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["hash", "self", "__mapper__", "primary_key"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DagScheduleDatasetReference.__hash__", "ret_exprs": ["return hash(self.__mapper__.primary_key)"], "ret_type": "", "ret_type_p": [["int", 0.6208922424495179], ["bool", 0.3791077575504821]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[150, 4], [154, 62]], "fn_var_ln": {"args": [[151, 8], [151, 12]]}, "fn_var_occur": {"args": [["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["x", "name", "x", "self", "__mapper__", "primary_key"], ["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DagScheduleDatasetReference.__repr__", "ret_exprs": ["return f\"{self.__class__.__name__}({', '.join(args)})\""], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21600467428041153], ["list", 0.1933965472847856], ["int", 0.1878783338316752], ["List[bytes]", 0.0986831234159637], ["str", 0.09203374840770707]]}}], "name": "DagScheduleDatasetReference", "q_name": "DagScheduleDatasetReference", "variables": {"__table_args__": "", "__tablename__": "", "created_at": "", "dag_id": "", "dataset": "", "dataset_id": "", "queue_records": "", "updated_at": ""}, "variables_p": {"__table_args__": [["Dict[str, str]", 0.5], ["Dict[str, Union[bool, str]]", 0.2], ["Dict[str, bool]", 0.1]], "__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "created_at": [["Type[orders.models.OrderSellerComment]", 0.09999999999999999], ["int", 0.09999999999999999], ["Type[ajapaik.ajapaik.models.Points]", 0.09999999999999999], ["Type[nativecards.models.CommonInfo]", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999], ["shortcuts.actions.base.GroupIDField", 0.09999999999999999]], "dataset": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dataset_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999], ["shortcuts.actions.base.GroupIDField", 0.09999999999999999]], "queue_records": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "updated_at": [["str", 0.2], ["Type[schedule.models.events.Occurrence]", 0.1], ["Type[zanhu.users.models.User]", 0.1], ["Type[Python.Django.Django-2-by-Example.Chapter13.educa.courses.models.ItemBase]", 0.1], ["Type[app.models.BaseModelMixin]", 0.1], ["Type[backend.apps.wikipages.models.WikiPage]", 0.1], ["Type[newsletter.models.SignUp]", 0.1]]}}, {"cls_lc": [[157, 0], [202, 62]], "cls_var_ln": {"__table_args__": [[169, 4], [169, 18]], "__tablename__": [[168, 4], [168, 17]], "created_at": [[163, 4], [163, 14]], "dag_id": [[161, 4], [161, 10]], "dataset": [[166, 4], [166, 11]], "dataset_id": [[160, 4], [160, 14]], "task_id": [[162, 4], [162, 11]], "updated_at": [[164, 4], [164, 14]]}, "cls_var_occur": {"__table_args__": [], "__tablename__": [], "created_at": [], "dag_id": [], "dataset": [], "dataset_id": [], "task_id": [], "updated_at": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 4], [193, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__eq__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["isinstance", "other", "self", "__class__"], ["self", "dataset_id", "other", "dataset_id", "self", "dag_id", "other", "dag_id", "self", "task_id", "other", "task_id"]], "self": [["isinstance", "other", "self", "__class__"], ["self", "dataset_id", "other", "dataset_id", "self", "dag_id", "other", "dag_id", "self", "task_id", "other", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "other": [["int", 0.3120137809563598], ["str", 0.19060324547353424], ["Dict[str, Any]", 0.10451409624217707]], "self": []}, "q_name": "TaskOutletDatasetReference.__eq__", "ret_exprs": ["return ( self.dataset_id == other.dataset_id and self.dag_id == other.dag_id and self.task_id == other.task_id)", "return NotImplemented"], "ret_type": "", "ret_type_p": [["Union[int, float, complex]", 0.10186119325882972], ["int", 0.087837657260321], ["List[str]", 0.08108120417096358]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[195, 4], [196, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__hash__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["hash", "self", "__mapper__", "primary_key"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TaskOutletDatasetReference.__hash__", "ret_exprs": ["return hash(self.__mapper__.primary_key)"], "ret_type": "", "ret_type_p": [["int", 0.6208922424495179], ["bool", 0.3791077575504821]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[198, 4], [202, 62]], "fn_var_ln": {"args": [[199, 8], [199, 12]]}, "fn_var_occur": {"args": [["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["x", "name", "x", "self", "__mapper__", "primary_key"], ["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TaskOutletDatasetReference.__repr__", "ret_exprs": ["return f\"{self.__class__.__name__}({', '.join(args)})\""], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21600467428041153], ["list", 0.1933965472847856], ["int", 0.1878783338316752], ["List[bytes]", 0.0986831234159637], ["str", 0.09203374840770707]]}}], "name": "TaskOutletDatasetReference", "q_name": "TaskOutletDatasetReference", "variables": {"__table_args__": "", "__tablename__": "", "created_at": "", "dag_id": "", "dataset": "", "dataset_id": "", "task_id": "", "updated_at": ""}, "variables_p": {"__table_args__": [["Dict[str, str]", 0.5], ["Dict[str, Union[bool, str]]", 0.2], ["Dict[str, bool]", 0.1]], "__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "created_at": [["Type[orders.models.OrderSellerComment]", 0.09999999999999999], ["int", 0.09999999999999999], ["Type[ajapaik.ajapaik.models.Points]", 0.09999999999999999], ["Type[nativecards.models.CommonInfo]", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999], ["shortcuts.actions.base.GroupIDField", 0.09999999999999999]], "dataset": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dataset_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999], ["shortcuts.actions.base.GroupIDField", 0.09999999999999999]], "task_id": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "updated_at": [["str", 0.2], ["Type[schedule.models.events.Occurrence]", 0.1], ["Type[zanhu.users.models.User]", 0.1], ["Type[Python.Django.Django-2-by-Example.Chapter13.educa.courses.models.ItemBase]", 0.1], ["Type[app.models.BaseModelMixin]", 0.1], ["Type[backend.apps.wikipages.models.WikiPage]", 0.1], ["Type[newsletter.models.SignUp]", 0.1]]}}, {"cls_lc": [[205, 0], [242, 62]], "cls_var_ln": {"__table_args__": [[213, 4], [213, 18]], "__tablename__": [[212, 4], [212, 17]], "created_at": [[210, 4], [210, 14]], "dataset_id": [[208, 4], [208, 14]], "target_dag_id": [[209, 4], [209, 17]]}, "cls_var_occur": {"__table_args__": [], "__tablename__": [], "created_at": [], "dataset_id": [], "target_dag_id": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[229, 4], [233, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__eq__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["isinstance", "other", "self", "__class__"], ["self", "dataset_id", "other", "dataset_id", "self", "target_dag_id", "other", "target_dag_id"]], "self": [["isinstance", "other", "self", "__class__"], ["self", "dataset_id", "other", "dataset_id", "self", "target_dag_id", "other", "target_dag_id"]]}, "params_p": {"args": [], "kwargs": [], "other": [["int", 0.1000086133984711]], "self": []}, "q_name": "DatasetDagRunQueue.__eq__", "ret_exprs": ["return self.dataset_id == other.dataset_id and self.target_dag_id == other.target_dag_id", "return NotImplemented"], "ret_type": "", "ret_type_p": [["Union[int, float, complex]", 0.10186119325882972], ["int", 0.087837657260321], ["List[str]", 0.08108120417096358]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[235, 4], [236, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__hash__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["hash", "self", "__mapper__", "primary_key"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DatasetDagRunQueue.__hash__", "ret_exprs": ["return hash(self.__mapper__.primary_key)"], "ret_type": "", "ret_type_p": [["int", 0.6208922424495179], ["bool", 0.3791077575504821]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[238, 4], [242, 62]], "fn_var_ln": {"args": [[239, 8], [239, 12]]}, "fn_var_occur": {"args": [["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["x", "name", "x", "self", "__mapper__", "primary_key"], ["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DatasetDagRunQueue.__repr__", "ret_exprs": ["return f\"{self.__class__.__name__}({', '.join(args)})\""], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21600467428041153], ["list", 0.1933965472847856], ["int", 0.1878783338316752], ["List[bytes]", 0.0986831234159637], ["str", 0.09203374840770707]]}}], "name": "DatasetDagRunQueue", "q_name": "DatasetDagRunQueue", "variables": {"__table_args__": "", "__tablename__": "", "created_at": "", "dataset_id": "", "target_dag_id": ""}, "variables_p": {"__table_args__": [["Dict[str, str]", 0.5], ["Dict[str, Union[bool, str]]", 0.2], ["Dict[str, bool]", 0.1]], "__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "created_at": [["Type[orders.models.OrderSellerComment]", 0.09999999999999999], ["int", 0.09999999999999999], ["Type[ajapaik.ajapaik.models.Points]", 0.09999999999999999], ["Type[nativecards.models.CommonInfo]", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "dataset_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999], ["shortcuts.actions.base.GroupIDField", 0.09999999999999999]], "target_dag_id": [["Optional[str]", 0.3], ["int", 0.3], ["str", 0.19999999999999998], ["Optional[int]", 0.09999999999999999]]}}, {"cls_lc": [[255, 0], [338, 62]], "cls_var_ln": {"__table_args__": [[281, 4], [281, 18]], "__tablename__": [[280, 4], [280, 17]], "created_dagruns": [[286, 4], [286, 19]], "dataset": [[314, 4], [314, 11]], "dataset_id": [[272, 4], [272, 14]], "extra": [[273, 4], [273, 9]], "id": [[271, 4], [271, 6]], "source_dag_id": [[275, 4], [275, 17]], "source_dag_run": [[304, 4], [304, 18]], "source_map_index": [[277, 4], [277, 20]], "source_run_id": [[276, 4], [276, 17]], "source_task_id": [[274, 4], [274, 18]], "source_task_instance": [[292, 4], [292, 24]], "timestamp": [[278, 4], [278, 13]]}, "cls_var_occur": {"__table_args__": [], "__tablename__": [], "created_dagruns": [], "dataset": [], "dataset_id": [], "extra": [], "id": [], "source_dag_id": [], "source_dag_run": [], "source_map_index": [], "source_run_id": [], "source_task_id": [], "source_task_instance": [], "timestamp": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[323, 4], [324, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "uri", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dataset", "uri"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DatasetEvent.uri", "ret_exprs": ["return self.dataset.uri"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[326, 4], [338, 62]], "fn_var_ln": {"args": [[327, 8], [327, 12]]}, "fn_var_occur": {"args": [["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "append", "attr", "getattr", "self", "attr"], ["self", "__class__", "__name__", "join", "args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DatasetEvent.__repr__", "ret_exprs": ["return f\"{self.__class__.__name__}({', '.join(args)})\""], "ret_type": "builtins.str", "ret_type_p": [["str", 1.0000000000000002]], "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21600467428041153], ["list", 0.1933965472847856], ["int", 0.1878783338316752], ["List[bytes]", 0.0986831234159637], ["str", 0.09203374840770707]]}}], "name": "DatasetEvent", "q_name": "DatasetEvent", "variables": {"__table_args__": "", "__tablename__": "", "created_dagruns": "", "dataset": "", "dataset_id": "", "extra": "", "id": "", "source_dag_id": "", "source_dag_run": "", "source_map_index": "", "source_run_id": "", "source_task_id": "", "source_task_instance": "", "timestamp": ""}, "variables_p": {"__table_args__": [["Dict[str, str]", 0.5], ["Dict[str, Union[bool, str]]", 0.2], ["Dict[str, bool]", 0.1]], "__tablename__": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "created_dagruns": [["Type[orders.models.OrderSellerComment]", 0.09999999999999999], ["int", 0.09999999999999999], ["Type[ajapaik.ajapaik.models.Points]", 0.09999999999999999], ["Type[nativecards.models.CommonInfo]", 0.09999999999999999], ["Optional[\"CreatedBy\"]", 0.09999999999999999], ["str", 0.09999999999999999]], "dataset": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dataset_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999], ["shortcuts.actions.base.GroupIDField", 0.09999999999999999]], "extra": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "id": [["int", 0.5], ["str", 0.2], ["Optional[int]", 0.1], ["Type[legocollector.inventory.models.Color]", 0.1]], "source_dag_id": [["Type[hypha.apply.activity.models.Activity]", 0.4999999992403948], ["Type[gdpr.models.LegalReason]", 0.4999999992403948], ["str", 9.495065325318338e-10], ["int", 3.798026130127335e-10], ["list", 1.8990130650636676e-10]], "source_dag_run": [["Optional[str]", 0.404219963951467], ["str", 0.3452758898566479], ["Union[Literal, str]", 0.09186533313147582], ["bool", 0.08250920791441145]], "source_map_index": [["str", 0.6], ["Optional[str]", 0.1], ["Tuple[Dict[str, Any]]", 0.1], ["List[str]", 0.1]], "source_run_id": [["str", 0.3533281873548739], ["Type[hypha.apply.activity.models.Activity]", 0.142924189588072], ["Type[gdpr.models.LegalReason]", 0.142924189588072], ["Dict[str, str]", 0.09959037841494542], ["Callable", 0.08707768501801222], ["List[str]", 0.08707768501801222]], "source_task_id": [["str", 0.5318924756600842], ["int", 0.21275699026403372], ["list", 0.10637849513201686], ["Type[cinemanio.images.models.Image]", 0.10637849513201686]], "source_task_instance": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "timestamp": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "urllib", "parse", "urlsplit", "sqlalchemy_jsonfield", "sqlalchemy", "Boolean", "Column", "ForeignKey", "ForeignKeyConstraint", "Index", "Integer", "PrimaryKeyConstraint", "String", "Table", "text", "sqlalchemy", "orm", "relationship", "airflow", "datasets", "Dataset", "airflow", "models", "base", "Base", "StringID", "airflow", "settings", "json", "airflow", "utils", "timezone", "airflow", "utils", "sqlalchemy", "UtcDateTime"], "mod_var_ln": {"association_table": [[245, 0], [245, 17]]}, "mod_var_occur": {"association_table": [["created_dagruns", "relationship", "secondary", "association_table", "backref"]]}, "no_types_annot": {"D": 4, "I": 0, "U": 71}, "session_id": "i9tve5aFL_qP9Dm_ljkjPamM15jQQ9Wm1GKje7YScLE", "set": null, "tc": [false, null], "type_annot_cove": 0.05, "typed_seq": "", "untyped_seq": "", "variables": {"association_table": ""}, "variables_p": {"association_table": [["Type[int]", 0.29809620387415864], ["Type[bytes]", 0.1865099180597762], ["List[str]", 0.12305873730964527], ["Callable(hash)[[object], int]", 0.10322941828322575], ["Dict[str, str]", 0.09961362247809956]]}}}