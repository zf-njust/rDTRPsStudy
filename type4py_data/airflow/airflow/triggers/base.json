{"error": null, "response": {"classes": [{"cls_lc": [[25, 0], [96, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [44, 30]], "fn_var_ln": {"task_instance": [[43, 8], [43, 26]], "trigger_id": [[44, 8], [44, 23]]}, "fn_var_occur": {"task_instance": [["self", "task_instance", "None"]], "trigger_id": [["self", "trigger_id", "None"]]}, "name": "__init__", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [], "self": [["self", "task_instance", "None"], ["self", "trigger_id", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTrigger.__init__", "ret_exprs": [], "ret_type": "", "variables": {"task_instance": "", "trigger_id": ""}, "variables_p": {"task_instance": [["Dict[str, Any]", 0.22179558693701007], ["str", 0.19138601220903295], ["T", 0.11279990728843985], ["Tuple[Literal, Literal]", 0.1062346544785532], ["int", 0.09723914249653795], ["List[Dict[str, Any]]", 0.08950131018805486]], "trigger_id": [["int", 0.4013725840477524], ["IO[bytes]", 0.2184925775385621], ["str", 0.19370225904457758]]}}, {"docstring": {"func": "Part of LoggingMixin and used mainly for configuration of task logging; not used for triggers.", "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [48, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_set_context", "params": {"context": "", "self": ""}, "params_descr": {"context": "", "self": ""}, "params_occur": {"context": [], "self": []}, "params_p": {"args": [], "context": [["int", 0.39999999999999997], ["str", 0.3], ["bool", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "BaseTrigger._set_context", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns the information needed to reconstruct this Trigger.", "long_descr": null, "ret": "Tuple of (class path, keyword arguments needed to re-instantiate)."}, "fn_lc": [[51, 4], [57, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "serialize", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTrigger.serialize", "ret_exprs": [], "ret_type": "builtins.tuple[builtins.str, builtins.dict[builtins.str, typing.Any]]", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Runs the trigger in an asynchronous context.", "long_descr": "The trigger should yield an Event whenever it wants to fire off\nan event, and return None if it is finished. Single-event triggers\nshould thus yield and then immediately return.\n\nIf it yields, it is likely that it will be resumed very quickly,\nbut it may not be (e.g. if the workload is being moved to another\ntriggerer process, or a multi-event trigger was being used for a\nsingle-event task defer).\n\nIn either case, Trigger classes should assume they will be persisted,\nand then rely on cleanup() being called when they are no longer needed.", "ret": null}, "fn_lc": [[60, 4], [77, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTrigger.run", "ret_exprs": [], "ret_type": "typing.AsyncIterator[TriggerEvent]", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Cleanup the trigger.", "long_descr": "Called when the trigger is no longer needed, and it's being removed\nfrom the active triggerer process.\n\nThis method follows the async/await pattern to allow to run the cleanup\nin triggerer main event loop. Exceptions raised by the cleanup method\nare ignored, so if you would like to be able to debug them and be notified\nthat cleanup method failed, you should wrap your code with try/except block\nand handle it appropriately (in async-compatible way).", "ret": null}, "fn_lc": [[79, 4], [91, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "cleanup", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTrigger.cleanup", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [96, 44]], "fn_var_ln": {"classpath": [[94, 8], [94, 17]], "kwargs": [[94, 19], [94, 25]], "kwargs_str": [[95, 8], [95, 18]]}, "fn_var_occur": {"classpath": [["classpath", "kwargs", "self", "serialize"], ["classpath", "kwargs_str"]], "kwargs": [["classpath", "kwargs", "self", "serialize"], ["kwargs_str", "join", "k", "v", "k", "v", "kwargs", "items"]], "kwargs_str": [["kwargs_str", "join", "k", "v", "k", "v", "kwargs", "items"], ["classpath", "kwargs_str"]]}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["classpath", "kwargs", "self", "serialize"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTrigger.__repr__", "ret_exprs": ["return f\"<{classpath} {kwargs_str}>\""], "ret_type": "builtins.str", "ret_type_p": [["str", 0.904393663491451], ["dict", 0.09560633650854891]], "variables": {"classpath": "", "kwargs": "", "kwargs_str": ""}, "variables_p": {"classpath": [["int", 0.9072467587489553], ["float", 0.09275324125104448]], "kwargs": [["dict", 0.3209492742713096], ["Dict[str, Union[Any, Any]]", 0.09871815597480899], ["list", 0.09821447181781447], ["Pattern[bytes]", 0.09638522612917248], ["Dict[str, Union[Any, Any, Any]]", 0.09247175788126603], ["Callable", 0.0870878740040601]], "kwargs_str": [["Dict[str, str]", 0.5569563809849657], ["str", 0.3632019949075113], ["dict", 0.07984162410752309]]}}], "name": "BaseTrigger", "q_name": "BaseTrigger", "variables": {}, "variables_p": {}}, {"cls_lc": [[99, 0], [118, 20]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [110, 30]], "fn_var_ln": {"payload": [[110, 8], [110, 20]]}, "fn_var_occur": {"payload": [["self", "payload", "payload"]]}, "name": "__init__", "params": {"payload": "typing.Any", "self": ""}, "params_descr": {"payload": "", "self": ""}, "params_occur": {"payload": [["self", "payload", "payload"]], "self": [["self", "payload", "payload"]]}, "params_p": {"args": [], "kwargs": [], "payload": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "self": []}, "q_name": "TriggerEvent.__init__", "ret_exprs": [], "ret_type": "", "variables": {"payload": ""}, "variables_p": {"payload": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [113, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "payload"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TriggerEvent.__repr__", "ret_exprs": ["return f\"TriggerEvent<{self.payload!r}>\""], "ret_type": "builtins.str", "ret_type_p": [["str", 1.0000000000000002]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [118, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__eq__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["isinstance", "other", "TriggerEvent"], ["other", "payload", "self", "payload"]], "self": [["other", "payload", "self", "payload"]]}, "params_p": {"args": [], "kwargs": [], "other": [["Tuple[float, float]", 0.12751219025834126]], "self": []}, "q_name": "TriggerEvent.__eq__", "ret_exprs": ["return other.payload == self.payload", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.4956857843456015], ["str", 0.2009754592567786], ["Optional[str]", 0.09775162381492188]], "variables": {}, "variables_p": {}}], "name": "TriggerEvent", "q_name": "TriggerEvent", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "abc", "typing", "Any", "AsyncIterator", "airflow", "utils", "log", "logging_mixin", "LoggingMixin"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 5, "I": 0, "U": 13}, "session_id": "5KKWqleF4juyBQX4Yxv9Ed1dGzr0YQtBR48Shxlp3sI", "set": null, "tc": [false, null], "type_annot_cove": 0.28, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}