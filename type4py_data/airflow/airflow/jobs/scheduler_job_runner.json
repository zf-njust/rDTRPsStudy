{"error": null, "response": {"classes": [{"cls_lc": [[91, 0], [110, 23]], "cls_var_ln": {"dag_active_tasks_map": [[100, 4], [100, 24]], "task_concurrency_map": [[101, 4], [101, 24]], "task_dagrun_concurrency_map": [[102, 4], [102, 31]]}, "cls_var_occur": {"dag_active_tasks_map": [], "task_concurrency_map": [], "task_dagrun_concurrency_map": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [110, 23]], "fn_var_ln": {"instance": [[106, 8], [106, 16]]}, "fn_var_occur": {"instance": [["instance", "cls", "Counter", "Counter", "Counter", "mapping"], ["instance", "dag_active_tasks_map", "d", "c"], ["instance", "task_concurrency_map", "d", "t", "c"]]}, "name": "from_concurrency_map", "params": {"cls": "", "mapping": "builtins.dict[builtins.tuple[builtins.str, builtins.str, builtins.str], builtins.int]"}, "params_descr": {"cls": "", "mapping": ""}, "params_occur": {"cls": [["instance", "cls", "Counter", "Counter", "Counter", "mapping"]], "mapping": [["instance", "cls", "Counter", "Counter", "Counter", "mapping"], ["mapping", "items"]]}, "params_p": {"args": [], "cls": [["dict", 0.28388160974284804], ["Type", 0.08362419557579782], ["raiden.utils.Dict[str, raiden.utils.Any]", 0.08286053651702556]], "kwargs": [], "mapping": [["sqlalchemy.Column", 0.22403061879124686], ["Type[Any]", 0.12782771105910792], ["Dict[str, Iterable[Any]]", 0.09763194476067417], ["Mapping[str, T]", 0.0944659076782506], ["str", 0.08855446021053738], ["types.ModuleType", 0.08281495349479112], ["Exception", 0.07608282766873567]], "self": []}, "q_name": "ConcurrencyMap.from_concurrency_map", "ret_exprs": ["return instance"], "ret_type": "ConcurrencyMap", "ret_type_p": [["str", 0.09999999999999999], ["Callable", 0.09999999999999999], ["Callable[[None, None], bool]", 0.09999999999999999]], "variables": {"instance": ""}, "variables_p": {"instance": [["dict", 0.32370483594072436], ["multiprocessing.contexProcess", 0.1677490597139698], ["list", 0.11384248296379117], ["float", 0.10699067360238118], ["int", 0.09113989637952451], ["List[int]", 0.0838745298569849]]}}], "name": "ConcurrencyMap", "q_name": "ConcurrencyMap", "variables": {"dag_active_tasks_map": "builtins.dict[builtins.str, builtins.int]", "task_concurrency_map": "builtins.dict[builtins.tuple[builtins.str, builtins.str], builtins.int]", "task_dagrun_concurrency_map": "builtins.dict[builtins.tuple[builtins.str, builtins.str, builtins.str], builtins.int]"}, "variables_p": {"dag_active_tasks_map": [["str", 0.3], ["int", 0.3], ["bool", 0.19999999999999998], ["Optional[int]", 0.09999999999999999], ["list", 0.09999999999999999]], "task_concurrency_map": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "task_dagrun_concurrency_map": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]]}}, {"cls_lc": [[123, 0], [1803, 54]], "cls_var_ln": {"heartrate": [[147, 4], [147, 13]], "job_type": [[146, 4], [146, 12]]}, "cls_var_occur": {"heartrate": [], "job_type": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [230, 70]], "fn_var_ln": {"_dag_stale_not_seen_duration": [[180, 8], [180, 41]], "_log": [[221, 12], [221, 21]], "_paused_dag_without_running_dagruns": [[230, 8], [230, 48]], "_scheduler_idle_sleep_time": [[176, 8], [176, 39]], "_standalone_dag_processor": [[179, 8], [179, 38]], "_task_queued_timeout": [[214, 8], [214, 33]], "_zombie_threshold_secs": [[178, 8], [178, 35]], "dagbag": [[229, 8], [229, 19]], "do_pickle": [[218, 8], [218, 22]], "num_runs": [[162, 8], [162, 21]], "num_times_parse_dags": [[166, 8], [166, 33]], "processor_agent": [[227, 8], [227, 28]], "scheduler_idle_sleep_time": [[175, 12], [175, 37]], "sql_conn": [[224, 8], [224, 16]], "stalled_task_timeout": [[187, 8], [187, 28]], "subdir": [[161, 8], [161, 19]], "task_adoption_timeout": [[195, 8], [195, 29]], "task_queued_timeout": [[213, 8], [213, 27]], "using_sqlite": [[225, 8], [225, 25]], "worker_pods_pending_timeout": [[203, 8], [203, 35]]}, "fn_var_occur": {"_dag_stale_not_seen_duration": [["self", "_dag_stale_not_seen_duration", "conf", "getint"]], "_log": [["self", "_log", "log"]], "_paused_dag_without_running_dagruns": [["self", "_paused_dag_without_running_dagruns", "builtins", "set", "set"]], "_scheduler_idle_sleep_time": [["self", "_scheduler_idle_sleep_time", "scheduler_idle_sleep_time"]], "_standalone_dag_processor": [["self", "_standalone_dag_processor", "conf", "getboolean"]], "_task_queued_timeout": [["self", "_task_queued_timeout", "max", "stalled_task_timeout", "task_adoption_timeout", "worker_pods_pending_timeout", "task_queued_timeout"]], "_zombie_threshold_secs": [["self", "_zombie_threshold_secs", "conf", "getint"]], "dagbag": [["self", "dagbag", "DagBag", "dag_folder", "self", "subdir", "read_dags_from_db", "True", "load_op_links", "False"]], "do_pickle": [["self", "do_pickle", "do_pickle"]], "num_runs": [["self", "num_runs", "num_runs"]], "num_times_parse_dags": [["self", "num_times_parse_dags", "num_times_parse_dags"]], "processor_agent": [["self", "processor_agent", "DagFileProcessorAgent", "None", "None"]], "scheduler_idle_sleep_time": [["scheduler_idle_sleep_time", "processor_poll_interval"], ["self", "_scheduler_idle_sleep_time", "scheduler_idle_sleep_time"]], "sql_conn": [["sql_conn", "builtins", "str", "conf", "get_mandatory_value", "lower"], ["self", "using_sqlite", "sql_conn", "startswith"]], "stalled_task_timeout": [["stalled_task_timeout", "conf", "getfloat", "fallback"], ["self", "_task_queued_timeout", "max", "stalled_task_timeout", "task_adoption_timeout", "worker_pods_pending_timeout", "task_queued_timeout"]], "subdir": [["self", "subdir", "subdir"], ["self", "dagbag", "DagBag", "dag_folder", "self", "subdir", "read_dags_from_db", "True", "load_op_links", "False"]], "task_adoption_timeout": [["task_adoption_timeout", "conf", "getfloat", "fallback"], ["self", "_task_queued_timeout", "max", "stalled_task_timeout", "task_adoption_timeout", "worker_pods_pending_timeout", "task_queued_timeout"]], "task_queued_timeout": [["task_queued_timeout", "conf", "getfloat"], ["self", "_task_queued_timeout", "max", "stalled_task_timeout", "task_adoption_timeout", "worker_pods_pending_timeout", "task_queued_timeout"]], "using_sqlite": [["self", "using_sqlite", "sql_conn", "startswith"]], "worker_pods_pending_timeout": [["worker_pods_pending_timeout", "conf", "getfloat", "fallback"], ["self", "_task_queued_timeout", "max", "stalled_task_timeout", "task_adoption_timeout", "worker_pods_pending_timeout", "task_queued_timeout"]]}, "name": "__init__", "params": {"do_pickle": "builtins.bool", "job": "airflow.jobs.job.Job", "log": "logging.Logger | None", "num_runs": "builtins.int", "num_times_parse_dags": "builtins.int", "processor_poll_interval": "float | None", "scheduler_idle_sleep_time": "builtins.float", "self": "", "subdir": "builtins.str"}, "params_descr": {"do_pickle": "", "job": "", "log": "", "num_runs": "", "num_times_parse_dags": "", "processor_poll_interval": "", "scheduler_idle_sleep_time": "", "self": "", "subdir": ""}, "params_occur": {"do_pickle": [["self", "do_pickle", "do_pickle"]], "job": [["super", "__init__", "job"]], "log": [["self", "_log", "log"]], "num_runs": [["self", "num_runs", "num_runs"]], "num_times_parse_dags": [["self", "num_times_parse_dags", "num_times_parse_dags"]], "processor_poll_interval": [["scheduler_idle_sleep_time", "processor_poll_interval"]], "scheduler_idle_sleep_time": [["scheduler_idle_sleep_time", "processor_poll_interval"], ["self", "_scheduler_idle_sleep_time", "scheduler_idle_sleep_time"]], "self": [["self", "subdir", "subdir"], ["self", "num_runs", "num_runs"], ["self", "num_times_parse_dags", "num_times_parse_dags"], ["self", "_scheduler_idle_sleep_time", "scheduler_idle_sleep_time"], ["self", "_zombie_threshold_secs", "conf", "getint"], ["self", "_standalone_dag_processor", "conf", "getboolean"], ["self", "_dag_stale_not_seen_duration", "conf", "getint"], ["self", "_task_queued_timeout", "max", "stalled_task_timeout", "task_adoption_timeout", "worker_pods_pending_timeout", "task_queued_timeout"], ["self", "do_pickle", "do_pickle"], ["self", "_log", "log"], ["self", "using_sqlite", "sql_conn", "startswith"], ["self", "processor_agent", "DagFileProcessorAgent", "None", "None"], ["self", "dagbag", "DagBag", "dag_folder", "self", "subdir", "read_dags_from_db", "True", "load_op_links", "False"], ["self", "_paused_dag_without_running_dagruns", "builtins", "set", "set"]], "subdir": [["self", "subdir", "subdir"], ["self", "dagbag", "DagBag", "dag_folder", "self", "subdir", "read_dags_from_db", "True", "load_op_links", "False"]]}, "params_p": {"args": [], "do_pickle": [["bool", 0.29642597825723144], ["str", 0.18316726479331658], ["float", 0.12278452947464986], ["Iterable[str]", 0.11455931849444703], ["Optional[str]", 0.08035897309454913], ["Optional[int]", 0.08035897309454913]], "job": [["int", 0.23466055223634302], ["bool", 0.1634890675320939]], "kwargs": [], "log": [["str", 0.5015801196954948], ["logging.Logger", 0.17685662421069082], ["Union[Set[str], List[str]]", 0.0928898279056651], ["List[str]", 0.08708754883461822]], "num_runs": [["int", 0.5720627153042726], ["float", 0.18917998856855225], ["Tuple[int, int]", 0.1332368551517933], ["List[str]", 0.10552044097538196]], "num_times_parse_dags": [["datetime.datetime", 0.3375004486307922], ["List[str]", 0.277499227623114], ["int", 0.20165219157819902], ["Optional[str]", 0.10508882881885839], ["Union[int, float]", 0.07825930334903626]], "processor_poll_interval": [["int", 0.28430184554444227], ["bool", 0.2006893803463425], ["Optional[int]", 0.11618730532680342], ["Sequence[str]", 0.1121584855888945], ["Optional[float]", 0.10034469017317126], ["datetime.datetime", 0.09417849071911323], ["Union[int, float]", 0.09213980230123286]], "scheduler_idle_sleep_time": [["Optional[int]", 0.3886274591193726], ["float", 0.2522554878858126], ["int", 0.17239844357925554], ["str", 0.11077405355709535], ["bool", 0.07594455585846392]], "self": [], "subdir": [["str", 0.7886670962176204], ["Optional[str]", 0.21133290378237954]]}, "q_name": "SchedulerJobRunner.__init__", "ret_exprs": [], "ret_type": "", "variables": {"_dag_stale_not_seen_duration": "", "_log": "", "_paused_dag_without_running_dagruns": "builtins.set", "_scheduler_idle_sleep_time": "", "_standalone_dag_processor": "", "_task_queued_timeout": "", "_zombie_threshold_secs": "", "dagbag": "", "do_pickle": "", "num_runs": "", "num_times_parse_dags": "", "processor_agent": "DagFileProcessorAgent | None", "scheduler_idle_sleep_time": "", "sql_conn": "builtins.str", "stalled_task_timeout": "", "subdir": "", "task_adoption_timeout": "", "task_queued_timeout": "", "using_sqlite": "", "worker_pods_pending_timeout": ""}, "variables_p": {"_dag_stale_not_seen_duration": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "_log": [["deque", 0.9999999997148918], ["str", 2.2641792260166283e-10], ["bool", 5.869039034481936e-11]], "_paused_dag_without_running_dagruns": [["Set[logging.Handler]", 0.5806728193691809], ["dict", 0.11947052416581888], ["List[Tuple[int, Any]]", 0.10437935406774614], ["Type[None]", 0.09932733725716653], ["set", 0.09614996514008757]], "_scheduler_idle_sleep_time": [["int", 0.6633774124306154], ["datetime.timedelta", 0.2170862484639754]], "_standalone_dag_processor": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "_task_queued_timeout": [["int", 0.5916177416441328], ["str", 0.18995458871971005], ["Dict[str, int]", 0.12754864269333885], ["List[str]", 0.09087902694281817]], "_zombie_threshold_secs": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "dagbag": [["Pattern[str]", 0.31318124716279766], ["functools.partial[Any]", 0.09375049136481174]], "do_pickle": [["int", 0.5337958625816787], ["str", 0.21776740968572422], ["float", 0.15551105434990772], ["bytes", 0.09292567338268928]], "num_runs": [["int", 0.8955185015494248], ["Dict[float, float]", 0.10448149845057535]], "num_times_parse_dags": [["int", 0.6459180328363179], ["List[int]", 0.12234988889717487], ["float", 0.08269063808933172], ["list", 0.0756623942570671], ["datetime.timedelta", 0.07337904592010833]], "processor_agent": [["int", 0.3019027592771659], ["float", 0.19233064855368384], ["dict", 0.10885225700098679], ["str", 0.10404117036250915], ["Type[object]", 0.09128633855424895], ["faustypes.models.ModelT", 0.0876763624989894]], "scheduler_idle_sleep_time": [["int", 0.6006490626862068], ["float", 0.17949411477277136], ["pringles.utils.vtime.VirtualTime", 0.13623250074932397]], "sql_conn": [["str", 0.9999999999999998]], "stalled_task_timeout": [["Optional[str]", 0.3981533665072966], ["float", 0.10461333347365179], ["Dict[Any, float]", 0.096974969775464], ["str", 0.09009234594207613]], "subdir": [["int", 0.40601567150757883], ["list", 0.21888878142782492], ["str", 0.08869368881140044]], "task_adoption_timeout": [["str", 0.29046789477166834], ["int", 0.10652737544842973], ["Iterator[Any]", 0.10055167614986199], ["dcpquery.db.models.File", 0.10001327050135704], ["List[bytes]", 0.09569765637841221]], "task_queued_timeout": [["str", 0.29774722736834586], ["int", 0.20859199735829198], ["bytes", 0.1919168623330759], ["dict", 0.10115039991744046], ["Pattern[str]", 0.09327498935963802]], "using_sqlite": [["str", 0.3311096138715649], ["Dict[str, bool]", 0.25028825426689433], ["Dict[str, Dict[str, str]]", 0.21356297648792943], ["Dict[str, Dict[str, Any]]", 0.10832345438375104], ["Optional[str]", 0.09671570098986022]], "worker_pods_pending_timeout": [["int", 0.38363840252815173], ["raiden.utils.BlockTimeout", 0.1011396063660038], ["raiden.utils.BlockSpecification", 0.08703935324571643], ["raiden.utils.Address", 0.08703935324571643]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[233, 4], [234, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "heartbeat_callback", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [], "session": []}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["str", 0.2], ["Optional[sqlalchemy.orm.session.Session]", 0.2], ["list", 0.2], ["sqlalchemy.orm.unitofwork.UOWTransaction", 0.2], ["Iterable", 0.1]]}, "q_name": "SchedulerJobRunner.heartbeat_callback", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Register signals that stop child processes.", "long_descr": null, "ret": null}, "fn_lc": [[236, 4], [240, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "register_signals", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["signal", "signal", "signal", "SIGINT", "self", "_exit_gracefully"], ["signal", "signal", "signal", "SIGTERM", "self", "_exit_gracefully"], ["signal", "signal", "signal", "SIGUSR2", "self", "_debug_dump"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner.register_signals", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Helper method to clean up processor_agent to avoid leaving orphan processes.", "long_descr": null, "ret": null}, "fn_lc": [[242, 4], [251, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_exit_gracefully", "params": {"frame": "FrameType | None", "self": "", "signum": "builtins.int"}, "params_descr": {"frame": "", "self": "", "signum": ""}, "params_occur": {"frame": [], "self": [["self", "log", "info", "signum"], ["self", "processor_agent"], ["self", "processor_agent", "end"]], "signum": [["self", "log", "info", "signum"]]}, "params_p": {"args": [], "frame": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "self": [], "signum": [["str", 0.9999999998800991], ["int", 5.446999031476895e-11]]}, "q_name": "SchedulerJobRunner._exit_gracefully", "ret_exprs": ["return"], "ret_type": "None", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [266, 31]], "fn_var_ln": {"sig_name": [[261, 12], [261, 20]]}, "fn_var_occur": {"sig_name": [["sig_name", "signal", "Signals", "signum", "name"], ["sig_name", "str", "signum"], ["self", "log", "info", "sig_name"]]}, "name": "_debug_dump", "params": {"frame": "FrameType | None", "self": "", "signum": "builtins.int"}, "params_descr": {"frame": "", "self": "", "signum": ""}, "params_occur": {"frame": [], "self": [["self", "log", "info", "sig_name"], ["self", "job", "executor", "debug_dump"], ["self", "log", "info"]], "signum": [["sig_name", "signal", "Signals", "signum", "name"], ["sig_name", "str", "signum"]]}, "params_p": {"args": [], "frame": [["str", 0.9999999986796184], ["int", 4.326625402164634e-10], ["bool", 2.1927814058855387e-10]], "kwargs": [], "self": [], "signum": [["sqlalchemy.util.KeyedTuple", 0.196848281257906], ["Callable[[Mapping], Awaitable]", 0.12335722048881606], ["Callable[[], Awaitable[Mapping]]", 0.12335722048881606], ["dict", 0.0916603042635956]]}, "q_name": "SchedulerJobRunner._debug_dump", "ret_exprs": ["return"], "ret_type": "None", "ret_type_p": [["Dict[str, Any]", 0.10249842245848423], ["Union[tuple, list]", 0.10166453178211173], ["str", 0.09333273462362938]], "variables": {"sig_name": ""}, "variables_p": {"sig_name": [["str", 0.8117057738388884], ["dict", 0.09805152171759896], ["bytes", 0.09024270444351257]]}}, {"docstring": {"func": "Get the concurrency maps.", "long_descr": null, "ret": "Concurrency map"}, "fn_lc": [[268, 4], [282, 9]], "fn_var_ln": {"ti_concurrency_query": [[275, 8], [275, 28]]}, "fn_var_occur": {"ti_concurrency_query": [["ti_concurrency_query", "sqlalchemy", "engine", "Result", "session", "execute", "select", "TI", "task_id", "TI", "run_id", "TI", "dag_id", "func", "count", "where", "TI", "state", "in_", "states", "group_by", "TI", "task_id", "TI", "run_id", "TI", "dag_id"], ["ConcurrencyMap", "from_concurrency_map", "dag_id", "run_id", "task_id", "count", "task_id", "run_id", "dag_id", "count", "ti_concurrency_query"]]}, "name": "__get_concurrency_maps", "params": {"self": "", "session": "sqlalchemy.orm.Session", "states": "typing.Iterable[airflow.utils.state.TaskInstanceState]"}, "params_descr": {"self": "", "session": "", "states": "List of states to query for"}, "params_occur": {"self": [], "session": [["ti_concurrency_query", "sqlalchemy", "engine", "Result", "session", "execute", "select", "TI", "task_id", "TI", "run_id", "TI", "dag_id", "func", "count", "where", "TI", "state", "in_", "states", "group_by", "TI", "task_id", "TI", "run_id", "TI", "dag_id"]], "states": [["ti_concurrency_query", "sqlalchemy", "engine", "Result", "session", "execute", "select", "TI", "task_id", "TI", "run_id", "TI", "dag_id", "func", "count", "where", "TI", "state", "in_", "states", "group_by", "TI", "task_id", "TI", "run_id", "TI", "dag_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["Dict[str, Any]", 0.17643468349657024], ["raiden.utils.TokenNetworkID", 0.10754240231235743], ["Optional[str]", 0.08418658052070904], ["str", 0.08104418905947545], ["raiden.transfer.state.ChainState", 0.07781228099333973]], "states": [["Dict[str, Any]", 0.17643468349657024], ["raiden.utils.TokenNetworkID", 0.10754240231235743], ["Optional[str]", 0.08418658052070904], ["str", 0.08104418905947545], ["raiden.transfer.state.ChainState", 0.07781228099333973]]}, "q_name": "SchedulerJobRunner.__get_concurrency_maps", "ret_exprs": ["return ConcurrencyMap.from_concurrency_map( {(dag_id, run_id, task_id): count for task_id, run_id, dag_id, count in ti_concurrency_query})"], "ret_type": "ConcurrencyMap", "ret_type_p": [["salon.models.Stylist", 0.41187121446033886], ["str", 0.3634240413132746], ["cmk.utils.type_defs.UserId", 0.07261622730535511]], "variables": {"ti_concurrency_query": "sqlalchemy.engine.Result"}, "variables_p": {"ti_concurrency_query": [["int", 0.6815722434598196], ["datetime.datetime", 0.2221384638485865], ["Dict[str, Union[datetime.timedelta, str]]", 0.09628929269159389]]}}, {"docstring": {"func": "Find TIs that are ready for execution based on conditions.", "long_descr": "Conditions include:\n- pool limits\n- DAG max_active_tasks\n- executor state\n- priority\n- max active tis per DAG\n- max active tis per DAG run", "ret": "list[airflow.models.TaskInstance]"}, "fn_lc": [[284, 4], [617, 29]], "fn_var_ln": {"concurrency_map": [[336, 8], [336, 23]], "current_active_tasks_per_dag": [[477, 16], [477, 44]], "current_task_concurrency": [[522, 24], [522, 48]], "current_task_dagrun_concurrency": [[542, 24], [542, 55]], "dag_id": [[475, 16], [475, 22]], "executable_tis": [[302, 8], [302, 22]], "filter_for_tis": [[598, 12], [598, 26]], "found_new_filters": [[569, 12], [569, 29]], "is_done": [[567, 12], [567, 19]], "lock_acquired": [[308, 12], [308, 25]], "max_active_tasks_per_dag_limit": [[478, 16], [478, 46]], "max_tis": [[331, 8], [331, 15]], "num_starved_dags": [[350, 12], [350, 28]], "num_starved_pools": [[349, 12], [349, 29]], "num_starved_tasks": [[351, 12], [351, 29]], "num_starved_tasks_task_dagrun_concurrency": [[352, 12], [352, 53]], "num_starving_tasks_total": [[339, 8], [339, 32]], "open_slots": [[431, 16], [431, 26]], "pool_name": [[419, 16], [419, 25]], "pool_num_starving_tasks": [[346, 8], [346, 31]], "pool_slots_free": [[325, 8], [325, 23]], "pool_stats": [[421, 16], [421, 26]], "pool_total": [[430, 16], [430, 26]], "pools": [[321, 8], [321, 13]], "query": [[392, 16], [392, 21]], "serialized_dag": [[499, 20], [499, 34]], "starved_dags": [[342, 8], [342, 20]], "starved_pools": [[333, 8], [333, 21]], "starved_tasks": [[343, 8], [343, 21]], "starved_tasks_task_dagrun_concurrency": [[344, 8], [344, 45]], "task_concurrency_limit": [[517, 24], [517, 46]], "task_dagrun_concurrency_limit": [[537, 24], [537, 53]], "task_filter": [[380, 16], [380, 27]], "task_instance_str": [[594, 12], [594, 29]], "task_instances_to_examine": [[398, 16], [398, 41]], "timer": [[388, 12], [388, 17]]}, "fn_var_occur": {"concurrency_map": [["concurrency_map", "self", "__get_concurrency_maps", "states", "EXECUTION_STATES", "session", "session"], ["current_active_tasks_per_dag", "concurrency_map", "dag_active_tasks_map", "dag_id"], ["current_task_concurrency", "concurrency_map", "task_concurrency_map", "task_instance", "dag_id", "task_instance", "task_id"], ["current_task_dagrun_concurrency", "concurrency_map", "task_dagrun_concurrency_map", "task_instance", "dag_id", "task_instance", "run_id", "task_instance", "task_id"], ["concurrency_map", "dag_active_tasks_map", "dag_id"], ["concurrency_map", "task_concurrency_map", "task_instance", "dag_id", "task_instance", "task_id"], ["concurrency_map", "task_dagrun_concurrency_map", "task_instance", "dag_id", "task_instance", "run_id", "task_instance", "task_id"]], "current_active_tasks_per_dag": [["current_active_tasks_per_dag", "concurrency_map", "dag_active_tasks_map", "dag_id"], ["self", "log", "info", "dag_id", "current_active_tasks_per_dag", "max_active_tasks_per_dag_limit"], ["current_active_tasks_per_dag", "max_active_tasks_per_dag_limit"]], "current_task_concurrency": [["current_task_concurrency", "concurrency_map", "task_concurrency_map", "task_instance", "dag_id", "task_instance", "task_id"], ["current_task_concurrency", "task_concurrency_limit"]], "current_task_dagrun_concurrency": [["current_task_dagrun_concurrency", "concurrency_map", "task_dagrun_concurrency_map", "task_instance", "dag_id", "task_instance", "run_id", "task_instance", "task_id"], ["current_task_dagrun_concurrency", "task_dagrun_concurrency_limit"]], "dag_id": [["query", "query", "where", "not_", "TI", "dag_id", "in_", "starved_dags"], ["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "task_id", "starved_tasks"], ["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "run_id", "TI", "task_id", "starved_tasks_task_dagrun_concurrency"], ["starved_tasks", "add", "task_instance", "dag_id", "task_instance", "task_id"], ["starved_tasks", "add", "task_instance", "dag_id", "task_instance", "task_id"], ["dag_id", "task_instance", "dag_id"], ["current_active_tasks_per_dag", "concurrency_map", "dag_active_tasks_map", "dag_id"], ["self", "log", "info", "dag_id", "current_active_tasks_per_dag", "max_active_tasks_per_dag_limit"], ["self", "log", "info", "task_instance", "dag_id", "max_active_tasks_per_dag_limit"], ["starved_dags", "add", "dag_id"], ["serialized_dag", "self", "dagbag", "get_dag", "dag_id", "session", "session"], ["self", "log", "error", "dag_id", "task_instance"], ["session", "execute", "update", "TI", "where", "TI", "dag_id", "dag_id", "TI", "state", "TaskInstanceState", "SCHEDULED", "values", "state", "TaskInstanceState", "FAILED", "execution_options", "synchronize_session"], ["current_task_concurrency", "concurrency_map", "task_concurrency_map", "task_instance", "dag_id", "task_instance", "task_id"], ["starved_tasks", "add", "task_instance", "dag_id", "task_instance", "task_id"], ["current_task_dagrun_concurrency", "concurrency_map", "task_dagrun_concurrency_map", "task_instance", "dag_id", "task_instance", "run_id", "task_instance", "task_id"], ["starved_tasks_task_dagrun_concurrency", "add", "task_instance", "dag_id", "task_instance", "run_id", "task_instance", "task_id"], ["concurrency_map", "dag_active_tasks_map", "dag_id"], ["concurrency_map", "task_concurrency_map", "task_instance", "dag_id", "task_instance", "task_id"], ["concurrency_map", "task_dagrun_concurrency_map", "task_instance", "dag_id", "task_instance", "run_id", "task_instance", "task_id"]], "executable_tis": [["executable_tis", "builtins", "list", "TI"], ["executable_tis", "append", "task_instance"], ["is_done", "executable_tis", "len", "task_instances_to_examine", "max_tis"], ["Stats", "gauge", "len", "executable_tis"], ["len", "executable_tis"], ["task_instance_str", "join", "repr", "x", "x", "executable_tis"], ["filter_for_tis", "TI", "filter_for_tis", "executable_tis"]], "filter_for_tis": [["filter_for_tis", "TI", "filter_for_tis", "executable_tis"], ["session", "execute", "update", "TI", "where", "filter_for_tis", "values", "state", "TaskInstanceState", "QUEUED", "queued_dttm", "timezone", "utcnow", "queued_by_job_id", "self", "job", "id", "execution_options", "synchronize_session", "False"]], "found_new_filters": [["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"], ["is_done", "found_new_filters"]], "is_done": [["is_done", "executable_tis", "len", "task_instances_to_examine", "max_tis"], ["is_done", "found_new_filters"]], "lock_acquired": [["lock_acquired", "session", "execute", "text", "bindparams", "id", "DBLocks", "SCHEDULER_CRITICAL_SECTION", "value", "scalar"]], "max_active_tasks_per_dag_limit": [["max_active_tasks_per_dag_limit", "task_instance", "dag_model", "max_active_tasks"], ["self", "log", "info", "dag_id", "current_active_tasks_per_dag", "max_active_tasks_per_dag_limit"], ["current_active_tasks_per_dag", "max_active_tasks_per_dag_limit"], ["self", "log", "info", "task_instance", "dag_id", "max_active_tasks_per_dag_limit"]], "max_tis": [["max_tis", "min", "max_tis", "pool_slots_free"], ["query", "query", "limit", "max_tis"], ["is_done", "executable_tis", "len", "task_instances_to_examine", "max_tis"]], "num_starved_dags": [["num_starved_dags", "len", "starved_dags"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "num_starved_pools": [["num_starved_pools", "len", "starved_pools"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "num_starved_tasks": [["num_starved_tasks", "len", "starved_tasks"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "num_starved_tasks_task_dagrun_concurrency": [["num_starved_tasks_task_dagrun_concurrency", "len", "starved_tasks_task_dagrun_concurrency"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "num_starving_tasks_total": [["Stats", "gauge", "num_starving_tasks_total"]], "open_slots": [["open_slots", "pool_stats"], ["self", "log", "info", "open_slots", "pool_name"], ["task_instance", "pool_slots", "open_slots"], ["self", "log", "info", "task_instance", "task_instance", "pool_slots", "open_slots", "pool_name"], ["open_slots", "task_instance", "pool_slots"], ["pool_stats", "open_slots"]], "pool_name": [["starved_pools", "pool_name", "pool_name", "stats", "pools", "items", "stats"], ["pool_name", "task_instance", "pool"], ["pool_stats", "pools", "get", "pool_name"], ["self", "log", "warning", "pool_name"], ["starved_pools", "add", "pool_name"], ["pool_num_starving_tasks", "setdefault", "pool_name"], ["self", "log", "info", "open_slots", "pool_name"], ["pool_num_starving_tasks", "pool_name"], ["starved_pools", "add", "pool_name"], ["self", "log", "warning", "task_instance", "task_instance", "pool_slots", "pool_total", "pool_name"], ["pool_num_starving_tasks", "pool_name"], ["self", "log", "info", "task_instance", "task_instance", "pool_slots", "open_slots", "pool_name"], ["pool_num_starving_tasks", "pool_name"], ["Stats", "gauge", "pool_name", "num_starving_tasks"], ["Stats", "gauge", "num_starving_tasks", "tags", "pool_name"]], "pool_num_starving_tasks": [["pool_num_starving_tasks", "builtins", "dict", "builtins", "str", "builtins", "int", "Counter"], ["pool_num_starving_tasks", "setdefault", "pool_name"], ["pool_num_starving_tasks", "pool_name"], ["pool_num_starving_tasks", "pool_name"], ["pool_num_starving_tasks", "pool_name"], ["pool_num_starving_tasks", "items"]], "pool_slots_free": [["pool_slots_free", "sum", "max", "pool", "pool", "pools", "values"], ["max_tis", "min", "max_tis", "pool_slots_free"]], "pool_stats": [["pool_stats", "pools", "get", "pool_name"], ["pool_total", "pool_stats"], ["open_slots", "pool_stats"], ["pool_stats", "open_slots"]], "pool_total": [["pool_total", "pool_stats"], ["task_instance", "pool_slots", "pool_total"], ["self", "log", "warning", "task_instance", "task_instance", "pool_slots", "pool_total", "pool_name"]], "pools": [["pools", "Pool", "slots_stats", "lock_rows", "True", "session", "session"], ["pool_slots_free", "sum", "max", "pool", "pool", "pools", "values"], ["starved_pools", "pool_name", "pool_name", "stats", "pools", "items", "stats"], ["pool_stats", "pools", "get", "pool_name"]], "query": [["query", "select", "TI", "with_hint", "TI", "dialect_name", "join", "TI", "dag_run", "where", "DR", "run_type", "DagRunType", "BACKFILL_JOB", "DR", "state", "DagRunState", "RUNNING", "join", "TI", "dag_model", "where", "not_", "DM", "is_paused", "where", "TI", "state", "TaskInstanceState", "SCHEDULED", "options", "selectinload", "TI", "dag_model", "order_by", "TI", "priority_weight", "DR", "execution_date", "TI", "map_index"], ["query", "query", "where", "not_", "TI", "pool", "in_", "starved_pools"], ["query", "query", "where", "not_", "TI", "dag_id", "in_", "starved_dags"], ["query", "query", "where", "not_", "task_filter"], ["query", "query", "where", "not_", "task_filter"], ["query", "query", "limit", "max_tis"], ["query", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["task_instances_to_examine", "builtins", "list", "TI", "session", "scalars", "query", "all"]], "serialized_dag": [["serialized_dag", "self", "dagbag", "get_dag", "dag_id", "session", "session"], ["serialized_dag", "has_task", "task_instance", "task_id"], ["task_concurrency_limit", "serialized_dag", "get_task", "task_instance", "task_id", "max_active_tis_per_dag"], ["serialized_dag", "has_task", "task_instance", "task_id"], ["task_dagrun_concurrency_limit", "serialized_dag", "get_task", "task_instance", "task_id", "max_active_tis_per_dagrun"]], "starved_dags": [["starved_dags", "builtins", "set", "builtins", "str", "set"], ["num_starved_dags", "len", "starved_dags"], ["query", "query", "where", "not_", "TI", "dag_id", "in_", "starved_dags"], ["starved_dags", "add", "dag_id"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "starved_pools": [["starved_pools", "pool_name", "pool_name", "stats", "pools", "items", "stats"], ["num_starved_pools", "len", "starved_pools"], ["query", "query", "where", "not_", "TI", "pool", "in_", "starved_pools"], ["starved_pools", "add", "pool_name"], ["starved_pools", "add", "pool_name"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "starved_tasks": [["starved_tasks", "builtins", "set", "builtins", "tuple", "builtins", "str", "builtins", "str", "set"], ["num_starved_tasks", "len", "starved_tasks"], ["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "task_id", "starved_tasks"], ["starved_tasks", "add", "task_instance", "dag_id", "task_instance", "task_id"], ["starved_tasks", "add", "task_instance", "dag_id", "task_instance", "task_id"], ["starved_tasks", "add", "task_instance", "dag_id", "task_instance", "task_id"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "starved_tasks_task_dagrun_concurrency": [["starved_tasks_task_dagrun_concurrency", "builtins", "set", "builtins", "tuple", "builtins", "str", "builtins", "str", "builtins", "str", "set"], ["num_starved_tasks_task_dagrun_concurrency", "len", "starved_tasks_task_dagrun_concurrency"], ["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "run_id", "TI", "task_id", "starved_tasks_task_dagrun_concurrency"], ["starved_tasks_task_dagrun_concurrency", "add", "task_instance", "dag_id", "task_instance", "run_id", "task_instance", "task_id"], ["found_new_filters", "len", "starved_pools", "num_starved_pools", "len", "starved_dags", "num_starved_dags", "len", "starved_tasks", "num_starved_tasks", "len", "starved_tasks_task_dagrun_concurrency", "num_starved_tasks_task_dagrun_concurrency"]], "task_concurrency_limit": [["task_concurrency_limit", "int", "None", "None"], ["task_concurrency_limit", "serialized_dag", "get_task", "task_instance", "task_id", "max_active_tis_per_dag"], ["task_concurrency_limit", "None"], ["current_task_concurrency", "task_concurrency_limit"]], "task_dagrun_concurrency_limit": [["task_dagrun_concurrency_limit", "int", "None", "None"], ["task_dagrun_concurrency_limit", "serialized_dag", "get_task", "task_instance", "task_id", "max_active_tis_per_dagrun"], ["task_dagrun_concurrency_limit", "None"], ["current_task_dagrun_concurrency", "task_dagrun_concurrency_limit"]], "task_filter": [["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "task_id", "starved_tasks"], ["query", "query", "where", "not_", "task_filter"], ["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "run_id", "TI", "task_id", "starved_tasks_task_dagrun_concurrency"], ["query", "query", "where", "not_", "task_filter"]], "task_instance_str": [["task_instance_str", "join", "repr", "x", "x", "task_instances_to_examine"], ["self", "log", "info", "len", "task_instances_to_examine", "task_instance_str"], ["task_instance_str", "join", "repr", "x", "x", "executable_tis"], ["self", "log", "info", "task_instance_str"]], "task_instances_to_examine": [["task_instances_to_examine", "builtins", "list", "TI", "session", "scalars", "query", "all"], ["len", "task_instances_to_examine"], ["task_instance_str", "join", "repr", "x", "x", "task_instances_to_examine"], ["self", "log", "info", "len", "task_instances_to_examine", "task_instance_str"], ["is_done", "executable_tis", "len", "task_instances_to_examine", "max_tis"]], "timer": [["timer", "Stats", "timer"], ["timer", "start"], ["timer", "stop", "send", "True"], ["timer", "stop", "send", "False"]]}, "name": "_executable_task_instances_to_queued", "params": {"max_tis": "builtins.int", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"max_tis": "Maximum number of TIs to queue in this loop.", "self": "", "session": ""}, "params_occur": {"max_tis": [["max_tis", "min", "max_tis", "pool_slots_free"], ["query", "query", "limit", "max_tis"], ["is_done", "executable_tis", "len", "task_instances_to_examine", "max_tis"]], "self": [["self", "log", "debug"], ["concurrency_map", "self", "__get_concurrency_maps", "states", "EXECUTION_STATES", "session", "session"], ["self", "log", "debug"], ["self", "log", "info", "len", "task_instances_to_examine", "task_instance_str"], ["self", "log", "warning", "pool_name"], ["self", "log", "info", "open_slots", "pool_name"], ["self", "log", "warning", "task_instance", "task_instance", "pool_slots", "pool_total", "pool_name"], ["self", "log", "info", "task_instance", "task_instance", "pool_slots", "open_slots", "pool_name"], ["self", "log", "info", "dag_id", "current_active_tasks_per_dag", "max_active_tasks_per_dag_limit"], ["self", "log", "info", "task_instance", "dag_id", "max_active_tasks_per_dag_limit"], ["serialized_dag", "self", "dagbag", "get_dag", "dag_id", "session", "session"], ["self", "log", "error", "dag_id", "task_instance"], ["self", "log", "info", "task_instance"], ["self", "log", "info", "task_instance"], ["self", "log", "info", "loop_count"], ["self", "log", "info", "task_instance_str"], ["session", "execute", "update", "TI", "where", "filter_for_tis", "values", "state", "TaskInstanceState", "QUEUED", "queued_dttm", "timezone", "utcnow", "queued_by_job_id", "self", "job", "id", "execution_options", "synchronize_session", "False"]], "session": [["session", "get_bind", "dialect", "name"], ["lock_acquired", "session", "execute", "text", "bindparams", "id", "DBLocks", "SCHEDULER_CRITICAL_SECTION", "value", "scalar"], ["pools", "Pool", "slots_stats", "lock_rows", "True", "session", "session"], ["concurrency_map", "self", "__get_concurrency_maps", "states", "EXECUTION_STATES", "session", "session"], ["query", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["task_instances_to_examine", "builtins", "list", "TI", "session", "scalars", "query", "all"], ["serialized_dag", "self", "dagbag", "get_dag", "dag_id", "session", "session"], ["session", "execute", "update", "TI", "where", "TI", "dag_id", "dag_id", "TI", "state", "TaskInstanceState", "SCHEDULED", "values", "state", "TaskInstanceState", "FAILED", "execution_options", "synchronize_session"], ["session", "execute", "update", "TI", "where", "filter_for_tis", "values", "state", "TaskInstanceState", "QUEUED", "queued_dttm", "timezone", "utcnow", "queued_by_job_id", "self", "job", "id", "execution_options", "synchronize_session", "False"]]}, "params_p": {"args": [], "kwargs": [], "max_tis": [["int", 0.4672671892456994], ["float", 0.20792645237028354]], "self": [], "session": [["Dict[str, Any]", 0.20430462725402648], ["reader_server.types.Subscription", 0.10760752636159487], ["Optional[int]", 0.09887705473254388]]}, "q_name": "SchedulerJobRunner._executable_task_instances_to_queued", "ret_exprs": ["return []", "return executable_tis"], "ret_type": "builtins.list[TI]", "ret_type_p": [["pathlib.Path", 0.28839533282587676], ["int", 0.0916290633480455], ["str", 0.07637194609504322], ["Callable", 0.07637194609504322], ["Callable[[None, None], bool]", 0.07637194609504322]], "variables": {"concurrency_map": "", "current_active_tasks_per_dag": "", "current_task_concurrency": "", "current_task_dagrun_concurrency": "", "dag_id": "", "executable_tis": "builtins.list[TI]", "filter_for_tis": "", "found_new_filters": "", "is_done": "", "lock_acquired": "", "max_active_tasks_per_dag_limit": "", "max_tis": "", "num_starved_dags": "", "num_starved_pools": "", "num_starved_tasks": "", "num_starved_tasks_task_dagrun_concurrency": "", "num_starving_tasks_total": "", "open_slots": "", "pool_name": "", "pool_num_starving_tasks": "builtins.dict[builtins.str, builtins.int]", "pool_slots_free": "", "pool_stats": "", "pool_total": "", "pools": "", "query": "", "serialized_dag": "", "starved_dags": "builtins.set[builtins.str]", "starved_pools": "", "starved_tasks": "builtins.set[builtins.tuple[builtins.str, builtins.str]]", "starved_tasks_task_dagrun_concurrency": "builtins.set[builtins.tuple[builtins.str, builtins.str, builtins.str]]", "task_concurrency_limit": "", "task_dagrun_concurrency_limit": "", "task_filter": "", "task_instance_str": "", "task_instances_to_examine": "builtins.list[TI]", "timer": ""}, "variables_p": {"concurrency_map": [["dict", 0.8088262381789444]], "current_active_tasks_per_dag": [["excars.models.rides.RideRequest", 0.5029193631418376], ["src.models.generic_task.GenericTask", 0.0997066832645709], ["int", 0.09564823471166516]], "current_task_concurrency": [["taskiapplication.models.task.Task", 0.3842735566974604]], "current_task_dagrun_concurrency": [["taskiapplication.models.task.Task", 0.10248066608821425]], "dag_id": [["int", 0.7738681862301628], ["list", 0.1319921922223881], ["List[int]", 0.09413962154744916]], "executable_tis": [["list", 0.9999999999999999]], "filter_for_tis": [["str", 0.33807173070385926], ["int", 0.1857627877348919], ["pathlib.Path", 0.1125708481540075], ["List[str]", 0.08601154541800186]], "found_new_filters": [["int", 0.48696103844730565], ["List[int]", 0.2527201055758749], ["str", 0.09055623805922318], ["Tuple[Any, Any, Any]", 0.08788681547307019], ["List[Tuple[Any, Any, Any]]", 0.08187580244452594]], "is_done": [["int", 1.0000000000000002]], "lock_acquired": [["str", 0.3493145643931508], ["Dict[str, Dict[str, int]]", 0.12499557144089297], ["dict", 0.10256065094421947], ["reader_server.types.subscription.Subscription", 0.08391706489675547], ["list", 0.0804379934859689]], "max_active_tasks_per_dag_limit": [["tracim.models.data.Content", 0.10152135143577297], ["grpcalchemy.orm.Message", 0.09437598534314225]], "max_tis": [["int", 0.5793883334097408], ["Callable(itertools.chain.from_iterable)[[Named(iterable, Iterable[Any])], Iterator[Any]]", 0.14000424914901155], ["List[int]", 0.11352115953177429], ["set", 0.09232845969805449]], "num_starved_dags": [["int", 1.0000000000000002]], "num_starved_pools": [["int", 1.0000000000000002]], "num_starved_tasks": [["List[int]", 0.3191695162480088], ["int", 0.3076746623617719], ["range", 0.09494481123671969], ["str", 0.09285102978567938]], "num_starved_tasks_task_dagrun_concurrency": [["List[List[int]]", 0.2365313172935018], ["int", 0.18110494949333011], ["Dict[str, Union[Any, Any, str]]", 0.17446573772260487], ["Dict[str, Optional[str]]", 0.11200751487381588]], "num_starving_tasks_total": [["int", 0.9075417435319239], ["Optional[int]", 0.09245825646807608]], "open_slots": [["bytes", 0.17860086661546368], ["Optional[List[str]]", 0.10995731059986284], ["cmk.utils.type_defs.ServiceName", 0.09591183521985748], ["str", 0.08944417438068641]], "pool_name": [["str", 0.7938665245587211], ["dict", 0.10936791681458329]], "pool_num_starving_tasks": [["Dict[str, int]", 0.3045136385764961], ["Dict[str, float]", 0.1278570417915943], ["List[str]", 0.11320699666577332], ["Dict[str, Tuple[Any, str]]", 0.09759744362516427], ["int", 0.09223591640509242], ["Dict[int, None]", 0.0904417955938519], ["Type[Callable[Any, Any]]", 0.08846655852440316], ["str", 0.08568060881762456]], "pool_slots_free": [["int", 0.3870851373632743], ["Tuple[Literal, Literal, Literal]", 0.0773501051610051]], "pool_stats": [["str", 0.31163442362221444], ["dict", 0.1907247286039584], ["Dict[str, int]", 0.11414443567509652], ["Dict[str, Any]", 0.11414443567509652], ["List[str]", 0.11414443567509652], ["Dict[str, str]", 0.08401434739785645]], "pool_total": [["str", 0.3160449512629289], ["frozenset[int]", 0.13416786744888864], ["Mapping", 0.11514376462833853], ["Dict[str, str]", 0.08877706514549875]], "pools": [["cmk.utils.prediction.TimeSeries", 0.21192034354463593], ["dict", 0.09160480134257931], ["set", 0.0904478490034525]], "query": [["str", 0.4831413223484513], ["list", 0.10242369091934689]], "serialized_dag": [["dict", 0.35345303080090995], ["Dict[str, dict]", 0.0963906040135993], ["str", 0.08320945219311758]], "starved_dags": [["Set[str]", 0.7214866997586975], ["List[str]", 0.09555773705267355], ["Dict[str, Dict[str, Any]]", 0.0915143993764926], ["Dict[str, int]", 0.0914411638121364]], "starved_pools": [["str", 0.21006785514318574], ["list", 0.20324336199954207], ["types.SimpleNamespace", 0.18653353182163226], ["Dict[str, int]", 0.10601259211990048], ["dict", 0.10420377091590001], ["qutebrowser.utils.urlmatch.UrlPattern", 0.09646237262379856]], "starved_tasks": [["Dict[str, str]", 0.9064511311622885], ["str", 0.09354886883771156]], "starved_tasks_task_dagrun_concurrency": [["int", 0.3945934343475187], ["str", 0.09458367998905844]], "task_concurrency_limit": [["Optional[Dict[str, int]]", 0.1158077073214184], ["Set[str]", 0.10706995947344873], ["Dict[str, Any]", 0.08318992952370714], ["dere.evaluation.Result", 0.08215625236856824], ["List[None]", 0.08067799857124809]], "task_dagrun_concurrency_limit": [["dere.evaluation.Result", 0.13729691348552062], ["str", 0.09404323475487991], ["List[str]", 0.08695296330193687], ["Dict[str, Any]", 0.0859293858419138], ["dict", 0.07617469249912245]], "task_filter": [["functools.partial[Any]", 0.15059920428001233], ["dict", 0.12368163761660562], ["str", 0.12012922559499097], ["bytes", 0.08628658090972241], ["Dict[str, Any]", 0.0839173929702548]], "task_instance_str": [["str", 0.9006453651825927], ["int", 0.0993546348174071]], "task_instances_to_examine": [["list", 0.8281465468457367], ["str", 0.08397752866362028]], "timer": [["dict", 0.11387113901551166]]}}, {"docstring": {"func": "Enqueue task_instances which should have been set to queued with the executor.", "long_descr": null, "ret": null}, "fn_lc": [[619, 4], [645, 13]], "fn_var_ln": {"command": [[631, 12], [631, 19]], "priority": [[636, 12], [636, 20]], "queue": [[637, 12], [637, 17]]}, "fn_var_occur": {"command": [["command", "ti", "command_as_list", "local", "True", "pickle_id", "ti", "dag_model", "pickle_id"], ["self", "job", "executor", "queue_command", "ti", "command", "priority", "priority", "queue", "queue"]], "priority": [["priority", "ti", "priority_weight"], ["self", "log", "info", "ti", "key", "priority", "queue"], ["self", "job", "executor", "queue_command", "ti", "command", "priority", "priority", "queue", "queue"]], "queue": [["queue", "ti", "queue"], ["self", "log", "info", "ti", "key", "priority", "queue"], ["self", "job", "executor", "queue_command", "ti", "command", "priority", "priority", "queue", "queue"]]}, "name": "_enqueue_task_instances_with_queued_state", "params": {"self": "", "session": "sqlalchemy.orm.Session", "task_instances": "builtins.list[TI]"}, "params_descr": {"self": "", "session": "The session object", "task_instances": "TaskInstances to enqueue"}, "params_occur": {"self": [["self", "log", "info", "ti", "key", "priority", "queue"], ["self", "job", "executor", "queue_command", "ti", "command", "priority", "priority", "queue", "queue"]], "session": [["ti", "set_state", "State", "NONE", "session", "session"]], "task_instances": []}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.Session", 0.20343860548265813], ["Mapping[str, str]", 0.1028192972116994], ["services.user.transfer.models.User", 0.10271149437303406], ["Optional[Dict[str, Any]]", 0.10217242761681812], ["viewer.models.Archive", 0.10121090872101562], ["dict", 0.09986495594711907], ["models.user.User", 0.09716141060945847]], "task_instances": [["Dict[str, Any]", 0.21638677950271357], ["bool", 0.18638956430942827], ["cmk.utils.type_defs.HostName", 0.10839112529635728], ["List[annofabapi.models.Inspection]", 0.10558647551292946], ["List[str]", 0.08230853609082185]]}, "q_name": "SchedulerJobRunner._enqueue_task_instances_with_queued_state", "ret_exprs": [], "ret_type": "None", "variables": {"command": "", "priority": "", "queue": ""}, "variables_p": {"command": [["str", 0.30933676415936334], ["list", 0.282895278013959], ["bytes", 0.10687055586082303], ["Dict[str, Union[Any, Any]]", 0.10559703011233451], ["int", 0.10074876673029533], ["List[Dict[str, str]]", 0.09455160512322469]], "priority": [["str", 0.48057522180406953], ["dict", 0.34078415020613395]], "queue": [["str", 0.5037563046975378], ["dict", 0.27725588464009193]]}}, {"docstring": {"func": "Enqueues TaskInstances for execution.", "long_descr": "There are three steps:\n1. Pick TIs by priority with the constraint that they are in the expected states\nand that we do not exceed max_active_runs or pool limits.\n2. Change the state for the TIs above atomically.\n3. Enqueue the TIs in the executor.\n\nHA note: This function is a \"critical section\" meaning that only a single executor process can execute\nthis function at the same time. This is achieved by doing ``SELECT ... from pool FOR UPDATE``. For DBs\nthat support NOWAIT, a \"blocked\" scheduler will skip this and continue on with other tasks (creating\nnew DAG runs, progressing TIs from None to SCHEDULED etc.); DBs that don't support this (such as\nMariaDB or MySQL 5.x) the other schedulers will wait for the lock before continuing.", "ret": "Number of task instance with state changed."}, "fn_lc": [[647, 4], [673, 30]], "fn_var_ln": {"max_tis": [[669, 12], [669, 19]], "queued_tis": [[670, 8], [670, 18]]}, "fn_var_occur": {"max_tis": [["max_tis", "self", "job", "executor", "slots_available"], ["max_tis", "min", "self", "job", "max_tis_per_query", "self", "job", "executor", "slots_available"], ["queued_tis", "self", "_executable_task_instances_to_queued", "max_tis", "session", "session"]], "queued_tis": [["queued_tis", "self", "_executable_task_instances_to_queued", "max_tis", "session", "session"], ["self", "_enqueue_task_instances_with_queued_state", "queued_tis", "session", "session"], ["len", "queued_tis"]]}, "name": "_critical_section_enqueue_task_instances", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["self", "job", "max_tis_per_query"], ["max_tis", "self", "job", "executor", "slots_available"], ["max_tis", "min", "self", "job", "max_tis_per_query", "self", "job", "executor", "slots_available"], ["queued_tis", "self", "_executable_task_instances_to_queued", "max_tis", "session", "session"], ["self", "_enqueue_task_instances_with_queued_state", "queued_tis", "session", "session"]], "session": [["queued_tis", "self", "_executable_task_instances_to_queued", "max_tis", "session", "session"], ["self", "_enqueue_task_instances_with_queued_state", "queued_tis", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["grouper.models.user.User", 0.20438030254991965], ["django.db.models.query.QuerySet", 0.10388085167603393], ["serverwamp.session.WAMPSession", 0.10377316369876603], ["grouper.models.base.session.Session", 0.10219015127495983], ["app.db.session.Session", 0.10055446454149099], ["sqlalchemy.orm.Session", 0.09787302311615764], ["str", 0.09697307322845336], ["ajapaik.ajapaik.models.Profile", 0.09559932092646657], ["zerver.models.UserProfile", 0.0947756489877519]]}, "q_name": "SchedulerJobRunner._critical_section_enqueue_task_instances", "ret_exprs": ["return len(queued_tis)"], "ret_type": "builtins.int", "ret_type_p": [["str", 0.19728061715832607], ["bool", 0.1333727649940198], ["pathlib.Path", 0.1078661510273243], ["dict", 0.0895297179114985], ["bytes", 0.08639701586808188]], "variables": {"max_tis": "", "queued_tis": ""}, "variables_p": {"max_tis": [["int", 0.4085521417349428], ["float", 0.3468611459908374], ["str", 0.16016075392322485]], "queued_tis": [["dict", 0.19066599432001463], ["int", 0.18359999271114194], ["List[tuple]", 0.09592729329280623], ["OrderedDict", 0.09568253611485772], ["Dict[str, Any]", 0.09433801337314901]]}}, {"docstring": {"func": "Respond to executor events.", "long_descr": null, "ret": null}, "fn_lc": [[675, 4], [797, 32]], "fn_var_ln": {"_": [[686, 19], [686, 20]], "buffer_key": [[712, 12], [712, 22]], "dag": [[779, 20], [779, 23]], "event_buffer": [[680, 8], [680, 20]], "external_executor_id": [[716, 16], [716, 39]], "filter_for_tis": [[699, 8], [699, 22]], "info": [[713, 19], [713, 23]], "msg": [[771, 16], [771, 19]], "query": [[700, 8], [700, 13]], "request": [[787, 20], [787, 27]], "state": [[713, 12], [713, 17]], "task": [[785, 16], [785, 23]], "ti_primary_key_to_try_number_map": [[679, 8], [679, 40]], "ti_queued": [[760, 12], [760, 21]], "ti_requeued": [[761, 12], [761, 23]], "tis": [[709, 8], [709, 11]], "tis_with_right_state": [[681, 8], [681, 28]], "try_number": [[711, 12], [711, 22]]}, "fn_var_occur": {"_": [["state", "_", "value"]], "buffer_key": [["buffer_key", "ti", "key", "with_try_number", "try_number"], ["state", "info", "event_buffer", "pop", "buffer_key"], ["ti_queued", "ti", "try_number", "buffer_key", "try_number", "ti", "state", "TaskInstanceState", "QUEUED"]], "dag": [["dag", "self", "dagbag", "get_dag", "ti", "dag_id"], ["task", "dag", "get_task", "ti", "task_id"]], "event_buffer": [["event_buffer", "self", "job", "executor", "get_event_buffer"], ["event_buffer", "items"], ["len", "event_buffer"], ["state", "info", "event_buffer", "pop", "buffer_key"], ["len", "event_buffer"]], "external_executor_id": [["ti", "external_executor_id", "info"]], "filter_for_tis": [["filter_for_tis", "TI", "filter_for_tis", "tis_with_right_state"], ["query", "select", "TI", "where", "filter_for_tis", "options", "selectinload", "TI", "dag_model"]], "info": [["self", "log", "info", "state", "ti_key"], ["state", "info", "event_buffer", "pop", "buffer_key"], ["ti", "external_executor_id", "info"], ["self", "log", "info", "ti", "info"], ["self", "log", "info", "msg", "ti", "dag_id", "ti", "task_id", "ti", "run_id", "ti", "map_index", "ti", "start_date", "ti", "end_date", "ti", "duration", "ti", "state", "state", "try_number", "ti", "max_tries", "ti", "job_id", "ti", "pool", "ti", "queue", "ti", "priority_weight", "ti", "operator", "ti", "queued_dttm", "ti", "queued_by_job_id", "ti", "pid"], ["self", "log", "error", "msg", "ti", "state", "ti", "state", "info"], ["request", "TaskCallbackRequest", "full_filepath", "ti", "dag_model", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg", "msg", "ti", "state", "ti", "state", "info", "processor_subdir", "ti", "dag_model", "processor_subdir"], ["ti", "handle_failure", "error", "msg", "ti", "state", "ti", "state", "info", "session", "session"]], "msg": [["self", "log", "info", "msg", "ti", "dag_id", "ti", "task_id", "ti", "run_id", "ti", "map_index", "ti", "start_date", "ti", "end_date", "ti", "duration", "ti", "state", "state", "try_number", "ti", "max_tries", "ti", "job_id", "ti", "pool", "ti", "queue", "ti", "priority_weight", "ti", "operator", "ti", "queued_dttm", "ti", "queued_by_job_id", "ti", "pid"], ["self", "log", "error", "msg", "ti", "state", "ti", "state", "info"], ["request", "TaskCallbackRequest", "full_filepath", "ti", "dag_model", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg", "msg", "ti", "state", "ti", "state", "info", "processor_subdir", "ti", "dag_model", "processor_subdir"], ["ti", "handle_failure", "error", "msg", "ti", "state", "ti", "state", "info", "session", "session"]], "query": [["query", "select", "TI", "where", "filter_for_tis", "options", "selectinload", "TI", "dag_model"], ["tis", "typing", "Iterator", "TI", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"]], "request": [["request", "TaskCallbackRequest", "full_filepath", "ti", "dag_model", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg", "msg", "ti", "state", "ti", "state", "info", "processor_subdir", "ti", "dag_model", "processor_subdir"], ["self", "job", "executor", "send_callback", "request"]], "state": [["state", "builtins", "str"], ["state", "_", "value"], ["self", "log", "info", "state", "ti_key"], ["state", "State", "FAILED", "State", "SUCCESS", "State", "QUEUED"], ["state", "info", "event_buffer", "pop", "buffer_key"], ["state", "State", "QUEUED"], ["self", "log", "info", "msg", "ti", "dag_id", "ti", "task_id", "ti", "run_id", "ti", "map_index", "ti", "start_date", "ti", "end_date", "ti", "duration", "ti", "state", "state", "try_number", "ti", "max_tries", "ti", "job_id", "ti", "pool", "ti", "queue", "ti", "priority_weight", "ti", "operator", "ti", "queued_dttm", "ti", "queued_by_job_id", "ti", "pid"], ["ti_queued", "ti", "try_number", "buffer_key", "try_number", "ti", "state", "TaskInstanceState", "QUEUED"], ["self", "log", "error", "msg", "ti", "state", "ti", "state", "info"], ["self", "log", "exception", "ti", "state"], ["ti", "set_state", "state"], ["request", "TaskCallbackRequest", "full_filepath", "ti", "dag_model", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg", "msg", "ti", "state", "ti", "state", "info", "processor_subdir", "ti", "dag_model", "processor_subdir"], ["ti", "handle_failure", "error", "msg", "ti", "state", "ti", "state", "info", "session", "session"]], "task": [["task", "dag", "get_task", "ti", "task_id"], ["ti", "task", "task"], ["task", "on_retry_callback", "task", "on_failure_callback"]], "ti_primary_key_to_try_number_map": [["ti_primary_key_to_try_number_map", "builtins", "dict", "builtins", "tuple", "builtins", "str", "builtins", "str", "builtins", "str", "builtins", "int", "builtins", "int"], ["ti_primary_key_to_try_number_map", "ti_key", "primary", "ti_key", "try_number"], ["try_number", "ti_primary_key_to_try_number_map", "ti", "key", "primary"]], "ti_queued": [["ti_queued", "ti", "try_number", "buffer_key", "try_number", "ti", "state", "TaskInstanceState", "QUEUED"], ["ti_queued", "ti_requeued"]], "ti_requeued": [["ti_requeued", "ti", "queued_by_job_id", "self", "job", "id", "self", "job", "executor", "has_task", "ti"], ["ti_queued", "ti_requeued"]], "tis": [["tis", "typing", "Iterator", "TI", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["tis", "session", "scalars", "tis"]], "tis_with_right_state": [["tis_with_right_state", "builtins", "list", "airflow", "models", "taskinstance", "TaskInstanceKey"], ["tis_with_right_state", "append", "ti_key"], ["filter_for_tis", "TI", "filter_for_tis", "tis_with_right_state"]], "try_number": [["ti_primary_key_to_try_number_map", "ti_key", "primary", "ti_key", "try_number"], ["try_number", "ti_primary_key_to_try_number_map", "ti", "key", "primary"], ["buffer_key", "ti", "key", "with_try_number", "try_number"], ["self", "log", "info", "msg", "ti", "dag_id", "ti", "task_id", "ti", "run_id", "ti", "map_index", "ti", "start_date", "ti", "end_date", "ti", "duration", "ti", "state", "state", "try_number", "ti", "max_tries", "ti", "job_id", "ti", "pool", "ti", "queue", "ti", "priority_weight", "ti", "operator", "ti", "queued_dttm", "ti", "queued_by_job_id", "ti", "pid"], ["ti_queued", "ti", "try_number", "buffer_key", "try_number", "ti", "state", "TaskInstanceState", "QUEUED"]]}, "name": "_process_executor_events", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["self", "_standalone_dag_processor", "self", "processor_agent"], ["event_buffer", "self", "job", "executor", "get_event_buffer"], ["self", "log", "info", "state", "ti_key"], ["self", "log", "info", "ti", "info"], ["self", "log", "info", "msg", "ti", "dag_id", "ti", "task_id", "ti", "run_id", "ti", "map_index", "ti", "start_date", "ti", "end_date", "ti", "duration", "ti", "state", "state", "try_number", "ti", "max_tries", "ti", "job_id", "ti", "pool", "ti", "queue", "ti", "priority_weight", "ti", "operator", "ti", "queued_dttm", "ti", "queued_by_job_id", "ti", "pid"], ["ti_requeued", "ti", "queued_by_job_id", "self", "job", "id", "self", "job", "executor", "has_task", "ti"], ["self", "log", "error", "msg", "ti", "state", "ti", "state", "info"], ["dag", "self", "dagbag", "get_dag", "ti", "dag_id"], ["self", "log", "exception", "ti", "state"], ["self", "job", "executor", "send_callback", "request"]], "session": [["tis", "typing", "Iterator", "TI", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["tis", "session", "scalars", "tis"], ["ti", "handle_failure", "error", "msg", "ti", "state", "ti", "state", "info", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["grouper.models.base.session.Session", 0.13631052310535535], ["sqlalchemy.orm.Session", 0.13202643478610496], ["sqlalchemy.orm.session.Session", 0.10229900370203697], ["dict", 0.09490785498102104]]}, "q_name": "SchedulerJobRunner._process_executor_events", "ret_exprs": ["return len(event_buffer)", "return len(event_buffer)"], "ret_type": "builtins.int", "ret_type_p": [["Optional[int]", 0.2202493548014711], ["Mapping[str, Any]", 0.19063816490860072], ["purplship.core.models.TrackingRequest", 0.14215419044853547], ["cmk.utils.type_defs.HostAddress", 0.09032975737479446], ["cmk.utils.type_defs.HostName", 0.09032975737479446], ["Dict[str, Any]", 0.08966086402846156]], "variables": {"_": "", "buffer_key": "", "dag": "", "event_buffer": "", "external_executor_id": "", "filter_for_tis": "", "info": "", "msg": "", "query": "", "request": "", "state": "", "task": "", "ti_primary_key_to_try_number_map": "builtins.dict[builtins.tuple[builtins.str, builtins.str, builtins.str, builtins.int], builtins.int]", "ti_queued": "", "ti_requeued": "", "tis": "", "tis_with_right_state": "builtins.list[airflow.models.taskinstance.TaskInstanceKey]", "try_number": ""}, "variables_p": {"_": [["functools.partial[Any]", 0.2054796708485708], ["float", 0.17656007314476202], ["int", 0.17656007314476202], ["bool", 0.08828003657238101], ["frozenset[str]", 0.08828003657238101], ["List[str]", 0.08828003657238101], ["List[int]", 0.08828003657238101]], "buffer_key": [["multiprocessing.queues.Queue[Any]", 0.34703008009796105], ["bytes", 0.11865644333053316], ["str", 0.08524355731973197], ["Tuple[str, int]", 0.08384756600241057]], "dag": [], "event_buffer": [["int", 0.8592510854137763]], "external_executor_id": [["int", 0.728911182792147], ["str", 0.0740224048199995], ["Pattern[Any]", 0.04687165066193934], ["list", 0.02766092440002567]], "filter_for_tis": [["List[Tuple[Any, float]]", 0.2398625738689202], ["List[Tuple[str, bool, Any]]", 0.20532418395430843], ["int", 0.11152867335659172], ["List[Tuple[str, bool, str]]", 0.09504431136214056], ["str", 0.0829776256034364]], "info": [["str", 0.19675990341485128], ["List[str]", 0.09820221509412555], ["Tuple[int]", 0.0962171784268743]], "msg": [["str", 0.39494349457114125], ["Dict[int, str]", 0.120158194253908], ["Dict[str, str]", 0.11344289892730515], ["Dict[str, Union[Any, Any, Any, str]]", 0.10865670759307798], ["list", 0.08890371018698708], ["int", 0.08732501475212301]], "query": [["types.SimpleNamespace", 0.4283305382367465], ["types.signals.SignalHandlerRefT", 0.1162051006709533], ["set", 0.09444556441408439], ["Type[bool]", 0.08937743324704257], ["Dict[str, int]", 0.08622991470483955]], "request": [["excars.models.rides.RideRequest", 0.19162642309315178], ["kedro.framework.session.session.KedroSession", 0.11086021444875152], ["taskiapplication.models.task.Task", 0.08321726774155677]], "state": [["str", 1.0000000000000002]], "task": [["range", 0.19739594695034504], ["List[str]", 0.19739594695034504], ["str", 0.1295859921223958], ["List[Tuple[Any, str]]", 0.10899276731132891], ["Dict[str, Any]", 0.09063132089618278], ["list", 0.08666309722846813], ["dict", 0.08444185004725524]], "ti_primary_key_to_try_number_map": [["Dict[str, Optional[str]]", 0.25632415575213136], ["Dict[str, Any]", 0.1834720211907767], ["dict", 0.1834720211907767], ["KeysView[str]", 0.10201364172493581], ["OrderedDict[str, str]", 0.09322324779201521], ["Dict[str, str]", 0.09173601059538836], ["List[str]", 0.08975890175397584]], "ti_queued": [["guillotina.db.interfaces.ITransaction", 0.18836803882233852], ["Tuple[str, str]", 0.10880878770956848], ["Tuple[str, str, str, str, str]", 0.10880878770956848], ["float", 0.10489610577652705], ["types.SimpleNamespace", 0.09385400608692906], ["dict", 0.09334667533109418]], "ti_requeued": [["vjemmie.utils.voting.VotingSession", 0.11118449338658369], ["float", 0.1000920881706909]], "tis": [["str", 0.191155802946143], ["DefaultDict[str, Set[str]]", 0.13088783491890327], ["datetime.timedelta", 0.1033516939462615], ["int", 0.09801147306796111]], "tis_with_right_state": [["list", 0.9060654902724284], ["dict", 0.09393450972757149]], "try_number": [["dict", 0.46423072415572275], ["Dict[str, float]", 0.1697422622922641], ["str", 0.09100982610564078]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[799, 4], [879, 19]], "fn_var_ln": {"_": [[804, 24], [804, 25]], "async_mode": [[813, 8], [813, 18]], "execute_start_time": [[847, 12], [847, 30]], "executor_class": [[804, 8], [804, 22]], "pickle_dags": [[807, 8], [807, 19]], "processor_agent": [[818, 12], [818, 32]], "processor_timeout": [[816, 8], [816, 25]], "processor_timeout_seconds": [[815, 8], [815, 33]]}, "fn_var_occur": {"_": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"]], "async_mode": [["async_mode", "self", "using_sqlite"], ["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "Path", "self", "subdir", "max_runs", "self", "num_times_parse_dags", "processor_timeout", "processor_timeout", "dag_ids", "pickle_dags", "pickle_dags", "async_mode", "async_mode"]], "execute_start_time": [["execute_start_time", "timezone", "utcnow"], ["self", "log", "info", "execute_start_time", "isoformat"], ["DAG", "deactivate_stale_dags", "execute_start_time"]], "executor_class": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"], ["pickle_dags", "self", "do_pickle", "executor_class", "supports_pickling"]], "pickle_dags": [["pickle_dags", "self", "do_pickle", "executor_class", "supports_pickling"], ["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "Path", "self", "subdir", "max_runs", "self", "num_times_parse_dags", "processor_timeout", "processor_timeout", "dag_ids", "pickle_dags", "pickle_dags", "async_mode", "async_mode"]], "processor_agent": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "Path", "self", "subdir", "max_runs", "self", "num_times_parse_dags", "processor_timeout", "processor_timeout", "dag_ids", "pickle_dags", "pickle_dags", "async_mode", "async_mode"], ["self", "processor_agent"], ["self", "job", "executor", "callback_sink", "PipeCallbackSink", "get_sink_pipe", "self", "processor_agent", "get_callbacks_pipe"], ["self", "processor_agent"], ["self", "processor_agent", "start"], ["self", "processor_agent"], ["self", "processor_agent", "terminate"], ["self", "processor_agent", "all_files_processed"], ["self", "processor_agent"], ["self", "processor_agent", "end"]], "processor_timeout": [["processor_timeout", "timedelta", "seconds", "processor_timeout_seconds"], ["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "Path", "self", "subdir", "max_runs", "self", "num_times_parse_dags", "processor_timeout", "processor_timeout", "dag_ids", "pickle_dags", "pickle_dags", "async_mode", "async_mode"]], "processor_timeout_seconds": [["processor_timeout_seconds", "builtins", "int", "conf", "getint"], ["processor_timeout", "timedelta", "seconds", "processor_timeout_seconds"]]}, "name": "_execute", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "log", "info"], ["pickle_dags", "self", "do_pickle", "executor_class", "supports_pickling"], ["self", "log", "info", "self", "num_times_parse_dags"], ["async_mode", "self", "using_sqlite"], ["self", "_standalone_dag_processor"], ["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "Path", "self", "subdir", "max_runs", "self", "num_times_parse_dags", "processor_timeout", "processor_timeout", "dag_ids", "pickle_dags", "pickle_dags", "async_mode", "async_mode"], ["self", "job", "executor", "job_id", "self", "job", "id"], ["self", "processor_agent"], ["self", "log", "debug"], ["self", "job", "executor", "callback_sink", "PipeCallbackSink", "get_sink_pipe", "self", "processor_agent", "get_callbacks_pipe"], ["self", "log", "debug"], ["self", "job", "executor", "callback_sink", "DatabaseCallbackSink"], ["self", "job", "executor", "start"], ["self", "register_signals"], ["self", "processor_agent"], ["self", "processor_agent", "start"], ["self", "_run_scheduler_loop"], ["self", "processor_agent"], ["self", "processor_agent", "terminate"], ["self", "processor_agent", "all_files_processed"], ["self", "log", "info", "execute_start_time", "isoformat"], ["self", "log", "exception"], ["self", "job", "executor", "end"], ["self", "log", "exception"], ["self", "processor_agent"], ["self", "processor_agent", "end"], ["self", "log", "exception"], ["self", "log", "info"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner._execute", "ret_exprs": ["return None"], "ret_type": "int | None", "ret_type_p": [["Optional[str]", 0.4816687749178866], ["str", 0.26383859750931377], ["Optional[int]", 0.08090181913493612]], "variables": {"_": "", "async_mode": "", "execute_start_time": "", "executor_class": "", "pickle_dags": "", "processor_agent": "", "processor_timeout": "", "processor_timeout_seconds": "builtins.int"}, "variables_p": {"_": [["str", 0.6986583503136683], ["Callable(os.path.join)[..., Any][[[Named(a, Union[_PathLike[str], str]), Variable(Union[_PathLike[str], str])], str][Any, Any]]", 0.21449626573549865], ["float", 0.08684538395083312]], "async_mode": [["str", 0.5095572648883302], ["int", 0.49044273511166975]], "execute_start_time": [["int", 0.5179721921391164], ["datetime.datetime", 0.2965459807286964], ["float", 0.09373524838612331], ["str", 0.0917465787460639]], "executor_class": [["str", 1.0]], "pickle_dags": [["str", 1.0]], "processor_agent": [["int", 0.6828926541487957], ["str", 0.2045937640599423], ["float", 0.11251358179126217]], "processor_timeout": [["float", 0.21348094216680974], ["List[str]", 0.17941353660361345], ["dict", 0.117400382719434]], "processor_timeout_seconds": [["int", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[882, 4], [906, 98]], "fn_var_ln": {"_": [[902, 16], [902, 17]], "callback_to_run": [[902, 19], [902, 34]], "dag": [[901, 16], [901, 27]], "paused_runs": [[884, 12], [884, 23]]}, "fn_var_occur": {"_": [["_", "callback_to_run", "dag_run", "update_state", "execute_callbacks", "False", "session", "session"]], "callback_to_run": [["_", "callback_to_run", "dag_run", "update_state", "execute_callbacks", "False", "session", "session"], ["self", "_send_dag_callbacks_to_processor", "dag", "callback_to_run"]], "dag": [["dag", "self", "dagbag", "get_dag", "dag_run", "dag_id", "session", "session"], ["dag", "None"], ["dag_run", "dag", "dag"], ["self", "_send_dag_callbacks_to_processor", "dag", "callback_to_run"]], "paused_runs": [["paused_runs", "session", "scalars", "select", "DagRun", "join", "DagRun", "dag_model", "join", "TI", "where", "DagModel", "is_paused", "expression", "true", "DagRun", "state", "DagRunState", "RUNNING", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "having", "DagRun", "last_scheduling_decision", "func", "max", "TI", "updated_at", "group_by", "DagRun"]]}, "name": "_update_dag_run_state_for_paused_dags", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["dag", "self", "dagbag", "get_dag", "dag_run", "dag_id", "session", "session"], ["self", "_send_dag_callbacks_to_processor", "dag", "callback_to_run"], ["self", "log", "exception", "str", "e"]], "session": [["paused_runs", "session", "scalars", "select", "DagRun", "join", "DagRun", "dag_model", "join", "TI", "where", "DagModel", "is_paused", "expression", "true", "DagRun", "state", "DagRunState", "RUNNING", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "having", "DagRun", "last_scheduling_decision", "func", "max", "TI", "updated_at", "group_by", "DagRun"], ["dag", "self", "dagbag", "get_dag", "dag_run", "dag_id", "session", "session"], ["_", "callback_to_run", "dag_run", "update_state", "execute_callbacks", "False", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["eth.db.backends.base.BaseDB", 0.21046787425420593], ["dict", 0.18350151932243608], ["fal.models.Season", 0.13014520173848412], ["str", 0.08939164162403468], ["viewer.models.Archive", 0.08879086496795457]]}, "q_name": "SchedulerJobRunner._update_dag_run_state_for_paused_dags", "ret_exprs": [], "ret_type": "None", "variables": {"_": "", "callback_to_run": "", "dag": "", "paused_runs": ""}, "variables_p": {"_": [["raiden.utils.FeeAmount", 0.09134435045214531]], "callback_to_run": [["int", 0.20465545350276637], ["list", 0.10602351603120258], ["str", 0.08241476770199098]], "dag": [["list", 0.18983809995830636], ["bool", 0.17746264433517644], ["str", 0.16797387327714491], ["buza.models.Subject", 0.11532319290828025], ["List[dict]", 0.07996687605990256], ["Union[Literal, Literal]", 0.07970036950005725]], "paused_runs": [["List[dict]", 0.1046651770729179], ["str", 0.09841977398961903], ["Dict[str, Any]", 0.09276004811088558], ["Tuple[str, str, str, str, str]", 0.09228299571838633]]}}, {"docstring": {"func": "The actual scheduler loop.", "long_descr": "The main steps in the loop are:\n    #. Harvest DAG parsing results through DagFileProcessorAgent\n    #. Find and queue executable tasks\n        #. Change task instance state in DB\n        #. Queue tasks in executor\n    #. Heartbeat executor\n        #. Execute queued tasks in executor asynchronously\n        #. Sync on the states of running tasks\n\nFollowing is a graphic representation of these steps.\n\n.. image:: ../docs/apache-airflow/img/scheduler_loop.jpg", "ret": null}, "fn_lc": [[908, 4], [1022, 21]], "fn_var_ln": {"is_unit_test": [[928, 8], [928, 20]], "next_event": [[997, 16], [997, 26]], "num_finished_events": [[987, 20], [987, 39]], "num_queued_tis": [[983, 20], [983, 34]], "timers": [[930, 8], [930, 14]]}, "fn_var_occur": {"is_unit_test": [["is_unit_test", "builtins", "bool", "conf", "getboolean"], ["is_unit_test", "num_queued_tis", "num_finished_events"]], "next_event": [["next_event", "timers", "run", "blocking", "False"], ["self", "log", "debug", "next_event"], ["time", "sleep", "min", "self", "_scheduler_idle_sleep_time", "next_event", "next_event"]], "num_finished_events": [["num_finished_events", "self", "_process_executor_events", "session", "session"], ["is_unit_test", "num_queued_tis", "num_finished_events"]], "num_queued_tis": [["num_queued_tis", "self", "_do_scheduling", "session"], ["is_unit_test", "num_queued_tis", "num_finished_events"]], "timers": [["timers", "EventScheduler"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "adopt_or_reset_orphaned_tasks"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "check_trigger_timeouts"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "_emit_pool_metrics"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "_find_zombies"], ["timers", "call_regular_interval", "self", "_update_dag_run_state_for_paused_dags"], ["timers", "call_regular_interval", "conf", "getfloat", "self", "_fail_tasks_stuck_in_queued"], ["timers", "call_regular_interval", "conf", "getfloat", "self", "_orphan_unreferenced_datasets"], ["timers", "call_regular_interval", "conf", "getfloat", "self", "_cleanup_stale_dags"], ["next_event", "timers", "run", "blocking", "False"]]}, "name": "_run_scheduler_loop", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "processor_agent", "self", "_standalone_dag_processor"], ["self", "adopt_or_reset_orphaned_tasks"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "adopt_or_reset_orphaned_tasks"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "check_trigger_timeouts"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "_emit_pool_metrics"], ["timers", "call_regular_interval", "conf", "getfloat", "fallback", "self", "_find_zombies"], ["timers", "call_regular_interval", "self", "_update_dag_run_state_for_paused_dags"], ["timers", "call_regular_interval", "conf", "getfloat", "self", "_fail_tasks_stuck_in_queued"], ["timers", "call_regular_interval", "conf", "getfloat", "self", "_orphan_unreferenced_datasets"], ["self", "_standalone_dag_processor"], ["timers", "call_regular_interval", "conf", "getfloat", "self", "_cleanup_stale_dags"], ["self", "using_sqlite", "self", "processor_agent"], ["self", "processor_agent", "run_single_parsing_loop"], ["self", "log", "debug"], ["self", "processor_agent", "wait_until_finished"], ["num_queued_tis", "self", "_do_scheduling", "session"], ["self", "job", "executor", "heartbeat"], ["num_finished_events", "self", "_process_executor_events", "session", "session"], ["self", "processor_agent"], ["self", "processor_agent", "heartbeat"], ["perform_heartbeat", "job", "self", "job", "heartbeat_callback", "self", "heartbeat_callback", "only_if_necessary", "True"], ["self", "log", "debug", "next_event"], ["self", "log", "debug", "timer", "duration"], ["time", "sleep", "min", "self", "_scheduler_idle_sleep_time", "next_event", "next_event"], ["loop_count", "self", "num_runs"], ["self", "log", "info", "self", "num_runs", "loop_count"], ["self", "processor_agent", "self", "processor_agent", "done"], ["self", "log", "info", "self", "num_times_parse_dags", "loop_count"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner._run_scheduler_loop", "ret_exprs": [], "ret_type": "None", "variables": {"is_unit_test": "builtins.bool", "next_event": "", "num_finished_events": "", "num_queued_tis": "", "timers": ""}, "variables_p": {"is_unit_test": [["bool", 1.0]], "next_event": [["str", 0.411246333232972], ["List[List[str]]", 0.08433059795230195]], "num_finished_events": [["str", 0.42636576186779973], ["int", 0.17466056837948668], ["List[float]", 0.11169798720478064], ["Union[bytes, str]", 0.09309377247202655], ["datetime.datetime.timedelta", 0.08663869920261599]], "num_queued_tis": [["float", 0.3807876877394411]], "timers": []}}, {"docstring": {"func": "This function is where the main scheduling decisions take places.", "long_descr": "It:\n- Creates any necessary DAG runs by examining the next_dagrun_create_after column of DagModel\n\n  Since creating Dag Runs is a relatively time consuming process, we select only 10 dags by default\n  (configurable via ``scheduler.max_dagruns_to_create_per_loop`` setting) - putting this higher will\n  mean one scheduler could spend a chunk of time creating dag runs, and not ever get around to\n  scheduling tasks.\n\n- Finds the \"next n oldest\" running DAG Runs to examine for scheduling (n=20 by default, configurable\n  via ``scheduler.max_dagruns_per_loop_to_schedule`` config setting) and tries to progress state (TIs\n  to SCHEDULED, or DagRuns to SUCCESS/FAILURE etc)\n\n  By \"next oldest\", we mean hasn't been examined/scheduled in the most time.\n\n  We don't select all dagruns at once, because the rows are selected with row locks, meaning\n  that only one scheduler can \"process them\", even it is waiting behind other dags. Increasing this\n  limit will allow more throughput for smaller DAGs but will likely slow down throughput for larger\n  (>500 tasks.) DAGs\n\n- Then, via a Critical Section (locking the rows of the Pool model) we queue tasks, and then send them\n  to the executor.\n\n  See docs of _critical_section_enqueue_task_instances for more.", "ret": "Number of TIs enqueued in this iteration"}, "fn_lc": [[1024, 4], [1114, 29]], "fn_var_ln": {"cached_get_dag": [[1069, 8], [1069, 22]], "callback_tuples": [[1065, 12], [1065, 27]], "dag": [[1073, 12], [1073, 15]], "dag_runs": [[1061, 12], [1061, 20]], "num_queued_tis": [[1097, 20], [1097, 34]], "timer": [[1093, 20], [1093, 25]]}, "fn_var_occur": {"cached_get_dag": [["cached_get_dag", "typing", "Callable", "builtins", "str", "DAG", "None", "lru_cache", "partial", "self", "dagbag", "get_dag", "session", "session"], ["dag", "cached_get_dag", "dag_run", "dag_id"]], "callback_tuples": [["callback_tuples", "self", "_schedule_all_dag_runs", "guard", "dag_runs", "session"]], "dag": [["dag", "cached_get_dag", "dag_run", "dag_id"], ["self", "_send_dag_callbacks_to_processor", "dag", "callback_to_run"]], "dag_runs": [["dag_runs", "self", "_get_next_dagruns_to_examine", "DagRunState", "RUNNING", "session"], ["callback_tuples", "self", "_schedule_all_dag_runs", "guard", "dag_runs", "session"]], "num_queued_tis": [["num_queued_tis", "self", "_critical_section_enqueue_task_instances", "session", "session"]], "timer": [["timer", "Stats", "timer"], ["timer", "start"], ["timer", "stop", "send", "True"], ["timer", "stop", "send", "False"]]}, "name": "_do_scheduling", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["self", "_create_dagruns_for_dags", "guard", "session"], ["self", "_start_queued_dagruns", "session"], ["dag_runs", "self", "_get_next_dagruns_to_examine", "DagRunState", "RUNNING", "session"], ["callback_tuples", "self", "_schedule_all_dag_runs", "guard", "dag_runs", "session"], ["cached_get_dag", "typing", "Callable", "builtins", "str", "DAG", "None", "lru_cache", "partial", "self", "dagbag", "get_dag", "session", "session"], ["self", "log", "error", "dag_run", "dag_id"], ["self", "_send_dag_callbacks_to_processor", "dag", "callback_to_run"], ["self", "job", "executor", "slots_available"], ["self", "log", "debug"], ["num_queued_tis", "self", "_critical_section_enqueue_task_instances", "session", "session"], ["self", "log", "debug"]], "session": [["prohibit_commit", "session", "guard"], ["self", "_create_dagruns_for_dags", "guard", "session"], ["self", "_start_queued_dagruns", "session"], ["dag_runs", "self", "_get_next_dagruns_to_examine", "DagRunState", "RUNNING", "session"], ["callback_tuples", "self", "_schedule_all_dag_runs", "guard", "dag_runs", "session"], ["cached_get_dag", "typing", "Callable", "builtins", "str", "DAG", "None", "lru_cache", "partial", "self", "dagbag", "get_dag", "session", "session"], ["prohibit_commit", "session", "guard"], ["session", "expunge_all"], ["num_queued_tis", "self", "_critical_section_enqueue_task_instances", "session", "session"], ["session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["grouper.models.user.User", 0.21308753150165388], ["grouper.models.base.session.Session", 0.10654376575082694], ["sqlalchemy.orm.session.Session", 0.1020281957180104], ["int", 0.10120389626219957], ["grouper.settings.Settings", 0.0996147962925029], ["yawasscanner.session.Session", 0.09208597618448738], ["str", 0.08983857634938396]]}, "q_name": "SchedulerJobRunner._do_scheduling", "ret_exprs": ["return 0", "return num_queued_tis"], "ret_type": "builtins.int", "ret_type_p": [["int", 0.3402938059428254], ["List[List[int]]", 0.19353720931234286], ["List[str]", 0.1807647457772789], ["List[int]", 0.09398975200259083], ["str", 0.09332181660207592]], "variables": {"cached_get_dag": "typing.Callable[[builtins.str], DAG | None]", "callback_tuples": "", "dag": "", "dag_runs": "", "num_queued_tis": "", "timer": ""}, "variables_p": {"cached_get_dag": [["Iterator[str]", 0.21671861983083468], ["str", 0.17277415957576245], ["Iterable[str]", 0.09574992029860636], ["Type[str]", 0.08838123555515252], ["Container[Container[float]]", 0.08386553369836955], ["Set[Set[T]]", 0.08386553369836955], ["Set[Set[Any]]", 0.08386553369836955]], "callback_tuples": [["Dict[str, str]", 0.19999999999999998], ["List[Tuple[str, str, Any]]", 0.19999999999999998], ["str", 0.19999999999999998], ["Dict[str, Union[dict, Any]]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "dag": [["str", 1.0]], "dag_runs": [["dict", 0.307182926408911], ["Dict[str, str]", 0.21668663977107644]], "num_queued_tis": [["int", 0.2749637708759807], ["bytearray", 0.09776086967926047], ["str", 0.09481363574748494], ["Dict[str, Any]", 0.09296208828960606]], "timer": [["dict", 0.11387113901551166]]}}, {"docstring": {"func": "Get Next DagRuns to Examine with retries.", "long_descr": null, "ret": null}, "fn_lc": [[1117, 4], [1119, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_next_dagruns_to_examine", "params": {"self": "", "session": "sqlalchemy.orm.Session", "state": "airflow.utils.state.DagRunState"}, "params_descr": {"self": "", "session": "", "state": ""}, "params_occur": {"self": [], "session": [["DagRun", "next_dagruns_to_examine", "state", "session"]], "state": [["DagRun", "next_dagruns_to_examine", "state", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["str", 0.27868208800670635], ["Set[str]", 0.18992963124434584], ["Sequence", 0.11711573046602508], ["Dict[str, int]", 0.08897452263281223], ["int", 0.07909681954685568]], "state": [["str", 0.27868208800670635], ["Set[str]", 0.18992963124434584], ["Sequence", 0.11711573046602508], ["Dict[str, int]", 0.08897452263281223], ["int", 0.07909681954685568]]}, "q_name": "SchedulerJobRunner._get_next_dagruns_to_examine", "ret_exprs": ["return DagRun.next_dagruns_to_examine(state, session)"], "ret_type": "sqlalchemy.orm.Query", "ret_type_p": [["str", 0.10135657334651302], ["dict", 0.09765599280605945]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Find Dag Models needing DagRuns and Create Dag Runs with retries in case of OperationalError.", "long_descr": null, "ret": null}, "fn_lc": [[1122, 4], [1137, 22]], "fn_var_ln": {"all_dags_needing_dag_runs": [[1125, 8], [1125, 33]], "dataset_triggered_dag_info": [[1124, 15], [1124, 41]], "dataset_triggered_dags": [[1126, 8], [1126, 30]], "non_dataset_dags": [[1129, 8], [1129, 24]], "query": [[1124, 8], [1124, 13]]}, "fn_var_occur": {"all_dags_needing_dag_runs": [["all_dags_needing_dag_runs", "set", "query", "all"], ["dataset_triggered_dags", "dag", "dag", "all_dags_needing_dag_runs", "dag", "dag_id", "dataset_triggered_dag_info"], ["non_dataset_dags", "all_dags_needing_dag_runs", "difference", "dataset_triggered_dags"]], "dataset_triggered_dag_info": [["query", "dataset_triggered_dag_info", "DagModel", "dags_needing_dagruns", "session"], ["dataset_triggered_dags", "dag", "dag", "all_dags_needing_dag_runs", "dag", "dag_id", "dataset_triggered_dag_info"], ["self", "_create_dag_runs_dataset_triggered", "dataset_triggered_dags", "dataset_triggered_dag_info", "session"]], "dataset_triggered_dags": [["dataset_triggered_dags", "dag", "dag", "all_dags_needing_dag_runs", "dag", "dag_id", "dataset_triggered_dag_info"], ["non_dataset_dags", "all_dags_needing_dag_runs", "difference", "dataset_triggered_dags"], ["self", "_create_dag_runs_dataset_triggered", "dataset_triggered_dags", "dataset_triggered_dag_info", "session"]], "non_dataset_dags": [["non_dataset_dags", "all_dags_needing_dag_runs", "difference", "dataset_triggered_dags"], ["self", "_create_dag_runs", "non_dataset_dags", "session"]], "query": [["query", "dataset_triggered_dag_info", "DagModel", "dags_needing_dagruns", "session"], ["all_dags_needing_dag_runs", "set", "query", "all"]]}, "name": "_create_dagruns_for_dags", "params": {"guard": "airflow.utils.sqlalchemy.CommitProhibitorGuard", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"guard": "", "self": "", "session": ""}, "params_occur": {"guard": [["guard", "commit"]], "self": [["self", "_create_dag_runs", "non_dataset_dags", "session"], ["self", "_create_dag_runs_dataset_triggered", "dataset_triggered_dags", "dataset_triggered_dag_info", "session"]], "session": [["query", "dataset_triggered_dag_info", "DagModel", "dags_needing_dagruns", "session"], ["self", "_create_dag_runs", "non_dataset_dags", "session"], ["self", "_create_dag_runs_dataset_triggered", "dataset_triggered_dags", "dataset_triggered_dag_info", "session"]]}, "params_p": {"args": [], "guard": [["bool", 0.364182055749793], ["str", 0.1990711860648562], ["bytes", 0.07356820954356319], ["int", 0.07356820954356319], ["Dict[str, Any]", 0.07212744492115432], ["sqlalchemy.orm.Session", 0.07167280305829198]], "kwargs": [], "self": [], "session": [["tracim.models.data.Content", 0.5722210213137784]]}, "q_name": "SchedulerJobRunner._create_dagruns_for_dags", "ret_exprs": [], "ret_type": "None", "variables": {"all_dags_needing_dag_runs": "", "dataset_triggered_dag_info": "", "dataset_triggered_dags": "", "non_dataset_dags": "", "query": ""}, "variables_p": {"all_dags_needing_dag_runs": [["list", 0.35857113395676976], ["set", 0.24420912914251267], ["Set[str]", 0.1535924389479545], ["Dict[int, Any]", 0.08794312050562639], ["str", 0.08170560932602798], ["List[int]", 0.07397856812110877]], "dataset_triggered_dag_info": [["str", 0.2916386614223396], ["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.18119640426239356], ["Dict[str, int]", 0.0957862672345213]], "dataset_triggered_dags": [["List[str]", 0.284979297659216], ["cmk.utils.crash_reporting.ABCCrashReport", 0.09218525153184595]], "non_dataset_dags": [["int", 0.09618521533772863]], "query": [["str", 0.13068297096415651]]}}, {"docstring": {"func": "Unconditionally create a DAG run for the given DAG, and update the dag_model's fields to control", "long_descr": "if/when the next DAGRun should be created.", "ret": null}, "fn_lc": [[1140, 4], [1198, 74]], "fn_var_ln": {"active_runs_of_dags": [[1162, 8], [1162, 27]], "dag": [[1167, 12], [1167, 15]], "dag_hash": [[1172, 12], [1172, 20]], "data_interval": [[1174, 12], [1174, 25]], "existing_dagruns": [[1149, 8], [1149, 24]]}, "fn_var_occur": {"active_runs_of_dags": [["active_runs_of_dags", "Counter", "DagRun", "active_runs_of_dags", "dag_ids", "dm", "dag_id", "dm", "dag_models", "session", "session"], ["active_runs_of_dags", "dag", "dag_id"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "active_runs_of_dags", "dag", "dag_id", "session", "session"]], "dag": [["dag", "self", "dagbag", "get_dag", "dag_model", "dag_id", "session", "session"], ["dag_hash", "self", "dagbag", "dags_hash", "get", "dag", "dag_id"], ["data_interval", "dag", "get_next_data_interval", "dag_model"], ["dag", "dag_id", "dag_model", "next_dagrun", "existing_dagruns"], ["dag", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "dag_model", "next_dagrun", "state", "DagRunState", "QUEUED", "data_interval", "data_interval", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"], ["active_runs_of_dags", "dag", "dag_id"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "active_runs_of_dags", "dag", "dag_id", "session", "session"], ["dag_model", "calculate_dagrun_date_fields", "dag", "data_interval"]], "dag_hash": [["dag_hash", "self", "dagbag", "dags_hash", "get", "dag", "dag_id"], ["dag", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "dag_model", "next_dagrun", "state", "DagRunState", "QUEUED", "data_interval", "data_interval", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"]], "data_interval": [["data_interval", "dag", "get_next_data_interval", "dag_model"], ["dag", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "dag_model", "next_dagrun", "state", "DagRunState", "QUEUED", "data_interval", "data_interval", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"], ["dag_model", "calculate_dagrun_date_fields", "dag", "data_interval"]], "existing_dagruns": [["existing_dagruns", "session", "execute", "select", "DagRun", "dag_id", "DagRun", "execution_date", "where", "tuple_in_condition", "DagRun", "dag_id", "DagRun", "execution_date", "dm", "dag_id", "dm", "next_dagrun", "dm", "dag_models", "unique", "all"], ["dag", "dag_id", "dag_model", "next_dagrun", "existing_dagruns"]]}, "name": "_create_dag_runs", "params": {"dag_models": "typing.Collection[airflow.models.dag.DagModel]", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_models": "", "self": "", "session": ""}, "params_occur": {"dag_models": [["existing_dagruns", "session", "execute", "select", "DagRun", "dag_id", "DagRun", "execution_date", "where", "tuple_in_condition", "DagRun", "dag_id", "DagRun", "execution_date", "dm", "dag_id", "dm", "next_dagrun", "dm", "dag_models", "unique", "all"], ["active_runs_of_dags", "Counter", "DagRun", "active_runs_of_dags", "dag_ids", "dm", "dag_id", "dm", "dag_models", "session", "session"]], "self": [["dag", "self", "dagbag", "get_dag", "dag_model", "dag_id", "session", "session"], ["self", "log", "error", "dag_model", "dag_id"], ["dag_hash", "self", "dagbag", "dags_hash", "get", "dag", "dag_id"], ["dag", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "dag_model", "next_dagrun", "state", "DagRunState", "QUEUED", "data_interval", "data_interval", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "active_runs_of_dags", "dag", "dag_id", "session", "session"]], "session": [["existing_dagruns", "session", "execute", "select", "DagRun", "dag_id", "DagRun", "execution_date", "where", "tuple_in_condition", "DagRun", "dag_id", "DagRun", "execution_date", "dm", "dag_id", "dm", "next_dagrun", "dm", "dag_models", "unique", "all"], ["active_runs_of_dags", "Counter", "DagRun", "active_runs_of_dags", "dag_ids", "dm", "dag_id", "dm", "dag_models", "session", "session"], ["dag", "self", "dagbag", "get_dag", "dag_model", "dag_id", "session", "session"], ["dag", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "dag_model", "next_dagrun", "state", "DagRunState", "QUEUED", "data_interval", "data_interval", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "active_runs_of_dags", "dag", "dag_id", "session", "session"]]}, "params_p": {"args": [], "dag_models": [["str", 0.19091597886562334], ["bool", 0.11112116642968348], ["zerver.models.UserProfile", 0.10990150662995775], ["tracim.models.auth.User", 0.10130578925910803], ["server.models.User", 0.09576106798025102], ["Dict[Hashable, Any]", 0.09545798943281167]], "kwargs": [], "self": [], "session": [["str", 0.19091597886562334], ["bool", 0.11112116642968348], ["zerver.models.UserProfile", 0.10990150662995775], ["tracim.models.auth.User", 0.10130578925910803], ["server.models.User", 0.09576106798025102], ["Dict[Hashable, Any]", 0.09545798943281167]]}, "q_name": "SchedulerJobRunner._create_dag_runs", "ret_exprs": [], "ret_type": "None", "variables": {"active_runs_of_dags": "", "dag": "", "dag_hash": "", "data_interval": "", "existing_dagruns": ""}, "variables_p": {"active_runs_of_dags": [["str", 0.6335421456468453], ["Optional[str]", 0.16680093778747565], ["Dict[str, str]", 0.08531897068936696]], "dag": [["Dict[str, Any]", 0.15919421916005658], ["int", 0.15733817454908788], ["tartare.core.models.Coverage", 0.08913490302934074], ["Dict[str, str]", 0.08835999441641212], ["tuple", 0.07754270802014127], ["str", 0.07299258452315735]], "dag_hash": [["str", 0.8123075592205902], ["busboy.util.Maybe[datetime.datetime]", 0.09818766259522924], ["Dict[str, str]", 0.0895047781841805]], "data_interval": [["str", 0.21076533057686267], ["cmk.base.api.agent_based.checking_classes.state", 0.09998649061741105]], "existing_dagruns": [["str", 0.42816554140648855], ["List[str]", 0.12811866748037345], ["int", 0.08728957006605682], ["byceps.services.user.transfer.models.User", 0.08359366864823066]]}}, {"docstring": {"func": "For DAGs that are triggered by datasets, create dag runs.", "long_descr": null, "ret": null}, "fn_lc": [[1202, 4], [1301, 17]], "fn_var_ln": {"dag": [[1226, 12], [1226, 15]], "dag_hash": [[1238, 12], [1238, 20]], "dag_run": [[1286, 16], [1286, 23]], "data_interval": [[1277, 16], [1277, 29]], "dataset_event_filters": [[1260, 16], [1260, 37]], "dataset_events": [[1267, 16], [1267, 30]], "exec_date": [[1248, 12], [1248, 21]], "exec_dates": [[1213, 8], [1213, 18]], "existing_dagruns": [[1217, 8], [1217, 24]], "previous_dag_run": [[1250, 16], [1250, 32]], "run_id": [[1278, 16], [1278, 22]]}, "fn_var_occur": {"dag": [["dag", "self", "dagbag", "get_dag", "dag_model", "dag_id", "session", "session"], ["isinstance", "dag", "timetable", "DatasetTriggeredTimetable"], ["dag_hash", "self", "dagbag", "dags_hash", "get", "dag", "dag_id"], ["exec_date", "exec_dates", "dag", "dag_id"], ["dag", "dag_id", "exec_date", "existing_dagruns"], ["previous_dag_run", "session", "scalar", "select", "DagRun", "where", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "exec_date", "DagRun", "run_type", "DagRunType", "DATASET_TRIGGERED", "order_by", "DagRun", "execution_date", "desc", "limit"], ["dataset_event_filters", "DagScheduleDatasetReference", "dag_id", "dag", "dag_id", "DatasetEvent", "timestamp", "exec_date"], ["data_interval", "dag", "timetable", "data_interval_for_events", "exec_date", "dataset_events"], ["run_id", "dag", "timetable", "generate_run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "logical_date", "exec_date", "data_interval", "data_interval", "session", "session", "events", "dataset_events"], ["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"]], "dag_hash": [["dag_hash", "self", "dagbag", "dags_hash", "get", "dag", "dag_id"], ["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"]], "dag_run": [["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"], ["dag_run", "consumed_dataset_events", "extend", "dataset_events"], ["session", "execute", "delete", "DatasetDagRunQueue", "where", "DatasetDagRunQueue", "target_dag_id", "dag_run", "dag_id"]], "data_interval": [["data_interval", "dag", "timetable", "data_interval_for_events", "exec_date", "dataset_events"], ["run_id", "dag", "timetable", "generate_run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "logical_date", "exec_date", "data_interval", "data_interval", "session", "session", "events", "dataset_events"], ["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"]], "dataset_event_filters": [["dataset_event_filters", "DagScheduleDatasetReference", "dag_id", "dag", "dag_id", "DatasetEvent", "timestamp", "exec_date"], ["dataset_event_filters", "append", "DatasetEvent", "timestamp", "previous_dag_run", "execution_date"], ["dataset_events", "session", "scalars", "select", "DatasetEvent", "join", "DagScheduleDatasetReference", "DatasetEvent", "dataset_id", "DagScheduleDatasetReference", "dataset_id", "join", "DatasetEvent", "source_dag_run", "where", "dataset_event_filters", "all"]], "dataset_events": [["dataset_events", "session", "scalars", "select", "DatasetEvent", "join", "DagScheduleDatasetReference", "DatasetEvent", "dataset_id", "DagScheduleDatasetReference", "dataset_id", "join", "DatasetEvent", "source_dag_run", "where", "dataset_event_filters", "all"], ["data_interval", "dag", "timetable", "data_interval_for_events", "exec_date", "dataset_events"], ["run_id", "dag", "timetable", "generate_run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "logical_date", "exec_date", "data_interval", "data_interval", "session", "session", "events", "dataset_events"], ["dag_run", "consumed_dataset_events", "extend", "dataset_events"]], "exec_date": [["exec_date", "exec_dates", "dag", "dag_id"], ["dag", "dag_id", "exec_date", "existing_dagruns"], ["previous_dag_run", "session", "scalar", "select", "DagRun", "where", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "exec_date", "DagRun", "run_type", "DagRunType", "DATASET_TRIGGERED", "order_by", "DagRun", "execution_date", "desc", "limit"], ["dataset_event_filters", "DagScheduleDatasetReference", "dag_id", "dag", "dag_id", "DatasetEvent", "timestamp", "exec_date"], ["data_interval", "dag", "timetable", "data_interval_for_events", "exec_date", "dataset_events"], ["run_id", "dag", "timetable", "generate_run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "logical_date", "exec_date", "data_interval", "data_interval", "session", "session", "events", "dataset_events"], ["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"]], "exec_dates": [["exec_dates", "dag_id", "timezone", "coerce_datetime", "last_time", "dag_id", "_", "last_time", "dataset_triggered_dag_info", "items"], ["existing_dagruns", "builtins", "set", "builtins", "tuple", "builtins", "str", "airflow", "utils", "timezone", "DateTime", "set", "session", "execute", "select", "DagRun", "dag_id", "DagRun", "execution_date", "where", "tuple_in_condition", "DagRun", "dag_id", "DagRun", "execution_date", "exec_dates", "items"], ["exec_date", "exec_dates", "dag", "dag_id"]], "existing_dagruns": [["existing_dagruns", "builtins", "set", "builtins", "tuple", "builtins", "str", "airflow", "utils", "timezone", "DateTime", "set", "session", "execute", "select", "DagRun", "dag_id", "DagRun", "execution_date", "where", "tuple_in_condition", "DagRun", "dag_id", "DagRun", "execution_date", "exec_dates", "items"], ["dag", "dag_id", "exec_date", "existing_dagruns"]], "previous_dag_run": [["previous_dag_run", "session", "scalar", "select", "DagRun", "where", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "exec_date", "DagRun", "run_type", "DagRunType", "DATASET_TRIGGERED", "order_by", "DagRun", "execution_date", "desc", "limit"], ["dataset_event_filters", "append", "DatasetEvent", "timestamp", "previous_dag_run", "execution_date"]], "run_id": [["run_id", "dag", "timetable", "generate_run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "logical_date", "exec_date", "data_interval", "data_interval", "session", "session", "events", "dataset_events"], ["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"]]}, "name": "_create_dag_runs_dataset_triggered", "params": {"dag_models": "typing.Collection[airflow.models.dag.DagModel]", "dataset_triggered_dag_info": "builtins.dict[builtins.str, builtins.tuple[datetime.datetime, datetime.datetime]]", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_models": "", "dataset_triggered_dag_info": "", "self": "", "session": ""}, "params_occur": {"dag_models": [], "dataset_triggered_dag_info": [["exec_dates", "dag_id", "timezone", "coerce_datetime", "last_time", "dag_id", "_", "last_time", "dataset_triggered_dag_info", "items"]], "self": [["dag", "self", "dagbag", "get_dag", "dag_model", "dag_id", "session", "session"], ["self", "log", "error", "dag_model", "dag_id"], ["self", "log", "error", "dag_model", "dag_id"], ["dag_hash", "self", "dagbag", "dags_hash", "get", "dag", "dag_id"], ["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"]], "session": [["existing_dagruns", "builtins", "set", "builtins", "tuple", "builtins", "str", "airflow", "utils", "timezone", "DateTime", "set", "session", "execute", "select", "DagRun", "dag_id", "DagRun", "execution_date", "where", "tuple_in_condition", "DagRun", "dag_id", "DagRun", "execution_date", "exec_dates", "items"], ["dag", "self", "dagbag", "get_dag", "dag_model", "dag_id", "session", "session"], ["previous_dag_run", "session", "scalar", "select", "DagRun", "where", "DagRun", "dag_id", "dag", "dag_id", "DagRun", "execution_date", "exec_date", "DagRun", "run_type", "DagRunType", "DATASET_TRIGGERED", "order_by", "DagRun", "execution_date", "desc", "limit"], ["dataset_events", "session", "scalars", "select", "DatasetEvent", "join", "DagScheduleDatasetReference", "DatasetEvent", "dataset_id", "DagScheduleDatasetReference", "dataset_id", "join", "DatasetEvent", "source_dag_run", "where", "dataset_event_filters", "all"], ["run_id", "dag", "timetable", "generate_run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "logical_date", "exec_date", "data_interval", "data_interval", "session", "session", "events", "dataset_events"], ["dag_run", "dag", "create_dagrun", "run_id", "run_id", "run_type", "DagRunType", "DATASET_TRIGGERED", "execution_date", "exec_date", "data_interval", "data_interval", "state", "DagRunState", "QUEUED", "external_trigger", "False", "session", "session", "dag_hash", "dag_hash", "creating_job_id", "self", "job", "id"], ["session", "execute", "delete", "DatasetDagRunQueue", "where", "DatasetDagRunQueue", "target_dag_id", "dag_run", "dag_id"]]}, "params_p": {"args": [], "dag_models": [["bool", 0.3926646407645936], ["str", 0.25602420764276684], ["list", 0.1734818132764288]], "dataset_triggered_dag_info": [["Optional[int]", 0.38832010087247004], ["float", 0.11342909248005877], ["Optional[str]", 0.11342909248005877]], "kwargs": [], "self": [], "session": [["str", 0.4812005320231657], ["bool", 0.11378042743233331], ["audiopyle.lib.models.file_meta.CompressedAudioFileMeta", 0.09337838876796475], ["Dict[str, Any]", 0.09337838876796475]]}, "q_name": "SchedulerJobRunner._create_dag_runs_dataset_triggered", "ret_exprs": [], "ret_type": "None", "variables": {"dag": "", "dag_hash": "", "dag_run": "", "data_interval": "", "dataset_event_filters": "", "dataset_events": "", "exec_date": "", "exec_dates": "", "existing_dagruns": "builtins.set[builtins.tuple[builtins.str, airflow.utils.timezone.DateTime]]", "previous_dag_run": "", "run_id": ""}, "variables_p": {"dag": [["dict", 0.42092348456971557], ["DefaultDict[Any, dict]", 0.2164010911865846], ["OrderedDict", 0.11262525192050367], ["Dict[str, Set]", 0.08753057371868167], ["Dict[str, Dict[str, str]]", 0.08028502162443826]], "dag_hash": [["str", 0.5405537508079485], ["cmk.base.api.agent_based.checking_classes.state", 0.08973979290181339], ["Dict[str, str]", 0.08575031499768797]], "dag_run": [["int", 0.29459113481294236], ["List[List[int]]", 0.2217749146705414], ["datetime.datetime", 0.10553176536268939], ["List[str]", 0.09868821618954025], ["str", 0.0945803822044589], ["Dict[str, str]", 0.09405303965838817]], "data_interval": [["str", 0.3977284131741075], ["Dict[str, Any]", 0.17796712626060018], ["Dict[str, Callable]", 0.08356672331851438]], "dataset_event_filters": [["str", 0.18323216222513528], ["Dict[int, str]", 0.11093052276254683], ["Dict[Any, Dict[str, Any]]", 0.10989769429914849], ["Dict[str, Any]", 0.10298274033909771], ["list", 0.08738648578076141]], "dataset_events": [["str", 0.3922381966259534], ["Dict[str, Any]", 0.21397486695309836], ["MutableMapping[str, Any]", 0.12173941136486648], ["List[str]", 0.09639825472127099]], "exec_date": [["str", 0.4004843265843211], ["Dict[str, Any]", 0.14830177241693182], ["datetime.datetime.datetime", 0.13124343417196235], ["list", 0.08712541635890678], ["datetime.date", 0.07558142397279859], ["datetime.datetime", 0.0727272698838529]], "exec_dates": [["datetime.datetime", 0.2007935007945908], ["datetime.date.time.date", 0.1113299654032828], ["str", 0.10227197742501154], ["datetime.datetime.datetime", 0.09372899904386903], ["datetime.date", 0.09045475282809784]], "existing_dagruns": [["dict", 0.26851288840949283], ["int", 0.200046225265177], ["Type[str]", 0.11569158246877072], ["Set[str]", 0.10257191510127966], ["List[str]", 0.10010215645151484]], "previous_dag_run": [["int", 0.398544087669929], ["List[List[int]]", 0.17752421752527509], ["Dict[str, str]", 0.1214855383257013], ["datetime.datetime", 0.11526440512429656], ["Dict[str, Dict[str, Any]]", 0.09796743347582382], ["ajapaik.ajapaik.models.Album", 0.08921431787897416]], "run_id": [["str", 0.5119806463759183], ["Set[int]", 0.19714788553739168], ["int", 0.10375091617108118], ["Optional[str]", 0.09776005190170547]]}}, {"docstring": {"func": "Check if the dag's next_dagruns_create_after should be updated.", "long_descr": null, "ret": null}, "fn_lc": [[1303, 4], [1324, 19]], "fn_var_ln": {"next_dagrun_create_after": [[1322, 12], [1322, 46]], "total_active_runs": [[1313, 12], [1313, 29]]}, "fn_var_occur": {"next_dagrun_create_after": [["dag_model", "next_dagrun_create_after", "None"]], "total_active_runs": [["total_active_runs", "dag", "get_num_active_runs", "only_running", "False", "session", "session"], ["total_active_runs", "total_active_runs", "dag", "max_active_runs"], ["self", "log", "info", "dag_model", "dag_id", "total_active_runs", "dag", "max_active_runs"]]}, "name": "_should_update_dag_next_dagruns", "params": {"dag": "airflow.models.dag.DAG", "dag_model": "airflow.models.dag.DagModel", "self": "", "session": "sqlalchemy.orm.Session", "total_active_runs": "int | None"}, "params_descr": {"dag": "", "dag_model": "", "self": "", "session": "", "total_active_runs": ""}, "params_occur": {"dag": [["dag", "timetable", "can_be_scheduled"], ["total_active_runs", "dag", "get_num_active_runs", "only_running", "False", "session", "session"], ["total_active_runs", "total_active_runs", "dag", "max_active_runs"], ["self", "log", "info", "dag_model", "dag_id", "total_active_runs", "dag", "max_active_runs"]], "dag_model": [["self", "log", "info", "dag_model", "dag_id", "total_active_runs", "dag", "max_active_runs"], ["dag_model", "next_dagrun_create_after", "None"]], "self": [["self", "log", "info", "dag_model", "dag_id", "total_active_runs", "dag", "max_active_runs"]], "session": [["total_active_runs", "dag", "get_num_active_runs", "only_running", "False", "session", "session"]], "total_active_runs": [["total_active_runs", "dag", "get_num_active_runs", "only_running", "False", "session", "session"], ["total_active_runs", "total_active_runs", "dag", "max_active_runs"], ["self", "log", "info", "dag_model", "dag_id", "total_active_runs", "dag", "max_active_runs"]]}, "params_p": {"args": [], "dag": [["recidiviz.persistence.database.schema.state.schema.StateIncarcerationPeriod", 0.25627295612498807], ["str", 0.18529342255145104], ["List[str]", 0.10038433113284653], ["ddionrails.studies.models.Study", 0.09284912170891403], ["List[cmk.gui.plugins.visuals.utils.Filter]", 0.08738621310618404], ["int", 0.08503282254688986]], "dag_model": [["str", 0.5277109880489459], ["bool", 0.2088242605590488], ["int", 0.08796183691667624], ["bytes", 0.08754107755865287]], "kwargs": [], "self": [], "session": [["Optional[str]", 0.3030586284464615], ["str", 0.10107551335764337], ["pyspark.sql.SparkSession", 0.10107551335764337], ["Union[str, datetime.datetime, None]", 0.09047153244041069]], "total_active_runs": [["bool", 0.3643635103850246], ["Dict[str, Optional[str]]", 0.12389670287662519], ["Callable[[], str]", 0.10764442332301502], ["Optional[Iterable[str]]", 0.08805926623071199]]}, "q_name": "SchedulerJobRunner._should_update_dag_next_dagruns", "ret_exprs": ["return False", "return False", "return True"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"next_dagrun_create_after": "", "total_active_runs": ""}, "variables_p": {"next_dagrun_create_after": [["str", 0.3844196414843103], ["int", 0.13024763254888105], ["float", 0.06254188537845934]], "total_active_runs": [["str", 0.14914171336287538], ["RuntimeError", 0.10504381395834547], ["Dict[str, Any]", 0.0979567771669259], ["list", 0.09212168517594768], ["bytes", 0.08751727267368008]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1335, 8], [1352, 17]], "fn_var_ln": {"expected_start_date": [[1344, 16], [1344, 35]], "schedule_delay": [[1345, 16], [1345, 30]], "start_date": [[1337, 12], [1337, 30]], "state": [[1336, 12], [1336, 25]]}, "fn_var_occur": {"expected_start_date": [["expected_start_date", "dag", "get_run_data_interval", "dag_run", "end"], ["schedule_delay", "dag_run", "start_date", "expected_start_date"]], "schedule_delay": [["schedule_delay", "dag_run", "start_date", "expected_start_date"], ["Stats", "timing", "dag", "dag_id", "schedule_delay"], ["Stats", "timing", "schedule_delay", "tags", "dag", "dag_id"]], "start_date": [["dag_run", "start_date", "timezone", "utcnow"], ["schedule_delay", "dag_run", "start_date", "expected_start_date"]], "state": [["dag_run", "state", "DagRunState", "RUNNING"]]}, "name": "_update_state", "params": {"dag": "airflow.models.dag.DAG", "dag_run": "airflow.models.dagrun.DagRun"}, "params_descr": {"dag": "", "dag_run": ""}, "params_occur": {"dag": [["dag", "timetable", "periodic"], ["expected_start_date", "dag", "get_run_data_interval", "dag_run", "end"], ["Stats", "timing", "dag", "dag_id", "schedule_delay"], ["Stats", "timing", "schedule_delay", "tags", "dag", "dag_id"]], "dag_run": [["dag_run", "state", "DagRunState", "RUNNING"], ["dag_run", "start_date", "timezone", "utcnow"], ["expected_start_date", "dag", "get_run_data_interval", "dag_run", "end"], ["schedule_delay", "dag_run", "start_date", "expected_start_date"]]}, "params_p": {"args": [], "dag": [["bool", 0.19590345030077844], ["Optional[Callable]", 0.17577863217992604], ["str", 0.08986025704092464], ["zerver.models.UserProfile", 0.08114974163262804]], "dag_run": [["bool", 0.2584033703816836], ["zerver.models.UserProfile", 0.11242478576763498], ["Dict[str, str]", 0.07953279346306782], ["List[str]", 0.07948972112482136], ["str", 0.07439355862781542]], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner._start_queued_dagruns.<locals>._update_state", "ret_exprs": [], "ret_type": "", "variables": {"expected_start_date": "", "schedule_delay": "", "start_date": "", "state": ""}, "variables_p": {"expected_start_date": [["Optional[str]", 0.2810273295160333], ["datetime.date", 0.2036882222960381], ["datetime.datetime", 0.18735155301068887], ["Optional[datetime.date]", 0.0858906207228319], ["sqlalchemy.engine.Engine", 0.07218768260919525]], "schedule_delay": [["int", 0.3933094203302361], ["dict", 0.22134092673455924], ["Dict[str, Any]", 0.09745294680061752], ["datetime.datetime.datetime", 0.09549299402251654], ["Set[str]", 0.09302778515834492]], "start_date": [["datetime.datetime", 0.4066509202197465], ["datetime.date", 0.30069226776406655], ["datetime.datetime.date", 0.09900129909544204], ["datetime.datetime.datetime", 0.09685393066376742], ["int", 0.0968015822569773]], "state": [["int", 0.19451702400536947], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.1045405913545307], ["quantumflow.states.State", 0.10144801553732861], ["Type[int]", 0.10122366090803724], ["Type[Dict[str, int]]", 0.10068074931123963], ["Tuple[Any, Any, Any]", 0.09238434418949325], ["str", 0.0846108804759619]]}}, {"docstring": {"func": "Find DagRuns in queued state and decide moving them to running state.", "long_descr": null, "ret": null}, "fn_lc": [[1326, 4], [1377, 53]], "fn_var_ln": {"active_runs": [[1365, 12], [1365, 23]], "active_runs_of_dags": [[1331, 8], [1331, 27]], "cached_get_dag": [[1355, 8], [1355, 22]], "dag": [[1360, 18], [1360, 29]], "dag_runs": [[1329, 8], [1329, 16]]}, "fn_var_occur": {"active_runs": [["active_runs", "active_runs_of_dags", "dag_run", "dag_id"], ["dag", "max_active_runs", "active_runs", "dag", "max_active_runs"], ["self", "log", "debug", "dag", "dag_id", "active_runs", "dag_run", "execution_date"]], "active_runs_of_dags": [["active_runs", "active_runs_of_dags", "dag_run", "dag_id"], ["active_runs_of_dags", "dag_run", "dag_id"]], "cached_get_dag": [["cached_get_dag", "typing", "Callable", "builtins", "str", "DAG", "None", "lru_cache", "partial", "self", "dagbag", "get_dag", "session", "session"], ["dag", "dag_run", "dag", "cached_get_dag", "dag_run", "dag_id"]], "dag": [["dag", "dag_run", "dag", "cached_get_dag", "dag_run", "dag_id"], ["dag", "max_active_runs", "active_runs", "dag", "max_active_runs"], ["self", "log", "debug", "dag", "dag_id", "active_runs", "dag_run", "execution_date"], ["_update_state", "dag", "dag_run"]], "dag_runs": []}, "name": "_start_queued_dagruns", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["cached_get_dag", "typing", "Callable", "builtins", "str", "DAG", "None", "lru_cache", "partial", "self", "dagbag", "get_dag", "session", "session"], ["self", "log", "error", "dag_run", "dag_id"], ["self", "log", "debug", "dag", "dag_id", "active_runs", "dag_run", "execution_date"]], "session": [["cached_get_dag", "typing", "Callable", "builtins", "str", "DAG", "None", "lru_cache", "partial", "self", "dagbag", "get_dag", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["Type[T]", 0.18087030389411674], ["List[str]", 0.14731676998936216], ["type", 0.1471619061335518], ["Iterable[str]", 0.11165008795166917], ["tracim.models.data.Content", 0.10362968238607809], ["bool", 0.08796321553322167], ["Optional[str]", 0.07363124540906092], ["Mapping[starfish.types.Axes, int]", 0.07315662776853693]]}, "q_name": "SchedulerJobRunner._start_queued_dagruns", "ret_exprs": [], "ret_type": "None", "variables": {"active_runs": "", "active_runs_of_dags": "", "cached_get_dag": "typing.Callable[[builtins.str], DAG | None]", "dag": "", "dag_runs": "typing.Collection[airflow.models.dagrun.DagRun]"}, "variables_p": {"active_runs": [["int", 0.1956027801187706], ["ajapaik.ajapaik.models.Album", 0.12130810845842623], ["raiden.transfer.state.TransactionExecutionStatus", 0.10219295787071182]], "active_runs_of_dags": [["Optional[str]", 0.40400217103582253], ["Dict[Any, str]", 0.11354958091925546], ["str", 0.07924406626796475]], "cached_get_dag": [["str", 0.3316947559870598], ["Iterator[str]", 0.31471541259130364], ["Iterable[str]", 0.17555348285677858], ["Set[cmk.utils.type_defs.CheckPluginName]", 0.09549528430877877], ["List[str]", 0.08254106425607934]], "dag": [["int", 0.3158212663580974], ["Dict[str, int]", 0.10227448118115395], ["str", 0.09725136229690531], ["float", 0.0950276435766956], ["app.models.Tweet", 0.09072934652616695], ["list", 0.07810129238929604]], "dag_runs": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]]}}, {"docstring": {"func": "Makes scheduling decisions for all `dag_runs`.", "long_descr": null, "ret": null}, "fn_lc": [[1380, 4], [1389, 30]], "fn_var_ln": {"callback_tuples": [[1387, 8], [1387, 23]]}, "fn_var_occur": {"callback_tuples": [["callback_tuples", "run", "self", "_schedule_dag_run", "run", "session", "session", "run", "dag_runs"]]}, "name": "_schedule_all_dag_runs", "params": {"dag_runs": "typing.Iterable[airflow.models.dagrun.DagRun]", "guard": "airflow.utils.sqlalchemy.CommitProhibitorGuard", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_runs": "", "guard": "", "self": "", "session": ""}, "params_occur": {"dag_runs": [["callback_tuples", "run", "self", "_schedule_dag_run", "run", "session", "session", "run", "dag_runs"]], "guard": [["guard", "commit"]], "self": [["callback_tuples", "run", "self", "_schedule_dag_run", "run", "session", "session", "run", "dag_runs"]], "session": [["callback_tuples", "run", "self", "_schedule_dag_run", "run", "session", "session", "run", "dag_runs"]]}, "params_p": {"args": [], "dag_runs": [["str", 0.23282015952239782], ["dict", 0.11783474469016564], ["opentrons.protocols.types.APIVersion", 0.11498541483223217], ["Callable", 0.08973249270948108]], "guard": [["django.db.models.QuerySet", 0.10014231512028583], ["List[str]", 0.09846301879662477], ["Tuple[float, float, float]", 0.09846301879662477], ["Optional[Tuple[int, int]]", 0.09846301879662477]], "kwargs": [], "self": [], "session": [["str", 0.23282015952239782], ["dict", 0.11783474469016564], ["opentrons.protocols.types.APIVersion", 0.11498541483223217], ["Callable", 0.08973249270948108]]}, "q_name": "SchedulerJobRunner._schedule_all_dag_runs", "ret_exprs": ["return callback_tuples"], "ret_type": "builtins.list[builtins.tuple[airflow.models.dagrun.DagRun, DagCallbackRequest | None]]", "ret_type_p": [["str", 0.26026726723816873], ["Tuple[int, int]", 0.18184533747385273], ["float", 0.17473821311990323], ["int", 0.09734229420621066], ["Type", 0.08109346330012757]], "variables": {"callback_tuples": ""}, "variables_p": {"callback_tuples": [["str", 0.18580171356109382], ["cirq.google.engine.engine_job.EngineJob", 0.12209823962291345]]}}, {"docstring": {"func": "Make scheduling decisions about an individual dag run.", "long_descr": null, "ret": "Callback that needs to be executed"}, "fn_lc": [[1391, 4], [1467, 30]], "fn_var_ln": {"callback": [[1402, 8], [1402, 16]], "callback_to_execute": [[1432, 12], [1432, 31]], "callback_to_run": [[1455, 25], [1455, 40]], "dag": [[1404, 14], [1404, 25]], "dag_model": [[1405, 8], [1405, 17]], "duration": [[1442, 12], [1442, 20]], "schedulable_tis": [[1455, 8], [1455, 23]], "state": [[1424, 16], [1424, 35]], "unfinished_task_instances": [[1417, 12], [1417, 37]]}, "fn_var_occur": {"callback": [["callback", "DagCallbackRequest", "None", "None"]], "callback_to_execute": [["callback_to_execute", "DagCallbackRequest", "full_filepath", "dag", "fileloc", "dag_id", "dag", "dag_id", "run_id", "dag_run", "run_id", "is_failure_callback", "True", "processor_subdir", "dag_model", "processor_subdir", "msg"]], "callback_to_run": [["schedulable_tis", "callback_to_run", "dag_run", "update_state", "session", "session", "execute_callbacks", "False"]], "dag": [["dag", "dag_run", "dag", "self", "dagbag", "get_dag", "dag_run", "dag_id", "session", "session"], ["dag", "dag_model"], ["dag_run", "start_date", "dag", "dagrun_timeout", "dag_run", "start_date", "timezone", "utcnow", "dag", "dagrun_timeout"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["dag_model", "calculate_dagrun_date_fields", "dag", "dag", "get_run_data_interval", "dag_run"], ["callback_to_execute", "DagCallbackRequest", "full_filepath", "dag", "fileloc", "dag_id", "dag", "dag_id", "run_id", "dag_run", "run_id", "is_failure_callback", "True", "processor_subdir", "dag_model", "processor_subdir", "msg"], ["dag_run", "execution_date", "timezone", "utcnow", "dag", "allow_future_exec_dates"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["dag_model", "calculate_dagrun_date_fields", "dag", "dag", "get_run_data_interval", "dag_run"]], "dag_model": [["dag_model", "DM", "get_dagmodel", "dag_run", "dag_id", "session"], ["dag", "dag_model"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["dag_model", "calculate_dagrun_date_fields", "dag", "dag", "get_run_data_interval", "dag_run"], ["callback_to_execute", "DagCallbackRequest", "full_filepath", "dag", "fileloc", "dag_id", "dag", "dag_id", "run_id", "dag_run", "run_id", "is_failure_callback", "True", "processor_subdir", "dag_model", "processor_subdir", "msg"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["dag_model", "calculate_dagrun_date_fields", "dag", "dag", "get_run_data_interval", "dag_run"]], "duration": [["duration", "dag_run", "end_date", "dag_run", "start_date"], ["Stats", "timing", "dag_run", "dag_id", "duration"], ["Stats", "timing", "duration", "tags", "dag_run", "dag_id"]], "schedulable_tis": [["schedulable_tis", "callback_to_run", "dag_run", "update_state", "session", "session", "execute_callbacks", "False"], ["dag_run", "schedule_tis", "schedulable_tis", "session", "max_tis_per_query", "self", "job", "max_tis_per_query"]], "state": [["unfinished_task_instances", "session", "scalars", "select", "TI", "where", "TI", "dag_id", "dag_run", "dag_id", "where", "TI", "run_id", "dag_run", "run_id", "where", "TI", "state", "in_", "State", "unfinished"], ["task_instance", "state", "TaskInstanceState", "SKIPPED"], ["dag_run", "state", "State", "finished"]], "unfinished_task_instances": [["unfinished_task_instances", "session", "scalars", "select", "TI", "where", "TI", "dag_id", "dag_run", "dag_id", "where", "TI", "run_id", "dag_run", "run_id", "where", "TI", "state", "in_", "State", "unfinished"]]}, "name": "_schedule_dag_run", "params": {"dag_run": "airflow.models.dagrun.DagRun", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_run": "The DagRun to schedule", "self": "", "session": ""}, "params_occur": {"dag_run": [["dag", "dag_run", "dag", "self", "dagbag", "get_dag", "dag_run", "dag_id", "session", "session"], ["dag_model", "DM", "get_dagmodel", "dag_run", "dag_id", "session"], ["self", "log", "error", "dag_run", "dag_id"], ["dag_run", "start_date", "dag", "dagrun_timeout", "dag_run", "start_date", "timezone", "utcnow", "dag", "dagrun_timeout"], ["dag_run", "set_state", "DagRunState", "FAILED"], ["unfinished_task_instances", "session", "scalars", "select", "TI", "where", "TI", "dag_id", "dag_run", "dag_id", "where", "TI", "run_id", "dag_run", "run_id", "where", "TI", "state", "in_", "State", "unfinished"], ["self", "log", "info", "dag_run", "run_id", "dag_run", "dag_id"], ["dag_model", "calculate_dagrun_date_fields", "dag", "dag", "get_run_data_interval", "dag_run"], ["callback_to_execute", "DagCallbackRequest", "full_filepath", "dag", "fileloc", "dag_id", "dag", "dag_id", "run_id", "dag_run", "run_id", "is_failure_callback", "True", "processor_subdir", "dag_model", "processor_subdir", "msg"], ["dag_run", "notify_dagrun_state_changed"], ["duration", "dag_run", "end_date", "dag_run", "start_date"], ["Stats", "timing", "dag_run", "dag_id", "duration"], ["Stats", "timing", "duration", "tags", "dag_run", "dag_id"], ["dag_run", "execution_date", "timezone", "utcnow", "dag", "allow_future_exec_dates"], ["self", "log", "error", "dag_run", "execution_date"], ["self", "_verify_integrity_if_dag_changed", "dag_run", "dag_run", "session", "session"], ["self", "log", "warning", "dag_run", "dag_id"], ["schedulable_tis", "callback_to_run", "dag_run", "update_state", "session", "session", "execute_callbacks", "False"], ["dag_run", "state", "State", "finished"], ["dag_model", "calculate_dagrun_date_fields", "dag", "dag", "get_run_data_interval", "dag_run"], ["dag_run", "schedule_tis", "schedulable_tis", "session", "max_tis_per_query", "self", "job", "max_tis_per_query"]], "self": [["dag", "dag_run", "dag", "self", "dagbag", "get_dag", "dag_run", "dag_id", "session", "session"], ["self", "log", "error", "dag_run", "dag_id"], ["self", "log", "info", "dag_run", "run_id", "dag_run", "dag_id"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["self", "log", "error", "dag_run", "execution_date"], ["self", "_verify_integrity_if_dag_changed", "dag_run", "dag_run", "session", "session"], ["self", "log", "warning", "dag_run", "dag_id"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["dag_run", "schedule_tis", "schedulable_tis", "session", "max_tis_per_query", "self", "job", "max_tis_per_query"]], "session": [["dag", "dag_run", "dag", "self", "dagbag", "get_dag", "dag_run", "dag_id", "session", "session"], ["dag_model", "DM", "get_dagmodel", "dag_run", "dag_id", "session"], ["unfinished_task_instances", "session", "scalars", "select", "TI", "where", "TI", "dag_id", "dag_run", "dag_id", "where", "TI", "run_id", "dag_run", "run_id", "where", "TI", "state", "in_", "State", "unfinished"], ["session", "merge", "task_instance"], ["session", "flush"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["self", "_verify_integrity_if_dag_changed", "dag_run", "dag_run", "session", "session"], ["schedulable_tis", "callback_to_run", "dag_run", "update_state", "session", "session", "execute_callbacks", "False"], ["self", "_should_update_dag_next_dagruns", "dag", "dag_model", "session", "session"], ["dag_run", "schedule_tis", "schedulable_tis", "session", "max_tis_per_query", "self", "job", "max_tis_per_query"]]}, "params_p": {"args": [], "dag_run": [["str", 0.20846713774468867]], "kwargs": [], "self": [], "session": [["str", 0.20846713774468867]]}, "q_name": "SchedulerJobRunner._schedule_dag_run", "ret_exprs": ["return callback", "return callback_to_execute", "return callback", "return callback", "return callback_to_run"], "ret_type": "DagCallbackRequest | None", "ret_type_p": [["str", 0.42717112696739334]], "variables": {"callback": "DagCallbackRequest | None", "callback_to_execute": "", "callback_to_run": "", "dag": "", "dag_model": "", "duration": "", "schedulable_tis": "", "state": "", "unfinished_task_instances": ""}, "variables_p": {"callback": [["KeysView[str]", 0.11377605163956933], ["List[str]", 0.09928456416960363], ["dict", 0.09229906342788735], ["list", 0.09040457106338431], ["manager.CliManager", 0.0901927746320346]], "callback_to_execute": [["Dict[str, Union[Any, bool, str]]", 0.26637925765401904], ["List[str]", 0.12334800867764141], ["List[Dict[str, str]]", 0.11827677395323791], ["functools.partial[Any]", 0.08765665094252315]], "callback_to_run": [["magic.models.deck.Deck", 0.11723077613968168], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.09484081339390431]], "dag": [["list", 0.09540197940943375]], "dag_model": [["List[str]", 0.1988904278993154], ["list", 0.1581326459057681], ["str", 0.1134101883446025], ["Dict[str, Any]", 0.07195693313309115], ["Type[bootcamp.news.models.News]", 0.06859298861369012], ["Dict[str, str]", 0.0663289802291533]], "duration": [["int", 0.3169627365269162], ["dict", 0.14723888700350368], ["Dict[str, Any]", 0.14451451689716968]], "schedulable_tis": [["int", 0.09943435558779941], ["raiden.utils.PaymentID", 0.08989090559284561]], "state": [["int", 0.6912622091787947], ["str", 0.1047194620134153], ["radio.models.PlaybackState", 0.08100028246049269]], "unfinished_task_instances": [["int", 0.581507896441384], ["List[List[int]]", 0.2798562912574465], ["List[str]", 0.07360376281241303], ["str", 0.06503204948875628]]}}, {"docstring": {"func": "Only run DagRun.verify integrity if Serialized DAG has changed since it is slow.", "long_descr": "Return True if we determine that DAG still exists.", "ret": null}, "fn_lc": [[1469, 4], [1489, 19]], "fn_var_ln": {"dag": [[1483, 8], [1483, 19]], "dag_hash": [[1480, 8], [1480, 24]], "latest_version": [[1475, 8], [1475, 22]]}, "fn_var_occur": {"dag": [["dag_run", "dag", "self", "dagbag", "get_dag", "dag_id", "dag_run", "dag_id", "session", "session"], ["dag_run", "dag"]], "dag_hash": [["dag_run", "dag_hash", "latest_version"], ["dag_run", "dag_hash", "latest_version"]], "latest_version": [["latest_version", "SerializedDagModel", "get_latest_version_hash", "dag_run", "dag_id", "session", "session"], ["dag_run", "dag_hash", "latest_version"], ["dag_run", "dag_hash", "latest_version"]]}, "name": "_verify_integrity_if_dag_changed", "params": {"dag_run": "airflow.models.dagrun.DagRun", "self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"dag_run": "", "self": "", "session": ""}, "params_occur": {"dag_run": [["latest_version", "SerializedDagModel", "get_latest_version_hash", "dag_run", "dag_id", "session", "session"], ["dag_run", "dag_hash", "latest_version"], ["self", "log", "debug", "dag_run", "dag_id"], ["dag_run", "dag_hash", "latest_version"], ["dag_run", "dag", "self", "dagbag", "get_dag", "dag_id", "dag_run", "dag_id", "session", "session"], ["dag_run", "dag"], ["dag_run", "verify_integrity", "session", "session"]], "self": [["self", "log", "debug", "dag_run", "dag_id"], ["dag_run", "dag", "self", "dagbag", "get_dag", "dag_id", "dag_run", "dag_id", "session", "session"]], "session": [["latest_version", "SerializedDagModel", "get_latest_version_hash", "dag_run", "dag_id", "session", "session"], ["dag_run", "dag", "self", "dagbag", "get_dag", "dag_id", "dag_run", "dag_id", "session", "session"], ["dag_run", "verify_integrity", "session", "session"]]}, "params_p": {"args": [], "dag_run": [["raiden.utils.PaymentNetworkID", 0.10242978233391628], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationPeriod]", 0.08171936443954031]], "kwargs": [], "self": [], "session": [["raiden.utils.PaymentNetworkID", 0.0987954786898277], ["str", 0.08402801027939083]]}, "q_name": "SchedulerJobRunner._verify_integrity_if_dag_changed", "ret_exprs": ["return True", "return False", "return True"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999998]], "variables": {"dag": "", "dag_hash": "", "latest_version": ""}, "variables_p": {"dag": [["str", 0.19189975928289282], ["raiden.utils.Address", 0.10558648359493167], ["itertools.chain[Any]", 0.09270381052449148], ["dict", 0.08769468442843095]], "dag_hash": [["int", 0.5000000000255194], ["bool", 2.551931543477643e-11], ["List[bool]", 2.551931543477643e-11], ["tuple", 2.551931543477643e-11]], "latest_version": [["str", 0.4746807499729781], ["Pattern[str]", 0.12267993720179544]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1491, 4], [1496, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_send_dag_callbacks_to_processor", "params": {"callback": "DagCallbackRequest | None", "dag": "airflow.models.dag.DAG", "self": ""}, "params_descr": {"callback": "", "dag": "", "self": ""}, "params_occur": {"callback": [["self", "job", "executor", "send_callback", "callback"]], "dag": [["self", "_send_sla_callbacks_to_processor", "dag"]], "self": [["self", "_send_sla_callbacks_to_processor", "dag"], ["self", "job", "executor", "send_callback", "callback"], ["self", "log", "debug"]]}, "params_p": {"args": [], "callback": [["float", 0.49999999999999994], ["str", 0.09999999999999999], ["Tuple[int]", 0.09999999999999999]], "dag": [["float", 0.49999999999999994], ["str", 0.09999999999999999], ["Tuple[int]", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner._send_dag_callbacks_to_processor", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Sends SLA Callbacks to DagFileProcessor if tasks have SLAs set and check_slas=True.", "long_descr": null, "ret": null}, "fn_lc": [[1498, 4], [1521, 48]], "fn_var_ln": {"dag_model": [[1511, 8], [1511, 17]], "request": [[1516, 8], [1516, 15]]}, "fn_var_occur": {"dag_model": [["dag_model", "DagModel", "get_dagmodel", "dag", "dag_id"], ["request", "SlaCallbackRequest", "full_filepath", "dag", "fileloc", "dag_id", "dag", "dag_id", "processor_subdir", "dag_model", "processor_subdir"]], "request": [["request", "SlaCallbackRequest", "full_filepath", "dag", "fileloc", "dag_id", "dag", "dag_id", "processor_subdir", "dag_model", "processor_subdir"], ["self", "job", "executor", "send_callback", "request"]]}, "name": "_send_sla_callbacks_to_processor", "params": {"dag": "airflow.models.dag.DAG", "self": ""}, "params_descr": {"dag": "", "self": ""}, "params_occur": {"dag": [["any", "isinstance", "task", "sla", "timedelta", "task", "dag", "tasks"], ["self", "log", "debug", "dag"], ["dag", "timetable", "periodic"], ["self", "log", "debug", "dag"], ["dag_model", "DagModel", "get_dagmodel", "dag", "dag_id"], ["self", "log", "error", "dag", "dag_id"], ["request", "SlaCallbackRequest", "full_filepath", "dag", "fileloc", "dag_id", "dag", "dag_id", "processor_subdir", "dag_model", "processor_subdir"]], "self": [["self", "log", "debug", "dag"], ["self", "log", "debug", "dag"], ["self", "log", "error", "dag", "dag_id"], ["self", "job", "executor", "send_callback", "request"]]}, "params_p": {"args": [], "dag": [["bool", 0.17918310585061215], ["List[recidiviz.persistence.entity.state.entities.StateSupervisionPeriod]", 0.1310212431136605], ["int", 0.10110217580098542], ["lunch_buddies.models.polls.Poll", 0.0928002071731134]], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner._send_sla_callbacks_to_processor", "ret_exprs": ["return", "return", "return", "return"], "ret_type": "None", "ret_type_p": [["ics.types.ContainerItem", 0.0961979048279505], ["Dict[str, Any]", 0.09359385787752166]], "variables": {"dag_model": "", "request": ""}, "variables_p": {"dag_model": [["deeplearning.ml4pl.models.classifier_base_tesMockModel", 0.17935406749341454], ["list", 0.11697276320126998], ["app.models.LoginModel", 0.10760592703515671], ["dict", 0.09832004119748625], ["str", 0.08980734314391758]], "request": [["int", 0.20296182675454025], ["raiden.transfer.state.HopState", 0.17511234675886117], ["bytes", 0.11973705948246652], ["str", 0.11398754420107211], ["List[str]", 0.08888251043002054]]}}, {"docstring": {"func": "Mark tasks stuck in queued for longer than `task_queued_timeout` as failed.", "long_descr": "Tasks can get stuck in queued for a wide variety of reasons (e.g. celery loses\ntrack of a task, a cluster can't further scale up its workers, etc.), but tasks\nshould not be stuck in queued for a long time. This will mark tasks stuck in\nqueued for longer than `self._task_queued_timeout` as failed. If the task has\navailable retries, it will be retried.", "ret": null}, "fn_lc": [[1524, 4], [1555, 15]], "fn_var_ln": {"task_instance_str": [[1546, 16], [1546, 33]], "tasks_stuck_in_queued": [[1536, 8], [1536, 29]], "tis_for_warning_message": [[1544, 12], [1544, 35]]}, "fn_var_occur": {"task_instance_str": [["task_instance_str", "join", "tis_for_warning_message"], ["self", "log", "warning", "len", "tasks_stuck_in_queued", "task_instance_str"]], "tasks_stuck_in_queued": [["tasks_stuck_in_queued", "session", "scalars", "select", "TI", "where", "TI", "state", "State", "QUEUED", "TI", "queued_dttm", "timezone", "utcnow", "timedelta", "seconds", "self", "_task_queued_timeout", "TI", "queued_by_job_id", "self", "job", "id", "all"], ["tis_for_warning_message", "self", "job", "executor", "cleanup_stuck_queued_tasks", "tis", "tasks_stuck_in_queued"], ["self", "log", "warning", "len", "tasks_stuck_in_queued", "task_instance_str"]], "tis_for_warning_message": [["tis_for_warning_message", "self", "job", "executor", "cleanup_stuck_queued_tasks", "tis", "tasks_stuck_in_queued"], ["task_instance_str", "join", "tis_for_warning_message"]]}, "name": "_fail_tasks_stuck_in_queued", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["self", "log", "debug"], ["tasks_stuck_in_queued", "session", "scalars", "select", "TI", "where", "TI", "state", "State", "QUEUED", "TI", "queued_dttm", "timezone", "utcnow", "timedelta", "seconds", "self", "_task_queued_timeout", "TI", "queued_by_job_id", "self", "job", "id", "all"], ["tis_for_warning_message", "self", "job", "executor", "cleanup_stuck_queued_tasks", "tis", "tasks_stuck_in_queued"], ["self", "log", "warning", "len", "tasks_stuck_in_queued", "task_instance_str"], ["self", "log", "debug"]], "session": [["tasks_stuck_in_queued", "session", "scalars", "select", "TI", "where", "TI", "state", "State", "QUEUED", "TI", "queued_dttm", "timezone", "utcnow", "timedelta", "seconds", "self", "_task_queued_timeout", "TI", "queued_by_job_id", "self", "job", "id", "all"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["mwapi.Session", 0.1119788674701779], ["cmsysboutils.Session", 0.10139764043186784], ["str", 0.09374508257865792], ["sqlalchemy.orm.session.Session", 0.09302898843866265]]}, "q_name": "SchedulerJobRunner._fail_tasks_stuck_in_queued", "ret_exprs": [], "ret_type": "None", "variables": {"task_instance_str": "", "tasks_stuck_in_queued": "", "tis_for_warning_message": ""}, "variables_p": {"task_instance_str": [["str", 0.41635815587606867], ["int", 0.20893959215679472], ["bytes", 0.19208613145188116], ["Optional[str]", 0.1826161205152554]], "tasks_stuck_in_queued": [["str", 0.3956940361316865], ["int", 0.19292583610776481], ["List[int]", 0.12023749237874637], ["Pattern[str]", 0.10717084038577579], ["Type[float]", 0.08949482687594731]], "tis_for_warning_message": [["int", 0.6347529567131398], ["Dict[str, Optional[Any]]", 0.1061620707615556], ["List[int]", 0.08755442432795299], ["Dict[str, float]", 0.0859573659726982]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1558, 4], [1569, 99]], "fn_var_ln": {"pools": [[1561, 8], [1561, 13]]}, "fn_var_occur": {"pools": [["pools", "Pool", "slots_stats", "session", "session"], ["pools", "items"]]}, "name": "_emit_pool_metrics", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [], "session": [["pools", "Pool", "slots_stats", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["nox.sessions.Session", 0.4707863370856405], ["sqlalchemy.orm.session.Session", 0.18476814885755505], ["requests.Session", 0.09804475510881956], ["abilian.core.sqlalchemy.SQLAlchemy", 0.06163261009042987]]}, "q_name": "SchedulerJobRunner._emit_pool_metrics", "ret_exprs": [], "ret_type": "None", "variables": {"pools": ""}, "variables_p": {"pools": [["dict", 0.203372695944741], ["golem.rpc.session.WebSocketAddress", 0.18643658377609254], ["golem.rpc.session.Publisher", 0.1250916974790098], ["float", 0.07997247156822007], ["List[str]", 0.07428413657746001], ["Dict[str, str]", 0.07382921182082312], ["geode.models.common.Address", 0.07357192908815428]]}}, {"docstring": {"func": "Reset any TaskInstance still in QUEUED or SCHEDULED states that were", "long_descr": "enqueued by a SchedulerJob that is no longer running.", "ret": "the number of TIs reset"}, "fn_lc": [[1572, 4], [1657, 28]], "fn_var_ln": {"num_failed": [[1591, 20], [1591, 30]], "query": [[1606, 20], [1606, 25]], "queued_by_job_id": [[1637, 24], [1637, 43]], "reset_tis_message": [[1630, 20], [1630, 37]], "resettable_states": [[1605, 20], [1605, 37]], "state": [[1633, 24], [1633, 32]], "task_instance_str": [[1643, 24], [1643, 41]], "timeout": [[1580, 8], [1580, 15]], "tis_to_reset_or_adopt": [[1627, 20], [1627, 41]], "to_reset": [[1628, 20], [1628, 28]]}, "fn_var_occur": {"num_failed": [["num_failed", "session", "execute", "update", "Job", "where", "Job", "job_type", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "timezone", "utcnow", "timedelta", "seconds", "timeout", "values", "state", "State", "FAILED", "rowcount"], ["self", "log", "info", "num_failed"], ["Stats", "incr", "self", "__class__", "__name__", "lower", "num_failed"]], "query": [["query", "select", "TI", "where", "TI", "state", "in_", "resettable_states", "outerjoin", "TI", "queued_by_job", "where", "or_", "TI", "queued_by_job_id", "is_", "None", "Job", "state", "State", "RUNNING", "join", "TI", "dag_run", "where", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "DagRun", "state", "State", "RUNNING", "options", "load_only", "TI", "dag_id", "TI", "task_id", "TI", "run_id"], ["tis_to_reset_or_adopt", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"]], "queued_by_job_id": [["query", "select", "TI", "where", "TI", "state", "in_", "resettable_states", "outerjoin", "TI", "queued_by_job", "where", "or_", "TI", "queued_by_job_id", "is_", "None", "Job", "state", "State", "RUNNING", "join", "TI", "dag_run", "where", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "DagRun", "state", "State", "RUNNING", "options", "load_only", "TI", "dag_id", "TI", "task_id", "TI", "run_id"], ["ti", "queued_by_job_id", "None"], ["ti", "queued_by_job_id", "self", "job", "id"]], "reset_tis_message": [["reset_tis_message", "append", "repr", "ti"], ["task_instance_str", "join", "reset_tis_message"]], "resettable_states": [["resettable_states", "TaskInstanceState", "QUEUED", "TaskInstanceState", "RUNNING"], ["query", "select", "TI", "where", "TI", "state", "in_", "resettable_states", "outerjoin", "TI", "queued_by_job", "where", "or_", "TI", "queued_by_job_id", "is_", "None", "Job", "state", "State", "RUNNING", "join", "TI", "dag_run", "where", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "DagRun", "state", "State", "RUNNING", "options", "load_only", "TI", "dag_id", "TI", "task_id", "TI", "run_id"]], "state": [["num_failed", "session", "execute", "update", "Job", "where", "Job", "job_type", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "timezone", "utcnow", "timedelta", "seconds", "timeout", "values", "state", "State", "FAILED", "rowcount"], ["query", "select", "TI", "where", "TI", "state", "in_", "resettable_states", "outerjoin", "TI", "queued_by_job", "where", "or_", "TI", "queued_by_job_id", "is_", "None", "Job", "state", "State", "RUNNING", "join", "TI", "dag_run", "where", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "DagRun", "state", "State", "RUNNING", "options", "load_only", "TI", "dag_id", "TI", "task_id", "TI", "run_id"], ["ti", "state", "State", "NONE"]], "task_instance_str": [["task_instance_str", "join", "reset_tis_message"], ["self", "log", "info", "len", "to_reset", "task_instance_str"]], "timeout": [["timeout", "conf", "getint"], ["num_failed", "session", "execute", "update", "Job", "where", "Job", "job_type", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "timezone", "utcnow", "timedelta", "seconds", "timeout", "values", "state", "State", "FAILED", "rowcount"]], "tis_to_reset_or_adopt": [["tis_to_reset_or_adopt", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["tis_to_reset_or_adopt", "session", "scalars", "tis_to_reset_or_adopt", "all"], ["to_reset", "self", "job", "executor", "try_adopt_task_instances", "tis_to_reset_or_adopt"], ["set", "tis_to_reset_or_adopt", "set", "to_reset"], ["Stats", "incr", "len", "tis_to_reset_or_adopt", "len", "to_reset"]], "to_reset": [["to_reset", "self", "job", "executor", "try_adopt_task_instances", "tis_to_reset_or_adopt"], ["set", "tis_to_reset_or_adopt", "set", "to_reset"], ["Stats", "incr", "len", "to_reset"], ["Stats", "incr", "len", "tis_to_reset_or_adopt", "len", "to_reset"], ["self", "log", "info", "len", "to_reset", "task_instance_str"], ["len", "to_reset"]]}, "name": "adopt_or_reset_orphaned_tasks", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["self", "log", "info"], ["run_with_db_retries", "logger", "self", "log"], ["self", "log", "debug", "attempt", "retry_state", "attempt_number", "MAX_DB_RETRIES"], ["self", "log", "debug"], ["self", "log", "info", "num_failed"], ["Stats", "incr", "self", "__class__", "__name__", "lower", "num_failed"], ["to_reset", "self", "job", "executor", "try_adopt_task_instances", "tis_to_reset_or_adopt"], ["ti", "queued_by_job_id", "self", "job", "id"], ["self", "log", "info", "len", "to_reset", "task_instance_str"]], "session": [["num_failed", "session", "execute", "update", "Job", "where", "Job", "job_type", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "timezone", "utcnow", "timedelta", "seconds", "timeout", "values", "state", "State", "FAILED", "rowcount"], ["tis_to_reset_or_adopt", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["tis_to_reset_or_adopt", "session", "scalars", "tis_to_reset_or_adopt", "all"], ["session", "flush"], ["session", "rollback"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.1847357609902084], ["sqlalchemy.orm.Session", 0.10024443052059093], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.08588042958418113], ["cmsysboutils.Session", 0.08469366145668485]]}, "q_name": "SchedulerJobRunner.adopt_or_reset_orphaned_tasks", "ret_exprs": ["return len(to_reset)"], "ret_type": "builtins.int", "ret_type_p": [["int", 0.187812750845087], ["List[Dict[str, Any]]", 0.10712535732593868], ["apps.monero.xmr.types.Sc25519", 0.10562649797901526], ["str", 0.09639120085972287]], "variables": {"num_failed": "", "query": "", "queued_by_job_id": "", "reset_tis_message": "", "resettable_states": "", "state": "", "task_instance_str": "", "timeout": "", "tis_to_reset_or_adopt": "", "to_reset": ""}, "variables_p": {"num_failed": [["str", 0.6757185863750066], ["bool", 0.11316241265423711], ["int", 0.09253282044146942]], "query": [["str", 0.2795992599401689], ["list", 0.15614861578288083], ["dict", 0.12225737252827806], ["int", 0.08374574269125806]], "queued_by_job_id": [["int", 0.4539673999556155], ["Tuple[float, float, float, float]", 0.1028975681355019], ["Tuple[Literal, Literal, Literal]", 0.09400417160293023], ["list", 0.09147295942147303], ["float", 0.08691885433626081], ["List[List[int]]", 0.08232627702145759]], "reset_tis_message": [["list", 0.5792555564659448], ["bool", 0.12334574925547559], ["List[str]", 0.11829860638002407], ["Dict[str, List[Any]]", 0.08931072869584211]], "resettable_states": [["grpy.core.models.GroupingState", 0.14898552953858168], ["list", 0.07507947675501296]], "state": [["str", 0.7987059996807151], ["Optional[str]", 0.10424071105562493], ["dict", 0.09705328926365994]], "task_instance_str": [["str", 0.5772266236687654], ["int", 0.31753740233668565]], "timeout": [["int", 0.3847914370169951], ["raiden.utils.SecretHash", 0.08740223703514799]], "tis_to_reset_or_adopt": [["Dict[Any, str]", 0.27318863337499144], ["dict", 0.20748731552477562], ["abilian.core.models.subjects.User", 0.10672491432828304], ["int", 0.090991797905186], ["Optional[Callable[..., Any]]", 0.09026027478674173]], "to_reset": [["list", 0.31324432460263263], ["List[str]", 0.1917517803437095], ["Dict[str, str]", 0.10630655999479098], ["str", 0.10133589704596913], ["Set[str]", 0.09977541235780468], ["int", 0.09278767982916916]]}}, {"docstring": {"func": "Looks at all tasks that are in the \"deferred\" state and whose trigger", "long_descr": "or execution timeout has passed, so they can be marked as failed.", "ret": null}, "fn_lc": [[1660, 4], [1679, 100]], "fn_var_ln": {"num_timed_out_tasks": [[1665, 8], [1665, 27]]}, "fn_var_occur": {"num_timed_out_tasks": [["num_timed_out_tasks", "session", "execute", "update", "TI", "where", "TI", "state", "TaskInstanceState", "DEFERRED", "TI", "trigger_timeout", "timezone", "utcnow", "values", "state", "TaskInstanceState", "SCHEDULED", "next_method", "next_kwargs", "trigger_id", "None", "rowcount"], ["self", "log", "info", "num_timed_out_tasks"]]}, "name": "check_trigger_timeouts", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["self", "log", "info", "num_timed_out_tasks"]], "session": [["num_timed_out_tasks", "session", "execute", "update", "TI", "where", "TI", "state", "TaskInstanceState", "DEFERRED", "TI", "trigger_timeout", "timezone", "utcnow", "values", "state", "TaskInstanceState", "SCHEDULED", "next_method", "next_kwargs", "trigger_id", "None", "rowcount"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["robot_server.service.session.session_types.SessionMetaData", 0.10834497141229367], ["robot_server.service.session.configuration.SessionConfiguration", 0.10834497141229367], ["recidiviz.persistence.database.session.Session", 0.1078162672409941], ["sqlalchemy.orm.session.Session", 0.10571184313347007], ["zerver.models.UserProfile", 0.10060704204035731], ["sqlalchemy.orm.Session", 0.08488859098247187]]}, "q_name": "SchedulerJobRunner.check_trigger_timeouts", "ret_exprs": [], "ret_type": "None", "variables": {"num_timed_out_tasks": ""}, "variables_p": {"num_timed_out_tasks": [["str", 0.20212167593626668], ["Tuple[str, str]", 0.14835337605048238], ["int", 0.11203718403032246], ["Tuple[int, int, int]", 0.10916950232098782], ["Dict[int, str]", 0.09094103656641682], ["List[None]", 0.08708393846418112], ["dict", 0.08601494721724695], ["Tuple[Literal, Literal, Literal]", 0.08197735150890657]]}}, {"docstring": {"func": "Find zombie task instances, which are tasks haven't heartbeated for too long", "long_descr": "or have a no-longer-running LocalTaskJob, and create a TaskCallbackRequest\nto be handled by the DAG processor.", "ret": null}, "fn_lc": [[1681, 4], [1726, 91]], "fn_var_ln": {"limit_dttm": [[1690, 8], [1690, 18]], "request": [[1718, 12], [1718, 19]], "zombie_message_details": [[1717, 12], [1717, 34]], "zombies": [[1693, 12], [1693, 19]]}, "fn_var_occur": {"limit_dttm": [["limit_dttm", "timezone", "utcnow", "timedelta", "seconds", "self", "_zombie_threshold_secs"], ["zombies", "builtins", "list", "builtins", "tuple", "TI", "builtins", "str", "builtins", "str", "session", "execute", "select", "TI", "DM", "fileloc", "DM", "processor_subdir", "with_hint", "TI", "dialect_name", "join", "Job", "TI", "job_id", "Job", "id", "join", "DM", "TI", "dag_id", "DM", "dag_id", "where", "TI", "state", "TaskInstanceState", "RUNNING", "where", "or_", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "limit_dttm", "where", "Job", "job_type", "where", "TI", "queued_by_job_id", "self", "job", "id", "unique", "all"], ["self", "log", "warning", "len", "zombies", "limit_dttm"]], "request": [["request", "TaskCallbackRequest", "full_filepath", "file_loc", "processor_subdir", "processor_subdir", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg", "str", "zombie_message_details"], ["self", "log", "error", "request"], ["self", "job", "executor", "send_callback", "request"]], "zombie_message_details": [["zombie_message_details", "self", "_generate_zombie_message_details", "ti"], ["request", "TaskCallbackRequest", "full_filepath", "file_loc", "processor_subdir", "processor_subdir", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg", "str", "zombie_message_details"]], "zombies": [["zombies", "builtins", "list", "builtins", "tuple", "TI", "builtins", "str", "builtins", "str", "session", "execute", "select", "TI", "DM", "fileloc", "DM", "processor_subdir", "with_hint", "TI", "dialect_name", "join", "Job", "TI", "job_id", "Job", "id", "join", "DM", "TI", "dag_id", "DM", "dag_id", "where", "TI", "state", "TaskInstanceState", "RUNNING", "where", "or_", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "limit_dttm", "where", "Job", "job_type", "where", "TI", "queued_by_job_id", "self", "job", "id", "unique", "all"], ["self", "log", "warning", "len", "zombies", "limit_dttm"]]}, "name": "_find_zombies", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "log", "debug"], ["limit_dttm", "timezone", "utcnow", "timedelta", "seconds", "self", "_zombie_threshold_secs"], ["zombies", "builtins", "list", "builtins", "tuple", "TI", "builtins", "str", "builtins", "str", "session", "execute", "select", "TI", "DM", "fileloc", "DM", "processor_subdir", "with_hint", "TI", "dialect_name", "join", "Job", "TI", "job_id", "Job", "id", "join", "DM", "TI", "dag_id", "DM", "dag_id", "where", "TI", "state", "TaskInstanceState", "RUNNING", "where", "or_", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "limit_dttm", "where", "Job", "job_type", "where", "TI", "queued_by_job_id", "self", "job", "id", "unique", "all"], ["self", "log", "warning", "len", "zombies", "limit_dttm"], ["zombie_message_details", "self", "_generate_zombie_message_details", "ti"], ["self", "log", "error", "request"], ["self", "job", "executor", "send_callback", "request"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner._find_zombies", "ret_exprs": [], "ret_type": "None", "variables": {"limit_dttm": "", "request": "", "zombie_message_details": "", "zombies": "builtins.list[builtins.tuple[TI, builtins.str, builtins.str]]"}, "variables_p": {"limit_dttm": [["Dict[str, str]", 0.115578679909109], ["qutebrowser.utils.urlmatch.UrlPattern", 0.09735908281123415]], "request": [["kedro.framework.session.session.KedroSession", 0.10617742232748544], ["vjemmie.utils.voting.VotingSession", 0.08408257044901607]], "zombie_message_details": [["raiden.utils.SecretHash", 0.08917872886911807]], "zombies": [["list", 0.6120597044515824], ["Dict[str, str]", 0.1925303002011396], ["int", 0.09061123284173994]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1729, 4], [1743, 37]], "fn_var_ln": {"zombie_message_details": [[1730, 8], [1730, 30]]}, "fn_var_occur": {"zombie_message_details": [["zombie_message_details", "ti", "dag_id", "ti", "task_id", "ti", "run_id"], ["zombie_message_details", "ti", "map_index"], ["zombie_message_details", "ti", "hostname"], ["zombie_message_details", "ti", "external_executor_id"]]}, "name": "_generate_zombie_message_details", "params": {"ti": "TI"}, "params_descr": {"ti": ""}, "params_occur": {"ti": [["zombie_message_details", "ti", "dag_id", "ti", "task_id", "ti", "run_id"], ["ti", "map_index"], ["zombie_message_details", "ti", "map_index"], ["ti", "hostname"], ["zombie_message_details", "ti", "hostname"], ["ti", "external_executor_id"], ["zombie_message_details", "ti", "external_executor_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ti": [["int", 0.3038941083385899], ["float", 0.10803521762121887], ["dict", 0.09656466459037448], ["bool", 0.0938206061375097]]}, "q_name": "SchedulerJobRunner._generate_zombie_message_details", "ret_exprs": ["return zombie_message_details"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"zombie_message_details": ""}, "variables_p": {"zombie_message_details": [["str", 0.4095908384156069], ["datetime.datetime", 0.18181747502463932], ["decksite.data.models.person.Person", 0.11418647698774072], ["int", 0.09225044182180853]]}}, {"docstring": {"func": "Find all dags that were not updated by Dag Processor recently and mark them as inactive.", "long_descr": "In case one of DagProcessors is stopped (in case there are multiple of them\nfor different dag folders), it's dags are never marked as inactive.\nAlso remove dags from SerializedDag table.\nExecuted on schedule only if [scheduler]standalone_dag_processor is True.", "ret": null}, "fn_lc": [[1746, 4], [1768, 23]], "fn_var_ln": {"is_active": [[1766, 12], [1766, 25]], "limit_lpt": [[1756, 8], [1756, 17]], "stale_dags": [[1757, 8], [1757, 18]]}, "fn_var_occur": {"is_active": [["stale_dags", "session", "scalars", "select", "DagModel", "where", "DagModel", "is_active", "DagModel", "last_parsed_time", "limit_lpt", "all"], ["dag", "is_active", "False"]], "limit_lpt": [["limit_lpt", "timezone", "utcnow", "timedelta", "seconds", "self", "_dag_stale_not_seen_duration"], ["stale_dags", "session", "scalars", "select", "DagModel", "where", "DagModel", "is_active", "DagModel", "last_parsed_time", "limit_lpt", "all"], ["self", "log", "info", "len", "stale_dags", "limit_lpt"]], "stale_dags": [["stale_dags", "session", "scalars", "select", "DagModel", "where", "DagModel", "is_active", "DagModel", "last_parsed_time", "limit_lpt", "all"], ["self", "log", "info", "len", "stale_dags", "limit_lpt"]]}, "name": "_cleanup_stale_dags", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["self", "log", "debug", "self", "_dag_stale_not_seen_duration"], ["limit_lpt", "timezone", "utcnow", "timedelta", "seconds", "self", "_dag_stale_not_seen_duration"], ["self", "log", "debug"], ["self", "log", "info", "len", "stale_dags", "limit_lpt"]], "session": [["stale_dags", "session", "scalars", "select", "DagModel", "where", "DagModel", "is_active", "DagModel", "last_parsed_time", "limit_lpt", "all"], ["SerializedDagModel", "remove_dag", "dag_id", "dag", "dag_id", "session", "session"], ["session", "flush"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.3012287384199536], ["cnaas_nms.db.device.Device", 0.11160575467042211], ["models.Book", 0.09254768352910643]]}, "q_name": "SchedulerJobRunner._cleanup_stale_dags", "ret_exprs": ["return"], "ret_type": "None", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"is_active": "", "limit_lpt": "", "stale_dags": ""}, "variables_p": {"is_active": [["bool", 0.4732090382107022], ["str", 0.11342526221348176], ["list", 0.08303800310780629], ["int", 0.08247495810091444], ["Type[Dict[str, Any]]", 0.08060185052159462]], "limit_lpt": [], "stale_dags": [["datetime.datetime", 0.18452268341157416], ["bool", 0.12729049710253557], ["float", 0.10668760213768877], ["str", 0.09226134170578708], ["list", 0.09216731393508149], ["List[int]", 0.08959136052580864]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1770, 4], [1773, 16]], "fn_var_ln": {"is_orphaned": [[1772, 8], [1772, 27]]}, "fn_var_occur": {"is_orphaned": [["dataset", "is_orphaned", "expression", "true"]]}, "name": "_set_orphaned", "params": {"dataset": "airflow.models.dataset.DatasetModel", "self": ""}, "params_descr": {"dataset": "", "self": ""}, "params_occur": {"dataset": [["self", "log", "info", "dataset", "uri"], ["dataset", "is_orphaned", "expression", "true"]], "self": [["self", "log", "info", "dataset", "uri"]]}, "params_p": {"args": [], "dataset": [["str", 0.6723553886959589], ["float", 0.11388854457513904], ["zam_repondeur.models.Lecture", 0.10521095056506376]], "kwargs": [], "self": []}, "q_name": "SchedulerJobRunner._set_orphaned", "ret_exprs": ["return 1"], "ret_type": "builtins.int", "ret_type_p": [["bool", 0.5], ["float", 0.30000000000000004]], "variables": {"is_orphaned": ""}, "variables_p": {"is_orphaned": [["bool", 0.6896758162153108], ["str", 0.22073915187486437], ["List[int]", 0.08958503190982466]]}}, {"docstring": {"func": "Detects datasets that are no longer referenced in any DAG schedule parameters or task outlets and", "long_descr": "sets the dataset is_orphaned flag to True.", "ret": null}, "fn_lc": [[1776, 4], [1803, 54]], "fn_var_ln": {"orphaned_dataset_query": [[1781, 8], [1781, 30]], "updated_count": [[1802, 8], [1802, 21]]}, "fn_var_occur": {"orphaned_dataset_query": [["orphaned_dataset_query", "session", "scalars", "select", "DatasetModel", "join", "DagScheduleDatasetReference", "isouter", "True", "join", "TaskOutletDatasetReference", "isouter", "True", "group_by", "DatasetModel", "session", "get_bind", "dialect", "name", "DatasetModel", "id", "having", "and_", "func", "count", "DagScheduleDatasetReference", "dag_id", "func", "count", "TaskOutletDatasetReference", "dag_id"], ["updated_count", "sum", "self", "_set_orphaned", "dataset", "dataset", "orphaned_dataset_query"]], "updated_count": [["updated_count", "sum", "self", "_set_orphaned", "dataset", "dataset", "orphaned_dataset_query"], ["Stats", "gauge", "updated_count"]]}, "name": "_orphan_unreferenced_datasets", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["updated_count", "sum", "self", "_set_orphaned", "dataset", "dataset", "orphaned_dataset_query"]], "session": [["orphaned_dataset_query", "session", "scalars", "select", "DatasetModel", "join", "DagScheduleDatasetReference", "isouter", "True", "join", "TaskOutletDatasetReference", "isouter", "True", "group_by", "DatasetModel", "session", "get_bind", "dialect", "name", "DatasetModel", "id", "having", "and_", "func", "count", "DagScheduleDatasetReference", "dag_id", "func", "count", "TaskOutletDatasetReference", "dag_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["labm8.py.sqlutil.Session", 0.10500155119447142], ["labm8.py.sqlutil.Query", 0.10500155119447142], ["fal.models.Season", 0.09950531930852433], ["sqlalchemy.orm.Session", 0.0983616835456884], ["sqlalchemy.orm.session.Session", 0.0912412591147217]]}, "q_name": "SchedulerJobRunner._orphan_unreferenced_datasets", "ret_exprs": [], "ret_type": "None", "variables": {"orphaned_dataset_query": "", "updated_count": ""}, "variables_p": {"orphaned_dataset_query": [["str", 0.4920876517425422], ["Optional[str]", 0.1092026516671775], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08102618471003938], ["Dict[str, str]", 0.08093021156450914], ["TypeError", 0.07489287718671374]], "updated_count": [["str", 0.2199144611732124], ["List[Optional[str]]", 0.18383519993446673], ["multiprocessing.managers.SyncManager", 0.16882296546968856], ["list", 0.10868873795494421], ["range", 0.09119388340744614]]}}], "name": "SchedulerJobRunner", "q_name": "SchedulerJobRunner", "variables": {"heartrate": "builtins.int", "job_type": ""}, "variables_p": {"heartrate": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "job_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]]}}], "funcs": [{"docstring": {"func": "Whether this is a parent process.", "long_descr": "Return True if the current process is the parent process.\nFalse if the current process is a child process started by multiprocessing.", "ret": null}, "fn_lc": [[113, 0], [120, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_is_parent_process", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_is_parent_process", "ret_exprs": ["return multiprocessing.current_process().name == \"MainProcess\""], "ret_type": "builtins.bool", "ret_type_p": [["mypy.types.Type", 0.3673792645079792], ["bool", 0.20818950467389344], ["str", 0.09998731591381349]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "itertools", "logging", "multiprocessing", "os", "signal", "sys", "time", "warnings", "collections", "Counter", "dataclasses", "dataclass", "datetime", "datetime", "timedelta", "functools", "lru_cache", "partial", "pathlib", "Path", "typing", "TYPE_CHECKING", "Any", "Callable", "Collection", "Iterable", "Iterator", "sqlalchemy", "and_", "delete", "func", "not_", "or_", "select", "text", "update", "sqlalchemy", "engine", "Result", "sqlalchemy", "exc", "OperationalError", "sqlalchemy", "orm", "Query", "Session", "load_only", "make_transient", "selectinload", "sqlalchemy", "sql", "expression", "airflow", "settings", "airflow", "callbacks", "callback_requests", "DagCallbackRequest", "SlaCallbackRequest", "TaskCallbackRequest", "airflow", "callbacks", "pipe_callback_sink", "PipeCallbackSink", "airflow", "configuration", "conf", "airflow", "exceptions", "RemovedInAirflow3Warning", "airflow", "executors", "executor_loader", "ExecutorLoader", "airflow", "jobs", "base_job_runner", "BaseJobRunner", "airflow", "jobs", "job", "Job", "perform_heartbeat", "airflow", "models", "dag", "DAG", "DagModel", "airflow", "models", "dagbag", "DagBag", "airflow", "models", "dagrun", "DagRun", "airflow", "models", "dataset", "DagScheduleDatasetReference", "DatasetDagRunQueue", "DatasetEvent", "DatasetModel", "TaskOutletDatasetReference", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "models", "taskinstance", "SimpleTaskInstance", "TaskInstance", "TaskInstanceKey", "airflow", "stats", "Stats", "airflow", "ti_deps", "dependencies_states", "EXECUTION_STATES", "airflow", "timetables", "simple", "DatasetTriggeredTimetable", "airflow", "utils", "timezone", "airflow", "utils", "event_scheduler", "EventScheduler", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "utils", "retries", "MAX_DB_RETRIES", "retry_db_transaction", "run_with_db_retries", "airflow", "utils", "session", "NEW_SESSION", "create_session", "provide_session", "airflow", "utils", "sqlalchemy", "CommitProhibitorGuard", "is_lock_not_available_error", "prohibit_commit", "skip_locked", "tuple_in_condition", "with_row_locks", "airflow", "utils", "state", "DagRunState", "State", "TaskInstanceState", "airflow", "utils", "types", "DagRunType", "types", "FrameType", "airflow", "dag_processing", "manager", "DagFileProcessorAgent", "airflow", "models", "pool", "Pool", "airflow", "utils", "db", "DBLocks", "airflow", "dag_processing", "manager", "DagFileProcessorAgent", "airflow", "callbacks", "database_callback_sink", "DatabaseCallbackSink", "airflow", "models", "pool", "Pool", "airflow", "jobs", "job", "Job"], "mod_var_ln": {"DM": [[87, 0], [87, 2]], "DR": [[86, 0], [86, 2]], "TI": [[85, 0], [85, 2]]}, "mod_var_occur": {"DM": [["query", "select", "TI", "with_hint", "TI", "dialect_name", "join", "TI", "dag_run", "where", "DR", "run_type", "DagRunType", "BACKFILL_JOB", "DR", "state", "DagRunState", "RUNNING", "join", "TI", "dag_model", "where", "not_", "DM", "is_paused", "where", "TI", "state", "TaskInstanceState", "SCHEDULED", "options", "selectinload", "TI", "dag_model", "order_by", "TI", "priority_weight", "DR", "execution_date", "TI", "map_index"], ["dag_model", "DM", "get_dagmodel", "dag_run", "dag_id", "session"], ["zombies", "builtins", "list", "builtins", "tuple", "TI", "builtins", "str", "builtins", "str", "session", "execute", "select", "TI", "DM", "fileloc", "DM", "processor_subdir", "with_hint", "TI", "dialect_name", "join", "Job", "TI", "job_id", "Job", "id", "join", "DM", "TI", "dag_id", "DM", "dag_id", "where", "TI", "state", "TaskInstanceState", "RUNNING", "where", "or_", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "limit_dttm", "where", "Job", "job_type", "where", "TI", "queued_by_job_id", "self", "job", "id", "unique", "all"]], "DR": [["query", "select", "TI", "with_hint", "TI", "dialect_name", "join", "TI", "dag_run", "where", "DR", "run_type", "DagRunType", "BACKFILL_JOB", "DR", "state", "DagRunState", "RUNNING", "join", "TI", "dag_model", "where", "not_", "DM", "is_paused", "where", "TI", "state", "TaskInstanceState", "SCHEDULED", "options", "selectinload", "TI", "dag_model", "order_by", "TI", "priority_weight", "DR", "execution_date", "TI", "map_index"]], "TI": [["ti_concurrency_query", "sqlalchemy", "engine", "Result", "session", "execute", "select", "TI", "task_id", "TI", "run_id", "TI", "dag_id", "func", "count", "where", "TI", "state", "in_", "states", "group_by", "TI", "task_id", "TI", "run_id", "TI", "dag_id"], ["executable_tis", "builtins", "list", "TI"], ["query", "select", "TI", "with_hint", "TI", "dialect_name", "join", "TI", "dag_run", "where", "DR", "run_type", "DagRunType", "BACKFILL_JOB", "DR", "state", "DagRunState", "RUNNING", "join", "TI", "dag_model", "where", "not_", "DM", "is_paused", "where", "TI", "state", "TaskInstanceState", "SCHEDULED", "options", "selectinload", "TI", "dag_model", "order_by", "TI", "priority_weight", "DR", "execution_date", "TI", "map_index"], ["query", "query", "where", "not_", "TI", "pool", "in_", "starved_pools"], ["query", "query", "where", "not_", "TI", "dag_id", "in_", "starved_dags"], ["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "task_id", "starved_tasks"], ["task_filter", "tuple_in_condition", "TI", "dag_id", "TI", "run_id", "TI", "task_id", "starved_tasks_task_dagrun_concurrency"], ["query", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["task_instances_to_examine", "builtins", "list", "TI", "session", "scalars", "query", "all"], ["session", "execute", "update", "TI", "where", "TI", "dag_id", "dag_id", "TI", "state", "TaskInstanceState", "SCHEDULED", "values", "state", "TaskInstanceState", "FAILED", "execution_options", "synchronize_session"], ["filter_for_tis", "TI", "filter_for_tis", "executable_tis"], ["session", "execute", "update", "TI", "where", "filter_for_tis", "values", "state", "TaskInstanceState", "QUEUED", "queued_dttm", "timezone", "utcnow", "queued_by_job_id", "self", "job", "id", "execution_options", "synchronize_session", "False"], ["filter_for_tis", "TI", "filter_for_tis", "tis_with_right_state"], ["query", "select", "TI", "where", "filter_for_tis", "options", "selectinload", "TI", "dag_model"], ["tis", "typing", "Iterator", "TI", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["paused_runs", "session", "scalars", "select", "DagRun", "join", "DagRun", "dag_model", "join", "TI", "where", "DagModel", "is_paused", "expression", "true", "DagRun", "state", "DagRunState", "RUNNING", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "having", "DagRun", "last_scheduling_decision", "func", "max", "TI", "updated_at", "group_by", "DagRun"], ["unfinished_task_instances", "session", "scalars", "select", "TI", "where", "TI", "dag_id", "dag_run", "dag_id", "where", "TI", "run_id", "dag_run", "run_id", "where", "TI", "state", "in_", "State", "unfinished"], ["tasks_stuck_in_queued", "session", "scalars", "select", "TI", "where", "TI", "state", "State", "QUEUED", "TI", "queued_dttm", "timezone", "utcnow", "timedelta", "seconds", "self", "_task_queued_timeout", "TI", "queued_by_job_id", "self", "job", "id", "all"], ["query", "select", "TI", "where", "TI", "state", "in_", "resettable_states", "outerjoin", "TI", "queued_by_job", "where", "or_", "TI", "queued_by_job_id", "is_", "None", "Job", "state", "State", "RUNNING", "join", "TI", "dag_run", "where", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "DagRun", "state", "State", "RUNNING", "options", "load_only", "TI", "dag_id", "TI", "task_id", "TI", "run_id"], ["tis_to_reset_or_adopt", "with_row_locks", "query", "of", "TI", "session", "session", "skip_locked", "session", "session"], ["num_timed_out_tasks", "session", "execute", "update", "TI", "where", "TI", "state", "TaskInstanceState", "DEFERRED", "TI", "trigger_timeout", "timezone", "utcnow", "values", "state", "TaskInstanceState", "SCHEDULED", "next_method", "next_kwargs", "trigger_id", "None", "rowcount"], ["zombies", "builtins", "list", "builtins", "tuple", "TI", "builtins", "str", "builtins", "str", "session", "execute", "select", "TI", "DM", "fileloc", "DM", "processor_subdir", "with_hint", "TI", "dialect_name", "join", "Job", "TI", "job_id", "Job", "id", "join", "DM", "TI", "dag_id", "DM", "dag_id", "where", "TI", "state", "TaskInstanceState", "RUNNING", "where", "or_", "Job", "state", "State", "RUNNING", "Job", "latest_heartbeat", "limit_dttm", "where", "Job", "job_type", "where", "TI", "queued_by_job_id", "self", "job", "id", "unique", "all"]]}, "no_types_annot": {"D": 110, "I": 0, "U": 165}, "session_id": "kjikbJrXbzJAOMK4wXhwz9XYtsCKYcDisrG-rS-FdPA", "set": null, "tc": [false, null], "type_annot_cove": 0.4, "typed_seq": "", "untyped_seq": "", "variables": {"DM": "", "DR": "", "TI": ""}, "variables_p": {"DM": [["int", 0.11180808613275316], ["list", 0.10859400548357663], ["str", 0.1035526723448623]], "DR": [["int", 0.11180808613275316], ["list", 0.10859400548357663], ["str", 0.1035526723448623]], "TI": [["int", 0.20947688303925424], ["Dict[str, Union[Any, Any, Any]]", 0.10498595003415416], ["str", 0.10474281281318976], ["float", 0.09334233196607385]]}}}