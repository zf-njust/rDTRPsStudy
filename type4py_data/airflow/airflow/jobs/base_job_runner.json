{"error": null, "response": {"classes": [{"cls_lc": [[33, 0], [66, 61]], "cls_var_ln": {"job_type": [[36, 4], [36, 12]]}, "cls_var_occur": {"job_type": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[38, 4], [45, 25]], "fn_var_ln": {"job": [[45, 8], [45, 16]], "job_type": [[44, 8], [44, 20]]}, "fn_var_occur": {"job": [["job", "job_type", "job", "job_type", "self", "job_type"], ["Exception", "job", "job_type"], ["job", "job_type", "self", "job_type"], ["self", "job", "J", "job"]], "job_type": [["job", "job_type", "job", "job_type", "self", "job_type"], ["Exception", "job", "job_type"], ["job", "job_type", "self", "job_type"]]}, "name": "__init__", "params": {"job": "J", "self": ""}, "params_descr": {"job": "", "self": ""}, "params_occur": {"job": [["job", "job_type", "job", "job_type", "self", "job_type"], ["Exception", "job", "job_type"], ["job", "job_type", "self", "job_type"], ["self", "job", "J", "job"]], "self": [["job", "job_type", "job", "job_type", "self", "job_type"], ["job", "job_type", "self", "job_type"], ["self", "job", "J", "job"]]}, "params_p": {"args": [], "job": [["str", 0.20154940289952764], ["List[str]", 0.10273701421068636], ["float", 0.10191286133283148]], "kwargs": [], "self": []}, "q_name": "BaseJobRunner.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"job": "J", "job_type": ""}, "variables_p": {"job": [["str", 0.3107131337367644], ["Dict[str, List[str]]", 0.19334681534372417], ["List[str]", 0.19334681534372417], ["Dict[str, dataworkspaces.utils.param_utils.ParamDef]", 0.09244435059654221], ["list", 0.08988283260752832]], "job_type": [["Dict[str, Dict[str, Any]]", 0.18884463708370522], ["Dict[str, List[str]]", 0.1736933827087357], ["str", 0.12486877034584934], ["Type[Dict[str, str]]", 0.12338790452041677], ["Dict[str, Tuple[str, str, str, Any]]", 0.1117724446189296], ["Dict[str, str]", 0.10660054379821662], ["Dict[str, Any]", 0.0872973528175949], ["frozenset[Any]", 0.08353496410655183]]}}, {"docstring": {"func": "Executes the logic connected to the runner. This method should be overridden by subclasses.", "long_descr": null, "ret": "return code if available, otherwise None"}, "fn_lc": [[47, 4], [54, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_execute", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseJobRunner._execute", "ret_exprs": [], "ret_type": "int | None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Callback that is called during heartbeat. This method can be overwritten by the runners.", "long_descr": null, "ret": null}, "fn_lc": [[57, 4], [58, 102]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "heartbeat_callback", "params": {"self": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [], "session": []}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["str", 0.2], ["Optional[sqlalchemy.orm.session.Session]", 0.2], ["list", 0.2], ["sqlalchemy.orm.unitofwork.UOWTransaction", 0.2], ["Iterable", 0.1]]}, "q_name": "BaseJobRunner.heartbeat_callback", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns the most recent job of this type, if any, based on last heartbeat received.", "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [66, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "most_recent_job", "params": {"cls": "", "session": "sqlalchemy.orm.Session"}, "params_descr": {"cls": "", "session": ""}, "params_occur": {"cls": [["most_recent_job", "cls", "job_type", "session", "session"]], "session": [["most_recent_job", "cls", "job_type", "session", "session"]]}, "params_p": {"args": [], "cls": [["bool", 0.11186010760065164], ["str", 0.10440127928420766], ["Optional[int]", 0.10440127928420766], ["Type", 0.10270257549353157]], "kwargs": [], "self": [], "session": [["bool", 0.11186010760065164], ["str", 0.10440127928420766], ["Optional[int]", 0.10440127928420766], ["Type", 0.10270257549353157]]}, "q_name": "BaseJobRunner.most_recent_job", "ret_exprs": ["return most_recent_job(cls.job_type, session=session)"], "ret_type": "Job | None", "ret_type_p": [["tuple", 0.3161962206564157]], "variables": {}, "variables_p": {}}], "name": "BaseJobRunner", "q_name": "BaseJobRunner", "variables": {"job_type": ""}, "variables_p": {"job_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]]}}], "funcs": [], "imports": ["__future__", "annotations", "typing", "TYPE_CHECKING", "Generic", "TypeVar", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "sqlalchemy", "orm", "Session", "airflow", "jobs", "job", "Job", "airflow", "serialization", "pydantic", "job", "JobPydantic", "airflow", "jobs", "job", "most_recent_job"], "mod_var_ln": {"J": [[30, 0], [30, 1]]}, "mod_var_occur": {"J": [["self", "job", "J", "job"]]}, "no_types_annot": {"D": 7, "I": 0, "U": 4}, "session_id": "Q0zaGgLlY42P5SqB7tswBgBvGSXOzSkzDxuBolOdVgQ", "set": null, "tc": [false, null], "type_annot_cove": 0.64, "typed_seq": "", "untyped_seq": "", "variables": {"J": ""}, "variables_p": {"J": [["int", 0.3925107823665965], ["str", 0.2069728329352639], ["OrderedDict", 0.10928839964189477], ["list", 0.05814311712309414]]}}}