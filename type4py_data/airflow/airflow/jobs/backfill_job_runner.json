{"error": null, "response": {"classes": [{"cls_lc": [[74, 4], [108, 36]], "cls_var_ln": {"active_runs": [[105, 8], [105, 19]], "deadlocked": [[104, 8], [104, 18]], "executed_dag_run_dates": [[106, 8], [106, 30]], "failed": [[102, 8], [102, 14]], "finished_runs": [[107, 8], [107, 21]], "not_ready": [[103, 8], [103, 17]], "running": [[99, 8], [99, 15]], "skipped": [[100, 8], [100, 15]], "succeeded": [[101, 8], [101, 17]], "to_run": [[98, 8], [98, 14]], "total_runs": [[108, 8], [108, 18]]}, "cls_var_occur": {"active_runs": [], "deadlocked": [], "executed_dag_run_dates": [], "failed": [], "finished_runs": [], "not_ready": [], "running": [], "skipped": [], "succeeded": [], "to_run": [], "total_runs": []}, "funcs": [], "name": "_DagRunTaskStatus", "q_name": "BackfillJobRunner._DagRunTaskStatus", "variables": {"active_runs": "builtins.list[airflow.models.dagrun.DagRun]", "deadlocked": "builtins.set[airflow.models.taskinstance.TaskInstance]", "executed_dag_run_dates": "builtins.set[pendulum.DateTime]", "failed": "builtins.set[airflow.models.taskinstance.TaskInstanceKey]", "finished_runs": "builtins.int", "not_ready": "builtins.set[airflow.models.taskinstance.TaskInstanceKey]", "running": "builtins.dict[airflow.models.taskinstance.TaskInstanceKey, airflow.models.taskinstance.TaskInstance]", "skipped": "builtins.set[airflow.models.taskinstance.TaskInstanceKey]", "succeeded": "builtins.set[airflow.models.taskinstance.TaskInstanceKey]", "to_run": "builtins.dict[airflow.models.taskinstance.TaskInstanceKey, airflow.models.taskinstance.TaskInstance]", "total_runs": "builtins.int"}, "variables_p": {"active_runs": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "deadlocked": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "executed_dag_run_dates": [["int", 0.2875916618177644], ["str", 0.21519382830985945], ["Type[leasing.models.invoice.InvoiceNote]", 0.14280157704760524], ["Type[leasing.models.invoice.InvoiceRow]", 0.14280157704760524], ["Optional[datetime.datetime]", 0.13846214091860193], ["datetime.datetime", 0.07314921485856374]], "failed": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "finished_runs": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "not_ready": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "running": [["int", 0.7], ["bool", 0.1], ["str", 0.1]], "skipped": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "succeeded": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "to_run": [["bool", 0.9999999982005254], ["int", 1.4041221170938033e-09]], "total_runs": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]]}}, {"cls_lc": [[61, 0], [1014, 29]], "cls_var_ln": {"STATES_COUNT_AS_RUNNING": [[71, 4], [71, 27]], "job_type": [[69, 4], [69, 12]]}, "cls_var_occur": {"STATES_COUNT_AS_RUNNING": [], "job_type": []}, "funcs": [{"docstring": {"func": "Create a BackfillJobRunner.", "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [169, 42]], "fn_var_ln": {"bf_end_date": [[156, 8], [156, 24]], "bf_start_date": [[155, 8], [155, 26]], "conf": [[164, 8], [164, 17]], "continue_on_failures": [[168, 8], [168, 33]], "dag": [[153, 8], [153, 16]], "dag_id": [[154, 8], [154, 19]], "delay_on_limit_secs": [[162, 8], [162, 32]], "disable_retry": [[169, 8], [169, 26]], "donot_pickle": [[158, 8], [158, 25]], "ignore_first_depends_on_past": [[159, 8], [159, 41]], "ignore_task_deps": [[160, 8], [160, 29]], "mark_success": [[157, 8], [157, 25]], "pool": [[161, 8], [161, 17]], "rerun_failed_tasks": [[165, 8], [165, 31]], "run_at_least_once": [[167, 8], [167, 30]], "run_backwards": [[166, 8], [166, 26]], "verbose": [[163, 8], [163, 20]]}, "fn_var_occur": {"bf_end_date": [["self", "bf_end_date", "end_date"]], "bf_start_date": [["self", "bf_start_date", "start_date"]], "conf": [["self", "conf", "conf"]], "continue_on_failures": [["self", "continue_on_failures", "continue_on_failures"]], "dag": [["self", "dag", "dag"], ["self", "dag_id", "dag", "dag_id"]], "dag_id": [["self", "dag_id", "dag", "dag_id"]], "delay_on_limit_secs": [["self", "delay_on_limit_secs", "delay_on_limit_secs"]], "disable_retry": [["self", "disable_retry", "disable_retry"]], "donot_pickle": [["self", "donot_pickle", "donot_pickle"]], "ignore_first_depends_on_past": [["self", "ignore_first_depends_on_past", "ignore_first_depends_on_past"]], "ignore_task_deps": [["self", "ignore_task_deps", "ignore_task_deps"]], "mark_success": [["self", "mark_success", "mark_success"]], "pool": [["self", "pool", "pool"]], "rerun_failed_tasks": [["self", "rerun_failed_tasks", "rerun_failed_tasks"]], "run_at_least_once": [["self", "run_at_least_once", "run_at_least_once"]], "run_backwards": [["self", "run_backwards", "run_backwards"]], "verbose": [["self", "verbose", "verbose"]]}, "name": "__init__", "params": {"conf": "", "continue_on_failures": "", "dag": "airflow.models.DAG", "delay_on_limit_secs": "", "disable_retry": "", "donot_pickle": "", "end_date": "", "ignore_first_depends_on_past": "", "ignore_task_deps": "", "job": "airflow.jobs.job.Job", "mark_success": "", "pool": "", "rerun_failed_tasks": "", "run_at_least_once": "", "run_backwards": "", "self": "", "start_date": "", "verbose": ""}, "params_descr": {"conf": "a dictionary which user could pass k-v pairs for backfill", "continue_on_failures": "", "dag": "DAG object.", "delay_on_limit_secs": "", "disable_retry": "", "donot_pickle": "whether pickle", "end_date": "end date for the backfill date range.", "ignore_first_depends_on_past": "whether to ignore depend on past", "ignore_task_deps": "whether to ignore the task dependency", "job": "", "mark_success": "flag whether to mark the task auto success.", "pool": "pool to backfill", "rerun_failed_tasks": "flag to whether to\nauto rerun the failed task in backfill", "run_at_least_once": "If true, always run the DAG at least once even\nif no logical run exists within the time range.", "run_backwards": "Whether to process the dates from most to least recent", "self": "", "start_date": "start date for the backfill date range.", "verbose": ""}, "params_occur": {"conf": [["self", "conf", "conf"]], "continue_on_failures": [["self", "continue_on_failures", "continue_on_failures"]], "dag": [["self", "dag", "dag"], ["self", "dag_id", "dag", "dag_id"]], "delay_on_limit_secs": [["self", "delay_on_limit_secs", "delay_on_limit_secs"]], "disable_retry": [["self", "disable_retry", "disable_retry"]], "donot_pickle": [["self", "donot_pickle", "donot_pickle"]], "end_date": [["self", "bf_end_date", "end_date"]], "ignore_first_depends_on_past": [["self", "ignore_first_depends_on_past", "ignore_first_depends_on_past"]], "ignore_task_deps": [["self", "ignore_task_deps", "ignore_task_deps"]], "job": [["super", "__init__", "job"]], "mark_success": [["self", "mark_success", "mark_success"]], "pool": [["self", "pool", "pool"]], "rerun_failed_tasks": [["self", "rerun_failed_tasks", "rerun_failed_tasks"]], "run_at_least_once": [["self", "run_at_least_once", "run_at_least_once"]], "run_backwards": [["self", "run_backwards", "run_backwards"]], "self": [["self", "dag", "dag"], ["self", "dag_id", "dag", "dag_id"], ["self", "bf_start_date", "start_date"], ["self", "bf_end_date", "end_date"], ["self", "mark_success", "mark_success"], ["self", "donot_pickle", "donot_pickle"], ["self", "ignore_first_depends_on_past", "ignore_first_depends_on_past"], ["self", "ignore_task_deps", "ignore_task_deps"], ["self", "pool", "pool"], ["self", "delay_on_limit_secs", "delay_on_limit_secs"], ["self", "verbose", "verbose"], ["self", "conf", "conf"], ["self", "rerun_failed_tasks", "rerun_failed_tasks"], ["self", "run_backwards", "run_backwards"], ["self", "run_at_least_once", "run_at_least_once"], ["self", "continue_on_failures", "continue_on_failures"], ["self", "disable_retry", "disable_retry"]], "start_date": [["self", "bf_start_date", "start_date"]], "verbose": [["self", "verbose", "verbose"]]}, "params_p": {"args": [], "conf": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "continue_on_failures": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "dag": [["int", 0.2167963497461981], ["daylighdb.models.User", 0.20127837634881995], ["models.Record", 0.128288124235375], ["Optional[int]", 0.08369986116494549], ["datetime.datetime", 0.08308379149835741]], "delay_on_limit_secs": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "disable_retry": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "donot_pickle": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "end_date": [["datetime.date", 0.40009024210297317], ["Optional[datetime.date]", 0.2943860246722164], ["int", 0.2048825279728953], ["List[int]", 0.10064120525191504]], "ignore_first_depends_on_past": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "ignore_task_deps": [["dict", 0.28670565298422146], ["datetime", 0.28670565298422146], ["bool", 0.22068009535787772], ["zerver.models.UserProfile", 0.11034004767893886], ["datetime.datetime", 0.09556855099474049]], "job": [["List[str]", 0.18807194943493385], ["type", 0.15894360272052424], ["float", 0.11912722072988295], ["str", 0.11401941826557281], ["Sequence[str]", 0.086932161169929], ["datetime.datetime", 0.07568551691018], ["bool", 0.07436653165306326]], "kwargs": [], "mark_success": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "pool": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]], "rerun_failed_tasks": [["str", 0.3068613365401168], ["bool", 0.10927450353164558], ["Optional[Callable]", 0.09816245716376035], ["int", 0.09668987575950995], ["Dict[str, Any]", 0.09645032461057287], ["limbic.emotion.models.LexiconLimbicModel", 0.09573920393499714], ["recidiviz.persistence.entity.state.entities.StatePerson", 0.09509327790551494]], "run_at_least_once": [["str", 0.6318075632012252], ["Optional[str]", 0.19192824062964153], ["Optional[bool]", 0.17626419616913327]], "run_backwards": [["str", 0.6318075632012252], ["Optional[str]", 0.19192824062964153], ["Optional[bool]", 0.17626419616913327]], "self": [], "start_date": [["datetime.date", 0.3511532670322725], ["int", 0.18406196366059627], ["datetime.datetime", 0.10146416129039441], ["Optional[datetime.datetime]", 0.10146416129039441], ["str", 0.0882568148289779], ["datetime", 0.08760166439793282], ["fklearn.types.DateType", 0.08599796749943178]], "verbose": [["List[recidiviz.persistence.entity.state.entities.StateSupervisionSentence]", 0.20708401650112998], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationSentence]", 0.20708401650112998], ["float", 0.15905858813844276], ["bool", 0.14595042395981764], ["str", 0.11190309917172045], ["datetime.datetime", 0.06047188010410505]]}, "q_name": "BackfillJobRunner.__init__", "ret_exprs": [], "ret_type": "None", "variables": {"bf_end_date": "", "bf_start_date": "", "conf": "", "continue_on_failures": "", "dag": "", "dag_id": "", "delay_on_limit_secs": "", "disable_retry": "", "donot_pickle": "", "ignore_first_depends_on_past": "", "ignore_task_deps": "", "mark_success": "", "pool": "", "rerun_failed_tasks": "", "run_at_least_once": "", "run_backwards": "", "verbose": ""}, "variables_p": {"bf_end_date": [["datetime.date", 0.6197724007732106], ["datetime.datetime.datetime", 0.2777189390388737], ["datetime.datetime", 0.1025086601879157]], "bf_start_date": [["datetime.date", 1.0]], "conf": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "continue_on_failures": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "dag": [["str", 0.849852079822105], ["int", 0.15014792017789494]], "dag_id": [["int", 0.7764564279050963], ["str", 0.2235435720949038]], "delay_on_limit_secs": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "disable_retry": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "donot_pickle": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "ignore_first_depends_on_past": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "ignore_task_deps": [["bool", 0.2883859777899262], ["int", 0.18956841404786137], ["grouper.models.base.session.Session", 0.09957798766461932], ["Sequence[int]", 0.09701896257850022], ["zerver.models.UserProfile", 0.09216580392762952]], "mark_success": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "pool": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "rerun_failed_tasks": [["int", 0.9999999999999999]], "run_at_least_once": [["int", 0.2943183876625308], ["str", 0.20607528529304636], ["Pattern[Any]", 0.10964688114783122]], "run_backwards": [["int", 0.2943183876625308], ["str", 0.20607528529304636], ["Pattern[Any]", 0.10964688114783122]], "verbose": [["bool", 0.4273429380360943], ["List[bool]", 0.12317236579973947], ["Optional[types.FrameType]", 0.10362098291578212], ["list", 0.09048816066553682], ["int", 0.09037484399750441], ["Optional[datetime.timedelta]", 0.08638758820957163]]}}, {"docstring": {"func": "Updates the counters per state of the tasks that were running.", "long_descr": "Can re-add to tasks to run when required.", "ret": null}, "fn_lc": [[171, 4], [247, 27]], "fn_var_ln": {"TI": [[181, 8], [181, 10]], "filter_for_tis": [[240, 12], [240, 26]], "refreshed_tis": [[187, 12], [187, 25]], "ti_key": [[191, 12], [191, 18]], "ti_primary_key_to_ti_key": [[183, 8], [183, 32]], "tis_to_be_scheduled": [[179, 8], [179, 27]]}, "fn_var_occur": {"TI": [["TI", "TaskInstance"], ["filter_for_tis", "TI", "filter_for_tis", "list", "ti_status", "running", "values"], ["refreshed_tis", "session", "scalars", "select", "TI", "where", "filter_for_tis", "all"], ["filter_for_tis", "TI", "filter_for_tis", "tis_to_be_scheduled"], ["session", "execute", "update", "TI", "where", "filter_for_tis", "values", "state", "TaskInstanceState", "SCHEDULED", "execution_options", "synchronize_session", "False"]], "filter_for_tis": [["filter_for_tis", "TI", "filter_for_tis", "list", "ti_status", "running", "values"], ["filter_for_tis", "None"], ["refreshed_tis", "session", "scalars", "select", "TI", "where", "filter_for_tis", "all"], ["filter_for_tis", "TI", "filter_for_tis", "tis_to_be_scheduled"], ["session", "execute", "update", "TI", "where", "filter_for_tis", "values", "state", "TaskInstanceState", "SCHEDULED", "execution_options", "synchronize_session", "False"]], "refreshed_tis": [["refreshed_tis", "session", "scalars", "select", "TI", "where", "filter_for_tis", "all"]], "ti_key": [["ti_primary_key_to_ti_key", "ti_key", "primary", "ti_key", "ti_key", "ti_status", "running", "keys"], ["ti_key", "ti_primary_key_to_ti_key", "ti", "key", "primary"], ["ti_status", "succeeded", "add", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "skipped", "add", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "failed", "add", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "running", "pop", "ti_key"]], "ti_primary_key_to_ti_key": [["ti_primary_key_to_ti_key", "ti_key", "primary", "ti_key", "ti_key", "ti_status", "running", "keys"], ["ti_key", "ti_primary_key_to_ti_key", "ti", "key", "primary"]], "tis_to_be_scheduled": [["tis_to_be_scheduled", "append", "ti"], ["filter_for_tis", "TI", "filter_for_tis", "tis_to_be_scheduled"]]}, "name": "_update_counters", "params": {"self": "", "session": "sqlalchemy.orm.session.Session", "ti_status": "BackfillJobRunner._DagRunTaskStatus"}, "params_descr": {"self": "", "session": "", "ti_status": "the internal status of the backfill job tasks"}, "params_occur": {"self": [["self", "log", "debug", "ti"], ["self", "log", "debug", "ti"], ["self", "log", "error", "ti"], ["self", "log", "warning", "ti"], ["self", "log", "warning", "ti"], ["self", "log", "warning", "ti"], ["self", "log", "debug", "ti"]], "session": [["refreshed_tis", "session", "scalars", "select", "TI", "where", "filter_for_tis", "all"], ["session", "execute", "update", "TI", "where", "filter_for_tis", "values", "state", "TaskInstanceState", "SCHEDULED", "execution_options", "synchronize_session", "False"], ["session", "flush"]], "ti_status": [["ti_primary_key_to_ti_key", "ti_key", "primary", "ti_key", "ti_key", "ti_status", "running", "keys"], ["filter_for_tis", "TI", "filter_for_tis", "list", "ti_status", "running", "values"], ["ti_status", "succeeded", "add", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "skipped", "add", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "failed", "add", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "to_run", "ti", "key", "ti"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "to_run", "ti", "key", "ti"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "to_run", "ti", "key", "ti"], ["ti_status", "running", "pop", "ti_key"], ["ti_status", "to_run", "ti", "key", "ti"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["str", 0.2030208864236156], ["int", 0.09582820433226817], ["recidiviz.persistence.entity.state.entities.StateIncarcerationPeriod", 0.08879266649038868], ["sqlalchemy.orm.Query", 0.0872115243675672]], "ti_status": [["str", 0.18861098590068587], ["dict", 0.12133094146643787], ["Dict[str, Any]", 0.09268588439186576], ["List[search_service.models.table.Table]", 0.09045938707251176]]}, "q_name": "BackfillJobRunner._update_counters", "ret_exprs": [], "ret_type": "None", "variables": {"TI": "", "filter_for_tis": "", "refreshed_tis": "", "ti_key": "", "ti_primary_key_to_ti_key": "", "tis_to_be_scheduled": ""}, "variables_p": {"TI": [["str", 0.5459179540602438], ["float", 0.11058618891988005], ["int", 0.08207308314618184], ["dict", 0.07572081908161593]], "filter_for_tis": [["Set[str]", 0.32856721878943923], ["str", 0.1691202470501489], ["Dict[int, str]", 0.08348082538816887]], "refreshed_tis": [["int", 0.31396003471272105], ["float", 0.09543673528218441], ["str", 0.0917526680790148]], "ti_key": [["str", 0.11312983909987159]], "ti_primary_key_to_ti_key": [["str", 0.20763960455356573], ["pandas.core.groupby.base.OutputKey", 0.09222995807940644], ["Optional[str]", 0.0918162699713057]], "tis_to_be_scheduled": [["str", 0.34203889183582037], ["list", 0.31730006150542983], ["List[str]", 0.22595657624907195], ["Dict[str, str]", 0.11470447040967775]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[288, 12], [295, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_iter_task_needing_expansion", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BackfillJobRunner._manage_executor_state.<locals>._iter_task_needing_expansion", "ret_exprs": [], "ret_type": "typing.Iterator[airflow.models.abstractoperator.AbstractOperator]", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Compare task instances' states with that of the executor.", "long_descr": "Expands downstream mapped tasks when necessary.", "ret": "An iterable of expanded TaskInstance per MappedTask"}, "fn_lc": [[249, 4], [302, 66]], "fn_var_ln": {"executor": [[262, 8], [262, 16]], "info": [[266, 19], [266, 23]], "msg": [[280, 16], [280, 19]], "new_tis": [[301, 20], [301, 27]], "num_mapped_tis": [[301, 29], [301, 43]], "state": [[266, 12], [266, 17]], "ti": [[271, 12], [271, 14]]}, "fn_var_occur": {"executor": [], "info": [], "msg": [], "new_tis": [["new_tis", "num_mapped_tis", "node", "expand_mapped_task", "ti", "run_id", "session", "session"], ["node", "ti", "run_id", "new_tis", "num_mapped_tis"]], "num_mapped_tis": [["new_tis", "num_mapped_tis", "node", "expand_mapped_task", "ti", "run_id", "session", "session"], ["node", "ti", "run_id", "new_tis", "num_mapped_tis"]], "state": [["ti", "state", "self", "STATES_COUNT_AS_RUNNING"]], "ti": [["ti", "state", "self", "STATES_COUNT_AS_RUNNING"], ["new_tis", "num_mapped_tis", "node", "expand_mapped_task", "ti", "run_id", "session", "session"], ["node", "ti", "run_id", "new_tis", "num_mapped_tis"]]}, "name": "_manage_executor_state", "params": {"running": "typing.Mapping[airflow.models.taskinstance.TaskInstanceKey, airflow.models.taskinstance.TaskInstance]", "self": "", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"running": "dict of key, task to verify", "self": "", "session": ""}, "params_occur": {"running": [], "self": [["ti", "state", "self", "STATES_COUNT_AS_RUNNING"]], "session": [["new_tis", "num_mapped_tis", "node", "expand_mapped_task", "ti", "run_id", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "running": [["eth.db.backends.base.BaseDB", 0.1932847437402578], ["dict", 0.12396550680528544], ["Dict[str, Any]", 0.09975852788838759]], "self": [], "session": [["core.models.User", 0.12586764469933906], ["authentication.session.models.current_user.CurrentUser", 0.10867012932756998], ["Callable[[Type, str], bool]", 0.08664149018513138], ["sqlalchemy.orm.Session", 0.07776962008538615]]}, "q_name": "BackfillJobRunner._manage_executor_state", "ret_exprs": [], "ret_type": "typing.Iterator[builtins.tuple[airflow.models.abstractoperator.AbstractOperator, builtins.str, typing.Sequence[airflow.models.taskinstance.TaskInstance], builtins.int]]", "variables": {"executor": "", "info": "", "msg": "", "new_tis": "", "num_mapped_tis": "", "state": "", "ti": ""}, "variables_p": {"executor": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "info": [["List[List[str]]", 0.7999999999999999], ["str", 0.09999999999999999], ["staticmethod", 0.09999999999999999]], "msg": [["str", 0.7999999999999999], ["int", 0.2]], "new_tis": [["Dict[str, Any]", 0.13176999773278483], ["int", 0.10184176268528997], ["raiden.transfer.state.BalanceProofSignedState", 0.10061564843214427], ["raiden.utils.Any", 0.08560154498924934], ["Dict[str, int]", 0.08514484002881666]], "num_mapped_tis": [["int", 0.6023589165711131], ["datetime.date.time", 0.10342718690183843], ["str", 0.09752250150609475], ["Pattern[Any]", 0.088933640526455]], "state": [["str", 0.7993038120158301], ["List[str]", 0.10093164335551451], ["int", 0.09976454462865536]], "ti": [["list", 0.09249407398277658]]}}, {"docstring": {"func": "Return an existing dag run for the given run date or create one.", "long_descr": "If the max_active_runs limit is reached, this function will return None.", "ret": "a DagRun in state RUNNING or None"}, "fn_lc": [[305, 4], [369, 18]], "fn_var_ln": {"conf": [[337, 12], [337, 20]], "current_active_dag_count": [[326, 8], [326, 32]], "dag": [[361, 8], [361, 15]], "respect_dag_max_active_limit": [[335, 16], [335, 44]], "run": [[348, 8], [348, 11]], "run_date": [[321, 8], [321, 16]], "run_type": [[365, 8], [365, 20]], "runs": [[330, 8], [330, 12]], "start_date": [[339, 12], [339, 26]], "state": [[364, 8], [364, 17]]}, "fn_var_occur": {"conf": [["run", "conf", "self", "conf"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"]], "current_active_dag_count": [["current_active_dag_count", "dag", "get_num_active_runs", "external_trigger", "False"], ["respect_dag_max_active_limit", "current_active_dag_count", "dag", "max_active_runs"]], "dag": [["respect_dag_max_active_limit", "bool", "dag", "timetable", "can_be_scheduled", "dag", "is_subdag"], ["current_active_dag_count", "dag", "get_num_active_runs", "external_trigger", "False"], ["runs", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "run_date", "session", "session"], ["respect_dag_max_active_limit", "current_active_dag_count", "dag", "max_active_runs"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"], ["run", "dag", "dag"]], "respect_dag_max_active_limit": [["respect_dag_max_active_limit", "bool", "dag", "timetable", "can_be_scheduled", "dag", "is_subdag"], ["respect_dag_max_active_limit", "False"], ["respect_dag_max_active_limit", "current_active_dag_count", "dag", "max_active_runs"]], "run": [["run", "DagRun", "None"], ["run", "runs"], ["run", "state", "DagRunState", "RUNNING"], ["run", "conf", "self", "conf"], ["run", "start_date", "timezone", "utcnow"], ["run", "None"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"], ["run", "dag", "dag"], ["run", "state", "DagRunState", "RUNNING"], ["run", "run_type", "DagRunType", "BACKFILL_JOB"], ["run", "verify_integrity", "session", "session"], ["run", "notify_dagrun_state_changed", "msg"]], "run_date": [["run_date", "dagrun_info", "logical_date"], ["runs", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "run_date", "session", "session"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"]], "run_type": [["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"], ["run", "run_type", "DagRunType", "BACKFILL_JOB"]], "runs": [["runs", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "run_date", "session", "session"], ["run", "runs"]], "start_date": [["run", "start_date", "timezone", "utcnow"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"]], "state": [["run", "state", "DagRunState", "RUNNING"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"], ["run", "state", "DagRunState", "RUNNING"]]}, "name": "_get_dag_run", "params": {"dag": "airflow.models.DAG", "dagrun_info": "airflow.timetables.base.DagRunInfo", "self": "", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"dag": "DAG", "dagrun_info": "Schedule information for the dag run", "self": "", "session": "the database session object"}, "params_occur": {"dag": [["respect_dag_max_active_limit", "bool", "dag", "timetable", "can_be_scheduled", "dag", "is_subdag"], ["current_active_dag_count", "dag", "get_num_active_runs", "external_trigger", "False"], ["runs", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "run_date", "session", "session"], ["respect_dag_max_active_limit", "current_active_dag_count", "dag", "max_active_runs"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"], ["run", "dag", "dag"]], "dagrun_info": [["run_date", "dagrun_info", "logical_date"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"]], "self": [["run", "conf", "self", "conf"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"]], "session": [["runs", "DagRun", "find", "dag_id", "dag", "dag_id", "execution_date", "run_date", "session", "session"], ["run", "run", "dag", "create_dagrun", "execution_date", "run_date", "data_interval", "dagrun_info", "data_interval", "start_date", "timezone", "utcnow", "state", "DagRunState", "RUNNING", "external_trigger", "False", "session", "session", "conf", "self", "conf", "run_type", "DagRunType", "BACKFILL_JOB", "creating_job_id", "self", "job", "id"], ["run", "verify_integrity", "session", "session"]]}, "params_p": {"args": [], "dag": [["int", 0.19936884068995075], ["eventsourcing_helpers.models.AggregateRoot", 0.09911168689629825], ["List[Callable]", 0.09832226368675766], ["raiden.utils.Nonce", 0.09317470026774259]], "dagrun_info": [["cmk.utils.type_defs.ServiceName", 0.29622385739672186], ["cmk.utils.type_defs.HostName", 0.21649478418265924], ["Optional[dict]", 0.11288694861461113], ["Dict[str, Any]", 0.1121640968933437], ["solo.server.db.types.SQLEngine", 0.08142605264427358]], "kwargs": [], "self": [], "session": [["zerver.models.UserProfile", 0.46556699376197885], ["zam_repondeur.models.Dossier", 0.12616688154605174], ["sqlalchemy.orm.Session", 0.11044343384365166]]}, "q_name": "BackfillJobRunner._get_dag_run", "ret_exprs": ["return None", "return run"], "ret_type": "DagRun | None", "ret_type_p": [["str", 0.4335986537141541], ["bool", 0.11940471812271214], ["Optional[int]", 0.1015792214004126]], "variables": {"conf": "", "current_active_dag_count": "", "dag": "", "respect_dag_max_active_limit": "", "run": "", "run_date": "", "run_type": "", "runs": "", "start_date": "", "state": ""}, "variables_p": {"conf": [["bool", 0.09452852024657786], ["viewer.models.Gallery", 0.09364928331753902]], "current_active_dag_count": [["int", 0.26948521340611653], ["str", 0.10945072898385588], ["list", 0.09844059353760376], ["Counter[Any]", 0.09755396020861862], ["List[str]", 0.09199066766907243]], "dag": [["bool", 0.2969223280490421]], "respect_dag_max_active_limit": [["bool", 0.4059233380470755]], "run": [["str", 0.2551825532915479], ["Dict[starfish.core.types._constants.Axes, int]", 0.0944990549134547]], "run_date": [["str", 0.28513428672338087], ["datetime.datetime", 0.1969870084602652], ["list", 0.16000861354549442], ["dict", 0.08755293993910501], ["datetime.date", 0.08616218112454918]], "run_type": [["Optional[alerta.models.user.User]", 0.17921477371393352], ["str", 0.1237963618991163], ["Dict[str, Any]", 0.1028843001229651], ["List[Dict[str, Any]]", 0.10116690040708629], ["int", 0.09496014003851125], ["tests.models.Email", 0.09143863206024426], ["Dict[int, str]", 0.08661436544844221]], "runs": [["magic.models.deck.Deck", 0.2202645552333375], ["int", 0.18999701875440744]], "start_date": [["datetime.date", 0.24767691152942425], ["Dict[datetime.date, Dict[str, Any]]", 0.12383845576471213], ["datetime.datetime", 0.09292819345637605], ["datetime.datetime.datetime", 0.08790641955419916]], "state": [["Optional[str]", 0.38185279574949144], ["Optional[raiden.transfer.state.TokenNetworkState]", 0.13238031758708496], ["str", 0.10534451224192778]]}}, {"docstring": {"func": "Return a map of task instance keys to task instance objects for the given dag run.", "long_descr": null, "ret": null}, "fn_lc": [[372, 4], [409, 27]], "fn_var_ln": {"dag": [[396, 8], [396, 19]], "info": [[397, 8], [397, 12]], "schedulable_tis": [[398, 8], [398, 23]], "tasks_to_run": [[384, 8], [384, 20]]}, "fn_var_occur": {"dag": [["dag_run", "dag", "dag"]], "info": [["info", "dag_run", "task_instance_scheduling_decisions", "session", "session"], ["schedulable_tis", "info", "schedulable_tis"]], "schedulable_tis": [["schedulable_tis", "info", "schedulable_tis"], ["ti", "schedulable_tis"]], "tasks_to_run": [["tasks_to_run", "ti", "key", "ti"]]}, "name": "_task_instances_for_dag_run", "params": {"dag": "airflow.models.DAG", "dag_run": "airflow.models.dagrun.DagRun", "self": "", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"dag": "", "dag_run": "the dag run to get the tasks from", "self": "", "session": "the database session object"}, "params_occur": {"dag": [["dag_run", "dag", "dag"]], "dag_run": [["dag_run", "None"], ["self", "reset_state_for_orphaned_tasks", "filter_by_dag_run", "dag_run", "session", "session"], ["dag_run", "refresh_from_db", "session", "session"], ["make_transient", "dag_run"], ["dag_run", "dag", "dag"], ["info", "dag_run", "task_instance_scheduling_decisions", "session", "session"], ["dag_run", "get_task_instances", "session", "session"]], "self": [["self", "reset_state_for_orphaned_tasks", "filter_by_dag_run", "dag_run", "session", "session"]], "session": [["self", "reset_state_for_orphaned_tasks", "filter_by_dag_run", "dag_run", "session", "session"], ["dag_run", "refresh_from_db", "session", "session"], ["info", "dag_run", "task_instance_scheduling_decisions", "session", "session"], ["dag_run", "get_task_instances", "session", "session"], ["session", "commit"], ["session", "rollback"]]}, "params_p": {"args": [], "dag": [["str", 0.1991553880094311], ["int", 0.10829621096387886], ["django.db.models.QuerySet", 0.08973194419418658], ["List[str]", 0.08795716880935318]], "dag_run": [["Optional[\"Response\"]", 0.12088083370092575], ["Callable[..., T]", 0.09922470349498487], ["Dict[int, Dict[str, str]]", 0.0825387062951913], ["Optional[Any]", 0.08228559810200464]], "kwargs": [], "self": [], "session": [["Type[Any]", 0.1249594139591481], ["List[dict]", 0.09251029389473683], ["allennlp.models.model.Model", 0.09189837786515884]]}, "q_name": "BackfillJobRunner._task_instances_for_dag_run", "ret_exprs": ["return tasks_to_run", "return tasks_to_run"], "ret_type": "builtins.dict[airflow.models.taskinstance.TaskInstanceKey, airflow.models.taskinstance.TaskInstance]", "ret_type_p": [["float", 0.2154612422222363], ["Optional[str]", 0.11370732030160606], ["str", 0.10502573765183008], ["cmk.utils.type_defs.HostName", 0.09421104734234197], ["Mapping", 0.0913875411593639], ["Mapping[str, Any]", 0.0874232297999513]], "variables": {"dag": "", "info": "", "schedulable_tis": "", "tasks_to_run": ""}, "variables_p": {"dag": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "info": [["Dict[str, str]", 0.19133424077700498], ["str", 0.18051728771942904], ["List[app.models.User]", 0.11643988024519274], ["Dict[str, Union[Any, Any, Any]]", 0.11224235017460257]], "schedulable_tis": [["str", 3.0044892572888613e-11]], "tasks_to_run": [["Dict[str, str]", 0.32407079474692235], ["Dict[str, Union[Any, Any]]", 0.18160260913402113], ["List[str]", 0.11028559391725762], ["Type[Dict[str, Any]]", 0.10487054535690107], ["Dict[str, Union[Any, Any, Any]]", 0.099290938229139], ["list", 0.09261547468815616], ["Dict[str, Union[int, str]]", 0.08726404392760269]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[411, 4], [426, 104]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_log_progress", "params": {"self": "", "ti_status": "BackfillJobRunner._DagRunTaskStatus"}, "params_descr": {"self": "", "ti_status": ""}, "params_occur": {"self": [["self", "log", "info", "ti_status", "finished_runs", "ti_status", "total_runs", "len", "ti_status", "to_run", "len", "ti_status", "succeeded", "len", "ti_status", "running", "len", "ti_status", "failed", "len", "ti_status", "skipped", "len", "ti_status", "deadlocked", "len", "ti_status", "not_ready"], ["self", "log", "debug", "ti_status", "to_run", "values"]], "ti_status": [["self", "log", "info", "ti_status", "finished_runs", "ti_status", "total_runs", "len", "ti_status", "to_run", "len", "ti_status", "succeeded", "len", "ti_status", "running", "len", "ti_status", "failed", "len", "ti_status", "skipped", "len", "ti_status", "deadlocked", "len", "ti_status", "not_ready"], ["self", "log", "debug", "ti_status", "to_run", "values"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ti_status": [["int", 0.5072926400586428], ["str", 0.39386456505827616], ["stiff.models.Tagging", 0.09884279488308083]]}, "q_name": "BackfillJobRunner._log_progress", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[462, 12], [586, 44]], "fn_var_ln": {"backfill_context": [[511, 16], [511, 32]], "cfg_path": [[544, 28], [544, 36]], "dagrun": [[506, 20], [506, 26]], "ignore_depends_on_past": [[509, 20], [509, 42]], "queued_by_job_id": [[530, 24], [530, 43]], "queued_dttm": [[531, 24], [531, 38]], "state": [[529, 24], [529, 32]], "task": [[466, 16], [466, 23]]}, "fn_var_occur": {"backfill_context": [["backfill_context", "DepContext", "deps", "BACKFILL_QUEUED_DEPS", "ignore_depends_on_past", "ignore_depends_on_past", "ignore_task_deps", "self", "ignore_task_deps", "wait_for_past_depends_before_skipping", "False", "flag_upstream_failed", "True"], ["ti", "are_dependencies_met", "dep_context", "backfill_context", "session", "session", "verbose", "self", "verbose"]], "cfg_path": [["cfg_path", "None"], ["cfg_path", "tmp_configuration_copy"], ["executor", "queue_task_instance", "ti", "mark_success", "self", "mark_success", "pickle_id", "pickle_id", "ignore_task_deps", "self", "ignore_task_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "False", "pool", "self", "pool", "cfg_path", "cfg_path"]], "dagrun": [["dagrun", "ti", "get_dagrun", "session", "session"], ["ignore_depends_on_past", "dagrun", "execution_date", "start_date", "ti", "start_date"]], "ignore_depends_on_past": [["ignore_depends_on_past", "dagrun", "execution_date", "start_date", "ti", "start_date"], ["ignore_depends_on_past", "False"], ["backfill_context", "DepContext", "deps", "BACKFILL_QUEUED_DEPS", "ignore_depends_on_past", "ignore_depends_on_past", "ignore_task_deps", "self", "ignore_task_deps", "wait_for_past_depends_before_skipping", "False", "flag_upstream_failed", "True"], ["executor", "queue_task_instance", "ti", "mark_success", "self", "mark_success", "pickle_id", "pickle_id", "ignore_task_deps", "self", "ignore_task_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "False", "pool", "self", "pool", "cfg_path", "cfg_path"]], "queued_by_job_id": [["ti", "queued_by_job_id", "self", "job", "id"]], "queued_dttm": [["ti", "queued_dttm", "timezone", "utcnow"]], "state": [["self", "log", "debug", "ti", "ti", "state"], ["ti", "state", "TaskInstanceState", "SUCCESS"], ["ti", "state", "TaskInstanceState", "SKIPPED"], ["ti", "state", "TaskInstanceState", "FAILED", "TaskInstanceState", "UPSTREAM_FAILED"], ["self", "log", "error", "ti", "ti", "state"], ["ti", "state", "TaskInstanceState", "FAILED", "TaskInstanceState", "UPSTREAM_FAILED"], ["self", "log", "error", "ti", "ti", "state"], ["ti", "state", "TaskInstanceState", "QUEUED"], ["ti", "state", "TaskInstanceState", "UPSTREAM_FAILED"], ["ti", "state", "TaskInstanceState", "UP_FOR_RETRY"], ["ti", "state", "TaskInstanceState", "UP_FOR_RESCHEDULE"]], "task": [["task", "self", "dag", "get_task", "ti", "task_id", "include_subdags", "True"], ["ti", "task", "task"]]}, "name": "_per_task_process", "params": {"key": "", "session": "", "ti": "airflow.models.taskinstance.TaskInstance"}, "params_descr": {"key": "", "session": "", "ti": ""}, "params_occur": {"key": [["ti_status", "succeeded", "add", "key"], ["ti_status", "to_run", "pop", "key"], ["key", "ti_status", "running"], ["ti_status", "running", "pop", "key"], ["ti_status", "skipped", "add", "key"], ["ti_status", "to_run", "pop", "key"], ["key", "ti_status", "running"], ["ti_status", "running", "pop", "key"], ["key", "ti_status", "running"], ["ti_status", "running", "pop", "key"], ["ti_status", "failed", "add", "key"], ["ti_status", "to_run", "pop", "key"], ["key", "ti_status", "running"], ["ti_status", "running", "pop", "key"], ["ti_status", "running", "key", "ti"], ["ti_status", "to_run", "pop", "key"], ["ti_status", "failed", "add", "key"], ["ti_status", "to_run", "pop", "key"], ["key", "ti_status", "running"], ["ti_status", "running", "pop", "key"], ["key", "ti_status", "running"], ["ti_status", "running", "pop", "key"], ["ti_status", "to_run", "key", "ti"], ["key", "ti_status", "running"], ["ti_status", "running", "pop", "key"], ["ti_status", "to_run", "key", "ti"], ["ti_status", "not_ready", "add", "key"]], "session": [["ti", "refresh_from_db", "lock_for_update", "True", "session", "session"], ["ti", "set_state", "TaskInstanceState", "SCHEDULED", "session", "session"], ["dagrun", "ti", "get_dagrun", "session", "session"], ["ti", "are_dependencies_met", "dep_context", "backfill_context", "session", "session", "verbose", "self", "verbose"], ["session", "merge", "ti"], ["session", "commit"], ["session", "rollback"]], "ti": [["ti", "refresh_from_db", "lock_for_update", "True", "session", "session"], ["task", "self", "dag", "get_task", "ti", "task_id", "include_subdags", "True"], ["ti", "task", "task"], ["self", "log", "debug", "ti", "ti", "state"], ["ti", "state", "TaskInstanceState", "SUCCESS"], ["self", "log", "debug", "ti"], ["ti", "state", "TaskInstanceState", "SKIPPED"], ["self", "log", "debug", "ti"], ["ti", "state", "TaskInstanceState", "FAILED", "TaskInstanceState", "UPSTREAM_FAILED"], ["self", "log", "error", "ti", "ti", "state"], ["ti", "set_state", "TaskInstanceState", "SCHEDULED", "session", "session"], ["ti", "state", "TaskInstanceState", "FAILED", "TaskInstanceState", "UPSTREAM_FAILED"], ["self", "log", "error", "ti", "ti", "state"], ["dagrun", "ti", "get_dagrun", "session", "session"], ["ignore_depends_on_past", "dagrun", "execution_date", "start_date", "ti", "start_date"], ["ti", "are_dependencies_met", "dep_context", "backfill_context", "session", "session", "verbose", "self", "verbose"], ["executor", "has_task", "ti"], ["self", "log", "debug", "ti"], ["self", "log", "debug", "ti"], ["ti", "state", "TaskInstanceState", "QUEUED"], ["ti", "queued_by_job_id", "self", "job", "id"], ["ti", "queued_dttm", "timezone", "utcnow"], ["session", "merge", "ti"], ["executor", "queue_task_instance", "ti", "mark_success", "self", "mark_success", "pickle_id", "pickle_id", "ignore_task_deps", "self", "ignore_task_deps", "ignore_depends_on_past", "ignore_depends_on_past", "wait_for_past_depends_before_skipping", "False", "pool", "self", "pool", "cfg_path", "cfg_path"], ["ti_status", "running", "key", "ti"], ["ti", "state", "TaskInstanceState", "UPSTREAM_FAILED"], ["self", "log", "error", "ti"], ["ti", "state", "TaskInstanceState", "UP_FOR_RETRY"], ["self", "log", "debug", "ti"], ["ti_status", "to_run", "key", "ti"], ["ti", "state", "TaskInstanceState", "UP_FOR_RESCHEDULE"], ["self", "log", "debug", "ti"], ["ti_status", "to_run", "key", "ti"], ["self", "log", "debug", "ti"]]}, "params_p": {"args": [], "key": [["str", 0.3921441818830641], ["IO", 0.11432076141393284], ["Optional[Container[str]]", 0.10946097830145506], ["bool", 0.10158581790908686], ["Optional[str]", 0.09330302816085462], ["list", 0.0923347106817823]], "kwargs": [], "self": [], "session": [["core.models.GroupingKey", 0.5654865787658977], ["str", 0.09027771547093859], ["sqlalchemy.orm.Session", 0.08851938077452438], ["Dict[str, Any]", 0.085331720646164]], "ti": [["str", 0.6036636366721942], ["int", 0.09647569875281002], ["State", 0.09412786459905978]]}, "q_name": "BackfillJobRunner._process_backfill_task_instances.<locals>._per_task_process", "ret_exprs": ["return", "return", "return", "return", "return", "return", "return", "return"], "ret_type": "", "ret_type_p": [["int", 0.11094851512774241], ["utils.mssql_counters.Section", 0.1094250222246821], ["hollowman.http_wrappers.base.Apps", 0.09613076434017843], ["cmk.base.check_utils.TPersistedSections", 0.0848566225054096]], "variables": {"backfill_context": "", "cfg_path": "", "dagrun": "", "ignore_depends_on_past": "", "queued_by_job_id": "", "queued_dttm": "", "state": "", "task": ""}, "variables_p": {"backfill_context": [], "cfg_path": [["str", 0.19599286398683693], ["Optional[str]", 0.11977998810790715], ["Pattern", 0.10354555307047679]], "dagrun": [["grpy.core.models.Grouping", 0.27756491535301364], ["byceps.services.user.transfer.models.User", 0.1187710967964659], ["Dict[str, Any]", 0.10384185841947782], ["Optional[hpaction.models.HPActionDocuments]", 0.08858288770897549], ["list", 0.08569472299090965]], "ignore_depends_on_past": [["set", 0.2865122564668617], ["int", 0.1055730329020493]], "queued_by_job_id": [["str", 0.540745116593286], ["int", 0.1809611264355206], ["Dict[str, Dict[str, str]]", 0.1036904621278403], ["list", 0.09030073157978558]], "queued_dttm": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "state": [["T", 0.28740787604198964], ["raiden.utils.Any", 0.20232909105280572], ["list", 0.11436166440730308], ["str", 0.10328604960305797], ["int", 0.07908198241382587]], "task": [["Tuple[Any, Any, Any]", 0.3106827476254606], ["Dict[int, Any]", 0.1860671265447102], ["Type[dict]", 0.11055970493894235], ["Dict[str, Any]", 0.09642694689915322], ["Dict[str, List[Any]]", 0.0913172661427391], ["DefaultDict[Any, List[Any]]", 0.08695935726353778]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[672, 16], [676, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "to_keep", "params": {"key": "airflow.models.taskinstance.TaskInstanceKey"}, "params_descr": {"key": ""}, "params_occur": {"key": [["_per_task_process", "key", "ti", "session"], ["key", "dag_id", "node", "dag_id", "key", "task_id", "node", "task_id", "key", "run_id", "run_id"], ["key", "map_index", "max_map_index"]]}, "params_p": {"args": [], "key": [["str", 0.6001304105391234], ["int", 0.10238804869982542], ["T", 0.09147657887301995]], "kwargs": [], "self": []}, "q_name": "BackfillJobRunner._process_backfill_task_instances.<locals>.to_keep", "ret_exprs": ["return True", "return 0 <= key.map_index <= max_map_index"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.7321174198273458], ["BaseException", 0.08776028780296644]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Process a set of task instances from a set of DAG runs.", "long_descr": "Special handling is done to account for different task instance states\nthat could be present when running them in a backfill process.", "ret": "the list of execution_dates for the finished dag runs"}, "fn_lc": [[428, 4], [708, 33]], "fn_var_ln": {"_dag_runs": [[696, 12], [696, 21]], "executed_run_dates": [[450, 8], [450, 26]], "is_unit_test": [[452, 8], [452, 20]], "num_running_task_instances_in_dag": [[606, 24], [606, 57]], "num_running_task_instances_in_task": [[618, 28], [618, 62]], "num_running_task_instances_in_task_dagrun": [[631, 28], [631, 69]], "open_slots": [[600, 24], [600, 34]], "pool": [[594, 24], [594, 28]], "to_run": [[679, 16], [679, 32]]}, "fn_var_occur": {"_dag_runs": [["_dag_runs", "ti_status", "active_runs"]], "executed_run_dates": [["executed_run_dates", "append", "run", "execution_date"]], "is_unit_test": [], "num_running_task_instances_in_dag": [], "num_running_task_instances_in_task": [], "num_running_task_instances_in_task_dagrun": [], "open_slots": [], "pool": [], "to_run": [["ti_status", "to_run", "key", "ti", "key", "ti", "ti_status", "to_run", "items", "to_keep", "key"], ["ti_status", "to_run", "update", "ti", "key", "ti", "ti", "new_mapped_tis"]]}, "name": "_process_backfill_task_instances", "params": {"executor": "airflow.executors.base_executor.BaseExecutor", "pickle_id": "int | None", "self": "", "session": "sqlalchemy.orm.session.Session", "start_date": "datetime.datetime | None", "ti_status": "BackfillJobRunner._DagRunTaskStatus"}, "params_descr": {"executor": "the executor to run the task instances", "pickle_id": "the pickle_id if dag is pickled, None otherwise", "self": "", "session": "the current session object", "start_date": "the start date of the backfill job", "ti_status": "the internal status of the job"}, "params_occur": {"executor": [], "pickle_id": [], "self": [["self", "disable_retry", "ti", "state", "TaskInstanceState", "UP_FOR_RETRY"], ["self", "_update_counters", "ti_status", "ti_status", "session", "session"], ["self", "_log_progress", "ti_status"]], "session": [["new_ti", "set_state", "TaskInstanceState", "SCHEDULED", "session", "session"], ["ti", "set_state", "TaskInstanceState", "FAILED", "session", "session"], ["self", "_update_counters", "ti_status", "ti_status", "session", "session"], ["session", "commit"], ["run", "update_state", "session", "session"], ["session", "commit"]], "start_date": [], "ti_status": [["ti_status", "to_run", "key", "ti", "key", "ti", "ti_status", "to_run", "items", "to_keep", "key"], ["ti_status", "to_run", "update", "ti", "key", "ti", "ti", "new_mapped_tis"], ["ti_status", "running", "values"], ["self", "_update_counters", "ti_status", "ti_status", "session", "session"], ["_dag_runs", "ti_status", "active_runs"], ["ti_status", "finished_runs"], ["ti_status", "active_runs", "remove", "run"], ["self", "_log_progress", "ti_status"]]}, "params_p": {"args": [], "executor": [["bool", 0.3155238358563341], ["Optional[List[str]]", 0.11300878214998065], ["str", 0.09511559803061735], ["annotations.DictStrAny", 0.08591342839500181]], "kwargs": [], "pickle_id": [["bool", 0.3155238358563341], ["Optional[List[str]]", 0.11300878214998065], ["str", 0.09511559803061735], ["annotations.DictStrAny", 0.08591342839500181]], "self": [], "session": [["str", 0.09392135026830459], ["sqlalchemy.orm.session.Session", 0.0902869959379545], ["models.Queue", 0.0902869959379545], ["Callable", 0.07707657886557621]], "start_date": [["bool", 0.3155238358563341], ["Optional[List[str]]", 0.11300878214998065], ["str", 0.09511559803061735], ["annotations.DictStrAny", 0.08591342839500181]], "ti_status": [["Dict[str, Any]", 0.1886112394713093], ["Type['Model']", 0.1372599129772977], ["bool", 0.11940076802320865], ["recidiviz.common.constants.state.state_supervision_period.StateSupervisionPeriodSupervisionType", 0.09767750862157712], ["sqlalchemy.orm.query.Query", 0.08779860278266044], ["dict", 0.08629499960308977]]}, "q_name": "BackfillJobRunner._process_backfill_task_instances", "ret_exprs": ["return executed_run_dates"], "ret_type": "builtins.list", "ret_type_p": [["datetime.datetime", 0.21686498871064167], ["Optional[str]", 0.17672295834908822], ["recidiviz.calculator.pipeline.utils.incarceration_period_index.IncarcerationPeriodIndex", 0.14943598097150526], ["core.models.Grouping", 0.09494330761126134], ["Optional[float]", 0.08836147917454411]], "variables": {"_dag_runs": "", "executed_run_dates": "", "is_unit_test": "", "num_running_task_instances_in_dag": "", "num_running_task_instances_in_task": "", "num_running_task_instances_in_task_dagrun": "", "open_slots": "", "pool": "", "to_run": ""}, "variables_p": {"_dag_runs": [["str", 0.30385274389301087], ["dict", 0.22590114999814942], ["Dict[str, Dict[str, Any]]", 0.09254905759734779], ["int", 0.08826462112715835], ["bytes", 0.08684048948590156]], "executed_run_dates": [["list", 0.4943407070720698], ["List[List[Any]]", 0.13433362088506456], ["datetime.datetime.datetime", 0.10778100260098392], ["List[Tuple[float, str]]", 0.1028260427432074], ["str", 0.08236930275478768], ["int", 0.07834932394388673]], "is_unit_test": [["bool", 0.857149704470126], ["Type[pinner.users.models.User]", 0.14285029552987397]], "num_running_task_instances_in_dag": [["int", 0.5067542908529314], ["datetime.timedelta", 0.16942350781974036], ["zaimcsvconverter.models.FileCsvConvertId", 0.12557902571768773], ["list", 0.09247362395737102]], "num_running_task_instances_in_task": [["int", 0.4547042988420039], ["str", 0.3010973068473604], ["Dict[str, str]", 0.2441983943106356]], "num_running_task_instances_in_task_dagrun": [["int", 0.4547042988420039], ["str", 0.3010973068473604], ["Dict[str, str]", 0.2441983943106356]], "open_slots": [["str", 0.4000000000000001], ["frozenset[str]", 0.10000000000000002], ["Tuple[int, int]", 0.10000000000000002], ["Type[ajapaik.ajapaik.models.Album]", 0.10000000000000002], ["Type[my_wallestocks.models.Prices]", 0.10000000000000002]], "pool": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "to_run": [["str", 0.24553506320933435], ["int", 0.2195635507378232], ["dict", 0.09806365578806388], ["Dict[str, Dict[str, Any]]", 0.0929787187070966], ["list", 0.0862779464139754], ["Dict[str, Any]", 0.08255281167764922], ["Dict[int, Any]", 0.08104800750921771]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[712, 8], [731, 60]], "fn_var_ln": {"headers": [[729, 16], [729, 23]], "sorted_ti_keys": [[727, 16], [727, 30]]}, "fn_var_occur": {"headers": [["tabulate", "sorted_ti_keys", "headers", "headers"]], "sorted_ti_keys": [["sorted_ti_keys", "typing", "Any", "sorted", "ti_keys", "key", "ti_key", "ti_key", "run_id", "ti_key", "dag_id", "ti_key", "task_id", "ti_key", "map_index", "ti_key", "try_number"], ["sorted_ti_keys", "map", "k", "k", "sorted_ti_keys"], ["tabulate", "sorted_ti_keys", "headers", "headers"]]}, "name": "tabulate_ti_keys_set", "params": {"ti_keys": "typing.Iterable[airflow.models.taskinstance.TaskInstanceKey]"}, "params_descr": {"ti_keys": ""}, "params_occur": {"ti_keys": [["sorted_ti_keys", "typing", "Any", "sorted", "ti_keys", "key", "ti_key", "ti_key", "run_id", "ti_key", "dag_id", "ti_key", "task_id", "ti_key", "map_index", "ti_key", "try_number"], ["all", "key", "map_index", "key", "ti_keys"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ti_keys": [["bytes", 0.4027627349995894], ["List[bytes]", 0.19711461167794697], ["list", 0.0960079468744489]]}, "q_name": "BackfillJobRunner._collect_errors.<locals>.tabulate_ti_keys_set", "ret_exprs": ["return tabulate(sorted_ti_keys, headers=headers)"], "ret_type": "builtins.str", "ret_type_p": [["bool", 0.11248371373595939], ["cmk.utils.type_defs.HostName", 0.10262950217049349], ["cmk.utils.type_defs.Item", 0.10262950217049349], ["cmk.utils.type_defs.CheckPluginNameStr", 0.10262950217049349], ["Optional[cmk.utils.type_defs.SectionName]", 0.09840085693689173], ["str", 0.09206527859216186], ["Iterator[Tuple[hermes.types.UserType, hermes.types.EmailAddressType]]", 0.0905210745573135]], "variables": {"headers": "", "sorted_ti_keys": ""}, "variables_p": {"headers": [["Dict[str, str]", 0.33865248809007514], ["Dict[str, Any]", 0.10850597505651607], ["bytes", 0.0985478825497515], ["tuple", 0.09410872797323551], ["str", 0.09226145140054665], ["Tuple[bytes, bytes, bytes]", 0.0877861999438088], ["dict", 0.0867112025456056]], "sorted_ti_keys": [["str", 0.17129969305821818], ["int", 0.15329269213863117], ["Set[bytes]", 0.11917004680435192], ["List[bytes]", 0.11887816078532353], ["Dict[str, Union[Any, Any]]", 0.0960769228996329], ["Tuple[str]", 0.09058455744792523], ["bytes", 0.0875852575638053]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[711, 4], [766, 79]], "fn_var_ln": {"deadlocked_depends_on_past": [[738, 12], [738, 38]]}, "fn_var_occur": {"deadlocked_depends_on_past": [["deadlocked_depends_on_past", "any", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "False", "session", "session", "verbose", "self", "verbose", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "True", "session", "session", "verbose", "self", "verbose", "t", "ti_status", "deadlocked"]]}, "name": "_collect_errors", "params": {"self": "", "session": "sqlalchemy.orm.session.Session", "ti_status": "BackfillJobRunner._DagRunTaskStatus"}, "params_descr": {"self": "", "session": "", "ti_status": ""}, "params_occur": {"self": [["deadlocked_depends_on_past", "any", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "False", "session", "session", "verbose", "self", "verbose", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "True", "session", "session", "verbose", "self", "verbose", "t", "ti_status", "deadlocked"]], "session": [["deadlocked_depends_on_past", "any", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "False", "session", "session", "verbose", "self", "verbose", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "True", "session", "session", "verbose", "self", "verbose", "t", "ti_status", "deadlocked"]], "ti_status": [["ti_status", "failed"], ["tabulate_ti_keys_set", "ti_status", "failed"], ["ti_status", "deadlocked"], ["deadlocked_depends_on_past", "any", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "False", "session", "session", "verbose", "self", "verbose", "t", "are_dependencies_met", "dep_context", "DepContext", "ignore_depends_on_past", "True", "session", "session", "verbose", "self", "verbose", "t", "ti_status", "deadlocked"], ["tabulate_ti_keys_set", "ti_status", "succeeded"], ["tabulate_ti_keys_set", "ti_status", "running"], ["tabulate_ti_keys_set", "ti_status", "failed"], ["tabulate_ti_keys_set", "ti_status", "skipped"], ["tabulate_ti_keys_set", "ti", "key", "ti", "ti_status", "deadlocked"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["str", 0.18875888314255665]], "ti_status": [["str", 0.4143823502969063], ["int", 0.10315818674343731], ["Food.models.Product", 0.08963907240574347], ["datetime.datetime", 0.0884204555574923]]}, "q_name": "BackfillJobRunner._collect_errors", "ret_exprs": [], "ret_type": "typing.Iterator[builtins.str]", "variables": {"deadlocked_depends_on_past": ""}, "variables_p": {"deadlocked_depends_on_past": [["List[int]", 0.19930903319852766], ["Dict[str, float]", 0.1374961041345334], ["int", 0.08699158485423714]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[768, 4], [769, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_get_dag_with_subdags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "self", "dag", "subdags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BackfillJobRunner._get_dag_with_subdags", "ret_exprs": ["return [self.dag] + self.dag.subdags"], "ret_type": "builtins.list[airflow.models.DAG]", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Compute and execute dag runs and their respective task instances for the given dates.", "long_descr": "Returns a list of execution dates of the dag runs that were executed.", "ret": null}, "fn_lc": [[772, 4], [810, 72]], "fn_var_ln": {"dag_run": [[795, 16], [795, 23]], "processed_dag_run_dates": [[802, 8], [802, 31]], "tis_map": [[798, 16], [798, 23]]}, "fn_var_occur": {"dag_run": [["dag_run", "self", "_get_dag_run", "dagrun_info", "dag", "session", "session"], ["dag_run", "None"], ["tis_map", "self", "_task_instances_for_dag_run", "dag", "dag_run", "session", "session"], ["ti_status", "active_runs", "append", "dag_run"]], "processed_dag_run_dates": [["processed_dag_run_dates", "self", "_process_backfill_task_instances", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"], ["ti_status", "executed_dag_run_dates", "update", "processed_dag_run_dates"]], "tis_map": [["tis_map", "self", "_task_instances_for_dag_run", "dag", "dag_run", "session", "session"], ["ti_status", "to_run", "update", "tis_map"]]}, "name": "_execute_dagruns", "params": {"dagrun_infos": "typing.Iterable[airflow.timetables.base.DagRunInfo]", "executor": "airflow.executors.base_executor.BaseExecutor", "pickle_id": "int | None", "self": "", "session": "sqlalchemy.orm.session.Session", "start_date": "datetime.datetime | None", "ti_status": "BackfillJobRunner._DagRunTaskStatus"}, "params_descr": {"dagrun_infos": "Schedule information for dag runs", "executor": "the executor to use, it must be previously started", "pickle_id": "numeric id of the pickled dag, None if not pickled", "self": "", "session": "the current session object", "start_date": "backfill start date", "ti_status": "internal BackfillJobRunner status structure to tis track progress"}, "params_occur": {"dagrun_infos": [], "executor": [["processed_dag_run_dates", "self", "_process_backfill_task_instances", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "pickle_id": [["processed_dag_run_dates", "self", "_process_backfill_task_instances", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "self": [["self", "_get_dag_with_subdags"], ["dag_run", "self", "_get_dag_run", "dagrun_info", "dag", "session", "session"], ["tis_map", "self", "_task_instances_for_dag_run", "dag", "dag_run", "session", "session"], ["processed_dag_run_dates", "self", "_process_backfill_task_instances", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "session": [["dag_run", "self", "_get_dag_run", "dagrun_info", "dag", "session", "session"], ["tis_map", "self", "_task_instances_for_dag_run", "dag", "dag_run", "session", "session"], ["processed_dag_run_dates", "self", "_process_backfill_task_instances", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "start_date": [["processed_dag_run_dates", "self", "_process_backfill_task_instances", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "ti_status": [["ti_status", "active_runs", "append", "dag_run"], ["ti_status", "to_run", "update", "tis_map"], ["processed_dag_run_dates", "self", "_process_backfill_task_instances", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"], ["ti_status", "executed_dag_run_dates", "update", "processed_dag_run_dates"]]}, "params_p": {"args": [], "dagrun_infos": [["Callable", 0.35911979968715946], ["str", 0.11988587275763053], ["List[Dict]", 0.11517549759623356], ["Callable[[], Iterator[Any]]", 0.09730797622242734], ["Iterable[str]", 0.0958724992593882], ["db.models.Taxon", 0.09275248171953053]], "executor": [["str", 0.49941603983023514], ["int", 0.2011365084076732], ["float", 0.10557357383192435]], "kwargs": [], "pickle_id": [["str", 0.49941603983023514], ["int", 0.2011365084076732], ["float", 0.10557357383192435]], "self": [], "session": [["bytes", 0.1946993461552469], ["recidiviz.persistence.database.schema.state.schema.StateIncarcerationPeriod", 0.10327897674573953], ["str", 0.09556465657417436], ["sqlalchemy.orm.Session", 0.0881469756603457], ["Type[T]", 0.08569749258767997], ["zilencer.models.RemoteZulipServer", 0.08383644250995866], ["Callable", 0.07831915140843536]], "start_date": [["str", 0.49941603983023514], ["int", 0.2011365084076732], ["float", 0.10557357383192435]], "ti_status": [["str", 0.17840297289246196], ["Optional[Dict]", 0.11892458324298948], ["bool", 0.11055776359375907], ["Optional[Tuple]", 0.10783841948719303], ["Optional[bool]", 0.10494431493960019], ["bytes", 0.09843428261465066], ["dict", 0.09191578633788962]]}, "q_name": "BackfillJobRunner._execute_dagruns", "ret_exprs": [], "ret_type": "None", "variables": {"dag_run": "", "processed_dag_run_dates": "", "tis_map": ""}, "variables_p": {"dag_run": [["metaswitch_tinder.database.models.Request", 0.18353695638508086], ["Dict[str, int]", 0.11452661059268994], ["sqlalchemy.orm.session.sessionmaker", 0.09198866947005284]], "processed_dag_run_dates": [["datetime.datetime", 0.5084205974246199], ["datetime.date", 0.2000345342890035], ["Dict[datetime.date, Dict[str, Any]]", 0.10001726714450175], ["raiden.utils.PaymentAmount", 0.09620176393350274], ["str", 0.095325837208372]], "tis_map": [["grouper.models.permission.Permission", 0.17872475957713727], ["tartare.core.models.Coverage", 0.12752116454836512], ["asgard.clients.chronos.models.job.ChronosContainerVolumeSpec", 0.11756626197847145], ["str", 0.10508759259093181], ["app.models.Journey", 0.09505705752131888], ["zilencer.models.RemoteZulipServer", 0.08896523670595256], ["tartare.core.models.Job", 0.08625962555355732]]}}, {"docstring": {"func": "Update the state of each dagrun based on the task_instance state and set unfinished runs to failed.", "long_descr": null, "ret": "None"}, "fn_lc": [[813, 4], [829, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_set_unfinished_dag_runs_to_failed", "params": {"dag_runs": "typing.Iterable[airflow.models.dagrun.DagRun]", "self": "", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"dag_runs": "DAG runs", "self": "", "session": "session"}, "params_occur": {"dag_runs": [], "self": [], "session": [["session", "merge", "dag_run"]]}, "params_p": {"args": [], "dag_runs": [["bool", 0.4722185065417066], ["str", 0.13052777267938867], ["List[django.db.models.query.QuerySet]", 0.09134915408742375], ["Set[str]", 0.09134915408742375], ["List[Dict[str, Any]]", 0.0734943469907726]], "kwargs": [], "self": [], "session": [["bool", 0.4317678602010677], ["Optional[Dict[str, Any]]", 0.12989576323749702], ["Optional[int]", 0.12989576323749702], ["Optional[str]", 0.08198912204153953], ["str", 0.07438036355917156], ["dict", 0.07125575110082755]]}, "q_name": "BackfillJobRunner._set_unfinished_dag_runs_to_failed", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Initialize all required components of a dag for a specified date range and execute the tasks.", "long_descr": null, "ret": null}, "fn_lc": [[832, 4], [946, 69]], "fn_var_ln": {"_": [[892, 24], [892, 25]], "dag_with_subdags_ids": [[864, 8], [864, 28]], "dagrun_end_date": [[847, 12], [847, 27]], "dagrun_infos": [[862, 12], [862, 24]], "dagrun_infos_to_process": [[909, 16], [909, 39]], "dagrun_start_date": [[843, 8], [843, 25]], "err": [[924, 16], [924, 19]], "executor": [[900, 8], [900, 16]], "executor_class": [[892, 8], [892, 22]], "job_id": [[901, 8], [901, 23]], "pickle": [[895, 12], [895, 18]], "pickle_id": [[898, 12], [898, 21]], "remaining_dates": [[923, 16], [923, 31]], "running_dagruns": [[865, 8], [865, 23]], "start_date": [[840, 8], [840, 18]], "tasks_that_depend_on_past": [[850, 12], [850, 37]], "ti_status": [[838, 8], [838, 17]], "total_runs": [[904, 8], [904, 28]]}, "fn_var_occur": {"_": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"]], "dag_with_subdags_ids": [["dag_with_subdags_ids", "d", "dag_id", "d", "self", "_get_dag_with_subdags"], ["running_dagruns", "DagRun", "find", "dag_id", "dag_with_subdags_ids", "execution_start_date", "self", "bf_start_date", "execution_end_date", "self", "bf_end_date", "no_backfills", "True", "state", "DagRunState", "RUNNING"]], "dagrun_end_date": [["dagrun_end_date", "pendulum", "now", "timezone", "utc"], ["dagrun_end_date", "pendulum", "instance", "self", "bf_end_date"], ["dagrun_infos", "list", "self", "dag", "iter_dagrun_infos_between", "dagrun_start_date", "dagrun_end_date"], ["dagrun_infos", "DagRunInfo", "interval", "dagrun_start_date", "dagrun_end_date"]], "dagrun_infos": [["dagrun_infos", "list", "self", "dag", "iter_dagrun_infos_between", "dagrun_start_date", "dagrun_end_date"], ["dagrun_infos", "dagrun_infos"], ["dagrun_infos", "DagRunInfo", "interval", "dagrun_start_date", "dagrun_end_date"], ["ti_status", "total_runs", "len", "dagrun_infos"], ["dagrun_infos_to_process", "dagrun_info", "dagrun_info", "dagrun_infos", "dagrun_info", "logical_date", "ti_status", "executed_dag_run_dates"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "dagrun_infos_to_process": [["dagrun_infos_to_process", "dagrun_info", "dagrun_info", "dagrun_infos", "dagrun_info", "logical_date", "ti_status", "executed_dag_run_dates"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "dagrun_start_date": [["dagrun_start_date", "timezone", "coerce_datetime", "start_date"], ["dagrun_infos", "list", "self", "dag", "iter_dagrun_infos_between", "dagrun_start_date", "dagrun_end_date"], ["dagrun_infos", "DagRunInfo", "interval", "dagrun_start_date", "dagrun_end_date"]], "err": [["err", "join", "self", "_collect_errors", "ti_status", "ti_status", "session", "session"], ["BackfillUnfinished", "err", "ti_status"]], "executor": [["executor", "self", "job", "executor"], ["executor", "job_id", "self", "job", "id"], ["executor", "start"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"], ["executor", "end"]], "executor_class": [["executor_class", "_", "ExecutorLoader", "import_default_executor_cls"], ["self", "donot_pickle", "executor_class", "supports_pickling"]], "job_id": [["executor", "job_id", "self", "job", "id"]], "pickle": [["pickle", "DagPickle", "self", "dag"], ["session", "add", "pickle"], ["pickle_id", "pickle", "id"]], "pickle_id": [["pickle_id", "None"], ["pickle_id", "pickle", "id"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "remaining_dates": [["remaining_dates", "ti_status", "total_runs"], ["remaining_dates", "ti_status", "total_runs", "len", "ti_status", "executed_dag_run_dates"]], "running_dagruns": [["running_dagruns", "DagRun", "find", "dag_id", "dag_with_subdags_ids", "execution_start_date", "self", "bf_start_date", "execution_end_date", "self", "bf_end_date", "no_backfills", "True", "state", "DagRunState", "RUNNING"]], "start_date": [["start_date", "self", "bf_start_date"], ["dagrun_start_date", "timezone", "coerce_datetime", "start_date"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"]], "tasks_that_depend_on_past": [["tasks_that_depend_on_past", "t", "task_id", "t", "self", "dag", "task_dict", "values", "t", "depends_on_past"], ["AirflowException", "join", "tasks_that_depend_on_past"]], "ti_status": [["ti_status", "BackfillJobRunner", "_DagRunTaskStatus"], ["ti_status", "total_runs", "len", "dagrun_infos"], ["remaining_dates", "ti_status", "total_runs"], ["dagrun_infos_to_process", "dagrun_info", "dagrun_info", "dagrun_infos", "dagrun_info", "logical_date", "ti_status", "executed_dag_run_dates"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"], ["remaining_dates", "ti_status", "total_runs", "len", "ti_status", "executed_dag_run_dates"], ["err", "join", "self", "_collect_errors", "ti_status", "ti_status", "session", "session"], ["self", "continue_on_failures", "ti_status", "deadlocked"], ["BackfillUnfinished", "err", "ti_status"], ["self", "_set_unfinished_dag_runs_to_failed", "ti_status", "active_runs"]], "total_runs": [["ti_status", "total_runs", "len", "dagrun_infos"], ["remaining_dates", "ti_status", "total_runs"], ["remaining_dates", "ti_status", "total_runs", "len", "ti_status", "executed_dag_run_dates"]]}, "name": "_execute", "params": {"self": "", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["start_date", "self", "bf_start_date"], ["self", "bf_end_date", "None"], ["dagrun_end_date", "pendulum", "instance", "self", "bf_end_date"], ["dagrun_infos", "list", "self", "dag", "iter_dagrun_infos_between", "dagrun_start_date", "dagrun_end_date"], ["self", "run_backwards"], ["tasks_that_depend_on_past", "t", "task_id", "t", "self", "dag", "task_dict", "values", "t", "depends_on_past"], ["self", "run_at_least_once"], ["self", "log", "info"], ["dag_with_subdags_ids", "d", "dag_id", "d", "self", "_get_dag_with_subdags"], ["running_dagruns", "DagRun", "find", "dag_id", "dag_with_subdags_ids", "execution_start_date", "self", "bf_start_date", "execution_end_date", "self", "bf_end_date", "no_backfills", "True", "state", "DagRunState", "RUNNING"], ["self", "log", "error", "run", "run_id", "run", "execution_date", "strftime", "run", "run_type"], ["self", "log", "error"], ["self", "donot_pickle", "executor_class", "supports_pickling"], ["pickle", "DagPickle", "self", "dag"], ["executor", "self", "job", "executor"], ["executor", "job_id", "self", "job", "id"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"], ["err", "join", "self", "_collect_errors", "ti_status", "ti_status", "session", "session"], ["self", "continue_on_failures", "ti_status", "deadlocked"], ["self", "log", "info", "self", "dag_id"], ["time", "sleep", "self", "delay_on_limit_secs"], ["self", "log", "warning"], ["self", "_set_unfinished_dag_runs_to_failed", "ti_status", "active_runs"], ["self", "log", "info", "self", "dag"]], "session": [["session", "add", "pickle"], ["session", "commit"], ["self", "_execute_dagruns", "dagrun_infos", "dagrun_infos_to_process", "ti_status", "ti_status", "executor", "executor", "pickle_id", "pickle_id", "start_date", "start_date", "session", "session"], ["err", "join", "self", "_collect_errors", "ti_status", "ti_status", "session", "session"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["nox.sessions.Session", 0.4716866224204005], ["sqlalchemy.orm.session.Session", 0.11543296896319145]]}, "q_name": "BackfillJobRunner._execute", "ret_exprs": ["return", "return"], "ret_type": "None", "ret_type_p": [["app.models.Article", 0.13399725164004506], ["core.models.Resource", 0.0889092504290877], ["Iterator", 0.08488967993129183]], "variables": {"_": "", "dag_with_subdags_ids": "", "dagrun_end_date": "", "dagrun_infos": "", "dagrun_infos_to_process": "", "dagrun_start_date": "", "err": "", "executor": "", "executor_class": "", "job_id": "", "pickle": "", "pickle_id": "", "remaining_dates": "", "running_dagruns": "", "start_date": "", "tasks_that_depend_on_past": "", "ti_status": "", "total_runs": ""}, "variables_p": {"_": [["str", 0.6986583503136683], ["float", 0.08684538395083312]], "dag_with_subdags_ids": [["int", 0.44695890395590016], ["str", 0.17981099602469103], ["raiden.utils.BlockNumber", 0.10487666234769621], ["List[int]", 0.09167483666299181], ["dict", 0.08584870416235199]], "dagrun_end_date": [["datetime.datetime", 0.3833268339016933], ["datetime.date", 0.2950875366212331], ["str", 0.10507596399705436], ["time.struct_time", 0.10475020307982291]], "dagrun_infos": [["Dict[str, Any]", 0.16157238619327713], ["Dict[str, Optional[int]]", 0.15298039478523076], ["int", 0.11281313178203324], ["Dict[str, int]", 0.09745548130801045], ["Dict[cmk.utils.type_defs.UserId, Dict[str, Any]]", 0.09586340408839455], ["Dict[datetime.date, Dict[str, Any]]", 0.09251721977633433], ["dict", 0.08111619862464974]], "dagrun_infos_to_process": [["legistar.models.RollCall", 0.10097202813144747], ["Dict[datetime.date, Dict[str, Any]]", 0.10043984593797854], ["list", 0.09922194599525651], ["List[Union[Any, Any]]", 0.09549372149654653], ["Dict[str, int]", 0.09531196041412389], ["Union[dict, Dict[str, bool]]", 0.0951327101404542]], "dagrun_start_date": [["datetime.date", 0.2739797838407474], ["raiden.utils.Any", 0.11380725844882293], ["salon.models.Stylist", 0.10937051819790088], ["dict", 0.10882575646407835], ["datetime.timedelta", 0.09482835831256678], ["datetime.datetime", 0.08713107433235262]], "err": [["str", 0.39497948131515803], ["list", 0.1743978902227397], ["pydynasync.models.Changes", 0.13234375164265946], ["Optional[str]", 0.10462087019034542], ["dict", 0.102962008480321], ["set", 0.09069599814877635]], "executor": [["float", 0.4128012461096032], ["Dict[int, Any]", 0.22155825717943955], ["int", 0.18664036343984206], ["list", 0.0974958352629921]], "executor_class": [["str", 0.9999999999999998]], "job_id": [["str", 0.8901151221406901], ["Dict[str, Dict[str, str]]", 0.1098848778593099]], "pickle": [["dict", 0.12444541118931945], ["int", 0.0865658723938609]], "pickle_id": [["Generator[Any, None, None]", 0.200894682069213], ["dict", 0.19065969356173387], ["Optional[src.pythonfinder.models.path.PathEntry]", 0.09664939920691415], ["int", 0.0965869629515265], ["Optional[int]", 0.09371983481473535]], "remaining_dates": [["datetime.date", 0.32110439490797504], ["datetime.datetime", 0.29093520096270997], ["datetime.datetime.datetime", 0.12077380247868867], ["datetime.date.time.date", 0.08826855098610929], ["str", 0.0851449415814344]], "running_dagruns": [["aw_core.models.Event", 0.10873287131113413], ["int", 0.098726171155274]], "start_date": [["datetime.date", 0.20085408537564753], ["datetime.datetime.datetime", 0.18488200140361963], ["raiden.utils.Any", 0.11929013187555071], ["salon.models.Stylist", 0.10246126620462132], ["dict", 0.09606165560155769], ["datetime.datetime", 0.08819922721563965]], "tasks_that_depend_on_past": [["List[Dict[str, Any]]", 0.20089379399480548], ["telegram.utils.AsyncResult", 0.11057956922385359], ["exporwiki.types.BiomeZoneVolume", 0.09684098621675426], ["set", 0.09670515461059942], ["dict", 0.08986171409896573]], "ti_status": [["legistar.models.MatterStatus", 0.14896772546898868], ["raiden.transfer.state.NetworkState", 0.06416292025912353]], "total_runs": [["int", 0.6909421772004662], ["Callable(time.perf_counter)[[], float]", 0.12355817289802098], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str]", 0.09463304675751026], ["list", 0.09086660314400254]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[991, 8], [1006, 37]], "fn_var_ln": {"filter_for_tis": [[995, 12], [995, 26]], "reset_tis": [[996, 12], [996, 21]], "state": [[1003, 16], [1003, 24]]}, "fn_var_occur": {"filter_for_tis": [["filter_for_tis", "TaskInstance", "filter_for_tis", "items"], ["reset_tis", "session", "scalars", "select", "TaskInstance", "where", "filter_for_tis", "TaskInstance", "state", "in_", "resettable_states", "with_for_update", "all"]], "reset_tis": [["reset_tis", "session", "scalars", "select", "TaskInstance", "where", "filter_for_tis", "TaskInstance", "state", "in_", "resettable_states", "with_for_update", "all"], ["result", "reset_tis"]], "state": [["resettable_tis", "session", "scalars", "select", "TaskInstance", "join", "TaskInstance", "dag_run", "where", "DagRun", "state", "DagRunState", "RUNNING", "DagRun", "run_type", "DagRunType", "BACKFILL_JOB", "TaskInstance", "state", "in_", "resettable_states", "all"], ["resettable_tis", "filter_by_dag_run", "get_task_instances", "state", "resettable_states", "session", "session"], ["reset_tis", "session", "scalars", "select", "TaskInstance", "where", "filter_for_tis", "TaskInstance", "state", "in_", "resettable_states", "with_for_update", "all"], ["ti", "state", "State", "NONE"]]}, "name": "query", "params": {"items": "", "result": ""}, "params_descr": {"items": "", "result": ""}, "params_occur": {"items": [["filter_for_tis", "TaskInstance", "filter_for_tis", "items"]], "result": [["result", "reset_tis"]]}, "params_p": {"args": [], "items": [["str", 0.37758050995059644], ["Food.models.Product", 0.10486353163335882], ["int", 0.08683785113060145]], "kwargs": [], "result": [["Counter", 0.14817931755077077], ["str", 0.12704622894484008], ["Dict[str, Any]", 0.11653139197930996], ["bool", 0.0904444486269523], ["Callable", 0.07406639918426412]], "self": []}, "q_name": "BackfillJobRunner.reset_state_for_orphaned_tasks.<locals>.query", "ret_exprs": ["return result", "return result + reset_tis"], "ret_type": "", "ret_type_p": [["bool", 0.18828129651514425], ["int", 0.10676653272759769], ["List[str]", 0.09845842570770622], ["dict", 0.09720953138763863]], "variables": {"filter_for_tis": "", "reset_tis": "", "state": ""}, "variables_p": {"filter_for_tis": [["str", 0.5097748528896086], ["Pattern[str]", 0.19536855549087534], ["dict", 0.10292703819984113], ["int", 0.10252037447581881]], "reset_tis": [["int", 0.7160394576467122], ["Dict[int, str]", 0.10479533334522416], ["List[int]", 0.08594935223586961]], "state": [["Dict[str, Any]", 0.2388069015141566], ["str", 0.17397200780121042], ["Optional[grouper.models.user_metadata.UserMetadata]", 0.0988267398201372], ["Optional[raiden.transfer.state.TokenNetworkState]", 0.09813080575035174], ["list", 0.09444174865538685], ["Dict[str, str]", 0.09440720112012996], ["cmk.utils.type_defs.UserId", 0.09107342177281096]]}}, {"docstring": {"func": "Reset state of orphaned tasks.", "long_descr": "This function checks if there are any tasks in the dagrun (or all) that\nhave a schedule or queued states but are not known by the executor. If\nit finds those it will reset the state to None so they will get picked\nup again.  The batch option is for performance reasons as the queries\nare made in sequence.", "ret": "the number of TIs reset"}, "fn_lc": [[949, 4], [1014, 29]], "fn_var_ln": {"queued_tis": [[966, 8], [966, 18]], "reset_tis": [[1008, 8], [1008, 17]], "resettable_states": [[971, 8], [971, 25]], "resettable_tis": [[985, 12], [985, 26]], "running_tis": [[968, 8], [968, 19]], "task_instance_str": [[1010, 8], [1010, 25]], "tis_to_reset": [[987, 8], [987, 20]]}, "fn_var_occur": {"queued_tis": [], "reset_tis": [["reset_tis", "helpers", "reduce_in_chunks", "query", "tis_to_reset", "self", "job", "max_tis_per_query"], ["task_instance_str", "join", "repr", "x", "x", "reset_tis"], ["self", "log", "info", "len", "reset_tis", "task_instance_str"], ["len", "reset_tis"]], "resettable_states": [], "resettable_tis": [], "running_tis": [], "task_instance_str": [["task_instance_str", "join", "repr", "x", "x", "reset_tis"], ["self", "log", "info", "len", "reset_tis", "task_instance_str"]], "tis_to_reset": [["reset_tis", "helpers", "reduce_in_chunks", "query", "tis_to_reset", "self", "job", "max_tis_per_query"]]}, "name": "reset_state_for_orphaned_tasks", "params": {"filter_by_dag_run": "DagRun | None", "self": "", "session": "sqlalchemy.orm.session.Session"}, "params_descr": {"filter_by_dag_run": "the dag_run we want to process, None if all", "self": "", "session": ""}, "params_occur": {"filter_by_dag_run": [], "self": [["reset_tis", "helpers", "reduce_in_chunks", "query", "tis_to_reset", "self", "job", "max_tis_per_query"], ["self", "log", "info", "len", "reset_tis", "task_instance_str"]], "session": [["session", "flush"]]}, "params_p": {"args": [], "filter_by_dag_run": [["bool", 0.32941041214931527], ["List[str]", 0.16657944532845], ["dict", 0.08261505910570152]], "kwargs": [], "self": [], "session": [["bool", 0.2495825505296606], ["dict", 0.21123926628966883], ["Optional[str]", 0.19766116860217087], ["Set[str]", 0.11713045825497821], ["int", 0.07595452793048088], ["str", 0.07405497521241262]]}, "q_name": "BackfillJobRunner.reset_state_for_orphaned_tasks", "ret_exprs": ["return 0", "return len(reset_tis)"], "ret_type": "int | None", "ret_type_p": [["int", 0.24989074791282173], ["str", 0.23239398111998533], ["Optional[int]", 0.09218861544755208], ["bool", 0.07167699897929265]], "variables": {"queued_tis": "", "reset_tis": "", "resettable_states": "", "resettable_tis": "", "running_tis": "", "task_instance_str": "", "tis_to_reset": ""}, "variables_p": {"queued_tis": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "reset_tis": [["Dict[str, Union[dict, Any]]", 0.187671999810258], ["float", 0.09189083404398962], ["str", 0.0891028569172983], ["int", 0.0891028569172983]], "resettable_states": [["str", 0.39999999999999997], ["int", 0.19999999999999998], ["raiden.transfer.mediated_transfer.state.InitiatorPaymentState", 0.09999999999999999], ["list", 0.09999999999999999]], "resettable_tis": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "running_tis": [["int", 0.7], ["bool", 0.1], ["str", 0.1]], "task_instance_str": [["str", 0.7070962917953614], ["bytes", 0.10769900922195647], ["int", 0.09710308091392474]], "tis_to_reset": [["str", 0.10088793074684345], ["Pattern[str]", 0.09285101517397815], ["OrderedDict[str, str]", 0.08752706158875465], ["myia.utils.orderedseOrderedSet", 0.08674174394032862]]}}], "name": "BackfillJobRunner", "q_name": "BackfillJobRunner", "variables": {"STATES_COUNT_AS_RUNNING": "", "job_type": ""}, "variables_p": {"STATES_COUNT_AS_RUNNING": [["str", 0.6906208714128459], ["int", 0.3093791285871541]], "job_type": [["str", 0.19999999999999998], ["int", 0.19999999999999998], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Tuple[Type[int], Type[float]]", 0.09999999999999999]]}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "time", "typing", "TYPE_CHECKING", "Any", "Iterable", "Iterator", "Mapping", "Sequence", "attr", "pendulum", "sqlalchemy", "select", "update", "sqlalchemy", "exc", "OperationalError", "sqlalchemy", "orm", "session", "Session", "make_transient", "tabulate", "tabulate", "airflow", "models", "airflow", "exceptions", "AirflowException", "BackfillUnfinished", "DagConcurrencyLimitReached", "NoAvailablePoolSlot", "PoolNotFound", "TaskConcurrencyLimitReached", "airflow", "executors", "executor_loader", "ExecutorLoader", "airflow", "jobs", "base_job_runner", "BaseJobRunner", "airflow", "jobs", "job", "Job", "perform_heartbeat", "airflow", "models", "DAG", "DagPickle", "airflow", "models", "dagrun", "DagRun", "airflow", "models", "taskinstance", "TaskInstance", "TaskInstanceKey", "airflow", "ti_deps", "dep_context", "DepContext", "airflow", "ti_deps", "dependencies_deps", "BACKFILL_QUEUED_DEPS", "airflow", "timetables", "base", "DagRunInfo", "airflow", "utils", "helpers", "timezone", "airflow", "utils", "configuration", "conf", "airflow_conf", "tmp_configuration_copy", "airflow", "utils", "log", "logging_mixin", "LoggingMixin", "airflow", "utils", "session", "NEW_SESSION", "provide_session", "airflow", "utils", "state", "DagRunState", "State", "TaskInstanceState", "airflow", "utils", "types", "DagRunType", "airflow", "executors", "base_executor", "BaseExecutor", "airflow", "models", "abstractoperator", "AbstractOperator", "airflow", "models", "mappedoperator", "AbstractOperator"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 58, "I": 0, "U": 105}, "session_id": "BIzD3qEkbA7MhtN5LOc32sRuwZibHInB-o64mzEX_SY", "set": null, "tc": [false, null], "type_annot_cove": 0.36, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}