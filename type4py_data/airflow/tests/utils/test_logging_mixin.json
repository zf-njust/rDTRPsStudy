{"error": null, "response": {"classes": [{"cls_lc": [[64, 0], [87, 32]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [66, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLoggingMixin.setup_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [84, 59]], "fn_var_ln": {"handler1": [[69, 8], [69, 16]], "handler2": [[69, 18], [69, 26]], "log": [[76, 8], [76, 11]], "parent": [[73, 8], [73, 14]], "propagate": [[78, 8], [78, 21]], "set_context": [[71, 8], [71, 28]], "value": [[80, 8], [80, 13]]}, "fn_var_occur": {"handler1": [["handler1", "handler2", "parent_child_handlers"], ["handler1", "set_context", "mock", "MagicMock"], ["parent", "addHandler", "handler1"], ["handler1", "set_context", "assert_called_once_with", "value"]], "handler2": [["handler1", "handler2", "parent_child_handlers"], ["handler2", "set_context", "mock", "MagicMock"], ["log", "addHandler", "handler2"], ["handler2", "set_context", "assert_called_once_with", "value"]], "log": [["log", "parent", "getChild"], ["log", "addHandler", "handler2"], ["log", "propagate", "True"], ["set_context", "log", "value"]], "parent": [["parent", "logging", "getLogger", "__name__"], ["parent", "propagate", "False"], ["parent", "addHandler", "handler1"], ["log", "parent", "getChild"]], "propagate": [["parent", "propagate", "False"], ["log", "propagate", "True"]], "set_context": [["handler1", "set_context", "mock", "MagicMock"], ["handler2", "set_context", "mock", "MagicMock"], ["set_context", "log", "value"], ["handler1", "set_context", "assert_called_once_with", "value"], ["handler2", "set_context", "assert_called_once_with", "value"]], "value": [["set_context", "log", "value"], ["handler1", "set_context", "assert_called_once_with", "value"], ["handler2", "set_context", "assert_called_once_with", "value"]]}, "name": "test_set_context", "params": {"child_logger": "", "parent_child_handlers": "", "self": ""}, "params_descr": {"child_logger": "", "parent_child_handlers": "", "self": ""}, "params_occur": {"child_logger": [], "parent_child_handlers": [["handler1", "handler2", "parent_child_handlers"]], "self": []}, "params_p": {"args": [], "child_logger": [["Type", 0.17443975321759064]], "kwargs": [], "parent_child_handlers": [], "self": []}, "q_name": "TestLoggingMixin.test_set_context", "ret_exprs": [], "ret_type": "", "variables": {"handler1": "", "handler2": "", "log": "", "parent": "", "propagate": "", "set_context": "", "value": ""}, "variables_p": {"handler1": [], "handler2": [["int", 0.08777985353490328]], "log": [["logging.Logger", 1.0]], "parent": [["logging.Logger", 0.5120232857068088], ["dict", 0.2123431214451779], ["logging.Formatter", 0.10786346753908214], ["logging.LoggerAdapter", 0.08499345526956652], ["logging.StreamHandler", 0.08277667003936477]], "propagate": [["logging.Formatter", 0.3534222366840527], ["Dict[int, int]", 0.17988342174018554], ["int", 0.17671111834202635], ["logging.StreamHandler", 0.10179717164667387], ["list", 0.08619343465798703]], "set_context": [], "value": [["float", 0.19490341351242096], ["str", 0.10542019942070598], ["pytch.utils.Range", 0.0931502521530714]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [87, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLoggingMixin.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestLoggingMixin", "q_name": "TestLoggingMixin", "variables": {}, "variables_p": {}}, {"cls_lc": [[90, 0], [142, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [105, 32]], "fn_var_ln": {"log": [[95, 8], [95, 11]], "logger": [[92, 8], [92, 14]], "msg": [[97, 8], [97, 11]]}, "fn_var_occur": {"log": [["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"], ["log", "write", "msg"], ["log", "_buffer", "msg"], ["log", "write"], ["logger", "log", "assert_called_once_with", "msg"], ["log", "_buffer"]], "logger": [["logger", "mock", "MagicMock"], ["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"], ["logger", "log", "assert_called_once_with", "msg"]], "msg": [["log", "write", "msg"], ["log", "_buffer", "msg"], ["logger", "log", "assert_called_once_with", "msg"]]}, "name": "test_write", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStreamLogWriter.test_write", "ret_exprs": [], "ret_type": "", "variables": {"log": "", "logger": "", "msg": ""}, "variables_p": {"log": [["logging.Logger", 0.17642459768723925], ["Dict[str, Union[Any, Any, Any]]", 0.11718102669227135], ["logging.Formatter", 0.11532335374560443]], "logger": [], "msg": [["str", 0.8490099684496426], ["logging.Formatter", 0.15099003155035734]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [121, 32]], "fn_var_ln": {"log": [[111, 8], [111, 11]], "logger": [[108, 8], [108, 14]], "msg": [[113, 8], [113, 11]]}, "fn_var_occur": {"log": [["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"], ["log", "write", "msg"], ["log", "_buffer", "msg"], ["log", "flush"], ["logger", "log", "assert_called_once_with", "msg"], ["log", "_buffer"]], "logger": [["logger", "mock", "MagicMock"], ["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"], ["logger", "log", "assert_called_once_with", "msg"]], "msg": [["log", "write", "msg"], ["log", "_buffer", "msg"], ["logger", "log", "assert_called_once_with", "msg"]]}, "name": "test_flush", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStreamLogWriter.test_flush", "ret_exprs": [], "ret_type": "", "variables": {"log": "", "logger": "", "msg": ""}, "variables_p": {"log": [["logging.Logger", 0.17423682715550826], ["Dict[str, Union[Any, Any, Any]]", 0.11348372742966584], ["logging.Formatter", 0.11126621617382494]], "logger": [], "msg": [["str", 0.8490099684496426], ["logging.Formatter", 0.15099003155035734]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[123, 4], [128, 31]], "fn_var_ln": {"log": [[127, 8], [127, 11]], "logger": [[124, 8], [124, 14]]}, "fn_var_occur": {"log": [["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"], ["log", "isatty"]], "logger": [["logger", "mock", "MagicMock"], ["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"]]}, "name": "test_isatty", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStreamLogWriter.test_isatty", "ret_exprs": [], "ret_type": "", "variables": {"log": "", "logger": ""}, "variables_p": {"log": [["mock.Mock", 0.34752014011199894]], "logger": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[130, 4], [135, 35]], "fn_var_ln": {"log": [[134, 8], [134, 11]], "logger": [[131, 8], [131, 14]]}, "fn_var_occur": {"log": [["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"], ["log", "encoding", "None"]], "logger": [["logger", "mock", "MagicMock"], ["logger", "log", "mock", "MagicMock"], ["log", "StreamLogWriter", "logger"]]}, "name": "test_encoding", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStreamLogWriter.test_encoding", "ret_exprs": [], "ret_type": "", "variables": {"log": "", "logger": ""}, "variables_p": {"log": [["mock.Mock", 0.3941429627523949]], "logger": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[137, 4], [142, 19]], "fn_var_ln": {"log": [[138, 8], [138, 11]]}, "fn_var_occur": {"log": [["log", "StreamLogWriter", "None"], ["log", "closed"], ["log", "close"]]}, "name": "test_iobase_compatibility", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStreamLogWriter.test_iobase_compatibility", "ret_exprs": [], "ret_type": "", "variables": {"log": ""}, "variables_p": {"log": [["logging.Logger", 0.7247858379035124], ["logging.Formatter", 0.19050344101547356]]}}], "name": "TestStreamLogWriter", "q_name": "TestStreamLogWriter", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 0], [36, 27]], "fn_var_ln": {"parent": [[32, 4], [32, 10]], "propagate": [[36, 4], [36, 20]]}, "fn_var_occur": {"parent": [["parent", "logging", "getLogger", "__name__"], ["parent", "propagate", "False"], ["parent", "propagate", "True"]], "propagate": [["parent", "propagate", "False"], ["parent", "propagate", "True"]]}, "name": "logger", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "logger", "ret_exprs": [], "ret_type": "", "variables": {"parent": "", "propagate": ""}, "variables_p": {"parent": [["dict", 0.37351561817251966], ["str", 0.17515994669390195], ["logging.Logger", 0.1698443261777294], ["Tuple[str, str, str]", 0.09698218215364439], ["logging.Formatter", 0.09454349590690313]], "propagate": [["Tuple[str, str, str, str, str, str, str, str, str, str]", 0.1395724312224679], ["Tuple[str, str, str, str, str, str, str]", 0.1395724312224679], ["List[str]", 0.0906534833959961], ["str", 0.07830993329543763], ["int", 0.0783003060742873]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 0], [41, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "child_logger", "params": {"logger": ""}, "params_descr": {"logger": ""}, "params_occur": {"logger": [["logger", "getChild"]]}, "params_p": {"args": [], "kwargs": [], "logger": [["List[Dict[str, float]]", 0.34786164712767464], ["logging.Logger", 0.27734987101126896], ["str", 0.19912764362419144]]}, "q_name": "child_logger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 0], [61, 45]], "fn_var_ln": {"child_handler": [[49, 4], [49, 17]], "handle": [[50, 4], [50, 24]], "logger": [[52, 4], [52, 10]], "parent_handler": [[46, 4], [46, 18]], "propagate": [[56, 4], [56, 26]]}, "fn_var_occur": {"child_handler": [["child_handler", "logging", "NullHandler"], ["child_handler", "handle", "mock", "MagicMock", "name"], ["child_logger", "addHandler", "child_handler"], ["parent_handler", "child_handler"], ["child_logger", "removeHandler", "child_handler"]], "handle": [["parent_handler", "handle", "mock", "MagicMock", "name"], ["child_handler", "handle", "mock", "MagicMock", "name"]], "logger": [["logger", "child_logger", "parent"], ["logger", "addHandler", "parent_handler"], ["logger", "removeHandler", "parent_handler"]], "parent_handler": [["parent_handler", "logging", "NullHandler"], ["parent_handler", "handle", "mock", "MagicMock", "name"], ["logger", "addHandler", "parent_handler"], ["parent_handler", "child_handler"], ["logger", "removeHandler", "parent_handler"]], "propagate": [["child_logger", "propagate", "True"]]}, "name": "parent_child_handlers", "params": {"child_logger": ""}, "params_descr": {"child_logger": ""}, "params_occur": {"child_logger": [["logger", "child_logger", "parent"], ["child_logger", "addHandler", "child_handler"], ["child_logger", "propagate", "True"], ["child_logger", "removeHandler", "child_handler"]]}, "params_p": {"args": [], "child_logger": [["List[Dict[str, float]]", 0.2648801303047314], ["logging.FileHandler", 0.11169262560406527], ["logging.Logger", 0.10971232610494074], ["logging.LogRecord", 0.08906993898820274]], "kwargs": []}, "q_name": "parent_child_handlers", "ret_exprs": [], "ret_type": "", "variables": {"child_handler": "", "handle": "", "logger": "", "parent_handler": "", "propagate": ""}, "variables_p": {"child_handler": [["logging.Logger", 0.09738694108527388]], "handle": [["mock.Mock", 0.5541557066185211], ["mode.utils.mocks.Mock", 0.1297718759309317]], "logger": [["logging.Logger", 1.0]], "parent_handler": [["mode.utils.mocks.Mock", 0.10296422841804466], ["str", 0.09347174696466301]], "propagate": [["str", 0.8999999999999999], ["bool", 0.09999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[146, 0], [176, 49]], "fn_var_ln": {"handler": [[149, 20], [149, 27]], "line": [[153, 4], [153, 8]], "parent_handler": [[149, 4], [149, 18]], "record": [[154, 4], [154, 10]], "set_context": [[150, 4], [150, 23]]}, "fn_var_occur": {"handler": [["parent_handler", "handler", "parent_child_handlers"], ["handler", "set_context", "mock", "MagicMock", "return_value", "maintain_propagate"], ["handler", "handle", "assert_called_once_with", "record"], ["handler", "handle", "reset_mock"], ["handler", "handle", "assert_called_once_with", "record"]], "line": [["line", "sys", "_getframe", "f_lineno"], ["record", "child_logger", "makeRecord", "child_logger", "name", "logging", "INFO", "__file__", "line", "None"]], "parent_handler": [["parent_handler", "handler", "parent_child_handlers"], ["parent_handler", "handle", "assert_called_once_with", "record"], ["parent_handler", "handle", "reset_mock"], ["parent_handler", "handle", "assert_called_once_with", "record"], ["parent_handler", "handle", "assert_not_called"]], "record": [["record", "child_logger", "makeRecord", "child_logger", "name", "logging", "INFO", "__file__", "line", "None"], ["child_logger", "handle", "record"], ["handler", "handle", "assert_called_once_with", "record"], ["parent_handler", "handle", "assert_called_once_with", "record"], ["child_logger", "handle", "record"], ["handler", "handle", "assert_called_once_with", "record"], ["parent_handler", "handle", "assert_called_once_with", "record"]], "set_context": [["handler", "set_context", "mock", "MagicMock", "return_value", "maintain_propagate"], ["set_context", "child_logger"]]}, "name": "test_set_context_propagation", "params": {"child_logger": "", "maintain_propagate": "", "parent_child_handlers": ""}, "params_descr": {"child_logger": "", "maintain_propagate": "", "parent_child_handlers": ""}, "params_occur": {"child_logger": [["record", "child_logger", "makeRecord", "child_logger", "name", "logging", "INFO", "__file__", "line", "None"], ["child_logger", "handle", "record"], ["set_context", "child_logger"], ["child_logger", "handle", "record"]], "maintain_propagate": [["handler", "set_context", "mock", "MagicMock", "return_value", "maintain_propagate"], ["maintain_propagate", "SetContextPropagate", "MAINTAIN_PROPAGATE"]], "parent_child_handlers": [["parent_handler", "handler", "parent_child_handlers"]]}, "params_p": {"args": [], "child_logger": [["raiden.tests.fuzz.utils.SendSecretRevealInNode", 0.10965381622849424], ["bool", 0.09835192178962432], ["str", 0.09093858515904242]], "kwargs": [], "maintain_propagate": [], "parent_child_handlers": [["str", 0.2894504608228694], ["bool", 0.11254191844698848], ["Optional[list]", 0.1008049879700215], ["List[Dict[str, Any]]", 0.09648348694095646]]}, "q_name": "test_set_context_propagation", "ret_exprs": [], "ret_type": "", "variables": {"handler": "", "line": "", "parent_handler": "", "record": "", "set_context": ""}, "variables_p": {"handler": [["mock.Mock", 0.19301449197211368], ["int", 0.10017932895566882]], "line": [["str", 0.1017230630392253], ["Dict[str, Any]", 0.09678918465750574]], "parent_handler": [["str", 0.3116427972630757], ["dict", 0.11677437422893584]], "record": [], "set_context": []}}], "imports": ["__future__", "annotations", "logging", "sys", "warnings", "unittest", "mock", "pytest", "airflow", "utils", "log", "logging_mixin", "SetContextPropagate", "StreamLogWriter", "set_context"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 49}, "session_id": "-xv8FNt79w57PtcMUAuN3wUb_O7Im0xU4lC5--cpU3k", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}