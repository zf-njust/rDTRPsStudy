{"error": null, "response": {"classes": [{"cls_lc": [[81, 0], [300, 34]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [85, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_message", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text"]], "logger": [["logger", "info"]], "self": []}, "params_p": {"args": [], "caplog": [["tests.basilisp.helpers.CompileFn", 0.3], ["str", 0.09999999999999999], ["tests.async_mock.Mock", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": [], "logger": [], "self": []}, "q_name": "TestSecretsMasker.test_message", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [90, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_args", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text"]], "logger": [["logger", "info"]], "self": []}, "params_p": {"args": [], "caplog": [["bool", 0.3376974261286439], ["Iterable[Any]", 0.1549673272918646], ["Dict[str, float]", 0.08219081692632965]], "kwargs": [], "logger": [], "self": []}, "q_name": "TestSecretsMasker.test_args", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [96, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_extra", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text"]], "logger": [["logger", "handlers", "formatter", "ShortExcFormatter"], ["logger", "info", "extra"]], "self": []}, "params_p": {"args": [], "caplog": [["tests.basilisp.helpers.CompileFn", 0.3], ["str", 0.09999999999999999], ["tests.async_mock.Mock", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": [], "logger": [["logging.Logger", 0.5348209711989631]], "self": []}, "q_name": "TestSecretsMasker.test_extra", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [115, 9]], "fn_var_ln": {"conn": [[100, 12], [100, 16]], "line": [[105, 8], [105, 12]]}, "fn_var_occur": {"conn": [["RuntimeError", "conn"]], "line": [["line", "lineno"], ["caplog", "text", "textwrap", "dedent", "line"]]}, "name": "test_exception", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text", "textwrap", "dedent", "line"]], "logger": [["logger", "exception"]], "self": []}, "params_p": {"args": [], "caplog": [], "kwargs": [], "logger": [], "self": []}, "q_name": "TestSecretsMasker.test_exception", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "line": ""}, "variables_p": {"conn": [["str", 0.8999999999999999], ["int", 0.09999999999999999]], "line": [["set", 0.08198914776366678]]}}, {"docstring": {"func": "Test that when ``logger.exception`` is called when there is no current exception we still log.", "long_descr": "(This is a \"bug\" in user code, but we shouldn't die because of it!)", "ret": null}, "fn_lc": [[117, 4], [130, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_exception_not_raised", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text", "textwrap", "dedent"]], "logger": [["logger", "exception"]], "self": []}, "params_p": {"args": [], "caplog": [], "kwargs": [], "logger": [], "self": []}, "q_name": "TestSecretsMasker.test_exception_not_raised", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Show it is not possible to filter secrets in the source.", "long_descr": "It is not possible to (regularly/reliably) filter out secrets that\nappear directly in the source code. This is because the formatting of\nexc_info is not done in the filter, it is done after the filter is\ncalled, and fixing this \"properly\" is hard/impossible.\n\n(It would likely need to construct a custom traceback that changed the\nsource. I have no idead if that is even possible)\n\nThis test illustrates that, but ix marked xfail in case someone wants to\nfix this later.", "ret": null}, "fn_lc": [[133, 4], [163, 9]], "fn_var_ln": {"line": [[153, 8], [153, 12]]}, "fn_var_occur": {"line": [["line", "lineno"], ["caplog", "text", "textwrap", "dedent", "line"]]}, "name": "test_exc_tb", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text", "textwrap", "dedent", "line"]], "logger": [["logger", "exception"]], "self": []}, "params_p": {"args": [], "caplog": [], "kwargs": [], "logger": [], "self": []}, "q_name": "TestSecretsMasker.test_exc_tb", "ret_exprs": [], "ret_type": "", "variables": {"line": ""}, "variables_p": {"line": [["set", 0.08198914776366678]]}}, {"docstring": {"func": "Show that redacting password works in context exceptions.", "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [181, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_masking_in_implicit_context_exceptions", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text"], ["caplog", "text", "count"]], "logger": [["logger", "exception"]], "self": []}, "params_p": {"args": [], "caplog": [["tests.basilisp.helpers.CompileFn", 0.17135595430344455], ["str", 0.08865774466867131]], "kwargs": [], "logger": [], "self": []}, "q_name": "TestSecretsMasker.test_masking_in_implicit_context_exceptions", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Show that redacting password works in context exceptions.", "long_descr": null, "ret": null}, "fn_lc": [[183, 4], [214, 9]], "fn_var_ln": {"exception": [[191, 12], [191, 21]], "line": [[197, 8], [197, 12]]}, "fn_var_occur": {"exception": [["exception", "None"], ["exception", "ex"], ["RuntimeError", "exception", "exception"], ["logger", "exception"]], "line": [["line", "lineno"], ["caplog", "text", "textwrap", "dedent", "line", "line"]]}, "name": "test_masking_in_explicit_context_exceptions", "params": {"caplog": "", "logger": "", "self": ""}, "params_descr": {"caplog": "", "logger": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text", "textwrap", "dedent", "line", "line"]], "logger": [["logger", "exception"]], "self": []}, "params_p": {"args": [], "caplog": [["str", 0.29503454833152565]], "kwargs": [], "logger": [], "self": []}, "q_name": "TestSecretsMasker.test_masking_in_explicit_context_exceptions", "ret_exprs": [], "ret_type": "", "variables": {"exception": "", "line": ""}, "variables_p": {"exception": [["Set[str]", 0.1522393256434855], ["Type[str]", 0.12055518659631773], ["dict", 0.11568675805283052], ["Optional[Callable[..., Any]]", 0.1021315188442078], ["List[None]", 0.08264285728405787]], "line": [["str", 0.48498104759989136], ["tuple", 0.18023717874045464], ["List[str]", 0.11604926894703464], ["Generator[str, None, None]", 0.09104515196397743]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [235, 45]], "fn_var_ln": {"filt": [[232, 8], [232, 12]]}, "fn_var_occur": {"filt": [["filt", "SecretsMasker"], ["filt", "add_mask", "value", "name"], ["filt", "patterns", "expected_mask"]]}, "name": "test_mask_secret", "params": {"expected_mask": "", "name": "", "self": "", "value": ""}, "params_descr": {"expected_mask": "", "name": "", "self": "", "value": ""}, "params_occur": {"expected_mask": [["filt", "patterns", "expected_mask"]], "name": [["filt", "add_mask", "value", "name"]], "self": [], "value": [["filt", "add_mask", "value", "name"]]}, "params_p": {"args": [], "expected_mask": [["str", 0.8154859201043002], ["int", 0.09207405663007272]], "kwargs": [], "name": [["str", 0.4180436942539215], ["bool", 0.30019033533303885], ["int", 0.28176597041303963]], "self": [], "value": [["str", 0.4180436942539215], ["bool", 0.30019033533303885], ["int", 0.28176597041303963]]}, "q_name": "TestSecretsMasker.test_mask_secret", "ret_exprs": [], "ret_type": "", "variables": {"filt": ""}, "variables_p": {"filt": [["dict", 0.18679206651464353], ["apps.registrations.tests.factories.RegistrationFieldFactory", 0.10785614261631891], ["Dict[str, None]", 0.09053230447929367]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[268, 4], [273, 51]], "fn_var_ln": {"filt": [[269, 8], [269, 12]]}, "fn_var_occur": {"filt": [["filt", "SecretsMasker"], ["filt", "add_mask", "val"], ["filt", "redact", "value", "name", "expected"]]}, "name": "test_redact", "params": {"expected": "", "name": "", "patterns": "", "self": "", "value": ""}, "params_descr": {"expected": "", "name": "", "patterns": "", "self": "", "value": ""}, "params_occur": {"expected": [["filt", "redact", "value", "name", "expected"]], "name": [["filt", "redact", "value", "name", "expected"]], "patterns": [], "self": [], "value": [["filt", "redact", "value", "name", "expected"]]}, "params_p": {"args": [], "expected": [["str", 0.4996006369051498], ["Callable", 0.1982182627852172], ["Optional[str]", 0.09645633189266438]], "kwargs": [], "name": [["str", 0.4996006369051498], ["Callable", 0.1982182627852172], ["Optional[str]", 0.09645633189266438]], "patterns": [["str", 0.6219119259449909], ["bool", 0.22234189580069452], ["List[str]", 0.07562417457862544]], "self": [], "value": [["str", 0.4996006369051498], ["Callable", 0.1982182627852172], ["Optional[str]", 0.09645633189266438]]}, "q_name": "TestSecretsMasker.test_redact", "ret_exprs": [], "ret_type": "", "variables": {"filt": ""}, "variables_p": {"filt": [["str", 0.22545466563695835], ["dict", 0.17108353969857912]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[275, 4], [281, 36]], "fn_var_ln": {"filt": [[276, 8], [276, 12]]}, "fn_var_occur": {"filt": [["filt", "SecretsMasker"], ["filt", "redact", "handle", "None", "handle"]]}, "name": "test_redact_filehandles", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "messages"]], "self": []}, "params_p": {"args": [], "caplog": [["tests.basilisp.helpers.CompileFn", 0.3], ["str", 0.09999999999999999], ["tests.async_mock.Mock", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "TestSecretsMasker.test_redact_filehandles", "ret_exprs": [], "ret_type": "", "variables": {"filt": ""}, "variables_p": {"filt": [["str", 0.19907253852427426], ["float", 0.09291981034963857], ["List[str]", 0.09291981034963857], ["dict", 0.08639761241545081]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[295, 4], [300, 34]], "fn_var_ln": {"got": [[299, 12], [299, 15]], "secrets_masker": [[296, 8], [296, 22]]}, "fn_var_occur": {"got": [["got", "redact", "val", "max_depth", "max_depth"], ["got", "expected"]], "secrets_masker": [["secrets_masker", "SecretsMasker"], ["secrets_masker", "add_mask"], ["patch", "return_value", "secrets_masker"]]}, "name": "test_redact_max_depth", "params": {"expected": "", "max_depth": "", "self": "", "val": ""}, "params_descr": {"expected": "", "max_depth": "", "self": "", "val": ""}, "params_occur": {"expected": [["got", "expected"]], "max_depth": [["got", "redact", "val", "max_depth", "max_depth"]], "self": [], "val": [["got", "redact", "val", "max_depth", "max_depth"]]}, "params_p": {"args": [], "expected": [["str", 0.9999999999564805], ["Dict[str, Any]", 4.351966694179409e-11]], "kwargs": [], "max_depth": [["int", 0.7004780964237751], ["float", 0.13094336049620012], ["str", 0.0786810833412161]], "self": [], "val": [["int", 0.7004780964237751], ["float", 0.13094336049620012], ["str", 0.0786810833412161]]}, "q_name": "TestSecretsMasker.test_redact_max_depth", "ret_exprs": [], "ret_type": "", "variables": {"got": "", "secrets_masker": ""}, "variables_p": {"got": [["int", 0.9179961804428844]], "secrets_masker": [["str", 0.09655912906705175]]}}], "name": "TestSecretsMasker", "q_name": "TestSecretsMasker", "variables": {}, "variables_p": {}}, {"cls_lc": [[303, 0], [338, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[316, 4], [317, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_hiding_defaults", "params": {"expected_result": "", "key": "", "self": ""}, "params_descr": {"expected_result": "", "key": "", "self": ""}, "params_occur": {"expected_result": [["expected_result", "should_hide_value_for_key", "key"]], "key": [["expected_result", "should_hide_value_for_key", "key"]], "self": []}, "params_p": {"args": [], "expected_result": [["str", 1.0]], "key": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "TestShouldHideValueForKey.test_hiding_defaults", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[332, 4], [338, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_hiding_config", "params": {"expected_result": "", "key": "", "self": "", "sensitive_variable_fields": ""}, "params_descr": {"expected_result": "", "key": "", "self": "", "sensitive_variable_fields": ""}, "params_occur": {"expected_result": [["expected_result", "should_hide_value_for_key", "key"]], "key": [["expected_result", "should_hide_value_for_key", "key"]], "self": [], "sensitive_variable_fields": [["conf_vars", "str", "sensitive_variable_fields"]]}, "params_p": {"args": [], "expected_result": [["str", 0.39104313159652215], ["bool", 0.14311090761018258], ["Optional[List]", 0.091181220390036]], "key": [["str", 0.39104313159652215], ["bool", 0.14311090761018258], ["Optional[List]", 0.091181220390036]], "kwargs": [], "self": [], "sensitive_variable_fields": [["str", 0.39526824939549815], ["int", 0.18337405363987455], ["Mapping[str, str]", 0.16242973094164387], ["List[str]", 0.0872809660631454], ["dict", 0.08488673920855254]]}, "q_name": "TestShouldHideValueForKey.test_hiding_config", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestShouldHideValueForKey", "q_name": "TestShouldHideValueForKey", "variables": {}, "variables_p": {}}, {"cls_lc": [[341, 0], [346, 79]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[344, 4], [346, 79]], "fn_var_ln": {"formatted": [[345, 8], [345, 17]]}, "fn_var_occur": {"formatted": [["formatted", "super", "formatException", "exc_info"], ["formatted", "replace", "__file__", "os", "path", "basename", "__file__"]]}, "name": "formatException", "params": {"exc_info": "", "self": ""}, "params_descr": {"exc_info": "", "self": ""}, "params_occur": {"exc_info": [["formatted", "super", "formatException", "exc_info"]], "self": []}, "params_p": {"args": [], "exc_info": [["str", 0.3926065769634919], ["dict", 0.09648847427932912], ["Sequence[T]", 0.08480815440057694]], "kwargs": [], "self": []}, "q_name": "ShortExcFormatter.formatException", "ret_exprs": ["return formatted.replace(__file__, \".../\" + os.path.basename(__file__))"], "ret_type": "", "ret_type_p": [["bool", 0.2900253064264145], ["str", 0.1997216709512549], ["IO", 0.10198247745403928], ["Mapping[str, Any]", 0.09595461634668569], ["Optional[int]", 0.09482552752803977], ["List[str]", 0.09293475743527024]], "variables": {"formatted": ""}, "variables_p": {"formatted": [["str", 0.5057023045259164], ["Dict[str, Tuple[float, float]]", 0.12690757720353252], ["Union[Literal, str]", 0.08954063022287415], ["int", 0.08439385560344616], ["List[str]", 0.07101962206671512]]}}], "name": "ShortExcFormatter", "q_name": "ShortExcFormatter", "variables": {}, "variables_p": {}}, {"cls_lc": [[354, 0], [388, 33]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[356, 4], [360, 17]], "fn_var_ln": {"secrets_masker": [[357, 8], [357, 27]]}, "fn_var_occur": {"secrets_masker": [["self", "secrets_masker", "SecretsMasker"], ["patch", "return_value", "self", "secrets_masker"]]}, "name": "reset_secrets_masker", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "secrets_masker", "SecretsMasker"], ["patch", "return_value", "self", "secrets_masker"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRedactedIO.reset_secrets_masker", "ret_exprs": [], "ret_type": "", "variables": {"secrets_masker": ""}, "variables_p": {"secrets_masker": [["int", 0.38617481441920193], ["float", 0.14200531164354777]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[362, 4], [373, 32]], "fn_var_ln": {"stdout": [[372, 8], [372, 14]]}, "fn_var_occur": {"stdout": [["stdout", "capsys", "readouterr", "out"], ["stdout", "p"], ["stdout", "capsys", "readouterr", "out"]]}, "name": "test_redacts_from_print", "params": {"capsys": "", "self": ""}, "params_descr": {"capsys": "", "self": ""}, "params_occur": {"capsys": [["stdout", "capsys", "readouterr", "out"], ["stdout", "capsys", "readouterr", "out"]], "self": []}, "params_p": {"args": [], "capsys": [["tests.basilisp.helpers.CompileFn", 0.11720245989668723]], "kwargs": [], "self": []}, "q_name": "TestRedactedIO.test_redacts_from_print", "ret_exprs": [], "ret_type": "", "variables": {"stdout": ""}, "variables_p": {"stdout": [["str", 0.21809137799183476], ["tuple", 0.09612606934207082], ["Pattern[str]", 0.09280228171623253], ["int", 0.09140271493821397], ["float", 0.09104865757336562]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[375, 4], [378, 30]], "fn_var_ln": {"stdout": [[377, 8], [377, 14]]}, "fn_var_occur": {"stdout": [["stdout", "capsys", "readouterr", "out"]]}, "name": "test_write", "params": {"capsys": "", "self": ""}, "params_descr": {"capsys": "", "self": ""}, "params_occur": {"capsys": [["stdout", "capsys", "readouterr", "out"]], "self": []}, "params_p": {"args": [], "capsys": [["int", 0.19504119680416554], ["Sequence[int]", 0.19504119680416554], ["str", 0.06853249546240171], ["tests.basilisp.helpers.CompileFn", 0.04415916768486173]], "kwargs": [], "self": []}, "q_name": "TestRedactedIO.test_write", "ret_exprs": [], "ret_type": "", "variables": {"stdout": ""}, "variables_p": {"stdout": [["List[int]", 0.3], ["Pattern[str]", 0.19999999999999998], ["list", 0.09999999999999999], ["List[str]", 0.09999999999999999], ["str", 0.09999999999999999]]}}, {"docstring": {"func": "Test that when redirect is inplace the `input()` builtin works.", "long_descr": "This is used by debuggers!", "ret": null}, "fn_lc": [[380, 4], [388, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_input_builtin", "params": {"monkeypatch": "", "self": ""}, "params_descr": {"monkeypatch": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "setattr", "sys", "io", "StringIO"]], "self": []}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [["Tuple[paradigm.models.Base, tests.utils.Kwargs]", 0.2714280555929355], ["io.BytesIO", 0.21362150169899502]], "self": []}, "q_name": "TestRedactedIO.test_input_builtin", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestRedactedIO", "q_name": "TestRedactedIO", "variables": {}, "variables_p": {}}, {"cls_lc": [[391, 0], [420, 59]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[393, 4], [397, 21]], "fn_var_ln": {"secrets_masker": [[394, 8], [394, 27]]}, "fn_var_occur": {"secrets_masker": [["self", "secrets_masker", "SecretsMasker"], ["patch", "return_value", "self", "secrets_masker"]]}, "name": "reset_secrets_masker_and_skip_escape", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "secrets_masker", "SecretsMasker"], ["patch", "return_value", "self", "secrets_masker"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMaskSecretAdapter.reset_secrets_masker_and_skip_escape", "ret_exprs": [], "ret_type": "", "variables": {"secrets_masker": ""}, "variables_p": {"secrets_masker": [["int", 0.38617481441920193], ["float", 0.14200531164354777]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[399, 4], [403, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_calling_mask_secret_adds_adaptations_for_returned_str", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "secrets_masker", "patterns"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMaskSecretAdapter.test_calling_mask_secret_adds_adaptations_for_returned_str", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[405, 4], [414, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_calling_mask_secret_adds_adaptations_for_returned_iterable", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "secrets_masker", "patterns"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMaskSecretAdapter.test_calling_mask_secret_adds_adaptations_for_returned_iterable", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[416, 4], [420, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_calling_mask_secret_not_set", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "secrets_masker", "patterns"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMaskSecretAdapter.test_calling_mask_secret_not_set", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMaskSecretAdapter", "q_name": "TestMaskSecretAdapter", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 0], [78, 17]], "fn_var_ln": {"filt": [[73, 4], [73, 8]], "formatter": [[68, 4], [68, 13]], "handlers": [[72, 4], [72, 19]], "logger": [[69, 4], [69, 10]]}, "fn_var_occur": {"filt": [["filt", "SecretsMasker"], ["logger", "addFilter", "filt"], ["filt", "add_mask"]], "formatter": [["formatter", "ShortExcFormatter"], ["caplog", "handler", "setFormatter", "formatter"]], "handlers": [["logger", "handlers", "caplog", "handler"]], "logger": [["logger", "logging", "getLogger", "__name__"], ["logger", "handlers", "caplog", "handler"], ["logger", "addFilter", "filt"]]}, "name": "logger", "params": {"caplog": ""}, "params_descr": {"caplog": ""}, "params_occur": {"caplog": [["caplog", "handler", "setFormatter", "formatter"], ["logger", "handlers", "caplog", "handler"]]}, "params_p": {"args": [], "caplog": [["Callable", 0.24874579305429478], ["logging.Logger", 0.21335655023460243], ["Optional[Type[BaseException]]", 0.08014979801833072], ["str", 0.07721863017461288]], "kwargs": []}, "q_name": "logger", "ret_exprs": ["return logger"], "ret_type": "", "ret_type_p": [["int", 0.2893783707417616], ["str", 0.19228208670079378], ["bytearray", 0.09343042521641273]], "variables": {"filt": "", "formatter": "", "handlers": "", "logger": ""}, "variables_p": {"filt": [["List[str]", 0.08885787657827655], ["Dict[str, Union[Any, Any]]", 0.08693463552525492], ["int", 0.08000622583431706]], "formatter": [["Generator[Any, None, None]", 0.27136332572613453], ["int", 0.17883075047733885], ["str", 0.09585555328812968], ["Dict[str, str]", 0.08941537523866942]], "handlers": [["int", 0.2924905095314138], ["Set[str]", 0.2891605081059892], ["Dict[int, str]", 0.05744544956502186], ["str", 0.05593173670086771], ["list", 0.054645286844284456], ["Optional[str]", 0.051790515570837296]], "logger": [["logging.Logger", 0.9999999999999999]]}}, {"docstring": {"func": "Returns the current line number in our program.", "long_descr": null, "ret": null}, "fn_lc": [[349, 0], [351, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "lineno", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "lineno", "ret_exprs": ["return inspect.currentframe().f_back.f_lineno"], "ret_type": "", "ret_type_p": [["utils.Node", 0.12367787011031985], ["List[int]", 0.10066742902064486], ["int", 0.10066742902064486], ["str", 0.07250493611017977]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "contextlib", "inspect", "io", "logging", "logging.config", "os", "sys", "textwrap", "unittest", "mock", "patch", "pytest", "airflow", "settings", "airflow", "utils", "log", "secrets_masker", "RedactedIO", "SecretsMasker", "mask_secret", "redact", "should_hide_value_for_key", "tests", "test_utils", "config", "conf_vars", "airflow", "utils", "log", "secrets_masker", "get_sensitive_variables_fields"], "mod_var_ln": {"MASK_SECRETS_IN_LOGS": [[41, 0], [41, 29]], "p": [[43, 0], [43, 1]]}, "mod_var_occur": {"MASK_SECRETS_IN_LOGS": [], "p": [["RuntimeError", "p"], ["RuntimeError", "p"], ["mask_secret", "p"], ["print", "p"], ["stdout", "p"], ["print", "p"], ["RedactedIO", "write", "p"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 83}, "session_id": "0SaLQ57irXjxPxvtBAW0bCtxHSZNIvhKUMKRj3UTEdc", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"MASK_SECRETS_IN_LOGS": "", "p": ""}, "variables_p": {"MASK_SECRETS_IN_LOGS": [["int", 0.6309394145454394], ["str", 0.11384783082301933]], "p": [["str", 0.17956136606439002], ["Dict[int, str]", 0.08661491113458242]]}}}