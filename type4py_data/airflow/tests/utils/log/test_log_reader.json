{"error": null, "response": {"classes": [{"cls_lc": [[45, 0], [305, 102]], "cls_var_ln": {"DAG_ID": [[46, 4], [46, 10]], "DEFAULT_DATE": [[48, 4], [48, 16]], "FILENAME_TEMPLATE": [[49, 4], [49, 21]], "TASK_ID": [[47, 4], [47, 11]]}, "cls_var_occur": {"DAG_ID": [], "DEFAULT_DATE": [], "FILENAME_TEMPLATE": [], "TASK_ID": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [56, 24]], "fn_var_ln": {"log_dir": [[54, 12], [54, 24]]}, "fn_var_occur": {"log_dir": [["tempfile", "TemporaryDirectory", "log_dir"], ["self", "log_dir", "log_dir"], ["self", "log_dir"]]}, "name": "log_dir", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "log_dir", "log_dir"], ["self", "log_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogView.log_dir", "ret_exprs": [], "ret_type": "", "variables": {"log_dir": ""}, "variables_p": {"log_dir": [["str", 0.16328945891590646]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [70, 32]], "fn_var_ln": {"old_modules": [[60, 8], [60, 19]], "settings_folder": [[62, 12], [62, 32]]}, "fn_var_occur": {"old_modules": [["old_modules", "dict", "sys", "modules"], ["m", "m", "sys", "modules", "m", "old_modules"]], "settings_folder": [["tempfile", "TemporaryDirectory", "settings_folder"], ["self", "settings_folder", "settings_folder"], ["sys", "path", "append", "settings_folder"], ["sys", "path", "remove", "settings_folder"], ["self", "settings_folder"]]}, "name": "settings_folder", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "settings_folder", "settings_folder"], ["self", "settings_folder"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogView.settings_folder", "ret_exprs": [], "ret_type": "", "variables": {"old_modules": "", "settings_folder": ""}, "variables_p": {"old_modules": [["dict", 0.1892878626622786], ["Dict[str, Any]", 0.13865349047536205], ["Pattern[str]", 0.10126901612357583], ["Dict[Type[Any], str]", 0.09989328570228326], ["Set[str]", 0.08757392241290388]], "settings_folder": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [84, 57]], "fn_var_ln": {"logging_config": [[74, 8], [74, 22]], "new_logging_file": [[79, 12], [79, 28]], "settings_file": [[77, 8], [77, 21]]}, "fn_var_occur": {"logging_config": [["logging_config", "copy", "deepcopy", "DEFAULT_LOGGING_CONFIG"], ["logging_config", "log_dir"], ["logging_config", "self", "FILENAME_TEMPLATE"], ["new_logging_file", "logging_config"]], "new_logging_file": [["new_logging_file", "logging_config"], ["handle", "writelines", "new_logging_file"]], "settings_file": [["settings_file", "os", "path", "join", "settings_folder"], ["open", "settings_file", "handle"]]}, "name": "configure_loggers", "params": {"log_dir": "", "self": "", "settings_folder": ""}, "params_descr": {"log_dir": "", "self": "", "settings_folder": ""}, "params_occur": {"log_dir": [["logging_config", "log_dir"]], "self": [["logging_config", "self", "FILENAME_TEMPLATE"]], "settings_folder": [["settings_file", "os", "path", "join", "settings_folder"]]}, "params_p": {"args": [], "kwargs": [], "log_dir": [["str", 0.9081179498269145], ["Optional[str]", 0.09188205017308562]], "self": [], "settings_folder": [["str", 0.7822331697211724], ["Union[os.PathLike, str]", 0.11467970053178272], ["bool", 0.10308712974704477]]}, "q_name": "TestLogView.configure_loggers", "ret_exprs": [], "ret_type": "", "variables": {"logging_config": "", "new_logging_file": "", "settings_file": ""}, "variables_p": {"logging_config": [["str", 0.7965202873805113], ["Optional[str]", 0.11730644901821208], ["Dict[str, str]", 0.0861732636012765]], "new_logging_file": [["str", 0.35461295105387775], ["os.DirEntry", 0.15012966893964286], ["TextIO", 0.13184020736928756], ["IO[bytes]", 0.08193438534562468]], "settings_file": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [93, 25]], "fn_var_ln": {"dir_path": [[88, 8], [88, 16]]}, "fn_var_occur": {"dir_path": [["dir_path", "log_dir", "self", "DAG_ID", "self", "TASK_ID"], ["os", "makedirs", "dir_path"], ["open", "dir_path", "try_number", "f"]]}, "name": "prepare_log_files", "params": {"log_dir": "", "self": ""}, "params_descr": {"log_dir": "", "self": ""}, "params_occur": {"log_dir": [["dir_path", "log_dir", "self", "DAG_ID", "self", "TASK_ID"]], "self": [["dir_path", "log_dir", "self", "DAG_ID", "self", "TASK_ID"]]}, "params_p": {"args": [], "kwargs": [], "log_dir": [["str", 0.7037697461252473]], "self": []}, "q_name": "TestLogView.prepare_log_files", "ret_exprs": [], "ret_type": "", "variables": {"dir_path": ""}, "variables_p": {"dir_path": [["str", 0.30859464496885197]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [116, 24]], "fn_var_ln": {"hostname": [[110, 8], [110, 19]], "log_template": [[98, 8], [98, 20]], "session": [[97, 8], [97, 15]], "ti": [[111, 8], [111, 15]], "try_number": [[109, 8], [109, 21]]}, "fn_var_occur": {"hostname": [["ti", "hostname"]], "log_template": [["log_template", "LogTemplate", "filename", "self", "FILENAME_TEMPLATE", "elasticsearch_id"], ["session", "add", "log_template"], ["session", "delete", "log_template"]], "session": [["session", "settings", "Session"], ["session", "add", "log_template"], ["session", "commit"], ["session", "delete", "log_template"], ["session", "commit"]], "ti": [["ti", "create_task_instance", "dag_id", "self", "DAG_ID", "task_id", "self", "TASK_ID", "start_date", "self", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "execution_date", "self", "DEFAULT_DATE", "state", "TaskInstanceState", "RUNNING"], ["ti", "try_number"], ["ti", "hostname"], ["self", "ti", "ti"]], "try_number": [["ti", "try_number"]]}, "name": "prepare_db", "params": {"create_task_instance": "", "self": ""}, "params_descr": {"create_task_instance": "", "self": ""}, "params_occur": {"create_task_instance": [["ti", "create_task_instance", "dag_id", "self", "DAG_ID", "task_id", "self", "TASK_ID", "start_date", "self", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "execution_date", "self", "DEFAULT_DATE", "state", "TaskInstanceState", "RUNNING"]], "self": [["log_template", "LogTemplate", "filename", "self", "FILENAME_TEMPLATE", "elasticsearch_id"], ["ti", "create_task_instance", "dag_id", "self", "DAG_ID", "task_id", "self", "TASK_ID", "start_date", "self", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "execution_date", "self", "DEFAULT_DATE", "state", "TaskInstanceState", "RUNNING"], ["self", "ti", "ti"]]}, "params_p": {"args": [], "create_task_instance": [["str", 0.19080057809975576], ["Callable", 0.14121184476736293], ["excars.models.user.User", 0.09614834863318193], ["int", 0.09471273144732002], ["deeplearning.ml4pl.models.epoch.Results", 0.09372020400027131]], "kwargs": [], "self": []}, "q_name": "TestLogView.prepare_db", "ret_exprs": [], "ret_type": "", "variables": {"hostname": "", "log_template": "", "session": "", "ti": "", "try_number": ""}, "variables_p": {"hostname": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "log_template": [["str", 1.0000000000000002]], "session": [["dict", 0.09890553942647651], ["Optional[str]", 0.09022348387200628]], "ti": [["str", 0.18841714183794728], ["List[Tuple[str, Any]]", 0.13072389421230318], ["geode.models.common.Address", 0.10153112906363822], ["Dict[str, Any]", 0.08640045718758115]], "try_number": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [131, 63]], "fn_var_ln": {"logs": [[122, 8], [122, 12]], "metadatas": [[122, 14], [122, 23]], "state": [[121, 8], [121, 16]], "task_log_reader": [[119, 8], [119, 23]], "ti": [[120, 8], [120, 10]]}, "fn_var_occur": {"logs": [["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "metadata"], ["logs", "self", "log_dir"]], "metadatas": [["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "metadata"], ["metadatas", "True"]], "state": [["ti", "state", "TaskInstanceState", "SUCCESS"]], "task_log_reader": [["task_log_reader", "TaskLogReader"], ["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "metadata"]], "ti": [["ti", "copy", "copy", "self", "ti"], ["ti", "state", "TaskInstanceState", "SUCCESS"], ["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "metadata"]]}, "name": "test_test_read_log_chunks_should_read_one_try", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ti", "copy", "copy", "self", "ti"], ["logs", "self", "log_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogView.test_test_read_log_chunks_should_read_one_try", "ret_exprs": [], "ret_type": "", "variables": {"logs": "", "metadatas": "", "state": "", "task_log_reader": "", "ti": ""}, "variables_p": {"logs": [["str", 0.3807432410348146], ["rotkehlchen.logging.RotkehlchenLogsAdapter", 0.14185874122625441], ["Dict[str, str]", 0.12102246472044915], ["logging.Formatter", 0.09412901930338638], ["dict", 0.0899722772548134], ["List[str]", 0.08658825104183791], ["ValueError", 0.08568600541844414]], "metadatas": [["str", 0.5040790708699592], ["int", 0.16531531600758997], ["Mapping", 0.09174721299496788], ["Dict[str, Dict[str, int]]", 0.07993683107387332]], "state": [["grpy.core.models.GroupingState", 0.2929065693635843], ["alerta.models.user.User", 0.18660478735256608], ["Dict[str, str]", 0.1019191404207408]], "task_log_reader": [["List[List[int]]", 0.22652739071697164], ["int", 0.13036987145312384], ["bytes", 0.10340237023845969], ["str", 0.08619011326068025], ["List[str]", 0.08540476114732622]], "ti": [["float", 0.1833942257013093], ["alerta.models.alerAlert", 0.11544246438723473], ["list", 0.10270628729814776], ["int", 0.09021386973236631], ["Tuple[int, int, int]", 0.0877668597080837]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [165, 63]], "fn_var_ln": {"logs": [[137, 8], [137, 12]], "metadatas": [[137, 14], [137, 23]], "state": [[136, 8], [136, 16]], "task_log_reader": [[134, 8], [134, 23]], "ti": [[135, 8], [135, 10]]}, "fn_var_occur": {"logs": [["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "None", "metadata"], ["logs", "self", "log_dir", "self", "log_dir", "self", "log_dir"]], "metadatas": [["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "None", "metadata"], ["metadatas", "True"]], "state": [["ti", "state", "TaskInstanceState", "SUCCESS"]], "task_log_reader": [["task_log_reader", "TaskLogReader"], ["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "None", "metadata"]], "ti": [["ti", "copy", "copy", "self", "ti"], ["ti", "state", "TaskInstanceState", "SUCCESS"], ["logs", "metadatas", "task_log_reader", "read_log_chunks", "ti", "ti", "try_number", "None", "metadata"]]}, "name": "test_test_read_log_chunks_should_read_all_files", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ti", "copy", "copy", "self", "ti"], ["logs", "self", "log_dir", "self", "log_dir", "self", "log_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogView.test_test_read_log_chunks_should_read_all_files", "ret_exprs": [], "ret_type": "", "variables": {"logs": "", "metadatas": "", "state": "", "task_log_reader": "", "ti": ""}, "variables_p": {"logs": [["str", 0.18573553085491246], ["rotkehlchen.logging.RotkehlchenLogsAdapter", 0.14210683544718936], ["logging.StreamHandler", 0.10894110425013466], ["ValueError", 0.10683945782365142], ["Dict[str, str]", 0.0942030587877123], ["dict", 0.09383092795646937], ["List[str]", 0.0895063541627136], ["logging.Logger", 0.08885704614000932]], "metadatas": [["str", 0.3481534443345809], ["api.src.opentrons.config.robot_configs.HotSpot", 0.16885074239092554], ["raiden.utils.PaymentID", 0.09954870625887022], ["Dict[str, Dict[str, int]]", 0.08532996179978576]], "state": [["grpy.core.models.GroupingState", 0.2929065693635843], ["alerta.models.user.User", 0.18660478735256608], ["Dict[str, str]", 0.1019191404207408]], "task_log_reader": [["dict", 0.2137321458892236], ["str", 0.10173617643080804]], "ti": [["float", 0.1833942257013093], ["alerta.models.alerAlert", 0.11544246438723473], ["list", 0.10270628729814776], ["int", 0.09021386973236631], ["Tuple[int, int, int]", 0.0877668597080837]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[167, 4], [176, 9]], "fn_var_ln": {"state": [[170, 8], [170, 16]], "stream": [[171, 8], [171, 14]], "task_log_reader": [[168, 8], [168, 23]], "ti": [[169, 8], [169, 10]]}, "fn_var_occur": {"state": [["ti", "state", "TaskInstanceState", "SUCCESS"]], "stream": [["stream", "task_log_reader", "read_log_stream", "ti", "ti", "try_number", "metadata"], ["list", "stream", "self", "log_dir"]], "task_log_reader": [["task_log_reader", "TaskLogReader"], ["stream", "task_log_reader", "read_log_stream", "ti", "ti", "try_number", "metadata"]], "ti": [["ti", "copy", "copy", "self", "ti"], ["ti", "state", "TaskInstanceState", "SUCCESS"], ["stream", "task_log_reader", "read_log_stream", "ti", "ti", "try_number", "metadata"]]}, "name": "test_test_test_read_log_stream_should_read_one_try", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ti", "copy", "copy", "self", "ti"], ["list", "stream", "self", "log_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogView.test_test_test_read_log_stream_should_read_one_try", "ret_exprs": [], "ret_type": "", "variables": {"state": "", "stream": "", "task_log_reader": "", "ti": ""}, "variables_p": {"state": [["grpy.core.models.GroupingState", 0.2929065693635843], ["alerta.models.user.User", 0.18660478735256608], ["Dict[str, str]", 0.1019191404207408]], "stream": [["int", 0.23724310618122385], ["guillotina.db.interfaces.ITransaction", 0.18714667977070276], ["bytes", 0.1389293133829191]], "task_log_reader": [["bytes", 0.1403120585246811], ["List[str]", 0.09567921191485868], ["str", 0.09272846051328845], ["raiden.transfer.state.HopState", 0.08568578472996757], ["raiden.transfer.state.ChainState", 0.08104724185501566]], "ti": [["list", 0.2958611917011109], ["float", 0.2814630944781878], ["int", 0.2244367845078396], ["alerta.models.alerAlert", 0.09816125747015497]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[178, 4], [195, 9]], "fn_var_ln": {"stream": [[181, 8], [181, 14]], "task_log_reader": [[179, 8], [179, 23]]}, "fn_var_occur": {"stream": [["stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "None", "metadata"], ["list", "stream", "self", "log_dir", "self", "log_dir", "self", "log_dir"]], "task_log_reader": [["task_log_reader", "TaskLogReader"], ["stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "None", "metadata"]]}, "name": "test_test_test_read_log_stream_should_read_all_logs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "ti", "state", "TaskInstanceState", "SUCCESS"], ["stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "None", "metadata"], ["list", "stream", "self", "log_dir", "self", "log_dir", "self", "log_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogView.test_test_test_read_log_stream_should_read_all_logs", "ret_exprs": [], "ret_type": "", "variables": {"stream": "", "task_log_reader": ""}, "variables_p": {"stream": [["str", 0.2890242444830159], ["int", 0.1921621655858099], ["list", 0.1047445057070236], ["Dict[str, Any]", 0.09708961811697527], ["List[Tuple[str, str, str]]", 0.09096100167230824]], "task_log_reader": [["raiden.transfer.state.HopState", 0.17677923472400478], ["bytes", 0.11977648207913158], ["List[str]", 0.10814412759848581]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[198, 4], [217, 9]], "fn_var_ln": {"first_return": [[199, 8], [199, 20]], "fourth_return": [[202, 8], [202, 21]], "log_stream": [[207, 8], [207, 18]], "second_return": [[200, 8], [200, 21]], "side_effect": [[203, 8], [203, 29]], "task_log_reader": [[205, 8], [205, 23]], "third_return": [[201, 8], [201, 20]]}, "fn_var_occur": {"first_return": [["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "fourth_return": [["fourth_return", "True"], ["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "log_stream": [["log_stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "metadata"], ["list", "log_stream"]], "second_return": [["second_return", "False"], ["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "side_effect": [["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "task_log_reader": [["task_log_reader", "TaskLogReader"], ["log_stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "metadata"]], "third_return": [["third_return", "True"], ["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]]}, "name": "test_read_log_stream_should_support_multiple_chunks", "params": {"mock_read": "", "self": ""}, "params_descr": {"mock_read": "", "self": ""}, "params_occur": {"mock_read": [["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"], ["mock_read", "assert_has_calls", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "False", "any_order", "False"]], "self": [["self", "ti", "state", "TaskInstanceState", "SUCCESS"], ["log_stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "metadata"], ["mock_read", "assert_has_calls", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "False", "any_order", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_read": [["mock.Mock", 0.10914323058632242]], "self": []}, "q_name": "TestLogView.test_read_log_stream_should_support_multiple_chunks", "ret_exprs": [], "ret_type": "", "variables": {"first_return": "", "fourth_return": "", "log_stream": "", "second_return": "", "side_effect": "", "task_log_reader": "", "third_return": ""}, "variables_p": {"first_return": [["List[Union[Any, Any]]", 0.20653370370178972], ["Tuple[str]", 0.13760408212157163], ["str", 0.10174837098608953], ["Type[Callable[..., Any]]", 0.09736345674476785], ["frozenset[str]", 0.0864975353276987], ["list", 0.08476396389206699]], "fourth_return": [["List[str]", 0.317522747385319], ["enumerate[Any]", 0.11038447927386458], ["Dict[str, Union[Any, int]]", 0.10236548828288879], ["Pattern[str]", 0.09096225079714433], ["str", 0.08866777405307368]], "log_stream": [["int", 0.1837862132121871], ["Dict[str, Union[Any, Any, Any]]", 0.18304814115483395], ["dict", 0.12639177704531157], ["Union[Literal, str]", 0.11626083470388213], ["Dict[str, str]", 0.11492373241941975], ["logging.Logger", 0.08937835556849351], ["str", 0.0834121857912876]], "second_return": [["bool", 0.27063558005733873], ["enumerate[Any]", 0.18671026150860665], ["List[str]", 0.12488441219846963], ["Dict[str, Union[Any, int]]", 0.11042550746160269], ["int", 0.10880281901238906], ["Tuple[Any, Any, Any, Any, Any]", 0.10832955974248046], ["str", 0.09021186001911291]], "side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "task_log_reader": [["List[List[int]]", 0.22809000798968615], ["Dict[str, Union[Any, bool, str]]", 0.15419740532151702], ["int", 0.12024163190978333], ["bytes", 0.09130806153098273], ["str", 0.08076632221413556], ["List[str]", 0.08046915333718697]], "third_return": [["List[str]", 0.317522747385319], ["enumerate[Any]", 0.11038447927386458], ["Dict[str, Union[Any, int]]", 0.10236548828288879], ["Pattern[str]", 0.09096225079714433], ["str", 0.08866777405307368]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[220, 4], [238, 9]], "fn_var_ln": {"first_return": [[221, 8], [221, 20]], "fourth_return": [[224, 8], [224, 21]], "log_stream": [[228, 8], [228, 18]], "second_return": [[222, 8], [222, 21]], "side_effect": [[225, 8], [225, 29]], "task_log_reader": [[227, 8], [227, 23]], "third_return": [[223, 8], [223, 20]]}, "fn_var_occur": {"first_return": [["first_return", "True"], ["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "fourth_return": [["fourth_return", "True"], ["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "log_stream": [["log_stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "None", "metadata"], ["list", "log_stream"]], "second_return": [["second_return", "True"], ["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "side_effect": [["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]], "task_log_reader": [["task_log_reader", "TaskLogReader"], ["log_stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "None", "metadata"]], "third_return": [["third_return", "True"], ["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"]]}, "name": "test_read_log_stream_should_read_each_try_in_turn", "params": {"mock_read": "", "self": ""}, "params_descr": {"mock_read": "", "self": ""}, "params_occur": {"mock_read": [["mock_read", "side_effect", "first_return", "second_return", "third_return", "fourth_return"], ["mock_read", "assert_has_calls", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "any_order", "False"]], "self": [["log_stream", "task_log_reader", "read_log_stream", "ti", "self", "ti", "try_number", "None", "metadata"], ["mock_read", "assert_has_calls", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "mock", "call", "self", "ti", "metadata", "any_order", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_read": [["mock.Mock", 0.10702420931947867]], "self": []}, "q_name": "TestLogView.test_read_log_stream_should_read_each_try_in_turn", "ret_exprs": [], "ret_type": "", "variables": {"first_return": "", "fourth_return": "", "log_stream": "", "second_return": "", "side_effect": "", "task_log_reader": "", "third_return": ""}, "variables_p": {"first_return": [["List[str]", 0.317522747385319], ["enumerate[Any]", 0.11038447927386458], ["Dict[str, Union[Any, int]]", 0.10236548828288879], ["Pattern[str]", 0.09096225079714433], ["str", 0.08866777405307368]], "fourth_return": [["List[str]", 0.317522747385319], ["enumerate[Any]", 0.11038447927386458], ["Dict[str, Union[Any, int]]", 0.10236548828288879], ["Pattern[str]", 0.09096225079714433], ["str", 0.08866777405307368]], "log_stream": [["List[Tuple[Any, int]]", 0.255061013009494], ["Dict[str, str]", 0.13576624853546548], ["dict", 0.12025648524925107], ["int", 0.1032972628362579], ["str", 0.10113122853649113], ["logging.Logger", 0.08416208752284562], ["rotkehlchen.logging.RotkehlchenLogsAdapter", 0.0767352008863646]], "second_return": [["List[str]", 0.317522747385319], ["enumerate[Any]", 0.11038447927386458], ["Dict[str, Union[Any, int]]", 0.10236548828288879], ["Pattern[str]", 0.09096225079714433], ["str", 0.08866777405307368]], "side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "task_log_reader": [["List[List[int]]", 0.2215787281433018], ["int", 0.1878366128467604], ["bytes", 0.08729622660305987], ["List[str]", 0.08386780001507234], ["Dict[str, Union[Any, bool, str]]", 0.07900968159777787]], "third_return": [["List[str]", 0.317522747385319], ["enumerate[Any]", 0.11038447927386458], ["Dict[str, Union[Any, int]]", 0.10236548828288879], ["Pattern[str]", 0.09096225079714433], ["str", 0.08866777405307368]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [258, 53]], "fn_var_ln": {"log_handler": [[252, 8], [252, 35]], "mock_prop": [[245, 8], [245, 17]], "return_value": [[257, 8], [257, 30]], "task_log_reader": [[241, 8], [241, 23]]}, "fn_var_occur": {"log_handler": [["task_log_reader", "log_handler", "mock", "MagicMock"], ["type", "task_log_reader", "log_handler", "supports_external_link", "mock_prop"], ["task_log_reader", "log_handler", "mock", "MagicMock", "spec", "ExternalLoggingMixin"], ["type", "task_log_reader", "log_handler", "supports_external_link", "mock_prop"]], "mock_prop": [["mock_prop", "mock", "PropertyMock"], ["mock_prop", "return_value", "False"], ["type", "task_log_reader", "log_handler", "supports_external_link", "mock_prop"], ["mock_prop", "assert_not_called"], ["type", "task_log_reader", "log_handler", "supports_external_link", "mock_prop"], ["mock_prop", "assert_called_once"], ["mock_prop", "return_value", "True"]], "return_value": [["mock_prop", "return_value", "False"], ["mock_prop", "return_value", "True"]], "task_log_reader": [["task_log_reader", "TaskLogReader"], ["task_log_reader", "log_handler", "mock", "MagicMock"], ["type", "task_log_reader", "log_handler", "supports_external_link", "mock_prop"], ["task_log_reader", "supports_external_link"], ["task_log_reader", "log_handler", "mock", "MagicMock", "spec", "ExternalLoggingMixin"], ["type", "task_log_reader", "log_handler", "supports_external_link", "mock_prop"], ["task_log_reader", "supports_external_link"], ["task_log_reader", "supports_external_link"]]}, "name": "test_supports_external_link", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogView.test_supports_external_link", "ret_exprs": [], "ret_type": "", "variables": {"log_handler": "", "mock_prop": "", "return_value": "", "task_log_reader": ""}, "variables_p": {"log_handler": [["mock.Mock", 0.32245230675117786]], "mock_prop": [["mock.Mock", 0.09635922276122635]], "return_value": [["list", 0.185866563146046], ["List[Dict[str, str]]", 0.16023800029287175], ["Optional[bytes]", 0.12852538563695773], ["List[str]", 0.1179124306207182], ["Tuple[int, int]", 0.11267733583261555], ["str", 0.10290996450428817], ["Dict[str, Dict[str, Any]]", 0.09439492930588052]], "task_log_reader": [["Dict[str, str]", 0.23972417931753504], ["str", 0.08785277358574432]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[273, 8], [274, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "echo_run_type", "params": {"dag_run": "airflow.models.DagRun", "kwargs": ""}, "params_descr": {"dag_run": "", "kwargs": ""}, "params_occur": {"dag_run": [["print", "dag_run", "run_type"]], "kwargs": []}, "params_p": {"args": [], "dag_run": [["int", 0.10995806008752117], ["bytes", 0.10447811153515474], ["Callable[[float], bool]", 0.09924322603572917], ["Callable[[int], bool]", 0.09924322603572917], ["float", 0.09897985724510283], ["bool", 0.09675575004763862], ["Optional[int]", 0.09446529047810795]], "kwargs": [], "self": []}, "q_name": "TestLogView.test_task_log_filename_unique.<locals>.echo_run_type", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Ensure the default log_filename_template produces a unique filename.", "long_descr": "See discussion in apache/airflow#19058 [1]_ for how uniqueness may\nchange in a future Airflow release. For now, the logical date is used\nto distinguish DAG runs. This test should be modified when the logical\ndate is no longer used to ensure uniqueness.\n\n[1]: https://github.com/apache/airflow/issues/19058", "ret": null}, "fn_lc": [[260, 4], [305, 102]], "fn_var_ln": {"dag_id": [[270, 8], [270, 14]], "end": [[280, 8], [280, 11]], "manual_dagrun": [[290, 8], [290, 21]], "manual_ti": [[297, 8], [297, 17]], "reader": [[304, 8], [304, 14]], "scheduled_dagrun": [[285, 8], [285, 24]], "scheduled_ti": [[296, 8], [296, 20]], "start": [[279, 8], [279, 13]], "task_id": [[271, 8], [271, 15]], "trigger_time": [[281, 8], [281, 20]]}, "fn_var_occur": {"dag_id": [["dag_maker", "dag_id", "start_date", "self", "DEFAULT_DATE", "schedule", "dag"]], "end": [["end", "start", "datetime", "timedelta", "days"], ["trigger_time", "end", "datetime", "timedelta", "hours", "minutes"], ["scheduled_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "start", "data_interval", "DataInterval", "start", "end"], ["manual_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "MANUAL", "execution_date", "trigger_time", "data_interval", "DataInterval", "start", "end"]], "manual_dagrun": [["manual_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "MANUAL", "execution_date", "trigger_time", "data_interval", "DataInterval", "start", "end"], ["manual_ti", "manual_dagrun", "get_task_instance", "task_id"]], "manual_ti": [["manual_ti", "manual_dagrun", "get_task_instance", "task_id"], ["manual_ti", "None"], ["manual_ti", "refresh_from_task", "dag", "get_task", "task_id"], ["reader", "render_log_filename", "scheduled_ti", "reader", "render_log_filename", "manual_ti"]], "reader": [["reader", "TaskLogReader"], ["reader", "render_log_filename", "scheduled_ti", "reader", "render_log_filename", "manual_ti"]], "scheduled_dagrun": [["scheduled_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "start", "data_interval", "DataInterval", "start", "end"], ["scheduled_ti", "scheduled_dagrun", "get_task_instance", "task_id"]], "scheduled_ti": [["scheduled_ti", "scheduled_dagrun", "get_task_instance", "task_id"], ["scheduled_ti", "None"], ["scheduled_ti", "refresh_from_task", "dag", "get_task", "task_id"], ["reader", "render_log_filename", "scheduled_ti", "reader", "render_log_filename", "manual_ti"]], "start": [["start", "pendulum", "datetime"], ["end", "start", "datetime", "timedelta", "days"], ["scheduled_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "start", "data_interval", "DataInterval", "start", "end"], ["manual_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "MANUAL", "execution_date", "trigger_time", "data_interval", "DataInterval", "start", "end"]], "task_id": [["PythonOperator", "task_id", "task_id", "python_callable", "echo_run_type"], ["scheduled_ti", "scheduled_dagrun", "get_task_instance", "task_id"], ["manual_ti", "manual_dagrun", "get_task_instance", "task_id"], ["scheduled_ti", "refresh_from_task", "dag", "get_task", "task_id"], ["manual_ti", "refresh_from_task", "dag", "get_task", "task_id"]], "trigger_time": [["trigger_time", "end", "datetime", "timedelta", "hours", "minutes"], ["manual_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "MANUAL", "execution_date", "trigger_time", "data_interval", "DataInterval", "start", "end"]]}, "name": "test_task_log_filename_unique", "params": {"dag_maker": "", "self": ""}, "params_descr": {"dag_maker": "", "self": ""}, "params_occur": {"dag_maker": [["dag_maker", "dag_id", "start_date", "self", "DEFAULT_DATE", "schedule", "dag"], ["scheduled_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "start", "data_interval", "DataInterval", "start", "end"], ["manual_dagrun", "airflow", "models", "DagRun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "MANUAL", "execution_date", "trigger_time", "data_interval", "DataInterval", "start", "end"]], "self": [["dag_maker", "dag_id", "start_date", "self", "DEFAULT_DATE", "schedule", "dag"]]}, "params_p": {"args": [], "dag_maker": [["str", 0.11683328091389555], ["sqlalchemy.orm.state.InstanceState", 0.09398701477360383], ["cmk.utils.type_defs.HostName", 0.0917284751185123], ["int", 0.08887760991243172], ["cmk.utils.type_defs.Ruleset", 0.08635491843183628]], "kwargs": [], "self": []}, "q_name": "TestLogView.test_task_log_filename_unique", "ret_exprs": [], "ret_type": "", "variables": {"dag_id": "", "end": "", "manual_dagrun": "airflow.models.DagRun", "manual_ti": "", "reader": "", "scheduled_dagrun": "airflow.models.DagRun", "scheduled_ti": "", "start": "", "task_id": "", "trigger_time": ""}, "variables_p": {"dag_id": [["str", 0.4906036154973609], ["dict", 0.10150481763186782], ["datetime.datetime", 0.09798238316554655], ["int", 0.08410507195513706]], "end": [["datetime.timedelta", 0.38969134001160205], ["datetime.datetime.datetime", 0.19044775113725396], ["datetime", 0.10943943249175793], ["float", 0.1003846924104758], ["str", 0.0891563128736548]], "manual_dagrun": [["crux.models.dataseDataset", 0.20116037013678761], ["circle_core.models.message_box.MessageBox", 0.19271935607190555], ["tartare.core.models.Contributor", 0.11935538562500686], ["multinedb.models.workspace.WorkspacePermissions", 0.10519288370177911], ["datetime.date", 0.09665383724582079], ["chalice.deploy.models.AutoGenIAMPolicy", 0.09392272547487678], ["topicdb.core.models.topicmap.TopicMap", 0.0917270834555309]], "manual_ti": [["zerver.models.Realm", 0.12327388465839612], ["geode.models.common.Address", 0.10349545408051887], ["raiden.utils.TargetAddress", 0.1004972399327783], ["Dict[str, Any]", 0.0985971280956563], ["correios.models.posting.TrackingCode", 0.09422520933688962]], "reader": [["str", 0.3266663995533768], ["grouper.api.settings.ApiSettings", 0.10595799611371505], ["Dict[str, Any]", 0.09005826363309959], ["Dict[str, List[Any]]", 0.08746290785968908]], "scheduled_dagrun": [["crux.models.dataseDataset", 0.20829521071326518], ["topicdb.core.models.topicmap.TopicMap", 0.19512396778491264], ["circle_core.models.message_box.MessageBox", 0.18577357803142047], ["tartare.core.models.Contributor", 0.12385971373930595], ["multinedb.models.workspace.WorkspacePermissions", 0.09888618842077695], ["str", 0.0930398194830254]], "scheduled_ti": [["zerver.models.Realm", 0.12327388465839612], ["geode.models.common.Address", 0.10349545408051887], ["raiden.utils.TargetAddress", 0.1004972399327783], ["Dict[str, Any]", 0.0985971280956563], ["correios.models.posting.TrackingCode", 0.09422520933688962]], "start": [["datetime.datetime", 0.7166908465590069], ["datetime.datetime.datetime", 0.10316882759646681], ["datetime.datetime.timedelta", 0.09154404980597221], ["datetime.date", 0.08859627603855387]], "task_id": [["int", 0.3047385173351598], ["str", 0.22558228741284103], ["Optional[str]", 0.09077826039413385], ["list", 0.08838186042145792], ["List[str]", 0.0856197575531053]], "trigger_time": [["datetime.datetime", 0.606153699918762], ["datetime.datetime.datetime", 0.3032575924996966], ["datetime.timedelta", 0.09058870758154142]]}}], "name": "TestLogView", "q_name": "TestLogView", "variables": {"DAG_ID": "", "DEFAULT_DATE": "", "FILENAME_TEMPLATE": "", "TASK_ID": ""}, "variables_p": {"DAG_ID": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999], ["shortcuts.actions.base.GroupIDField", 0.09999999999999999]], "DEFAULT_DATE": [["str", 0.6363860493653496], ["List[str]", 0.09854130901534286], ["Dict[str, Callable[[Any], bool]]", 0.09209337908587], ["Optional[datetime.datetime]", 0.08610035725256096]], "FILENAME_TEMPLATE": [["str", 0.9999999999999999]], "TASK_ID": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["medtagger.types.TaskID", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "copy", "datetime", "logging", "os", "sys", "tempfile", "unittest", "mock", "pendulum", "pytest", "airflow", "settings", "airflow", "config_templates", "airflow_local_settings", "DEFAULT_LOGGING_CONFIG", "airflow", "models", "DagRun", "airflow", "models", "tasklog", "LogTemplate", "airflow", "operators", "python", "PythonOperator", "airflow", "timetables", "base", "DataInterval", "airflow", "utils", "timezone", "airflow", "utils", "log", "log_reader", "TaskLogReader", "airflow", "utils", "log", "logging_mixin", "ExternalLoggingMixin", "airflow", "utils", "state", "TaskInstanceState", "airflow", "utils", "types", "DagRunType", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_dags", "clear_db_runs"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 3, "I": 0, "U": 80}, "session_id": "k0JqeqPWV6FlA-yXZSDYic79gkAzjth9UdEcqmBq8_Q", "set": null, "tc": [false, null], "type_annot_cove": 0.04, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}