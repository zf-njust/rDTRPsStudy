{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [95, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 8], [40, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function", "params": {"session": ""}, "params_descr": {"session": ""}, "params_occur": {"session": [["session", "execute"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["Set[str]", 0.19641283109318775], ["abilian.core.sqlalchemy.SQLAlchemy", 0.195333479168264], ["sqlalchemy.orm.session.Session", 0.1481393457188744], ["str", 0.09082862451276175]]}, "q_name": "TestRetries.test_retry_db_transaction_with_passing_retries.<locals>.test_function", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that retries can be passed to decorator", "long_descr": null, "ret": null}, "fn_lc": [[30, 4], [45, 39]], "fn_var_ln": {"mock_obj": [[32, 8], [32, 16]], "mock_session": [[33, 8], [33, 20]], "op_error": [[34, 8], [34, 16]]}, "fn_var_occur": {"mock_obj": [["mock_obj", "call_count"]], "mock_session": [["test_function", "session", "mock_session"]], "op_error": []}, "name": "test_retry_db_transaction_with_passing_retries", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRetries.test_retry_db_transaction_with_passing_retries", "ret_exprs": [], "ret_type": "", "variables": {"mock_obj": "", "mock_session": "", "op_error": ""}, "variables_p": {"mock_obj": [["List[str]", 3.0011869492491686e-11]], "mock_session": [["str", 0.37123652501907317], ["Dict[str, str]", 0.09174933996225691], ["List[str]", 0.08548350208996057], ["Dict[str, Dict[str, Any]]", 0.08027430181098702]], "op_error": [["int", 0.4359617746461355], ["str", 0.34454442855872647], ["set", 0.10974689839756892], ["List[Union[None, bool, int, str]]", 0.10974689839756892]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 8], [59, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function", "params": {"session": ""}, "params_descr": {"session": ""}, "params_occur": {"session": [["session", "execute"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["Set[str]", 0.19641283109318775], ["abilian.core.sqlalchemy.SQLAlchemy", 0.195333479168264], ["sqlalchemy.orm.session.Session", 0.1481393457188744], ["str", 0.09082862451276175]]}, "q_name": "TestRetries.test_retry_db_transaction_with_default_retries.<locals>.test_function", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that by default 3 retries will be carried out", "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [73, 79]], "fn_var_ln": {"mock_obj": [[49, 8], [49, 16]], "mock_rollback": [[51, 8], [51, 21]], "mock_session": [[50, 8], [50, 20]], "op_error": [[53, 8], [53, 16]], "rollback": [[52, 8], [52, 29]]}, "fn_var_occur": {"mock_obj": [], "mock_rollback": [["mock_rollback", "call_count"], ["mock_rollback", "assert_has_calls", "mock", "call", "mock", "call", "mock", "call"]], "mock_session": [["test_function", "session", "mock_session"], ["mock_session", "execute", "call_count"]], "op_error": [], "rollback": []}, "name": "test_retry_db_transaction_with_default_retries", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "set_level", "logging", "DEBUG", "logger", "self", "__module__"], ["caplog", "clear"], ["try_no", "caplog", "messages"]], "self": [["caplog", "set_level", "logging", "DEBUG", "logger", "self", "__module__"]]}, "params_p": {"args": [], "caplog": [["logging.Logger", 0.4705435079226842]], "kwargs": [], "self": []}, "q_name": "TestRetries.test_retry_db_transaction_with_default_retries", "ret_exprs": [], "ret_type": "", "variables": {"mock_obj": "", "mock_rollback": "", "mock_session": "", "op_error": "", "rollback": ""}, "variables_p": {"mock_obj": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]], "mock_rollback": [["mock.Mock", 0.1085671124712117], ["Dict[str, str]", 0.09770370423247988]], "mock_session": [["str", 0.3816041090920977], ["rotkehlchen.tests.utils.mock.MockResponse", 0.3279907576832058], ["Dict[str, List[Any]]", 0.10651770935988916], ["Dict[str, str]", 0.08462818873139996]], "op_error": [["int", 0.4359617746461355], ["str", 0.34454442855872647], ["set", 0.10974689839756892], ["List[Union[None, bool, int, str]]", 0.10974689839756892]], "rollback": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 12], [83, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRetries.test_retry_db_transaction_fails_when_used_in_function_without_retry.<locals>.test_function", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that an error is raised when the decorator is used on a function without session arg", "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [83, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_retry_db_transaction_fails_when_used_in_function_without_retry", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRetries.test_retry_db_transaction_fails_when_used_in_function_without_retry", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 8], [91, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function", "params": {"session": ""}, "params_descr": {"session": ""}, "params_occur": {"session": [["session", "execute"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["Set[str]", 0.19641283109318775], ["abilian.core.sqlalchemy.SQLAlchemy", 0.195333479168264], ["sqlalchemy.orm.session.Session", 0.1481393457188744], ["str", 0.09082862451276175]]}, "q_name": "TestRetries.test_retry_db_transaction_fails_when_session_not_passed.<locals>.test_function", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that an error is raised when session is not passed to the function", "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [95, 27]], "fn_var_ln": {"error_message": [[93, 8], [93, 21]]}, "fn_var_occur": {"error_message": [["error_message", "test_function", "__qualname__"], ["pytest", "raises", "TypeError", "match", "error_message"]]}, "name": "test_retry_db_transaction_fails_when_session_not_passed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRetries.test_retry_db_transaction_fails_when_session_not_passed", "ret_exprs": [], "ret_type": "", "variables": {"error_message": ""}, "variables_p": {"error_message": [["str", 0.40187866660246097], ["[str]", 0.09427399937437728]]}}], "name": "TestRetries", "q_name": "TestRetries", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "unittest", "mock", "pytest", "sqlalchemy", "exc", "OperationalError", "airflow", "utils", "retries", "retry_db_transaction"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 16}, "session_id": "mFKYPNrLD791nSkSIAfxzPzANnxFGuTjOCyLyVooP0g", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}