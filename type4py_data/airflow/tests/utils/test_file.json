{"error": null, "response": {"classes": [{"cls_lc": [[38, 0], [68, 51]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [46, 33]], "fn_var_ln": {"dag_folder": [[44, 8], [44, 18]], "path": [[41, 8], [41, 12]], "return_value": [[42, 8], [42, 38]]}, "fn_var_occur": {"dag_folder": [["dag_folder", "correct_maybe_zipped", "path"], ["dag_folder", "path"]], "path": [["dag_folder", "correct_maybe_zipped", "path"], ["dag_folder", "path"]], "return_value": [["mocked_is_zipfile", "return_value", "False"]]}, "name": "test_correct_maybe_zipped_normal_file", "params": {"mocked_is_zipfile": "", "self": ""}, "params_descr": {"mocked_is_zipfile": "", "self": ""}, "params_occur": {"mocked_is_zipfile": [["mocked_is_zipfile", "return_value", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mocked_is_zipfile": [["mock.MagicMock", 0.19797730781917153]], "self": []}, "q_name": "TestCorrectMaybeZipped.test_correct_maybe_zipped_normal_file", "ret_exprs": [], "ret_type": "", "variables": {"dag_folder": "", "path": "", "return_value": ""}, "variables_p": {"dag_folder": [["str", 1.0]], "path": [["str", 0.9233821147108796], ["pathlib.Path", 0.07661788528912032]], "return_value": [["str", 0.2225382802760053], ["list", 0.1008211942678676], ["Optional[bytes]", 0.09096854169668826], ["List[Dict[str, Any]]", 0.0665638715400458], ["int", 0.06631782572657322], ["Dict[str, Any]", 0.06357500762424668]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [55, 33]], "fn_var_ln": {"dag_folder": [[53, 8], [53, 18]], "path": [[50, 8], [50, 12]], "return_value": [[51, 8], [51, 38]]}, "fn_var_occur": {"dag_folder": [["dag_folder", "correct_maybe_zipped", "path"], ["dag_folder", "path"]], "path": [["dag_folder", "correct_maybe_zipped", "path"], ["dag_folder", "path"]], "return_value": [["mocked_is_zipfile", "return_value", "False"]]}, "name": "test_correct_maybe_zipped_normal_file_with_zip_in_name", "params": {"mocked_is_zipfile": "", "self": ""}, "params_descr": {"mocked_is_zipfile": "", "self": ""}, "params_occur": {"mocked_is_zipfile": [["mocked_is_zipfile", "return_value", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mocked_is_zipfile": [["mock.MagicMock", 0.22906596741318352]], "self": []}, "q_name": "TestCorrectMaybeZipped.test_correct_maybe_zipped_normal_file_with_zip_in_name", "ret_exprs": [], "ret_type": "", "variables": {"dag_folder": "", "path": "", "return_value": ""}, "variables_p": {"dag_folder": [["str", 1.0]], "path": [["str", 0.9233821147108796], ["pathlib.Path", 0.07661788528912032]], "return_value": [["str", 0.2225382802760053], ["list", 0.1008211942678676], ["Optional[bytes]", 0.09096854169668826], ["List[Dict[str, Any]]", 0.0665638715400458], ["int", 0.06631782572657322], ["Dict[str, Any]", 0.06357500762424668]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [68, 51]], "fn_var_ln": {"args": [[65, 9], [65, 13]], "dag_folder": [[62, 8], [62, 18]], "kwargs": [[65, 15], [65, 21]], "path": [[59, 8], [59, 12]], "return_value": [[60, 8], [60, 38]]}, "fn_var_occur": {"args": [["args", "kwargs", "mocked_is_zipfile", "call_args_list"]], "dag_folder": [["dag_folder", "correct_maybe_zipped", "path"]], "kwargs": [["args", "kwargs", "mocked_is_zipfile", "call_args_list"]], "path": [["dag_folder", "correct_maybe_zipped", "path"]], "return_value": [["mocked_is_zipfile", "return_value", "True"]]}, "name": "test_correct_maybe_zipped_archive", "params": {"mocked_is_zipfile": "", "self": ""}, "params_descr": {"mocked_is_zipfile": "", "self": ""}, "params_occur": {"mocked_is_zipfile": [["mocked_is_zipfile", "return_value", "True"], ["mocked_is_zipfile", "call_count"], ["args", "kwargs", "mocked_is_zipfile", "call_args_list"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mocked_is_zipfile": [], "self": []}, "q_name": "TestCorrectMaybeZipped.test_correct_maybe_zipped_archive", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag_folder": "", "kwargs": "", "path": "", "return_value": ""}, "variables_p": {"args": [["int", 0.21154242707455354], ["list", 0.20842243341738376], ["Dict[str, int]", 0.12382699074309088], ["List[Dict[str, Any]]", 0.08590520889579721]], "dag_folder": [["str", 0.2183763224176905], ["Dict[str, Tuple[Any, Any]]", 0.11152425283277449], ["bool", 0.09351953658798431], ["List[str]", 0.09351953658798431]], "kwargs": [["list", 0.1077083708700419], ["bool", 0.10237644224801493], ["tests.mock.zwave.MockNode", 0.1022427305645181], ["List[Dict[str, Any]]", 0.10092412948716162], ["Set[str]", 0.10082210203147526], ["List[Dict[str, str]]", 0.09775647355775022], ["List[str]", 0.09775647355775022], ["Dict[str, int]", 0.09691651527262604], ["Tuple[int, int]", 0.09526008772463178]], "path": [["str", 0.6817660607398252], ["List[pathlib.Path]", 0.08463027607227648], ["List[str]", 0.08100625181055986], ["pathlib.Path", 0.07535139161146323]], "return_value": [["Dict[str, Dict[str, Any]]", 0.26291225653730227], ["List[str]", 0.16013167465611008], ["list", 0.1348388570268133], ["Tuple[int, int]", 0.10470838098064467], ["List[Tuple[str, str]]", 0.09792751046162841], ["int", 0.08392310784632474], ["tests.mock.zwave.MockNode", 0.08071803112473593], ["mock._Call", 0.0748401813664404]]}}], "name": "TestCorrectMaybeZipped", "q_name": "TestCorrectMaybeZipped", "variables": {}, "variables_p": {}}, {"cls_lc": [[71, 0], [88, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [76, 39]], "fn_var_ln": {"content": [[75, 12], [75, 19]], "test_file_path": [[73, 8], [73, 22]]}, "fn_var_occur": {"content": [["content", "test_file", "read"], ["isinstance", "content", "str"]], "test_file_path": [["test_file_path", "os", "path", "join", "TEST_DAGS_FOLDER"], ["open_maybe_zipped", "test_file_path", "test_file"]]}, "name": "test_open_maybe_zipped_normal_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOpenMaybeZipped.test_open_maybe_zipped_normal_file", "ret_exprs": [], "ret_type": "", "variables": {"content": "", "test_file_path": ""}, "variables_p": {"content": [["List[Union[Any, Any]]", 0.44746989786567937], ["str", 0.15711607978952075], ["List[List[Any]]", 0.121573482513707], ["int", 0.0925921323687471], ["Tuple[int]", 0.09110623611751852], ["Tuple[str, int]", 0.0901421713448272]], "test_file_path": [["str", 0.9042250401492418], ["Tuple[str, str, str]", 0.09577495985075843]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [82, 61]], "fn_var_ln": {"path": [[79, 8], [79, 12]]}, "fn_var_occur": {"path": [["open_maybe_zipped", "path"], ["mock_file", "assert_called_once_with", "path", "mode"]]}, "name": "test_open_maybe_zipped_normal_file_with_zip_in_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOpenMaybeZipped.test_open_maybe_zipped_normal_file_with_zip_in_name", "ret_exprs": [], "ret_type": "", "variables": {"path": ""}, "variables_p": {"path": [["str", 0.3980565921119361], ["pathlib.Path", 0.10451913180057172], ["Dict[str, str]", 0.09404472884843838], ["list", 0.08229258290778334]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[84, 4], [88, 39]], "fn_var_ln": {"content": [[87, 12], [87, 19]], "test_file_path": [[85, 8], [85, 22]]}, "fn_var_occur": {"content": [["content", "test_file", "read"], ["isinstance", "content", "str"]], "test_file_path": [["test_file_path", "os", "path", "join", "TEST_DAGS_FOLDER"], ["open_maybe_zipped", "test_file_path", "test_file"]]}, "name": "test_open_maybe_zipped_archive", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOpenMaybeZipped.test_open_maybe_zipped_archive", "ret_exprs": [], "ret_type": "", "variables": {"content": "", "test_file_path": ""}, "variables_p": {"content": [["List[Union[Any, Any]]", 0.44746989786567937], ["str", 0.15711607978952075], ["List[List[Any]]", 0.121573482513707], ["int", 0.0925921323687471], ["Tuple[int]", 0.09110623611751852], ["Tuple[str, int]", 0.0901421713448272]], "test_file_path": [["str", 0.9042250401492418], ["Tuple[str, str, str]", 0.09577495985075843]]}}], "name": "TestOpenMaybeZipped", "q_name": "TestOpenMaybeZipped", "variables": {}, "variables_p": {}}, {"cls_lc": [[91, 0], [216, 32]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [107, 23]], "fn_var_ln": {"ignore_file": [[98, 8], [98, 19]], "py_file": [[97, 8], [97, 15]], "source": [[95, 8], [95, 14]], "target": [[96, 8], [96, 14]]}, "fn_var_occur": {"ignore_file": [["ignore_file", "os", "path", "join", "tmp_path"], ["open", "ignore_file", "f"]], "py_file": [["py_file", "os", "path", "join", "source"], ["open", "py_file", "f"]], "source": [["source", "os", "path", "join", "tmp_path"], ["py_file", "os", "path", "join", "source"], ["os", "mkdir", "source"], ["os", "symlink", "source", "target"]], "target": [["target", "os", "path", "join", "tmp_path"], ["os", "symlink", "source", "target"]]}, "name": "test_dir", "params": {"self": "", "tmp_path": ""}, "params_descr": {"self": "", "tmp_path": ""}, "params_occur": {"self": [], "tmp_path": [["source", "os", "path", "join", "tmp_path"], ["target", "os", "path", "join", "tmp_path"], ["ignore_file", "os", "path", "join", "tmp_path"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path": [["str", 1.0]]}, "q_name": "TestListPyFilesPath.test_dir", "ret_exprs": ["return tmp_path"], "ret_type": "", "ret_type_p": [["pathlib.Path", 0.8053230758965648], ["str", 0.09125332292244243]], "variables": {"ignore_file": "", "py_file": "", "source": "", "target": ""}, "variables_p": {"ignore_file": [["str", 0.9999999999999999]], "py_file": [["str", 1.0000000000000002]], "source": [["str", 1.0000000000000002]], "target": [["str", 0.7919624215934504], ["List[str]", 0.11949844176531921], ["int", 0.08853913664123043]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [118, 81]], "fn_var_ln": {"files": [[115, 8], [115, 13]], "should_ignore": [[110, 8], [110, 21]]}, "fn_var_occur": {"files": [["files", "find_path_from_directory", "TEST_DAGS_FOLDER"], ["all", "os", "path", "basename", "file", "should_ignore", "file", "files"]], "should_ignore": [["all", "os", "path", "basename", "file", "should_ignore", "file", "files"]]}, "name": "test_find_path_from_directory_regex_ignore", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestListPyFilesPath.test_find_path_from_directory_regex_ignore", "ret_exprs": [], "ret_type": "", "variables": {"files": "", "should_ignore": ""}, "variables_p": {"files": [["pathlib.Path", 0.4842273083405176], ["pathlib.PurePath", 0.1111864156943165], ["str", 0.09212255735051214]], "should_ignore": [["str", 0.32118840116788805], ["int", 0.10717409872117332], ["list", 0.10327338732278371], ["Optional[str]", 0.09815874052874156]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [140, 9]], "fn_var_ln": {"files": [[134, 8], [134, 13]], "should_ignore": [[121, 8], [121, 21]], "should_not_ignore": [[130, 8], [130, 25]]}, "fn_var_occur": {"files": [["files", "list", "find_path_from_directory", "TEST_DAGS_FOLDER"], ["all", "os", "path", "basename", "file", "should_ignore", "file", "files"], ["len", "list", "filter", "file", "os", "path", "basename", "file", "should_not_ignore", "files", "len", "should_not_ignore"]], "should_ignore": [["all", "os", "path", "basename", "file", "should_ignore", "file", "files"]], "should_not_ignore": [["len", "list", "filter", "file", "os", "path", "basename", "file", "should_not_ignore", "files", "len", "should_not_ignore"]]}, "name": "test_find_path_from_directory_glob_ignore", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestListPyFilesPath.test_find_path_from_directory_glob_ignore", "ret_exprs": [], "ret_type": "", "variables": {"files": "", "should_ignore": "", "should_not_ignore": ""}, "variables_p": {"files": [["list", 0.6915928854317377], ["List[str]", 0.20150945094534461], ["Set[str]", 0.1068976636229178]], "should_ignore": [["str", 0.32118840116788805], ["int", 0.10717409872117332], ["list", 0.10327338732278371], ["Optional[str]", 0.09815874052874156]], "should_not_ignore": [["list", 0.3699087199802494], ["int", 0.1935526794216478], ["str", 0.14967341565299536], ["Final[pathlib.Path]", 0.10472841829750283], ["Dict[str, Any]", 0.0947604765038204], ["List[str]", 0.08737629014378435]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[142, 4], [147, 78]], "fn_var_ln": {"found": [[144, 8], [144, 13]], "ignore_list_file": [[143, 8], [143, 24]]}, "fn_var_occur": {"found": [["found", "list", "find_path_from_directory", "test_dir", "ignore_list_file"], ["os", "path", "join", "test_dir", "found"], ["os", "path", "join", "test_dir", "found"]], "ignore_list_file": [["found", "list", "find_path_from_directory", "test_dir", "ignore_list_file"]]}, "name": "test_find_path_from_directory_respects_symlinks_regexp_ignore", "params": {"self": "", "test_dir": ""}, "params_descr": {"self": "", "test_dir": ""}, "params_occur": {"self": [], "test_dir": [["found", "list", "find_path_from_directory", "test_dir", "ignore_list_file"], ["os", "path", "join", "test_dir", "found"], ["os", "path", "join", "test_dir", "found"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_dir": [["str", 0.2773726909220721], ["pathlib.Path", 0.2421025804033031], ["pypi2nix.path.Path", 0.1902359133088611], ["Callable[[str], str]", 0.09047707543982875]]}, "q_name": "TestListPyFilesPath.test_find_path_from_directory_respects_symlinks_regexp_ignore", "ret_exprs": [], "ret_type": "", "variables": {"found": "", "ignore_list_file": ""}, "variables_p": {"found": [["str", 0.5103133897337129], ["bool", 0.10458780831946872], ["kippo.tasks.tests.test_task_functions.IssueMock", 0.09615880515693201], ["List[str]", 0.09601109440061877]], "ignore_list_file": [["str", 0.9127838319083255], ["pathlib.Path", 0.08721616809167447]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [154, 78]], "fn_var_ln": {"found": [[151, 8], [151, 13]], "ignore_list_file": [[150, 8], [150, 24]]}, "fn_var_occur": {"found": [["found", "list", "find_path_from_directory", "test_dir", "ignore_list_file", "ignore_file_syntax"], ["os", "path", "join", "test_dir", "found"], ["os", "path", "join", "test_dir", "found"]], "ignore_list_file": [["found", "list", "find_path_from_directory", "test_dir", "ignore_list_file", "ignore_file_syntax"]]}, "name": "test_find_path_from_directory_respects_symlinks_glob_ignore", "params": {"self": "", "test_dir": ""}, "params_descr": {"self": "", "test_dir": ""}, "params_occur": {"self": [], "test_dir": [["found", "list", "find_path_from_directory", "test_dir", "ignore_list_file", "ignore_file_syntax"], ["os", "path", "join", "test_dir", "found"], ["os", "path", "join", "test_dir", "found"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_dir": [["pypi2nix.path.Path", 0.31985971056028484], ["pathlib.Path", 0.101631767403798], ["kata.data.io.file.FileWriter", 0.09730996094663501], ["path.Path", 0.08176992501987079], ["pathlib.PosixPath", 0.08049114223094367]]}, "q_name": "TestListPyFilesPath.test_find_path_from_directory_respects_symlinks_glob_ignore", "ret_exprs": [], "ret_type": "", "variables": {"found": "", "ignore_list_file": ""}, "variables_p": {"found": [["str", 0.5427783112092415], ["List[str]", 0.09503240201566862], ["int", 0.09255859945793864], ["dict", 0.08821743709502022], ["List[int]", 0.08732397727768723]], "ignore_list_file": [["str", 0.9028712111898641], ["pathlib.Path", 0.09712878881013569]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[156, 4], [172, 13]], "fn_var_ln": {"ignore_list_file": [[163, 8], [163, 24]], "recursing_src": [[158, 8], [158, 21]], "recursing_tgt": [[159, 8], [159, 21]]}, "fn_var_occur": {"ignore_list_file": [["list", "find_path_from_directory", "test_dir", "ignore_list_file", "ignore_file_syntax"]], "recursing_src": [["recursing_src", "os", "path", "join", "test_dir"], ["os", "symlink", "recursing_tgt", "recursing_src"]], "recursing_tgt": [["recursing_tgt", "os", "path", "join", "test_dir"], ["os", "mkdir", "recursing_tgt"], ["os", "symlink", "recursing_tgt", "recursing_src"], ["str", "err", "test_dir", "Path", "recursing_tgt", "resolve"]]}, "name": "test_find_path_from_directory_fails_on_recursive_link", "params": {"self": "", "test_dir": ""}, "params_descr": {"self": "", "test_dir": ""}, "params_occur": {"self": [], "test_dir": [["recursing_src", "os", "path", "join", "test_dir"], ["recursing_tgt", "os", "path", "join", "test_dir"], ["list", "find_path_from_directory", "test_dir", "ignore_list_file", "ignore_file_syntax"], ["str", "err", "test_dir", "Path", "recursing_tgt", "resolve"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_dir": [["pathlib.Path", 0.4384371374376911], ["str", 0.2938922642005911], ["path.Path", 0.1783339066703115], ["Callable[[str], str]", 0.08933669169140608]]}, "q_name": "TestListPyFilesPath.test_find_path_from_directory_fails_on_recursive_link", "ret_exprs": [], "ret_type": "", "variables": {"ignore_list_file": "", "recursing_src": "", "recursing_tgt": ""}, "variables_p": {"ignore_list_file": [["str", 0.8029994700950689], ["pathlib.Path", 0.10941795858330637], ["Union[Literal, str]", 0.08758257132162472]], "recursing_src": [["str", 0.7850309887182424]], "recursing_tgt": [["str", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[174, 4], [177, 89]], "fn_var_ln": {"file_path_with_dag": [[175, 8], [175, 26]]}, "fn_var_occur": {"file_path_with_dag": [["file_path_with_dag", "os", "path", "join", "TEST_DAGS_FOLDER"], ["file_utils", "might_contain_dag", "file_path", "file_path_with_dag", "safe_mode", "True"]]}, "name": "test_might_contain_dag_with_default_callable", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestListPyFilesPath.test_might_contain_dag_with_default_callable", "ret_exprs": [], "ret_type": "", "variables": {"file_path_with_dag": ""}, "variables_p": {"file_path_with_dag": [["str", 1.0]]}}, {"docstring": {"func": "Test might_contain_dag_callable", "long_descr": null, "ret": null}, "fn_lc": [[180, 4], [190, 90]], "fn_var_ln": {"file_path_with_dag": [[182, 8], [182, 26]]}, "fn_var_occur": {"file_path_with_dag": [["file_path_with_dag", "os", "path", "join", "TEST_DAGS_FOLDER"], ["file_utils", "might_contain_dag", "file_path", "file_path_with_dag", "safe_mode", "True"], ["file_utils", "might_contain_dag", "file_path", "file_path_with_dag", "safe_mode", "False"]]}, "name": "test_might_contain_dag", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestListPyFilesPath.test_might_contain_dag", "ret_exprs": [], "ret_type": "", "variables": {"file_path_with_dag": ""}, "variables_p": {"file_path_with_dag": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[192, 4], [208, 51]], "fn_var_ln": {"file_path": [[193, 8], [193, 17]], "modules": [[195, 8], [195, 15]]}, "fn_var_occur": {"file_path": [["file_path", "os", "path", "join", "TEST_DAGS_FOLDER"], ["modules", "list", "file_utils", "iter_airflow_imports", "file_path"]], "modules": [["modules", "list", "file_utils", "iter_airflow_imports", "file_path"], ["len", "modules"]]}, "name": "test_get_modules", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestListPyFilesPath.test_get_modules", "ret_exprs": [], "ret_type": "", "variables": {"file_path": "", "modules": ""}, "variables_p": {"file_path": [["str", 0.8098011209272389], ["list", 0.10365703710144272], ["zipfile.ZipFile", 0.08654184197131853]], "modules": [["str", 0.3850346491832961], ["List[str]", 0.19265260465138462]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[210, 4], [216, 32]], "fn_var_ln": {"file_path": [[211, 8], [211, 17]], "modules": [[214, 8], [214, 15]]}, "fn_var_occur": {"file_path": [["file_path", "os", "path", "join", "TEST_DAGS_FOLDER"], ["modules", "list", "file_utils", "iter_airflow_imports", "file_path"]], "modules": [["modules", "list", "file_utils", "iter_airflow_imports", "file_path"], ["len", "modules"]]}, "name": "test_get_modules_from_invalid_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestListPyFilesPath.test_get_modules_from_invalid_file", "ret_exprs": [], "ret_type": "", "variables": {"file_path": "", "modules": ""}, "variables_p": {"file_path": [["str", 0.8098011209272389], ["list", 0.10365703710144272], ["zipfile.ZipFile", 0.08654184197131853]], "modules": [["str", 0.3850346491832961], ["List[str]", 0.19265260465138462]]}}], "name": "TestListPyFilesPath", "q_name": "TestListPyFilesPath", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 0], [35, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "might_contain_dag", "params": {"file_path": "builtins.str", "zip_file": "zipfile.ZipFile | None"}, "params_descr": {"file_path": "", "zip_file": ""}, "params_occur": {"file_path": [], "zip_file": []}, "params_p": {"args": [], "file_path": [["bool", 0.5698263666898288], ["str", 0.3322346933246689]], "kwargs": [], "zip_file": [["bool", 0.5698263666898288], ["str", 0.3322346933246689]]}, "q_name": "might_contain_dag", "ret_exprs": ["return False"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "os", "os.path", "zipfile", "pathlib", "Path", "unittest", "mock", "pytest", "airflow", "utils", "file", "file_utils", "airflow", "utils", "file", "correct_maybe_zipped", "find_path_from_directory", "open_maybe_zipped", "tests", "models", "TEST_DAGS_FOLDER", "tests", "test_utils", "config", "conf_vars"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 2, "I": 0, "U": 62}, "session_id": "B2nW52pyDgxHrkXdkLMDwbl5tQij3Gwv6dJIYoN2TOk", "set": null, "tc": [false, null], "type_annot_cove": 0.03, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}