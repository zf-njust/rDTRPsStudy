{"error": null, "response": {"classes": [{"cls_lc": [[56, 0], [62, 24]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [59, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "state", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "FakeCeleryResult.state", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [62, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "FakeCeleryResult.task_id", "ret_exprs": ["return \"task_id\""], "ret_type": "", "ret_type_p": [["str", 0.9020167704355708], ["transfer.models.TopicID", 0.09798322956442923]], "variables": {}, "variables_p": {}}], "name": "FakeCeleryResult", "q_name": "FakeCeleryResult", "variables": {}, "variables_p": {}}, {"cls_lc": [[96, 0], [267, 77]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[97, 4], [99, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.setup_method", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [103, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.teardown_method", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [106, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_supports_pickling", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.test_supports_pickling", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[108, 4], [109, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_supports_sentry", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.test_supports_sentry", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [119, 70]], "fn_var_ln": {"executor": [[115, 12], [115, 20]], "tasks": [[116, 12], [116, 26]]}, "fn_var_occur": {"executor": [["executor", "celery_executor", "CeleryExecutor"], ["executor", "tasks", "FakeCeleryResult"], ["executor", "bulk_state_fetcher", "_get_many_using_multiprocessing", "executor", "tasks", "values"]], "tasks": [["executor", "tasks", "FakeCeleryResult"], ["executor", "bulk_state_fetcher", "_get_many_using_multiprocessing", "executor", "tasks", "values"]]}, "name": "test_exception_propagation", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "set_level", "logging", "ERROR", "logger"], ["celery_executor_utils", "CELERY_FETCH_ERR_MSG_HEADER", "caplog", "text", "caplog", "record_tuples"], ["FAKE_EXCEPTION_MSG", "caplog", "text", "caplog", "record_tuples"]], "self": []}, "params_p": {"args": [], "caplog": [["logging.Logger", 0.5623279391699694], ["logging.LogRecord", 0.08962482297817487], ["logging.FileHandler", 0.08625397944633718]], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.test_exception_propagation", "ret_exprs": [], "ret_type": "", "variables": {"executor": "", "tasks": ""}, "variables_p": {"executor": [["dict", 0.18840516133665744], ["str", 0.11943000873647033], ["cmk.utils.rulesets.ruleset_matcher.RulesetMatchObject", 0.11186243188791206]], "tasks": [["str", 0.276547700889704], ["dict", 0.19104405527294005], ["Dict[str, Union[Any, Any]]", 0.11110757186115475], ["List[str]", 0.09181230872510895]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [138, 48]], "fn_var_ln": {"calls": [[127, 8], [127, 13]], "executor": [[125, 8], [125, 16]]}, "fn_var_occur": {"calls": [["calls", "mock", "call", "value", "mock", "ANY", "tags", "mock", "call", "value", "mock", "ANY", "tags", "mock", "call", "value", "mock", "ANY", "tags"], ["mock_stats_gauge", "assert_has_calls", "calls"]], "executor": [["executor", "celery_executor", "CeleryExecutor"], ["executor", "heartbeat"]]}, "name": "test_gauge_executor_metrics", "params": {"mock_stats_gauge": "", "mock_sync": "", "mock_trigger_tasks": "", "self": ""}, "params_descr": {"mock_stats_gauge": "", "mock_sync": "", "mock_trigger_tasks": "", "self": ""}, "params_occur": {"mock_stats_gauge": [["mock_stats_gauge", "assert_has_calls", "calls"]], "mock_sync": [], "mock_trigger_tasks": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_stats_gauge": [], "mock_sync": [["mock.Mock", 0.7338930932633712]], "mock_trigger_tasks": [["mock.Mock", 0.7338930932633712]], "self": []}, "q_name": "TestCeleryExecutor.test_gauge_executor_metrics", "ret_exprs": [], "ret_type": "", "variables": {"calls": "", "executor": ""}, "variables_p": {"calls": [["list", 0.19495557708805766], ["List[int]", 0.17160446127383921], ["mock._Call", 0.12624941585677268], ["Dict[str, Union[Any, Any]]", 0.09496353751757497], ["mock.Mock", 0.0829409324341935], ["Tuple[int, int]", 0.08168840126636026], ["Dict[str, Tuple[Any, Any, Any, int]]", 0.07827195370232105], ["List[str]", 0.07736622599826912]], "executor": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": "Check that we validate _on the receiving_ side, not just sending side", "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [173, 80]], "fn_var_ln": {"expected_context": [[152, 12], [152, 28]], "id": [[163, 12], [163, 24]]}, "fn_var_occur": {"expected_context": [["expected_context", "contextlib", "nullcontext"], ["expected_context", "pytest", "raises", "ValueError", "match"]], "id": [["mock_task", "id"]]}, "name": "test_command_validation", "params": {"command": "", "raise_exception": "", "self": ""}, "params_descr": {"command": "", "raise_exception": "", "self": ""}, "params_occur": {"command": [["celery_executor_utils", "execute_command", "command"], ["mock_subproc", "call_args", "command", "mock_fork", "call_args", "command"]], "raise_exception": [], "self": []}, "params_p": {"args": [], "command": [["Dict[str, Any]", 0.18346670455531483]], "kwargs": [], "raise_exception": [["tests.async_mock.Mock", 0.19625251080217954], ["bool", 0.11686370139019199], ["tests.async_mock.MagicMock", 0.09812625540108977]], "self": []}, "q_name": "TestCeleryExecutor.test_command_validation", "ret_exprs": [], "ret_type": "", "variables": {"expected_context": "", "id": ""}, "variables_p": {"expected_context": [], "id": [["int", 0.32691236207103447], ["str", 0.27316996412440114], ["List[str]", 0.11664623981526041], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.0901101836775553], ["robot_server.service.session.models.IdentifierType", 0.08966203873939597]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [186, 60]], "fn_var_ln": {"executor": [[184, 8], [184, 16]], "key1": [[182, 8], [182, 12]], "start_date": [[177, 8], [177, 18]], "task_1": [[180, 12], [180, 18]], "tis": [[183, 8], [183, 11]]}, "fn_var_occur": {"executor": [["executor", "celery_executor", "CeleryExecutor"], ["executor", "try_adopt_task_instances", "tis", "tis"]], "key1": [["key1", "TaskInstance", "task", "task_1", "run_id", "None"], ["tis", "key1"]], "start_date": [["start_date", "datetime", "utcnow", "timedelta", "days"], ["task_1", "BaseOperator", "task_id", "start_date", "start_date"]], "task_1": [["task_1", "BaseOperator", "task_id", "start_date", "start_date"], ["key1", "TaskInstance", "task", "task_1", "run_id", "None"]], "tis": [["tis", "key1"], ["executor", "try_adopt_task_instances", "tis", "tis"]]}, "name": "test_try_adopt_task_instances_none", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.test_try_adopt_task_instances_none", "ret_exprs": [], "ret_type": "", "variables": {"executor": "", "key1": "", "start_date": "", "task_1": "", "tis": ""}, "variables_p": {"executor": [["PyLibs.objection.utils.frida_transporFridaRunner", 0.43009344798849775]], "key1": [["str", 0.3183856688471517], ["int", 0.308924459685765], ["cmk.utils.type_defs.UserId", 0.10295835318442327], ["Type[Dict[Any, Any]]", 0.09469386047685767]], "start_date": [["datetime.datetime", 0.7099677316352092], ["datetime.date", 0.197937429561636], ["str", 0.09209483880315476]], "task_1": [["str", 0.23636002792273741], ["Dict[str, str]", 0.1294278762869034], ["List[str]", 0.11980722689732624], ["Dict[str, Optional[int]]", 0.07947812845330304], ["Dict[str, Union[Any, Any]]", 0.0776608266461924]], "tis": [["str", 0.4289225459239711], ["dict", 0.10218898583331129], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08720436837602809]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [218, 36]], "fn_var_ln": {"executor": [[207, 8], [207, 16]], "external_executor_id": [[203, 8], [203, 32]], "key_1": [[213, 8], [213, 13]], "key_2": [[214, 8], [214, 13]], "not_adopted_tis": [[211, 8], [211, 23]], "start_date": [[191, 8], [191, 18]], "state": [[204, 8], [204, 17]], "task_1": [[196, 12], [196, 18]], "task_2": [[197, 12], [197, 18]], "ti1": [[199, 8], [199, 11]], "ti2": [[202, 8], [202, 11]], "tis": [[206, 8], [206, 11]], "try_number": [[193, 8], [193, 18]]}, "fn_var_occur": {"executor": [["executor", "celery_executor", "CeleryExecutor"], ["executor", "running", "set"], ["executor", "tasks"], ["not_adopted_tis", "executor", "try_adopt_task_instances", "tis"], ["executor", "running", "key_1", "key_2"], ["executor", "tasks", "key_1", "AsyncResult", "key_2", "AsyncResult"]], "external_executor_id": [["ti1", "external_executor_id"], ["ti2", "external_executor_id"]], "key_1": [["key_1", "TaskInstanceKey", "dag", "dag_id", "task_1", "task_id", "None", "try_number"], ["executor", "running", "key_1", "key_2"], ["executor", "tasks", "key_1", "AsyncResult", "key_2", "AsyncResult"]], "key_2": [["key_2", "TaskInstanceKey", "dag", "dag_id", "task_2", "task_id", "None", "try_number"], ["executor", "running", "key_1", "key_2"], ["executor", "tasks", "key_1", "AsyncResult", "key_2", "AsyncResult"]], "not_adopted_tis": [["not_adopted_tis", "executor", "try_adopt_task_instances", "tis"]], "start_date": [["start_date", "timezone", "utcnow", "timedelta", "days"], ["task_1", "BaseOperator", "task_id", "start_date", "start_date"], ["task_2", "BaseOperator", "task_id", "start_date", "start_date"]], "state": [["ti1", "state", "State", "QUEUED"], ["ti2", "state", "State", "QUEUED"]], "task_1": [["task_1", "BaseOperator", "task_id", "start_date", "start_date"], ["ti1", "TaskInstance", "task", "task_1", "run_id", "None"], ["key_1", "TaskInstanceKey", "dag", "dag_id", "task_1", "task_id", "None", "try_number"]], "task_2": [["task_2", "BaseOperator", "task_id", "start_date", "start_date"], ["ti2", "TaskInstance", "task", "task_2", "run_id", "None"], ["key_2", "TaskInstanceKey", "dag", "dag_id", "task_2", "task_id", "None", "try_number"]], "ti1": [["ti1", "TaskInstance", "task", "task_1", "run_id", "None"], ["ti1", "external_executor_id"], ["ti1", "state", "State", "QUEUED"], ["tis", "ti1", "ti2"]], "ti2": [["ti2", "TaskInstance", "task", "task_2", "run_id", "None"], ["ti2", "external_executor_id"], ["ti2", "state", "State", "QUEUED"], ["tis", "ti1", "ti2"]], "tis": [["tis", "ti1", "ti2"], ["not_adopted_tis", "executor", "try_adopt_task_instances", "tis"]], "try_number": [["key_1", "TaskInstanceKey", "dag", "dag_id", "task_1", "task_id", "None", "try_number"], ["key_2", "TaskInstanceKey", "dag", "dag_id", "task_2", "task_id", "None", "try_number"]]}, "name": "test_try_adopt_task_instances", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.test_try_adopt_task_instances", "ret_exprs": [], "ret_type": "", "variables": {"executor": "", "external_executor_id": "", "key_1": "", "key_2": "", "not_adopted_tis": "", "start_date": "", "state": "", "task_1": "", "task_2": "", "ti1": "", "ti2": "", "tis": "", "try_number": ""}, "variables_p": {"executor": [["dict", 0.40476074438479426], ["str", 0.10187549140501165], ["Dict[str, Any]", 0.09716835859651425]], "external_executor_id": [["str", 0.6625790207337935], ["int", 0.16571051264819708], ["transfer.models.ArticleID", 0.09197112496465787]], "key_1": [["str", 0.35717273598517146], ["int", 0.23193078467243738], ["Type[django.applications.catmaid.models.ChangeRequest]", 0.08789074162736336], ["taxonomy.db.models.base.EnumField", 0.08194103789737789]], "key_2": [["str", 0.35717273598517146], ["int", 0.23193078467243738], ["Type[django.applications.catmaid.models.ChangeRequest]", 0.08789074162736336], ["taxonomy.db.models.base.EnumField", 0.08194103789737789]], "not_adopted_tis": [["int", 0.09490675855173317]], "start_date": [["datetime.datetime.datetime", 0.3744931778932846], ["datetime.datetime", 0.32225947331047344], ["datetime.date.time.date", 0.11013067654845259], ["Optional[str]", 0.09661231147518237], ["datetime.date", 0.09650436077260698]], "state": [["str", 0.7999999999999999], ["Dict[str, str]", 0.1]], "task_1": [["str", 0.2051183459539032], ["Dict[str, Optional[int]]", 0.12952413316667044], ["Dict[str, Any]", 0.1060003660464392], ["Dict[str, Union[Any, Any]]", 0.09298123260607545], ["List[str]", 0.09161493462115447]], "task_2": [["str", 0.2051183459539032], ["Dict[str, Optional[int]]", 0.12952413316667044], ["Dict[str, Any]", 0.1060003660464392], ["Dict[str, Union[Any, Any]]", 0.09298123260607545], ["List[str]", 0.09161493462115447]], "ti1": [["viewer.models.Gallery", 0.1295390634325545], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.12783034320183678], ["List[Dict[str, str]]", 0.08694692550802854], ["Optional[List[Any]]", 0.07929537572641127], ["Optional[excars.models.rides.Ride]", 0.07773478160944454]], "ti2": [["viewer.models.Gallery", 0.1295390634325545], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.12783034320183678], ["List[Dict[str, str]]", 0.08694692550802854], ["Optional[List[Any]]", 0.07929537572641127], ["Optional[excars.models.rides.Ride]", 0.07773478160944454]], "tis": [["PyLibs.objection.utils.frida_transporFridaRunner", 0.43009344798849775]], "try_number": [["str", 0.28756253842835194], ["int", 0.1666245254504193], ["Dict[int, str]", 0.1268231654156429], ["Final", 0.114208127743786], ["Tuple[str, str, str, str, str, str, str]", 0.1011775576117622]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[221, 4], [224, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_celery_revoke", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCeleryExecutor.mock_celery_revoke", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[228, 4], [250, 38]], "fn_var_ln": {"executor": [[242, 12], [242, 20]], "external_executor_id": [[235, 8], [235, 31]], "job_id": [[243, 12], [243, 27]], "queued_by_job_id": [[238, 8], [238, 27]], "queued_dttm": [[237, 8], [237, 22]], "running": [[244, 12], [244, 28]], "start_date": [[229, 8], [229, 18]], "state": [[236, 8], [236, 16]], "task": [[232, 12], [232, 16]], "tasks": [[245, 12], [245, 26]], "ti": [[234, 8], [234, 10]], "tis": [[239, 8], [239, 11]]}, "fn_var_occur": {"executor": [["executor", "celery_executor", "CeleryExecutor"], ["executor", "job_id"], ["executor", "running", "ti", "key"], ["executor", "tasks", "ti", "key", "AsyncResult"], ["executor", "cleanup_stuck_queued_tasks", "tis"], ["executor", "sync"], ["executor", "tasks"]], "external_executor_id": [["ti", "external_executor_id"]], "job_id": [["executor", "job_id"]], "queued_by_job_id": [["ti", "queued_by_job_id"]], "queued_dttm": [["ti", "queued_dttm", "timezone", "utcnow", "timedelta", "minutes"]], "running": [["executor", "running", "ti", "key"]], "start_date": [["start_date", "timezone", "utcnow", "timedelta", "days"], ["task", "BaseOperator", "task_id", "start_date", "start_date"]], "state": [["ti", "state", "State", "QUEUED"]], "task": [["task", "BaseOperator", "task_id", "start_date", "start_date"], ["ti", "TaskInstance", "task", "task", "run_id", "None"]], "tasks": [["executor", "tasks", "ti", "key", "AsyncResult"], ["executor", "tasks"]], "ti": [["ti", "TaskInstance", "task", "task", "run_id", "None"], ["ti", "external_executor_id"], ["ti", "state", "State", "QUEUED"], ["ti", "queued_dttm", "timezone", "utcnow", "timedelta", "minutes"], ["ti", "queued_by_job_id"], ["tis", "ti"], ["executor", "running", "ti", "key"], ["executor", "tasks", "ti", "key", "AsyncResult"]], "tis": [["tis", "ti"], ["executor", "cleanup_stuck_queued_tasks", "tis"]]}, "name": "test_cleanup_stuck_queued_tasks", "params": {"mock_fail": "", "self": ""}, "params_descr": {"mock_fail": "", "self": ""}, "params_occur": {"mock_fail": [["mock_fail", "called_once"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_fail": [["mock.Mock", 0.06581668370951065], ["mock.MagicMock", 0.0553178410047062]], "self": []}, "q_name": "TestCeleryExecutor.test_cleanup_stuck_queued_tasks", "ret_exprs": [], "ret_type": "", "variables": {"executor": "", "external_executor_id": "", "job_id": "", "queued_by_job_id": "", "queued_dttm": "", "running": "", "start_date": "", "state": "", "task": "", "tasks": "", "ti": "", "tis": ""}, "variables_p": {"executor": [["dict", 0.10444052988005305], ["vjemmie.utils.voting.VotingSession", 0.09175547810491064]], "external_executor_id": [["str", 0.8309518441065099], ["int", 0.11556409045997561]], "job_id": [["str", 0.9999999999931534], ["int", 6.846667155856282e-12]], "queued_by_job_id": [["str", 0.6416711925023665], ["int", 0.2900578101505342], ["Pattern[Any]", 0.06827099734709928]], "queued_dttm": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "running": [["int", 0.43380575537288873]], "start_date": [["datetime.datetime.datetime", 0.8995653169218871], ["datetime.datetime", 0.10043468307811292]], "state": [["str", 0.7999999999999999], ["Dict[str, str]", 0.1]], "task": [["list", 0.23760485885290109], ["str", 0.1973810394189382], ["List[Tuple[Any, str]]", 0.10745501605879476], ["dict", 0.09671236174987749], ["busboy.util.Maybe[datetime.datetime]", 0.09122130966073512], ["List[str]", 0.08894381994516957]], "tasks": [["Dict[str, Any]", 0.19370920137989855], ["dict", 0.10842505104559566], ["Dict[str, str]", 0.09742130843966632], ["float", 0.09280720019063728], ["str", 0.09087516567696126]], "ti": [["viewer.models.Gallery", 0.1295390634325545], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.12783034320183678], ["List[Dict[str, str]]", 0.08694692550802854], ["Optional[List[Any]]", 0.07929537572641127], ["Optional[excars.models.rides.Ride]", 0.07773478160944454]], "tis": [["List[str]", 0.11814570118195425]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[254, 4], [267, 77]], "fn_var_ln": {"call_args": [[265, 8], [265, 17]]}, "fn_var_occur": {"call_args": [["call_args", "mock_celery", "call_args", "kwargs", "get"]]}, "name": "test_result_backend_sqlalchemy_engine_options", "params": {"mock_celery": "", "self": ""}, "params_descr": {"mock_celery": "", "self": ""}, "params_occur": {"mock_celery": [["call_args", "mock_celery", "call_args", "kwargs", "get"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_celery": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.09857066837020248]], "self": []}, "q_name": "TestCeleryExecutor.test_result_backend_sqlalchemy_engine_options", "ret_exprs": [], "ret_type": "", "variables": {"call_args": ""}, "variables_p": {"call_args": [["List[str]", 0.3744180298122819], ["Type[Dict[str, Any]]", 0.11453118194660324], ["Dict[str, str]", 0.11172251719443353], ["Mapping[str, Mapping[str, Any]]", 0.10810419539672321], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09994565804817623], ["str", 0.0892990699669992]]}}], "name": "TestCeleryExecutor", "q_name": "TestCeleryExecutor", "variables": {}, "variables_p": {}}, {"cls_lc": [[274, 0], [281, 16]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[280, 4], [281, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "apply_async", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [], "kwargs": [], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MockTask.apply_async", "ret_exprs": ["return 1"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {}, "variables_p": {}}], "name": "MockTask", "q_name": "MockTask", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[50, 0], [53, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_prepare_test_bodies", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "_prepare_test_bodies", "ret_exprs": ["return [(url,) for url in os.environ[\"CELERY_BROKER_URLS\"].split(\",\")]", "return [(conf.get(\"celery\", \"BROKER_URL\"))]"], "ret_type": "", "ret_type_p": [["List[str]", 0.5412564236887905], ["str", 0.08983847522296591], ["dict", 0.08983847522296591], ["list", 0.08983847522296591], ["Union[int, None]", 0.08983847522296591]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[66, 0], [93, 32]], "fn_var_ln": {"backend": [[77, 4], [77, 11]], "broker_url": [[67, 4], [67, 14]], "execute": [[68, 4], [68, 11]], "patch_app": [[74, 4], [74, 13]], "patch_execute": [[75, 4], [75, 17]], "session": [[85, 8], [85, 15]], "test_app": [[72, 4], [72, 12]], "test_config": [[70, 4], [70, 15]], "test_execute": [[73, 4], [73, 16]]}, "fn_var_occur": {"backend": [["backend", "test_app", "backend"], ["hasattr", "backend"], ["session", "backend", "ResultSession"]], "broker_url": [["broker_url", "broker_url", "conf", "get"], ["test_config", "update", "broker_url"], ["test_app", "Celery", "broker_url", "config_source", "test_config"]], "execute": [["execute", "execute", "celery_executor_utils", "execute_command", "__wrapped__"], ["test_execute", "test_app", "task", "execute"]], "patch_app": [["patch_app", "mock", "patch", "test_app"]], "patch_execute": [["patch_execute", "mock", "patch", "test_execute"]], "session": [["session", "backend", "ResultSession"], ["session", "close"]], "test_app": [["test_app", "Celery", "broker_url", "config_source", "test_config"], ["test_execute", "test_app", "task", "execute"], ["patch_app", "mock", "patch", "test_app"], ["backend", "test_app", "backend"]], "test_config": [["test_config", "dict", "celery_executor_utils", "celery_configuration"], ["test_config", "update", "broker_url"], ["test_app", "Celery", "broker_url", "config_source", "test_config"]], "test_execute": [["test_execute", "test_app", "task", "execute"], ["patch_execute", "mock", "patch", "test_execute"]]}, "name": "_prepare_app", "params": {"broker_url": "", "execute": ""}, "params_descr": {"broker_url": "", "execute": ""}, "params_occur": {"broker_url": [["broker_url", "broker_url", "conf", "get"], ["test_config", "update", "broker_url"], ["test_app", "Celery", "broker_url", "config_source", "test_config"]], "execute": [["execute", "execute", "celery_executor_utils", "execute_command", "__wrapped__"], ["test_execute", "test_app", "task", "execute"]]}, "params_p": {"args": [], "broker_url": [["str", 0.6046937203292672], ["dict", 0.08522906001587793]], "execute": [["str", 0.35374029002971674], ["IO[bytes]", 0.08646583321601997]], "kwargs": []}, "q_name": "_prepare_app", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "broker_url": "", "execute": "", "patch_app": "", "patch_execute": "", "session": "", "test_app": "", "test_config": "", "test_execute": ""}, "variables_p": {"backend": [["dict", 0.16883275582647453], ["str", 0.16883275582647453], ["List[str]", 0.119162814082692], ["tests.entities.DataClassWithDataClass", 0.11067044107055472], ["cincoconfig.config.Schema", 0.10093103275086664]], "broker_url": [["str", 0.8179185761980696], ["Dict[str, Any]", 0.09426928373916507], ["Dict[str, str]", 0.0878121400627653]], "execute": [["str", 0.19855136210860672]], "patch_app": [["tests.usecases.list_permissions_tesMockUI", 0.3056111412865302], ["tests.utils.PicklableMock", 0.09732745842174809], ["Dict[str, str]", 0.09595549218821253]], "patch_execute": [["Tuple[Literal, Literal, Literal]", 0.20889039902571432], ["Dict[int, Dict[str, Any]]", 0.19544849707409406], ["List[str]", 0.09977959029914367], ["str", 0.09772424853704703], ["list", 0.09113148443111899]], "session": [["dict", 0.12389221894336329], ["str", 0.10523718658520963], ["Dict[str, Dict[str, Any]]", 0.09328647362037198], ["Dict[str, None]", 0.08750013067248975]], "test_app": [["Dict[str, Union[Any, Any]]", 0.5771629836745855], ["str", 0.21905078093232228], ["Dict[str, Any]", 0.10394385200607983], ["app.config.Config", 0.09984238338701251]], "test_config": [["dict", 0.4329988027599085], ["Dict[Any, dict]", 0.17812369719700932], ["Dict[str, Any]", 0.1074585736517338], ["str", 0.09497567995003003], ["Dict[Any, Dict[Any, Any]]", 0.09448475283167493], ["List[Dict[str, str]]", 0.09195849360964353]], "test_execute": [["tests.core.data.json.test_json_repository.DummyEntity", 0.10523929964062924], ["float", 0.10207046804468706]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[270, 0], [271, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_operation_timeout_config", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_operation_timeout_config", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[284, 0], [286, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_exit_gracefully", "params": {"_": "", "signum": ""}, "params_descr": {"_": "", "signum": ""}, "params_occur": {"_": [], "signum": [["print", "os", "getpid", "signum"], ["sys", "exit", "signum"]]}, "params_p": {"_": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "args": [], "kwargs": [], "signum": [["int", 0.9999999997258705], ["models.characters.mods_base.Mod", 5.3775675111948716e-11], ["float", 5.188437113748472e-11], ["str", 4.270304787821692e-11]]}, "q_name": "_exit_gracefully", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Register the same signals as scheduler does to test celery_executor to make sure it does not", "long_descr": "hang.", "ret": null}, "fn_lc": [[290, 0], [306, 47]], "fn_var_ln": {"orig_sigint": [[297, 4], [297, 15]], "orig_sigterm": [[298, 4], [298, 16]], "orig_sigusr2": [[299, 4], [299, 16]]}, "fn_var_occur": {"orig_sigint": [["orig_sigint", "orig_sigterm", "orig_sigusr2", "signal", "SIG_DFL"], ["orig_sigint", "signal", "signal", "signal", "SIGINT", "_exit_gracefully"], ["signal", "signal", "signal", "SIGINT", "orig_sigint"]], "orig_sigterm": [["orig_sigint", "orig_sigterm", "orig_sigusr2", "signal", "SIG_DFL"], ["orig_sigterm", "signal", "signal", "signal", "SIGTERM", "_exit_gracefully"], ["signal", "signal", "signal", "SIGTERM", "orig_sigterm"]], "orig_sigusr2": [["orig_sigint", "orig_sigterm", "orig_sigusr2", "signal", "SIG_DFL"], ["orig_sigusr2", "signal", "signal", "signal", "SIGUSR2", "_exit_gracefully"], ["signal", "signal", "signal", "SIGUSR2", "orig_sigusr2"]]}, "name": "register_signals", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "register_signals", "ret_exprs": [], "ret_type": "", "variables": {"orig_sigint": "", "orig_sigterm": "", "orig_sigusr2": ""}, "variables_p": {"orig_sigint": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "orig_sigterm": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "orig_sigusr2": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": "Test that celery_executor does not hang after many runs.", "long_descr": null, "ret": null}, "fn_lc": [[310, 0], [323, 72]], "fn_var_ln": {"executor": [[314, 4], [314, 12]], "results": [[322, 8], [322, 15]], "task": [[316, 4], [316, 8]], "task_tuples_to_send": [[317, 4], [317, 23]]}, "fn_var_occur": {"executor": [["executor", "celery_executor", "CeleryExecutor"], ["results", "executor", "_send_tasks_to_celery", "task_tuples_to_send"]], "results": [["results", "executor", "_send_tasks_to_celery", "task_tuples_to_send"], ["results", "None", "None", "_", "task_tuples_to_send"]], "task": [["task", "MockTask"], ["task_tuples_to_send", "None", "None", "None", "task", "_", "range"]], "task_tuples_to_send": [["task_tuples_to_send", "None", "None", "None", "task", "_", "range"], ["results", "executor", "_send_tasks_to_celery", "task_tuples_to_send"], ["results", "None", "None", "_", "task_tuples_to_send"]]}, "name": "test_send_tasks_to_celery_hang", "params": {"register_signals": ""}, "params_descr": {"register_signals": ""}, "params_occur": {"register_signals": []}, "params_p": {"args": [], "kwargs": [], "register_signals": [["tests.basilisp.helpers.CompileFn", 0.5180688669590598]]}, "q_name": "test_send_tasks_to_celery_hang", "ret_exprs": [], "ret_type": "", "variables": {"executor": "", "results": "", "task": "", "task_tuples_to_send": ""}, "variables_p": {"executor": [], "results": [["Optional[raiden.transfer.state.NettingChannelState]", 0.11991454776486983], ["Optional[raiden.transfer.state.TokenNetworkRegistryState]", 0.10043800921888707], ["dict", 0.0988852108310114], ["list", 0.09479735165760383], ["Optional[grpy.core.models.User]", 0.09345224211341616], ["Iterable[grpy.core.models.User]", 0.09256602515832166], ["bytearray", 0.09247035795330263]], "task": [["dict", 0.16114082069069147], ["taskiapplication.models.task.Task", 0.10963488104490193], ["bytes", 0.07597371241459203], ["List[str]", 0.07593799270102074]], "task_tuples_to_send": [["OrderedDict[str, Any]", 0.1923124157404636], ["set", 0.16549764676682294], ["str", 0.1541549640284168], ["Optional[str]", 0.14188512189141902], ["list", 0.1346158585438888]]}}], "imports": ["__future__", "annotations", "contextlib", "logging", "os", "signal", "sys", "datetime", "datetime", "timedelta", "unittest", "mock", "celery.contrib.testing.tasks", "pytest", "time_machine", "celery", "Celery", "celery", "result", "AsyncResult", "kombu", "asynchronous", "set_event_loop", "airflow", "configuration", "conf", "airflow", "executors", "celery_executor", "celery_executor_utils", "airflow", "executors", "celery_executor", "CeleryExecutor", "airflow", "models", "baseoperator", "BaseOperator", "airflow", "models", "dag", "DAG", "airflow", "models", "taskinstance", "TaskInstance", "TaskInstanceKey", "airflow", "utils", "timezone", "airflow", "utils", "state", "State", "tests", "test_utils", "db", "tests", "test_utils", "config", "conf_vars", "importlib", "airflow", "config_templates", "default_celery", "airflow", "executors", "celery_executor_utils"], "mod_var_ln": {"FAKE_EXCEPTION_MSG": [[47, 0], [47, 18]]}, "mod_var_occur": {"FAKE_EXCEPTION_MSG": [["Exception", "FAKE_EXCEPTION_MSG"], ["FAKE_EXCEPTION_MSG", "caplog", "text", "caplog", "record_tuples"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 86}, "session_id": "dT7MJXm4SHJs9f8803D6RXga1Q7EsmHv5sYNzDl2wc4", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"FAKE_EXCEPTION_MSG": ""}, "variables_p": {"FAKE_EXCEPTION_MSG": [["str", 0.3194530738630104], ["List[str]", 0.12298998460402366], ["List[Tuple[str, str]]", 0.12298998460402366], ["int", 0.10088694513717014], ["src.pip_shims.models.ShimmedPathCollection", 0.08777670010471239], ["DefaultDict[Any, DefaultDict[Any, Any]]", 0.08056240490072647]]}}}