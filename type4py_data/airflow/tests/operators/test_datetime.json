{"error": null, "response": {"classes": [{"cls_lc": [[37, 0], [265, 58]], "cls_var_ln": {"targets": [[45, 4], [45, 11]]}, "cls_var_occur": {"targets": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [43, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestBranchDateTimeOperator.setup_class", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [77, 9]], "fn_var_ln": {"branch_1": [[59, 8], [59, 21]], "branch_2": [[60, 8], [60, 21]], "branch_op": [[62, 8], [62, 22]], "dag": [[53, 8], [53, 16]], "dr": [[75, 8], [75, 15]]}, "fn_var_occur": {"branch_1": [["self", "branch_1", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "self", "branch_op"]], "branch_2": [["self", "branch_2", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_2", "set_upstream", "self", "branch_op"]], "branch_op": [["self", "branch_op", "BranchDateTimeOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "target_upper", "datetime", "datetime", "target_lower", "datetime", "datetime", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "self", "branch_op"], ["self", "branch_2", "set_upstream", "self", "branch_op"]], "dag": [["self", "dag", "DAG", "default_args", "DEFAULT_DATE", "schedule", "INTERVAL"], ["self", "branch_1", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_2", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_op", "BranchDateTimeOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "target_upper", "datetime", "datetime", "target_lower", "datetime", "datetime", "dag", "self", "dag"], ["self", "dag", "clear"], ["self", "dr", "self", "dag", "create_dagrun", "run_id", "start_date", "DEFAULT_DATE", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"]], "dr": [["self", "dr", "self", "dag", "create_dagrun", "run_id", "start_date", "DEFAULT_DATE", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "DAG", "default_args", "DEFAULT_DATE", "schedule", "INTERVAL"], ["self", "branch_1", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_2", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_op", "BranchDateTimeOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "target_upper", "datetime", "datetime", "target_lower", "datetime", "datetime", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "self", "branch_op"], ["self", "branch_2", "set_upstream", "self", "branch_op"], ["self", "dag", "clear"], ["self", "dr", "self", "dag", "create_dagrun", "run_id", "start_date", "DEFAULT_DATE", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDateTimeOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"branch_1": "", "branch_2": "", "branch_op": "", "dag": "", "dr": ""}, "variables_p": {"branch_1": [["str", 0.17013571391407567], ["taxonomy.db.models.base.EnumField", 0.10246107950142837], ["Tuple[Literal, Literal, int]", 0.09210624625006245], ["Dict[str, Optional[str]]", 0.08933295318264108], ["int", 0.08609333577183746], ["float", 0.08164455547343237]], "branch_2": [["str", 0.17013571391407567], ["taxonomy.db.models.base.EnumField", 0.10246107950142837], ["Tuple[Literal, Literal, int]", 0.09210624625006245], ["Dict[str, Optional[str]]", 0.08933295318264108], ["int", 0.08609333577183746], ["float", 0.08164455547343237]], "branch_op": [["str", 0.6948920840396228], ["Union[Literal, str]", 0.3051079159603772]], "dag": [["int", 0.6122656017516601], ["Tuple[Literal, Literal, Literal]", 0.11547585141448527], ["str", 0.10254807539689756]], "dr": [["str", 0.16305829834756222], ["Type[Tuple[int, int]]", 0.13417925535902125], ["datetime.datetime", 0.12932483677218903], ["List[Tuple[Any, Any]]", 0.10890383296949661], ["datetime.timedelta", 0.10233222021993969], ["Tuple[int, int]", 0.08383376849235474]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [83, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDateTimeOperator.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Helper that asserts task instances with a given id are in a given state", "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [96, 97]], "fn_var_ln": {"expected_state": [[90, 16], [90, 30]], "tis": [[87, 8], [87, 11]]}, "fn_var_occur": {"expected_state": [["expected_state", "task_ids_to_states", "ti", "task_id"], ["ti", "state", "expected_state", "ti", "task_id", "ti", "state", "expected_state"]], "tis": [["tis", "self", "dr", "get_task_instances"]]}, "name": "_assert_task_ids_match_states", "params": {"self": "", "task_ids_to_states": ""}, "params_descr": {"self": "", "task_ids_to_states": ""}, "params_occur": {"self": [["tis", "self", "dr", "get_task_instances"]], "task_ids_to_states": [["expected_state", "task_ids_to_states", "ti", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "task_ids_to_states": [["str", 0.4983395488661089], ["int", 0.09897282691401177], ["dict", 0.09737238617086914]]}, "q_name": "TestBranchDateTimeOperator._assert_task_ids_match_states", "ret_exprs": [], "ret_type": "", "variables": {"expected_state": "", "tis": ""}, "variables_p": {"expected_state": [["str", 0.18418927618344422], ["list", 0.10593399201488295], ["int", 0.09857253298994917], ["app.models.user.User", 0.08834439565165673], ["List[str]", 0.08447591182546976]], "tis": [["bytes", 0.2790197600079285], ["str", 0.263272664990093], ["List[int]", 0.12003650872681948], ["Dict[int, str]", 0.09759804882152011]]}}, {"docstring": {"func": "Check if BranchDateTimeOperator raises exception on missing target", "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [108, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_no_target_time", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["BranchDateTimeOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "target_upper", "None", "target_lower", "None", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDateTimeOperator.test_no_target_time", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check BranchDateTimeOperator branch operation", "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [127, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_branch_datetime_operator_falls_within_range", "params": {"self": "", "target_lower": "", "target_upper": ""}, "params_descr": {"self": "", "target_lower": "", "target_upper": ""}, "params_occur": {"self": [["self", "branch_op", "target_lower", "target_lower"], ["self", "branch_op", "target_upper", "target_upper"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "_assert_task_ids_match_states", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]], "target_lower": [["self", "branch_op", "target_lower", "target_lower"]], "target_upper": [["self", "branch_op", "target_upper", "target_upper"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_lower": [["int", 0.21509229495465076]], "target_upper": [["int", 0.21509229495465076]]}, "q_name": "TestBranchDateTimeOperator.test_branch_datetime_operator_falls_within_range", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check BranchDateTimeOperator branch operation", "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [153, 17]], "fn_var_ln": {"dates": [[135, 8], [135, 13]]}, "fn_var_occur": {"dates": [["dates", "datetime", "datetime", "tzinfo", "datetime", "timezone", "utc", "datetime", "datetime", "tzinfo", "datetime", "timezone", "utc"]]}, "name": "test_branch_datetime_operator_falls_outside_range", "params": {"self": "", "target_lower": "", "target_upper": ""}, "params_descr": {"self": "", "target_lower": "", "target_upper": ""}, "params_occur": {"self": [["self", "branch_op", "target_lower", "target_lower"], ["self", "branch_op", "target_upper", "target_upper"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "_assert_task_ids_match_states", "State", "SUCCESS", "State", "SKIPPED", "State", "NONE"]], "target_lower": [["self", "branch_op", "target_lower", "target_lower"]], "target_upper": [["self", "branch_op", "target_upper", "target_upper"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_lower": [["int", 0.21509229495465076]], "target_upper": [["int", 0.21509229495465076]]}, "q_name": "TestBranchDateTimeOperator.test_branch_datetime_operator_falls_outside_range", "ret_exprs": [], "ret_type": "", "variables": {"dates": ""}, "variables_p": {"dates": [["datetime.datetime", 0.4952809769657128], ["datetime.datetime.datetime", 0.34629098544372655], ["datetime.date", 0.08039737538086003], ["datetime.date.time.datetime", 0.07803066220970056]]}}, {"docstring": {"func": "Check BranchDateTimeOperator branch operation", "long_descr": null, "ret": null}, "fn_lc": [[157, 4], [170, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_branch_datetime_operator_upper_comparison_within_range", "params": {"self": "", "target_upper": ""}, "params_descr": {"self": "", "target_upper": ""}, "params_occur": {"self": [["self", "branch_op", "target_upper", "target_upper"], ["self", "branch_op", "target_lower", "None"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "_assert_task_ids_match_states", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]], "target_upper": [["self", "branch_op", "target_upper", "target_upper"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_upper": []}, "q_name": "TestBranchDateTimeOperator.test_branch_datetime_operator_upper_comparison_within_range", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check BranchDateTimeOperator branch operation", "long_descr": null, "ret": null}, "fn_lc": [[174, 4], [187, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_branch_datetime_operator_lower_comparison_within_range", "params": {"self": "", "target_lower": ""}, "params_descr": {"self": "", "target_lower": ""}, "params_occur": {"self": [["self", "branch_op", "target_lower", "target_lower"], ["self", "branch_op", "target_upper", "None"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "_assert_task_ids_match_states", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]], "target_lower": [["self", "branch_op", "target_lower", "target_lower"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_lower": [["int", 0.12303631639784424]]}, "q_name": "TestBranchDateTimeOperator.test_branch_datetime_operator_lower_comparison_within_range", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check BranchDateTimeOperator branch operation", "long_descr": null, "ret": null}, "fn_lc": [[191, 4], [204, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_branch_datetime_operator_upper_comparison_outside_range", "params": {"self": "", "target_upper": ""}, "params_descr": {"self": "", "target_upper": ""}, "params_occur": {"self": [["self", "branch_op", "target_upper", "target_upper"], ["self", "branch_op", "target_lower", "None"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "_assert_task_ids_match_states", "State", "SUCCESS", "State", "SKIPPED", "State", "NONE"]], "target_upper": [["self", "branch_op", "target_upper", "target_upper"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_upper": []}, "q_name": "TestBranchDateTimeOperator.test_branch_datetime_operator_upper_comparison_outside_range", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check BranchDateTimeOperator branch operation", "long_descr": null, "ret": null}, "fn_lc": [[208, 4], [221, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_branch_datetime_operator_lower_comparison_outside_range", "params": {"self": "", "target_lower": ""}, "params_descr": {"self": "", "target_lower": ""}, "params_occur": {"self": [["self", "branch_op", "target_lower", "target_lower"], ["self", "branch_op", "target_upper", "None"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "_assert_task_ids_match_states", "State", "SUCCESS", "State", "SKIPPED", "State", "NONE"]], "target_lower": [["self", "branch_op", "target_lower", "target_lower"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_lower": [["int", 0.12303631639784424]]}, "q_name": "TestBranchDateTimeOperator.test_branch_datetime_operator_lower_comparison_outside_range", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if BranchDateTimeOperator uses task execution date", "long_descr": null, "ret": null}, "fn_lc": [[228, 4], [249, 9]], "fn_var_ln": {"dr": [[232, 8], [232, 15]], "in_between_date": [[230, 8], [230, 23]]}, "fn_var_occur": {"dr": [["self", "dr", "self", "dag", "create_dagrun", "run_id", "start_date", "in_between_date", "execution_date", "in_between_date", "state", "State", "RUNNING"]], "in_between_date": [["in_between_date", "timezone", "datetime"], ["self", "dr", "self", "dag", "create_dagrun", "run_id", "start_date", "in_between_date", "execution_date", "in_between_date", "state", "State", "RUNNING"], ["self", "branch_op", "run", "start_date", "in_between_date", "end_date", "in_between_date"]]}, "name": "test_branch_datetime_operator_use_task_logical_date", "params": {"self": "", "target_lower": "", "target_upper": ""}, "params_descr": {"self": "", "target_lower": "", "target_upper": ""}, "params_occur": {"self": [["self", "branch_op", "use_task_logical_date", "True"], ["self", "dr", "self", "dag", "create_dagrun", "run_id", "start_date", "in_between_date", "execution_date", "in_between_date", "state", "State", "RUNNING"], ["self", "branch_op", "target_lower", "target_lower"], ["self", "branch_op", "target_upper", "target_upper"], ["self", "branch_op", "run", "start_date", "in_between_date", "end_date", "in_between_date"], ["self", "_assert_task_ids_match_states", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]], "target_lower": [["self", "branch_op", "target_lower", "target_lower"]], "target_upper": [["self", "branch_op", "target_upper", "target_upper"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_lower": [["int", 0.20758247981830513], ["bool", 0.10335405611106681], ["tartare.core.models.DataSet", 0.07837328497669555]], "target_upper": [["int", 0.20758247981830513], ["bool", 0.10335405611106681], ["tartare.core.models.DataSet", 0.07837328497669555]]}, "q_name": "TestBranchDateTimeOperator.test_branch_datetime_operator_use_task_logical_date", "ret_exprs": [], "ret_type": "", "variables": {"dr": "", "in_between_date": ""}, "variables_p": {"dr": [["str", 0.26193619574129756], ["List[Tuple[Any, Any]]", 0.12282388436349216], ["datetime.timedelta", 0.10864397010232918], ["datetime.datetime", 0.10623436099266509], ["Tuple[int, int]", 0.09689981196366125], ["Type[Tuple[int, int]]", 0.0958508016728437], ["Dict[str, str]", 0.08781176995194855]], "in_between_date": [["datetime.date", 0.2673450794743211], ["datetime.timedelta", 0.17559292733668833], ["datetime.datetime.time", 0.11087872650971066], ["datetime.date.time.date", 0.10992639242240233], ["List[Union[Any, Any]]", 0.08839623474258575], ["Dict[datetime.date, Dict[str, Any]]", 0.08382006018351645], ["datetime.datetime", 0.07884636116767829]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[251, 4], [265, 58]], "fn_var_ln": {"warning_message": [[252, 8], [252, 23]]}, "fn_var_occur": {"warning_message": [["warning_message", "str", "warnings", "message"]]}, "name": "test_deprecation_warning", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["BranchDateTimeOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "target_upper", "timezone", "datetime", "target_lower", "timezone", "datetime", "use_task_execution_date", "True", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDateTimeOperator.test_deprecation_warning", "ret_exprs": [], "ret_type": "", "variables": {"warning_message": ""}, "variables_p": {"warning_message": [["float", 0.49999999992967786], ["Dict[str, Tuple[int, str]]", 0.49999999992967786], ["str", 8.79027325566253e-11], ["Counter[str]", 3.516109302265012e-11], ["bool", 1.758054651132506e-11]]}}], "name": "TestBranchDateTimeOperator", "q_name": "TestBranchDateTimeOperator", "variables": {"targets": ""}, "variables_p": {"targets": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "pytest", "time_machine", "airflow", "exceptions", "AirflowException", "airflow", "models", "DAG", "DagRun", "TaskInstance", "TI", "airflow", "operators", "datetime", "BranchDateTimeOperator", "airflow", "operators", "empty", "EmptyOperator", "airflow", "utils", "timezone", "airflow", "utils", "session", "create_session", "airflow", "utils", "state", "State"], "mod_var_ln": {"DEFAULT_DATE": [[33, 0], [33, 12]], "INTERVAL": [[34, 0], [34, 8]]}, "mod_var_occur": {"DEFAULT_DATE": [["self", "dag", "DAG", "default_args", "DEFAULT_DATE", "schedule", "INTERVAL"], ["self", "dr", "self", "dag", "create_dagrun", "run_id", "start_date", "DEFAULT_DATE", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["self", "branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"]], "INTERVAL": [["self", "dag", "DAG", "default_args", "DEFAULT_DATE", "schedule", "INTERVAL"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 39}, "session_id": "uRtHrNliUkNeENfd7pK5NXnSR4PLxHa2UBiX1eg3AWk", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "INTERVAL": ""}, "variables_p": {"DEFAULT_DATE": [["datetime.datetime", 0.38856524507304924], ["int", 0.20123623396583235], ["datetime.timezone", 0.19067606951700058], ["datetime.datetime.datetime", 0.1255454136418483], ["datetime.timedelta", 0.0939770378022694]], "INTERVAL": [["bool", 0.1112778246631051], ["Optional[int]", 0.10425459590324088], ["Optional[datetime.datetime]", 0.10422043349494478], ["recidiviz.calculator.pipeline.utils.incarceration_period_index.IncarcerationPeriodIndex", 0.09926085855519212], ["str", 0.09600074522287037], ["datetime.datetime", 0.09462196868171527]]}}}