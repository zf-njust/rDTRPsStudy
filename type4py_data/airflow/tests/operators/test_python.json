{"error": null, "response": {"classes": [{"cls_lc": [[63, 0], [146, 62]], "cls_var_ln": {"dag": [[70, 4], [70, 7]], "dag_id": [[67, 4], [67, 10]], "default_date": [[72, 4], [72, 16]], "ds_templated": [[71, 4], [71, 16]], "opcls": [[66, 4], [66, 9]], "run_id": [[69, 4], [69, 10]], "task_id": [[68, 4], [68, 11]]}, "cls_var_occur": {"dag": [], "dag_id": [], "default_date": [], "ds_templated": [], "opcls": [], "run_id": [], "task_id": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [85, 23]], "fn_var_ln": {"dag": [[82, 8], [82, 16]], "dag_id": [[76, 8], [76, 19]], "dag_maker": [[81, 8], [81, 22]], "ds_templated": [[79, 8], [79, 25]], "run_id": [[78, 8], [78, 19]], "task_id": [[77, 8], [77, 20]], "ti_maker": [[80, 8], [80, 21]]}, "fn_var_occur": {"dag": [["self", "dag", "self", "dag_maker", "self", "dag_id", "template_searchpath", "TEMPLATE_SEARCHPATH", "dag"]], "dag_id": [["self", "dag_id", "slugify", "request", "cls", "__name__"], ["self", "dag", "self", "dag_maker", "self", "dag_id", "template_searchpath", "TEMPLATE_SEARCHPATH", "dag"]], "dag_maker": [["self", "dag_maker", "dag_maker"], ["self", "dag", "self", "dag_maker", "self", "dag_id", "template_searchpath", "TEMPLATE_SEARCHPATH", "dag"]], "ds_templated": [["self", "ds_templated", "self", "default_date", "date", "isoformat"]], "run_id": [["self", "run_id", "slugify", "request", "node", "name", "max_length"]], "task_id": [["self", "task_id", "slugify", "request", "node", "name", "max_length"]], "ti_maker": [["self", "ti_maker", "create_task_instance_of_operator"]]}, "name": "base_tests_setup", "params": {"create_task_instance_of_operator": "", "dag_maker": "", "request": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "dag_maker": "", "request": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["self", "ti_maker", "create_task_instance_of_operator"]], "dag_maker": [["self", "dag_maker", "dag_maker"], ["self", "dag", "self", "dag_maker", "self", "dag_id", "template_searchpath", "TEMPLATE_SEARCHPATH", "dag"]], "request": [["self", "dag_id", "slugify", "request", "cls", "__name__"], ["self", "task_id", "slugify", "request", "node", "name", "max_length"], ["self", "run_id", "slugify", "request", "node", "name", "max_length"]], "self": [["self", "dag_id", "slugify", "request", "cls", "__name__"], ["self", "task_id", "slugify", "request", "node", "name", "max_length"], ["self", "run_id", "slugify", "request", "node", "name", "max_length"], ["self", "ds_templated", "self", "default_date", "date", "isoformat"], ["self", "ti_maker", "create_task_instance_of_operator"], ["self", "dag_maker", "dag_maker"], ["self", "dag", "self", "dag_maker", "self", "dag_id", "template_searchpath", "TEMPLATE_SEARCHPATH", "dag"]]}, "params_p": {"args": [], "create_task_instance_of_operator": [["str", 0.17975172233820794], ["asgard.models.accounAccount", 0.09674423680565247], ["raiden.utils.TokenNetworkID", 0.09094678969228318], ["zerver.models.UserProfile", 0.08927784861740296]], "dag_maker": [["bool", 0.1985808073515366], ["float", 0.09184726329092162], ["raiden.utils.BlockTimeout", 0.09184726329092162], ["users.models.JustfixUser", 0.0918389481567135], ["str", 0.08497500460606539]], "kwargs": [], "request": [["str", 0.09657633164820474]], "self": []}, "q_name": "BasePythonTest.base_tests_setup", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "dag_id": "", "dag_maker": "", "ds_templated": "", "run_id": "", "task_id": "", "ti_maker": ""}, "variables_p": {"dag": [["str", 0.792880590172569], ["bytes", 0.09513326232833062]], "dag_id": [["int", 0.3883892105972159], ["str", 0.18880056208976295]], "dag_maker": [["str", 0.20804944717707147], ["Optional[Match[str]]", 0.09407904579539185], ["Any[Any]", 0.09325582652825005], ["int", 0.08995581038955522], ["Tuple[Any, Any]", 0.08752409624169856]], "ds_templated": [["list", 0.2030844365477484], ["int", 0.19712787070606957], ["Dict[str, Any]", 0.11772164708008431], ["datetime.datetime", 0.11278947702443695], ["dict", 0.0900325634185321]], "run_id": [["List[Dict[str, Any]]", 0.16942689290453852], ["Optional[List[str]]", 0.07096268953228108]], "task_id": [["int", 0.6651076273971404], ["str", 0.08922035555241227]], "ti_maker": [["int", 0.8140833108622668], ["List[Dict[str, str]]", 0.08581134545693585]]}}, {"docstring": {"func": "Helper function that asserts `TaskInstances` of a given `task_id` are in a given state.", "long_descr": null, "ret": null}, "fn_lc": [[88, 4], [101, 43]], "fn_var_ln": {"asserts": [[90, 8], [90, 15]], "expected": [[93, 16], [93, 24]]}, "fn_var_occur": {"asserts": [["asserts", "append", "ti", "task_id", "expected_states", "keys"], ["asserts", "append", "ti", "task_id", "ti", "state", "expected"], ["pytest", "fail", "join", "asserts"]], "expected": [["expected", "expected_states", "ti", "task_id"], ["ti", "state", "expected"], ["asserts", "append", "ti", "task_id", "ti", "state", "expected"]]}, "name": "assert_expected_task_states", "params": {"dag_run": "airflow.models.DagRun", "expected_states": "builtins.dict"}, "params_descr": {"dag_run": "", "expected_states": ""}, "params_occur": {"dag_run": [["dag_run", "get_task_instances"]], "expected_states": [["expected", "expected_states", "ti", "task_id"], ["asserts", "append", "ti", "task_id", "expected_states", "keys"]]}, "params_p": {"args": [], "dag_run": [["Optional[str]", 0.29206085167374846], ["Optional[float]", 0.19406669747030578], ["accounts.models.KippoOrganization", 0.10819313413029134], ["dict", 0.09510589909252631]], "expected_states": [["List[str]", 0.19435742345957674], ["Callable[[], None]", 0.09508159098397644], ["raiden.utils.Dict[raiden.transfer.identifiers.QueueIdentifier, raiden.utils.List[raiden.messages.abstracMessage]]", 0.0948601710578598], ["int", 0.09453200219721138], ["Mapping[str, Any]", 0.09287592123408694]], "kwargs": [], "self": []}, "q_name": "BasePythonTest.assert_expected_task_states", "ret_exprs": [], "ret_type": "", "variables": {"asserts": "", "expected": ""}, "variables_p": {"asserts": [["list", 0.5921794180398838], ["Dict[str, str]", 0.09545459059013682], ["dict", 0.07290774982735634], ["apps.registrations.tests.factories.RegistrationFieldOptionFactory", 0.0714003924721945], ["bool", 0.07068355530086108]], "expected": [["Dict[str, Any]", 0.2158391654569981], ["Dict[str, int]", 0.10707399331787722], ["List[str]", 0.09583907648456322], ["Dict[str, str]", 0.08475699697311763], ["Dict[str, Union[int, str]]", 0.08115518089272702]]}}, {"docstring": {"func": "Default arguments for specific Operator.", "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [106, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "default_kwargs", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BasePythonTest.default_kwargs", "ret_exprs": ["return kwargs"], "ret_type": "", "ret_type_p": [["Dict[int, Dict[int, int]]", 0.19729855846749927], ["bool", 0.19391958965407094], ["dict", 0.10162241952916161], ["cmk.utils.type_defs.EventRule", 0.10053718777195808], ["Dict[str, str]", 0.09739332396080362]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[108, 4], [115, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_dag_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "create_dagrun", "state", "DagRunState", "RUNNING", "start_date", "self", "dag_maker", "start_date", "session", "self", "dag_maker", "session", "execution_date", "self", "default_date", "run_type", "DagRunType", "MANUAL"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BasePythonTest.create_dag_run", "ret_exprs": ["return self.dag.create_dagrun( state=DagRunState.RUNNING, start_date=self.dag_maker.start_date, session=self.dag_maker.session, execution_date=self.default_date, run_type=DagRunType.MANUAL,)"], "ret_type": "airflow.models.DagRun", "ret_type_p": [["cmk.utils.type_defs.UserId", 0.11783041012953803], ["bool", 0.09476596561663761], ["List[str]", 0.08928086809199484]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Create TaskInstance for class defined Operator.", "long_descr": null, "ret": null}, "fn_lc": [[117, 4], [126, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_ti", "params": {"fn": "", "kwargs": "", "self": ""}, "params_descr": {"fn": "", "kwargs": "", "self": ""}, "params_occur": {"fn": [["self", "ti_maker", "self", "opcls", "python_callable", "fn", "self", "default_kwargs", "kwargs", "dag_id", "self", "dag_id", "task_id", "self", "task_id", "execution_date", "self", "default_date"]], "kwargs": [["self", "ti_maker", "self", "opcls", "python_callable", "fn", "self", "default_kwargs", "kwargs", "dag_id", "self", "dag_id", "task_id", "self", "task_id", "execution_date", "self", "default_date"]], "self": [["self", "ti_maker", "self", "opcls", "python_callable", "fn", "self", "default_kwargs", "kwargs", "dag_id", "self", "dag_id", "task_id", "self", "task_id", "execution_date", "self", "default_date"]]}, "params_p": {"args": [], "fn": [["str", 0.10740802041928123], ["int", 0.09724598711386308]], "kwargs": [], "self": []}, "q_name": "BasePythonTest.create_ti", "ret_exprs": ["return self.ti_maker( self.opcls, python_callable=fn, **self.default_kwargs(**kwargs), dag_id=self.dag_id, task_id=self.task_id, execution_date=self.default_date,)"], "ret_type": "airflow.models.TaskInstance", "ret_type_p": [["bool", 0.16667289067883975], ["float", 0.11681029459072304], ["int", 0.08731047702997322], ["esm.models.service_type.ServiceType", 0.08455195489435838]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Run task by direct call ``run`` method.", "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [134, 19]], "fn_var_ln": {"task": [[131, 12], [131, 16]]}, "fn_var_occur": {"task": [["task", "self", "opcls", "task_id", "self", "task_id", "python_callable", "fn", "self", "default_kwargs", "kwargs"], ["task", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]]}, "name": "run_as_operator", "params": {"fn": "", "kwargs": "", "self": ""}, "params_descr": {"fn": "", "kwargs": "", "self": ""}, "params_occur": {"fn": [["task", "self", "opcls", "task_id", "self", "task_id", "python_callable", "fn", "self", "default_kwargs", "kwargs"]], "kwargs": [["task", "self", "opcls", "task_id", "self", "task_id", "python_callable", "fn", "self", "default_kwargs", "kwargs"]], "self": [["self", "dag"], ["task", "self", "opcls", "task_id", "self", "task_id", "python_callable", "fn", "self", "default_kwargs", "kwargs"], ["task", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]]}, "params_p": {"args": [], "fn": [["zerver.models.Stream", 0.2267852484604176], ["daylighdb.models.Profile", 0.11081504669874284], ["List[List[str]]", 0.09624177489466315], ["int", 0.07874163253078688]], "kwargs": [], "self": []}, "q_name": "BasePythonTest.run_as_operator", "ret_exprs": ["return task"], "ret_type": "", "ret_type_p": [["str", 0.2845643722910862], ["bytes", 0.12347571395174142], ["List[str]", 0.11411912283034445], ["excars.models.profiles.Profile", 0.11108313379783953], ["dict", 0.08741166130604905], ["deeplearning.ml4pl.models.classifier_base.ClassifierBase", 0.08549879333091237], ["viewer.models.Gallery", 0.08276406869418751]], "variables": {"task": ""}, "variables_p": {"task": [["dict", 0.18654716467479304], ["Dict[str, None]", 0.1233943767015171], ["Dict[str, List[Any]]", 0.09997435391118462], ["Dict[Any, List[Any]]", 0.0941152449098726], ["list", 0.09301980494680011], ["Tuple[Tuple[str, Any]]", 0.08984750314089612], ["Dict[str, str]", 0.0887710254271208]]}}, {"docstring": {"func": "Create TaskInstance and run it.", "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [142, 22]], "fn_var_ln": {"ti": [[138, 8], [138, 10]]}, "fn_var_occur": {"ti": [["ti", "self", "create_ti", "fn", "kwargs"], ["ti", "run"], ["ti", "task"]]}, "name": "run_as_task", "params": {"fn": "", "kwargs": "", "return_ti": "", "self": ""}, "params_descr": {"fn": "", "kwargs": "", "return_ti": "", "self": ""}, "params_occur": {"fn": [["ti", "self", "create_ti", "fn", "kwargs"]], "kwargs": [["ti", "self", "create_ti", "fn", "kwargs"]], "return_ti": [], "self": [["ti", "self", "create_ti", "fn", "kwargs"]]}, "params_p": {"args": [], "fn": [["zerver.models.UserProfile", 0.22049221376158615], ["str", 0.1873777489709551], ["dict", 0.1057744257476526], ["int", 0.10109768089091214], ["Optional[Dict]", 0.09918728599382454]], "kwargs": [], "return_ti": [["bool", 0.3070039758182426], ["dict", 0.21834121808508272], ["str", 0.15912371257729063], ["List[str]", 0.11443513192120185], ["Dict[str, Any]", 0.08183508481313319]], "self": []}, "q_name": "BasePythonTest.run_as_task", "ret_exprs": ["return ti", "return ti.task"], "ret_type": "", "ret_type_p": [["int", 0.10368926342011842], ["Dict[str, Any]", 0.10215581948821731], ["bytes", 0.10172848922673529], ["List[recidiviz.persistence.entity.state.entities.StateSupervisionPeriod]", 0.09707249336830684], ["List[str]", 0.09332598600518378]], "variables": {"ti": ""}, "variables_p": {"ti": [["List[Tuple[int, int, int, int, int, int]]", 0.20463889235242008], ["int", 0.20463889235242008], ["Dict[str, Any]", 0.10131582535623933], ["Dict[bytes, str]", 0.09804637773690864], ["Optional[int]", 0.09563718142710054]]}}, {"docstring": {"func": "Create TaskInstance and render templates without actual run.", "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [146, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "render_templates", "params": {"fn": "", "kwargs": "", "self": ""}, "params_descr": {"fn": "", "kwargs": "", "self": ""}, "params_occur": {"fn": [["self", "create_ti", "fn", "kwargs", "render_templates"]], "kwargs": [["self", "create_ti", "fn", "kwargs", "render_templates"]], "self": [["self", "create_ti", "fn", "kwargs", "render_templates"]]}, "params_p": {"args": [], "fn": [["str", 0.1129081656420263], ["List[Dict[str, str]]", 0.09986174441560307], ["List[Tuple[float, str]]", 0.09842970657049835], ["Optional[str]", 0.09743120833868299], ["List[str]", 0.09642139554807438], ["list", 0.09642139554807438], ["Iterable[float]", 0.09642139554807438]], "kwargs": [], "self": []}, "q_name": "BasePythonTest.render_templates", "ret_exprs": ["return self.create_ti(fn, **kwargs).render_templates()"], "ret_type": "", "ret_type_p": [], "variables": {}, "variables_p": {}}], "name": "BasePythonTest", "q_name": "BasePythonTest", "variables": {"dag": "airflow.models.DAG", "dag_id": "builtins.str", "default_date": "datetime.datetime", "ds_templated": "builtins.str", "opcls": "builtins.type[airflow.models.baseoperator.BaseOperator]", "run_id": "builtins.str", "task_id": "builtins.str"}, "variables_p": {"dag": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "default_date": [["str", 0.6363860493653496], ["List[str]", 0.09854130901534286], ["Dict[str, Callable[[Any], bool]]", 0.09209337908587], ["Optional[datetime.datetime]", 0.08610035725256096]], "ds_templated": [["int", 0.30000000000000004], ["float", 0.2], ["str", 0.2], ["List[str]", 0.1], ["dict", 0.1], ["datetime.date", 0.1]], "opcls": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "run_id": [["str", 0.4], ["int", 0.2]], "task_id": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["medtagger.types.TaskID", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}, {"cls_lc": [[149, 0], [296, 59]], "cls_var_ln": {"opcls": [[150, 4], [150, 9]]}, "cls_var_occur": {"opcls": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[153, 4], [154, 24]], "fn_var_ln": {"run": [[154, 8], [154, 16]]}, "fn_var_occur": {"run": [["self", "run", "False"]]}, "name": "setup_tests", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.setup_tests", "ret_exprs": [], "ret_type": "", "variables": {"run": ""}, "variables_p": {"run": [["Optional[BaseException]", 0.4269251077185957], ["str", 0.2794800387703506], ["int", 0.1593119418209196], ["bool", 0.1342829116901343]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[156, 4], [157, 23]], "fn_var_ln": {"run": [[157, 8], [157, 16]]}, "fn_var_occur": {"run": [["self", "run", "True"]]}, "name": "do_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.do_run", "ret_exprs": [], "ret_type": "", "variables": {"run": ""}, "variables_p": {"run": [["str", 0.594206786524272], ["Dict[str, str]", 0.11464689677170962], ["int", 0.10017078101225677], ["Dict[str, Dict[str, Any]]", 0.09829960735993003]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[159, 4], [160, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.is_run", "ret_exprs": ["return self.run"], "ret_type": "", "ret_type_p": [["bool", 0.788830081906342], ["list", 0.11001110169118897], ["str", 0.101158816402469]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Tests that the python callable is invoked on task run.", "long_descr": null, "ret": null}, "fn_lc": [[162, 4], [167, 28]], "fn_var_ln": {"ti": [[164, 8], [164, 10]]}, "fn_var_occur": {"ti": [["ti", "self", "create_ti", "self", "do_run"], ["ti", "run"]]}, "name": "test_python_operator_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ti", "self", "create_ti", "self", "do_run"], ["self", "is_run"], ["self", "is_run"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_python_operator_run", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["int", 0.698482823683429], ["List[int]", 0.10731481101210372], ["dict", 0.1042380778440471]]}}, {"docstring": {"func": "Tests that PythonOperator will only instantiate if the python_callable argument is callable.", "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [173, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_python_operator_python_callable_is_callable", "params": {"not_callable": "", "self": ""}, "params_descr": {"not_callable": "", "self": ""}, "params_occur": {"not_callable": [["PythonOperator", "python_callable", "not_callable", "task_id"]], "self": []}, "params_p": {"args": [], "kwargs": [], "not_callable": [], "self": []}, "q_name": "TestPythonOperator.test_python_operator_python_callable_is_callable", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test PythonOperator op_args are templatized", "long_descr": null, "ret": null}, "fn_lc": [[175, 4], [191, 75]], "fn_var_ln": {"Named": [[179, 8], [179, 13]], "named_tuple": [[180, 8], [180, 19]], "rendered_op_args": [[186, 8], [186, 24]], "task": [[182, 8], [182, 12]]}, "fn_var_occur": {"Named": [["Named", "namedtuple"], ["named_tuple", "Named"], ["rendered_op_args", "Named", "self", "ds_templated"]], "named_tuple": [["named_tuple", "Named"], ["task", "self", "render_templates", "op_args", "date", "named_tuple"]], "rendered_op_args": [["rendered_op_args", "task", "op_args"], ["len", "rendered_op_args"], ["rendered_op_args", "date"], ["rendered_op_args", "self", "dag_id", "self", "ds_templated"], ["rendered_op_args", "Named", "self", "ds_templated"]], "task": [["task", "self", "render_templates", "op_args", "date", "named_tuple"], ["rendered_op_args", "task", "op_args"]]}, "name": "test_python_callable_arguments_are_templatized", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task", "self", "render_templates", "op_args", "date", "named_tuple"], ["rendered_op_args", "self", "dag_id", "self", "ds_templated"], ["rendered_op_args", "Named", "self", "ds_templated"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_python_callable_arguments_are_templatized", "ret_exprs": [], "ret_type": "", "variables": {"Named": "", "named_tuple": "", "rendered_op_args": "", "task": ""}, "variables_p": {"Named": [["str", 0.6899394132388152], ["Dict[str, str]", 0.09607706107583128], ["Set[str]", 0.09157104914541013]], "named_tuple": [["str", 0.30090574138497217], ["frozenset[Union[Any, Any]]", 0.24299122213392962], ["set", 0.10990674418955358], ["Optional[str]", 0.09920248766378002]], "rendered_op_args": [["list", 0.3975109030995082], ["List[str]", 0.20383372502916497], ["raiden.utils.List[EventID]", 0.10738923027351309], ["lists.models.Item", 0.09857944819065675], ["List[python.mxnendarray.ndarray.NDArray]", 0.0973757705187785], ["List[Tuple[Any, str]]", 0.0953109228883784]], "task": [["str", 0.39031211254091003], ["Iterator[str]", 0.1256642908484571], ["Dict[str, str]", 0.10597051735211285], ["OrderedDict[str, str]", 0.09986080532608767], ["Dict[int, None]", 0.09475950430005553], ["Dict[str, Any]", 0.09407725538642163], ["List[str]", 0.08935551424595539]]}}, {"docstring": {"func": "Test PythonOperator op_kwargs are templatized", "long_descr": null, "ret": null}, "fn_lc": [[193, 4], [206, 107]], "fn_var_ln": {"rendered_op_kwargs": [[203, 8], [203, 26]], "task": [[195, 8], [195, 12]]}, "fn_var_occur": {"rendered_op_kwargs": [["rendered_op_kwargs", "task", "op_kwargs"], ["rendered_op_kwargs", "date"], ["rendered_op_kwargs", "self", "dag_id", "self", "ds_templated"]], "task": [["task", "self", "render_templates", "op_kwargs", "date"], ["rendered_op_kwargs", "task", "op_kwargs"]]}, "name": "test_python_callable_keyword_arguments_are_templatized", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task", "self", "render_templates", "op_kwargs", "date"], ["rendered_op_kwargs", "self", "dag_id", "self", "ds_templated"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_python_callable_keyword_arguments_are_templatized", "ret_exprs": [], "ret_type": "", "variables": {"rendered_op_kwargs": "", "task": ""}, "variables_p": {"rendered_op_kwargs": [["browse.services.database.models.MemberInstitutionIP", 0.1165076401203562], ["multinedb.models.table.Table", 0.11263555460513351], ["src.pip_shims.models.PipVersion", 0.10926212943395834], ["int", 0.09574730867298675], ["passzero.models.user.User", 0.09121074485745301]], "task": [["Dict[str, Union[float, str]]", 0.18754489182744882], ["Dict[str, Any]", 0.15434690734479153], ["dict", 0.14108907262155804], ["list", 0.08613814489165826], ["Type[bootcamp.qa.models.Question]", 0.08378930010534043], ["str", 0.07974225984745643]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[209, 8], [210, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "not_callable", "params": {"x": ""}, "params_descr": {"x": ""}, "params_occur": {"x": []}, "params_p": {"args": [], "kwargs": [], "self": [], "x": [["bool", 0.09999999999999999], ["float", 0.09999999999999999], ["Iterable[Iterable[float]]", 0.09999999999999999], ["list", 0.09999999999999999], ["str", 0.09999999999999999], ["T", 0.09999999999999999], ["bytes", 0.09999999999999999]]}, "q_name": "TestPythonOperator.test_python_operator_shallow_copy_attr.<locals>.not_callable", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[208, 4], [221, 80]], "fn_var_ln": {"new_task": [[217, 8], [217, 16]], "original_task": [[212, 8], [212, 21]]}, "fn_var_occur": {"new_task": [["new_task", "copy", "deepcopy", "original_task"], ["id", "original_task", "op_kwargs", "id", "new_task", "op_kwargs"], ["id", "original_task", "python_callable", "id", "new_task", "python_callable"]], "original_task": [["original_task", "PythonOperator", "python_callable", "not_callable", "op_kwargs", "task_id", "self", "task_id"], ["new_task", "copy", "deepcopy", "original_task"], ["id", "original_task", "op_kwargs", "id", "new_task", "op_kwargs"], ["id", "original_task", "python_callable", "id", "new_task", "python_callable"]]}, "name": "test_python_operator_shallow_copy_attr", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["original_task", "PythonOperator", "python_callable", "not_callable", "op_kwargs", "task_id", "self", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_python_operator_shallow_copy_attr", "ret_exprs": [], "ret_type": "", "variables": {"new_task": "", "original_task": ""}, "variables_p": {"new_task": [["Optional[Dict[str, Any]]", 0.08470036705281779], ["List[Union[Any, Any, Any, Any]]", 0.08242751622692907], ["Dict[str, Any]", 0.07922557625827173], ["dict", 0.07798908080077395]], "original_task": [["list", 0.19758508096771027], ["dict", 0.0944402914156284], ["List[str]", 0.09344744492002127], ["bytes", 0.09138374224803537], ["raiden.transfer.state.HopState", 0.08776505082216687]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[225, 8], [227, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "func", "params": {"dag": ""}, "params_descr": {"dag": ""}, "params_occur": {"dag": [["RuntimeError", "dag"]]}, "params_p": {"args": [], "dag": [["str", 0.6044040833959865], ["int", 0.21355001386689076], ["float", 0.09102295136856133], ["Union[float, int]", 0.09102295136856133]], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_conflicting_kwargs.<locals>.func", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[223, 4], [232, 20]], "fn_var_ln": {"error_message": [[230, 8], [230, 21]], "ti": [[229, 8], [229, 10]]}, "fn_var_occur": {"error_message": [["error_message", "re", "escape"], ["pytest", "raises", "ValueError", "match", "error_message"]], "ti": [["ti", "self", "create_ti", "func", "op_args"], ["ti", "run"]]}, "name": "test_conflicting_kwargs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ti", "self", "create_ti", "func", "op_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_conflicting_kwargs", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "ti": ""}, "variables_p": {"error_message": [["str", 0.7317063424677097], ["Pattern[str]", 0.1565906719692766]], "ti": [["Optional[float]", 0.09904166932018416], ["Optional[str]", 0.09499930045925022]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[237, 8], [239, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "func", "params": {"custom": "", "dag": ""}, "params_descr": {"custom": "", "dag": ""}, "params_occur": {"custom": [], "dag": [["dag", "None"]]}, "params_p": {"args": [], "custom": [["Optional[str]", 0.16666666652422402], ["Optional[Callable]", 0.16666666652422402], ["Dict[str, Any]", 2.136639365985475e-10], ["List[str]", 2.136639365985475e-10]], "dag": [["Optional[int]", 0.18402449522241304], ["T", 0.16163744148447295], ["List[str]", 0.1022645776258748], ["Optional[List[Callable]]", 0.09201224761120652]], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_provide_context_does_not_fail.<locals>.func", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Ensures that provide_context doesn't break dags in 2.0.", "long_descr": null, "ret": null}, "fn_lc": [[234, 4], [242, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_provide_context_does_not_fail", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "func", "op_kwargs", "provide_context", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_provide_context_does_not_fail", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[245, 8], [247, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "func", "params": {"custom": "", "dag": ""}, "params_descr": {"custom": "", "dag": ""}, "params_occur": {"custom": [], "dag": [["dag", "None"]]}, "params_p": {"args": [], "custom": [["Optional[str]", 0.16666666652422402], ["Optional[Callable]", 0.16666666652422402], ["Dict[str, Any]", 2.136639365985475e-10], ["List[str]", 2.136639365985475e-10]], "dag": [["Optional[int]", 0.18402449522241304], ["T", 0.16163744148447295], ["List[str]", 0.1022645776258748], ["Optional[List[Callable]]", 0.09201224761120652]], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_context_with_conflicting_op_args.<locals>.func", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[244, 4], [249, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_context_with_conflicting_op_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "func", "op_kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_context_with_conflicting_op_args", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 8], [254, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "func", "params": {"context": ""}, "params_descr": {"context": ""}, "params_occur": {"context": [["len", "context"]]}, "params_p": {"args": [], "context": [["Tuple[str, int]", 0.9999999928421239], ["Optional[str]", 6.727940813204071e-10], ["str", 6.605298356651791e-10], ["Tuple[int, int]", 6.605298356651791e-10], ["int", 6.605298356651791e-10]], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_context_with_kwargs.<locals>.func", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[251, 4], [256, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_context_with_kwargs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "func", "op_kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_context_with_kwargs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 8], [270, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "func", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_return_value_log.<locals>.func", "ret_exprs": ["return \"test_return_value\""], "ret_type": "", "ret_type_p": [["int", 0.18632261913182085], ["Union[server.models.Bike, int]", 0.14937861836420294], ["zerver.models.Realm", 0.09821819016636724], ["bool", 0.09272616598444075], ["str", 0.08949094850077263], ["Optional[List[Any]]", 0.08692687622888907]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[266, 4], [282, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_return_value_log", "params": {"caplog": "", "self": "", "should_shown": "", "show_return_value_in_logs": ""}, "params_descr": {"caplog": "", "self": "", "should_shown": "", "show_return_value_in_logs": ""}, "params_occur": {"caplog": [["caplog", "messages"], ["caplog", "messages"], ["caplog", "messages"], ["caplog", "messages"]], "self": [["self", "run_as_task", "func"], ["self", "run_as_task", "func", "show_return_value_in_logs", "show_return_value_in_logs"]], "should_shown": [], "show_return_value_in_logs": [["show_return_value_in_logs", "NOTSET"], ["self", "run_as_task", "func", "show_return_value_in_logs", "show_return_value_in_logs"]]}, "params_p": {"args": [], "caplog": [["core.models.MyUser", 0.09903236095899509]], "kwargs": [], "self": [], "should_shown": [["Callable", 0.45375926256509436], ["Callable[[], None]", 0.09137444173640981], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.06084850399826139]], "show_return_value_in_logs": [["Callable", 0.8957857445815035], ["Callable[[int], Tuple]", 0.10421425541849645]]}, "q_name": "TestPythonOperator.test_return_value_log", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[285, 8], [286, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "func", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_python_operator_templates_exts.<locals>.func", "ret_exprs": ["return \"test_return_value\""], "ret_type": "", "ret_type_p": [["int", 0.18632261913182085], ["Union[server.models.Bike, int]", 0.14937861836420294], ["zerver.models.Realm", 0.09821819016636724], ["bool", 0.09272616598444075], ["str", 0.08949094850077263], ["Optional[List[Any]]", 0.08692687622888907]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[284, 4], [296, 59]], "fn_var_ln": {"python_operator": [[288, 8], [288, 23]]}, "fn_var_occur": {"python_operator": [["python_operator", "PythonOperator", "task_id", "python_callable", "func", "dag", "self", "dag", "show_return_value_in_logs", "False", "templates_exts"], ["python_operator", "template_ext"]]}, "name": "test_python_operator_templates_exts", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["python_operator", "PythonOperator", "task_id", "python_callable", "func", "dag", "self", "dag", "show_return_value_in_logs", "False", "templates_exts"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonOperator.test_python_operator_templates_exts", "ret_exprs": [], "ret_type": "", "variables": {"python_operator": ""}, "variables_p": {"python_operator": [["str", 0.2966957141918422], ["Dict[Any, str]", 0.08865107441958327], ["int", 0.08293415113834042]]}}], "name": "TestPythonOperator", "q_name": "TestPythonOperator", "variables": {"opcls": ""}, "variables_p": {"opcls": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[299, 0], [434, 83]], "cls_var_ln": {"opcls": [[300, 4], [300, 9]]}, "cls_var_occur": {"opcls": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[303, 4], [305, 57]], "fn_var_ln": {"branch_1": [[304, 8], [304, 21]], "branch_2": [[305, 8], [305, 21]]}, "fn_var_occur": {"branch_1": [["self", "branch_1", "EmptyOperator", "task_id"]], "branch_2": [["self", "branch_2", "EmptyOperator", "task_id"]]}, "name": "setup_tests", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "branch_1", "EmptyOperator", "task_id"], ["self", "branch_2", "EmptyOperator", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.setup_tests", "ret_exprs": [], "ret_type": "", "variables": {"branch_1": "", "branch_2": ""}, "variables_p": {"branch_1": [["int", 0.47685263533994665], ["str", 0.25452240048021246], ["Dict[Any, str]", 0.08595983263043762], ["Pattern[str]", 0.07754567228944026]], "branch_2": [["int", 0.47685263533994665], ["str", 0.25452240048021246], ["Dict[Any, str]", 0.08595983263043762], ["Pattern[str]", 0.07754567228944026]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[307, 4], [316, 9]], "fn_var_ln": {"branch_op": [[309, 12], [309, 21]], "dr": [[312, 8], [312, 10]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]], "dr": [["dr", "self", "create_dag_run"], ["self", "assert_expected_task_states", "dr", "self", "task_id", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]]}, "name": "test_with_dag_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["dr", "self", "create_dag_run"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "assert_expected_task_states", "dr", "self", "task_id", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_with_dag_run", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "dr": ""}, "variables_p": {"branch_op": [["int", 0.18634373085796832], ["str", 0.1760421216163402], ["Tuple[float]", 0.11576490757477424], ["list", 0.10227008094397166], ["Set[int]", 0.10017309768442643], ["Dict[int, List[Any]]", 0.09932347411061504]], "dr": [["list", 0.23922538854164915], ["float", 0.09466353536002968], ["Any[Any]", 0.0931728045157438], ["alerta.models.alerAlert", 0.09050195739920919]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[318, 4], [328, 9]], "fn_var_ln": {"branch_op": [[320, 12], [320, 21]], "dr": [[324, 8], [324, 10]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["branch_op", "self", "branch_2"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]], "dr": [["dr", "self", "create_dag_run"], ["self", "assert_expected_task_states", "dr", "self", "task_id", "State", "SUCCESS", "State", "NONE", "State", "NONE"]]}, "name": "test_with_skip_in_branch_downstream_dependencies", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["branch_op", "self", "branch_2"], ["dr", "self", "create_dag_run"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "assert_expected_task_states", "dr", "self", "task_id", "State", "SUCCESS", "State", "NONE", "State", "NONE"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_with_skip_in_branch_downstream_dependencies", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "dr": ""}, "variables_p": {"branch_op": [["int", 0.18713624855673605], ["str", 0.1813080000344597], ["Tuple[float]", 0.12722222802611097], ["list", 0.10942142714725195], ["Pattern[Any]", 0.08740873152821232], ["Set[int]", 0.0864348511439756]], "dr": [["list", 0.20274139348573508], ["dict", 0.19147959232169814], ["List[int]", 0.18654214679955722], ["int", 0.09327107339977861]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[330, 4], [340, 9]], "fn_var_ln": {"branch_op": [[332, 12], [332, 21]], "dr": [[336, 8], [336, 10]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["branch_op", "self", "branch_2"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]], "dr": [["dr", "self", "create_dag_run"], ["self", "assert_expected_task_states", "dr", "self", "task_id", "State", "SUCCESS", "State", "SKIPPED", "State", "NONE"]]}, "name": "test_with_skip_in_branch_downstream_dependencies2", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["branch_op", "self", "branch_2"], ["dr", "self", "create_dag_run"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "assert_expected_task_states", "dr", "self", "task_id", "State", "SUCCESS", "State", "SKIPPED", "State", "NONE"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_with_skip_in_branch_downstream_dependencies2", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "dr": ""}, "variables_p": {"branch_op": [["int", 0.18713624855673605], ["str", 0.1813080000344597], ["Tuple[float]", 0.12722222802611097], ["list", 0.10942142714725195], ["Pattern[Any]", 0.08740873152821232], ["Set[int]", 0.0864348511439756]], "dr": [["float", 0.19798789120727217], ["int", 0.18834691882078874], ["list", 0.1419943248252224], ["Any[Any]", 0.09566800844434258], ["datetime.datetime.timedelta", 0.09111259876377828]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[342, 4], [354, 55]], "fn_var_ln": {"branch_op": [[344, 12], [344, 21]], "dr": [[347, 8], [347, 10]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]], "dr": [["dr", "self", "create_dag_run"], ["dr", "get_task_instances"]]}, "name": "test_xcom_push", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "self", "branch_1", "self", "branch_2"], ["dr", "self", "create_dag_run"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["ti", "task_id", "self", "task_id"], ["ti", "xcom_pull", "task_ids", "self", "task_id"], ["pytest", "fail", "self", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_xcom_push", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "dr": ""}, "variables_p": {"branch_op": [["int", 0.18634373085796832], ["str", 0.1760421216163402], ["Tuple[float]", 0.11576490757477424], ["list", 0.10227008094397166], ["Set[int]", 0.10017309768442643], ["Dict[int, List[Any]]", 0.09932347411061504]], "dr": [["str", 0.3014642244009835], ["int", 0.16847435596388668], ["List[str]", 0.16213567186323283], ["List[dict]", 0.13160316890249518], ["raiden.utils.PaymentID", 0.0779171628060938]]}}, {"docstring": {"func": "After a downstream task is skipped by BranchPythonOperator, clearing the skipped task", "long_descr": "should not cause it to be executed.", "ret": null}, "fn_lc": [[356, 4], [390, 61]], "fn_var_ln": {"branch_op": [[362, 12], [362, 21]], "branches": [[363, 12], [363, 20]], "children_tis": [[381, 8], [381, 20]], "dr": [[366, 8], [366, 10]], "expected_states": [[371, 8], [371, 23]], "tis": [[380, 8], [380, 11]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branch_op", "branches"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["children_tis", "ti", "ti", "tis", "ti", "task_id", "branch_op", "get_direct_relative_ids"], ["clear_task_instances", "children_tis", "session", "session", "dag", "branch_op", "dag"]], "branches": [["branches", "self", "branch_1", "self", "branch_2"], ["branch_op", "branches"]], "children_tis": [["children_tis", "ti", "ti", "tis", "ti", "task_id", "branch_op", "get_direct_relative_ids"], ["clear_task_instances", "children_tis", "session", "session", "dag", "branch_op", "dag"]], "dr": [["dr", "self", "create_dag_run"], ["self", "assert_expected_task_states", "dr", "expected_states"], ["tis", "dr", "get_task_instances"], ["self", "assert_expected_task_states", "dr", "expected_states"]], "expected_states": [["expected_states", "self", "task_id", "State", "SUCCESS", "State", "SUCCESS", "State", "SKIPPED"], ["self", "assert_expected_task_states", "dr", "expected_states"], ["self", "assert_expected_task_states", "dr", "expected_states"]], "tis": [["tis", "dr", "get_task_instances"], ["children_tis", "ti", "ti", "tis", "ti", "task_id", "branch_op", "get_direct_relative_ids"]]}, "name": "test_clear_skipped_downstream_task", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["branch_op", "BranchPythonOperator", "task_id", "self", "task_id", "python_callable"], ["branches", "self", "branch_1", "self", "branch_2"], ["dr", "self", "create_dag_run"], ["branch_op", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["task", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["expected_states", "self", "task_id", "State", "SUCCESS", "State", "SUCCESS", "State", "SKIPPED"], ["self", "assert_expected_task_states", "dr", "expected_states"], ["task", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "assert_expected_task_states", "dr", "expected_states"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_clear_skipped_downstream_task", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "branches": "", "children_tis": "", "dr": "", "expected_states": "", "tis": ""}, "variables_p": {"branch_op": [["list", 0.12882614660501157], ["Dict[str, Dict[str, Any]]", 0.10161607250642825], ["int", 0.09758156296544344], ["str", 0.08757680343486247], ["datetime.datetime", 0.08174469858879385]], "branches": [["str", 0.4878772288762366], ["Final", 0.13396703589386108], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.10237014521348824], ["dict", 0.09781910263578775], ["Optional[str]", 0.08953304339821634], ["Tuple[Literal, Literal, int]", 0.08843344398240997]], "children_tis": [["tartare.core.models.Job", 0.19981877915855684], ["tartare.core.models.Contributor", 0.09676562686144814], ["list", 0.09132944280571481], ["zerver.models.Realm", 0.08988296813474991]], "dr": [["int", 0.3260046340610798], ["Generator[Any, Any, Any]", 0.11170153467053384], ["list", 0.1012267378664096], ["Any[Any]", 0.0982378800511164], ["raiden.transfer.state.PendingLocksState", 0.08922862277307504], ["staticmethod", 0.08553354169248735]], "expected_states": [["dict", 0.2873576170754873], ["list", 0.12177559113918289], ["utils.tree.Node[Variable[utils.tree.T]]", 0.10231408107144686]], "tis": [["str", 0.2845325989880034], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.0938077593746827], ["int", 0.09168452395471341], ["Optional[str]", 0.09078521724486417], ["Dict[str, str]", 0.08737257518182943]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[392, 4], [395, 20]], "fn_var_ln": {"ti": [[393, 8], [393, 10]]}, "fn_var_occur": {"ti": [["ti", "self", "create_ti"], ["ti", "run"]]}, "name": "test_raise_exception_on_no_accepted_type_return", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ti", "self", "create_ti"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_raise_exception_on_no_accepted_type_return", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["int", 0.4435509385535129], ["bytes", 0.1946403698809801], ["Dict[str, Dict[str, str]]", 0.07810012954607229], ["dict", 0.07788378560309975]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[397, 4], [400, 20]], "fn_var_ln": {"ti": [[398, 8], [398, 10]]}, "fn_var_occur": {"ti": [["ti", "self", "create_ti"], ["ti", "run"]]}, "name": "test_raise_exception_on_invalid_task_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ti", "self", "create_ti"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_raise_exception_on_invalid_task_id", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["int", 0.4435509385535129], ["bytes", 0.1946403698809801], ["Dict[str, Dict[str, str]]", 0.07810012954607229], ["dict", 0.07788378560309975]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[430, 8], [432, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_state", "params": {"ti": ""}, "params_descr": {"ti": ""}, "params_occur": {"ti": [["tis", "ti", "task_id", "ti", "ti", "dr", "task_instances"], ["ti", "refresh_from_db"], ["ti", "state"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "ti": [["Dict[str, Any]", 0.47298246438860636], ["dict", 0.0987424200520668], ["str", 0.08834127852502513]]}, "q_name": "TestBranchOperator.test_empty_branch.<locals>.get_state", "ret_exprs": ["return ti.state"], "ret_type": "", "ret_type_p": [["str", 0.20755977350362215], ["bool", 0.10730373013469748], ["int", 0.10073681326947993], ["zerver.models.Realm", 0.09736483664486772]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Tests that BranchPythonOperator handles empty branches properly.", "long_descr": null, "ret": null}, "fn_lc": [[409, 4], [434, 83]], "fn_var_ln": {"branch": [[414, 12], [414, 18]], "dr": [[421, 8], [421, 10]], "join": [[416, 12], [416, 16]], "task1": [[415, 12], [415, 17]], "task_ids": [[422, 8], [422, 16]], "task_instance": [[426, 12], [426, 25]], "tis": [[423, 8], [423, 11]]}, "fn_var_occur": {"branch": [], "dr": [], "join": [], "task1": [], "task_ids": [["get_state", "tis", "task_id", "task_id", "task_ids", "expected_states"]], "task_instance": [], "tis": [["get_state", "tis", "task_id", "task_id", "task_ids", "expected_states"]]}, "name": "test_empty_branch", "params": {"choice": "", "expected_states": "", "self": ""}, "params_descr": {"choice": "", "expected_states": "", "self": ""}, "params_occur": {"choice": [], "expected_states": [["get_state", "tis", "task_id", "task_id", "task_ids", "expected_states"]], "self": []}, "params_p": {"args": [], "choice": [["str", 0.2754714725652707], ["raiden.utils.List[raiden.utils.Address]", 0.17831249264043414], ["Sequence[Hashable]", 0.147583957480012], ["List[Tuple[int, int]]", 0.147583957480012], ["bool", 0.07273562719383692]], "expected_states": [["int", 0.3284611179816155], ["Optional[Callable[..., Any]]", 0.09426432246454267], ["Optional[bool]", 0.08912829055642386], ["Optional[str]", 0.0810953281574475]], "kwargs": [], "self": []}, "q_name": "TestBranchOperator.test_empty_branch", "ret_exprs": [], "ret_type": "", "variables": {"branch": "", "dr": "", "join": "", "task1": "", "task_ids": "", "task_instance": "", "tis": ""}, "variables_p": {"branch": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dr": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "join": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "task1": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "task_ids": [["str", 0.7348111528543987], ["list", 0.15987288372564804], ["List[str]", 0.10531596341995328]], "task_instance": [["str", 0.19999999999999998], ["annofabapi.models.TaskPhase", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[src.app.models.TaskDevice]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "tis": [["int", 0.4045084893729709], ["List[str]", 0.1422542888001288], ["Pattern[str]", 0.11154055376097967], ["str", 0.11139928722822263]]}}], "name": "TestBranchOperator", "q_name": "TestBranchOperator", "variables": {"opcls": ""}, "variables_p": {"opcls": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[437, 0], [667, 46]], "cls_var_ln": {"all_downstream_skipped_states": [[446, 4], [446, 33]], "all_success_states": [[451, 4], [451, 22]], "opcls": [[438, 4], [438, 9]]}, "cls_var_occur": {"all_downstream_skipped_states": [], "all_success_states": [], "opcls": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[441, 4], [444, 47]], "fn_var_ln": {"op1": [[443, 8], [443, 16]], "op2": [[444, 8], [444, 16]], "task_id": [[442, 8], [442, 20]]}, "fn_var_occur": {"op1": [["self", "op1", "EmptyOperator", "task_id"]], "op2": [["self", "op2", "EmptyOperator", "task_id"]], "task_id": [["self", "task_id"], ["self", "op1", "EmptyOperator", "task_id"], ["self", "op2", "EmptyOperator", "task_id"]]}, "name": "setup_tests", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "task_id"], ["self", "op1", "EmptyOperator", "task_id"], ["self", "op2", "EmptyOperator", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShortCircuitOperator.setup_tests", "ret_exprs": [], "ret_type": "", "variables": {"op1": "", "op2": "", "task_id": ""}, "variables_p": {"op1": [["int", 0.8006625308605869], ["dict", 0.10020519554917286]], "op2": [["int", 0.8006625308605869], ["dict", 0.10020519554917286]], "task_id": [["int", 0.7138116944876545], ["list", 0.09617991287415448], ["tuple", 0.09503373965776324], ["str", 0.09497465298042766]]}}, {"docstring": {"func": "Checking the behavior of the ShortCircuitOperator in several scenarios enabling/disabling the skipping", "long_descr": "of downstream tasks, both short-circuiting modes, and various trigger rules of downstream tasks.", "ret": null}, "fn_lc": [[544, 4], [569, 66]], "fn_var_ln": {"dr": [[560, 8], [560, 10]], "short_circuit": [[552, 12], [552, 25]]}, "fn_var_occur": {"dr": [["dr", "self", "create_dag_run"], ["self", "assert_expected_task_states", "dr", "expected_task_states"]], "short_circuit": [["short_circuit", "ShortCircuitOperator", "task_id", "python_callable", "callable_return", "ignore_downstream_trigger_rules", "test_ignore_downstream_trigger_rules"], ["short_circuit", "self", "op1", "self", "op2"], ["short_circuit", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["short_circuit", "ignore_downstream_trigger_rules", "test_ignore_downstream_trigger_rules"], ["short_circuit", "trigger_rule", "TriggerRule", "ALL_SUCCESS"]]}, "name": "test_short_circuiting", "params": {"callable_return": "", "expected_task_states": "", "self": "", "test_ignore_downstream_trigger_rules": "", "test_trigger_rule": ""}, "params_descr": {"callable_return": "", "expected_task_states": "", "self": "", "test_ignore_downstream_trigger_rules": "", "test_trigger_rule": ""}, "params_occur": {"callable_return": [["short_circuit", "ShortCircuitOperator", "task_id", "python_callable", "callable_return", "ignore_downstream_trigger_rules", "test_ignore_downstream_trigger_rules"]], "expected_task_states": [["self", "assert_expected_task_states", "dr", "expected_task_states"]], "self": [["self", "dag"], ["short_circuit", "self", "op1", "self", "op2"], ["self", "op2", "trigger_rule", "test_trigger_rule"], ["dr", "self", "create_dag_run"], ["short_circuit", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "op1", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "op2", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "op1", "trigger_rule", "TriggerRule", "ALL_SUCCESS"], ["self", "op2", "trigger_rule", "test_trigger_rule"], ["self", "assert_expected_task_states", "dr", "expected_task_states"]], "test_ignore_downstream_trigger_rules": [["short_circuit", "ShortCircuitOperator", "task_id", "python_callable", "callable_return", "ignore_downstream_trigger_rules", "test_ignore_downstream_trigger_rules"], ["short_circuit", "ignore_downstream_trigger_rules", "test_ignore_downstream_trigger_rules"]], "test_trigger_rule": [["self", "op2", "trigger_rule", "test_trigger_rule"], ["self", "op2", "trigger_rule", "test_trigger_rule"]]}, "params_p": {"args": [], "callable_return": [["int", 0.45625329968326844], ["raiden.utils.TokenAmount", 0.17792587693892936], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.09255610238509537]], "expected_task_states": [["int", 0.38482630971729115]], "kwargs": [], "self": [], "test_ignore_downstream_trigger_rules": [["int", 0.45625329968326844], ["raiden.utils.TokenAmount", 0.17792587693892936], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.09255610238509537]], "test_trigger_rule": [["List[str]", 0.5], ["str", 0.5]]}, "q_name": "TestShortCircuitOperator.test_short_circuiting", "ret_exprs": [], "ret_type": "", "variables": {"dr": "", "short_circuit": ""}, "variables_p": {"dr": [["int", 0.1792227156946623], ["Any[Any]", 0.14577328459515326], ["float", 0.10471102365558836], ["Tuple[Any, Any, Any]", 0.09540453649219567], ["dict", 0.08631194915541131]], "short_circuit": [["str", 0.27660237762467393], ["int", 0.2509456235576627], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.14021745636898234], ["Optional[excars.models.profiles.Profile]", 0.13268248160931595], ["decksite.data.models.person.Person", 0.09511209886349482]]}}, {"docstring": {"func": "After a downstream task is skipped by ShortCircuitOperator, clearing the skipped task", "long_descr": "should not cause it to be executed.", "ret": null}, "fn_lc": [[571, 4], [603, 61]], "fn_var_ln": {"dr": [[579, 8], [579, 10]], "expected_states": [[589, 8], [589, 23]], "short_circuit": [[577, 12], [577, 25]], "tis": [[597, 8], [597, 11]]}, "fn_var_occur": {"dr": [["dr", "self", "create_dag_run"], ["self", "assert_expected_task_states", "dr", "expected_states"], ["tis", "dr", "get_task_instances"], ["self", "assert_expected_task_states", "dr", "expected_states"]], "expected_states": [["expected_states", "State", "SUCCESS", "State", "SKIPPED", "State", "SKIPPED"], ["self", "assert_expected_task_states", "dr", "expected_states"], ["self", "assert_expected_task_states", "dr", "expected_states"]], "short_circuit": [["short_circuit", "ShortCircuitOperator", "task_id", "python_callable", "False"], ["short_circuit", "self", "op1", "self", "op2"], ["short_circuit", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["short_circuit", "ignore_downstream_trigger_rules"], ["short_circuit", "trigger_rule", "TriggerRule", "ALL_SUCCESS"], ["clear_task_instances", "ti", "ti", "tis", "ti", "task_id", "session", "session", "dag", "short_circuit", "dag"]], "tis": [["tis", "dr", "get_task_instances"], ["clear_task_instances", "ti", "ti", "tis", "ti", "task_id", "session", "session", "dag", "short_circuit", "dag"]]}, "name": "test_clear_skipped_downstream_task", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["short_circuit", "self", "op1", "self", "op2"], ["dr", "self", "create_dag_run"], ["short_circuit", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "op1", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "op2", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "op1", "trigger_rule", "TriggerRule", "ALL_SUCCESS"], ["self", "op2", "trigger_rule", "TriggerRule", "ALL_SUCCESS"], ["self", "assert_expected_task_states", "dr", "expected_states"], ["self", "op1", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["self", "assert_expected_task_states", "dr", "expected_states"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShortCircuitOperator.test_clear_skipped_downstream_task", "ret_exprs": [], "ret_type": "", "variables": {"dr": "", "expected_states": "", "short_circuit": "", "tis": ""}, "variables_p": {"dr": [["int", 0.3260046340610798], ["Generator[Any, Any, Any]", 0.11170153467053384], ["list", 0.1012267378664096], ["Any[Any]", 0.0982378800511164], ["raiden.transfer.state.PendingLocksState", 0.08922862277307504], ["staticmethod", 0.08553354169248735]], "expected_states": [["cmk.base.api.agent_based.checking_classes.state", 0.10865883823989858], ["raiden.transfer.state.NettingChannelEndState", 0.09896251993308938], ["mythril.laser.ethereum.state.global_state.GlobalState", 0.09102253998935997], ["raiden.transfer.state.ChainState", 0.08547797869079969]], "short_circuit": [["byceps.services.email.transfer.models.Message", 0.31338438159724974], ["raiden.utils.TargetAddress", 0.14395805585471488], ["str", 0.08938976160690452], ["bool", 0.08721863212188195]], "tis": [["str", 0.1794880453437806], ["List[Tuple[int, str]]", 0.12485244176262372], ["Optional[str]", 0.12428414817420985]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[605, 4], [620, 99]], "fn_var_ln": {"dr": [[614, 8], [614, 10]], "short_op_no_push_xcom": [[610, 12], [610, 33]], "short_op_push_xcom": [[607, 12], [607, 30]], "tis": [[618, 8], [618, 11]]}, "fn_var_occur": {"dr": [["dr", "self", "create_dag_run"], ["tis", "dr", "get_task_instances"]], "short_op_no_push_xcom": [["short_op_no_push_xcom", "ShortCircuitOperator", "task_id", "python_callable", "False"], ["short_op_no_push_xcom", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["tis", "xcom_pull", "task_ids", "short_op_no_push_xcom", "task_id", "key", "None"]], "short_op_push_xcom": [["short_op_push_xcom", "ShortCircuitOperator", "task_id", "python_callable"], ["short_op_push_xcom", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["tis", "xcom_pull", "task_ids", "short_op_push_xcom", "task_id", "key"]], "tis": [["tis", "dr", "get_task_instances"], ["tis", "xcom_pull", "task_ids", "short_op_push_xcom", "task_id", "key"], ["tis", "xcom_pull", "task_ids", "short_op_no_push_xcom", "task_id", "key", "None"]]}, "name": "test_xcom_push", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["dr", "self", "create_dag_run"], ["short_op_push_xcom", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["short_op_no_push_xcom", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShortCircuitOperator.test_xcom_push", "ret_exprs": [], "ret_type": "", "variables": {"dr": "", "short_op_no_push_xcom": "", "short_op_push_xcom": "", "tis": ""}, "variables_p": {"dr": [["int", 0.2690197553075809], ["str", 0.2382489526319523], ["List[str]", 0.14153888487520713]], "short_op_no_push_xcom": [["str", 0.09168110619753489], ["paradigm.models.Base", 0.09080092883931491], ["zerver.models.UserProfile", 0.08307547823981888]], "short_op_push_xcom": [["str", 0.41346004645123025], ["Dict[str, Dict[str, str]]", 0.09665306770430074], ["Dict[int, List[Any]]", 0.09414077623680614], ["Tuple[str, str]", 0.090768789999733]], "tis": [["str", 0.33672241823064786], ["Dict[str, Any]", 0.27914925683842917], ["Dict[str, str]", 0.0873532753569599]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[622, 4], [634, 9]], "fn_var_ln": {"dr": [[629, 8], [629, 10]], "empty_task": [[627, 12], [627, 22]], "short_op_push_xcom": [[624, 12], [624, 30]], "tis": [[631, 8], [631, 11]]}, "fn_var_occur": {"dr": [["dr", "self", "create_dag_run"], ["tis", "dr", "get_task_instances"]], "empty_task": [["empty_task", "EmptyOperator", "task_id"], ["short_op_push_xcom", "empty_task"]], "short_op_push_xcom": [["short_op_push_xcom", "ShortCircuitOperator", "task_id", "python_callable", "False"], ["short_op_push_xcom", "empty_task"], ["short_op_push_xcom", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"], ["tis", "xcom_pull", "task_ids", "short_op_push_xcom", "task_id", "key"]], "tis": [["tis", "dr", "get_task_instances"], ["tis", "xcom_pull", "task_ids", "short_op_push_xcom", "task_id", "key"]]}, "name": "test_xcom_push_skipped_tasks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag"], ["dr", "self", "create_dag_run"], ["short_op_push_xcom", "run", "start_date", "self", "default_date", "end_date", "self", "default_date"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShortCircuitOperator.test_xcom_push_skipped_tasks", "ret_exprs": [], "ret_type": "", "variables": {"dr": "", "empty_task": "", "short_op_push_xcom": "", "tis": ""}, "variables_p": {"dr": [["int", 0.2690197553075809], ["str", 0.2382489526319523], ["List[str]", 0.14153888487520713]], "empty_task": [["Dict[str, str]", 0.11955523890140514], ["str", 0.11645960667116212], ["List[Tuple[Any, str]]", 0.11389846773676832], ["list", 0.09958696895681439], ["bytearray", 0.09460411192673936], ["List[str]", 0.09356149884271192], ["Dict[str, Optional[str]]", 0.0925655827594258], ["int", 0.0871575986237596], ["Dict[str, Any]", 0.08714191143076558]], "short_op_push_xcom": [["str", 0.39012106803019136], ["raiden.transfer.state.TransactionExecutionStatus", 0.10740114070809591], ["Dict[str, Dict[str, str]]", 0.10702468022882478], ["int", 0.09039059533390079]], "tis": [["str", 0.19050830902073795], ["geode.models.common.Address", 0.1445059266317282], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.10868290967662887], ["raiden.utils.PaymentID", 0.09082849666211175], ["List[str]", 0.08953568808477805]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[640, 12], [647, 48]], "fn_var_ln": {"empty_task": [[646, 16], [646, 26]], "short_op_push_xcom": [[641, 16], [641, 34]]}, "fn_var_occur": {"empty_task": [["empty_task", "EmptyOperator", "task_id"], ["short_op_push_xcom", "empty_task"]], "short_op_push_xcom": [["short_op_push_xcom", "ShortCircuitOperator", "task_id", "python_callable", "arg", "arg", "op_kwargs", "x"], ["short_op_push_xcom", "empty_task"]]}, "name": "group", "params": {"x": ""}, "params_descr": {"x": ""}, "params_occur": {"x": [["short_op_push_xcom", "ShortCircuitOperator", "task_id", "python_callable", "arg", "arg", "op_kwargs", "x"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "x": [["speedwagon.models.SettingsModel", 0.1104558384834869], ["audiopyle.lib.models.compressed_feature.CompressedFeatureDTO", 0.10575996794166274], ["audiopyle.lib.models.resulAnalysisStats", 0.09619229764962339], ["hackathon.utils.utils.DataMessage", 0.09368144287884095]]}, "q_name": "TestShortCircuitOperator.test_mapped_xcom_push_skipped_tasks.<locals>.group", "ret_exprs": [], "ret_type": "", "variables": {"empty_task": "", "short_op_push_xcom": ""}, "variables_p": {"empty_task": [["Dict[str, str]", 0.11955523890140514], ["str", 0.11645960667116212], ["List[Tuple[Any, str]]", 0.11389846773676832], ["list", 0.09958696895681439], ["bytearray", 0.09460411192673936], ["List[str]", 0.09356149884271192], ["Dict[str, Optional[str]]", 0.0925655827594258], ["int", 0.0871575986237596], ["Dict[str, Any]", 0.08714191143076558]], "short_op_push_xcom": [["int", 0.5129498117939271]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[636, 4], [667, 46]], "fn_var_ln": {"decision": [[651, 8], [651, 16]], "dr": [[650, 8], [650, 10]], "tis": [[655, 8], [655, 11]]}, "fn_var_occur": {"decision": [["decision", "dr", "task_instance_scheduling_decisions", "session", "session"], ["decision", "schedulable_tis"]], "dr": [["dr", "self", "create_dag_run"], ["decision", "dr", "task_instance_scheduling_decisions", "session", "session"], ["tis", "dr", "get_task_instances"]], "tis": [["tis", "dr", "get_task_instances"], ["tis", "xcom_pull", "task_ids", "key", "map_indexes", "True"], ["tis", "xcom_pull", "task_ids", "key", "map_indexes", "None"], ["tis", "xcom_pull", "task_ids", "key", "map_indexes"]]}, "name": "test_mapped_xcom_push_skipped_tasks", "params": {"self": "", "session": ""}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["dr", "self", "create_dag_run"]], "session": [["decision", "dr", "task_instance_scheduling_decisions", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["str", 0.11865612274653975], ["Dict[str, Any]", 0.09170006342384442]]}, "q_name": "TestShortCircuitOperator.test_mapped_xcom_push_skipped_tasks", "ret_exprs": [], "ret_type": "", "variables": {"decision": "", "dr": "", "tis": ""}, "variables_p": {"decision": [["list", 0.14567065369509266], ["Optional[\"Lecture\"]", 0.12350705632059172], ["dict", 0.12126756164558153], ["golem.rpc.session.Publisher", 0.07954084578846411], ["str", 0.07943421429465514], ["Dict[str, Union[Any, Any, str]]", 0.07708637800222638]], "dr": [["list", 0.13518063519555998], ["set", 0.08580675215668143], ["owlmixin.TList[jumeaux.models.Request]", 0.07739105180851681], ["dict", 0.07644870864720868]], "tis": [["Pattern[str]", 0.27537498010861283], ["Dict[str, str]", 0.11788334498282083], ["str", 0.11382580802507551], ["Mapping", 0.11382580802507551], ["dict", 0.09558001059358202], ["pydynasync.models.Changes", 0.0939135576485351]]}}], "name": "TestShortCircuitOperator", "q_name": "TestShortCircuitOperator", "variables": {"all_downstream_skipped_states": "", "all_success_states": "", "opcls": ""}, "variables_p": {"all_downstream_skipped_states": [["Dict[int, Set[str]]", 0.6841943982604265], ["Optional[bool]", 0.21727878163957143]], "all_success_states": [["Dict[str, Any]", 0.4549521728044683], ["str", 0.39258445317390994], ["List[str]", 0.1524633740216218]], "opcls": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[673, 0], [806, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[674, 4], [675, 101]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_template_fields", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_template_fields", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[678, 8], [679, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_fail.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[677, 4], [682, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_fail", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_fail", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[685, 8], [686, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_fail_with_message.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[684, 4], [690, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_fail_with_message", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_fail_with_message", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[693, 8], [697, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_string_args.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[692, 4], [699, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_string_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "string_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_string_args", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[702, 8], [706, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"a": "", "b": "", "c": "", "d": ""}, "params_descr": {"a": "", "b": "", "c": "", "d": ""}, "params_occur": {"a": [["a", "b", "c", "d"]], "b": [["a", "b", "c", "d"]], "c": [["a", "b", "c", "d"]], "d": [["a", "b", "c", "d"]]}, "params_p": {"a": [["int", 1.0]], "args": [], "b": [["int", 1.0]], "c": [["int", 1.0]], "d": [["int", 1.0]], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_with_args.<locals>.f", "ret_exprs": ["return True"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[701, 4], [708, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_with_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "op_args", "op_kwargs", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_with_args", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[711, 8], [712, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_return_none.<locals>.f", "ret_exprs": ["return None"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.5549467634869727], ["str", 0.22733939953123733], ["Optional[float]", 0.07435750650659728]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[710, 4], [715, 46]], "fn_var_ln": {"task": [[714, 8], [714, 12]]}, "fn_var_occur": {"task": [["task", "self", "run_as_task", "f"], ["task", "execute_callable", "None"]]}, "name": "test_return_none", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task", "self", "run_as_task", "f"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_return_none", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["dict", 0.3101800654980936], ["KeysView[str]", 0.09946725456065081], ["Dict[str, Union[float, str]]", 0.09566497360449613], ["raiden.utils.Dict[raiden.utils.TokenAddress, raiden.utils.ProportionalFeeAmount]", 0.09451792484199711], ["Dict[str, Any]", 0.0918189345871589], ["str", 0.09140466542334]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[718, 8], [719, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_return_false.<locals>.f", "ret_exprs": ["return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[717, 4], [722, 47]], "fn_var_ln": {"task": [[721, 8], [721, 12]]}, "fn_var_occur": {"task": [["task", "self", "run_as_task", "f"], ["task", "execute_callable", "False"]]}, "name": "test_return_false", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task", "self", "run_as_task", "f"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_return_false", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["Dict[str, str]", 0.2751081192681638], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.19801641730456673], ["Dict[int, Any]", 0.18419355372153792], ["Dict[str, Union[float, str]]", 0.09291728282774797], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0857183657668316], ["Dict[int, str]", 0.08305798660999891], ["Dict[str, Union[Any, Any, Any]]", 0.08098827450115305]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[724, 4], [726, 87]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_lambda", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["PythonVirtualenvOperator", "python_callable", "x", "task_id", "self", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_lambda", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[729, 8], [730, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["fonduer.candidates.models.temporary_contexTemporaryContext", 0.49999999956975255], ["int", 0.24999999978487628], ["List[str]", 5.736632389793545e-10], ["str", 1.4341580974483862e-10]], "args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_nonimported_as_arg.<locals>.f", "ret_exprs": ["return None"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.5549467634869727], ["str", 0.22733939953123733], ["Optional[float]", 0.07435750650659728]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[728, 4], [732, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_nonimported_as_arg", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "op_args", "datetime", "utcnow"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_nonimported_as_arg", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[735, 8], [736, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"templates_dict": ""}, "params_descr": {"templates_dict": ""}, "params_occur": {"templates_dict": []}, "params_p": {"args": [], "kwargs": [], "self": [], "templates_dict": [["str", 0.4909210226476475], ["bool", 0.09087985628417208]]}, "q_name": "BaseTestPythonVirtualenvOperator.test_context.<locals>.f", "ret_exprs": ["return templates_dict[\"ds\"]"], "ret_type": "", "ret_type_p": [["Dict[int, Any]", 0.17769076697180217], ["Dict[str, tonga.models.structs.positioning.BasePositioning]", 0.13517376489474187], ["starfish.types.Axes", 0.09871257147417216], ["dict", 0.08778163051890928], ["Dict[int, List[Any]]", 0.0798006368548631], ["bool", 0.07795313234806377]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[734, 4], [739, 63]], "fn_var_ln": {"task": [[738, 8], [738, 12]]}, "fn_var_occur": {"task": [["task", "self", "run_as_task", "f", "templates_dict"], ["task", "templates_dict", "self", "ds_templated"]]}, "name": "test_context", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task", "self", "run_as_task", "f", "templates_dict"], ["task", "templates_dict", "self", "ds_templated"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_context", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["Dict[str, Union[Any, int]]", 0.3807490532403819], ["Dict[str, Any]", 0.2063450112020729], ["Dict[str, str]", 0.12117548033818738], ["dict", 0.09838268772047191], ["str", 0.09822550620607075], ["Dict[int, List[Any]]", 0.095122261292815]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[744, 8], [745, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_deepcopy.<locals>.f", "ret_exprs": ["return 1"], "ret_type": "", "ret_type_p": [["float", 0.599999999798652], ["int", 1.9890849799831443e-10], ["str", 6.059198676086235e-11]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that PythonVirtualenvOperator are deep-copyable.", "long_descr": null, "ret": null}, "fn_lc": [[741, 4], [748, 27]], "fn_var_ln": {"task": [[747, 8], [747, 12]]}, "fn_var_occur": {"task": [["task", "PythonVirtualenvOperator", "python_callable", "f", "task_id"], ["copy", "deepcopy", "task"]]}, "name": "test_deepcopy", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_deepcopy", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["Tuple[int]", 0.13938253386118582], ["bytes", 0.12867647202669824], ["int", 0.10441884002329063], ["ajapaik.ajapaik.models.Photo", 0.08311146686252807], ["List[str]", 0.08029168809477594]]}}, {"docstring": {"func": "Ensure all template context fields are listed in the operator.", "long_descr": "This exists mainly so when a field is added to the context, we remember to\nalso add it to PythonVirtualenvOperator.", "ret": null}, "fn_lc": [[750, 4], [775, 44]], "fn_var_ln": {"context": [[767, 8], [767, 15]], "declared_keys": [[769, 8], [769, 21]], "intentionally_excluded_context_keys": [[759, 8], [759, 43]], "ti": [[766, 8], [766, 10]]}, "fn_var_occur": {"context": [["context", "ti", "get_template_context"], ["set", "context", "declared_keys"]], "declared_keys": [["declared_keys", "PythonVirtualenvOperator", "BASE_SERIALIZABLE_CONTEXT_KEYS", "PythonVirtualenvOperator", "PENDULUM_SERIALIZABLE_CONTEXT_KEYS", "PythonVirtualenvOperator", "AIRFLOW_SERIALIZABLE_CONTEXT_KEYS", "intentionally_excluded_context_keys"], ["set", "context", "declared_keys"]], "intentionally_excluded_context_keys": [["declared_keys", "PythonVirtualenvOperator", "BASE_SERIALIZABLE_CONTEXT_KEYS", "PythonVirtualenvOperator", "PENDULUM_SERIALIZABLE_CONTEXT_KEYS", "PythonVirtualenvOperator", "AIRFLOW_SERIALIZABLE_CONTEXT_KEYS", "intentionally_excluded_context_keys"]], "ti": [["ti", "create_task_instance", "dag_id", "self", "dag_id", "task_id", "self", "task_id", "schedule", "None"], ["context", "ti", "get_template_context"]]}, "name": "test_virtualenv_serializable_context_fields", "params": {"create_task_instance": "", "self": ""}, "params_descr": {"create_task_instance": "", "self": ""}, "params_occur": {"create_task_instance": [["ti", "create_task_instance", "dag_id", "self", "dag_id", "task_id", "self", "task_id", "schedule", "None"]], "self": [["ti", "create_task_instance", "dag_id", "self", "dag_id", "task_id", "self", "task_id", "schedule", "None"]]}, "params_p": {"args": [], "create_task_instance": [["mock.MagicMock", 0.07335002451646723]], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_virtualenv_serializable_context_fields", "ret_exprs": [], "ret_type": "", "variables": {"context": "", "declared_keys": "", "intentionally_excluded_context_keys": "", "ti": ""}, "variables_p": {"context": [["Tuple[str, str]", 0.09132115113876099], ["Tuple[str, str, str, str, str]", 0.09132115113876099], ["list", 0.0910308187243357], ["dict", 0.09092452840471937]], "declared_keys": [["set", 0.09389801899416259], ["Tuple[str]", 0.08849947270759465], ["str", 0.0816235960644007]], "intentionally_excluded_context_keys": [["str", 0.31557593709477516], ["List[str]", 0.08565459362683227]], "ti": [["str", 0.33330934396241935], ["raiden.utils.PaymentID", 0.0889855815606098]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[790, 8], [792, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"exit_code": ""}, "params_descr": {"exit_code": ""}, "params_occur": {"exit_code": [["SystemExit", "exit_code"]]}, "params_p": {"args": [], "exit_code": [["str", 0.6407045172208506], ["int", 0.31932394056582025]], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_on_skip_exit_code.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[789, 4], [806, 45]], "fn_var_ln": {"ti": [[800, 12], [800, 14]]}, "fn_var_occur": {"ti": [["ti", "self", "run_as_task", "f", "return_ti", "True", "op_kwargs", "actual_exit_code", "extra_kwargs", "extra_kwargs"], ["ti", "state", "expected_state"]]}, "name": "test_on_skip_exit_code", "params": {"actual_exit_code": "", "expected_state": "", "extra_kwargs": "", "self": ""}, "params_descr": {"actual_exit_code": "", "expected_state": "", "extra_kwargs": "", "self": ""}, "params_occur": {"actual_exit_code": [["self", "run_as_task", "f", "op_kwargs", "actual_exit_code", "extra_kwargs", "extra_kwargs"], ["ti", "self", "run_as_task", "f", "return_ti", "True", "op_kwargs", "actual_exit_code", "extra_kwargs", "extra_kwargs"]], "expected_state": [["expected_state", "TaskInstanceState", "FAILED"], ["ti", "state", "expected_state"]], "extra_kwargs": [["self", "run_as_task", "f", "op_kwargs", "actual_exit_code", "extra_kwargs", "extra_kwargs"], ["ti", "self", "run_as_task", "f", "return_ti", "True", "op_kwargs", "actual_exit_code", "extra_kwargs", "extra_kwargs"]], "self": [["self", "run_as_task", "f", "op_kwargs", "actual_exit_code", "extra_kwargs", "extra_kwargs"], ["ti", "self", "run_as_task", "f", "return_ti", "True", "op_kwargs", "actual_exit_code", "extra_kwargs", "extra_kwargs"]]}, "params_p": {"actual_exit_code": [["int", 0.06881361441377389]], "args": [], "expected_state": [["bool", 0.09357150065522611]], "extra_kwargs": [["int", 0.06881361441377389]], "kwargs": [], "self": []}, "q_name": "BaseTestPythonVirtualenvOperator.test_on_skip_exit_code", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["Dict[str, None]", 0.10038040630305285], ["Coroutine[Any, Any, None]", 0.08546564204515181], ["bool", 0.08073322641656729], ["str", 0.0802355573141886], ["Tuple[str, str]", 0.07638367286197863]]}}], "name": "BaseTestPythonVirtualenvOperator", "q_name": "BaseTestPythonVirtualenvOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[809, 0], [1039, 89]], "cls_var_ln": {"opcls": [[810, 4], [810, 9]]}, "cls_var_occur": {"opcls": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[813, 4], [815, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "default_kwargs", "params": {"kwargs": "", "python_version": ""}, "params_descr": {"kwargs": "", "python_version": ""}, "params_occur": {"kwargs": [["kwargs", "python_version"]], "python_version": [["kwargs", "python_version"]]}, "params_p": {"args": [], "kwargs": [], "python_version": [["bool", 0.22696399353405172], ["Optional[str]", 0.08710047392993311], ["float", 0.08386251274954364], ["int", 0.07685402726320474], ["List[app.models.Question]", 0.07680595087128317], ["str", 0.07546339618235554]], "self": []}, "q_name": "TestPythonVirtualenvOperator.default_kwargs", "ret_exprs": ["return kwargs"], "ret_type": "", "ret_type_p": [["Dict[int, Dict[int, int]]", 0.19729855846749927], ["bool", 0.19391958965407094], ["dict", 0.10162241952916161], ["cmk.utils.type_defs.EventRule", 0.10053718777195808], ["Dict[str, str]", 0.09739332396080362]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Ensure dill is correctly installed.", "long_descr": null, "ret": null}, "fn_lc": [[818, 8], [820, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_add_dill.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[817, 4], [822, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_add_dill", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "use_dill", "True", "system_site_packages", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_add_dill", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[827, 8], [828, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_no_requirements.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Tests that the python callable is invoked on task run.", "long_descr": null, "ret": null}, "fn_lc": [[824, 4], [830, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_no_requirements", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_no_requirements", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[833, 8], [838, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_no_system_site_packages.<locals>.f", "ret_exprs": ["return True"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[832, 4], [840, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_no_system_site_packages", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "system_site_packages", "False", "requirements"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_no_system_site_packages", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[843, 8], [844, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_system_site_packages.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[842, 4], [846, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_system_site_packages", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "requirements", "system_site_packages", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_system_site_packages", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[849, 8], [853, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_with_requirements_pinned.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[848, 4], [855, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_with_requirements_pinned", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "requirements"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_with_requirements_pinned", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[858, 8], [859, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_unpinned_requirements.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[857, 4], [861, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_unpinned_requirements", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "requirements", "system_site_packages", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_unpinned_requirements", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[864, 8], [865, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_range_requirements.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[863, 4], [867, 94]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_range_requirements", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "requirements", "system_site_packages", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_range_requirements", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[870, 8], [871, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_requirements_file.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[869, 4], [873, 92]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_requirements_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_operator", "f", "requirements", "system_site_packages", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_requirements_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[877, 8], [878, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_pip_install_options.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[876, 4], [894, 9]], "fn_var_ln": {"side_effect": [[880, 8], [880, 45]]}, "fn_var_occur": {"side_effect": [["mocked_prepare_virtualenv", "side_effect", "prepare_virtualenv"]]}, "name": "test_pip_install_options", "params": {"mocked_prepare_virtualenv": "", "self": ""}, "params_descr": {"mocked_prepare_virtualenv": "", "self": ""}, "params_occur": {"mocked_prepare_virtualenv": [["mocked_prepare_virtualenv", "side_effect", "prepare_virtualenv"], ["mocked_prepare_virtualenv", "assert_called_with", "venv_directory", "mock", "ANY", "python_bin", "mock", "ANY", "system_site_packages", "False", "requirements_file_path", "mock", "ANY", "pip_install_options"]], "self": [["self", "run_as_task", "f", "requirements", "system_site_packages", "False", "pip_install_options"]]}, "params_p": {"args": [], "kwargs": [], "mocked_prepare_virtualenv": [["mock.Mock", 0.22680227096098407]], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_pip_install_options", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[897, 8], [900, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_templated_requirements_file.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[896, 4], [908, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_templated_requirements_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_operator", "f", "requirements", "use_dill", "True", "params", "system_site_packages", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_templated_requirements_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[911, 8], [919, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_python_3.<locals>.f", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Callable[[], Iterable[Any]]", 0.1940928514958506], ["Iterable[Hashable]", 0.10919768493367353], ["logging.Logger", 0.09725678975263455], ["Tuple[int]", 0.0970464257479253], ["Callable", 0.0970464257479253], ["models.Base", 0.0970464257479253]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[910, 4], [921, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_python_3", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "python_version", "use_dill", "False", "requirements"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_python_3", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[924, 8], [925, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"a": ""}, "params_descr": {"a": ""}, "params_occur": {"a": []}, "params_p": {"a": [["int", 0.6], ["Tuple[int, str]", 0.1], ["Iterator[int]", 0.1], ["Iterable[int]", 0.1], ["Sequence[int]", 0.1]], "args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_without_dill.<locals>.f", "ret_exprs": ["return a"], "ret_type": "", "ret_type_p": [["str", 0.16936822311432287], ["int", 0.15963419266001916], ["List[str]", 0.07771121832008177]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[923, 4], [927, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_without_dill", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "system_site_packages", "False", "use_dill", "False", "op_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_without_dill", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[940, 8], [975, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"conf": "", "context": "", "dag": "", "dag_run": "", "ds_nodash": "", "execution_date": "", "inlets": "", "macros": "", "next_ds": "", "next_ds_nodash": "", "next_execution_date": "", "outlets": "", "params": "", "prev_ds": "", "prev_ds_nodash": "", "prev_execution_date": "", "prev_execution_date_success": "", "prev_start_date_success": "", "run_id": "", "task": "", "task_instance_key_str": "", "test_mode": "", "tomorrow_ds": "", "tomorrow_ds_nodash": "", "ts": "", "ts_nodash": "", "ts_nodash_with_tz": "", "yesterday_ds": "", "yesterday_ds_nodash": ""}, "params_descr": {"conf": "", "context": "", "dag": "", "dag_run": "", "ds_nodash": "", "execution_date": "", "inlets": "", "macros": "", "next_ds": "", "next_ds_nodash": "", "next_execution_date": "", "outlets": "", "params": "", "prev_ds": "", "prev_ds_nodash": "", "prev_execution_date": "", "prev_execution_date_success": "", "prev_start_date_success": "", "run_id": "", "task": "", "task_instance_key_str": "", "test_mode": "", "tomorrow_ds": "", "tomorrow_ds_nodash": "", "ts": "", "ts_nodash": "", "ts_nodash_with_tz": "", "yesterday_ds": "", "yesterday_ds_nodash": ""}, "params_occur": {"conf": [], "context": [], "dag": [], "dag_run": [], "ds_nodash": [], "execution_date": [], "inlets": [], "macros": [], "next_ds": [], "next_ds_nodash": [], "next_execution_date": [], "outlets": [], "params": [], "prev_ds": [], "prev_ds_nodash": [], "prev_execution_date": [], "prev_execution_date_success": [], "prev_start_date_success": [], "run_id": [], "task": [], "task_instance_key_str": [], "test_mode": [], "tomorrow_ds": [], "tomorrow_ds_nodash": [], "ts": [], "ts_nodash": [], "ts_nodash_with_tz": [], "yesterday_ds": [], "yesterday_ds_nodash": []}, "params_p": {"args": [], "conf": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "context": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "dag": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "dag_run": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "execution_date": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "inlets": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "kwargs": [], "macros": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "next_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "next_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "next_execution_date": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "outlets": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "params": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_execution_date": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_execution_date_success": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_start_date_success": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "run_id": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "self": [], "task": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "task_instance_key_str": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "test_mode": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "tomorrow_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "tomorrow_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts_nodash_with_tz": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "yesterday_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "yesterday_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]]}, "q_name": "TestPythonVirtualenvOperator.test_airflow_context.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[939, 4], [977, 92]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_airflow_context", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_operator", "f", "use_dill", "True", "system_site_packages", "True", "requirements", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_airflow_context", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[981, 8], [1009, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"context": "", "ds_nodash": "", "execution_date": "", "inlets": "", "next_ds": "", "next_ds_nodash": "", "next_execution_date": "", "outlets": "", "prev_ds": "", "prev_ds_nodash": "", "prev_execution_date": "", "prev_execution_date_success": "", "prev_start_date_success": "", "run_id": "", "task_instance_key_str": "", "test_mode": "", "tomorrow_ds": "", "tomorrow_ds_nodash": "", "ts": "", "ts_nodash": "", "ts_nodash_with_tz": "", "yesterday_ds": "", "yesterday_ds_nodash": ""}, "params_descr": {"context": "", "ds_nodash": "", "execution_date": "", "inlets": "", "next_ds": "", "next_ds_nodash": "", "next_execution_date": "", "outlets": "", "prev_ds": "", "prev_ds_nodash": "", "prev_execution_date": "", "prev_execution_date_success": "", "prev_start_date_success": "", "run_id": "", "task_instance_key_str": "", "test_mode": "", "tomorrow_ds": "", "tomorrow_ds_nodash": "", "ts": "", "ts_nodash": "", "ts_nodash_with_tz": "", "yesterday_ds": "", "yesterday_ds_nodash": ""}, "params_occur": {"context": [], "ds_nodash": [], "execution_date": [], "inlets": [], "next_ds": [], "next_ds_nodash": [], "next_execution_date": [], "outlets": [], "prev_ds": [], "prev_ds_nodash": [], "prev_execution_date": [], "prev_execution_date_success": [], "prev_start_date_success": [], "run_id": [], "task_instance_key_str": [], "test_mode": [], "tomorrow_ds": [], "tomorrow_ds_nodash": [], "ts": [], "ts_nodash": [], "ts_nodash_with_tz": [], "yesterday_ds": [], "yesterday_ds_nodash": []}, "params_p": {"args": [], "context": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "execution_date": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "inlets": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "kwargs": [], "next_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "next_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "next_execution_date": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "outlets": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_execution_date": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_execution_date_success": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_start_date_success": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "run_id": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "self": [], "task_instance_key_str": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "test_mode": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "tomorrow_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "tomorrow_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts_nodash_with_tz": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "yesterday_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "yesterday_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]]}, "q_name": "TestPythonVirtualenvOperator.test_pendulum_context.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[980, 4], [1011, 97]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_pendulum_context", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "use_dill", "True", "system_site_packages", "False", "requirements"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_pendulum_context", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1015, 8], [1037, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {"context": "", "ds_nodash": "", "inlets": "", "next_ds": "", "next_ds_nodash": "", "outlets": "", "prev_ds": "", "prev_ds_nodash": "", "run_id": "", "task_instance_key_str": "", "test_mode": "", "tomorrow_ds": "", "tomorrow_ds_nodash": "", "ts": "", "ts_nodash": "", "ts_nodash_with_tz": "", "yesterday_ds": "", "yesterday_ds_nodash": ""}, "params_descr": {"context": "", "ds_nodash": "", "inlets": "", "next_ds": "", "next_ds_nodash": "", "outlets": "", "prev_ds": "", "prev_ds_nodash": "", "run_id": "", "task_instance_key_str": "", "test_mode": "", "tomorrow_ds": "", "tomorrow_ds_nodash": "", "ts": "", "ts_nodash": "", "ts_nodash_with_tz": "", "yesterday_ds": "", "yesterday_ds_nodash": ""}, "params_occur": {"context": [], "ds_nodash": [], "inlets": [], "next_ds": [], "next_ds_nodash": [], "outlets": [], "prev_ds": [], "prev_ds_nodash": [], "run_id": [], "task_instance_key_str": [], "test_mode": [], "tomorrow_ds": [], "tomorrow_ds_nodash": [], "ts": [], "ts_nodash": [], "ts_nodash_with_tz": [], "yesterday_ds": [], "yesterday_ds_nodash": []}, "params_p": {"args": [], "context": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "inlets": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "kwargs": [], "next_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "next_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "outlets": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "prev_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "run_id": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "self": [], "task_instance_key_str": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "test_mode": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "tomorrow_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "tomorrow_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "ts_nodash_with_tz": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "yesterday_ds": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]], "yesterday_ds_nodash": [["str", 0.5253913909215381], ["bool", 0.19777890990853014], ["int", 0.07144280838345128], ["List[str]", 0.06281833275216443], ["Iterable[Any]", 0.060137316554822816]]}, "q_name": "TestPythonVirtualenvOperator.test_base_context.<locals>.f", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1014, 4], [1039, 89]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_base_context", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_as_task", "f", "use_dill", "True", "system_site_packages", "False", "requirements", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonVirtualenvOperator.test_base_context", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestPythonVirtualenvOperator", "q_name": "TestPythonVirtualenvOperator", "variables": {"opcls": ""}, "variables_p": {"opcls": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[1042, 0], [1063, 47]], "cls_var_ln": {"opcls": [[1043, 4], [1043, 9]]}, "cls_var_occur": {"opcls": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1046, 4], [1048, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "default_kwargs", "params": {"kwargs": "", "python_version": ""}, "params_descr": {"kwargs": "", "python_version": ""}, "params_occur": {"kwargs": [["kwargs", "sys", "executable"]], "python_version": []}, "params_p": {"args": [], "kwargs": [], "python_version": [["str", 0.27140240791996284], ["dict", 0.18093493861330856], ["Optional[Dict]", 0.13154778919614096], ["Optional[Hashable]", 0.09046746930665428]], "self": []}, "q_name": "TestExternalPythonOperator.default_kwargs", "ret_exprs": ["return kwargs"], "ret_type": "", "ret_type_p": [["Dict[int, Dict[int, int]]", 0.19729855846749927], ["bool", 0.19391958965407094], ["dict", 0.10162241952916161], ["cmk.utils.type_defs.EventRule", 0.10053718777195808], ["Dict[str, str]", 0.09739332396080362]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1052, 8], [1053, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "f", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExternalPythonOperator.test_except_value_error.<locals>.f", "ret_exprs": ["return 1"], "ret_type": "", "ret_type_p": [["float", 0.599999999798652], ["int", 1.9890849799831443e-10], ["str", 6.059198676086235e-11]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1051, 4], [1063, 47]], "fn_var_ln": {"side_effect": [[1061, 8], [1061, 30]], "task": [[1055, 8], [1055, 12]]}, "fn_var_occur": {"side_effect": [["loads_mock", "side_effect", "DeserializingResultError"]], "task": [["task", "PythonVirtualenvOperator", "python_callable", "f", "task_id", "dag", "self", "dag"], ["task", "_read_result", "path", "mock", "Mock"]]}, "name": "test_except_value_error", "params": {"loads_mock": "", "self": ""}, "params_descr": {"loads_mock": "", "self": ""}, "params_occur": {"loads_mock": [["loads_mock", "side_effect", "DeserializingResultError"]], "self": [["task", "PythonVirtualenvOperator", "python_callable", "f", "task_id", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "loads_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.20246814680470054]], "self": []}, "q_name": "TestExternalPythonOperator.test_except_value_error", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": "", "task": ""}, "variables_p": {"side_effect": [["Dict[int, Dict[str, Any]]", 0.22164387794143786], ["str", 0.20338860032658634], ["Tuple[Literal, Literal, Literal]", 0.19738503941920116], ["List[str]", 0.1508888123670634], ["property", 0.08466451585601542], ["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.0716439150599445]], "task": [["bytes", 0.20977393714196108], ["Tuple[int]", 0.20231204836983085], ["zerver.models.Stream", 0.10114066014541453], ["float", 0.09595401990036938], ["Optional[Tuple]", 0.09193888240298898]]}}], "name": "TestExternalPythonOperator", "q_name": "TestExternalPythonOperator", "variables": {"opcls": ""}, "variables_p": {"opcls": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[1066, 0], [1105, 50]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1067, 4], [1069, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_current_context_no_context_raise", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCurrentContext.test_current_context_no_context_raise", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1071, 4], [1075, 59]], "fn_var_ln": {"example_context": [[1072, 8], [1072, 23]]}, "fn_var_occur": {"example_context": [["set_current_context", "example_context"], ["get_current_context", "example_context"]]}, "name": "test_current_context_roundtrip", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCurrentContext.test_current_context_roundtrip", "ret_exprs": [], "ret_type": "", "variables": {"example_context": ""}, "variables_p": {"example_context": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1077, 4], [1083, 33]], "fn_var_ln": {"example_context": [[1078, 8], [1078, 23]]}, "fn_var_occur": {"example_context": [["set_current_context", "example_context"]]}, "name": "test_context_removed_after_exit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCurrentContext.test_context_removed_after_exit", "ret_exprs": [], "ret_type": "", "variables": {"example_context": ""}, "variables_p": {"example_context": [["str", 0.4808653992041826], ["List[str]", 0.09223900769319836]]}}, {"docstring": {"func": "Nested execution context should be supported in case the user uses multiple context managers.", "long_descr": "Each time the execute method of an operator is called, we set a new 'current' context.\nThis test verifies that no matter how many contexts are entered - order is preserved", "ret": null}, "fn_lc": [[1085, 4], [1105, 50]], "fn_var_ln": {"ctx": [[1102, 12], [1102, 15]], "ctx_list": [[1092, 8], [1092, 16]], "ctx_obj": [[1097, 12], [1097, 19]], "max_stack_depth": [[1091, 8], [1091, 23]], "new_context": [[1095, 12], [1095, 23]]}, "fn_var_occur": {"ctx": [["ctx", "get_current_context"], ["ctx", "i"]], "ctx_list": [["ctx_list", "append", "ctx_obj"], ["ctx_list", "i", "__exit__", "None", "None", "None"]], "ctx_obj": [["ctx_obj", "set_current_context", "new_context"], ["ctx_obj", "__enter__"], ["ctx_list", "append", "ctx_obj"]], "max_stack_depth": [["range", "max_stack_depth"], ["reversed", "range", "max_stack_depth"]], "new_context": [["new_context", "i"], ["ctx_obj", "set_current_context", "new_context"]]}, "name": "test_nested_context", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCurrentContext.test_nested_context", "ret_exprs": [], "ret_type": "", "variables": {"ctx": "", "ctx_list": "", "ctx_obj": "", "max_stack_depth": "", "new_context": ""}, "variables_p": {"ctx": [["click.core.Context", 0.14525550367558365], ["python.ambassador.ir.irtlscontexIRTLSContext", 0.10527536998710671], ["mock.Mock", 0.08097518889078828], ["discord.excommands.Context", 0.07171505431665556]], "ctx_list": [["list", 0.5845462412282552], ["List[Dict[str, Any]]", 0.09966066453916905], ["List[str]", 0.08805075363525473]], "ctx_obj": [["int", 0.0941390467889514]], "max_stack_depth": [["int", 0.8341493427234362], ["float", 0.16585065727656376]], "new_context": [["List[str]", 0.1792089796152659], ["datetime.timedelta", 0.13343884260290098], ["str", 0.10975700661885418], ["int", 0.10761352015082698], ["dict", 0.09406108125507748], ["bool", 0.08940934158665714]]}}], "name": "TestCurrentContext", "q_name": "TestCurrentContext", "variables": {}, "variables_p": {}}, {"cls_lc": [[1108, 0], [1110, 47]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1109, 4], [1110, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "execute", "params": {"context": "airflow.utils.context.Context", "self": ""}, "params_descr": {"context": "", "self": ""}, "params_occur": {"context": [["context", "get_current_context"]], "self": []}, "params_p": {"args": [], "context": [["int", 0.19730310136482482], ["str", 0.09865155068241241], ["list", 0.09865155068241241]], "kwargs": [], "self": []}, "q_name": "MyContextAssertOperator.execute", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "MyContextAssertOperator", "q_name": "MyContextAssertOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[1138, 0], [1147, 75]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1139, 4], [1142, 75]], "fn_var_ln": {"op": [[1141, 12], [1141, 14]]}, "fn_var_occur": {"op": [["op", "MyContextAssertOperator", "task_id"], ["op", "run", "ignore_first_depends_on_past", "True", "ignore_ti_state", "True"]]}, "name": "test_context_in_task", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCurrentContextRuntime.test_context_in_task", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["int", 0.5566739787222091], ["str", 0.21005181338994316], ["bytes", 0.13380580246355495], ["dict", 0.09946840542429271]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1144, 4], [1147, 75]], "fn_var_ln": {"op": [[1146, 12], [1146, 14]]}, "fn_var_occur": {"op": [["op", "PythonOperator", "python_callable", "get_all_the_context", "task_id"], ["op", "run", "ignore_first_depends_on_past", "True", "ignore_ti_state", "True"]]}, "name": "test_get_context_in_old_style_context_task", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCurrentContextRuntime.test_get_context_in_old_style_context_task", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, str]", 0.07381743406158667], ["str", 0.06502098800179341], ["List[str]", 0.0643990499661521]]}}], "name": "TestCurrentContextRuntime", "q_name": "TestCurrentContextRuntime", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1113, 0], [1117, 50]], "fn_var_ln": {"current_context": [[1114, 4], [1114, 19]]}, "fn_var_occur": {"current_context": [["current_context", "get_current_context"], ["context", "current_context", "_context"]]}, "name": "get_all_the_context", "params": {"context": ""}, "params_descr": {"context": ""}, "params_occur": {"context": [["context", "current_context", "_context"]]}, "params_p": {"args": [], "context": [["Callable[[Any], bool]", 0.26452503382868414], ["dict", 0.10138491868338098], ["List[str]", 0.09193785856594537], ["str", 0.0909532027432379]], "kwargs": []}, "q_name": "get_all_the_context", "ret_exprs": [], "ret_type": "", "variables": {"current_context": ""}, "variables_p": {"current_context": [["bytes", 0.09606050427937089], ["int", 0.09140586818483147]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1121, 0], [1124, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "clear_db", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "clear_db", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "copy", "logging", "os", "re", "sys", "warnings", "collections", "namedtuple", "datetime", "date", "datetime", "timedelta", "subprocess", "CalledProcessError", "unittest", "mock", "pytest", "slugify", "slugify", "airflow", "decorators", "task_group", "airflow", "exceptions", "AirflowException", "DeserializingResultError", "RemovedInAirflow3Warning", "airflow", "models", "DAG", "DagRun", "TaskInstance", "TI", "airflow", "models", "baseoperator", "BaseOperator", "airflow", "models", "taskinstance", "clear_task_instances", "set_current_context", "airflow", "operators", "empty", "EmptyOperator", "airflow", "operators", "python", "BranchPythonOperator", "ExternalPythonOperator", "PythonOperator", "PythonVirtualenvOperator", "ShortCircuitOperator", "get_current_context", "airflow", "utils", "timezone", "airflow", "utils", "context", "AirflowContextDeprecationWarning", "Context", "airflow", "utils", "python_virtualenv", "prepare_virtualenv", "airflow", "utils", "session", "create_session", "airflow", "utils", "state", "DagRunState", "State", "TaskInstanceState", "airflow", "utils", "trigger_rule", "TriggerRule", "airflow", "utils", "types", "NOTSET", "DagRunType", "tests", "test_utils", "AIRFLOW_MAIN_FOLDER", "tests", "test_utils", "db", "clear_db_runs", "dill", "funcsigs", "funcsigs", "funcsigs", "funcsigs", "funcsigs", "funcsigs", "funcsigs", "funcsigs", "sys"], "mod_var_ln": {"DEFAULT_ARGS": [[1127, 0], [1127, 12]], "DEFAULT_DATE": [[58, 0], [58, 12]], "LOGGER_NAME": [[60, 0], [60, 11]], "TEMPLATE_SEARCHPATH": [[59, 0], [59, 19]], "virtualenv_string_args": [[670, 0], [670, 22]]}, "mod_var_occur": {"DEFAULT_ARGS": [["DAG", "dag_id", "default_args", "DEFAULT_ARGS", "schedule"], ["DAG", "dag_id", "default_args", "DEFAULT_ARGS", "schedule"]], "DEFAULT_DATE": [["default_date", "datetime", "datetime", "DEFAULT_DATE"]], "LOGGER_NAME": [["caplog", "set_level", "logging", "INFO", "logger", "LOGGER_NAME"]], "TEMPLATE_SEARCHPATH": [["self", "dag", "self", "dag_maker", "self", "dag_id", "template_searchpath", "TEMPLATE_SEARCHPATH", "dag"]], "virtualenv_string_args": [["virtualenv_string_args"], ["print", "virtualenv_string_args"], ["virtualenv_string_args", "virtualenv_string_args"]]}, "no_types_annot": {"D": 13, "I": 0, "U": 264}, "session_id": "9wV3hbjaWj3nR0LB_CCe36XgQHpXdkgWd-snvwNk7rY", "set": null, "tc": [false, null], "type_annot_cove": 0.05, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_ARGS": "", "DEFAULT_DATE": "", "LOGGER_NAME": "", "TEMPLATE_SEARCHPATH": "", "virtualenv_string_args": "builtins.list[builtins.str]"}, "variables_p": {"DEFAULT_ARGS": [["str", 0.15095458691972288], ["Type[Dict[str, Any]]", 0.09794119177572246], ["list", 0.08173402243725703], ["Dict[str, Union[Any, str]]", 0.07524108308447616]], "DEFAULT_DATE": [["datetime.datetime", 0.4879062205097455], ["datetime.datetime.datetime", 0.2508757345575973], ["datetime.datetime.timezone", 0.18111429881984042], ["datetime.date", 0.0801037461128167]], "LOGGER_NAME": [["logging.Formatter", 0.5318222740180912], ["logging.Logger", 0.17123774281780135], ["str", 0.15767513043296755], ["logging.LoggerAdapter", 0.13926485273114]], "TEMPLATE_SEARCHPATH": [["str", 0.30559406364269914], ["bytes", 0.13327984736896556], ["Dict[str, str]", 0.08735791802971397]], "virtualenv_string_args": [["dict", 0.2011942930828607], ["str", 0.18908318203245364], ["Dict[str, Any]", 0.09830332730360397], ["float", 0.09814618925427879], ["list", 0.09770865112377074]]}}}