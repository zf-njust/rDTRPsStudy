{"error": null, "response": {"classes": [{"cls_lc": [[41, 0], [358, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [49, 48]], "fn_var_ln": {"dag_run_failed": [[48, 8], [48, 27]], "dag_run_running": [[44, 8], [44, 28]], "dag_run_success": [[46, 8], [46, 28]]}, "fn_var_occur": {"dag_run_failed": [["self", "dag_run_failed", "DagRun"], ["self", "dag_run_failed", "state", "State", "FAILED"]], "dag_run_running": [["self", "dag_run_running", "DagRun"], ["self", "dag_run_running", "state", "State", "RUNNING"]], "dag_run_success": [["self", "dag_run_success", "DagRun"], ["self", "dag_run_success", "state", "State", "SUCCESS"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag_run_running", "DagRun"], ["self", "dag_run_running", "state", "State", "RUNNING"], ["self", "dag_run_success", "DagRun"], ["self", "dag_run_success", "state", "State", "SUCCESS"], ["self", "dag_run_failed", "DagRun"], ["self", "dag_run_failed", "state", "State", "FAILED"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dag_run_failed": "", "dag_run_running": "", "dag_run_success": ""}, "variables_p": {"dag_run_failed": [["int", 0.4628189285131441], ["str", 0.23431072398014674], ["Type[Callable[..., None]]", 0.09075113545244909]], "dag_run_running": [["int", 0.5717279857118245], ["Dict[str, int]", 0.10747011899325404], ["str", 0.09797800830303675]], "dag_run_success": [["int", 0.4628189285131441], ["str", 0.23431072398014674], ["Type[Callable[..., None]]", 0.09075113545244909]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [52, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_class", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.teardown_class", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Subdag names must be {parent_dag}.{subdag task}", "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [70, 71]], "fn_var_ln": {"dag": [[58, 8], [58, 11]], "subdag_bad1": [[60, 8], [60, 19]], "subdag_bad2": [[61, 8], [61, 19]], "subdag_bad3": [[62, 8], [62, 19]], "subdag_good": [[59, 8], [59, 19]]}, "fn_var_occur": {"dag": [["dag", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_good"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_bad1"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_bad2"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_bad3"]], "subdag_bad1": [["subdag_bad1", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_bad1"]], "subdag_bad2": [["subdag_bad2", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_bad2"]], "subdag_bad3": [["subdag_bad3", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_bad3"]], "subdag_good": [["subdag_good", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag_good"]]}, "name": "test_subdag_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_subdag_name", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "subdag_bad1": "", "subdag_bad2": "", "subdag_bad3": "", "subdag_good": ""}, "variables_p": {"dag": [["Dict[str, str]", 0.2709353366867928], ["Dict[str, Any]", 0.1036951586954091], ["int", 0.09810557320363845], ["dict", 0.0849534335471163]], "subdag_bad1": [["int", 0.20098857183810243]], "subdag_bad2": [["int", 0.20098857183810243]], "subdag_bad3": [["int", 0.20098857183810243]], "subdag_good": [["int", 0.20098857183810243]]}}, {"docstring": {"func": "Creating a sub DAG within a main DAG's context manager", "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [81, 38]], "fn_var_ln": {"op": [[78, 12], [78, 14]], "subdag": [[77, 12], [77, 18]]}, "fn_var_occur": {"op": [["op", "SubDagOperator", "task_id", "subdag", "subdag"], ["op", "dag", "dag"], ["op", "subdag", "subdag"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["op", "SubDagOperator", "task_id", "subdag", "subdag"], ["op", "subdag", "subdag"]]}, "name": "test_subdag_in_context_manager", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_subdag_in_context_manager", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "subdag": ""}, "variables_p": {"op": [["str", 0.1911735682968303], ["Dict[str, str]", 0.10338240755128907], ["Pattern[Any]", 0.08089227276032335]], "subdag": [["str", 0.22145491571623013], ["datetime.timedelta", 0.2053419259965707], ["int", 0.12282902929013334]]}}, {"docstring": {"func": "Subdags and subdag tasks can't both have a pool with 1 slot", "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [108, 24]], "fn_var_ln": {"dag": [[103, 8], [103, 11]], "pool_1": [[91, 8], [91, 14]], "pool_10": [[92, 8], [92, 15]], "session": [[90, 8], [90, 15]], "subdag": [[88, 8], [88, 14]]}, "fn_var_occur": {"dag": [["dag", "DAG", "default_args", "default_args"], ["EmptyOperator", "task_id", "dag", "subdag", "pool"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool"], ["dag", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool"]], "pool_1": [["pool_1", "airflow", "models", "Pool", "pool", "slots"], ["session", "add", "pool_1"], ["session", "delete", "pool_1"]], "pool_10": [["pool_10", "airflow", "models", "Pool", "pool", "slots"], ["session", "add", "pool_10"], ["session", "delete", "pool_10"]], "session": [["session", "airflow", "settings", "Session"], ["session", "add", "pool_1"], ["session", "add", "pool_10"], ["session", "commit"], ["session", "delete", "pool_1"], ["session", "delete", "pool_10"], ["session", "commit"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["EmptyOperator", "task_id", "dag", "subdag", "pool"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool"]]}, "name": "test_subdag_pools", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_subdag_pools", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "pool_1": "", "pool_10": "", "session": "", "subdag": ""}, "variables_p": {"dag": [["str", 0.10609156107626515], ["int", 0.09461525426720231], ["datetime.timedelta", 0.08944963008903382]], "pool_1": [["pili.models.User", 0.20449297939615174], ["currencies.models.Currency", 0.11219183571841344], ["datetime.datetime.datetime", 0.10224648969807587], ["jinete.models.vehicles.Fleet", 0.09714337783918923], ["jumeaux.models.Report", 0.09142630431806846], ["crux.models.dataseDataset", 0.0896358011159735]], "pool_10": [["pili.models.User", 0.20449297939615174], ["currencies.models.Currency", 0.11219183571841344], ["datetime.datetime.datetime", 0.10224648969807587], ["jinete.models.vehicles.Fleet", 0.09714337783918923], ["jumeaux.models.Report", 0.09142630431806846], ["crux.models.dataseDataset", 0.0896358011159735]], "session": [["SMSShell.models.session.Session", 0.08692984142806356], ["Dict[str, Any]", 0.0853825102159191], ["sqlalchemy.orm.session.Session", 0.07806741169530682]], "subdag": [["str", 0.10609156107626515], ["int", 0.09461525426720231], ["datetime.timedelta", 0.08944963008903382]]}}, {"docstring": {"func": "Subdags and subdag tasks with no pool overlap, should not to query", "long_descr": "pools", "ret": null}, "fn_lc": [[110, 4], [133, 24]], "fn_var_ln": {"dag": [[115, 8], [115, 11]], "mock_session": [[127, 8], [127, 20]], "pool_1": [[119, 8], [119, 14]], "pool_10": [[120, 8], [120, 15]], "session": [[118, 8], [118, 15]], "subdag": [[116, 8], [116, 14]]}, "fn_var_occur": {"dag": [["dag", "DAG", "default_args", "default_args"], ["EmptyOperator", "task_id", "dag", "subdag", "pool"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool", "session", "mock_session"]], "mock_session": [["mock_session", "Mock"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool", "session", "mock_session"], ["mock_session", "query", "called"]], "pool_1": [["pool_1", "airflow", "models", "Pool", "pool", "slots"], ["session", "add", "pool_1"], ["session", "delete", "pool_1"]], "pool_10": [["pool_10", "airflow", "models", "Pool", "pool", "slots"], ["session", "add", "pool_10"], ["session", "delete", "pool_10"]], "session": [["session", "airflow", "settings", "Session"], ["session", "add", "pool_1"], ["session", "add", "pool_10"], ["session", "commit"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool", "session", "mock_session"], ["session", "delete", "pool_1"], ["session", "delete", "pool_10"], ["session", "commit"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["EmptyOperator", "task_id", "dag", "subdag", "pool"], ["SubDagOperator", "task_id", "dag", "dag", "subdag", "subdag", "pool", "session", "mock_session"]]}, "name": "test_subdag_pools_no_possible_conflict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_subdag_pools_no_possible_conflict", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "mock_session": "", "pool_1": "", "pool_10": "", "session": "", "subdag": ""}, "variables_p": {"dag": [["str", 0.10609156107626515], ["int", 0.09461525426720231], ["datetime.timedelta", 0.08944963008903382]], "mock_session": [["mock.Mock", 0.4785763048826995], ["mock.MagicMock", 0.22625181466910227], ["unittesmock.Mock", 0.10116616302738274], ["Mock", 0.09057735823144138]], "pool_1": [["pili.models.User", 0.20449297939615174], ["currencies.models.Currency", 0.11219183571841344], ["datetime.datetime.datetime", 0.10224648969807587], ["jinete.models.vehicles.Fleet", 0.09714337783918923], ["jumeaux.models.Report", 0.09142630431806846], ["crux.models.dataseDataset", 0.0896358011159735]], "pool_10": [["pili.models.User", 0.20449297939615174], ["currencies.models.Currency", 0.11219183571841344], ["datetime.datetime.datetime", 0.10224648969807587], ["jinete.models.vehicles.Fleet", 0.09714337783918923], ["jumeaux.models.Report", 0.09142630431806846], ["crux.models.dataseDataset", 0.0896358011159735]], "session": [["sqlalchemy.orm.session.Session", 0.18698368099274437]], "subdag": [["str", 0.10609156107626515], ["int", 0.09461525426720231], ["datetime.timedelta", 0.08944963008903382]]}}, {"docstring": {"func": "When SubDagOperator executes, it creates a DagRun if there is no existing one", "long_descr": "and wait until the DagRun succeeds.", "ret": null}, "fn_lc": [[135, 4], [169, 54]], "fn_var_ln": {"_get_dagrun": [[147, 8], [147, 31]], "context": [[150, 8], [150, 15]], "create_dagrun": [[144, 8], [144, 28]], "dag": [[140, 8], [140, 11]], "subdag": [[141, 8], [141, 14]], "subdag_task": [[142, 8], [142, 19]]}, "fn_var_occur": {"_get_dagrun": [["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_success", "self", "dag_run_success"], ["subdag_task", "_get_dagrun", "call_count"]], "context": [["context", "None", "None", "DEFAULT_DATE"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"]], "create_dagrun": [["subdag", "create_dagrun", "Mock"], ["subdag", "create_dagrun", "return_value", "self", "dag_run_running"], ["subdag", "create_dagrun", "assert_called_once_with", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "data_interval", "None", "conf", "None", "state", "State", "RUNNING", "external_trigger", "True"]], "dag": [["dag", "DAG", "default_args", "default_args"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"], ["subdag", "create_dagrun", "Mock"], ["subdag", "create_dagrun", "return_value", "self", "dag_run_running"], ["subdag", "create_dagrun", "assert_called_once_with", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "data_interval", "None", "conf", "None", "state", "State", "RUNNING", "external_trigger", "True"]], "subdag_task": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"], ["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_success", "self", "dag_run_success"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"], ["subdag_task", "_get_dagrun", "call_count"]]}, "name": "test_execute_create_dagrun_wait_until_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["subdag", "create_dagrun", "return_value", "self", "dag_run_running"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_success", "self", "dag_run_success"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_execute_create_dagrun_wait_until_success", "ret_exprs": [], "ret_type": "", "variables": {"_get_dagrun": "", "context": "", "create_dagrun": "", "dag": "", "subdag": "", "subdag_task": ""}, "variables_p": {"_get_dagrun": [["dict", 0.10838783253341636], ["bytes", 0.10032959731830887], ["grpy.core.models.User", 0.09881884978074416], ["str", 0.09593670277936849]], "context": [["list", 0.23014605085099568], ["Optional[decksite.data.models.person.Person]", 0.12096311774240531], ["datetime.datetime.datetime", 0.08723468273961847], ["Coroutine[Any, Any, None]", 0.08564126916374082], ["Dict[Tuple[Any, Any], Any]", 0.0848075525539495]], "create_dagrun": [["int", 0.20201568831035058]], "dag": [["str", 0.24260176350322787], ["int", 0.10233719431719708], ["list", 0.08823074705871066]], "subdag": [["str", 0.1999970521622627], ["Dict[str, str]", 0.09045636350813657], ["asgard.models.app.AppStats", 0.08256524282940983], ["Dict[str, int]", 0.08064859078376577]], "subdag_task": [["list", 0.1712818461037516], ["List[str]", 0.09841688331564122], ["Dict[str, Any]", 0.09374814509013593], ["str", 0.09216215081065467], ["dict", 0.09212877100253296], ["bytes", 0.08814486185982665], ["Type[MutableMapping[Any, Any]]", 0.08217214420195945]]}}, {"docstring": {"func": "When SubDagOperator executes, it creates a DagRun if there is no existing one", "long_descr": "and wait until the DagRun succeeds.", "ret": null}, "fn_lc": [[171, 4], [206, 54]], "fn_var_ln": {"_get_dagrun": [[184, 8], [184, 31]], "conf": [[176, 8], [176, 12]], "context": [[187, 8], [187, 15]], "create_dagrun": [[181, 8], [181, 28]], "dag": [[177, 8], [177, 11]], "subdag": [[178, 8], [178, 14]], "subdag_task": [[179, 8], [179, 19]]}, "fn_var_occur": {"_get_dagrun": [["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_success", "self", "dag_run_success"], ["subdag_task", "_get_dagrun", "call_count"]], "conf": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval", "conf", "conf"], ["subdag", "create_dagrun", "assert_called_once_with", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "data_interval", "None", "conf", "conf", "state", "State", "RUNNING", "external_trigger", "True"]], "context": [["context", "None", "None", "DEFAULT_DATE"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"]], "create_dagrun": [["subdag", "create_dagrun", "Mock"], ["subdag", "create_dagrun", "return_value", "self", "dag_run_running"], ["subdag", "create_dagrun", "assert_called_once_with", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "data_interval", "None", "conf", "conf", "state", "State", "RUNNING", "external_trigger", "True"]], "dag": [["dag", "DAG", "default_args", "default_args"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval", "conf", "conf"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval", "conf", "conf"], ["subdag", "create_dagrun", "Mock"], ["subdag", "create_dagrun", "return_value", "self", "dag_run_running"], ["subdag", "create_dagrun", "assert_called_once_with", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "data_interval", "None", "conf", "conf", "state", "State", "RUNNING", "external_trigger", "True"]], "subdag_task": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval", "conf", "conf"], ["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_success", "self", "dag_run_success"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"], ["subdag_task", "_get_dagrun", "call_count"]]}, "name": "test_execute_create_dagrun_with_conf", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["subdag", "create_dagrun", "return_value", "self", "dag_run_running"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_success", "self", "dag_run_success"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_execute_create_dagrun_with_conf", "ret_exprs": [], "ret_type": "", "variables": {"_get_dagrun": "", "conf": "", "context": "", "create_dagrun": "", "dag": "", "subdag": "", "subdag_task": ""}, "variables_p": {"_get_dagrun": [["dict", 0.10838783253341636], ["bytes", 0.10032959731830887], ["grpy.core.models.User", 0.09881884978074416], ["str", 0.09593670277936849]], "conf": [["Dict[str, Callable]", 0.24564642647877258], ["str", 0.17455553686119818], ["hub2labhook.github.models.evenGithubEvent", 0.0784803917699179]], "context": [["list", 0.23014605085099568], ["Optional[decksite.data.models.person.Person]", 0.12096311774240531], ["datetime.datetime.datetime", 0.08723468273961847], ["Coroutine[Any, Any, None]", 0.08564126916374082], ["Dict[Tuple[Any, Any], Any]", 0.0848075525539495]], "create_dagrun": [["int", 0.20201568831035058]], "dag": [["str", 0.24260176350322787], ["int", 0.10233719431719708], ["list", 0.08823074705871066]], "subdag": [["str", 0.24260176350322787], ["int", 0.10233719431719708], ["list", 0.08823074705871066]], "subdag_task": [["list", 0.17931556808134919], ["bytes", 0.11294156099713945], ["str", 0.09204503258866775], ["List[str]", 0.08652785619077161], ["dict", 0.08039795508742284]]}}, {"docstring": {"func": "When the DagRun failed during the execution, it raises an Airflow Exception.", "long_descr": null, "ret": null}, "fn_lc": [[208, 4], [231, 53]], "fn_var_ln": {"_get_dagrun": [[219, 8], [219, 31]], "context": [[222, 8], [222, 15]], "create_dagrun": [[216, 8], [216, 28]], "dag": [[212, 8], [212, 11]], "subdag": [[213, 8], [213, 14]], "subdag_task": [[214, 8], [214, 19]]}, "fn_var_occur": {"_get_dagrun": [["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_failed", "self", "dag_run_failed"]], "context": [["context", "None", "None", "DEFAULT_DATE"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"]], "create_dagrun": [["subdag", "create_dagrun", "Mock"], ["subdag", "create_dagrun", "return_value", "self", "dag_run_running"]], "dag": [["dag", "DAG", "default_args", "default_args"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"], ["subdag", "create_dagrun", "Mock"], ["subdag", "create_dagrun", "return_value", "self", "dag_run_running"]], "subdag_task": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"], ["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_failed", "self", "dag_run_failed"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"]]}, "name": "test_execute_dagrun_failed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["subdag", "create_dagrun", "return_value", "self", "dag_run_running"], ["subdag_task", "_get_dagrun", "side_effect", "None", "self", "dag_run_failed", "self", "dag_run_failed"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_execute_dagrun_failed", "ret_exprs": [], "ret_type": "", "variables": {"_get_dagrun": "", "context": "", "create_dagrun": "", "dag": "", "subdag": "", "subdag_task": ""}, "variables_p": {"_get_dagrun": [["dict", 0.10838783253341636], ["bytes", 0.10032959731830887], ["grpy.core.models.User", 0.09881884978074416], ["str", 0.09593670277936849]], "context": [["list", 0.23014605085099568], ["Optional[decksite.data.models.person.Person]", 0.12096311774240531], ["datetime.datetime.datetime", 0.08723468273961847], ["Coroutine[Any, Any, None]", 0.08564126916374082], ["Dict[Tuple[Any, Any], Any]", 0.0848075525539495]], "create_dagrun": [["int", 0.2168998141810079], ["raiden.utils.PaymentAmount", 0.09193717693667473]], "dag": [["str", 0.24260176350322787], ["int", 0.10233719431719708], ["list", 0.08823074705871066]], "subdag": [["str", 0.1999970521622627], ["Dict[str, str]", 0.09045636350813657], ["asgard.models.app.AppStats", 0.08256524282940983], ["Dict[str, int]", 0.08064859078376577]], "subdag_task": [["list", 0.1712818461037516], ["List[str]", 0.09841688331564122], ["Dict[str, Any]", 0.09374814509013593], ["str", 0.09216215081065467], ["dict", 0.09212877100253296], ["bytes", 0.08814486185982665], ["Type[MutableMapping[Any, Any]]", 0.08217214420195945]]}}, {"docstring": {"func": "When there is an existing DagRun in SUCCESS state, skip the execution.", "long_descr": null, "ret": null}, "fn_lc": [[233, 4], [256, 54]], "fn_var_ln": {"_get_dagrun": [[242, 8], [242, 31]], "context": [[245, 8], [245, 15]], "create_dagrun": [[240, 8], [240, 28]], "dag": [[237, 8], [237, 11]], "subdag": [[238, 8], [238, 14]], "subdag_task": [[241, 8], [241, 19]]}, "fn_var_occur": {"_get_dagrun": [["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "return_value", "self", "dag_run_success"], ["subdag_task", "_get_dagrun", "call_count"]], "context": [["context", "None", "None", "DEFAULT_DATE"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"]], "create_dagrun": [["subdag", "create_dagrun", "Mock"], ["subdag", "create_dagrun", "assert_not_called"]], "dag": [["dag", "DAG", "default_args", "default_args"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["subdag", "create_dagrun", "Mock"], ["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"], ["subdag", "create_dagrun", "assert_not_called"]], "subdag_task": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag", "poke_interval"], ["subdag_task", "_get_dagrun", "Mock"], ["subdag_task", "_get_dagrun", "return_value", "self", "dag_run_success"], ["subdag_task", "pre_execute", "context", "context"], ["subdag_task", "execute", "context", "context"], ["subdag_task", "post_execute", "context", "context"], ["subdag_task", "_get_dagrun", "call_count"]]}, "name": "test_execute_skip_if_dagrun_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["subdag_task", "_get_dagrun", "return_value", "self", "dag_run_success"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_execute_skip_if_dagrun_success", "ret_exprs": [], "ret_type": "", "variables": {"_get_dagrun": "", "context": "", "create_dagrun": "", "dag": "", "subdag": "", "subdag_task": ""}, "variables_p": {"_get_dagrun": [["str", 0.2967747652836885], ["bytes", 0.10031721912842495], ["Dict[str, Any]", 0.09847020370987113]], "context": [["list", 0.23014605085099568], ["Optional[decksite.data.models.person.Person]", 0.12096311774240531], ["datetime.datetime.datetime", 0.08723468273961847], ["Coroutine[Any, Any, None]", 0.08564126916374082], ["Dict[Tuple[Any, Any], Any]", 0.0848075525539495]], "create_dagrun": [["str", 0.2824818249185724], ["raiden.transfer.state.NettingChannelState", 0.10140876437809043], ["Dict[str, Union[Any, Any]]", 0.09456092645201439]], "dag": [["str", 0.24260176350322787], ["int", 0.10233719431719708], ["list", 0.08823074705871066]], "subdag": [], "subdag_task": [["list", 0.1712818461037516], ["List[str]", 0.09841688331564122], ["Dict[str, Any]", 0.09374814509013593], ["str", 0.09216215081065467], ["dict", 0.09212877100253296], ["bytes", 0.08814486185982665], ["Type[MutableMapping[Any, Any]]", 0.08217214420195945]]}}, {"docstring": {"func": "When there is an existing DagRun with failed state, reset the DagRun and the", "long_descr": "corresponding TaskInstances", "ret": null}, "fn_lc": [[258, 4], [287, 48]], "fn_var_ln": {"dummy_task": [[265, 16], [265, 26]], "dummy_task_instance": [[273, 13], [273, 32]], "sub_dagrun": [[266, 12], [266, 22]], "subdag_task": [[278, 16], [278, 27]]}, "fn_var_occur": {"dummy_task": [["dummy_task", "EmptyOperator", "task_id"], ["dummy_task_instance", "refresh_from_task", "dummy_task"]], "dummy_task_instance": [["dummy_task_instance", "sub_dagrun", "task_instances"], ["dummy_task_instance", "refresh_from_task", "dummy_task"], ["dummy_task_instance", "state", "State", "FAILED"], ["dummy_task_instance", "refresh_from_db"], ["dummy_task_instance", "state", "State", "NONE"]], "sub_dagrun": [["sub_dagrun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "state", "State", "FAILED", "external_trigger", "True"], ["dummy_task_instance", "sub_dagrun", "task_instances"], ["subdag_task", "_reset_dag_run_and_task_instances", "sub_dagrun", "execution_date", "DEFAULT_DATE"], ["sub_dagrun", "refresh_from_db"], ["sub_dagrun", "state", "State", "RUNNING"]], "subdag_task": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "poke_interval"], ["subdag_task", "_reset_dag_run_and_task_instances", "sub_dagrun", "execution_date", "DEFAULT_DATE"]]}, "name": "test_rerun_failed_subdag", "params": {"dag_maker": "", "self": ""}, "params_descr": {"dag_maker": "", "self": ""}, "params_occur": {"dag_maker": [["dag_maker", "default_args", "default_args", "session", "session", "subdag"], ["sub_dagrun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "state", "State", "FAILED", "external_trigger", "True"], ["dag_maker", "default_args", "default_args", "session", "session"], ["dag_maker", "create_dagrun", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED"]], "self": []}, "params_p": {"args": [], "dag_maker": [["Dict[str, Any]", 0.10327933664694848], ["managers.models.Project", 0.08360104267488312]], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_rerun_failed_subdag", "ret_exprs": [], "ret_type": "", "variables": {"dummy_task": "", "dummy_task_instance": "", "sub_dagrun": "", "subdag_task": ""}, "variables_p": {"dummy_task": [["list", 0.20543576353104961], ["List[str]", 0.11291688621223121], ["str", 0.09765055691601318], ["List[aw_core.models.Event]", 0.08575448149538156], ["List[Tuple[int, Any]]", 0.08288833172298546]], "dummy_task_instance": [["RuntimeError", 0.0940963219688881]], "sub_dagrun": [["Union[Literal, str]", 0.13309787863234943], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 0.1163088643260994], ["byceps.services.party.transfer.models.Party", 0.09904738225738319], ["Sequence[str]", 0.09255784521405692], ["Type[List[Any]]", 0.08321124119181557]], "subdag_task": [["list", 0.14910932524248136], ["str", 0.10518430964834191], ["bytes", 0.10473828797282092], ["List[str]", 0.10299192125811757], ["Dict[str, Any]", 0.09103039899571135], ["kippo.tasks.models.KippoTask", 0.07721386571909529]]}}, {"docstring": {"func": "Tests that skipped state of leaf tasks propagates to the parent dag.", "long_descr": "Note that the skipped state propagation only takes affect when the dagrun's state is SUCCESS.", "ret": null}, "fn_lc": [[301, 4], [349, 41]], "fn_var_ln": {"_get_dagrun": [[329, 8], [329, 31]], "context": [[336, 8], [336, 15]], "dag_run": [[327, 8], [327, 15]], "dummy_dag_task": [[325, 12], [325, 26]], "dummy_subdag_tasks": [[315, 12], [315, 30]], "side_effect": [[331, 8], [331, 42]], "subdag_task": [[319, 12], [319, 23]]}, "fn_var_occur": {"_get_dagrun": [["subdag_task", "_get_dagrun", "Mock", "return_value", "self", "dag_run_success"]], "context": [["context", "DEFAULT_DATE", "dag_run", "subdag_task", "mock", "MagicMock", "map_index"], ["subdag_task", "post_execute", "context"], ["mock_skip", "assert_called_once_with", "context", "context", "dummy_dag_task", "map_index"]], "dag_run": [["dag_run", "dag_maker", "create_dagrun", "execution_date", "DEFAULT_DATE"], ["mock_get_task_instance", "side_effect", "TaskInstance", "task", "task", "run_id", "dag_run", "run_id", "state", "state", "task", "state", "zip", "dummy_subdag_tasks", "states"], ["context", "DEFAULT_DATE", "dag_run", "subdag_task", "mock", "MagicMock", "map_index"]], "dummy_dag_task": [["dummy_dag_task", "EmptyOperator", "task_id"], ["subdag_task", "dummy_dag_task"], ["mock_skip", "assert_called_once_with", "context", "context", "dummy_dag_task", "map_index"]], "dummy_subdag_tasks": [["dummy_subdag_tasks", "EmptyOperator", "task_id", "i", "i", "range", "len", "states"], ["mock_get_task_instance", "side_effect", "TaskInstance", "task", "task", "run_id", "dag_run", "run_id", "state", "state", "task", "state", "zip", "dummy_subdag_tasks", "states"]], "side_effect": [["mock_get_task_instance", "side_effect", "TaskInstance", "task", "task", "run_id", "dag_run", "run_id", "state", "state", "task", "state", "zip", "dummy_subdag_tasks", "states"]], "subdag_task": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "poke_interval", "propagate_skipped_state", "propagate_option"], ["subdag_task", "dummy_dag_task"], ["subdag_task", "_get_dagrun", "Mock", "return_value", "self", "dag_run_success"], ["context", "DEFAULT_DATE", "dag_run", "subdag_task", "mock", "MagicMock", "map_index"], ["subdag_task", "post_execute", "context"]]}, "name": "test_subdag_with_propagate_skipped_state", "params": {"dag_maker": "", "mock_get_task_instance": "", "mock_skip": "", "propagate_option": "", "self": "", "skip_parent": "", "states": ""}, "params_descr": {"dag_maker": "", "mock_get_task_instance": "", "mock_skip": "", "propagate_option": "", "self": "", "skip_parent": "", "states": ""}, "params_occur": {"dag_maker": [["dag_maker", "default_args", "default_args", "subdag"], ["dag_maker", "create_dagrun", "execution_date", "DEFAULT_DATE"], ["dag_maker", "default_args", "default_args"], ["dag_run", "dag_maker", "create_dagrun", "execution_date", "DEFAULT_DATE"]], "mock_get_task_instance": [["mock_get_task_instance", "side_effect", "TaskInstance", "task", "task", "run_id", "dag_run", "run_id", "state", "state", "task", "state", "zip", "dummy_subdag_tasks", "states"]], "mock_skip": [["mock_skip", "assert_called_once_with", "context", "context", "dummy_dag_task", "map_index"], ["mock_skip", "assert_not_called"]], "propagate_option": [["subdag_task", "SubDagOperator", "task_id", "subdag", "subdag", "poke_interval", "propagate_skipped_state", "propagate_option"]], "self": [["subdag_task", "_get_dagrun", "Mock", "return_value", "self", "dag_run_success"]], "skip_parent": [], "states": [["dummy_subdag_tasks", "EmptyOperator", "task_id", "i", "i", "range", "len", "states"], ["mock_get_task_instance", "side_effect", "TaskInstance", "task", "task", "run_id", "dag_run", "run_id", "state", "state", "task", "state", "zip", "dummy_subdag_tasks", "states"]]}, "params_p": {"args": [], "dag_maker": [], "kwargs": [], "mock_get_task_instance": [["str", 0.11185938552475035], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.0988403246809971], ["unittesmock.Mock", 0.094239769204907]], "mock_skip": [["unittesmock.Mock", 0.08275355643341718]], "propagate_option": [], "self": [], "skip_parent": [["unittesmock.Mock", 0.44134968378186834], ["mock.Mock", 0.22869030942627566]], "states": []}, "q_name": "TestSubDagOperator.test_subdag_with_propagate_skipped_state", "ret_exprs": [], "ret_type": "", "variables": {"_get_dagrun": "", "context": "", "dag_run": "", "dummy_dag_task": "", "dummy_subdag_tasks": "", "side_effect": "", "subdag_task": ""}, "variables_p": {"_get_dagrun": [["unittesmock.Mock", 0.09989201193100337]], "context": [["raiden.utils.PaymentID", 0.1271301578079644], ["raiden.utils.TokenAddress", 0.10208805026976922], ["raiden.transfer.state.ChainState", 0.08265411617981615]], "dag_run": [["str", 0.27919564790190743], ["Dict[str, Any]", 0.1062305742775699]], "dummy_dag_task": [["list", 0.13011374767760495], ["List[Tuple[int, Any]]", 0.10867830317770924], ["str", 0.10159954558985074], ["int", 0.09921106763894166], ["Dict[str, Any]", 0.09306256563463888]], "dummy_subdag_tasks": [["list", 0.5002995052840429], ["int", 0.19358051887647537], ["List[Tuple[Any, Any, Any]]", 0.11084969379113331], ["Dict[int, Any]", 0.10143932034568602]], "side_effect": [["str", 0.3859765713268234], ["List[str]", 0.2978054606145976], ["dict", 0.10521866072244548], ["float", 0.08925371367787145]], "subdag_task": [["raiden.transfer.state.HopState", 0.21163748798660958], ["int", 0.1884651611600544], ["bytearray", 0.15840416472299157], ["list", 0.107404741529998], ["List[float]", 0.07325430077159853], ["List[Tuple[Any, Any, Any]]", 0.07272319878825176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[351, 4], [358, 58]], "fn_var_ln": {"dag": [[352, 8], [352, 11]], "subdag": [[353, 8], [353, 14]], "warning_message": [[354, 8], [354, 23]]}, "fn_var_occur": {"dag": [["dag", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag"]], "subdag": [["subdag", "DAG", "default_args", "default_args"], ["SubDagOperator", "task_id", "subdag", "subdag", "dag", "dag"]], "warning_message": [["warning_message", "str", "warnings", "message"]]}, "name": "test_deprecation_warning", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubDagOperator.test_deprecation_warning", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "subdag": "", "warning_message": ""}, "variables_p": {"dag": [["int", 0.20243428353245396], ["str", 0.19555150382392336]], "subdag": [["int", 0.20243428353245396], ["str", 0.19555150382392336]], "warning_message": [["float", 0.49999999992967786], ["Dict[str, Tuple[int, str]]", 0.49999999992967786], ["str", 8.79027325566253e-11], ["Counter[str]", 3.516109302265012e-11], ["bool", 1.758054651132506e-11]]}}], "name": "TestSubDagOperator", "q_name": "TestSubDagOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "Mock", "pytest", "airflow", "airflow", "exceptions", "AirflowException", "airflow", "models", "DAG", "DagRun", "TaskInstance", "airflow", "operators", "empty", "EmptyOperator", "airflow", "operators", "subdag", "SkippedStatePropagationOptions", "SubDagOperator", "airflow", "utils", "session", "create_session", "airflow", "utils", "state", "State", "airflow", "utils", "timezone", "datetime", "airflow", "utils", "types", "DagRunType", "tests", "test_utils", "db", "clear_db_runs"], "mod_var_ln": {"DEFAULT_DATE": [[36, 0], [36, 12]], "default_args": [[38, 0], [38, 12]]}, "mod_var_occur": {"DEFAULT_DATE": [["default_args", "DEFAULT_DATE"], ["context", "None", "None", "DEFAULT_DATE"], ["subdag", "create_dagrun", "assert_called_once_with", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "data_interval", "None", "conf", "None", "state", "State", "RUNNING", "external_trigger", "True"], ["context", "None", "None", "DEFAULT_DATE"], ["subdag", "create_dagrun", "assert_called_once_with", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "data_interval", "None", "conf", "conf", "state", "State", "RUNNING", "external_trigger", "True"], ["context", "None", "None", "DEFAULT_DATE"], ["context", "None", "None", "DEFAULT_DATE"], ["sub_dagrun", "dag_maker", "create_dagrun", "run_type", "DagRunType", "SCHEDULED", "execution_date", "DEFAULT_DATE", "state", "State", "FAILED", "external_trigger", "True"], ["dag_maker", "create_dagrun", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED"], ["subdag_task", "_reset_dag_run_and_task_instances", "sub_dagrun", "execution_date", "DEFAULT_DATE"], ["dag_maker", "create_dagrun", "execution_date", "DEFAULT_DATE"], ["dag_run", "dag_maker", "create_dagrun", "execution_date", "DEFAULT_DATE"], ["context", "DEFAULT_DATE", "dag_run", "subdag_task", "mock", "MagicMock", "map_index"]], "default_args": [["dag", "DAG", "default_args", "default_args"], ["subdag_good", "DAG", "default_args", "default_args"], ["subdag_bad1", "DAG", "default_args", "default_args"], ["subdag_bad2", "DAG", "default_args", "default_args"], ["subdag_bad3", "DAG", "default_args", "default_args"], ["DAG", "default_args", "default_args", "dag"], ["subdag", "DAG", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["subdag", "DAG", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["subdag", "DAG", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["subdag", "DAG", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["subdag", "DAG", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["subdag", "DAG", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["subdag", "DAG", "default_args", "default_args"], ["dag_maker", "default_args", "default_args", "session", "session", "subdag"], ["dag_maker", "default_args", "default_args", "session", "session"], ["dag_maker", "default_args", "default_args", "subdag"], ["dag_maker", "default_args", "default_args"], ["dag", "DAG", "default_args", "default_args"], ["subdag", "DAG", "default_args", "default_args"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 82}, "session_id": "d5MzSEjFzbSpmUxhFY4Ee-E3BOZXDrLKTRW18a3imM4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "default_args": ""}, "variables_p": {"DEFAULT_DATE": [["Optional[Tuple[str, int]]", 0.29412544377589905], ["Exception", 0.13334617739158727], ["Optional[list]", 0.10161058055024698], ["Optional[List]", 0.09431029069419736], ["Optional[str]", 0.0916723387416934], ["Optional[raiden.utils.BlockNumber]", 0.08896845549465494]], "default_args": [["bool", 0.1974193124373484], ["Dict[int, Any]", 0.18868153568691387], ["Dict[str, str]", 0.18868153568691387], ["dict", 0.1395343633544742], ["str", 0.10013516465522873], ["Tuple[Tuple[Literal, Literal], Tuple[Literal, Literal], Tuple[Literal, Literal], Tuple[Literal, Literal]]", 0.09434076784345694], ["Dict[str, Dict[str, Any]]", 0.0912073203356641]]}}}