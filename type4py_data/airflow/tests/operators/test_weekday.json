{"error": null, "response": {"classes": [{"cls_lc": [[53, 0], [290, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [63, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.setup_class", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [73, 28]], "fn_var_ln": {"branch_1": [[71, 8], [71, 21]], "branch_2": [[72, 8], [72, 21]], "branch_3": [[73, 8], [73, 21]], "dag": [[66, 8], [66, 16]]}, "fn_var_occur": {"branch_1": [["self", "branch_1", "EmptyOperator", "task_id", "dag", "self", "dag"]], "branch_2": [["self", "branch_2", "EmptyOperator", "task_id", "dag", "self", "dag"]], "branch_3": [["self", "branch_3", "None"]], "dag": [["self", "dag", "DAG", "start_date", "DEFAULT_DATE", "schedule", "INTERVAL"], ["self", "branch_1", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_2", "EmptyOperator", "task_id", "dag", "self", "dag"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "DAG", "start_date", "DEFAULT_DATE", "schedule", "INTERVAL"], ["self", "branch_1", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_2", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_3", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"branch_1": "", "branch_2": "", "branch_3": "", "dag": ""}, "variables_p": {"branch_1": [["Type[str]", 0.384835243091166], ["float", 0.24845858813058674], ["Dict[str, int]", 0.18041701700038668], ["Dict[str, str]", 0.09987424077447364], ["datetime.datetime.datetime", 0.08641491100338697]], "branch_2": [["Type[str]", 0.384835243091166], ["float", 0.24845858813058674], ["Dict[str, int]", 0.18041701700038668], ["Dict[str, str]", 0.09987424077447364], ["datetime.datetime.datetime", 0.08641491100338697]], "branch_3": [["List[str]", 0.21166412514430172], ["str", 0.18971644641062513], ["dict", 0.10110266629121624], ["Callable", 0.09790266799967748], ["bool", 0.08268369121655958]], "dag": [["str", 0.2363805632309794], ["datetime.datetime", 0.11983688309690908], ["Tuple[Literal, Literal, Literal]", 0.09775670591924222], ["int", 0.09003007404463655], ["Dict[str, Optional[str]]", 0.08901046014553347], ["Type[Tuple[int, int]]", 0.08751614371548286], ["datetime.date", 0.08503938170803677]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [79, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Helper that asserts task instances with a given id are in a given state", "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [91, 61]], "fn_var_ln": {"assert_msg": [[90, 16], [90, 26]], "expected_state": [[86, 16], [86, 30]], "tis": [[83, 8], [83, 11]]}, "fn_var_occur": {"assert_msg": [["assert_msg", "ti", "task_id", "ti", "state", "expected_state"], ["ti", "state", "expected_state", "assert_msg"]], "expected_state": [["expected_state", "task_ids_to_states", "ti", "task_id"], ["assert_msg", "ti", "task_id", "ti", "state", "expected_state"], ["ti", "state", "expected_state", "assert_msg"]], "tis": [["tis", "dr", "get_task_instances"]]}, "name": "_assert_task_ids_match_states", "params": {"dr": "", "self": "", "task_ids_to_states": ""}, "params_descr": {"dr": "", "self": "", "task_ids_to_states": ""}, "params_occur": {"dr": [["tis", "dr", "get_task_instances"]], "self": [], "task_ids_to_states": [["expected_state", "task_ids_to_states", "ti", "task_id"]]}, "params_p": {"args": [], "dr": [["int", 0.2755505789219385], ["str", 0.1627747661131197], ["zerver.models.UserProfile", 0.11553079779233122], ["raiden.utils.OneToNAddress", 0.08831364212779905], ["raiden.utils.InitiatorAddress", 0.08831364212779905], ["raiden.transfer.state.ChainState", 0.08831364212779905], ["raiden.utils.TokenNetworkAddress", 0.08831364212779905]], "kwargs": [], "self": [], "task_ids_to_states": [["int", 0.4032926840905009], ["dict", 0.10394612126020161], ["List[Dict[str, Any]]", 0.09775312844463435], ["str", 0.09340924455700207]]}, "q_name": "TestBranchDayOfWeekOperator._assert_task_ids_match_states", "ret_exprs": [], "ret_type": "", "variables": {"assert_msg": "", "expected_state": "", "tis": ""}, "variables_p": {"assert_msg": [["Dict[str, Any]", 0.08654773678882255], ["set", 0.08643896530713142], ["int", 0.08278570311370972]], "expected_state": [["Dict[str, Any]", 0.2741902476306033], ["list", 0.23760429126793886], ["List[str]", 0.1051216158260717], ["str", 0.09155820742868122]], "tis": [["str", 0.20525016768842724], ["Dict[str, Union[Any, Any]]", 0.10478446686768929], ["decksite.data.models.person.Person", 0.09944637103010172], ["int", 0.0941002144741875], ["Dict[str, str]", 0.09345818467790688], ["lms.lmsdb.models.Solution", 0.09204170931108901]]}}, {"docstring": {"func": "Checks if BranchDayOfWeekOperator follows true branch", "long_descr": null, "ret": null}, "fn_lc": [[97, 4], [131, 9]], "fn_var_ln": {"branch_3": [[110, 8], [110, 21]], "branch_op": [[100, 8], [100, 17]], "dr": [[114, 8], [114, 10]]}, "fn_var_occur": {"branch_3": [["self", "branch_3", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_3", "set_upstream", "branch_op"]], "branch_op": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "weekday", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["self", "branch_3", "set_upstream", "branch_op"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"]], "dr": [["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["self", "_assert_task_ids_match_states", "dr", "State", "SUCCESS", "State", "NONE", "State", "NONE", "State", "SKIPPED"]]}, "name": "test_branch_follow_true", "params": {"self": "", "weekday": ""}, "params_descr": {"self": "", "weekday": ""}, "params_occur": {"self": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "weekday", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["self", "branch_3", "EmptyOperator", "task_id", "dag", "self", "dag"], ["self", "branch_3", "set_upstream", "branch_op"], ["self", "dag", "clear"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["self", "_assert_task_ids_match_states", "dr", "State", "SUCCESS", "State", "NONE", "State", "NONE", "State", "SKIPPED"]], "weekday": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "weekday", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "weekday": [["str", 0.09200849643868579]]}, "q_name": "TestBranchDayOfWeekOperator.test_branch_follow_true", "ret_exprs": [], "ret_type": "", "variables": {"branch_3": "", "branch_op": "", "dr": ""}, "variables_p": {"branch_3": [["str", 0.31752488428657966], ["float", 0.17961328836316265], ["int", 0.10591725239248818], ["List[str]", 0.10469631041840136]], "branch_op": [["int", 0.41323859038076105], ["str", 0.17795871476250913], ["Dict[str, Dict[str, Any]]", 0.1259557600249362], ["Dict[str, Union[datetime.timedelta, str]]", 0.10232798340509389], ["Dict[str, Any]", 0.09130739984239203]], "dr": [["str", 0.2441179457669159], ["Set[str]", 0.12370998491406694], ["Dict[str, Any]", 0.10873238349187403], ["byceps.services.party.transfer.models.Party", 0.08975031643296137], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 0.08938681542764544]]}}, {"docstring": {"func": "Checks if BranchDayOfWeekOperator follows true branch when set use_task_logical_date", "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [166, 9]], "fn_var_ln": {"branch_op": [[137, 8], [137, 17]], "dr": [[150, 8], [150, 10]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "use_task_logical_date", "True", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"]], "dr": [["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["self", "_assert_task_ids_match_states", "dr", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]]}, "name": "test_branch_follow_true_with_execution_date", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "use_task_logical_date", "True", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["self", "dag", "clear"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["self", "_assert_task_ids_match_states", "dr", "State", "SUCCESS", "State", "NONE", "State", "SKIPPED"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.test_branch_follow_true_with_execution_date", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "dr": ""}, "variables_p": {"branch_op": [["int", 0.8519535576807815], ["frozenset[int]", 0.07441930015768403]], "dr": [["str", 0.2441179457669159], ["Set[str]", 0.12370998491406694], ["Dict[str, Any]", 0.10873238349187403], ["byceps.services.party.transfer.models.Party", 0.08975031643296137], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 0.08938681542764544]]}}, {"docstring": {"func": "Checks if BranchDayOfWeekOperator follow false branch", "long_descr": null, "ret": null}, "fn_lc": [[169, 4], [200, 9]], "fn_var_ln": {"branch_op": [[172, 8], [172, 17]], "dr": [[184, 8], [184, 10]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"]], "dr": [["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["self", "_assert_task_ids_match_states", "dr", "State", "SUCCESS", "State", "SKIPPED", "State", "NONE"]]}, "name": "test_branch_follow_false", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["self", "dag", "clear"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["self", "_assert_task_ids_match_states", "dr", "State", "SUCCESS", "State", "SKIPPED", "State", "NONE"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.test_branch_follow_false", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "dr": ""}, "variables_p": {"branch_op": [["int", 0.9007290658126145], ["Dict[str, Dict[str, Any]]", 0.09927093418738542]], "dr": [["str", 0.2441179457669159], ["Set[str]", 0.12370998491406694], ["Dict[str, Any]", 0.10873238349187403], ["byceps.services.party.transfer.models.Party", 0.08975031643296137], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 0.08938681542764544]]}}, {"docstring": {"func": "Check if BranchDayOfWeekOperator raises exception on missing weekday", "long_descr": null, "ret": null}, "fn_lc": [[202, 4], [210, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_branch_with_no_weekday", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.test_branch_with_no_weekday", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if BranchDayOfWeekOperator raises exception on unsupported weekday type", "long_descr": null, "ret": null}, "fn_lc": [[212, 4], [227, 13]], "fn_var_ln": {"invalid_week_day": [[214, 8], [214, 24]]}, "fn_var_occur": {"invalid_week_day": [["pytest", "raises", "TypeError", "match", "type", "invalid_week_day"], ["BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "invalid_week_day", "dag", "self", "dag"]]}, "name": "test_branch_with_invalid_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "invalid_week_day", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.test_branch_with_invalid_type", "ret_exprs": [], "ret_type": "", "variables": {"invalid_week_day": ""}, "variables_p": {"invalid_week_day": [["int", 0.349864333134831], ["str", 0.09625255187802066]]}}, {"docstring": {"func": "Check if BranchDayOfWeekOperator raises exception on wrong value of weekday", "long_descr": null, "ret": null}, "fn_lc": [[237, 4], [246, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_weekday_branch_invalid_weekday_value", "params": {"_": "", "fail_msg": "", "self": "", "week_day": ""}, "params_descr": {"_": "", "fail_msg": "", "self": "", "week_day": ""}, "params_occur": {"_": [], "fail_msg": [["pytest", "raises", "AttributeError", "match", "fail_msg"]], "self": [["BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "week_day", "dag", "self", "dag"]], "week_day": [["BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "week_day", "dag", "self", "dag"]]}, "params_p": {"_": [["bool", 0.2300641193356362], ["Callable", 0.0819779173243482], ["int", 0.0766880397785454]], "args": [], "fail_msg": [["str", 0.9145800259863299], ["bool", 0.08541997401367023]], "kwargs": [], "self": [], "week_day": [["str", 0.22530428038431102], ["dict", 0.12724787547865565], ["raiden.transfer.state.BalanceProofUnsignedState", 0.09407838469119247]]}, "q_name": "TestBranchDayOfWeekOperator.test_weekday_branch_invalid_weekday_value", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Check if BranchDayOfWeekOperator push to xcom value of follow_task_ids_if_true", "long_descr": null, "ret": null}, "fn_lc": [[249, 4], [275, 73]], "fn_var_ln": {"branch_op": [[251, 8], [251, 17]], "dr": [[263, 8], [263, 10]], "tis": [[272, 8], [272, 11]]}, "fn_var_occur": {"branch_op": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"]], "dr": [["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["tis", "dr", "get_task_instances"]], "tis": [["tis", "dr", "get_task_instances"]]}, "name": "test_branch_xcom_push_true_branch", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["branch_op", "BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "dag", "self", "dag"], ["self", "branch_1", "set_upstream", "branch_op"], ["self", "branch_2", "set_upstream", "branch_op"], ["self", "dag", "clear"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.test_branch_xcom_push_true_branch", "ret_exprs": [], "ret_type": "", "variables": {"branch_op": "", "dr": "", "tis": ""}, "variables_p": {"branch_op": [["int", 0.9007290658126145], ["Dict[str, Dict[str, Any]]", 0.09927093418738542]], "dr": [["str", 0.25166854163308605], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 0.10234688337123576], ["Set[str]", 0.0974968642686453], ["backend.api.models.group.Group", 0.09476301100475927], ["Dict[str, Any]", 0.09110568499635444], ["byceps.services.party.transfer.models.Party", 0.08665817349077182]], "tis": [["str", 0.20525016768842724], ["Dict[str, Union[Any, Any]]", 0.10478446686768929], ["decksite.data.models.person.Person", 0.09944637103010172], ["int", 0.0941002144741875], ["Dict[str, str]", 0.09345818467790688], ["lms.lmsdb.models.Solution", 0.09204170931108901]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[277, 4], [290, 58]], "fn_var_ln": {"warning_message": [[278, 8], [278, 23]]}, "fn_var_occur": {"warning_message": [["warning_message", "str", "warnings", "message"]]}, "name": "test_deprecation_warning", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["BranchDayOfWeekOperator", "task_id", "follow_task_ids_if_true", "follow_task_ids_if_false", "week_day", "use_task_execution_day", "True", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBranchDayOfWeekOperator.test_deprecation_warning", "ret_exprs": [], "ret_type": "", "variables": {"warning_message": ""}, "variables_p": {"warning_message": [["float", 0.49999999992967786], ["Dict[str, Tuple[int, str]]", 0.49999999992967786], ["str", 8.79027325566253e-11], ["Counter[str]", 3.516109302265012e-11], ["bool", 1.758054651132506e-11]]}}], "name": "TestBranchDayOfWeekOperator", "q_name": "TestBranchDayOfWeekOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "pytest", "time_machine", "airflow", "exceptions", "AirflowException", "airflow", "models", "DAG", "DagRun", "TaskInstance", "TI", "XCom", "airflow", "operators", "empty", "EmptyOperator", "airflow", "operators", "weekday", "BranchDayOfWeekOperator", "airflow", "utils", "timezone", "airflow", "utils", "session", "create_session", "airflow", "utils", "state", "State", "airflow", "utils", "weekday", "WeekDay"], "mod_var_ln": {"DEFAULT_DATE": [[34, 0], [34, 12]], "INTERVAL": [[35, 0], [35, 8]], "TEST_CASE_BRANCH_FOLLOW_TRUE": [[36, 0], [36, 28]]}, "mod_var_occur": {"DEFAULT_DATE": [["self", "dag", "DAG", "start_date", "DEFAULT_DATE", "schedule", "INTERVAL"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["dr", "self", "dag", "create_dagrun", "run_id", "start_date", "timezone", "utcnow", "execution_date", "DEFAULT_DATE", "state", "State", "RUNNING"], ["branch_op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"]], "INTERVAL": [["self", "dag", "DAG", "start_date", "DEFAULT_DATE", "schedule", "INTERVAL"]], "TEST_CASE_BRANCH_FOLLOW_TRUE": []}, "no_types_annot": {"D": 0, "I": 0, "U": 41}, "session_id": "uVE5e4xZIK0p7W6XCeO1DxSUahf9i3j44NkRvud6E-Y", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "INTERVAL": "", "TEST_CASE_BRANCH_FOLLOW_TRUE": ""}, "variables_p": {"DEFAULT_DATE": [["datetime.datetime.datetime", 0.3806925036310527], ["datetime.datetime", 0.19714527153724393], ["datetime.date", 0.11795943670228522], ["datetime.datetime.timezone", 0.10301310698802105], ["int", 0.09564876721348159]], "INTERVAL": [["str", 0.6223006700556531], ["datetime.datetime", 0.23596186321175852], ["datetime.datetime.datetime", 0.0657290663399593]], "TEST_CASE_BRANCH_FOLLOW_TRUE": [["classmethod", 0.3376216704267892], ["str", 0.23449358451683977], ["bool", 0.17485858491494569], ["set", 0.15398752380778877], ["List[Union[Any, Any]]", 0.09903863633363642]]}}}