{"error": null, "response": {"classes": [{"cls_lc": [[41, 0], [179, 95]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [45, 89]], "fn_var_ln": {"base_log_folder": [[43, 8], [43, 28]], "oss_log_folder": [[44, 8], [44, 27]], "oss_task_handler": [[45, 8], [45, 29]]}, "fn_var_occur": {"base_log_folder": [["self", "base_log_folder"], ["self", "oss_task_handler", "OSSTaskHandler", "self", "base_log_folder", "self", "oss_log_folder"]], "oss_log_folder": [["self", "oss_log_folder", "MOCK_BUCKET_NAME"], ["self", "oss_task_handler", "OSSTaskHandler", "self", "base_log_folder", "self", "oss_log_folder"]], "oss_task_handler": [["self", "oss_task_handler", "OSSTaskHandler", "self", "base_log_folder", "self", "oss_log_folder"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "base_log_folder"], ["self", "oss_log_folder", "MOCK_BUCKET_NAME"], ["self", "oss_task_handler", "OSSTaskHandler", "self", "base_log_folder", "self", "oss_log_folder"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSSTaskHandler.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"base_log_folder": "", "oss_log_folder": "", "oss_task_handler": ""}, "variables_p": {"base_log_folder": [["str", 0.5424075428438587], ["bytes", 0.26423051088681127], ["dict", 0.10710765379367825], ["Dict[Tuple[str, str], str]", 0.08625429247565183]], "oss_log_folder": [["str", 0.7995672590386343], ["Tuple[str]", 0.10206769402586056], ["Optional[str]", 0.0983650469355051]], "oss_task_handler": [["int", 0.16067408929407975], ["dict", 0.0712969063678162]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [59, 23]], "fn_var_ln": {"raw": [[56, 8], [56, 14]], "ti": [[49, 18], [49, 20]], "try_number": [[55, 8], [55, 21]]}, "fn_var_occur": {"raw": [["ti", "raw", "False"]], "ti": [["self", "ti", "ti", "create_task_instance", "dag_id", "task_id", "execution_date", "datetime", "state", "TaskInstanceState", "RUNNING"], ["ti", "try_number"], ["ti", "raw", "False"]], "try_number": [["ti", "try_number"]]}, "name": "task_instance", "params": {"create_task_instance": "", "self": ""}, "params_descr": {"create_task_instance": "", "self": ""}, "params_occur": {"create_task_instance": [["self", "ti", "ti", "create_task_instance", "dag_id", "task_id", "execution_date", "datetime", "state", "TaskInstanceState", "RUNNING"]], "self": [["self", "ti", "ti", "create_task_instance", "dag_id", "task_id", "execution_date", "datetime", "state", "TaskInstanceState", "RUNNING"]]}, "params_p": {"args": [], "create_task_instance": [["Iterable[Callable]", 0.14457225837750806], ["str", 0.09011157012253485], ["Callable", 0.08805822592913083], ["Dict[str, Any]", 0.08601804915909649]], "kwargs": [], "self": []}, "q_name": "TestOSSTaskHandler.task_instance", "ret_exprs": [], "ret_type": "", "variables": {"raw": "", "ti": "", "try_number": ""}, "variables_p": {"raw": [["List[str]", 0.49999999997058747], ["str", 2.0149264789844944e-11], ["bool", 1.9339109735866804e-11], ["Dict[str, bool]", 9.880922464997032e-12], ["List[Tuple[Any, Any]]", 9.458187270869773e-12]], "ti": [["str", 0.4723057274956004], ["int", 0.3617199956966709], ["list", 0.08622483238603908]], "try_number": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [72, 71]], "fn_var_ln": {"return_value": [[65, 8], [65, 34]]}, "fn_var_occur": {"return_value": [["mock_conf_get", "return_value"]]}, "name": "test_hook", "params": {"mock_conf_get": "", "mock_service": "", "self": ""}, "params_descr": {"mock_conf_get": "", "mock_service": "", "self": ""}, "params_occur": {"mock_conf_get": [["mock_conf_get", "return_value"], ["mock_conf_get", "assert_called_once_with"]], "mock_service": [["mock_service", "assert_called_once_with", "oss_conn_id"]], "self": [["self", "oss_task_handler", "hook"]]}, "params_p": {"args": [], "kwargs": [], "mock_conf_get": [], "mock_service": [], "self": []}, "q_name": "TestOSSTaskHandler.test_hook", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.2310538081472759], ["float", 0.2148768641748539], ["List[Tuple[str, str, bytes]]", 0.09790772925240514], ["cmk.utils.structured_data.Numeration", 0.09415278824922355], ["Tuple[int, int]", 0.09267950398663324], ["int", 0.09266991817001902], ["tests.mock.zwave.MockNode", 0.08900189597391767], ["List[str]", 0.08765749204567162]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [78, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_oss_log_exists", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with"], ["mock_service", "return_value", "key_exist", "assert_called_once_with", "MOCK_BUCKET_NAME"]], "self": [["self", "oss_task_handler", "oss_log_exists"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSTaskHandler.test_oss_log_exists", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [84, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_oss_read", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with"], ["mock_service", "return_value", "read_key", "MOCK_BUCKET_NAME"]], "self": [["self", "oss_task_handler", "oss_read"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSTaskHandler.test_oss_read", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[88, 4], [102, 9]], "fn_var_ln": {"return_value": [[90, 8], [90, 40]]}, "fn_var_occur": {"return_value": [["mock_oss_log_exists", "return_value", "True"], ["mock_service", "return_value", "head_key", "return_value", "content_length"], ["mock_service", "return_value", "head_key", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]]}, "name": "test_oss_write_into_remote_existing_file_via_append", "params": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_descr": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_occur": {"mock_oss_log_exists": [["mock_oss_log_exists", "return_value", "True"], ["mock_oss_log_exists", "assert_called_once_with"]], "mock_service": [["mock_service", "return_value", "head_key", "return_value", "content_length"], ["mock_service", "call_count"], ["mock_service", "return_value", "head_key", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]], "self": [["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_oss_log_exists": [["mock.MagicMock", 0.10041968026971701]], "mock_service": [], "self": []}, "q_name": "TestOSSTaskHandler.test_oss_write_into_remote_existing_file_via_append", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["tests.utils.MockCoroutine", 0.12722539679691844], ["Optional[bytes]", 0.09246757120166452]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [119, 9]], "fn_var_ln": {"return_value": [[108, 8], [108, 40]]}, "fn_var_occur": {"return_value": [["mock_oss_log_exists", "return_value", "False"], ["mock_service", "return_value", "head_key", "assert_not_called"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]]}, "name": "test_oss_write_into_remote_non_existing_file_via_append", "params": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_descr": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_occur": {"mock_oss_log_exists": [["mock_oss_log_exists", "return_value", "False"], ["mock_oss_log_exists", "assert_called_once_with"]], "mock_service": [["mock_service", "call_count"], ["mock_service", "return_value", "head_key", "assert_not_called"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]], "self": [["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_oss_log_exists": [], "mock_service": [], "self": []}, "q_name": "TestOSSTaskHandler.test_oss_write_into_remote_non_existing_file_via_append", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["Dict[str, List[Any]]", 0.1941076901318989], ["Optional[bytes]", 0.1271955011139609], ["Dict[str, int]", 0.09745098015987999], ["int", 0.09551392516448408]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[123, 4], [136, 9]], "fn_var_ln": {"return_value": [[125, 8], [125, 40]]}, "fn_var_occur": {"return_value": [["mock_oss_log_exists", "return_value", "True"], ["mock_service", "return_value", "head_key", "assert_not_called"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]]}, "name": "test_oss_write_into_remote_existing_file_not_via_append", "params": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_descr": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_occur": {"mock_oss_log_exists": [["mock_oss_log_exists", "return_value", "True"], ["mock_oss_log_exists", "assert_not_called"]], "mock_service": [["mock_service", "call_count"], ["mock_service", "return_value", "head_key", "assert_not_called"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]], "self": [["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_oss_log_exists": [["mock.MagicMock", 0.10041968026971701]], "mock_service": [], "self": []}, "q_name": "TestOSSTaskHandler.test_oss_write_into_remote_existing_file_not_via_append", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.19651561187093972], ["tests.utils.MockCoroutine", 0.12521749532459142], ["Optional[bytes]", 0.11477412807794747], ["Dict[str, int]", 0.0910830564733218]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [153, 9]], "fn_var_ln": {"return_value": [[142, 8], [142, 40]]}, "fn_var_occur": {"return_value": [["mock_oss_log_exists", "return_value", "False"], ["mock_service", "return_value", "head_key", "assert_not_called"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]]}, "name": "test_oss_write_into_remote_non_existing_file_not_via_append", "params": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_descr": {"mock_oss_log_exists": "", "mock_service": "", "self": ""}, "params_occur": {"mock_oss_log_exists": [["mock_oss_log_exists", "return_value", "False"], ["mock_oss_log_exists", "assert_not_called"]], "mock_service": [["mock_service", "call_count"], ["mock_service", "return_value", "head_key", "assert_not_called"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]], "self": [["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_oss_log_exists": [], "mock_service": [], "self": []}, "q_name": "TestOSSTaskHandler.test_oss_write_into_remote_non_existing_file_not_via_append", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["Dict[str, List[Any]]", 0.1941076901318989], ["Optional[bytes]", 0.1271955011139609], ["Dict[str, int]", 0.09745098015987999], ["int", 0.09551392516448408]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[160, 4], [179, 95]], "fn_var_ln": {"handler": [[172, 12], [172, 19]], "local_log_path": [[168, 8], [168, 22]]}, "fn_var_occur": {"handler": [["handler", "OSSTaskHandler", "local_log_path", "self", "oss_log_folder"], ["handler", "log", "info"], ["handler", "set_context", "self", "ti"], ["handler", "upload_on_close"], ["handler", "close"], ["os", "path", "exists", "handler", "handler", "baseFilename", "expected_existence_of_local_copy"]], "local_log_path": [["local_log_path", "str", "tmp_path_factory", "mktemp"], ["handler", "OSSTaskHandler", "local_log_path", "self", "oss_log_folder"]]}, "name": "test_close_with_delete_local_copy_conf", "params": {"airflow_version": "", "delete_local_copy": "", "expected_existence_of_local_copy": "", "mock_service": "", "self": "", "tmp_path_factory": ""}, "params_descr": {"airflow_version": "", "delete_local_copy": "", "expected_existence_of_local_copy": "", "mock_service": "", "self": "", "tmp_path_factory": ""}, "params_occur": {"airflow_version": [], "delete_local_copy": [["conf_vars", "str", "delete_local_copy"]], "expected_existence_of_local_copy": [["os", "path", "exists", "handler", "handler", "baseFilename", "expected_existence_of_local_copy"]], "mock_service": [], "self": [["handler", "OSSTaskHandler", "local_log_path", "self", "oss_log_folder"], ["handler", "set_context", "self", "ti"]], "tmp_path_factory": [["local_log_path", "str", "tmp_path_factory", "mktemp"]]}, "params_p": {"airflow_version": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.07257532016372494], ["tests.async_mock.MagicMock", 0.07257532016372494]], "args": [], "delete_local_copy": [["int", 0.11065962016942602]], "expected_existence_of_local_copy": [["str", 0.40620895794576045], ["bytes", 0.10947455891801755], ["tests.fixtures.cloud_uploader.Uploader", 0.10111120045508047]], "kwargs": [], "mock_service": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.07257532016372494], ["tests.async_mock.MagicMock", 0.07257532016372494]], "self": [], "tmp_path_factory": []}, "q_name": "TestOSSTaskHandler.test_close_with_delete_local_copy_conf", "ret_exprs": [], "ret_type": "", "variables": {"handler": "", "local_log_path": ""}, "variables_p": {"handler": [["str", 0.5755261828463301], ["List[str]", 0.08481855332832605]], "local_log_path": [["waterbutler.providers.figshare.path.FigsharePath", 0.10943786029386217]]}}], "name": "TestOSSTaskHandler", "q_name": "TestOSSTaskHandler", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "os", "unittest", "mock", "unittest", "mock", "PropertyMock", "pytest", "airflow", "providers", "alibaba", "cloud", "log", "oss_task_handler", "OSSTaskHandler", "airflow", "utils", "state", "TaskInstanceState", "airflow", "utils", "timezone", "datetime", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_dags", "clear_db_runs"], "mod_var_ln": {"MOCK_BUCKET_NAME": [[34, 0], [34, 16]], "MOCK_CONTENT": [[37, 0], [37, 12]], "MOCK_FILE_PATH": [[38, 0], [38, 14]], "MOCK_KEY": [[35, 0], [35, 8]], "MOCK_KEYS": [[36, 0], [36, 9]], "MOCK_OSS_CONN_ID": [[33, 0], [33, 16]], "OSS_TASK_HANDLER_STRING": [[32, 0], [32, 23]]}, "mod_var_occur": {"MOCK_BUCKET_NAME": [["self", "oss_log_folder", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "key_exist", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "read_key", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "head_key", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]], "MOCK_CONTENT": [["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "True"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"], ["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "True"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"], ["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "False"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"], ["self", "oss_task_handler", "oss_write", "MOCK_CONTENT", "append", "False"], ["mock_service", "return_value", "append_string", "assert_called_once_with", "MOCK_BUCKET_NAME", "MOCK_CONTENT"]], "MOCK_FILE_PATH": [], "MOCK_KEY": [], "MOCK_KEYS": [], "MOCK_OSS_CONN_ID": [], "OSS_TASK_HANDLER_STRING": []}, "no_types_annot": {"D": 0, "I": 0, "U": 48}, "session_id": "pPNfttzj6thK0nNRbWJ-dfHuLXY_O57nbxKmvA6m3QE", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"MOCK_BUCKET_NAME": "", "MOCK_CONTENT": "", "MOCK_FILE_PATH": "", "MOCK_KEY": "", "MOCK_KEYS": "", "MOCK_OSS_CONN_ID": "", "OSS_TASK_HANDLER_STRING": ""}, "variables_p": {"MOCK_BUCKET_NAME": [["str", 0.9106628366805468], ["Dict[str, Tuple[str, str]]", 0.08933716331945318]], "MOCK_CONTENT": [["Dict[str, Dict[str, str]]", 0.10991321911382908], ["Dict[str, str]", 0.10764907497523182]], "MOCK_FILE_PATH": [["str", 1.0]], "MOCK_KEY": [["str", 0.3726199736071983], ["list", 0.09869103692280914], ["Tuple[str, str, str, str, str, str]", 0.09256079750097321], ["bytes", 0.08813411434947954]], "MOCK_KEYS": [["str", 0.3726199736071983], ["list", 0.09869103692280914], ["Tuple[str, str, str, str, str, str]", 0.09256079750097321], ["bytes", 0.08813411434947954]], "MOCK_OSS_CONN_ID": [["str", 0.4159576162016281], ["Optional[str]", 0.3893615891989145], ["dict", 0.09734039729972863]], "OSS_TASK_HANDLER_STRING": [["List[str]", 0.40886491503762157], ["str", 0.4008640003666268], ["Set[str]", 0.10734113623994665], ["int", 0.08292994835580496]]}}}