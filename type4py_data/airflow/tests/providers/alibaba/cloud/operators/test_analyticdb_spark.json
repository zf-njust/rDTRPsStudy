{"error": null, "response": {"classes": [{"cls_lc": [[43, 0], [74, 59]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [49, 9]], "fn_var_ln": {"operator": [[45, 8], [45, 21]]}, "fn_var_occur": {"operator": [["self", "operator", "AnalyticDBSparkBaseOperator", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "operator", "AnalyticDBSparkBaseOperator", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAnalyticDBSparkBaseOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.6956688695198293], ["bool", 0.11451795025120536], ["Union[Literal, str]", 0.0973357819908869]]}}, {"docstring": {"func": "Test get_hook function works as expected.", "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [55, 103]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_hook", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"]], "self": [["self", "operator", "get_hook"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAnalyticDBSparkBaseOperator.test_get_hook", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test poll_for_termination works as expected with COMPLETED application.", "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [64, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_poll_for_termination", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "get_spark_state", "return_value"]], "self": [["self", "operator", "poll_for_termination", "MOCK_APP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.10378843663965322]], "self": []}, "q_name": "TestAnalyticDBSparkBaseOperator.test_poll_for_termination", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test poll_for_termination raises AirflowException with FATAL application.", "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [74, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_poll_for_termination_with_exception", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "get_spark_state", "return_value"]], "self": [["self", "operator", "poll_for_termination", "MOCK_APP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.10318514436885051]], "self": []}, "q_name": "TestAnalyticDBSparkBaseOperator.test_poll_for_termination_with_exception", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestAnalyticDBSparkBaseOperator", "q_name": "TestAnalyticDBSparkBaseOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[77, 0], [128, 34]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test submit AnalyticDB Spark Batch Application works as expected.", "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [108, 9]], "fn_var_ln": {"operator": [[81, 8], [81, 16]]}, "fn_var_occur": {"operator": [["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "execute", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["mock_hook", "return_value", "submit_spark_app", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "file", "MOCK_FILE", "class_name", "None", "args", "None", "conf", "None", "jars", "None", "py_files", "None", "files", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "archives", "None", "name", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAnalyticDBSparkBatchOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.18338938817672268], ["str", 0.17949629596155156], ["List[Dict[str, Any]]", 0.1648780863609801], ["dict", 0.1098442713606177]]}}, {"docstring": {"func": "Test submit AnalyticDB Spark Batch Application raises ValueError with invalid parameter.", "long_descr": null, "ret": null}, "fn_lc": [[111, 4], [128, 34]], "fn_var_ln": {"operator": [[117, 8], [117, 16]]}, "fn_var_occur": {"operator": [["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "args", "True", "False", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "execute", "None"]]}, "name": "test_execute_with_exception", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "submit_spark_app", "side_effect", "ValueError"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.1215804995032166]], "self": []}, "q_name": "TestAnalyticDBSparkBatchOperator.test_execute_with_exception", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["Dict[str, str]", 0.3120264515005412], ["Dict[str, int]", 0.11822248356644048], ["IO[bytes]", 0.0898892918758481]]}}], "name": "TestAnalyticDBSparkBatchOperator", "q_name": "TestAnalyticDBSparkBatchOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[131, 0], [176, 34]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test submit AnalyticDB Spark SQL Application works as expected.", "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [156, 9]], "fn_var_ln": {"operator": [[135, 8], [135, 16]]}, "fn_var_occur": {"operator": [["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "execute", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["mock_hook", "return_value", "submit_spark_sql", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "sql", "MOCK_SQL", "conf", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "name", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAnalyticDBSparklSQLOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["Dict[str, Any]", 0.19536494955025824], ["str", 0.19053122561122285]]}}, {"docstring": {"func": "Test submit AnalyticDB Spark SQL Application raises ValueError with invalid parameter.", "long_descr": null, "ret": null}, "fn_lc": [[159, 4], [176, 34]], "fn_var_ln": {"operator": [[165, 8], [165, 16]]}, "fn_var_occur": {"operator": [["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "conf", "True", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "execute", "None"]]}, "name": "test_execute_with_exception", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "submit_spark_sql", "side_effect", "ValueError"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.1215804995032166]], "self": []}, "q_name": "TestAnalyticDBSparklSQLOperator.test_execute_with_exception", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.298100651034116], ["Dict[str, int]", 0.10792469355308339], ["mock._patch[Literal]", 0.09677192885532646]]}}], "name": "TestAnalyticDBSparklSQLOperator", "q_name": "TestAnalyticDBSparklSQLOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "airflow", "AirflowException", "airflow", "providers", "alibaba", "cloud", "operators", "analyticdb_spark", "AnalyticDBSparkBaseOperator", "AnalyticDBSparkBatchOperator", "AnalyticDBSparkSQLOperator"], "mod_var_ln": {"ADB_SPARK_OPERATOR_STRING": [[31, 0], [31, 25]], "MOCK_ADB_SPARK_CONN_ID": [[36, 0], [36, 22]], "MOCK_APP_ID": [[39, 0], [39, 11]], "MOCK_CLUSTER_ID": [[34, 0], [34, 15]], "MOCK_FILE": [[33, 0], [33, 9]], "MOCK_REGION": [[37, 0], [37, 11]], "MOCK_RG_NAME": [[35, 0], [35, 12]], "MOCK_SQL": [[40, 0], [40, 8]], "MOCK_TASK_ID": [[38, 0], [38, 12]]}, "mod_var_occur": {"ADB_SPARK_OPERATOR_STRING": [], "MOCK_ADB_SPARK_CONN_ID": [["self", "operator", "AnalyticDBSparkBaseOperator", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "args", "True", "False", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "conf", "True", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]], "MOCK_APP_ID": [["self", "operator", "poll_for_termination", "MOCK_APP_ID"], ["self", "operator", "poll_for_termination", "MOCK_APP_ID"]], "MOCK_CLUSTER_ID": [["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "return_value", "submit_spark_app", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "file", "MOCK_FILE", "class_name", "None", "args", "None", "conf", "None", "jars", "None", "py_files", "None", "files", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "archives", "None", "name", "None"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "args", "True", "False", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "return_value", "submit_spark_sql", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "sql", "MOCK_SQL", "conf", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "name", "None"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "conf", "True", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]], "MOCK_FILE": [["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "return_value", "submit_spark_app", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "file", "MOCK_FILE", "class_name", "None", "args", "None", "conf", "None", "jars", "None", "py_files", "None", "files", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "archives", "None", "name", "None"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "args", "True", "False", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]], "MOCK_REGION": [["self", "operator", "AnalyticDBSparkBaseOperator", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "args", "True", "False", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "assert_called_once_with", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "conf", "True", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]], "MOCK_RG_NAME": [["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "return_value", "submit_spark_app", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "file", "MOCK_FILE", "class_name", "None", "args", "None", "conf", "None", "jars", "None", "py_files", "None", "files", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "archives", "None", "name", "None"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "args", "True", "False", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "return_value", "submit_spark_sql", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "sql", "MOCK_SQL", "conf", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "name", "None"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "conf", "True", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]], "MOCK_SQL": [["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["mock_hook", "return_value", "submit_spark_sql", "assert_called_once_with", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "sql", "MOCK_SQL", "conf", "None", "driver_resource_spec", "None", "executor_resource_spec", "None", "num_executors", "None", "name", "None"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "conf", "True", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]], "MOCK_TASK_ID": [["self", "operator", "AnalyticDBSparkBaseOperator", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkBatchOperator", "file", "MOCK_FILE", "args", "True", "False", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"], ["operator", "AnalyticDBSparkSQLOperator", "sql", "MOCK_SQL", "conf", "True", "cluster_id", "MOCK_CLUSTER_ID", "rg_name", "MOCK_RG_NAME", "adb_spark_conn_id", "MOCK_ADB_SPARK_CONN_ID", "region", "MOCK_REGION", "task_id", "MOCK_TASK_ID"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 29}, "session_id": "a8nWm5xHW6b4Aty3nmN3uHwbu44UIqtnmfawQTfWhx4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"ADB_SPARK_OPERATOR_STRING": "", "MOCK_ADB_SPARK_CONN_ID": "", "MOCK_APP_ID": "", "MOCK_CLUSTER_ID": "", "MOCK_FILE": "", "MOCK_REGION": "", "MOCK_RG_NAME": "", "MOCK_SQL": "", "MOCK_TASK_ID": ""}, "variables_p": {"ADB_SPARK_OPERATOR_STRING": [["int", 0.7], ["str", 0.3]], "MOCK_ADB_SPARK_CONN_ID": [["str", 0.5804991326810884], ["Union[Literal, str]", 0.11769343529982221], ["int", 0.11516294132376066], ["Callable(id)[[object], int]", 0.09527604614553459]], "MOCK_APP_ID": [["str", 0.5582975597187569], ["bool", 0.0936012127592606]], "MOCK_CLUSTER_ID": [["str", 1.0]], "MOCK_FILE": [["str", 0.7169758649257288], ["Dict[str, Dict[str, Any]]", 0.09702593300752226], ["Optional[str]", 0.09454793269144728], ["Tuple[str, str, str]", 0.09145026937530172]], "MOCK_REGION": [["str", 0.8810338500532846], ["List[Tuple[str, str, str, str]]", 0.1189661499467153]], "MOCK_RG_NAME": [["str", 0.9999999999999998]], "MOCK_SQL": [["str", 0.3392468664772455], ["Dict[str, Union[float, str]]", 0.12928391359882083], ["List[Dict[str, str]]", 0.12469484750904423], ["Dict[str, dict]", 0.11792201895544274], ["ChainMap", 0.07740412717071177], ["Dict[Any, Union[Any, Any]]", 0.07152670220210157]], "MOCK_TASK_ID": [["str", 0.6810139798266395], ["Union[Literal, str]", 0.1188323941326793], ["Callable(id)[[object], int]", 0.10453280107600622], ["int", 0.09562082496467514]]}}}