{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [167, 62]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 4], [40, 61]], "fn_var_ln": {"hook": [[40, 12], [40, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "OSSHook", "oss_conn_id", "MOCK_OSS_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "OSSHook", "oss_conn_id", "MOCK_OSS_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSSHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.6840723201432517], ["Dict[str, str]", 0.09251094873552376]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [44, 109]], "fn_var_ln": {"parsed": [[43, 8], [43, 14]]}, "fn_var_occur": {"parsed": [["parsed", "self", "hook", "parse_oss_url", "MOCK_BUCKET_NAME"], ["parsed", "MOCK_BUCKET_NAME"]]}, "name": "test_parse_oss_url", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["parsed", "self", "hook", "parse_oss_url", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSSHook.test_parse_oss_url", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.350140938272232], ["Dict[str, str]", 0.2605892189609701], ["Union[Literal, str]", 0.16648404461313104], ["Dict[str, Dict[str, Any]]", 0.11162046135663603], ["Dict[str, Union[Any, Any]]", 0.11116533679703068]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [51, 45]], "fn_var_ln": {"parsed": [[47, 8], [47, 14]]}, "fn_var_occur": {"parsed": [["parsed", "self", "hook", "parse_oss_url", "MOCK_BUCKET_NAME"], ["parsed", "MOCK_BUCKET_NAME"]]}, "name": "test_parse_oss_object_directory", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["parsed", "self", "hook", "parse_oss_url", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSSHook.test_parse_oss_object_directory", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.350140938272232], ["Dict[str, str]", 0.2605892189609701], ["Union[Literal, str]", 0.16648404461313104], ["Dict[str, Dict[str, Any]]", 0.11162046135663603], ["Dict[str, Union[Any, Any]]", 0.11116533679703068]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [56, 94]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credential", "params": {"mock_oss2": "", "self": ""}, "params_descr": {"mock_oss2": "", "self": ""}, "params_occur": {"mock_oss2": [["mock_oss2", "Auth", "assert_called_once_with"]], "self": [["self", "hook", "get_credential"]]}, "params_p": {"args": [], "kwargs": [], "mock_oss2": [], "self": []}, "q_name": "TestOSSHook.test_get_credential", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [65, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_bucket", "params": {"mock_get_credential": "", "mock_oss2": "", "self": ""}, "params_descr": {"mock_get_credential": "", "mock_oss2": "", "self": ""}, "params_occur": {"mock_get_credential": [["mock_get_credential", "assert_called_once_with"], ["mock_oss2", "Bucket", "assert_called_once_with", "mock_get_credential", "return_value", "MOCK_BUCKET_NAME"]], "mock_oss2": [["mock_oss2", "Bucket", "assert_called_once_with", "mock_get_credential", "return_value", "MOCK_BUCKET_NAME"]], "self": [["self", "hook", "get_bucket"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_credential": [], "mock_oss2": [], "self": []}, "q_name": "TestOSSHook.test_get_bucket", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [80, 55]], "fn_var_ln": {"exists_method": [[71, 8], [71, 21]], "mock_bucket": [[70, 8], [70, 19]], "res": [[75, 8], [75, 11]], "return_value": [[72, 8], [72, 34]]}, "fn_var_occur": {"exists_method": [["exists_method", "mock_bucket", "object_exists"], ["exists_method", "return_value", "True"], ["exists_method", "assert_called_once_with", "MOCK_KEY"]], "mock_bucket": [["mock_bucket", "mock_service", "return_value"], ["exists_method", "mock_bucket", "object_exists"]], "res": [["res", "self", "hook", "object_exists", "MOCK_KEY", "MOCK_BUCKET_NAME"], ["res", "True"]], "return_value": [["mock_bucket", "mock_service", "return_value"], ["exists_method", "return_value", "True"]]}, "name": "test_object_exist", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_bucket", "mock_service", "return_value"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"]], "self": [["res", "self", "hook", "object_exists", "MOCK_KEY", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.Mock", 0.29432724049501247], ["mock.MagicMock", 0.10199889038548095]], "self": []}, "q_name": "TestOSSHook.test_object_exist", "ret_exprs": [], "ret_type": "", "variables": {"exists_method": "", "mock_bucket": "", "res": "", "return_value": ""}, "variables_p": {"exists_method": [["frozenset[str]", 0.1183411435888596], ["str", 0.09775513662503318], ["list", 0.09604410040344984], ["List[Tuple[str, str]]", 0.09482159665220996], ["Dict[str, int]", 0.09001408826229189]], "mock_bucket": [["str", 0.5144950643011053], ["Dict[str, Optional[str]]", 0.07817289911489708], ["int", 0.07798997058104631], ["Dict[str, Union[Any, Any]]", 0.07781602559970745]], "res": [["List[Tuple[str, str, str, str]]", 0.28632988448994506], ["List[Tuple[Any, Any, None]]", 0.2365231284677871], ["List[Union[Any, Any]]", 0.19088658965996338], ["List[dict]", 0.09688017435351841], ["List[Tuple[str, str, str]]", 0.09544329482998169], ["str", 0.09393692819880425]], "return_value": [["str", 0.23740240749850808], ["list", 0.1710954224753608], ["Tuple[int, int]", 0.13229770820506326], ["Dict[str, Dict[str, Any]]", 0.09831974499850027], ["List[int]", 0.0827204011814682], ["Dict[str, str]", 0.08206830583804836], ["Optional[bytes]", 0.08179705607474762]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [86, 92]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_load_string", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "put_object", "assert_called_once_with", "MOCK_KEY", "MOCK_CONTENT"]], "self": [["self", "hook", "load_string", "MOCK_KEY", "MOCK_CONTENT", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_load_string", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [92, 104]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_upload_local_file", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "put_object_from_file", "assert_called_once_with", "MOCK_KEY", "MOCK_FILE_PATH"]], "self": [["self", "hook", "upload_local_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_upload_local_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [98, 102]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_download_file", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "get_object_to_file", "assert_called_once_with", "MOCK_KEY", "MOCK_FILE_PATH"]], "self": [["self", "hook", "download_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_download_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [104, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_object", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "delete_object", "assert_called_once_with", "MOCK_KEY"]], "self": [["self", "hook", "delete_object", "MOCK_KEY", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_delete_object", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [110, 89]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_objects", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "batch_delete_objects", "assert_called_once_with", "MOCK_KEYS"]], "self": [["self", "hook", "delete_objects", "MOCK_KEYS", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_delete_objects", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [116, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_bucket", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "delete_bucket", "assert_called_once_with"]], "self": [["self", "hook", "delete_bucket", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_delete_bucket", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[119, 4], [122, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_bucket", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "create_bucket", "assert_called_once_with"]], "self": [["self", "hook", "create_bucket", "MOCK_BUCKET_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_create_bucket", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[125, 4], [128, 98]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_append_string", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "append_object", "assert_called_once_with", "MOCK_KEY", "MOCK_CONTENT"]], "self": [["self", "hook", "append_string", "MOCK_BUCKET_NAME", "MOCK_CONTENT", "MOCK_KEY"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_append_string", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[131, 4], [145, 9]], "fn_var_ln": {"res": [[136, 8], [136, 11]]}, "fn_var_occur": {"res": [["res", "self", "hook", "read_key", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["res", "MOCK_CONTENT"]]}, "name": "test_read_key", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "get_object", "return_value", "read", "return_value", "decode", "return_value", "MOCK_CONTENT"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "get_object", "assert_called_once_with", "MOCK_KEY"], ["mock_service", "return_value", "get_object", "return_value", "read", "assert_called_once_with"], ["mock_service", "return_value", "get_object", "return_value", "read", "return_value", "decode", "assert_called_once_with"]], "self": [["res", "self", "hook", "read_key", "MOCK_BUCKET_NAME", "MOCK_KEY"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_read_key", "ret_exprs": [], "ret_type": "", "variables": {"res": ""}, "variables_p": {"res": [["List[Tuple[str, str, str, str]]", 0.2780466699245222], ["List[Tuple[Any, Any, None]]", 0.1910210986155147], ["str", 0.10742495754057933], ["Dict[Any, str]", 0.10313661351066705], ["Dict[str, str]", 0.09377574761950745], ["bytearray", 0.09298252043678731]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [151, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_head_key", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "head_object", "assert_called_once_with", "MOCK_KEY"]], "self": [["self", "hook", "head_key", "MOCK_BUCKET_NAME", "MOCK_KEY"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestOSSHook.test_head_key", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [164, 81]], "fn_var_ln": {"res": [[159, 8], [159, 11]]}, "fn_var_occur": {"res": [["res", "self", "hook", "key_exist", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["res", "True"]]}, "name": "test_key_exists", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "object_exists", "return_value", "True"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "object_exists", "assert_called_once_with", "MOCK_KEY"]], "self": [["res", "self", "hook", "key_exist", "MOCK_BUCKET_NAME", "MOCK_KEY"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["str", 0.0981733833146268]], "self": []}, "q_name": "TestOSSHook.test_key_exists", "ret_exprs": [], "ret_type": "", "variables": {"res": ""}, "variables_p": {"res": [["str", 0.48763004909480157], ["Dict[Any, Union[Any, Any, Any, Any, Any, Any]]", 0.1903693002074986], ["List[Dict[str, Any]]", 0.12263824982755826], ["List[str]", 0.10903362712908618], ["Dict[str, str]", 0.09032877374105543]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 4], [167, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_default_region", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "get_default_region"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSSHook.test_get_default_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestOSSHook", "q_name": "TestOSSHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "airflow", "providers", "alibaba", "cloud", "hooks", "oss", "OSSHook", "tests", "providers", "alibaba", "cloud", "utils", "oss_mock", "mock_oss_hook_default_project_id"], "mod_var_ln": {"MOCK_BUCKET_NAME": [[27, 0], [27, 16]], "MOCK_CONTENT": [[30, 0], [30, 12]], "MOCK_FILE_PATH": [[31, 0], [31, 14]], "MOCK_KEY": [[28, 0], [28, 8]], "MOCK_KEYS": [[29, 0], [29, 9]], "MOCK_OSS_CONN_ID": [[26, 0], [26, 16]], "OSS_STRING": [[25, 0], [25, 10]]}, "mod_var_occur": {"MOCK_BUCKET_NAME": [["parsed", "self", "hook", "parse_oss_url", "MOCK_BUCKET_NAME"], ["parsed", "MOCK_BUCKET_NAME"], ["parsed", "self", "hook", "parse_oss_url", "MOCK_BUCKET_NAME"], ["parsed", "MOCK_BUCKET_NAME"], ["mock_oss2", "Bucket", "assert_called_once_with", "mock_get_credential", "return_value", "MOCK_BUCKET_NAME"], ["res", "self", "hook", "object_exists", "MOCK_KEY", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "load_string", "MOCK_KEY", "MOCK_CONTENT", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "upload_local_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "download_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "delete_object", "MOCK_KEY", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "delete_objects", "MOCK_KEYS", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "delete_bucket", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "create_bucket", "MOCK_BUCKET_NAME"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "append_string", "MOCK_BUCKET_NAME", "MOCK_CONTENT", "MOCK_KEY"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["res", "self", "hook", "read_key", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["self", "hook", "head_key", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"], ["res", "self", "hook", "key_exist", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["mock_service", "assert_called_once_with", "MOCK_BUCKET_NAME"]], "MOCK_CONTENT": [["self", "hook", "load_string", "MOCK_KEY", "MOCK_CONTENT", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "put_object", "assert_called_once_with", "MOCK_KEY", "MOCK_CONTENT"], ["self", "hook", "append_string", "MOCK_BUCKET_NAME", "MOCK_CONTENT", "MOCK_KEY"], ["mock_service", "return_value", "append_object", "assert_called_once_with", "MOCK_KEY", "MOCK_CONTENT"], ["mock_service", "return_value", "get_object", "return_value", "read", "return_value", "decode", "return_value", "MOCK_CONTENT"], ["res", "MOCK_CONTENT"]], "MOCK_FILE_PATH": [["self", "hook", "upload_local_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "put_object_from_file", "assert_called_once_with", "MOCK_KEY", "MOCK_FILE_PATH"], ["self", "hook", "download_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "get_object_to_file", "assert_called_once_with", "MOCK_KEY", "MOCK_FILE_PATH"]], "MOCK_KEY": [["res", "self", "hook", "object_exists", "MOCK_KEY", "MOCK_BUCKET_NAME"], ["exists_method", "assert_called_once_with", "MOCK_KEY"], ["self", "hook", "load_string", "MOCK_KEY", "MOCK_CONTENT", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "put_object", "assert_called_once_with", "MOCK_KEY", "MOCK_CONTENT"], ["self", "hook", "upload_local_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "put_object_from_file", "assert_called_once_with", "MOCK_KEY", "MOCK_FILE_PATH"], ["self", "hook", "download_file", "MOCK_KEY", "MOCK_FILE_PATH", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "get_object_to_file", "assert_called_once_with", "MOCK_KEY", "MOCK_FILE_PATH"], ["self", "hook", "delete_object", "MOCK_KEY", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "delete_object", "assert_called_once_with", "MOCK_KEY"], ["self", "hook", "append_string", "MOCK_BUCKET_NAME", "MOCK_CONTENT", "MOCK_KEY"], ["mock_service", "return_value", "append_object", "assert_called_once_with", "MOCK_KEY", "MOCK_CONTENT"], ["res", "self", "hook", "read_key", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["mock_service", "return_value", "get_object", "assert_called_once_with", "MOCK_KEY"], ["self", "hook", "head_key", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["mock_service", "return_value", "head_object", "assert_called_once_with", "MOCK_KEY"], ["res", "self", "hook", "key_exist", "MOCK_BUCKET_NAME", "MOCK_KEY"], ["mock_service", "return_value", "object_exists", "assert_called_once_with", "MOCK_KEY"]], "MOCK_KEYS": [["self", "hook", "delete_objects", "MOCK_KEYS", "MOCK_BUCKET_NAME"], ["mock_service", "return_value", "batch_delete_objects", "assert_called_once_with", "MOCK_KEYS"]], "MOCK_OSS_CONN_ID": [["self", "hook", "OSSHook", "oss_conn_id", "MOCK_OSS_CONN_ID"]], "OSS_STRING": [["mock", "patch", "OSS_STRING", "format", "new", "mock_oss_hook_default_project_id"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 49}, "session_id": "D3W8rL5C8pGaj3hjTpYWeWe4TGsxBOqJ1BIKTNH_owU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"MOCK_BUCKET_NAME": "", "MOCK_CONTENT": "", "MOCK_FILE_PATH": "", "MOCK_KEY": "", "MOCK_KEYS": "", "MOCK_OSS_CONN_ID": "", "OSS_STRING": ""}, "variables_p": {"MOCK_BUCKET_NAME": [["str", 0.7829559503264724], ["dict", 0.12861542777250365], ["Dict[str, str]", 0.08842862190102417]], "MOCK_CONTENT": [["Dict[str, str]", 0.2884160321633079], ["Dict[str, Dict[str, Any]]", 0.2094759208375186], ["Dict[str, List[str]]", 0.12076844152962773], ["Dict[str, Union[Any, Any]]", 0.09464414924179336]], "MOCK_FILE_PATH": [["str", 1.0]], "MOCK_KEY": [["str", 0.8021180656781516], ["Dict[str, str]", 0.10621509608544234], ["dict", 0.09166683823640617]], "MOCK_KEYS": [["str", 0.5231390081266278], ["List[Dict[str, str]]", 0.18167949402482667], ["bytes", 0.09773867022989621]], "MOCK_OSS_CONN_ID": [["str", 0.5910702265451674], ["int", 0.1226579762249865], ["Optional[str]", 0.09592544757718312]], "OSS_STRING": [["str", 0.544932912276506], ["int", 0.18136901931338395], ["Dict[str, Union[float, str]]", 0.09371879547531668], ["Union[Literal, str]", 0.08320389305222908]]}}}