{"error": null, "response": {"classes": [{"cls_lc": [[98, 0], [102, 57]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [102, 57]], "fn_var_ln": {"client": [[101, 8], [101, 19]]}, "fn_var_occur": {"client": [["self", "client", "boto3", "client", "region_name"], ["monkeypatch", "setattr", "EcsHook", "self", "client"]]}, "name": "setup_test_cases", "params": {"monkeypatch": "", "self": ""}, "params_descr": {"monkeypatch": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "setattr", "EcsHook", "self", "client"]], "self": [["self", "client", "boto3", "client", "region_name"], ["monkeypatch", "setattr", "EcsHook", "self", "client"]]}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [["str", 0.4044132165210031], ["dict", 0.09179144863869097]], "self": []}, "q_name": "EcsBaseTestCase.setup_test_cases", "ret_exprs": [], "ret_type": "", "variables": {"client": ""}, "variables_p": {"client": []}}], "name": "EcsBaseTestCase", "q_name": "EcsBaseTestCase", "variables": {}, "variables_p": {}}, {"cls_lc": [[105, 0], [139, 34]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test initialize operator.", "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [117, 80]], "fn_var_ln": {"op": [[114, 8], [114, 10]], "op_kw": [[113, 8], [113, 13]]}, "fn_var_occur": {"op": [["op", "EcsBaseOperator", "task_id", "op_kw"], ["op", "aws_conn_id", "aws_conn_id", "aws_conn_id", "NOTSET", "DEFAULT_CONN_ID"], ["op", "region", "region_name", "region_name", "NOTSET", "None"]], "op_kw": [["op_kw", "aws_conn_id", "region_name"], ["op_kw", "k", "v", "k", "v", "op_kw", "items", "v", "NOTSET"], ["op", "EcsBaseOperator", "task_id", "op_kw"]]}, "name": "test_initialise_operator", "params": {"aws_conn_id": "", "region_name": "", "self": ""}, "params_descr": {"aws_conn_id": "", "region_name": "", "self": ""}, "params_occur": {"aws_conn_id": [["op_kw", "aws_conn_id", "region_name"], ["op", "aws_conn_id", "aws_conn_id", "aws_conn_id", "NOTSET", "DEFAULT_CONN_ID"]], "region_name": [["op_kw", "aws_conn_id", "region_name"], ["op", "region", "region_name", "region_name", "NOTSET", "None"]], "self": []}, "params_p": {"args": [], "aws_conn_id": [["str", 0.6097052244227248], ["types.SubCategoryDict", 0.09568637688453469]], "kwargs": [], "region_name": [["str", 0.5012342474086064], ["bool", 0.20257201539198272]], "self": []}, "q_name": "TestEcsBaseOperator.test_initialise_operator", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "op_kw": ""}, "variables_p": {"op": [["float", 0.40946871492217723], ["int", 0.28127677499325643], ["List[Dict[str, Any]]", 0.10201637733906606]], "op_kw": [["str", 0.20496481258932447], ["Dict[str, Tuple[Any, Any]]", 0.1868943732167092], ["Pattern[Any]", 0.11844060028287824], ["List[str]", 0.10476637403952423], ["List[int]", 0.09491050538277242], ["Tuple[str, str]", 0.08792947997865408]]}}, {"docstring": {"func": "Test initialize ``EcsHook`` and ``boto3.client``.", "long_descr": null, "ret": null}, "fn_lc": [[122, 4], [139, 34]], "fn_var_ln": {"client": [[136, 8], [136, 14]], "hook": [[132, 8], [132, 12]], "mock_conn": [[125, 8], [125, 17]], "mock_ecs_hook": [[124, 8], [124, 21]], "op": [[130, 8], [130, 10]], "op_kw": [[129, 8], [129, 13]]}, "fn_var_occur": {"client": [["client", "op", "client"], ["client", "mock_conn"], ["op", "client", "client"]], "hook": [["hook", "op", "hook"], ["op", "hook", "hook"]], "mock_conn": [["mock_conn", "mock", "MagicMock"], ["type", "mock_ecs_hook", "conn", "mock", "PropertyMock", "return_value", "mock_conn"], ["client", "mock_conn"]], "mock_ecs_hook": [["mock_ecs_hook", "mock_ecs_hook_cls", "return_value"], ["type", "mock_ecs_hook", "conn", "mock", "PropertyMock", "return_value", "mock_conn"]], "op": [["op", "EcsBaseOperator", "task_id", "op_kw"], ["hook", "op", "hook"], ["op", "hook", "hook"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"], ["client", "op", "client"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"], ["op", "client", "client"]], "op_kw": [["op_kw", "aws_conn_id", "region_name"], ["op_kw", "k", "v", "k", "v", "op_kw", "items", "v", "NOTSET"], ["op", "EcsBaseOperator", "task_id", "op_kw"]]}, "name": "test_hook_and_client", "params": {"aws_conn_id": "", "mock_ecs_hook_cls": "", "region_name": "", "self": ""}, "params_descr": {"aws_conn_id": "", "mock_ecs_hook_cls": "", "region_name": "", "self": ""}, "params_occur": {"aws_conn_id": [["op_kw", "aws_conn_id", "region_name"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"]], "mock_ecs_hook_cls": [["mock_ecs_hook", "mock_ecs_hook_cls", "return_value"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"]], "region_name": [["op_kw", "aws_conn_id", "region_name"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"], ["mock_ecs_hook_cls", "assert_called_once_with", "aws_conn_id", "op", "aws_conn_id", "region_name", "op", "region"]], "self": []}, "params_p": {"args": [], "aws_conn_id": [["str", 0.5999933902950715]], "kwargs": [], "mock_ecs_hook_cls": [["unittesmock.MagicMock", 0.8015453308363051]], "region_name": [["str", 0.5999933902950715]], "self": []}, "q_name": "TestEcsBaseOperator.test_hook_and_client", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "hook": "", "mock_conn": "", "mock_ecs_hook": "", "op": "", "op_kw": ""}, "variables_p": {"client": [], "hook": [["Dict[int, str]", 0.9999999998481589], ["Dict[Any, int]", 3.778822958005877e-11], ["bool", 3.758378507380332e-11], ["Dict[str, Any]", 3.3797678660870076e-11], ["Dict[str, Union[Any, Any, Any]]", 2.3410559631081463e-11], ["Dict[str, Union[Any, Any]]", 1.926078056693305e-11]], "mock_conn": [["unittesmock.MagicMock", 0.7707975623174458], ["mock.Mock", 0.12399301557480633]], "mock_ecs_hook": [["List[Dict[str, str]]", 0.2105110356442103], ["unittesmock.MagicMock", 0.20391611037373564], ["mock._Call", 0.20131849912602906], ["Dict[str, Union[Any, Any, Any]]", 0.09894846268496894]], "op": [["Dict[str, Union[Any, bool, str]]", 0.23409450091256884], ["int", 0.09997423477412248], ["Dict[str, Union[int, str]]", 0.0993859682842662], ["Dict[str, Optional[str]]", 0.0828996175523942], ["List[Tuple[Any, Any, Any]]", 0.07668232058578517]], "op_kw": [["str", 0.20496481258932447], ["Dict[str, Tuple[Any, Any]]", 0.1868943732167092], ["Pattern[Any]", 0.11844060028287824], ["List[str]", 0.10476637403952423], ["List[int]", 0.09491050538277242], ["Tuple[str, str]", 0.08792947997865408]]}}], "name": "TestEcsBaseOperator", "q_name": "TestEcsBaseOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[142, 0], [683, 42]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [159, 73]], "fn_var_ln": {"ecs": [[159, 8], [159, 16]], "ecs_operator_args": [[144, 8], [144, 30]]}, "fn_var_occur": {"ecs": [["self", "ecs", "EcsRunTaskOperator", "self", "ecs_operator_args", "kwargs"]], "ecs_operator_args": [["self", "ecs_operator_args"], ["self", "ecs", "EcsRunTaskOperator", "self", "ecs_operator_args", "kwargs"]]}, "name": "set_up_operator", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [["self", "ecs", "EcsRunTaskOperator", "self", "ecs_operator_args", "kwargs"]], "self": [["self", "ecs_operator_args"], ["self", "ecs", "EcsRunTaskOperator", "self", "ecs_operator_args", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.set_up_operator", "ret_exprs": [], "ret_type": "", "variables": {"ecs": "", "ecs_operator_args": ""}, "variables_p": {"ecs": [["Type[str]", 0.2680243352758658], ["str", 0.19679863076899431], ["bool", 0.14776339472923855], ["List[str]", 0.10555501260120938], ["Tuple[Any, Any]", 0.09940292165590771]], "ecs_operator_args": [["int", 0.5809849494192476], ["Counter[str]", 0.10509915905423174], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str]", 0.09570826084964583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[161, 4], [163, 44]], "fn_var_ln": {"mock_context": [[163, 8], [163, 25]]}, "fn_var_occur": {"mock_context": [["self", "mock_context", "mock", "MagicMock"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "set_up_operator"], ["self", "mock_context", "mock", "MagicMock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"mock_context": ""}, "variables_p": {"mock_context": [["str", 0.19085483910376155], ["List[Dict[str, str]]", 0.15198849913218163], ["mock.Mock", 0.11276186177418906], ["Dict[str, Union[Any, Any, Any]]", 0.08333388674364425], ["unittesmock.MagicMock", 0.07656158392917817], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.07572273072165042]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [168, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "ecs", "task_definition"], ["self", "ecs", "cluster"], ["self", "ecs", "overrides"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [192, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_template_fields_overrides", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "ecs", "template_fields"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_template_fields_overrides", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [309, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_execute_without_failures", "params": {"capacity_provider_strategy": "", "check_mock": "", "client_mock": "", "expected_args": "", "launch_type": "", "platform_version": "", "self": "", "tags": "", "wait_mock": ""}, "params_descr": {"capacity_provider_strategy": "", "check_mock": "", "client_mock": "", "expected_args": "", "launch_type": "", "platform_version": "", "self": "", "tags": "", "wait_mock": ""}, "params_occur": {"capacity_provider_strategy": [["self", "set_up_operator", "launch_type", "launch_type", "capacity_provider_strategy", "capacity_provider_strategy", "platform_version", "platform_version", "tags", "tags"]], "check_mock": [["check_mock", "assert_called_once_with"]], "client_mock": [["client_mock", "run_task", "return_value", "RESPONSE_WITHOUT_FAILURES"], ["client_mock", "run_task", "assert_called_once_with", "cluster", "overrides", "startedBy", "mock", "ANY", "taskDefinition", "group", "placementConstraints", "placementStrategy", "networkConfiguration", "propagateTags", "expected_args"]], "expected_args": [["client_mock", "run_task", "assert_called_once_with", "cluster", "overrides", "startedBy", "mock", "ANY", "taskDefinition", "group", "placementConstraints", "placementStrategy", "networkConfiguration", "propagateTags", "expected_args"]], "launch_type": [["self", "set_up_operator", "launch_type", "launch_type", "capacity_provider_strategy", "capacity_provider_strategy", "platform_version", "platform_version", "tags", "tags"]], "platform_version": [["self", "set_up_operator", "launch_type", "launch_type", "capacity_provider_strategy", "capacity_provider_strategy", "platform_version", "platform_version", "tags", "tags"]], "self": [["self", "set_up_operator", "launch_type", "launch_type", "capacity_provider_strategy", "capacity_provider_strategy", "platform_version", "platform_version", "tags", "tags"], ["self", "ecs", "execute", "None"], ["self", "ecs", "arn", "TASK_ID"]], "tags": [["self", "set_up_operator", "launch_type", "launch_type", "capacity_provider_strategy", "capacity_provider_strategy", "platform_version", "platform_version", "tags", "tags"]], "wait_mock": [["wait_mock", "assert_called_once_with"]]}, "params_p": {"args": [], "capacity_provider_strategy": [["Dict[str, Any]", 0.3168920553631031]], "check_mock": [["unittesmock.MagicMock", 0.40518463569047847]], "client_mock": [["unittesmock.MagicMock", 0.10227610471767312]], "expected_args": [["unittesmock.MagicMock", 0.20834884792758396]], "kwargs": [], "launch_type": [["Dict[str, Any]", 0.3168920553631031]], "platform_version": [["Dict[str, Any]", 0.3168920553631031]], "self": [], "tags": [["Dict[str, Any]", 0.3168920553631031]], "wait_mock": [["unittesmock.MagicMock", 0.40518463569047847]]}, "q_name": "TestEcsRunTaskOperator.test_execute_without_failures", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[311, 4], [313, 28]], "fn_var_ln": {"id": [[312, 8], [312, 10]]}, "fn_var_occur": {"id": [["id", "EcsRunTaskOperator", "_get_ecs_task_id", "TASK_ID"], ["id", "TASK_ID"]]}, "name": "test_task_id_parsing", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_task_id_parsing", "ret_exprs": [], "ret_type": "", "variables": {"id": ""}, "variables_p": {"id": [["str", 0.8221475163130629], ["Optional[str]", 0.09297181730925262], ["int", 0.08488066637768467]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[316, 4], [340, 9]], "fn_var_ln": {"resp_failures": [[317, 8], [317, 21]]}, "fn_var_occur": {"resp_failures": [["resp_failures", "deepcopy", "RESPONSE_WITHOUT_FAILURES"], ["resp_failures", "append"], ["client_mock", "run_task", "return_value", "resp_failures"]]}, "name": "test_execute_with_failures", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "run_task", "return_value", "resp_failures"], ["client_mock", "run_task", "assert_called_once_with", "cluster", "launchType", "overrides", "startedBy", "mock", "ANY", "taskDefinition", "group", "placementConstraints", "placementStrategy", "networkConfiguration", "propagateTags"]], "self": [["self", "ecs", "execute", "None"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.38896819379497205]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_execute_with_failures", "ret_exprs": [], "ret_type": "", "variables": {"resp_failures": ""}, "variables_p": {"resp_failures": [["Dict[str, Union[bool, str]]", 0.11456312304807353], ["float", 0.09770840512109276], ["list", 0.092765655564698]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[343, 4], [351, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_wait_end_tasks", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "get_waiter", "assert_called_once_with"], ["client_mock", "get_waiter", "return_value", "wait", "assert_called_once_with", "cluster", "tasks", "WaiterConfig"], ["sys", "maxsize", "client_mock", "get_waiter", "return_value", "config", "max_attempts"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_wait_for_task_ended"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.37106633878553075]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_wait_end_tasks", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[354, 4], [371, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_tasks_raises_failed_to_start", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_tasks_raises_failed_to_start", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[375, 4], [390, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_tasks_raises_cloudwatch_logs", "params": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_descr": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "log_fetcher_mock": [["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["log_fetcher_mock", "get_last_log_messages", "return_value"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.15696645114624222]], "kwargs": [], "log_fetcher_mock": [["unittesmock.MagicMock", 0.4900683006140553]], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_tasks_raises_cloudwatch_logs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[394, 4], [407, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_tasks_raises_cloudwatch_logs_empty", "params": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_descr": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "log_fetcher_mock": [["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["log_fetcher_mock", "get_last_log_messages", "return_value"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.15696645114624222]], "kwargs": [], "log_fetcher_mock": [["unittesmock.MagicMock", 0.4900683006140553]], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_tasks_raises_cloudwatch_logs_empty", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[410, 4], [424, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_tasks_raises_logs_disabled", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.16119926434673992]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_tasks_raises_logs_disabled", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[427, 4], [443, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_tasks_handles_initialization_failure", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.1613263572354653]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_tasks_handles_initialization_failure", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[446, 4], [457, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_tasks_raises_pending", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.1613263572354653]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_tasks_raises_pending", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[460, 4], [473, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_tasks_raises_multiple", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.1613263572354653]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_tasks_raises_multiple", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[476, 4], [504, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_host_terminated_raises", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value", "CONTAINER_NAME", "TASK_ID", "TASK_ID"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_host_terminated_raises", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[507, 4], [513, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_success_task_not_raises", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "return_value"], ["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "arn"], ["self", "ecs", "_check_success_task"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.1613263572354653]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_check_success_task_not_raises", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[534, 4], [579, 83]], "fn_var_ln": {"extend_args": [[558, 8], [558, 19]]}, "fn_var_occur": {"extend_args": [["extend_args", "launch_type"], ["extend_args", "k", "v", "k", "v", "tags", "items"]]}, "name": "test_reattach_successful", "params": {"check_mock": "", "client_mock": "", "launch_type": "", "self": "", "start_mock": "", "tags": "", "wait_mock": "", "xcom_del_mock": "", "xcom_pull_mock": ""}, "params_descr": {"check_mock": "", "client_mock": "", "launch_type": "", "self": "", "start_mock": "", "tags": "", "wait_mock": "", "xcom_del_mock": "", "xcom_pull_mock": ""}, "params_occur": {"check_mock": [["check_mock", "assert_called_once_with"]], "client_mock": [["client_mock", "describe_task_definition", "return_value"], ["client_mock", "list_tasks", "return_value", "TASK_ID"], ["client_mock", "describe_task_definition", "assert_called_once_with", "taskDefinition"], ["client_mock", "list_tasks", "assert_called_once_with", "cluster", "desiredStatus", "family"]], "launch_type": [["self", "set_up_operator", "launch_type", "launch_type", "tags", "tags"], ["extend_args", "launch_type"]], "self": [["self", "set_up_operator", "launch_type", "launch_type", "tags", "tags"], ["self", "ecs", "reattach", "True"], ["self", "ecs", "execute", "self", "mock_context"], ["xcom_pull_mock", "assert_called_once_with", "self", "mock_context", "key", "self", "ecs", "REATTACH_XCOM_KEY", "task_ids", "self", "ecs", "REATTACH_XCOM_TASK_ID_TEMPLATE", "format", "task_id", "self", "ecs", "task_id"], ["self", "ecs", "arn", "TASK_ID"]], "start_mock": [["start_mock", "assert_not_called"]], "tags": [["self", "set_up_operator", "launch_type", "launch_type", "tags", "tags"], ["extend_args", "k", "v", "k", "v", "tags", "items"]], "wait_mock": [["wait_mock", "assert_called_once_with"]], "xcom_del_mock": [["xcom_del_mock", "assert_called_once"]], "xcom_pull_mock": [["xcom_pull_mock", "assert_called_once_with", "self", "mock_context", "key", "self", "ecs", "REATTACH_XCOM_KEY", "task_ids", "self", "ecs", "REATTACH_XCOM_TASK_ID_TEMPLATE", "format", "task_id", "self", "ecs", "task_id"]]}, "params_p": {"args": [], "check_mock": [["unittesmock.MagicMock", 0.09742202424734406]], "client_mock": [["unittesmock.MagicMock", 0.43252370709319604]], "kwargs": [], "launch_type": [["str", 0.09449621708576014]], "self": [], "start_mock": [["unittesmock.MagicMock", 0.09742202424734406]], "tags": [["unittesmock.MagicMock", 0.10411167652342562], ["str", 0.0972581359305283]], "wait_mock": [["unittesmock.MagicMock", 0.09742202424734406]], "xcom_del_mock": [["unittesmock.MagicMock", 0.10017708391738847]], "xcom_pull_mock": [["unittesmock.MagicMock", 0.2871780290819653]]}, "q_name": "TestEcsRunTaskOperator.test_reattach_successful", "ret_exprs": [], "ret_type": "", "variables": {"extend_args": ""}, "variables_p": {"extend_args": [["Set[str]", 0.21445843900511374], ["Generator[Any, None, None]", 0.19154764472074448], ["list", 0.18864862542189054], ["Dict[str, Literal]", 0.11655060841056432], ["str", 0.09969621367630738], ["Dict[str, bool]", 0.09346549744039132]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[595, 4], [627, 83]], "fn_var_ln": {"extend_args": [[614, 8], [614, 19]]}, "fn_var_occur": {"extend_args": [["extend_args", "launch_type"], ["extend_args", "k", "v", "k", "v", "tags", "items"]]}, "name": "test_reattach_save_task_arn_xcom", "params": {"check_mock": "", "client_mock": "", "launch_type": "", "reattach_mock": "", "self": "", "tags": "", "wait_mock": "", "xcom_del_mock": ""}, "params_descr": {"check_mock": "", "client_mock": "", "launch_type": "", "reattach_mock": "", "self": "", "tags": "", "wait_mock": "", "xcom_del_mock": ""}, "params_occur": {"check_mock": [["check_mock", "assert_called_once_with"]], "client_mock": [["client_mock", "describe_task_definition", "return_value"], ["client_mock", "list_tasks", "return_value"], ["client_mock", "run_task", "return_value", "RESPONSE_WITHOUT_FAILURES"], ["client_mock", "run_task", "assert_called_once"]], "launch_type": [["self", "set_up_operator", "launch_type", "launch_type", "tags", "tags"], ["extend_args", "launch_type"]], "reattach_mock": [["reattach_mock", "assert_called_once"]], "self": [["self", "set_up_operator", "launch_type", "launch_type", "tags", "tags"], ["self", "ecs", "reattach", "True"], ["self", "ecs", "execute", "self", "mock_context"], ["self", "ecs", "arn", "TASK_ID"]], "tags": [["self", "set_up_operator", "launch_type", "launch_type", "tags", "tags"], ["extend_args", "k", "v", "k", "v", "tags", "items"]], "wait_mock": [["wait_mock", "assert_called_once_with"]], "xcom_del_mock": [["xcom_del_mock", "assert_called_once"]]}, "params_p": {"args": [], "check_mock": [["unittesmock.MagicMock", 0.10751832611072117]], "client_mock": [["unittesmock.MagicMock", 0.3716694288396867]], "kwargs": [], "launch_type": [], "reattach_mock": [["unittesmock.MagicMock", 0.10751832611072117]], "self": [], "tags": [["unittesmock.MagicMock", 0.10061450551217331], ["str", 0.09494050058079123]], "wait_mock": [["unittesmock.MagicMock", 0.10751832611072117]], "xcom_del_mock": [["unittesmock.MagicMock", 0.108999607933902]]}, "q_name": "TestEcsRunTaskOperator.test_reattach_save_task_arn_xcom", "ret_exprs": [], "ret_type": "", "variables": {"extend_args": ""}, "variables_p": {"extend_args": [["Set[str]", 0.21445843900511374], ["Generator[Any, None, None]", 0.19154764472074448], ["list", 0.18864862542189054], ["Dict[str, Literal]", 0.11655060841056432], ["str", 0.09969621367630738], ["Dict[str, bool]", 0.09346549744039132]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[631, 4], [637, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_execute_xcom_with_log", "params": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_descr": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_occur": {"client_mock": [], "log_fetcher_mock": [["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["log_fetcher_mock", "get_last_log_message", "return_value"]], "self": [["self", "ecs", "do_xcom_push", "True"], ["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["self", "ecs", "execute", "None"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.5893378253212962], ["mock.Mock", 0.11798859196954455]], "kwargs": [], "log_fetcher_mock": [["unittesmock.MagicMock", 0.40442137225760033]], "self": []}, "q_name": "TestEcsRunTaskOperator.test_execute_xcom_with_log", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[641, 4], [647, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_execute_xcom_with_no_log", "params": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_descr": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_occur": {"client_mock": [], "log_fetcher_mock": [["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["log_fetcher_mock", "get_last_log_message", "return_value", "None"]], "self": [["self", "ecs", "do_xcom_push", "True"], ["self", "ecs", "task_log_fetcher", "log_fetcher_mock"], ["self", "ecs", "execute", "None", "None"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.587008954540213], ["mock.Mock", 0.11755279281546097]], "kwargs": [], "log_fetcher_mock": [["unittesmock.MagicMock", 0.3959268465503643]], "self": []}, "q_name": "TestEcsRunTaskOperator.test_execute_xcom_with_no_log", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[650, 4], [652, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_execute_xcom_with_no_log_fetcher", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [], "self": [["self", "ecs", "do_xcom_push", "True"], ["self", "ecs", "execute", "None", "None"]]}, "params_p": {"args": [], "client_mock": [["mock.Mock", 0.19138590280143852], ["List[T]", 0.11603666299430583], ["unittesmock.MagicMock", 0.09060340108879993], ["Generator[None, Any, None]", 0.09035202190224083]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_execute_xcom_with_no_log_fetcher", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[656, 4], [658, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_execute_xcom_disabled", "params": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_descr": {"client_mock": "", "log_fetcher_mock": "", "self": ""}, "params_occur": {"client_mock": [], "log_fetcher_mock": [], "self": [["self", "ecs", "do_xcom_push", "False"], ["self", "ecs", "execute", "None", "None"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.3173101799121474], ["mock.MagicMock", 0.07865585627983201], ["mock.Mock", 0.07488854268171015]], "kwargs": [], "log_fetcher_mock": [["unittesmock.MagicMock", 0.3173101799121474], ["mock.MagicMock", 0.07865585627983201], ["mock.Mock", 0.07488854268171015]], "self": []}, "q_name": "TestEcsRunTaskOperator.test_execute_xcom_disabled", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[661, 4], [670, 102]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_with_defer", "params": {"client_mock": "", "self": ""}, "params_descr": {"client_mock": "", "self": ""}, "params_occur": {"client_mock": [["client_mock", "run_task", "return_value", "RESPONSE_WITHOUT_FAILURES"]], "self": [["self", "ecs", "deferrable", "True"], ["self", "ecs", "execute", "None"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.39909388813655283]], "kwargs": [], "self": []}, "q_name": "TestEcsRunTaskOperator.test_with_defer", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[674, 4], [683, 42]], "fn_var_ln": {"event": [[675, 8], [675, 13]]}, "fn_var_occur": {"event": [["self", "ecs", "execute_complete", "None", "event"]]}, "name": "test_execute_complete", "params": {"client_mock": "", "self": "", "xcom_del_mock": "unittest.mock.MagicMock"}, "params_descr": {"client_mock": "", "self": "", "xcom_del_mock": ""}, "params_occur": {"client_mock": [["client_mock", "describe_tasks", "assert_called_once_with", "cluster", "tasks"]], "self": [["self", "ecs", "reattach", "True"], ["self", "ecs", "execute_complete", "None", "event"]], "xcom_del_mock": [["xcom_del_mock", "assert_called_once"]]}, "params_p": {"args": [], "client_mock": [["unittesmock.MagicMock", 0.4798724526645809], ["mock.Mock", 0.09562328136947665]], "kwargs": [], "self": [], "xcom_del_mock": [["unittesmock.MagicMock", 0.10850509262306222]]}, "q_name": "TestEcsRunTaskOperator.test_execute_complete", "ret_exprs": [], "ret_type": "", "variables": {"event": ""}, "variables_p": {"event": [["sys._version_info", 0.17053062700361704], ["Type[Tuple[str, ...]]", 0.12208243694604957], ["Optional[dict]", 0.0959248381492056], ["TypeError", 0.09327120885843183], ["List[str]", 0.08757835940811343], ["int", 0.0852011804754361]]}}], "name": "TestEcsRunTaskOperator", "q_name": "TestEcsRunTaskOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[686, 0], [746, 33]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[688, 4], [709, 33]], "fn_var_ln": {"expected_waiter_config": [[703, 8], [703, 30]], "mocked_waiters": [[689, 8], [689, 22]], "op": [[691, 8], [691, 10]], "result": [[699, 12], [699, 18]], "return_value": [[690, 8], [690, 39]]}, "fn_var_occur": {"expected_waiter_config": [["expected_waiter_config", "waiter_delay"], ["expected_waiter_config", "waiter_max_attempts"], ["mocked_waiters", "wait", "assert_called_once_with", "clusters", "mock", "ANY", "WaiterConfig", "expected_waiter_config"]], "mocked_waiters": [["mocked_waiters", "mock", "MagicMock", "name"], ["patch_hook_waiters", "return_value", "mocked_waiters"], ["mocked_waiters", "wait", "assert_called_once_with", "clusters", "mock", "ANY", "WaiterConfig", "expected_waiter_config"]], "op": [["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["result", "op", "execute"]], "result": [["result", "op", "execute"], ["result", "None"]], "return_value": [["patch_hook_waiters", "return_value", "mocked_waiters"]]}, "name": "test_execute_with_waiter", "params": {"patch_hook_waiters": "", "self": "", "waiter_delay": "", "waiter_max_attempts": ""}, "params_descr": {"patch_hook_waiters": "", "self": "", "waiter_delay": "", "waiter_max_attempts": ""}, "params_occur": {"patch_hook_waiters": [["patch_hook_waiters", "return_value", "mocked_waiters"], ["patch_hook_waiters", "assert_called_once_with"]], "self": [["mock", "patch", "object", "self", "client", "mock_client_method"]], "waiter_delay": [["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["expected_waiter_config", "waiter_delay"]], "waiter_max_attempts": [["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["expected_waiter_config", "waiter_max_attempts"]]}, "params_p": {"args": [], "kwargs": [], "patch_hook_waiters": [["tests.async_mock.MagicMock", 0.44858784167096977], ["unittesmock.MagicMock", 0.21617843143219445]], "self": [], "waiter_delay": [["cmk.utils.type_defs.UserId", 0.09003855997898932]], "waiter_max_attempts": [["cmk.utils.type_defs.UserId", 0.09003855997898932]]}, "q_name": "TestEcsCreateClusterOperator.test_execute_with_waiter", "ret_exprs": [], "ret_type": "", "variables": {"expected_waiter_config": "", "mocked_waiters": "", "op": "", "result": "", "return_value": ""}, "variables_p": {"expected_waiter_config": [["dict", 0.11217144042763309], ["List[Dict[str, str]]", 0.10592950920806352], ["Dict[str, Union[None, Any, int, str]]", 0.10294087982768123], ["Dict[Any, Union[dict, Any]]", 0.10198902621762447]], "mocked_waiters": [["mock.Mock", 0.3299071270646281], ["unittesmock.MagicMock", 0.09944199504999726]], "op": [["str", 0.629635434428296], ["int", 0.13963195308668394]], "result": [["List[str]", 0.09987539812500021], ["str", 0.09496652777581002], ["list", 0.0854858429306422]], "return_value": [["str", 0.26264022162697553], ["Dict[str, Union[Any, Any]]", 0.15053535799767104], ["Optional[bytes]", 0.0994914848277443], ["List[Dict[str, Any]]", 0.09459989058092029], ["int", 0.07310200525289469]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[712, 4], [728, 49]], "fn_var_ln": {"op": [[713, 8], [713, 10]]}, "fn_var_occur": {"op": [["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "deferrable", "True", "waiter_delay", "waiter_max_attempts"], ["op", "execute", "None"]]}, "name": "test_execute_deferrable", "params": {"mock_client": "unittest.mock.MagicMock", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "create_cluster", "return_value", "EcsClusterStates", "PROVISIONING"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.31812587490238586], ["bytes", 0.2025891123708728], ["mock.MagicMock", 0.07375011164698134]], "self": []}, "q_name": "TestEcsCreateClusterOperator.test_execute_deferrable", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.20417935314990496], ["Pattern[Any]", 0.10888322558543334], ["Dict[str, List[str]]", 0.10639902559963639], ["Dict[str, str]", 0.08913154749533367], ["Dict[int, str]", 0.08283595715216265], ["int", 0.07595311914211232]]}}, {"docstring": {"func": "Test if cluster created during initial request.", "long_descr": null, "ret": null}, "fn_lc": [[730, 4], [738, 59]], "fn_var_ln": {"op": [[732, 8], [732, 10]], "result": [[735, 12], [735, 18]], "return_value": [[734, 12], [734, 43]]}, "fn_var_occur": {"op": [["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True"], ["result", "op", "execute"]], "result": [["result", "op", "execute"]], "return_value": [["mock_client_method", "return_value"]]}, "name": "test_execute_immediate_create", "params": {"patch_hook_waiters": "", "self": ""}, "params_descr": {"patch_hook_waiters": "", "self": ""}, "params_occur": {"patch_hook_waiters": [["patch_hook_waiters", "assert_not_called"]], "self": [["mock", "patch", "object", "self", "client", "mock_client_method"]]}, "params_p": {"args": [], "kwargs": [], "patch_hook_waiters": [["unittesmock.MagicMock", 0.20906119292704445]], "self": []}, "q_name": "TestEcsCreateClusterOperator.test_execute_immediate_create", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "result": "", "return_value": ""}, "variables_p": {"op": [["str", 0.6560631447618291], ["int", 0.12353817817237954]], "result": [["Dict[str, str]", 0.2039528608027888], ["Dict[str, int]", 0.2039528608027888], ["List[Tuple[str, int]]", 0.18670894136219282], ["Dict[str, Union[int, str]]", 0.1019764304013944], ["Dict[str, float]", 0.1019764304013944], ["List[int]", 0.1019764304013944], ["str", 0.0994560458280464]], "return_value": [["list", 0.13160179302869388], ["Dict[str, Union[int, str]]", 0.12244657231178317], ["Dict[str, Any]", 0.09439273458583913], ["Optional[bytes]", 0.08845279734466752], ["Optional[str]", 0.08284640186554883], ["bool", 0.07996583449271805], ["str", 0.07694459669858347]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[740, 4], [746, 33]], "fn_var_ln": {"op": [[741, 8], [741, 10]], "result": [[743, 12], [743, 18]]}, "fn_var_occur": {"op": [["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "False"], ["result", "op", "execute"]], "result": [["result", "op", "execute"], ["result", "None"]]}, "name": "test_execute_without_waiter", "params": {"patch_hook_waiters": "", "self": ""}, "params_descr": {"patch_hook_waiters": "", "self": ""}, "params_occur": {"patch_hook_waiters": [["patch_hook_waiters", "assert_not_called"]], "self": [["mock", "patch", "object", "self", "client", "mock_client_method"]]}, "params_p": {"args": [], "kwargs": [], "patch_hook_waiters": [["unittesmock.MagicMock", 0.12266842379040777]], "self": []}, "q_name": "TestEcsCreateClusterOperator.test_execute_without_waiter", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "result": ""}, "variables_p": {"op": [["str", 0.5719976516433659], ["int", 0.2082937660256903]], "result": [["List[str]", 0.09987539812500021], ["str", 0.09496652777581002], ["list", 0.0854858429306422]]}}], "name": "TestEcsCreateClusterOperator", "q_name": "TestEcsCreateClusterOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[749, 0], [810, 33]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[751, 4], [773, 33]], "fn_var_ln": {"expected_waiter_config": [[767, 8], [767, 30]], "mocked_waiters": [[752, 8], [752, 22]], "op": [[754, 8], [754, 10]], "result": [[763, 12], [763, 18]], "return_value": [[753, 8], [753, 39]]}, "fn_var_occur": {"expected_waiter_config": [["expected_waiter_config", "waiter_delay"], ["expected_waiter_config", "waiter_max_attempts"], ["mocked_waiters", "wait", "assert_called_once_with", "clusters", "mock", "ANY", "WaiterConfig", "expected_waiter_config"]], "mocked_waiters": [["mocked_waiters", "mock", "MagicMock", "name"], ["patch_hook_waiters", "return_value", "mocked_waiters"], ["mocked_waiters", "wait", "assert_called_once_with", "clusters", "mock", "ANY", "WaiterConfig", "expected_waiter_config"]], "op": [["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["result", "op", "execute"]], "result": [["result", "op", "execute"], ["result", "None"]], "return_value": [["patch_hook_waiters", "return_value", "mocked_waiters"]]}, "name": "test_execute_with_waiter", "params": {"patch_hook_waiters": "", "self": "", "waiter_delay": "", "waiter_max_attempts": ""}, "params_descr": {"patch_hook_waiters": "", "self": "", "waiter_delay": "", "waiter_max_attempts": ""}, "params_occur": {"patch_hook_waiters": [["patch_hook_waiters", "return_value", "mocked_waiters"], ["patch_hook_waiters", "assert_called_once_with"]], "self": [["mock", "patch", "object", "self", "client", "mock_client_method"]], "waiter_delay": [["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["expected_waiter_config", "waiter_delay"]], "waiter_max_attempts": [["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["expected_waiter_config", "waiter_max_attempts"]]}, "params_p": {"args": [], "kwargs": [], "patch_hook_waiters": [["tests.async_mock.MagicMock", 0.44858784167096977], ["unittesmock.MagicMock", 0.21617843143219445]], "self": [], "waiter_delay": [["cmk.utils.type_defs.UserId", 0.09793607724580654]], "waiter_max_attempts": [["cmk.utils.type_defs.UserId", 0.09793607724580654]]}, "q_name": "TestEcsDeleteClusterOperator.test_execute_with_waiter", "ret_exprs": [], "ret_type": "", "variables": {"expected_waiter_config": "", "mocked_waiters": "", "op": "", "result": "", "return_value": ""}, "variables_p": {"expected_waiter_config": [["dict", 0.11217144042763309], ["List[Dict[str, str]]", 0.10592950920806352], ["Dict[str, Union[None, Any, int, str]]", 0.10294087982768123], ["Dict[Any, Union[dict, Any]]", 0.10198902621762447]], "mocked_waiters": [["mock.Mock", 0.3299071270646281], ["unittesmock.MagicMock", 0.09944199504999726]], "op": [["str", 0.5465755376521019], ["int", 0.1385602442986504], ["tuple", 0.09135144249055581]], "result": [["List[str]", 0.09987539812500021], ["str", 0.09496652777581002], ["list", 0.0854858429306422]], "return_value": [["str", 0.26264022162697553], ["Dict[str, Union[Any, Any]]", 0.15053535799767104], ["Optional[bytes]", 0.0994914848277443], ["List[Dict[str, Any]]", 0.09459989058092029], ["int", 0.07310200525289469]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[776, 4], [792, 49]], "fn_var_ln": {"op": [[777, 8], [777, 10]]}, "fn_var_occur": {"op": [["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "deferrable", "True", "waiter_delay", "waiter_max_attempts"], ["op", "execute", "None"]]}, "name": "test_execute_deferrable", "params": {"mock_client": "unittest.mock.MagicMock", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "delete_cluster", "return_value", "EcsClusterStates", "DEPROVISIONING"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.4944684493818151]], "self": []}, "q_name": "TestEcsDeleteClusterOperator.test_execute_deferrable", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.30578876588862497], ["Pattern[Any]", 0.09584368836637114], ["Dict[str, Any]", 0.09300950471748405], ["Dict[str, List[str]]", 0.09217134350446782], ["list", 0.08440830571874182]]}}, {"docstring": {"func": "Test if cluster deleted during initial request.", "long_descr": null, "ret": null}, "fn_lc": [[794, 4], [802, 61]], "fn_var_ln": {"op": [[796, 8], [796, 10]], "result": [[799, 12], [799, 18]], "return_value": [[798, 12], [798, 43]]}, "fn_var_occur": {"op": [["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True"], ["result", "op", "execute"]], "result": [["result", "op", "execute"]], "return_value": [["mock_client_method", "return_value"]]}, "name": "test_execute_immediate_delete", "params": {"patch_hook_waiters": "", "self": ""}, "params_descr": {"patch_hook_waiters": "", "self": ""}, "params_occur": {"patch_hook_waiters": [["patch_hook_waiters", "assert_not_called"]], "self": [["mock", "patch", "object", "self", "client", "mock_client_method"]]}, "params_p": {"args": [], "kwargs": [], "patch_hook_waiters": [["unittesmock.MagicMock", 0.1273908283294683]], "self": []}, "q_name": "TestEcsDeleteClusterOperator.test_execute_immediate_delete", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "result": "", "return_value": ""}, "variables_p": {"op": [["str", 0.5728759775429576], ["int", 0.12810971567100082], ["tuple", 0.07946723721127309]], "result": [["Dict[str, str]", 0.2039528608027888], ["Dict[str, int]", 0.2039528608027888], ["List[Tuple[str, int]]", 0.18670894136219282], ["Dict[str, Union[int, str]]", 0.1019764304013944], ["Dict[str, float]", 0.1019764304013944], ["List[int]", 0.1019764304013944], ["str", 0.0994560458280464]], "return_value": [["list", 0.13160179302869388], ["Dict[str, Union[int, str]]", 0.12244657231178317], ["Dict[str, Any]", 0.09439273458583913], ["Optional[bytes]", 0.08845279734466752], ["Optional[str]", 0.08284640186554883], ["bool", 0.07996583449271805], ["str", 0.07694459669858347]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[804, 4], [810, 33]], "fn_var_ln": {"op": [[805, 8], [805, 10]], "result": [[807, 12], [807, 18]]}, "fn_var_occur": {"op": [["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "False"], ["result", "op", "execute"]], "result": [["result", "op", "execute"], ["result", "None"]]}, "name": "test_execute_without_waiter", "params": {"patch_hook_waiters": "", "self": ""}, "params_descr": {"patch_hook_waiters": "", "self": ""}, "params_occur": {"patch_hook_waiters": [["patch_hook_waiters", "assert_not_called"]], "self": [["mock", "patch", "object", "self", "client", "mock_client_method"]]}, "params_p": {"args": [], "kwargs": [], "patch_hook_waiters": [["unittesmock.MagicMock", 0.12266842379040777]], "self": []}, "q_name": "TestEcsDeleteClusterOperator.test_execute_without_waiter", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "result": ""}, "variables_p": {"op": [["str", 0.571017819285645], ["int", 0.14353082766726968], ["tuple", 0.07183670969032172]], "result": [["List[str]", 0.09987539812500021], ["str", 0.09496652777581002], ["list", 0.0854858429306422]]}}], "name": "TestEcsDeleteClusterOperator", "q_name": "TestEcsDeleteClusterOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[813, 0], [829, 110]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test if task definition deleted during initial request.", "long_descr": null, "ret": null}, "fn_lc": [[814, 4], [825, 34]], "fn_var_ln": {"op": [[816, 8], [816, 10]], "result": [[823, 12], [823, 18]], "return_value": [[820, 12], [820, 43]]}, "fn_var_occur": {"op": [["op", "EcsDeregisterTaskDefinitionOperator", "task_id", "task_definition", "TASK_DEFINITION_NAME", "wait_for_completion", "True"], ["result", "op", "execute"]], "result": [["result", "op", "execute"]], "return_value": [["mock_client_method", "return_value"]]}, "name": "test_execute_immediate_delete", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock", "patch", "object", "self", "client", "mock_client_method"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsDeregisterTaskDefinitionOperator.test_execute_immediate_delete", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "result": "", "return_value": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.2675702363590627], ["Dict[str, str]", 0.08377679478347118]], "result": [["Dict[str, str]", 0.2039528608027888], ["Dict[str, int]", 0.2039528608027888], ["List[Tuple[str, int]]", 0.18670894136219282], ["Dict[str, Union[int, str]]", 0.1019764304013944], ["Dict[str, float]", 0.1019764304013944], ["List[int]", 0.1019764304013944], ["str", 0.0994560458280464]], "return_value": [["list", 0.13160179302869388], ["Dict[str, Union[int, str]]", 0.12244657231178317], ["Dict[str, Any]", 0.09439273458583913], ["Optional[bytes]", 0.08845279734466752], ["Optional[str]", 0.08284640186554883], ["bool", 0.07996583449271805], ["str", 0.07694459669858347]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[827, 4], [829, 110]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_deprecation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsDeregisterTaskDefinitionOperator.test_deprecation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestEcsDeregisterTaskDefinitionOperator", "q_name": "TestEcsDeregisterTaskDefinitionOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[832, 0], [867, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test if task definition created during initial request.", "long_descr": null, "ret": null}, "fn_lc": [[833, 4], [861, 34]], "fn_var_ln": {"expected_task_definition_config": [[836, 8], [836, 39]], "mock_ti": [[835, 8], [835, 15]], "op": [[851, 8], [851, 10]], "result": [[857, 12], [857, 18]], "return_value": [[854, 12], [854, 43]]}, "fn_var_occur": {"expected_task_definition_config": [["expected_task_definition_config", "CONTAINER_NAME"], ["mock_client_method", "assert_called_once_with", "expected_task_definition_config"]], "mock_ti": [["mock_ti", "mock", "MagicMock", "name"], ["result", "op", "execute", "mock_ti"], ["mock_ti", "xcom_push", "assert_called_once_with", "key", "value"]], "op": [["op", "EcsRegisterTaskDefinitionOperator", "task_id", "TASK_DEFINITION_CONFIG"], ["result", "op", "execute", "mock_ti"]], "result": [["result", "op", "execute", "mock_ti"]], "return_value": [["mock_client_method", "return_value"]]}, "name": "test_execute_immediate_create", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock", "patch", "object", "self", "client", "mock_client_method"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsRegisterTaskDefinitionOperator.test_execute_immediate_create", "ret_exprs": [], "ret_type": "", "variables": {"expected_task_definition_config": "", "mock_ti": "", "op": "", "result": "", "return_value": ""}, "variables_p": {"expected_task_definition_config": [["str", 0.181622203123119], ["Dict[str, Union[Any, Any, Any]]", 0.10962993878360999], ["List[Dict[str, str]]", 0.08936554130710922], ["Counter[str]", 0.08652317430845517], ["Dict[str, Any]", 0.07978649590209164]], "mock_ti": [["mock.Mock", 0.20051887201004798], ["unittesmock.MagicMock", 0.19998040490616126]], "op": [["Dict[str, Union[Any, bool, str]]", 0.3230031973674049], ["Dict[str, str]", 0.08002094639411662]], "result": [["str", 0.3775092381475001], ["Dict[str, Union[float, str]]", 0.12265049241498321], ["Dict[str, Union[Any, Any, Any]]", 0.10407102135809441], ["dict", 0.09514719229172787], ["Dict[str, str]", 0.08675342812737398]], "return_value": [["list", 0.13160179302869388], ["Dict[str, Union[int, str]]", 0.12244657231178317], ["Dict[str, Any]", 0.09439273458583913], ["Optional[bytes]", 0.08845279734466752], ["Optional[str]", 0.08284640186554883], ["bool", 0.07996583449271805], ["str", 0.07694459669858347]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[863, 4], [867, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_deprecation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEcsRegisterTaskDefinitionOperator.test_deprecation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestEcsRegisterTaskDefinitionOperator", "q_name": "TestEcsRegisterTaskDefinitionOperator", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 0], [95, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "patch_hook_waiters", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "patch_hook_waiters", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "sys", "copy", "deepcopy", "unittest", "mock", "unittest", "mock", "MagicMock", "PropertyMock", "boto3", "pytest", "airflow", "exceptions", "AirflowException", "AirflowProviderDeprecationWarning", "TaskDeferred", "airflow", "providers", "amazon", "aws", "exceptions", "EcsOperatorError", "EcsTaskFailToStart", "airflow", "providers", "amazon", "aws", "hooks", "ecs", "EcsClusterStates", "EcsHook", "airflow", "providers", "amazon", "aws", "operators", "ecs", "DEFAULT_CONN_ID", "EcsBaseOperator", "EcsCreateClusterOperator", "EcsDeleteClusterOperator", "EcsDeregisterTaskDefinitionOperator", "EcsRegisterTaskDefinitionOperator", "EcsRunTaskOperator", "airflow", "providers", "amazon", "aws", "triggers", "ecs", "TaskDoneTrigger", "airflow", "providers", "amazon", "aws", "utils", "task_log_fetcher", "AwsTaskLogFetcher", "airflow", "utils", "types", "NOTSET"], "mod_var_ln": {"CLUSTER_NAME": [[44, 0], [44, 12]], "CONTAINER_NAME": [[45, 0], [45, 14]], "RESPONSE_WITHOUT_FAILURES": [[65, 0], [65, 25]], "TASK_DEFINITION_CONFIG": [[48, 0], [48, 22]], "TASK_DEFINITION_NAME": [[47, 0], [47, 20]], "TASK_ID": [[46, 0], [46, 7]], "WAITERS_TEST_CASES": [[84, 0], [84, 18]]}, "mod_var_occur": {"CLUSTER_NAME": [["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["mock_client_method", "assert_called_once_with", "clusterName", "CLUSTER_NAME"], ["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "deferrable", "True", "waiter_delay", "waiter_max_attempts"], ["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True"], ["mock_client_method", "assert_called_once_with", "clusterName", "CLUSTER_NAME"], ["op", "EcsCreateClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "False"], ["mock_client_method", "assert_called_once_with", "clusterName", "CLUSTER_NAME"], ["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True", "waiter_delay", "waiter_delay", "waiter_max_attempts", "waiter_max_attempts"], ["mock_client_method", "assert_called_once_with", "cluster", "CLUSTER_NAME"], ["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "deferrable", "True", "waiter_delay", "waiter_max_attempts"], ["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "True"], ["mock_client_method", "assert_called_once_with", "cluster", "CLUSTER_NAME"], ["op", "EcsDeleteClusterOperator", "task_id", "cluster_name", "CLUSTER_NAME", "wait_for_completion", "False"], ["mock_client_method", "assert_called_once_with", "cluster", "CLUSTER_NAME"]], "CONTAINER_NAME": [["TASK_DEFINITION_CONFIG", "CONTAINER_NAME"], ["RESPONSE_WITHOUT_FAILURES", "CONTAINER_NAME", "TASK_ID", "TASK_ID"], ["client_mock", "describe_tasks", "return_value", "CONTAINER_NAME", "TASK_ID", "TASK_ID"], ["expected_task_definition_config", "CONTAINER_NAME"]], "RESPONSE_WITHOUT_FAILURES": [["client_mock", "run_task", "return_value", "RESPONSE_WITHOUT_FAILURES"], ["resp_failures", "deepcopy", "RESPONSE_WITHOUT_FAILURES"], ["client_mock", "run_task", "return_value", "RESPONSE_WITHOUT_FAILURES"], ["client_mock", "run_task", "return_value", "RESPONSE_WITHOUT_FAILURES"]], "TASK_DEFINITION_CONFIG": [["op", "EcsRegisterTaskDefinitionOperator", "task_id", "TASK_DEFINITION_CONFIG"], ["EcsRegisterTaskDefinitionOperator", "task_id", "wait_for_completion", "True", "TASK_DEFINITION_CONFIG"]], "TASK_DEFINITION_NAME": [["op", "EcsDeregisterTaskDefinitionOperator", "task_id", "task_definition", "TASK_DEFINITION_NAME", "wait_for_completion", "True"], ["mock_client_method", "assert_called_once_with", "taskDefinition", "TASK_DEFINITION_NAME"]], "TASK_ID": [["RESPONSE_WITHOUT_FAILURES", "CONTAINER_NAME", "TASK_ID", "TASK_ID"], ["self", "ecs", "arn", "TASK_ID"], ["id", "EcsRunTaskOperator", "_get_ecs_task_id", "TASK_ID"], ["id", "TASK_ID"], ["client_mock", "describe_tasks", "return_value", "CONTAINER_NAME", "TASK_ID", "TASK_ID"], ["client_mock", "list_tasks", "return_value", "TASK_ID"], ["self", "ecs", "arn", "TASK_ID"], ["self", "ecs", "arn", "TASK_ID"], ["deferred", "value", "trigger", "task_arn", "TASK_ID"]], "WAITERS_TEST_CASES": []}, "no_types_annot": {"D": 3, "I": 0, "U": 157}, "session_id": "HgiMzPlIilZ7rnluJUW0PX9UvQT50zTLPvYcehZiRXs", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"CLUSTER_NAME": "", "CONTAINER_NAME": "", "RESPONSE_WITHOUT_FAILURES": "", "TASK_DEFINITION_CONFIG": "", "TASK_DEFINITION_NAME": "", "TASK_ID": "", "WAITERS_TEST_CASES": ""}, "variables_p": {"CLUSTER_NAME": [["str", 0.8898748073805895], ["List[str]", 0.11012519261941059]], "CONTAINER_NAME": [["str", 1.0]], "RESPONSE_WITHOUT_FAILURES": [["Dict[str, str]", 0.19371483031476325], ["tests.utils.MockCoroutine", 0.12216853230477392], ["Dict[str, Union[None, Any, Any]]", 0.09516291130941666], ["str", 0.093279198992447]], "TASK_DEFINITION_CONFIG": [["Dict[str, Any]", 0.09581573879295652], ["Dict[str, Union[Any, Any, Any]]", 0.08152337564680819]], "TASK_DEFINITION_NAME": [["str", 0.7165283858968066], ["cmk.utils.type_defs.UserId", 0.11141768453868427], ["Set[str]", 0.08641280463094318]], "TASK_ID": [["str", 0.9051764928658645], ["int", 0.09482350713413558]], "WAITERS_TEST_CASES": [["str", 0.49999999999999994], ["list", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[object]", 0.09999999999999999], ["Dict[str, Union[Any, Any, Any]]", 0.09999999999999999], ["List[Tuple[Any, ...]]", 0.09999999999999999]]}}}