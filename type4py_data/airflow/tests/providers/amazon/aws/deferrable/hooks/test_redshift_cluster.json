{"error": null, "response": {"classes": [{"cls_lc": [[30, 0], [121, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test that describe_clusters get called with correct param", "long_descr": null, "ret": null}, "fn_lc": [[33, 4], [39, 9]], "fn_var_ln": {"hook": [[35, 8], [35, 12]]}, "fn_var_occur": {"hook": [["hook", "RedshiftAsyncHook", "aws_conn_id", "client_type", "resource_type"], ["hook", "cluster_status", "cluster_identifier"]]}, "name": "test_cluster_status", "params": {"mock_make_api_call": "", "self": ""}, "params_descr": {"mock_make_api_call": "", "self": ""}, "params_occur": {"mock_make_api_call": [["mock_make_api_call", "assert_called_once_with"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_make_api_call": [["mock.MagicMock", 0.22120718893568586]], "self": []}, "q_name": "TestRedshiftAsyncHook.test_cluster_status", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.29262324146083757], ["int", 0.10233925078905752], ["Tuple[str, str, str, str, str, str, str]", 0.08781455190296909]]}}, {"docstring": {"func": "Test that pause_cluster get called with correct param", "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [49, 9]], "fn_var_ln": {"hook": [[45, 8], [45, 12]]}, "fn_var_occur": {"hook": [["hook", "RedshiftAsyncHook", "aws_conn_id", "client_type", "resource_type"], ["hook", "pause_cluster", "cluster_identifier"]]}, "name": "test_pause_cluster", "params": {"mock_make_api_call": "", "self": ""}, "params_descr": {"mock_make_api_call": "", "self": ""}, "params_occur": {"mock_make_api_call": [["mock_make_api_call", "assert_called_once_with"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_make_api_call": [["mock.MagicMock", 0.285783231281119], ["mock.Mock", 0.08619447837497543]], "self": []}, "q_name": "TestRedshiftAsyncHook.test_pause_cluster", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.3073320577923555], ["list", 0.10881441670371374], ["Tuple[Any, Any]", 0.09555929146895337]]}}, {"docstring": {"func": "Test get_cluster_status async function with success response", "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [60, 76]], "fn_var_ln": {"flag": [[56, 8], [56, 12]], "hook": [[58, 8], [58, 12]], "result": [[59, 8], [59, 14]], "return_value": [[57, 8], [57, 35]]}, "fn_var_occur": {"flag": [["flag", "asyncio", "Event"], ["result", "hook", "get_cluster_status", "flag"]], "hook": [["hook", "RedshiftAsyncHook", "aws_conn_id"], ["result", "hook", "get_cluster_status", "flag"]], "result": [["result", "hook", "get_cluster_status", "flag"]], "return_value": [["cluster_status", "return_value"]]}, "name": "test_get_cluster_status", "params": {"cluster_status": "", "mock_client": "", "self": ""}, "params_descr": {"cluster_status": "", "mock_client": "", "self": ""}, "params_occur": {"cluster_status": [["cluster_status", "return_value"]], "mock_client": [], "self": []}, "params_p": {"args": [], "cluster_status": [["int", 0.09199572348430976], ["str", 0.09065514846950481]], "kwargs": [], "mock_client": [["asyncio.AbstractEventLoop", 0.21243353847070373], ["mock.MagicMock", 0.19545251798245994]], "self": []}, "q_name": "TestRedshiftAsyncHook.test_get_cluster_status", "ret_exprs": [], "ret_type": "", "variables": {"flag": "", "hook": "", "result": "", "return_value": ""}, "variables_p": {"flag": [["Tuple[dict]", 0.1319214275409469], ["Dict[str, int]", 0.1272764752785605], ["str", 0.09279819591189577], ["asyncio.events.AbstractEventLoop", 0.08930993748541781]], "hook": [["str", 0.22182559457268836], ["list", 0.08788575247307821]], "result": [["str", 0.1899753130952216], ["tuple", 0.10813893442872323], ["Dict[str, List[float]]", 0.08062538031573256], ["int", 0.07894559781376181], ["bytearray", 0.07740509963241689], ["list", 0.07740211403045306]], "return_value": [["int", 0.20839172430272274], ["staticmethod", 0.1878247191099889], ["Tuple[str, str]", 0.11705725707796338], ["Callable", 0.10419586215136137], ["Pattern[str]", 0.10419586215136137], ["dict", 0.08863961046285014], ["Dict[str, object]", 0.08179573706479826]]}}, {"docstring": {"func": "Test get_cluster_status async function with exception response", "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [82, 9]], "fn_var_ln": {"flag": [[66, 8], [66, 12]], "hook": [[76, 8], [76, 12]], "result": [[77, 8], [77, 14]], "side_effect": [[67, 8], [67, 34]]}, "fn_var_occur": {"flag": [["flag", "asyncio", "Event"], ["result", "hook", "get_cluster_status", "flag"]], "hook": [["hook", "RedshiftAsyncHook", "aws_conn_id"], ["result", "hook", "get_cluster_status", "flag"]], "result": [["result", "hook", "get_cluster_status", "flag"]], "side_effect": [["cluster_status", "side_effect", "ClientError", "operation_name"]]}, "name": "test_get_cluster_status_exception", "params": {"cluster_status": "", "self": ""}, "params_descr": {"cluster_status": "", "self": ""}, "params_occur": {"cluster_status": [["cluster_status", "side_effect", "ClientError", "operation_name"]], "self": []}, "params_p": {"args": [], "cluster_status": [["str", 0.41012819421834207], ["bytes", 0.09460899313505113]], "kwargs": [], "self": []}, "q_name": "TestRedshiftAsyncHook.test_get_cluster_status_exception", "ret_exprs": [], "ret_type": "", "variables": {"flag": "", "hook": "", "result": "", "side_effect": ""}, "variables_p": {"flag": [["Tuple[dict]", 0.1319214275409469], ["Dict[str, int]", 0.1272764752785605], ["str", 0.09279819591189577], ["asyncio.events.AbstractEventLoop", 0.08930993748541781]], "hook": [["str", 0.22182559457268836], ["list", 0.08788575247307821]], "result": [["str", 0.1899753130952216], ["tuple", 0.10813893442872323], ["Dict[str, List[float]]", 0.08062538031573256], ["int", 0.07894559781376181], ["bytearray", 0.07740509963241689], ["list", 0.07740211403045306]], "side_effect": [["str", 0.4109534246951654], ["Dict[Optional[str], str]", 0.3967511146155146], ["Set[str]", 0.09668049392959423], ["int", 0.09561496675972578]]}}, {"docstring": {"func": "Test Resume cluster async hook function by mocking return value of resume_cluster", "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [93, 9]], "fn_var_ln": {"hook": [[89, 8], [89, 12]]}, "fn_var_occur": {"hook": [["hook", "RedshiftAsyncHook"], ["hook", "resume_cluster", "cluster_identifier"]]}, "name": "test_resume_cluster", "params": {"mock_make_api_call": "", "self": ""}, "params_descr": {"mock_make_api_call": "", "self": ""}, "params_occur": {"mock_make_api_call": [["mock_make_api_call", "assert_called_once_with"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_make_api_call": [["mock.MagicMock", 0.285783231281119], ["mock.Mock", 0.08619447837497543]], "self": []}, "q_name": "TestRedshiftAsyncHook.test_resume_cluster", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": "Test Resume cluster async hook function with exception by mocking return value of resume_cluster", "long_descr": null, "ret": null}, "fn_lc": [[97, 4], [121, 9]], "fn_var_ln": {"hook": [[115, 8], [115, 12]], "result": [[116, 8], [116, 14]]}, "fn_var_occur": {"hook": [["hook", "RedshiftAsyncHook", "aws_conn_id"], ["result", "hook", "resume_cluster", "cluster_identifier"]], "result": [["result", "hook", "resume_cluster", "cluster_identifier"]]}, "name": "test_resume_cluster_exception", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "__aenter__", "return_value", "resume_cluster", "side_effect", "ClientError", "operation_name"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestRedshiftAsyncHook.test_resume_cluster_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "result": ""}, "variables_p": {"hook": [["str", 0.7051872676468858], ["Dict[str, str]", 0.11050596897284237], ["int", 0.09218203275953817]], "result": [["list", 0.7]]}}], "name": "TestRedshiftAsyncHook", "q_name": "TestRedshiftAsyncHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "asyncio", "unittest", "mock", "pytest", "botocore", "exceptions", "ClientError", "airflow", "providers", "amazon", "aws", "hooks", "redshift_cluster", "RedshiftAsyncHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 26}, "session_id": "h4m6RhUvwBDCJ1e4UI6ix121L1ODp43iwQnk4xkrL08", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}