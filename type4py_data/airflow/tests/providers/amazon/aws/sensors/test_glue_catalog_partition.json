{"error": null, "response": {"classes": [{"cls_lc": [[28, 0], [95, 92]], "cls_var_ln": {"task_id": [[30, 4], [30, 11]]}, "cls_var_occur": {"task_id": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [37, 26]], "fn_var_ln": {"op": [[36, 8], [36, 10]], "return_value": [[35, 8], [35, 45]]}, "fn_var_occur": {"op": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name"], ["op", "poke"]], "return_value": [["mock_check_for_partition", "return_value", "True"]]}, "name": "test_poke", "params": {"mock_check_for_partition": "", "self": ""}, "params_descr": {"mock_check_for_partition": "", "self": ""}, "params_occur": {"mock_check_for_partition": [["mock_check_for_partition", "return_value", "True"]], "self": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_for_partition": [], "self": []}, "q_name": "TestGlueCatalogPartitionSensor.test_poke", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "return_value": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.22537127020912315], ["List[List[int]]", 0.17321636511188024]], "return_value": [["list", 0.16029958167037964], ["List[str]", 0.14553720445254295], ["Optional[bytes]", 0.12694362101953677], ["str", 0.11176311340731358], ["Tuple[int, int]", 0.09377314312562458], ["int", 0.07926586939411204], ["Dict[str, Dict[str, Any]]", 0.06948960229955532]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 4], [44, 30]], "fn_var_ln": {"op": [[43, 8], [43, 10]], "return_value": [[42, 8], [42, 45]]}, "fn_var_occur": {"op": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name"], ["op", "poke"]], "return_value": [["mock_check_for_partition", "return_value", "False"]]}, "name": "test_poke_false", "params": {"mock_check_for_partition": "", "self": ""}, "params_descr": {"mock_check_for_partition": "", "self": ""}, "params_occur": {"mock_check_for_partition": [["mock_check_for_partition", "return_value", "False"]], "self": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_for_partition": [], "self": []}, "q_name": "TestGlueCatalogPartitionSensor.test_poke_false", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "return_value": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.22537127020912315], ["List[List[int]]", 0.17321636511188024]], "return_value": [["str", 0.32734597058835074], ["Dict[str, Dict[str, Any]]", 0.1580116078228232], ["float", 0.14163793755070184], ["Dict[str, Union[Any, int]]", 0.0840377256230441], ["list", 0.08311870144653177], ["set", 0.07561662443219579], ["int", 0.06772012563800678]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [55, 96]], "fn_var_ln": {"op": [[50, 8], [50, 10]], "table_name": [[49, 8], [49, 18]]}, "fn_var_occur": {"op": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name"], ["op", "poke"], ["op", "hook", "region_name", "None"], ["op", "hook", "aws_conn_id"]], "table_name": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name"], ["mock_check_for_partition", "assert_called_once_with", "table_name"]]}, "name": "test_poke_default_args", "params": {"mock_check_for_partition": "", "self": ""}, "params_descr": {"mock_check_for_partition": "", "self": ""}, "params_occur": {"mock_check_for_partition": [["mock_check_for_partition", "assert_called_once_with", "table_name"]], "self": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_for_partition": [], "self": []}, "q_name": "TestGlueCatalogPartitionSensor.test_poke_default_args", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "table_name": ""}, "variables_p": {"op": [["str", 0.09541262065949127], ["int", 0.09203548426479242], ["RuntimeError", 0.08118744010766947]], "table_name": [["str", 0.5411297037860802], ["Dict[bool, str]", 0.1106929464599566], ["Optional[str]", 0.08239589242117178]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [86, 95]], "fn_var_ln": {"aws_conn_id": [[62, 8], [62, 19]], "database_name": [[64, 8], [64, 21]], "expression": [[61, 8], [61, 18]], "op": [[67, 8], [67, 10]], "poke_interval": [[65, 8], [65, 21]], "region_name": [[63, 8], [63, 19]], "table_name": [[60, 8], [60, 18]], "timeout": [[66, 8], [66, 15]]}, "fn_var_occur": {"aws_conn_id": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["op", "hook", "aws_conn_id", "aws_conn_id"]], "database_name": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["mock_check_for_partition", "assert_called_once_with", "database_name", "table_name", "expression"]], "expression": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["mock_check_for_partition", "assert_called_once_with", "database_name", "table_name", "expression"]], "op": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["op", "hook", "get_connection", "_", "None"], ["op", "poke"], ["op", "hook", "region_name", "region_name"], ["op", "hook", "aws_conn_id", "aws_conn_id"], ["op", "poke_interval", "poke_interval"], ["op", "timeout", "timeout"]], "poke_interval": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["op", "poke_interval", "poke_interval"]], "region_name": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["op", "hook", "region_name", "region_name"]], "table_name": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["mock_check_for_partition", "assert_called_once_with", "database_name", "table_name", "expression"]], "timeout": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"], ["op", "timeout", "timeout"]]}, "name": "test_poke_nondefault_args", "params": {"mock_check_for_partition": "", "self": ""}, "params_descr": {"mock_check_for_partition": "", "self": ""}, "params_occur": {"mock_check_for_partition": [["mock_check_for_partition", "assert_called_once_with", "database_name", "table_name", "expression"]], "self": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "table_name", "expression", "expression", "aws_conn_id", "aws_conn_id", "region_name", "region_name", "database_name", "database_name", "poke_interval", "poke_interval", "timeout", "timeout"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_for_partition": [], "self": []}, "q_name": "TestGlueCatalogPartitionSensor.test_poke_nondefault_args", "ret_exprs": [], "ret_type": "", "variables": {"aws_conn_id": "", "database_name": "", "expression": "", "op": "", "poke_interval": "", "region_name": "", "table_name": "", "timeout": ""}, "variables_p": {"aws_conn_id": [["str", 0.6399297424256507], ["Optional[str]", 0.20317437783809025]], "database_name": [["str", 0.48056737377409997], ["Optional[str]", 0.1371284144760117], ["Dict[bool, str]", 0.13182974989273755], ["int", 0.09116821222914885], ["dict", 0.08181471467774547], ["Dict[str, Union[Any, Any]]", 0.07749153495025653]], "expression": [["int", 0.10450797984526634]], "op": [["int", 0.0956838285888054], ["str", 0.07476897337739512]], "poke_interval": [["str", 0.09400489563043236]], "region_name": [["str", 0.48056737377409997], ["Optional[str]", 0.1371284144760117], ["Dict[bool, str]", 0.13182974989273755], ["int", 0.09116821222914885], ["dict", 0.08181471467774547], ["Dict[str, Union[Any, Any]]", 0.07749153495025653]], "table_name": [["str", 0.5455130514122065], ["Dict[bool, str]", 0.14065852800804107], ["Optional[str]", 0.13389053548634972], ["Dict[str, Union[Any, Any]]", 0.0903475166266647], ["int", 0.08959036846673794]], "timeout": [["int", 0.18848975460695352], ["list", 0.09047919231989976], ["bool", 0.082985014873612]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 4], [95, 92]], "fn_var_ln": {"db_table": [[91, 8], [91, 16]], "op": [[92, 8], [92, 10]]}, "fn_var_occur": {"db_table": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "db_table"]], "op": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "db_table"], ["op", "poke"]]}, "name": "test_dot_notation", "params": {"mock_check_for_partition": "", "self": ""}, "params_descr": {"mock_check_for_partition": "", "self": ""}, "params_occur": {"mock_check_for_partition": [["mock_check_for_partition", "assert_called_once_with"]], "self": [["op", "GlueCatalogPartitionSensor", "task_id", "self", "task_id", "table_name", "db_table"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_for_partition": [["mock.Mock", 0.07835511904101929]], "self": []}, "q_name": "TestGlueCatalogPartitionSensor.test_dot_notation", "ret_exprs": [], "ret_type": "", "variables": {"db_table": "", "op": ""}, "variables_p": {"db_table": [["str", 0.9123319937136714]], "op": [["Dict[str, Union[Any, bool, str]]", 0.20335143929451113], ["List[List[int]]", 0.17158436608017186]]}}], "name": "TestGlueCatalogPartitionSensor", "q_name": "TestGlueCatalogPartitionSensor", "variables": {"task_id": ""}, "variables_p": {"task_id": [["str", 0.4], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "moto", "mock_glue", "airflow", "providers", "amazon", "aws", "hooks", "glue_catalog", "GlueCatalogHook", "airflow", "providers", "amazon", "aws", "sensors", "glue_catalog_partition", "GlueCatalogPartitionSensor"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 27}, "session_id": "xq42lTUlJDabuyI1NhxI5m9dqXLIomGrO7PngT8CYZ8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}