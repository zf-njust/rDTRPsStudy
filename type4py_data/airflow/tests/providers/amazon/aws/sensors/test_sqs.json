{"error": null, "response": {"classes": [{"cls_lc": [[39, 0], [335, 64]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [49, 33]], "fn_var_ln": {"args": [[41, 8], [41, 12]], "dag": [[43, 8], [43, 16]], "mock_context": [[48, 8], [48, 25]], "sensor": [[44, 8], [44, 19]], "sqs_hook": [[49, 8], [49, 21]]}, "fn_var_occur": {"args": [["args", "DEFAULT_DATE"], ["self", "dag", "DAG", "default_args", "args"]], "dag": [["self", "dag", "DAG", "default_args", "args"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id"]], "mock_context": [["self", "mock_context", "mock", "MagicMock"]], "sensor": [["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id"]], "sqs_hook": [["self", "sqs_hook", "SqsHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "DAG", "default_args", "args"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id"], ["self", "mock_context", "mock", "MagicMock"], ["self", "sqs_hook", "SqsHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag": "", "mock_context": "", "sensor": "", "sqs_hook": ""}, "variables_p": {"args": [["dict", 0.23158237319952885], ["Tuple[Any, Any]", 0.09138477310665434]], "dag": [["int", 0.16436055051631876], ["Iterator[Any]", 0.08887400686931567]], "mock_context": [["str", 0.19085483910376155], ["List[Dict[str, str]]", 0.15198849913218163], ["mock.Mock", 0.11276186177418906], ["Dict[str, Union[Any, Any, Any]]", 0.08333388674364425], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.07572273072165042]], "sensor": [["int", 0.42187746529911674], ["str", 0.3395681482172156]], "sqs_hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [61, 54]], "fn_var_ln": {"result": [[56, 8], [56, 14]]}, "fn_var_occur": {"result": [["result", "self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["result", "self", "sensor", "poke", "self", "mock_context"], ["str", "self", "mock_context", "method_calls"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_success", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["str", 0.11775473069452648], ["Dict[str, dict]", 0.10860938780233173], ["Dict[str, float]", 0.10038843620948941], ["dict", 0.08531588089573326]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [72, 100]], "fn_var_ln": {"context_calls": [[70, 8], [70, 21]], "result": [[67, 8], [67, 14]]}, "fn_var_occur": {"context_calls": [["self", "mock_context", "method_calls", "context_calls"]], "result": [["result", "self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_no_message_failed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["result", "self", "sensor", "poke", "self", "mock_context"], ["self", "mock_context", "method_calls", "context_calls"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_no_message_failed", "ret_exprs": [], "ret_type": "", "variables": {"context_calls": "", "result": ""}, "variables_p": {"context_calls": [["int", 0.38592913660322764], ["bool", 0.20845228617920028], ["str", 0.1748547921957388], ["Dict[int, int]", 0.14594686011602573], ["list", 0.08481692490580768]], "result": [["str", 0.11775473069452648], ["Dict[str, dict]", 0.10860938780233173], ["Dict[str, float]", 0.10038843620948941], ["dict", 0.08531588089573326]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [105, 64]], "fn_var_ln": {"message": [[76, 8], [76, 15]]}, "fn_var_occur": {"message": [["mock_conn", "return_value", "receive_message", "return_value", "message"]]}, "name": "test_poke_delete_raise_airflow_exception", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "receive_message", "return_value", "message"], ["mock_conn", "return_value", "delete_message_batch", "return_value"]], "self": [["self", "sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestSqsSensor.test_poke_delete_raise_airflow_exception", "ret_exprs": [], "ret_type": "", "variables": {"message": ""}, "variables_p": {"message": [["List[str]", 0.2616727546149234], ["List[Dict[str, str]]", 0.1852786223971334], ["Dict[str, Union[Any, Any, Any]]", 0.11888576348201818], ["Dict[str, Dict[str, Any]]", 0.11888576348201818], ["List[Dict[str, Any]]", 0.11888576348201818], ["list", 0.11888576348201818], ["str", 0.03689448092104274]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[108, 4], [113, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_poke_receive_raise_exception", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "receive_message", "side_effect", "Exception"]], "self": [["self", "sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.MagicMock", 0.12523155941033842]], "self": []}, "q_name": "TestSqsSensor.test_poke_receive_raise_exception", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [142, 57]], "fn_var_ln": {"calls_receive_message": [[137, 8], [137, 29]], "sensor": [[128, 8], [128, 19]]}, "fn_var_occur": {"calls_receive_message": [["calls_receive_message", "mock", "call", "receive_message", "QueueUrl", "QUEUE_URL", "MaxNumberOfMessages", "WaitTimeSeconds"], ["mock_conn", "assert_has_calls", "calls_receive_message"], ["calls_receive_message", "mock", "call", "receive_message", "QueueUrl", "QUEUE_URL", "MaxNumberOfMessages", "WaitTimeSeconds", "VisibilityTimeout"], ["mock_conn", "assert_has_calls", "calls_receive_message"]], "sensor": [["self", "sensor", "poke", "self", "mock_context"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "visibility_timeout"], ["self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_visibility_timeout", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_has_calls", "calls_receive_message"], ["mock_conn", "assert_has_calls", "calls_receive_message"]], "self": [["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["self", "sensor", "poke", "self", "mock_context"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "visibility_timeout"], ["self", "sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestSqsSensor.test_poke_visibility_timeout", "ret_exprs": [], "ret_type": "", "variables": {"calls_receive_message": "", "sensor": ""}, "variables_p": {"calls_receive_message": [["int", 0.12193965927760148], ["poucave.utils.BugTracker", 0.10182679903175883]], "sensor": [["str", 0.32766206877021603], ["bool", 0.10709432939738521], ["dict", 0.09448386222887772], ["float", 0.09321671252104147], ["int", 0.0845266692855725]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [157, 83]], "fn_var_ln": {"sensor": [[148, 8], [148, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "message_filtering"], ["sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_message_invalid_filtering", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "message_filtering"], ["sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_message_invalid_filtering", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["list", 0.15986808866322785], ["Dict[str, dict]", 0.14291935537729397], ["Type[List[Any]]", 0.09283938971657227], ["pydynasync.models.Changes", 0.09119239150752821], ["Dict[str, str]", 0.08411366127591684], ["DefaultDict[Any, List[Any]]", 0.08316160341860956]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 8], [176, 41]], "fn_var_ln": {"messages": [[167, 12], [167, 20]]}, "fn_var_occur": {"messages": [["messages", "append", "message", "message", "message"]]}, "name": "mock_receive_message", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_literal_values.<locals>.mock_receive_message", "ret_exprs": ["return {\"Messages\": messages}"], "ret_type": "", "ret_type_p": [["float", 0.9999990174352198], ["Callable[[bytes], None]", 9.817041414000904e-07], ["bool", 4.921578316949067e-10], ["str", 1.42060527209136e-10]], "variables": {"messages": ""}, "variables_p": {"messages": [["DefaultDict[Any, List[Any]]", 0.15210205780781977], ["dict", 0.15109671122506924], ["str", 0.07799576877270702], ["Dict[str, Dict[str, Any]]", 0.07694123754771381], ["Pattern[str]", 0.0747148111835556]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[180, 8], [181, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_delete_message_batch", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_literal_values.<locals>.mock_delete_message_batch", "ret_exprs": ["return {\"Successful\"}"], "ret_type": "", "ret_type_p": [["str", 0.432473642893179], ["int", 0.1730457626618069], ["Tuple[int]", 0.12539222152318494], ["List[bytes]", 0.0873991730750199], ["Iterable[float]", 0.0873991730750199]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[160, 4], [196, 62]], "fn_var_ln": {"all": [[164, 8], [164, 11]], "calls_delete_message_batch": [[193, 8], [193, 34]], "delete_entries": [[192, 8], [192, 22]], "matching": [[162, 8], [162, 16]], "non_matching": [[163, 8], [163, 20]], "result": [[188, 8], [188, 14]]}, "fn_var_occur": {"all": [], "calls_delete_message_batch": [["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "QUEUE_URL", "Entries", "delete_entries"], ["mock_conn", "assert_has_calls", "calls_delete_message_batch"]], "delete_entries": [["delete_entries", "x", "x", "x", "matching"], ["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "QUEUE_URL", "Entries", "delete_entries"]], "matching": [["delete_entries", "x", "x", "x", "matching"]], "non_matching": [], "result": [["result", "self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_message_filtering_literal_values", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "delete_message_batch", "side_effect", "mock_delete_message_batch"], ["mock_conn", "assert_has_calls", "calls_delete_message_batch"]], "self": [["self", "sensor", "message_filtering"], ["self", "sensor", "message_filtering_match_values"], ["result", "self", "sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.MagicMock", 0.10932539953041792]], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_literal_values", "ret_exprs": [], "ret_type": "", "variables": {"all": "", "calls_delete_message_batch": "", "delete_entries": "", "matching": "", "non_matching": "", "result": ""}, "variables_p": {"all": [["List[str]", 0.7999999999999999], ["Tuple[str]", 0.09999999999999999], ["Tuple[str, str, str]", 0.09999999999999999]], "calls_delete_message_batch": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.2395503879088889], ["List[Tuple[str, str]]", 0.09668050256309894], ["List[Dict[str, Any]]", 0.09328574809186979], ["str", 0.09188233303734065]], "delete_entries": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.18421420433787167], ["int", 0.12131462833859276], ["list", 0.11452979488502524], ["Dict[int, int]", 0.09414502118707259]], "matching": [["Pattern[str]", 0.9999999999999999]], "non_matching": [["List[str]", 0.4999999996442241], ["Tuple[str, str]", 0.4999999994570093], ["Dict[str, Union[Any, Any, bool, str]]", 3.795839542600956e-10], ["str", 2.9480210234809455e-10], ["int", 1.2190371136133171e-10]], "result": [["str", 0.11775473069452648], ["Dict[str, dict]", 0.10860938780233173], ["Dict[str, float]", 0.10038843620948941], ["dict", 0.08531588089573326]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[212, 8], [222, 41]], "fn_var_ln": {"messages": [[213, 12], [213, 20]]}, "fn_var_occur": {"messages": [["messages", "append", "message", "message", "json", "dumps", "message"]]}, "name": "mock_receive_message", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_jsonpath.<locals>.mock_receive_message", "ret_exprs": ["return {\"Messages\": messages}"], "ret_type": "", "ret_type_p": [["float", 0.9999990174352198], ["Callable[[bytes], None]", 9.817041414000904e-07], ["bool", 4.921578316949067e-10], ["str", 1.42060527209136e-10]], "variables": {"messages": ""}, "variables_p": {"messages": [["list", 0.2580429472327454], ["DefaultDict[Any, List[Any]]", 0.24406046868945702], ["int", 0.16965143888746692], ["Dict[str, str]", 0.12544732288827357], ["set", 0.12067733673837962], ["Dict[str, Any]", 0.08212048556367745]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[226, 8], [227, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_delete_message_batch", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_jsonpath.<locals>.mock_delete_message_batch", "ret_exprs": ["return {\"Successful\"}"], "ret_type": "", "ret_type_p": [["str", 0.432473642893179], ["int", 0.1730457626618069], ["Tuple[int]", 0.12539222152318494], ["List[bytes]", 0.0873991730750199], ["Iterable[float]", 0.0873991730750199]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[199, 4], [242, 62]], "fn_var_ln": {"all": [[210, 8], [210, 11]], "calls_delete_message_batch": [[239, 8], [239, 34]], "delete_entries": [[238, 8], [238, 22]], "matching": [[201, 8], [201, 16]], "non_matching": [[206, 8], [206, 20]], "result": [[234, 8], [234, 14]]}, "fn_var_occur": {"all": [], "calls_delete_message_batch": [["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "QUEUE_URL", "Entries", "delete_entries"], ["mock_conn", "assert_has_calls", "calls_delete_message_batch"]], "delete_entries": [["delete_entries", "x", "x", "x", "matching"], ["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "QUEUE_URL", "Entries", "delete_entries"]], "matching": [["delete_entries", "x", "x", "x", "matching"]], "non_matching": [], "result": [["result", "self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_message_filtering_jsonpath", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "delete_message_batch", "side_effect", "mock_delete_message_batch"], ["mock_conn", "assert_has_calls", "calls_delete_message_batch"]], "self": [["self", "sensor", "message_filtering"], ["self", "sensor", "message_filtering_config"], ["result", "self", "sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.MagicMock", 0.27053025577203355]], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_jsonpath", "ret_exprs": [], "ret_type": "", "variables": {"all": "", "calls_delete_message_batch": "", "delete_entries": "", "matching": "", "non_matching": "", "result": ""}, "variables_p": {"all": [["List[str]", 0.7999999999999999], ["Tuple[str]", 0.09999999999999999], ["Tuple[str, str, str]", 0.09999999999999999]], "calls_delete_message_batch": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.2395503879088889], ["List[Tuple[str, str]]", 0.09668050256309894], ["List[Dict[str, Any]]", 0.09328574809186979], ["str", 0.09188233303734065]], "delete_entries": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.18421420433787167], ["int", 0.12131462833859276], ["list", 0.11452979488502524], ["Dict[int, int]", 0.09414502118707259]], "matching": [["Pattern[str]", 0.9999999999999999]], "non_matching": [["List[str]", 0.4999999996442241], ["Tuple[str, str]", 0.4999999994570093], ["Dict[str, Union[Any, Any, bool, str]]", 3.795839542600956e-10], ["str", 2.9480210234809455e-10], ["int", 1.2190371136133171e-10]], "result": [["str", 0.11775473069452648], ["Dict[str, dict]", 0.10860938780233173], ["Dict[str, float]", 0.10038843620948941], ["dict", 0.08531588089573326]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[259, 8], [269, 41]], "fn_var_ln": {"messages": [[260, 12], [260, 20]]}, "fn_var_occur": {"messages": [["messages", "append", "message", "message", "json", "dumps", "message"]]}, "name": "mock_receive_message", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_jsonpath_values.<locals>.mock_receive_message", "ret_exprs": ["return {\"Messages\": messages}"], "ret_type": "", "ret_type_p": [["float", 0.9999990174352198], ["Callable[[bytes], None]", 9.817041414000904e-07], ["bool", 4.921578316949067e-10], ["str", 1.42060527209136e-10]], "variables": {"messages": ""}, "variables_p": {"messages": [["list", 0.2580429472327454], ["DefaultDict[Any, List[Any]]", 0.24406046868945702], ["int", 0.16965143888746692], ["Dict[str, str]", 0.12544732288827357], ["set", 0.12067733673837962], ["Dict[str, Any]", 0.08212048556367745]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[273, 8], [274, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_delete_message_batch", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_jsonpath_values.<locals>.mock_delete_message_batch", "ret_exprs": ["return {\"Successful\"}"], "ret_type": "", "ret_type_p": [["str", 0.432473642893179], ["int", 0.1730457626618069], ["Tuple[int]", 0.12539222152318494], ["List[bytes]", 0.0873991730750199], ["Iterable[float]", 0.0873991730750199]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[245, 4], [290, 62]], "fn_var_ln": {"all": [[257, 8], [257, 11]], "calls_delete_message_batch": [[287, 8], [287, 34]], "delete_entries": [[286, 8], [286, 22]], "matching": [[247, 8], [247, 16]], "non_matching": [[252, 8], [252, 20]], "result": [[282, 8], [282, 14]]}, "fn_var_occur": {"all": [], "calls_delete_message_batch": [["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "Entries", "delete_entries"], ["mock_conn", "assert_has_calls", "calls_delete_message_batch"]], "delete_entries": [["delete_entries", "x", "x", "x", "matching"], ["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "Entries", "delete_entries"]], "matching": [["delete_entries", "x", "x", "x", "matching"]], "non_matching": [], "result": [["result", "self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_message_filtering_jsonpath_values", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "delete_message_batch", "side_effect", "mock_delete_message_batch"], ["mock_conn", "assert_has_calls", "calls_delete_message_batch"]], "self": [["self", "sensor", "message_filtering"], ["self", "sensor", "message_filtering_config"], ["self", "sensor", "message_filtering_match_values"], ["result", "self", "sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.MagicMock", 0.22134083146822353]], "self": []}, "q_name": "TestSqsSensor.test_poke_message_filtering_jsonpath_values", "ret_exprs": [], "ret_type": "", "variables": {"all": "", "calls_delete_message_batch": "", "delete_entries": "", "matching": "", "non_matching": "", "result": ""}, "variables_p": {"all": [["List[str]", 0.7999999999999999], ["Tuple[str]", 0.09999999999999999], ["Tuple[str, str, str]", 0.09999999999999999]], "calls_delete_message_batch": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.249616198964693], ["List[Tuple[str, str]]", 0.1045395130687879], ["str", 0.09055859246662465], ["snakescale.utils.ProcessReturn", 0.0892479592687126]], "delete_entries": [["enumerate[Any]", 0.1027471393724514], ["dict", 0.10148435328878046], ["List[str]", 0.10061518675049858], ["int", 0.09828274771349366]], "matching": [["Pattern[str]", 0.9999999999999999]], "non_matching": [["List[str]", 0.4999999996442241], ["Tuple[str, str]", 0.4999999994570093], ["Dict[str, Union[Any, Any, bool, str]]", 3.795839542600956e-10], ["str", 2.9480210234809455e-10], ["int", 1.2190371136133171e-10]], "result": [["str", 0.11775473069452648], ["Dict[str, dict]", 0.10860938780233173], ["Dict[str, float]", 0.10038843620948941], ["dict", 0.08531588089573326]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[293, 4], [307, 61]], "fn_var_ln": {"sensor": [[298, 8], [298, 19]]}, "fn_var_occur": {"sensor": [["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "delete_message_on_reception", "False"], ["self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_do_not_delete_message_on_received", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "delete_message_batch", "called", "False"]], "self": [["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "delete_message_on_reception", "False"], ["self", "sensor", "poke", "self", "mock_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.Mock", 0.1904747921722576]], "self": []}, "q_name": "TestSqsSensor.test_poke_do_not_delete_message_on_received", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["str", 0.3659610659174194], ["float", 0.09883100906861521], ["int", 0.09516897109195545], ["bool", 0.07539567059433856]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[310, 4], [335, 64]], "fn_var_ln": {"messages": [[311, 8], [311, 16]], "result": [[328, 8], [328, 14]], "sensor": [[320, 8], [320, 19]]}, "fn_var_occur": {"messages": [], "result": [["result", "self", "sensor", "poke", "self", "mock_context"]], "sensor": [["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "max_messages", "num_batches"], ["result", "self", "sensor", "poke", "self", "mock_context"]]}, "name": "test_poke_batch_messages", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body", "message"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "max_messages", "num_batches"], ["result", "self", "sensor", "poke", "self", "mock_context"], ["message", "str", "self", "mock_context", "method_calls"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqsSensor.test_poke_batch_messages", "ret_exprs": [], "ret_type": "", "variables": {"messages": "", "result": "", "sensor": ""}, "variables_p": {"messages": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "result": [["str", 0.11775473069452648], ["Dict[str, dict]", 0.10860938780233173], ["Dict[str, float]", 0.10038843620948941], ["dict", 0.08531588089573326]], "sensor": [["int", 0.6114944765404364], ["str", 0.10984149278791733]]}}], "name": "TestSqsSensor", "q_name": "TestSqsSensor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "unittest", "mock", "patch", "pytest", "moto", "mock_sqs", "airflow", "exceptions", "AirflowException", "airflow", "models", "dag", "DAG", "airflow", "providers", "amazon", "aws", "hooks", "sqs", "SqsHook", "airflow", "providers", "amazon", "aws", "sensors", "sqs", "SqsSensor", "airflow", "utils", "timezone"], "mod_var_ln": {"DEFAULT_DATE": [[33, 0], [33, 12]], "QUEUE_NAME": [[35, 0], [35, 10]], "QUEUE_URL": [[36, 0], [36, 9]]}, "mod_var_occur": {"DEFAULT_DATE": [["args", "DEFAULT_DATE"]], "QUEUE_NAME": [["QUEUE_URL", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"], ["self", "sqs_hook", "create_queue", "QUEUE_NAME"]], "QUEUE_URL": [["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["calls_receive_message", "mock", "call", "receive_message", "QueueUrl", "QUEUE_URL", "MaxNumberOfMessages", "WaitTimeSeconds"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "visibility_timeout"], ["calls_receive_message", "mock", "call", "receive_message", "QueueUrl", "QUEUE_URL", "MaxNumberOfMessages", "WaitTimeSeconds", "VisibilityTimeout"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "message_filtering"], ["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "QUEUE_URL", "Entries", "delete_entries"], ["calls_delete_message_batch", "mock", "call", "delete_message_batch", "QueueUrl", "QUEUE_URL", "Entries", "delete_entries"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "delete_message_on_reception", "False"], ["self", "sqs_hook", "send_message", "queue_url", "QUEUE_URL", "message_body", "message"], ["self", "sensor", "SqsSensor", "task_id", "dag", "self", "dag", "sqs_queue", "QUEUE_URL", "aws_conn_id", "max_messages", "num_batches"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 61}, "session_id": "rkzXMg_z66OhXhlBS4pS0dXl-QPhBSMIdcojy4da3m8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "QUEUE_NAME": "", "QUEUE_URL": ""}, "variables_p": {"DEFAULT_DATE": [["str", 0.40571561154314545], ["Dict[str, Any]", 0.12993690078695638], ["int", 0.09257737549276539], ["myia.utils.misc.Named", 0.09091309555855764]], "QUEUE_NAME": [["str", 0.9999999999999999]], "QUEUE_URL": [["str", 0.8063673046732966], ["transfer.models.SiteID", 0.09612662171712884]]}}}