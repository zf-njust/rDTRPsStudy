{"error": null, "response": {"classes": [{"cls_lc": [[193, 0], [297, 70]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[194, 4], [205, 35]], "fn_var_ln": {"boto3_session_mock": [[202, 8], [202, 31]], "mock_ctx": [[205, 8], [205, 21]], "mock_emr_client": [[196, 8], [196, 28]], "mock_emr_session": [[198, 8], [198, 24]]}, "fn_var_occur": {"boto3_session_mock": [["self", "boto3_session_mock", "MagicMock", "return_value", "mock_emr_session"]], "mock_ctx": [["self", "mock_ctx", "MagicMock"]], "mock_emr_client": [["self", "mock_emr_client", "MagicMock"], ["mock_emr_session", "client", "return_value", "self", "mock_emr_client"]], "mock_emr_session": [["mock_emr_session", "MagicMock"], ["mock_emr_session", "client", "return_value", "self", "mock_emr_client"], ["self", "boto3_session_mock", "MagicMock", "return_value", "mock_emr_session"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_emr_client", "MagicMock"], ["mock_emr_session", "client", "return_value", "self", "mock_emr_client"], ["self", "boto3_session_mock", "MagicMock", "return_value", "mock_emr_session"], ["self", "mock_ctx", "MagicMock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrJobFlowSensor.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"boto3_session_mock": "", "mock_ctx": "", "mock_emr_client": "", "mock_emr_session": ""}, "variables_p": {"boto3_session_mock": [["str", 0.15915028324519295], ["bool", 0.09194765875208107]], "mock_ctx": [["str", 0.21026941201278235], ["Pattern[str]", 0.11458492289577632], ["Type[Iterable[Any]]", 0.10332073541668677], ["Tuple[str, str, str]", 0.10014400927230886], ["list", 0.0935844134432051], ["Dict[str, str]", 0.0932562857561363]], "mock_emr_client": [["unittesmock.MagicMock", 0.11645894120215418], ["Dict[str, Union[int, str]]", 0.10455841742339624], ["List[unittesmock.MagicMock]", 0.09083890220051086]], "mock_emr_session": [["unittesmock.MagicMock", 0.2841418808131799], ["mock.MagicMock", 0.09829893644152085], ["mock.Mock", 0.0922443577184704]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[208, 4], [228, 73]], "fn_var_ln": {"calls": [[227, 12], [227, 17]], "operator": [[218, 12], [218, 20]], "return_value": [[217, 12], [217, 40]]}, "fn_var_occur": {"calls": [["calls", "mock", "call", "ClusterId"], ["self", "mock_emr_client", "describe_cluster", "assert_has_calls", "calls"]], "operator": [["operator", "EmrJobFlowSensor", "task_id", "poke_interval", "job_flow_id", "aws_conn_id"], ["operator", "execute", "self", "mock_ctx"]], "return_value": [["mock_isinstance", "return_value", "True"]]}, "name": "test_execute_calls_with_the_job_flow_id_until_it_reaches_a_target_state", "params": {"_": "", "self": ""}, "params_descr": {"_": "", "self": ""}, "params_occur": {"_": [], "self": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN"], ["patch", "self", "boto3_session_mock"], ["operator", "execute", "self", "mock_ctx"], ["self", "mock_emr_client", "describe_cluster", "call_count"], ["self", "mock_emr_client", "describe_cluster", "assert_has_calls", "calls"]]}, "params_p": {"_": [], "args": [], "kwargs": [], "self": []}, "q_name": "TestEmrJobFlowSensor.test_execute_calls_with_the_job_flow_id_until_it_reaches_a_target_state", "ret_exprs": [], "ret_type": "", "variables": {"calls": "", "operator": "", "return_value": ""}, "variables_p": {"calls": [["list", 0.20234960434167631], ["Dict[str, Union[Any, Any, Any]]", 0.17646579604451196], ["mock._Call", 0.15181749302633446], ["Dict[str, Union[Any, bool, str]]", 0.08823289802225598]], "operator": [["str", 0.5354397430589117], ["int", 0.16354293079825344], ["bool", 0.12117414068338264]], "return_value": [["Dict[str, Dict[str, Any]]", 0.26291225653730227], ["List[str]", 0.16013167465611008], ["list", 0.1348388570268133], ["Tuple[int, int]", 0.10470838098064467], ["List[Tuple[str, str]]", 0.09792751046162841], ["int", 0.08392310784632474], ["tests.mock.zwave.MockNode", 0.08071803112473593], ["mock._Call", 0.0748401813664404]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[230, 4], [250, 103]], "fn_var_ln": {"operator": [[239, 12], [239, 20]], "return_value": [[238, 12], [238, 40]]}, "fn_var_occur": {"operator": [["operator", "EmrJobFlowSensor", "task_id", "poke_interval", "job_flow_id", "aws_conn_id"], ["operator", "execute", "self", "mock_ctx"]], "return_value": [["mock_isinstance", "return_value", "True"]]}, "name": "test_execute_calls_with_the_job_flow_id_until_it_reaches_failed_state_with_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"], ["patch", "self", "boto3_session_mock"], ["operator", "execute", "self", "mock_ctx"], ["self", "mock_emr_client", "describe_cluster", "call_count"], ["self", "mock_emr_client", "describe_cluster", "assert_called_once_with", "ClusterId"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrJobFlowSensor.test_execute_calls_with_the_job_flow_id_until_it_reaches_failed_state_with_exception", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "return_value": ""}, "variables_p": {"operator": [["str", 0.5354397430589117], ["int", 0.16354293079825344], ["bool", 0.12117414068338264]], "return_value": [["Dict[str, Dict[str, Any]]", 0.26291225653730227], ["List[str]", 0.16013167465611008], ["list", 0.1348388570268133], ["Tuple[int, int]", 0.10470838098064467], ["List[Tuple[str, str]]", 0.09792751046162841], ["int", 0.08392310784632474], ["tests.mock.zwave.MockNode", 0.08071803112473593], ["mock._Call", 0.0748401813664404]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [279, 73]], "fn_var_ln": {"calls": [[278, 12], [278, 17]], "operator": [[265, 12], [265, 20]], "return_value": [[264, 12], [264, 40]]}, "fn_var_occur": {"calls": [["calls", "mock", "call", "ClusterId"], ["self", "mock_emr_client", "describe_cluster", "assert_has_calls", "calls"]], "operator": [["operator", "EmrJobFlowSensor", "task_id", "poke_interval", "job_flow_id", "aws_conn_id", "target_states"], ["operator", "execute", "self", "mock_ctx"]], "return_value": [["mock_isinstance", "return_value", "True"]]}, "name": "test_different_target_states", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_WAITING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"], ["patch", "self", "boto3_session_mock"], ["operator", "execute", "self", "mock_ctx"], ["self", "mock_emr_client", "describe_cluster", "call_count"], ["self", "mock_emr_client", "describe_cluster", "assert_has_calls", "calls"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrJobFlowSensor.test_different_target_states", "ret_exprs": [], "ret_type": "", "variables": {"calls": "", "operator": "", "return_value": ""}, "variables_p": {"calls": [["list", 0.20234960434167631], ["Dict[str, Union[Any, Any, Any]]", 0.17646579604451196], ["mock._Call", 0.15181749302633446], ["Dict[str, Union[Any, bool, str]]", 0.08823289802225598]], "operator": [["str", 0.12885670269138533], ["bool", 0.12372886341444857], ["bytearray", 0.09976375008340792], ["list", 0.09228844007853705], ["int", 0.09165995485195944]], "return_value": [["Dict[str, Dict[str, Any]]", 0.26291225653730227], ["List[str]", 0.16013167465611008], ["list", 0.1348388570268133], ["Tuple[int, int]", 0.10470838098064467], ["List[Tuple[str, str]]", 0.09792751046162841], ["int", 0.08392310784632474], ["tests.mock.zwave.MockNode", 0.08071803112473593], ["mock._Call", 0.0748401813664404]]}}, {"docstring": {"func": "Test the execute method raise TaskDeferred if running sensor in deferrable mode", "long_descr": null, "ret": null}, "fn_lc": [[282, 4], [297, 70]], "fn_var_ln": {"return_value": [[292, 8], [292, 30]], "sensor": [[284, 8], [284, 14]]}, "fn_var_occur": {"return_value": [["mock_poke", "return_value", "False"]], "sensor": [["sensor", "EmrJobFlowSensor", "task_id", "poke_interval", "job_flow_id", "aws_conn_id", "target_states", "deferrable", "True"], ["sensor", "execute", "context", "None"]]}, "name": "test_sensor_defer", "params": {"mock_poke": "", "self": ""}, "params_descr": {"mock_poke": "", "self": ""}, "params_occur": {"mock_poke": [["mock_poke", "return_value", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_poke": [["unittesmock.MagicMock", 0.84571916051871], ["mock.MagicMock", 0.07068703030549116]], "self": []}, "q_name": "TestEmrJobFlowSensor.test_sensor_defer", "ret_exprs": [], "ret_type": "", "variables": {"return_value": "", "sensor": ""}, "variables_p": {"return_value": [["str", 0.2225382802760053], ["list", 0.1008211942678676], ["Optional[bytes]", 0.09096854169668826], ["List[Dict[str, Any]]", 0.0665638715400458], ["int", 0.06631782572657322], ["Dict[str, Any]", 0.06357500762424668]], "sensor": [["str", 0.3965932107344926], ["int", 0.2596364565241885], ["bool", 0.1507989362948689], ["datetime.datetime.datetime", 0.09023747003282044]]}}], "name": "TestEmrJobFlowSensor", "q_name": "TestEmrJobFlowSensor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "unittest", "mock", "unittest", "mock", "MagicMock", "patch", "pytest", "dateutil", "tz", "tzlocal", "airflow", "exceptions", "AirflowException", "TaskDeferred", "airflow", "providers", "amazon", "aws", "hooks", "s3", "S3Hook", "airflow", "providers", "amazon", "aws", "sensors", "emr", "EmrJobFlowSensor", "airflow", "providers", "amazon", "aws", "triggers", "emr", "EmrTerminateJobFlowTrigger"], "mod_var_ln": {"DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN": [[58, 0], [58, 37]], "DESCRIBE_CLUSTER_RUNNING_RETURN": [[84, 0], [84, 31]], "DESCRIBE_CLUSTER_STARTING_RETURN": [[32, 0], [32, 32]], "DESCRIBE_CLUSTER_TERMINATED_RETURN": [[136, 0], [136, 34]], "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN": [[162, 0], [162, 46]], "DESCRIBE_CLUSTER_WAITING_RETURN": [[110, 0], [110, 31]]}, "mod_var_occur": {"DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_WAITING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"]], "DESCRIBE_CLUSTER_RUNNING_RETURN": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN"], ["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"], ["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_WAITING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"]], "DESCRIBE_CLUSTER_STARTING_RETURN": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN"], ["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_WAITING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"]], "DESCRIBE_CLUSTER_TERMINATED_RETURN": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN"], ["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_WAITING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"]], "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"], ["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_WAITING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"]], "DESCRIBE_CLUSTER_WAITING_RETURN": [["self", "mock_emr_client", "describe_cluster", "side_effect", "DESCRIBE_CLUSTER_STARTING_RETURN", "DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN", "DESCRIBE_CLUSTER_RUNNING_RETURN", "DESCRIBE_CLUSTER_WAITING_RETURN", "DESCRIBE_CLUSTER_TERMINATED_RETURN", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 27}, "session_id": "DBAOZDoDxlmRVBJR3z8400nauTiQcrIiVVwlS0sHdW4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN": "", "DESCRIBE_CLUSTER_RUNNING_RETURN": "", "DESCRIBE_CLUSTER_STARTING_RETURN": "", "DESCRIBE_CLUSTER_TERMINATED_RETURN": "", "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN": "", "DESCRIBE_CLUSTER_WAITING_RETURN": ""}, "variables_p": {"DESCRIBE_CLUSTER_BOOTSTRAPPING_RETURN": [["str", 0.4360382535872324], ["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.19444656934292798], ["int", 0.08417987386275688]], "DESCRIBE_CLUSTER_RUNNING_RETURN": [["list", 0.17142958601015848], ["int", 0.12899102695800874], ["str", 0.10874450062859752], ["Dict[str, int]", 0.10343971660594034]], "DESCRIBE_CLUSTER_STARTING_RETURN": [["str", 0.2880395589134044], ["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.18945178766791482], ["int", 0.12225580707290037], ["List[str]", 0.09261691901925286]], "DESCRIBE_CLUSTER_TERMINATED_RETURN": [["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.2807441193700309], ["str", 0.1708588247179999], ["int", 0.10503797424949242], ["DefaultDict[str, int]", 0.08313442831304702]], "DESCRIBE_CLUSTER_TERMINATED_WITH_ERRORS_RETURN": [["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.2768160616486493], ["str", 0.08653616173174804], ["int", 0.08597460635513965], ["list", 0.08549878005481794]], "DESCRIBE_CLUSTER_WAITING_RETURN": [["str", 0.4360382535872324], ["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.19444656934292798], ["int", 0.08417987386275688]]}}}