{"error": null, "response": {"classes": [{"cls_lc": [[38, 0], [46, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test JSONEncoder correctly encodes and decodes decimal values.", "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [46, 44]], "fn_var_ln": {"decoded": [[45, 8], [45, 15]], "encoded": [[44, 8], [44, 15]], "org": [[43, 8], [43, 11]]}, "fn_var_occur": {"decoded": [["decoded", "json", "loads", "encoded", "parse_float", "Decimal"], ["org", "pytest", "approx", "decoded"]], "encoded": [["encoded", "json", "dumps", "org", "cls", "JSONEncoder"], ["decoded", "json", "loads", "encoded", "parse_float", "Decimal"]], "org": [["org", "Decimal", "value"], ["encoded", "json", "dumps", "org", "cls", "JSONEncoder"], ["org", "pytest", "approx", "decoded"]]}, "name": "test_jsonencoder_with_decimal", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["org", "Decimal", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["str", 0.999999999972198], ["dict", 6.546292738329593e-12], ["Dict[str, str]", 6.20062536702082e-12], ["Callable", 3.887373631485544e-12]]}, "q_name": "TestJSONEncoder.test_jsonencoder_with_decimal", "ret_exprs": [], "ret_type": "", "variables": {"decoded": "", "encoded": "", "org": ""}, "variables_p": {"decoded": [["str", 0.44694343522339275], ["Dict[str, str]", 0.17931738523121254], ["List[str]", 0.08475593743639379], ["List[float]", 0.08186818267705356]], "encoded": [["str", 0.20799842760961929], ["list", 0.12340217188200879], ["Dict[str, Dict[str, Any]]", 0.12321209103095486], ["dict", 0.10255911865771097], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.0898303460105188], ["int", 0.08727953776499893], ["bool", 0.08190672486286493]], "org": [["List[str]", 0.21869929059427118], ["str", 0.17395803601084125], ["list", 0.1734390341730429], ["Set[str]", 0.11790045368182436], ["int", 0.11709297486433135]]}}], "name": "TestJSONEncoder", "q_name": "TestJSONEncoder", "variables": {}, "variables_p": {}}, {"cls_lc": [[49, 0], [359, 33]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[50, 4], [51, 30]], "fn_var_ln": {"output_queue": [[51, 8], [51, 25]]}, "fn_var_occur": {"output_queue": [["self", "output_queue"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "output_queue"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDynamodbToS3.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"output_queue": ""}, "variables_p": {"output_queue": [["int", 0.5955131306740291], ["str", 0.26432069274841485]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[53, 4], [57, 58]], "fn_var_ln": {"lines": [[55, 12], [55, 17]]}, "fn_var_occur": {"lines": [["lines", "f", "readlines"]]}, "name": "mock_upload_file", "params": {"Bucket": "", "Filename": "", "Key": "", "self": ""}, "params_descr": {"Bucket": "", "Filename": "", "Key": "", "self": ""}, "params_occur": {"Bucket": [], "Filename": [["open", "Filename", "f"]], "Key": [], "self": [["self", "output_queue", "append", "json", "loads", "line"]]}, "params_p": {"Bucket": [["str", 0.7010180128459096], ["Union[str, BinaryIO]", 0.20305356786156803]], "Filename": [["str", 1.0]], "Key": [["str", 0.7010180128459096], ["Union[str, BinaryIO]", 0.20305356786156803]], "args": [], "kwargs": [], "self": []}, "q_name": "TestDynamodbToS3.mock_upload_file", "ret_exprs": [], "ret_type": "", "variables": {"lines": ""}, "variables_p": {"lines": [["Set[str]", 0.2872156345101431], ["List[str]", 0.198246197893497], ["Tuple[None]", 0.11454210507482172], ["Dict[str, bytes]", 0.10752743380391384], ["str", 0.10619151049607028], ["List[tuple]", 0.09474748594416708]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [88, 66]], "fn_var_ln": {"dynamodb_to_s3_operator": [[79, 8], [79, 31]], "responses": [[62, 8], [62, 17]], "s3_client": [[75, 8], [75, 17]], "table": [[71, 8], [71, 13]]}, "fn_var_occur": {"dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size"], ["dynamodb_to_s3_operator", "execute", "context"]], "responses": [["table", "return_value", "scan", "side_effect", "responses"]], "s3_client": [["s3_client", "MagicMock"], ["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "table": [["table", "MagicMock"], ["table", "return_value", "scan", "side_effect", "responses"], ["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"]]}, "name": "test_dynamodb_to_s3_success", "params": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_descr": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_occur": {"mock_aws_dynamodb_hook": [["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"]], "mock_s3_hook": [["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "self": [["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["self", "output_queue"]]}, "params_p": {"args": [], "kwargs": [], "mock_aws_dynamodb_hook": [["unittesmock.MagicMock", 0.39597117985511154]], "mock_s3_hook": [["unittesmock.MagicMock", 0.18125760631068058]], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_to_s3_success", "ret_exprs": [], "ret_type": "", "variables": {"dynamodb_to_s3_operator": "", "responses": "", "s3_client": "", "table": ""}, "variables_p": {"dynamodb_to_s3_operator": [["List[str]", 0.4782578766576974], ["Dict[int, Dict[str, str]]", 0.25444084168427644], ["int", 0.10090736112581213], ["Tuple[str, str, str]", 0.09124865792537071]], "responses": [["Dict[str, Union[Any, Any]]", 0.20969451267491038], ["datetime.datetime", 0.11807762277291613], ["Dict[str, str]", 0.10563668684477796], ["List[Dict[str, Any]]", 0.08596077921987158], ["Dict[str, Union[Any, Any, Any]]", 0.08433169620331822], ["unittesmock.MagicMock", 0.07873240066926177], ["Dict[str, Dict[str, Any]]", 0.06970967129255277]], "s3_client": [["mock.Mock", 0.8458671061213973], ["unittesmock.MagicMock", 0.15413289387860274]], "table": [["unittesmock.MagicMock", 0.18473593056304002], ["str", 0.12668425254359192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [117, 70]], "fn_var_ln": {"a": [[93, 8], [93, 9]], "b": [[94, 8], [94, 9]], "dynamodb_to_s3_operator": [[108, 8], [108, 31]], "responses": [[95, 8], [95, 17]], "s3_client": [[104, 8], [104, 17]], "table": [[100, 8], [100, 13]]}, "fn_var_occur": {"a": [["a", "Decimal"], ["responses", "a", "b"], ["float", "a", "float", "b", "self", "output_queue"]], "b": [["b", "Decimal"], ["responses", "a", "b"], ["float", "a", "float", "b", "self", "output_queue"]], "dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size"], ["dynamodb_to_s3_operator", "execute", "context"]], "responses": [["responses", "a", "b"], ["table", "return_value", "scan", "side_effect", "responses"]], "s3_client": [["s3_client", "MagicMock"], ["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "table": [["table", "MagicMock"], ["table", "return_value", "scan", "side_effect", "responses"], ["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"]]}, "name": "test_dynamodb_to_s3_success_with_decimal", "params": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_descr": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_occur": {"mock_aws_dynamodb_hook": [["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"]], "mock_s3_hook": [["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "self": [["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["float", "a", "float", "b", "self", "output_queue"]]}, "params_p": {"args": [], "kwargs": [], "mock_aws_dynamodb_hook": [["unittesmock.MagicMock", 0.39597117985511154]], "mock_s3_hook": [["unittesmock.MagicMock", 0.18125760631068058]], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_to_s3_success_with_decimal", "ret_exprs": [], "ret_type": "", "variables": {"a": "", "b": "", "dynamodb_to_s3_operator": "", "responses": "", "s3_client": "", "table": ""}, "variables_p": {"a": [["int", 0.08739320659513865], ["float", 0.08450250419807807], ["Tuple[int, int]", 0.08450250419807807]], "b": [["float", 0.34364059348662745], ["int", 0.17225740645962062], ["List[int]", 0.10647231683058331]], "dynamodb_to_s3_operator": [["List[str]", 0.4782578766576974], ["Dict[int, Dict[str, str]]", 0.25444084168427644], ["int", 0.10090736112581213], ["Tuple[str, str, str]", 0.09124865792537071]], "responses": [["str", 0.20505855388958535], ["Dict[str, Union[Any, Any]]", 0.1951474024876896], ["int", 0.13289832703728335], ["List[Dict[str, Any]]", 0.11054985079125984], ["Optional[bytes]", 0.1025934871389942], ["datetime.datetime", 0.08915432120467234], ["rotkehlchen.tests.utils.mock.MockResponse", 0.07979199178868751]], "s3_client": [["mock.Mock", 0.8458671061213973], ["unittesmock.MagicMock", 0.15413289387860274]], "table": [["unittesmock.MagicMock", 0.18473593056304002], ["str", 0.12668425254359192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[121, 4], [150, 74]], "fn_var_ln": {"aws_conn_id": [[147, 8], [147, 19]], "dynamodb_to_s3_operator": [[139, 8], [139, 31]], "responses": [[122, 8], [122, 17]], "s3_client": [[135, 8], [135, 17]], "table": [[131, 8], [131, 13]]}, "fn_var_occur": {"aws_conn_id": [["mock_s3_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size"], ["dynamodb_to_s3_operator", "execute", "context"]], "responses": [["table", "return_value", "scan", "side_effect", "responses"]], "s3_client": [["s3_client", "MagicMock"], ["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "table": [["table", "MagicMock"], ["table", "return_value", "scan", "side_effect", "responses"], ["mock_aws_dynamodb_hook", "return_value", "get_conn", "return_value", "Table", "table"]]}, "name": "test_dynamodb_to_s3_default_connection", "params": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_descr": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_occur": {"mock_aws_dynamodb_hook": [["mock_aws_dynamodb_hook", "return_value", "get_conn", "return_value", "Table", "table"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "mock_s3_hook": [["mock_s3_hook", "return_value", "get_conn", "s3_client"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "self": [["s3_client", "return_value", "upload_file", "self", "mock_upload_file"]]}, "params_p": {"args": [], "kwargs": [], "mock_aws_dynamodb_hook": [["unittesmock.MagicMock", 0.5311174664866514]], "mock_s3_hook": [["unittesmock.MagicMock", 0.8945650356075108]], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_to_s3_default_connection", "ret_exprs": [], "ret_type": "", "variables": {"aws_conn_id": "", "dynamodb_to_s3_operator": "", "responses": "", "s3_client": "", "table": ""}, "variables_p": {"aws_conn_id": [["str", 1.0]], "dynamodb_to_s3_operator": [["List[str]", 0.4782578766576974], ["Dict[int, Dict[str, str]]", 0.25444084168427644], ["int", 0.10090736112581213], ["Tuple[str, str, str]", 0.09124865792537071]], "responses": [["Dict[str, Union[Any, Any]]", 0.20969451267491038], ["datetime.datetime", 0.11807762277291613], ["Dict[str, str]", 0.10563668684477796], ["List[Dict[str, Any]]", 0.08596077921987158], ["Dict[str, Union[Any, Any, Any]]", 0.08433169620331822], ["unittesmock.MagicMock", 0.07873240066926177], ["Dict[str, Dict[str, Any]]", 0.06970967129255277]], "s3_client": [["mock.Mock", 0.8458671061213973], ["unittesmock.MagicMock", 0.15413289387860274]], "table": [["unittesmock.MagicMock", 0.19799493028516751]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [185, 74]], "fn_var_ln": {"aws_conn_id": [[172, 8], [172, 19]], "dynamodb_to_s3_operator": [[174, 12], [174, 35]], "responses": [[155, 8], [155, 17]], "s3_client": [[168, 8], [168, 17]], "table": [[164, 8], [164, 13]]}, "fn_var_occur": {"aws_conn_id": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size", "aws_conn_id", "aws_conn_id"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size", "aws_conn_id", "aws_conn_id"], ["dynamodb_to_s3_operator", "execute", "context"]], "responses": [["table", "return_value", "scan", "side_effect", "responses"]], "s3_client": [["s3_client", "MagicMock"], ["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "table": [["table", "MagicMock"], ["table", "return_value", "scan", "side_effect", "responses"], ["mock_aws_dynamodb_hook", "return_value", "get_conn", "return_value", "Table", "table"]]}, "name": "test_dynamodb_to_s3_with_aws_conn_id", "params": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_descr": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_occur": {"mock_aws_dynamodb_hook": [["mock_aws_dynamodb_hook", "return_value", "get_conn", "return_value", "Table", "table"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "mock_s3_hook": [["mock_s3_hook", "return_value", "get_conn", "s3_client"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "self": [["s3_client", "return_value", "upload_file", "self", "mock_upload_file"]]}, "params_p": {"args": [], "kwargs": [], "mock_aws_dynamodb_hook": [["unittesmock.MagicMock", 0.7214958349759482]], "mock_s3_hook": [["unittesmock.MagicMock", 0.7906202502183911]], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_to_s3_with_aws_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"aws_conn_id": "", "dynamodb_to_s3_operator": "", "responses": "", "s3_client": "", "table": ""}, "variables_p": {"aws_conn_id": [["str", 0.39191400147723404], ["int", 0.31916570421215734]], "dynamodb_to_s3_operator": [["List[str]", 0.6758886370426227], ["int", 0.21454005658586905], ["str", 0.1095713063715082]], "responses": [["Dict[str, Union[Any, Any]]", 0.20969451267491038], ["datetime.datetime", 0.11807762277291613], ["Dict[str, str]", 0.10563668684477796], ["List[Dict[str, Any]]", 0.08596077921987158], ["Dict[str, Union[Any, Any, Any]]", 0.08433169620331822], ["unittesmock.MagicMock", 0.07873240066926177], ["Dict[str, Dict[str, Any]]", 0.06970967129255277]], "s3_client": [["mock.Mock", 0.8458671061213973], ["unittesmock.MagicMock", 0.15413289387860274]], "table": [["unittesmock.MagicMock", 0.19799493028516751]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[189, 4], [221, 74]], "fn_var_ln": {"aws_conn_id": [[207, 8], [207, 19]], "dynamodb_to_s3_operator": [[208, 8], [208, 31]], "responses": [[190, 8], [190, 17]], "s3_client": [[203, 8], [203, 17]], "table": [[199, 8], [199, 13]]}, "fn_var_occur": {"aws_conn_id": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size", "source_aws_conn_id", "aws_conn_id"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size", "source_aws_conn_id", "aws_conn_id"], ["dynamodb_to_s3_operator", "execute", "context"]], "responses": [["table", "return_value", "scan", "side_effect", "responses"]], "s3_client": [["s3_client", "MagicMock"], ["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "table": [["table", "MagicMock"], ["table", "return_value", "scan", "side_effect", "responses"], ["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"]]}, "name": "test_dynamodb_to_s3_with_different_aws_conn_id", "params": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_descr": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_occur": {"mock_aws_dynamodb_hook": [["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "mock_s3_hook": [["mock_s3_hook", "return_value", "get_conn", "s3_client"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "aws_conn_id"]], "self": [["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["self", "output_queue"]]}, "params_p": {"args": [], "kwargs": [], "mock_aws_dynamodb_hook": [["unittesmock.MagicMock", 0.6058722480391106]], "mock_s3_hook": [["unittesmock.MagicMock", 0.38677031253686617]], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_to_s3_with_different_aws_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"aws_conn_id": "", "dynamodb_to_s3_operator": "", "responses": "", "s3_client": "", "table": ""}, "variables_p": {"aws_conn_id": [["str", 0.5713103659261869], ["int", 0.4286896340738132]], "dynamodb_to_s3_operator": [["List[str]", 0.4744134099156909], ["str", 0.43303866118369794], ["int", 0.09254792890061096]], "responses": [["Dict[str, Union[Any, Any]]", 0.20969451267491038], ["datetime.datetime", 0.11807762277291613], ["Dict[str, str]", 0.10563668684477796], ["List[Dict[str, Any]]", 0.08596077921987158], ["Dict[str, Union[Any, Any, Any]]", 0.08433169620331822], ["unittesmock.MagicMock", 0.07873240066926177], ["Dict[str, Dict[str, Any]]", 0.06970967129255277]], "s3_client": [["mock.Mock", 0.8458671061213973], ["unittesmock.MagicMock", 0.15413289387860274]], "table": [["unittesmock.MagicMock", 0.18473593056304002], ["str", 0.12668425254359192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[225, 4], [259, 79]], "fn_var_ln": {"dynamodb_conn_id": [[244, 8], [244, 24]], "dynamodb_to_s3_operator": [[245, 8], [245, 31]], "responses": [[226, 8], [226, 17]], "s3_aws_conn_id": [[243, 8], [243, 22]], "s3_client": [[239, 8], [239, 17]], "table": [[235, 8], [235, 13]]}, "fn_var_occur": {"dynamodb_conn_id": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "source_aws_conn_id", "dynamodb_conn_id", "s3_bucket_name", "file_size", "dest_aws_conn_id", "s3_aws_conn_id"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "dynamodb_conn_id"]], "dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "source_aws_conn_id", "dynamodb_conn_id", "s3_bucket_name", "file_size", "dest_aws_conn_id", "s3_aws_conn_id"], ["dynamodb_to_s3_operator", "execute", "context"]], "responses": [["table", "return_value", "scan", "side_effect", "responses"]], "s3_aws_conn_id": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "source_aws_conn_id", "dynamodb_conn_id", "s3_bucket_name", "file_size", "dest_aws_conn_id", "s3_aws_conn_id"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "s3_aws_conn_id"]], "s3_client": [["s3_client", "MagicMock"], ["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "table": [["table", "MagicMock"], ["table", "return_value", "scan", "side_effect", "responses"], ["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"]]}, "name": "test_dynamodb_to_s3_with_two_different_connections", "params": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_descr": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_occur": {"mock_aws_dynamodb_hook": [["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id", "dynamodb_conn_id"]], "mock_s3_hook": [["mock_s3_hook", "return_value", "get_conn", "s3_client"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "s3_aws_conn_id"]], "self": [["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["self", "output_queue"]]}, "params_p": {"args": [], "kwargs": [], "mock_aws_dynamodb_hook": [["unittesmock.MagicMock", 0.8927567401096007]], "mock_s3_hook": [["unittesmock.MagicMock", 0.8815182829038387]], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_to_s3_with_two_different_connections", "ret_exprs": [], "ret_type": "", "variables": {"dynamodb_conn_id": "", "dynamodb_to_s3_operator": "", "responses": "", "s3_aws_conn_id": "", "s3_client": "", "table": ""}, "variables_p": {"dynamodb_conn_id": [["str", 0.580193569108765], ["int", 0.11009415422496605], ["transfer.models.ItemID", 0.10659222355087311], ["Optional[str]", 0.09213535644624497]], "dynamodb_to_s3_operator": [["List[str]", 0.39472712618961003], ["str", 0.28699216610042577], ["int", 0.12824059106316385], ["list", 0.09634427132224029], ["Dict[int, List[int]]", 0.0936958453245602]], "responses": [["Dict[str, Union[Any, Any]]", 0.20969451267491038], ["datetime.datetime", 0.11807762277291613], ["Dict[str, str]", 0.10563668684477796], ["List[Dict[str, Any]]", 0.08596077921987158], ["Dict[str, Union[Any, Any, Any]]", 0.08433169620331822], ["unittesmock.MagicMock", 0.07873240066926177], ["Dict[str, Dict[str, Any]]", 0.06970967129255277]], "s3_aws_conn_id": [["str", 0.6735549593851973], ["Optional[str]", 0.10201742967584267]], "s3_client": [["mock.Mock", 0.8458671061213973], ["unittesmock.MagicMock", 0.15413289387860274]], "table": [["unittesmock.MagicMock", 0.18473593056304002], ["str", 0.12668425254359192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[263, 4], [295, 67]], "fn_var_ln": {"dynamodb_to_s3_operator": [[282, 8], [282, 31]], "responses": [[264, 8], [264, 17]], "s3_aws_conn_id": [[281, 8], [281, 22]], "s3_client": [[277, 8], [277, 17]], "table": [[273, 8], [273, 13]]}, "fn_var_occur": {"dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size", "dest_aws_conn_id", "s3_aws_conn_id"], ["dynamodb_to_s3_operator", "execute", "context"]], "responses": [["table", "return_value", "scan", "side_effect", "responses"]], "s3_aws_conn_id": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size", "dest_aws_conn_id", "s3_aws_conn_id"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "s3_aws_conn_id"]], "s3_client": [["s3_client", "MagicMock"], ["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["mock_s3_hook", "return_value", "get_conn", "s3_client"]], "table": [["table", "MagicMock"], ["table", "return_value", "scan", "side_effect", "responses"], ["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"]]}, "name": "test_dynamodb_to_s3_with_just_dest_aws_conn_id", "params": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_descr": {"mock_aws_dynamodb_hook": "", "mock_s3_hook": "", "self": ""}, "params_occur": {"mock_aws_dynamodb_hook": [["mock_aws_dynamodb_hook", "return_value", "conn", "Table", "table"], ["mock_aws_dynamodb_hook", "assert_called_with", "aws_conn_id"]], "mock_s3_hook": [["mock_s3_hook", "return_value", "get_conn", "s3_client"], ["mock_s3_hook", "assert_called_with", "aws_conn_id", "s3_aws_conn_id"]], "self": [["s3_client", "return_value", "upload_file", "self", "mock_upload_file"], ["self", "output_queue"]]}, "params_p": {"args": [], "kwargs": [], "mock_aws_dynamodb_hook": [["unittesmock.MagicMock", 0.7033869177468876]], "mock_s3_hook": [["unittesmock.MagicMock", 0.2985085734624205]], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_to_s3_with_just_dest_aws_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"dynamodb_to_s3_operator": "", "responses": "", "s3_aws_conn_id": "", "s3_client": "", "table": ""}, "variables_p": {"dynamodb_to_s3_operator": [["List[str]", 0.6758886370426227], ["int", 0.21454005658586905], ["str", 0.1095713063715082]], "responses": [["Dict[str, Union[Any, Any]]", 0.20969451267491038], ["datetime.datetime", 0.11807762277291613], ["Dict[str, str]", 0.10563668684477796], ["List[Dict[str, Any]]", 0.08596077921987158], ["Dict[str, Union[Any, Any, Any]]", 0.08433169620331822], ["unittesmock.MagicMock", 0.07873240066926177], ["Dict[str, Dict[str, Any]]", 0.06970967129255277]], "s3_aws_conn_id": [["str", 0.7994787667641508], ["transfer.models.SnippetID", 0.10026061661792467]], "s3_client": [["mock.Mock", 0.8458671061213973], ["unittesmock.MagicMock", 0.15413289387860274]], "table": [["unittesmock.MagicMock", 0.18473593056304002], ["str", 0.12668425254359192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[297, 4], [318, 65]], "fn_var_ln": {"dag": [[298, 8], [298, 11]], "dag_run": [[310, 8], [310, 18]], "operator": [[299, 8], [299, 16]], "ti": [[309, 8], [309, 10]]}, "fn_var_occur": {"dag": [["dag", "DAG", "start_date", "datetime"], ["operator", "DynamoDBToS3Operator", "task_id", "dag", "dag", "dynamodb_table_name", "s3_key_prefix", "s3_bucket_name", "file_size", "source_aws_conn_id", "dest_aws_conn_id"], ["ti", "dag_run", "DagRun", "dag_id", "dag", "dag_id", "run_id", "execution_date", "timezone", "datetime"]], "dag_run": [["ti", "dag_run", "DagRun", "dag_id", "dag", "dag_id", "run_id", "execution_date", "timezone", "datetime"]], "operator": [["operator", "DynamoDBToS3Operator", "task_id", "dag", "dag", "dynamodb_table_name", "s3_key_prefix", "s3_bucket_name", "file_size", "source_aws_conn_id", "dest_aws_conn_id"], ["ti", "TaskInstance", "operator", "run_id"], ["getattr", "operator"], ["getattr", "operator"], ["getattr", "operator"], ["getattr", "operator"], ["getattr", "operator"]], "ti": [["ti", "TaskInstance", "operator", "run_id"], ["ti", "dag_run", "DagRun", "dag_id", "dag", "dag_id", "run_id", "execution_date", "timezone", "datetime"], ["ti", "render_templates"]]}, "name": "test_render_template", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDynamodbToS3.test_render_template", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "dag_run": "", "operator": "", "ti": ""}, "variables_p": {"dag": [["str", 0.2640324480887866], ["int", 0.20827393189926222], ["Dict[str, str]", 0.11800963519421821], ["List[str]", 0.11546440872949686], ["Tuple[int, int]", 0.10803195935429911], ["datetime.datetime.timedelta", 0.09309380836696848], ["datetime.datetime.datetime", 0.09309380836696848]], "dag_run": [["list", 0.11723844348861323], ["int", 0.09683887895141552], ["bytearray", 0.089050497029486]], "operator": [["str", 0.3935021161767959], ["int", 0.21569524459008876], ["List[Dict[str, str]]", 0.10935078890085033], ["list", 0.09700526487011919]], "ti": [["str", 0.5796509406096875], ["List[str]", 0.21711200932377797]]}}, {"docstring": {"func": "Test that DynamoDBToS3Operator when called without export_time will call _export_entire_data", "long_descr": null, "ret": null}, "fn_lc": [[321, 4], [330, 43]], "fn_var_ln": {"dynamodb_to_s3_operator": [[323, 8], [323, 31]]}, "fn_var_occur": {"dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size"], ["dynamodb_to_s3_operator", "execute", "context"]]}, "name": "test_dynamodb_execute_calling_export_entire_data", "params": {"_export_entire_data": "", "self": ""}, "params_descr": {"_export_entire_data": "", "self": ""}, "params_occur": {"_export_entire_data": [["_export_entire_data", "assert_called"]], "self": []}, "params_p": {"_export_entire_data": [["unittesmock.MagicMock", 0.5337991398348665], ["Dict[str, str]", 0.09157474160152441]], "args": [], "kwargs": [], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_execute_calling_export_entire_data", "ret_exprs": [], "ret_type": "", "variables": {"dynamodb_to_s3_operator": ""}, "variables_p": {"dynamodb_to_s3_operator": [["List[str]", 0.4782578766576974], ["Dict[int, Dict[str, str]]", 0.25444084168427644], ["int", 0.10090736112581213], ["Tuple[str, str, str]", 0.09124865792537071]]}}, {"docstring": {"func": "Test that DynamoDBToS3Operator when called without export_time will call", "long_descr": "_export_table_to_point_in_time. Which implements point in time recovery logic", "ret": null}, "fn_lc": [[336, 4], [347, 54]], "fn_var_ln": {"dynamodb_to_s3_operator": [[339, 8], [339, 31]]}, "fn_var_occur": {"dynamodb_to_s3_operator": [["dynamodb_to_s3_operator", "DynamoDBToS3Operator", "task_id", "dynamodb_table_name", "s3_bucket_name", "file_size", "export_time", "datetime", "year", "month", "day"], ["dynamodb_to_s3_operator", "execute", "context"]]}, "name": "test_dynamodb_execute_calling_export_table_to_point_in_time", "params": {"_export_table_to_point_in_time": "", "self": ""}, "params_descr": {"_export_table_to_point_in_time": "", "self": ""}, "params_occur": {"_export_table_to_point_in_time": [["_export_table_to_point_in_time", "assert_called"]], "self": []}, "params_p": {"_export_table_to_point_in_time": [["str", 0.19330178267345]], "args": [], "kwargs": [], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_execute_calling_export_table_to_point_in_time", "ret_exprs": [], "ret_type": "", "variables": {"dynamodb_to_s3_operator": ""}, "variables_p": {"dynamodb_to_s3_operator": [["List[str]", 0.6759700403010059], ["int", 0.1134767650060157], ["Dict[int, Dict[str, str]]", 0.11245331055194584], ["List[Tuple[str, str]]", 0.09809988414103242]]}}, {"docstring": {"func": "Test that DynamoDBToS3Operator should raise a exception when future date is passed in", "long_descr": "export_time parameter", "ret": null}, "fn_lc": [[349, 4], [359, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_dynamodb_with_future_date", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDynamodbToS3.test_dynamodb_with_future_date", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDynamodbToS3", "q_name": "TestDynamodbToS3", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "datetime", "datetime", "decimal", "Decimal", "unittest", "mock", "MagicMock", "patch", "pytest", "airflow", "DAG", "airflow", "exceptions", "AirflowProviderDeprecationWarning", "airflow", "models", "DagRun", "TaskInstance", "airflow", "providers", "amazon", "aws", "transfers", "base", "_DEPRECATION_MSG", "airflow", "providers", "amazon", "aws", "transfers", "dynamodb_to_s3", "DynamoDBToS3Operator", "JSONEncoder", "airflow", "utils", "timezone"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 81}, "session_id": "KbLqX3guvZILjplWugsJTr0pmVpZQTsiFd78LDk2188", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}