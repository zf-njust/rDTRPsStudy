{"error": null, "response": {"classes": [{"cls_lc": [[30, 0], [271, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[33, 4], [68, 13]], "fn_var_ln": {"_get_hook": [[56, 12], [56, 24]], "get_pandas_df_mock": [[40, 8], [40, 26]], "mock_dbapi_hook": [[38, 8], [38, 23]], "op": [[45, 12], [45, 14]], "query": [[34, 8], [34, 13]], "return_value": [[41, 8], [41, 39]], "s3_bucket": [[35, 8], [35, 17]], "s3_key": [[36, 8], [36, 14]], "test_df": [[39, 8], [39, 15]]}, "fn_var_occur": {"_get_hook": [["op", "_get_hook", "mock_dbapi_hook"]], "get_pandas_df_mock": [["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value", "test_df"], ["get_pandas_df_mock", "assert_called_once_with", "sql", "query", "parameters", "None"]], "mock_dbapi_hook": [["mock_dbapi_hook", "mock", "Mock"], ["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["op", "_get_hook", "mock_dbapi_hook"]], "op": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"], ["op", "_get_hook", "mock_dbapi_hook"], ["op", "execute", "None"]], "query": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"], ["get_pandas_df_mock", "assert_called_once_with", "sql", "query", "parameters", "None"]], "return_value": [["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value", "test_df"], ["temp_mock", "return_value", "__enter__", "return_value", "name", "f", "name"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "s3_bucket": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "s3_key": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "test_df": [["test_df", "pd", "DataFrame", "index"], ["get_pandas_df_mock", "return_value", "test_df"]]}, "name": "test_execute_csv", "params": {"mock_s3_hook": "", "self": "", "temp_mock": ""}, "params_descr": {"mock_s3_hook": "", "self": "", "temp_mock": ""}, "params_occur": {"mock_s3_hook": [["mock_s3_hook", "assert_called_once_with", "aws_conn_id", "verify", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "self": [], "temp_mock": [["temp_mock", "return_value", "__enter__", "return_value", "name", "f", "name"], ["temp_mock", "assert_called_once_with", "mode", "suffix"]]}, "params_p": {"args": [], "kwargs": [], "mock_s3_hook": [], "self": [], "temp_mock": []}, "q_name": "TestSqlToS3Operator.test_execute_csv", "ret_exprs": [], "ret_type": "", "variables": {"_get_hook": "", "get_pandas_df_mock": "", "mock_dbapi_hook": "", "op": "", "query": "", "return_value": "", "s3_bucket": "", "s3_key": "", "test_df": ""}, "variables_p": {"_get_hook": [["str", 0.18546013921323187], ["Dict[str, Union[int, str]]", 0.1432538260687638], ["Optional[str]", 0.10198752602817786], ["list", 0.09399916228750854], ["Dict[str, Any]", 0.08818896364951836]], "get_pandas_df_mock": [["Dict[str, List[Any]]", 0.1799457367195315], ["int", 0.12095736732554063], ["str", 0.1119003589082733], ["Pattern[str]", 0.11171558349465327], ["Dict[Any, Union[Any, Any]]", 0.108890196239797], ["Dict[str, str]", 0.0969120870642179], ["rotkehlchen.tests.utils.mock.MockResponse", 0.09174221455654111], ["Dict[str, Dict[str, Any]]", 0.08918315215007645]], "mock_dbapi_hook": [["str", 0.09462453280551003], ["mock.MagicMock", 0.09100218280761821]], "op": [["DefaultDict[Any, int]", 0.19970051297892338], ["KeysView[Any]", 0.11155613072568635], ["str", 0.0928919913865881]], "query": [["DefaultDict[Any, Set]", 0.44319428739473693], ["DefaultDict[Any, List[Any]]", 0.19912385781261957], ["set", 0.09180213619730343], ["DefaultDict[Any, Set[Any]]", 0.09070960451635054], ["str", 0.08806620881141522], ["Tuple[Any, Any]", 0.08710390526757432]], "return_value": [["Dict[str, Any]", 0.2946539484620181], ["str", 0.1803629877667659], ["int", 0.12248256107383244], ["Dict[str, List[Any]]", 0.11919836857515209], ["dict", 0.08920574348853479]], "s3_bucket": [["set", 0.4465933357940852], ["KeysView[Any]", 0.08774951516399454]], "s3_key": [["set", 0.6049023167066444], ["Pattern[str]", 0.10327217290386868]], "test_df": [["float", 0.09365372276377033], ["Dict[Any, Dict[str, int]]", 0.09025293377925295]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [105, 13]], "fn_var_ln": {"_get_hook": [[96, 12], [96, 24]], "get_pandas_df_mock": [[80, 8], [80, 26]], "mock_dbapi_hook": [[77, 8], [77, 23]], "op": [[85, 12], [85, 14]], "query": [[73, 8], [73, 13]], "return_value": [[81, 8], [81, 39]], "s3_bucket": [[74, 8], [74, 17]], "s3_key": [[75, 8], [75, 14]], "test_df": [[79, 8], [79, 15]]}, "fn_var_occur": {"_get_hook": [["op", "_get_hook", "mock_dbapi_hook"]], "get_pandas_df_mock": [["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value", "test_df"], ["get_pandas_df_mock", "assert_called_once_with", "sql", "query", "parameters", "None"]], "mock_dbapi_hook": [["mock_dbapi_hook", "mock", "Mock"], ["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["op", "_get_hook", "mock_dbapi_hook"]], "op": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "False", "dag", "None"], ["op", "_get_hook", "mock_dbapi_hook"], ["op", "execute", "None"]], "query": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "False", "dag", "None"], ["get_pandas_df_mock", "assert_called_once_with", "sql", "query", "parameters", "None"]], "return_value": [["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value", "test_df"], ["temp_mock", "return_value", "__enter__", "return_value", "name", "f", "name"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "False"]], "s3_bucket": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "False", "dag", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "False"]], "s3_key": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "False", "dag", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "False"]], "test_df": [["test_df", "pd", "DataFrame", "index"], ["get_pandas_df_mock", "return_value", "test_df"]]}, "name": "test_execute_parquet", "params": {"mock_s3_hook": "", "self": "", "temp_mock": ""}, "params_descr": {"mock_s3_hook": "", "self": "", "temp_mock": ""}, "params_occur": {"mock_s3_hook": [["mock_s3_hook", "assert_called_once_with", "aws_conn_id", "verify", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "False"]], "self": [], "temp_mock": [["temp_mock", "return_value", "__enter__", "return_value", "name", "f", "name"], ["temp_mock", "assert_called_once_with", "mode", "suffix"]]}, "params_p": {"args": [], "kwargs": [], "mock_s3_hook": [], "self": [], "temp_mock": []}, "q_name": "TestSqlToS3Operator.test_execute_parquet", "ret_exprs": [], "ret_type": "", "variables": {"_get_hook": "", "get_pandas_df_mock": "", "mock_dbapi_hook": "", "op": "", "query": "", "return_value": "", "s3_bucket": "", "s3_key": "", "test_df": ""}, "variables_p": {"_get_hook": [["str", 0.18546013921323187], ["Dict[str, Union[int, str]]", 0.1432538260687638], ["Optional[str]", 0.10198752602817786], ["list", 0.09399916228750854], ["Dict[str, Any]", 0.08818896364951836]], "get_pandas_df_mock": [["Dict[str, List[Any]]", 0.1799457367195315], ["int", 0.12095736732554063], ["str", 0.1119003589082733], ["Pattern[str]", 0.11171558349465327], ["Dict[Any, Union[Any, Any]]", 0.108890196239797], ["Dict[str, str]", 0.0969120870642179], ["rotkehlchen.tests.utils.mock.MockResponse", 0.09174221455654111], ["Dict[str, Dict[str, Any]]", 0.08918315215007645]], "mock_dbapi_hook": [["str", 0.09462453280551003], ["mock.MagicMock", 0.09100218280761821]], "op": [["Tuple[Any, tuple, frozenset[Any]]", 0.10655139922708819], ["Generator[None, None, None]", 0.09441397449856634]], "query": [["DefaultDict[Any, Set]", 0.3132603483340249], ["Generator[Any, None, None]", 0.2873583237281656], ["DefaultDict[Any, Set[Any]]", 0.19103423992434104], ["int", 0.10611293229358137], ["Union[Any, Any]", 0.10223415571988684]], "return_value": [["Dict[str, Any]", 0.2946539484620181], ["str", 0.1803629877667659], ["int", 0.12248256107383244], ["Dict[str, List[Any]]", 0.11919836857515209], ["dict", 0.08920574348853479]], "s3_bucket": [["set", 0.4243045772424217], ["Iterable[Dict[str, Any]]", 0.09259610113309513]], "s3_key": [["set", 0.8137548469523401]], "test_df": [["float", 0.09365372276377033], ["Dict[Any, Dict[str, int]]", 0.09025293377925295]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [145, 13]], "fn_var_ln": {"_get_hook": [[133, 12], [133, 24]], "get_pandas_df_mock": [[116, 8], [116, 26]], "mock_dbapi_hook": [[114, 8], [114, 23]], "op": [[121, 12], [121, 14]], "query": [[110, 8], [110, 13]], "return_value": [[117, 8], [117, 39]], "s3_bucket": [[111, 8], [111, 17]], "s3_key": [[112, 8], [112, 14]], "test_df": [[115, 8], [115, 15]]}, "fn_var_occur": {"_get_hook": [["op", "_get_hook", "mock_dbapi_hook"]], "get_pandas_df_mock": [["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value", "test_df"], ["get_pandas_df_mock", "assert_called_once_with", "sql", "query", "parameters", "None"]], "mock_dbapi_hook": [["mock_dbapi_hook", "mock", "Mock"], ["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["op", "_get_hook", "mock_dbapi_hook"]], "op": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "True", "pd_kwargs", "True", "dag", "None"], ["op", "_get_hook", "mock_dbapi_hook"], ["op", "execute", "None"]], "query": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "True", "pd_kwargs", "True", "dag", "None"], ["get_pandas_df_mock", "assert_called_once_with", "sql", "query", "parameters", "None"]], "return_value": [["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value", "test_df"], ["temp_mock", "return_value", "__enter__", "return_value", "name", "f", "name"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "s3_bucket": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "True", "pd_kwargs", "True", "dag", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "s3_key": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "file_format", "replace", "True", "pd_kwargs", "True", "dag", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "test_df": [["test_df", "pd", "DataFrame", "index"], ["get_pandas_df_mock", "return_value", "test_df"]]}, "name": "test_execute_json", "params": {"mock_s3_hook": "", "self": "", "temp_mock": ""}, "params_descr": {"mock_s3_hook": "", "self": "", "temp_mock": ""}, "params_occur": {"mock_s3_hook": [["mock_s3_hook", "assert_called_once_with", "aws_conn_id", "verify", "None"], ["mock_s3_hook", "return_value", "load_file", "assert_called_once_with", "filename", "f", "name", "key", "s3_key", "bucket_name", "s3_bucket", "replace", "True"]], "self": [], "temp_mock": [["temp_mock", "return_value", "__enter__", "return_value", "name", "f", "name"], ["temp_mock", "assert_called_once_with", "mode", "suffix"]]}, "params_p": {"args": [], "kwargs": [], "mock_s3_hook": [], "self": [], "temp_mock": []}, "q_name": "TestSqlToS3Operator.test_execute_json", "ret_exprs": [], "ret_type": "", "variables": {"_get_hook": "", "get_pandas_df_mock": "", "mock_dbapi_hook": "", "op": "", "query": "", "return_value": "", "s3_bucket": "", "s3_key": "", "test_df": ""}, "variables_p": {"_get_hook": [["str", 0.18546013921323187], ["Dict[str, Union[int, str]]", 0.1432538260687638], ["Optional[str]", 0.10198752602817786], ["list", 0.09399916228750854], ["Dict[str, Any]", 0.08818896364951836]], "get_pandas_df_mock": [["Dict[str, List[Any]]", 0.1799457367195315], ["int", 0.12095736732554063], ["str", 0.1119003589082733], ["Pattern[str]", 0.11171558349465327], ["Dict[Any, Union[Any, Any]]", 0.108890196239797], ["Dict[str, str]", 0.0969120870642179], ["rotkehlchen.tests.utils.mock.MockResponse", 0.09174221455654111], ["Dict[str, Dict[str, Any]]", 0.08918315215007645]], "mock_dbapi_hook": [["str", 0.09462453280551003], ["mock.MagicMock", 0.09100218280761821]], "op": [["KeysView[Any]", 0.11010645593435749], ["int", 0.09786389514066676], ["Generator[None, None, None]", 0.09583550762334078], ["Type[str]", 0.09483829039306811], ["str", 0.09363465603394983], ["set", 0.09132905818233834]], "query": [["DefaultDict[Any, Set]", 0.4033906318585309], ["int", 0.11642447793915152], ["Type[str]", 0.10584413991779128], ["DefaultDict[Any, Set[Any]]", 0.09841584947694496], ["set", 0.0904676245929141]], "return_value": [["Dict[str, Any]", 0.2946539484620181], ["str", 0.1803629877667659], ["int", 0.12248256107383244], ["Dict[str, List[Any]]", 0.11919836857515209], ["dict", 0.08920574348853479]], "s3_bucket": [["set", 0.4095334635723619], ["Iterable[Dict[str, Any]]", 0.09938734566511016], ["DefaultDict[Any, List[Any]]", 0.09360122047975568]], "s3_key": [["set", 0.9017797783432796]], "test_df": [["float", 0.09365372276377033], ["Dict[Any, Dict[str, int]]", 0.09025293377925295]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [165, 49]], "fn_var_ln": {"dirty_df": [[162, 8], [162, 16]], "op": [[155, 8], [155, 10]]}, "fn_var_occur": {"dirty_df": [["dirty_df", "pd", "DataFrame", "None", "None"], ["op", "_fix_dtypes", "df", "dirty_df", "file_format", "params"], ["dirty_df", "values", "params"], ["dirty_df", "dtype", "kind"]], "op": [["op", "SqlToS3Operator", "query", "s3_bucket", "s3_key", "task_id", "sql_conn_id"], ["op", "_fix_dtypes", "df", "dirty_df", "file_format", "params"]]}, "name": "test_fix_dtypes", "params": {"params": "", "self": ""}, "params_descr": {"params": "", "self": ""}, "params_occur": {"params": [["op", "_fix_dtypes", "df", "dirty_df", "file_format", "params"], ["dirty_df", "values", "params"]], "self": []}, "params_p": {"args": [], "kwargs": [], "params": [], "self": []}, "q_name": "TestSqlToS3Operator.test_fix_dtypes", "ret_exprs": [], "ret_type": "", "variables": {"dirty_df": "", "op": ""}, "variables_p": {"dirty_df": [["starfish.core.experimenbuilder.providers.TileFetcher", 0.09358617732678466]], "op": [["int", 0.27796605184469864], ["List[int]", 0.10822925102935284], ["Type[Dict[str, Any]]", 0.08866866494148573], ["DefaultDict[Any, int]", 0.08604149428027541], ["Dict[str, Dict[str, Any]]", 0.08453485183693174]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[167, 4], [177, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_invalid_file_format", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqlToS3Operator.test_invalid_file_format", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test operator when the groupby_kwargs is specified", "long_descr": null, "ret": null}, "fn_lc": [[179, 4], [229, 9]], "fn_var_ln": {"data": [[206, 8], [206, 12]], "df": [[220, 14], [220, 16]], "example": [[199, 8], [199, 15]], "op": [[187, 8], [187, 10]], "query": [[183, 8], [183, 13]], "s3_bucket": [[184, 8], [184, 17]], "s3_key": [[185, 8], [185, 14]], "team": [[220, 8], [220, 12]]}, "fn_var_occur": {"data": [["data", "append", "group_name", "df"], ["data", "sort", "key", "d", "d"], ["team", "df", "data"], ["team", "df", "data"]], "df": [["df", "pd", "DataFrame", "example"], ["op", "_partition_dataframe", "df"], ["data", "append", "group_name", "df"], ["team", "df", "data"], ["df", "equals", "pd", "DataFrame"], ["team", "df", "data"], ["df", "equals", "pd", "DataFrame"]], "example": [["df", "pd", "DataFrame", "example"]], "op": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "groupby_kwargs", "dag", "None"], ["op", "_partition_dataframe", "df"]], "query": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "groupby_kwargs", "dag", "None"]], "s3_bucket": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "groupby_kwargs", "dag", "None"]], "s3_key": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "groupby_kwargs", "dag", "None"]], "team": [["team", "df", "data"], ["team", "df", "data"]]}, "name": "test_with_groupby_kwarg", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqlToS3Operator.test_with_groupby_kwarg", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "df": "", "example": "", "op": "", "query": "", "s3_bucket": "", "s3_key": "", "team": ""}, "variables_p": {"data": [["list", 0.512680400138999], ["Dict[str, Any]", 0.24023550633343985], ["Dict[str, int]", 0.10254213937742118], ["List[Union[Any, Any]]", 0.07398205710182848], ["Dict[str, List[Any]]", 0.0705598970483116]], "df": [["Dict[str, List[Any]]", 0.23735755627559285]], "example": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "op": [["DefaultDict[Any, int]", 0.19970051297892338], ["KeysView[Any]", 0.11155613072568635], ["str", 0.0928919913865881]], "query": [["DefaultDict[Any, Set]", 0.44319428739473693], ["DefaultDict[Any, List[Any]]", 0.19912385781261957], ["set", 0.09180213619730343], ["DefaultDict[Any, Set[Any]]", 0.09070960451635054], ["str", 0.08806620881141522], ["Tuple[Any, Any]", 0.08710390526757432]], "s3_bucket": [["set", 0.4465933357940852], ["KeysView[Any]", 0.08774951516399454]], "s3_key": [["set", 0.6049023167066444], ["Pattern[str]", 0.10327217290386868]], "team": []}}, {"docstring": {"func": "Test operator when the groupby_kwargs is not specified", "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [271, 9]], "fn_var_ln": {"data": [[257, 8], [257, 12]], "df": [[262, 14], [262, 16]], "example": [[250, 8], [250, 15]], "op": [[239, 8], [239, 10]], "query": [[235, 8], [235, 13]], "s3_bucket": [[236, 8], [236, 17]], "s3_key": [[237, 8], [237, 14]], "team": [[262, 8], [262, 12]]}, "fn_var_occur": {"data": [["data", "append", "group_name", "df"], ["len", "data"], ["team", "df", "data"]], "df": [["df", "pd", "DataFrame", "example"], ["op", "_partition_dataframe", "df"], ["data", "append", "group_name", "df"], ["team", "df", "data"], ["df", "equals", "pd", "DataFrame"]], "example": [["df", "pd", "DataFrame", "example"]], "op": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"], ["op", "_partition_dataframe", "df"]], "query": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"]], "s3_bucket": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"]], "s3_key": [["op", "SqlToS3Operator", "query", "query", "s3_bucket", "s3_bucket", "s3_key", "s3_key", "sql_conn_id", "aws_conn_id", "task_id", "replace", "True", "pd_kwargs", "False", "False", "dag", "None"]], "team": [["team", "df", "data"]]}, "name": "test_without_groupby_kwarg", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSqlToS3Operator.test_without_groupby_kwarg", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "df": "", "example": "", "op": "", "query": "", "s3_bucket": "", "s3_key": "", "team": ""}, "variables_p": {"data": [["Dict[str, Any]", 0.4101675935005352], ["list", 0.3124649811126544], ["List[Dict[str, Any]]", 0.08133240117004777], ["str", 0.062122120314871514], ["Dict[str, int]", 0.06197564926251927]], "df": [["Dict[str, List[Any]]", 0.23735755627559285]], "example": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "op": [["DefaultDict[Any, int]", 0.19970051297892338], ["KeysView[Any]", 0.11155613072568635], ["str", 0.0928919913865881]], "query": [["DefaultDict[Any, Set]", 0.44319428739473693], ["DefaultDict[Any, List[Any]]", 0.19912385781261957], ["set", 0.09180213619730343], ["DefaultDict[Any, Set[Any]]", 0.09070960451635054], ["str", 0.08806620881141522], ["Tuple[Any, Any]", 0.08710390526757432]], "s3_bucket": [["set", 0.4465933357940852], ["KeysView[Any]", 0.08774951516399454]], "s3_key": [["set", 0.6049023167066444], ["Pattern[str]", 0.10327217290386868]], "team": [["str", 0.49999999999862604], ["Pattern[str]", 0.49999999994138394]]}}], "name": "TestSqlToS3Operator", "q_name": "TestSqlToS3Operator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "tempfile", "NamedTemporaryFile", "unittest", "mock", "pandas", "pd", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "providers", "amazon", "aws", "transfers", "sql_to_s3", "SqlToS3Operator"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 59}, "session_id": "7dZs5nzGAGMS8o2HgQ5oMDIUgB0MQHFQBY026M8phDg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}