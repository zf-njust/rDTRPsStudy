{"error": null, "response": {"classes": [{"cls_lc": [[36, 0], [37, 33]], "cls_var_ln": {"conn": [[37, 4], [37, 8]]}, "cls_var_occur": {"conn": []}, "funcs": [], "name": "LambdaHookForTests", "q_name": "LambdaHookForTests", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[45, 0], [138, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [47, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_returns_a_boto3_connection", "params": {"hook": "", "self": ""}, "params_descr": {"hook": "", "self": ""}, "params_occur": {"hook": [["hook", "conn", "None"]], "self": []}, "params_p": {"args": [], "hook": [["Optional[Iterable[Any]]", 0.05988199494976558], ["antidote.providers.factory.FactoryProvider", 0.05371728973625766], ["antidote.providers.tag.TagProvider", 0.05371728973625766]], "kwargs": [], "self": []}, "q_name": "TestLambdaHook.test_get_conn_returns_a_boto3_connection", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [63, 9]], "fn_var_ln": {"hook": [[57, 8], [57, 12]]}, "fn_var_occur": {"hook": [["hook", "LambdaHook"], ["hook", "invoke_lambda", "function_name", "FUNCTION_NAME", "payload", "payload"]]}, "name": "test_invoke_lambda", "params": {"invoke_payload": "", "mock_conn": "", "payload": "", "self": ""}, "params_descr": {"invoke_payload": "", "mock_conn": "", "payload": "", "self": ""}, "params_occur": {"invoke_payload": [["mock_conn", "invoke", "assert_called_once_with", "FunctionName", "FUNCTION_NAME", "Payload", "invoke_payload"]], "mock_conn": [["mock_conn", "invoke", "assert_called_once_with", "FunctionName", "FUNCTION_NAME", "Payload", "invoke_payload"]], "payload": [["hook", "invoke_lambda", "function_name", "FUNCTION_NAME", "payload", "payload"]], "self": []}, "params_p": {"args": [], "invoke_payload": [["unittesmock.MagicMock", 0.22416368083062854]], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.22416368083062854]], "payload": [], "self": []}, "q_name": "TestLambdaHook.test_invoke_lambda", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.62974697112341], ["Dict[str, List[str]]", 0.08535792586814588]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [109, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_lambda", "params": {"boto3_params": "", "hook": "", "hook_params": "", "self": ""}, "params_descr": {"boto3_params": "", "hook": "", "hook_params": "", "self": ""}, "params_occur": {"boto3_params": [["hook", "conn", "create_function", "assert_called_once_with", "boto3_params"]], "hook": [["hook", "conn", "create_function", "reset_mock"], ["hook", "conn", "create_function", "return_value"], ["hook", "create_lambda", "hook_params"], ["hook", "conn", "create_function", "assert_called_once_with", "boto3_params"]], "hook_params": [["hook", "create_lambda", "hook_params"]], "self": []}, "params_p": {"args": [], "boto3_params": [["bool", 0.10898722460322537]], "hook": [["mock.Mock", 0.2871829777571449]], "hook_params": [["int", 0.04095783590407028], ["Callable", 0.03783911136239602]], "kwargs": [], "self": []}, "q_name": "TestLambdaHook.test_create_lambda", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [138, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_lambda_with_zip_package_type_and_missing_args", "params": {"hook": "", "params": "", "self": ""}, "params_descr": {"hook": "", "params": "", "self": ""}, "params_occur": {"hook": [["hook", "conn", "create_function", "return_value"], ["hook", "create_lambda", "function_name", "FUNCTION_NAME", "role", "ROLE", "code", "CODE", "package_type", "params"]], "params": [["hook", "create_lambda", "function_name", "FUNCTION_NAME", "role", "ROLE", "code", "CODE", "package_type", "params"]], "self": []}, "params_p": {"args": [], "hook": [["antidote.providers.factory.FactoryProvider", 0.09516916144218715]], "kwargs": [], "params": [["antidote.providers.factory.FactoryProvider", 0.10980292681367929]], "self": []}, "q_name": "TestLambdaHook.test_create_lambda_with_zip_package_type_and_missing_args", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestLambdaHook", "q_name": "TestLambdaHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 0], [42, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "hook", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "hook", "ret_exprs": ["return LambdaHookForTests()"], "ret_type": "", "ret_type_p": [["bool", 0.8994585660673069], ["Optional[int]", 0.10054143393269303]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "MagicMock", "pytest", "airflow", "providers", "amazon", "aws", "hooks", "lambda_function", "LambdaHook"], "mod_var_ln": {"BYTES_PAYLOAD": [[29, 0], [29, 13]], "CODE": [[33, 0], [33, 4]], "FUNCTION_NAME": [[27, 0], [27, 13]], "HANDLER": [[32, 0], [32, 7]], "PAYLOAD": [[28, 0], [28, 7]], "ROLE": [[31, 0], [31, 4]], "RUNTIME": [[30, 0], [30, 7]]}, "mod_var_occur": {"BYTES_PAYLOAD": [], "CODE": [["hook", "create_lambda", "function_name", "FUNCTION_NAME", "role", "ROLE", "code", "CODE", "package_type", "params"]], "FUNCTION_NAME": [["hook", "invoke_lambda", "function_name", "FUNCTION_NAME", "payload", "payload"], ["mock_conn", "invoke", "assert_called_once_with", "FunctionName", "FUNCTION_NAME", "Payload", "invoke_payload"], ["hook", "create_lambda", "function_name", "FUNCTION_NAME", "role", "ROLE", "code", "CODE", "package_type", "params"]], "HANDLER": [], "PAYLOAD": [], "ROLE": [["hook", "create_lambda", "function_name", "FUNCTION_NAME", "role", "ROLE", "code", "CODE", "package_type", "params"]], "RUNTIME": []}, "no_types_annot": {"D": 0, "I": 0, "U": 23}, "session_id": "j5jN9asR0ROAh4-n6ooNxEYBMahhrgASzC3rJ1LHPt4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BYTES_PAYLOAD": "", "CODE": "", "FUNCTION_NAME": "", "HANDLER": "", "PAYLOAD": "", "ROLE": "", "RUNTIME": ""}, "variables_p": {"BYTES_PAYLOAD": [["Callable", 0.39999999999999997], ["int", 0.3], ["Type[str]", 0.19999999999999998], ["str", 0.09999999999999999]], "CODE": [["str", 0.8864389076766548], ["int", 0.11356109232334535]], "FUNCTION_NAME": [["str", 0.7987007756585928], ["int", 0.10904892200843248], ["list", 0.0922503023329747]], "HANDLER": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "PAYLOAD": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "ROLE": [["str", 0.883003436014185], ["Dict[str, Any]", 0.1169965639858148]], "RUNTIME": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}