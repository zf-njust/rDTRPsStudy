{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [403, 41]], "cls_var_ln": {"MAX_RETRIES": [[42, 4], [42, 15]], "STATUS_RETRIES": [[43, 4], [43, 18]]}, "cls_var_occur": {"MAX_RETRIES": [], "STATUS_RETRIES": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [67, 73]], "fn_var_ln": {"batch_client": [[51, 8], [51, 25]], "client_mock": [[60, 8], [60, 24]], "get_client_type_mock": [[50, 8], [50, 33]], "mock_delay": [[64, 8], [64, 23]], "mock_exponential_delay": [[66, 8], [66, 35]]}, "fn_var_occur": {"batch_client": [["self", "batch_client", "BatchClientHook", "max_retries", "self", "MAX_RETRIES", "status_retries", "self", "STATUS_RETRIES", "aws_conn_id", "region_name", "AWS_REGION"], ["self", "batch_client", "get_connection", "_", "None"], ["self", "batch_client", "client", "self", "client_mock"], ["self", "batch_client", "delay", "self", "mock_delay"], ["self", "batch_client", "exponential_delay", "self", "mock_exponential_delay"]], "client_mock": [["self", "client_mock", "get_client_type_mock", "return_value"], ["self", "batch_client", "client", "self", "client_mock"]], "get_client_type_mock": [["self", "get_client_type_mock", "get_client_type_mock"], ["self", "client_mock", "get_client_type_mock", "return_value"]], "mock_delay": [["self", "mock_delay", "mock", "Mock", "return_value", "None"], ["self", "batch_client", "delay", "self", "mock_delay"]], "mock_exponential_delay": [["self", "mock_exponential_delay", "mock", "Mock", "return_value"], ["self", "batch_client", "exponential_delay", "self", "mock_exponential_delay"]]}, "name": "setup_method", "params": {"get_client_type_mock": "", "method": "", "self": ""}, "params_descr": {"get_client_type_mock": "", "method": "", "self": ""}, "params_occur": {"get_client_type_mock": [["self", "get_client_type_mock", "get_client_type_mock"], ["self", "client_mock", "get_client_type_mock", "return_value"]], "method": [], "self": [["self", "get_client_type_mock", "get_client_type_mock"], ["self", "batch_client", "BatchClientHook", "max_retries", "self", "MAX_RETRIES", "status_retries", "self", "STATUS_RETRIES", "aws_conn_id", "region_name", "AWS_REGION"], ["self", "batch_client", "get_connection", "_", "None"], ["self", "client_mock", "get_client_type_mock", "return_value"], ["self", "batch_client", "client", "self", "client_mock"], ["self", "mock_delay", "mock", "Mock", "return_value", "None"], ["self", "batch_client", "delay", "self", "mock_delay"], ["self", "mock_exponential_delay", "mock", "Mock", "return_value"], ["self", "batch_client", "exponential_delay", "self", "mock_exponential_delay"]]}, "params_p": {"args": [], "get_client_type_mock": [["Optional[str]", 0.08092346351934694]], "kwargs": [], "method": [["str", 0.6100532575929003], ["Optional[str]", 0.19062402325999667], ["bool", 0.09179583625328679]], "self": []}, "q_name": "TestBatchClient.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"batch_client": "", "client_mock": "", "get_client_type_mock": "", "mock_delay": "", "mock_exponential_delay": ""}, "variables_p": {"batch_client": [["str", 0.11009365567506534], ["Final", 0.09372078694581237], ["raiden.utils.PaymentAmount", 0.09301500335632767], ["int", 0.09273176712868865], ["set", 0.09253906653436053]], "client_mock": [], "get_client_type_mock": [["str", 0.6117132769761676], ["Tuple[str, str]", 0.09944119183766292], ["int", 0.09804136598858519], ["Dict[str, str]", 0.09720265409589493]], "mock_delay": [["List[int]", 0.09965527810337557], ["mock.MagicMock", 0.0934500827099572]], "mock_exponential_delay": [["Dict[str, Any]", 0.14101226264502018], ["List[int]", 0.140912420457084], ["mock.Mock", 0.08338781547654829]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [76, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "batch_client", "max_retries", "self", "MAX_RETRIES"], ["self", "batch_client", "status_retries", "self", "STATUS_RETRIES"], ["self", "batch_client", "region_name", "AWS_REGION"], ["self", "batch_client", "aws_conn_id"], ["self", "batch_client", "client", "self", "client_mock"], ["self", "get_client_type_mock", "assert_called_once_with", "region_name", "AWS_REGION"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [97, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_wait_for_job_with_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["mock", "patch", "object", "self", "batch_client", "wraps", "self", "batch_client", "poll_for_job_running", "job_running"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["mock", "patch", "object", "self", "batch_client", "wraps", "self", "batch_client", "poll_for_job_complete", "job_complete"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["self", "client_mock", "describe_jobs", "call_count"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_wait_for_job_with_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [118, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_wait_for_job_with_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["mock", "patch", "object", "self", "batch_client", "wraps", "self", "batch_client", "poll_for_job_running", "job_running"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["mock", "patch", "object", "self", "batch_client", "wraps", "self", "batch_client", "poll_for_job_complete", "job_complete"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["self", "client_mock", "describe_jobs", "call_count"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_wait_for_job_with_failure", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [141, 50]], "fn_var_ln": {"batch_log_fetcher": [[123, 8], [123, 25]], "mock_get_batch_log_fetcher": [[124, 8], [124, 34]], "thread_join": [[128, 8], [128, 19]], "thread_start": [[126, 8], [126, 20]], "thread_stop": [[127, 8], [127, 19]]}, "fn_var_occur": {"batch_log_fetcher": [["batch_log_fetcher", "mock", "Mock", "spec", "AwsTaskLogFetcher"], ["mock_get_batch_log_fetcher", "mock", "Mock", "return_value", "batch_log_fetcher"], ["mock", "patch", "object", "batch_log_fetcher", "thread_start", "mock_fetcher_start"]], "mock_get_batch_log_fetcher": [["mock_get_batch_log_fetcher", "mock", "Mock", "return_value", "batch_log_fetcher"], ["self", "batch_client", "wait_for_job", "JOB_ID", "get_batch_log_fetcher", "mock_get_batch_log_fetcher"], ["mock_get_batch_log_fetcher", "assert_called_with", "JOB_ID"]], "thread_join": [["thread_join", "mock", "Mock", "side_effect", "time", "sleep"]], "thread_start": [["thread_start", "mock", "Mock", "side_effect", "time", "sleep"], ["mock", "patch", "object", "batch_log_fetcher", "thread_start", "mock_fetcher_start"]], "thread_stop": [["thread_stop", "mock", "Mock", "side_effect", "time", "sleep"]]}, "name": "test_wait_for_job_with_logs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "wait_for_job", "JOB_ID", "get_batch_log_fetcher", "mock_get_batch_log_fetcher"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_wait_for_job_with_logs", "ret_exprs": [], "ret_type": "", "variables": {"batch_log_fetcher": "", "mock_get_batch_log_fetcher": "", "thread_join": "", "thread_start": "", "thread_stop": ""}, "variables_p": {"batch_log_fetcher": [["str", 0.20705623861232025], ["List[Union[Any, Any]]", 0.1809040685539138], ["mode.utils.mocks.Mock", 0.0935223504996823]], "mock_get_batch_log_fetcher": [["mock.MagicMock", 0.09176194197513793], ["mock.Mock", 0.08687803594310953], ["Union[mock.AsyncMock, mock.MagicMock]", 0.08648863894192196]], "thread_join": [["mock.Mock", 0.8343764326376356]], "thread_start": [], "thread_stop": [["mock.Mock", 0.8343764326376356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [146, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_poll_job_running_for_status_running", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "poll_for_job_running", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_poll_job_running_for_status_running", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [151, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_poll_job_complete_for_status_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_poll_job_complete_for_status_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[153, 4], [160, 80]], "fn_var_ln": {"msg": [[157, 8], [157, 11]]}, "fn_var_occur": {"msg": [["msg", "JOB_ID"], ["msg", "str", "ctx", "value"]]}, "name": "test_poll_job_complete_raises_for_max_retries", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_with", "jobs", "JOB_ID"], ["self", "client_mock", "describe_jobs", "call_count", "self", "MAX_RETRIES"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_poll_job_complete_raises_for_max_retries", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.8220238797138242], ["bool", 0.08935492293548657], ["Set[str]", 0.0886211973506893]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[162, 4], [177, 79]], "fn_var_ln": {"log_record": [[170, 8], [170, 18]], "msg": [[173, 8], [173, 11]]}, "fn_var_occur": {"log_record": [["log_record", "caplog", "records"], ["log_record", "message"]], "msg": [["msg", "JOB_ID"], ["msg", "str", "ctx", "value"]]}, "name": "test_poll_job_status_hit_api_throttle", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "getLevelName"], ["log_record", "caplog", "records"]], "self": [["self", "client_mock", "describe_jobs", "side_effect", "botocore", "exceptions", "ClientError", "error_response", "operation_name"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_with", "jobs", "JOB_ID"], ["self", "client_mock", "describe_jobs", "call_count", "self", "STATUS_RETRIES"]]}, "params_p": {"args": [], "caplog": [["str", 0.27701044551965587]], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_poll_job_status_hit_api_throttle", "ret_exprs": [], "ret_type": "", "variables": {"log_record": "", "msg": ""}, "variables_p": {"log_record": [["bool", 0.34781177660367246], ["int", 0.17988622563996923], ["Dict[str, Union[Any, Any, Any]]", 0.1085375053647115], ["list", 0.10417077566490837], ["List[float]", 0.06512200112784369], ["str", 0.05604260867099549], ["logging.Logger", 0.053992980893370644]], "msg": [["str", 0.8220238797138242], ["bool", 0.08935492293548657], ["Set[str]", 0.0886211973506893]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[179, 4], [189, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_poll_job_status_with_client_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "side_effect", "botocore", "exceptions", "ClientError", "error_response", "operation_name"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_poll_job_status_with_client_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[191, 4], [195, 77]], "fn_var_ln": {"status": [[193, 8], [193, 14]]}, "fn_var_occur": {"status": [["status", "self", "batch_client", "check_job_success", "JOB_ID"]]}, "name": "test_check_job_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["status", "self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_check_job_success", "ret_exprs": [], "ret_type": "", "variables": {"status": ""}, "variables_p": {"status": [["str", 0.7242330378248306], ["List[str]", 0.18819204231138054], ["Dict[str, List[str]]", 0.08757491986378876]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[197, 4], [212, 36]], "fn_var_ln": {"msg": [[211, 8], [211, 11]]}, "fn_var_occur": {"msg": [["msg", "JOB_ID"], ["msg", "str", "ctx", "value"]]}, "name": "test_check_job_success_raises_failed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_check_job_success_raises_failed", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.8220238797138242], ["bool", 0.08935492293548657], ["Set[str]", 0.0886211973506893]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[214, 4], [229, 36]], "fn_var_ln": {"msg": [[228, 8], [228, 11]]}, "fn_var_occur": {"msg": [["msg", "JOB_ID"], ["msg", "str", "ctx", "value"]]}, "name": "test_check_job_success_raises_failed_for_multiple_attempts", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_check_job_success_raises_failed_for_multiple_attempts", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.8220238797138242], ["bool", 0.08935492293548657], ["Set[str]", 0.0886211973506893]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [237, 36]], "fn_var_ln": {"msg": [[236, 8], [236, 11]]}, "fn_var_occur": {"msg": [["msg", "JOB_ID"], ["msg", "str", "ctx", "value"]]}, "name": "test_check_job_success_raises_incomplete", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_check_job_success_raises_incomplete", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.8220238797138242], ["bool", 0.08935492293548657], ["Set[str]", 0.0886211973506893]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[239, 4], [247, 39]], "fn_var_ln": {"msg": [[245, 8], [245, 11]], "status": [[240, 8], [240, 14]]}, "fn_var_occur": {"msg": [["msg", "JOB_ID"], ["msg", "str", "ctx", "value"]], "status": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "status"], ["status", "str", "ctx", "value"]]}, "name": "test_check_job_success_raises_unknown_status", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "status"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_check_job_success_raises_unknown_status", "ret_exprs": [], "ret_type": "", "variables": {"msg": "", "status": ""}, "variables_p": {"msg": [["str", 0.8220238797138242], ["bool", 0.08935492293548657], ["Set[str]", 0.0886211973506893]], "status": [["int", 0.5677518144362681], ["str", 0.17868837877576224], ["Set[str]", 0.16174690017935595]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[249, 4], [255, 36]], "fn_var_ln": {"msg": [[254, 8], [254, 11]]}, "fn_var_occur": {"msg": [["msg", "JOB_ID"], ["msg", "str", "ctx", "value"]]}, "name": "test_check_job_success_raises_without_jobs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_check_job_success_raises_without_jobs", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.8220238797138242], ["bool", 0.08935492293548657], ["Set[str]", 0.0886211973506893]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[257, 4], [262, 29]], "fn_var_ln": {"reason": [[259, 8], [259, 14]], "response": [[260, 8], [260, 16]]}, "fn_var_occur": {"reason": [["response", "self", "batch_client", "terminate_job", "JOB_ID", "reason"], ["self", "client_mock", "terminate_job", "assert_called_once_with", "jobId", "JOB_ID", "reason", "reason"]], "response": [["response", "self", "batch_client", "terminate_job", "JOB_ID", "reason"]]}, "name": "test_terminate_job", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "terminate_job", "return_value"], ["response", "self", "batch_client", "terminate_job", "JOB_ID", "reason"], ["self", "client_mock", "terminate_job", "assert_called_once_with", "jobId", "JOB_ID", "reason", "reason"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_terminate_job", "ret_exprs": [], "ret_type": "", "variables": {"reason": "", "response": ""}, "variables_p": {"reason": [["float", 0.34540475015114613], ["Union[Literal, str]", 0.1730992988012854], ["mock.Mock", 0.08895617850090023], ["Dict[str, Optional[str]]", 0.08892874406125359]], "response": [["str", 0.317529849735813], ["dict", 0.11215748474011632], ["List[str]", 0.10739358242124111], ["cmk.utils.type_defs.UserId", 0.09235988234231042], ["Dict[str, str]", 0.09000841273840256]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[264, 4], [278, 54]], "fn_var_ln": {"awslogs": [[275, 8], [275, 15]]}, "fn_var_occur": {"awslogs": [["awslogs", "self", "batch_client", "get_job_awslogs_info", "JOB_ID"], ["awslogs", "LOG_STREAM_NAME"], ["awslogs", "AWS_REGION"]]}, "name": "test_job_awslogs_default", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["self", "client_mock", "meta", "client", "meta", "region_name", "AWS_REGION"], ["awslogs", "self", "batch_client", "get_job_awslogs_info", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_job_awslogs_default", "ret_exprs": [], "ret_type": "", "variables": {"awslogs": ""}, "variables_p": {"awslogs": [["str", 0.21756922325458228], ["int", 0.11258166241216534], ["bool", 0.10153498377899174], ["List[Dict[str, Any]]", 0.09259247361466323]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[280, 4], [301, 60]], "fn_var_ln": {"awslogs": [[298, 8], [298, 15]]}, "fn_var_occur": {"awslogs": [["awslogs", "self", "batch_client", "get_job_awslogs_info", "JOB_ID"], ["awslogs", "LOG_STREAM_NAME"]]}, "name": "test_job_awslogs_user_defined", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["awslogs", "self", "batch_client", "get_job_awslogs_info", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_job_awslogs_user_defined", "ret_exprs": [], "ret_type": "", "variables": {"awslogs": ""}, "variables_p": {"awslogs": [["str", 0.2168171040921154], ["dict", 0.09047506272515408]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[303, 4], [316, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_job_no_awslogs_stream", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "WARNING"], ["len", "caplog", "records"], ["caplog", "messages"]], "self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "get_job_awslogs_info", "JOB_ID", "None"]]}, "params_p": {"args": [], "caplog": [["str", 0.10039304118103422], ["int", 0.0937747641578185], ["antidote.providers.tag.TagProvider", 0.09260804833519945]], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_job_no_awslogs_stream", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[318, 4], [325, 36]], "fn_var_ln": {"msg": [[324, 8], [324, 11]]}, "fn_var_occur": {"msg": [["msg", "str", "ctx", "value"]]}, "name": "test_job_not_recognized_job", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "get_job_awslogs_info", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_job_not_recognized_job", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["str", 0.5054341699567063], ["int", 0.10745465942185842], ["Dict[str, Any]", 0.09874658682322081], ["bool", 0.08784564174274866]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[327, 4], [344, 101]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_job_splunk_logs", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "WARNING"], ["len", "caplog", "records"], ["caplog", "messages"]], "self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["self", "batch_client", "get_job_awslogs_info", "JOB_ID", "None"]]}, "params_p": {"args": [], "caplog": [["str", 0.10134398700307815], ["antidote.providers.tag.TagProvider", 0.09166305261864817], ["int", 0.09144131955872867]], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_job_splunk_logs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[346, 4], [403, 41]], "fn_var_ln": {"awslogs": [[387, 8], [387, 15]], "combinations": [[391, 8], [391, 20]]}, "fn_var_occur": {"awslogs": [["awslogs", "self", "batch_client", "get_job_all_awslogs_info", "JOB_ID"], ["len", "awslogs"], ["all", "log", "AWS_REGION", "log", "awslogs"]], "combinations": [["combinations", "False", "False", "False", "False"], ["combinations", "log_info", "log_info", "True"], ["len", "combinations"], ["all", "combinations", "values"]]}, "name": "test_job_awslogs_multinode_job", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "AWS_REGION", "AWS_REGION"], ["awslogs", "self", "batch_client", "get_job_all_awslogs_info", "JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClient.test_job_awslogs_multinode_job", "ret_exprs": [], "ret_type": "", "variables": {"awslogs": "", "combinations": ""}, "variables_p": {"awslogs": [["int", 0.30203302982750235], ["Dict[str, str]", 0.11426913198186382], ["List[str]", 0.10645867176297702], ["bytes", 0.1021493906785628], ["str", 0.08847482539443231]], "combinations": [["int", 0.2813240467863356], ["Dict[str, str]", 0.10489467673204245], ["Tuple[str, str, str, str, str, str]", 0.09944764799333843], ["Pattern[str]", 0.09188766506612313], ["str", 0.08637827080053233]]}}], "name": "TestBatchClient", "q_name": "TestBatchClient", "variables": {"MAX_RETRIES": "", "STATUS_RETRIES": ""}, "variables_p": {"MAX_RETRIES": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "STATUS_RETRIES": [["str", 0.4], ["int", 0.1]]}}, {"cls_lc": [[406, 0], [481, 30]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[410, 4], [414, 57]], "fn_var_ln": {"batch_client": [[411, 8], [411, 25]]}, "fn_var_occur": {"batch_client": [["self", "batch_client", "BatchClientHook", "aws_conn_id", "region_name", "AWS_REGION"], ["self", "batch_client", "get_connection", "_", "None"]]}, "name": "setup_method", "params": {"method": "", "self": ""}, "params_descr": {"method": "", "self": ""}, "params_occur": {"method": [], "self": [["self", "batch_client", "BatchClientHook", "aws_conn_id", "region_name", "AWS_REGION"], ["self", "batch_client", "get_connection", "_", "None"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.43170161069000196], ["dict", 0.19965377379201232], ["Iterable[str]", 0.16899084172597337], ["tuple", 0.08464006255844603]], "self": []}, "q_name": "TestBatchClientDelays.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"batch_client": ""}, "variables_p": {"batch_client": [["str", 0.42126386682874617], ["dict", 0.09589443248236293], ["Dict[str, Any]", 0.09072018829483856], ["Dict[str, str]", 0.08708330362964192]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[416, 4], [420, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "batch_client", "max_retries", "self", "batch_client", "MAX_RETRIES"], ["self", "batch_client", "status_retries", "self", "batch_client", "STATUS_RETRIES"], ["self", "batch_client", "region_name", "AWS_REGION"], ["self", "batch_client", "aws_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClientDelays.test_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[422, 4], [427, 30]], "fn_var_ln": {"minima": [[423, 8], [423, 14]], "result": [[425, 8], [425, 14]], "width": [[424, 8], [424, 13]]}, "fn_var_occur": {"minima": [["result", "self", "batch_client", "add_jitter", "width", "width", "minima", "minima"], ["result", "minima"]], "result": [["result", "self", "batch_client", "add_jitter", "width", "width", "minima", "minima"], ["result", "minima"], ["result", "width"]], "width": [["result", "self", "batch_client", "add_jitter", "width", "width", "minima", "minima"], ["result", "width"]]}, "name": "test_add_jitter", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["result", "self", "batch_client", "add_jitter", "width", "width", "minima", "minima"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBatchClientDelays.test_add_jitter", "ret_exprs": [], "ret_type": "", "variables": {"minima": "", "result": "", "width": ""}, "variables_p": {"minima": [["int", 0.5053027836011091], ["Dict[int, int]", 0.08831372790906893]], "result": [["int", 0.33628004502142855], ["list", 0.13694212198343506], ["Dict[str, Any]", 0.10063782926700342], ["str", 0.0833181192379834], ["List[float]", 0.08126382944630317]], "width": [["int", 0.8925410574488288], ["str", 0.10745894255117108]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[431, 4], [439, 45]], "fn_var_ln": {"return_value": [[434, 8], [434, 33]]}, "fn_var_occur": {"return_value": [["mock_uniform", "return_value"]]}, "name": "test_delay_defaults", "params": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_descr": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_occur": {"mock_sleep": [["mock_sleep", "assert_called_once_with"]], "mock_uniform": [["mock_uniform", "return_value"], ["mock_uniform", "assert_called_once_with", "BatchClientHook", "DEFAULT_DELAY_MIN", "BatchClientHook", "DEFAULT_DELAY_MAX"]], "self": [["self", "batch_client", "delay"]]}, "params_p": {"args": [], "kwargs": [], "mock_sleep": [], "mock_uniform": [], "self": []}, "q_name": "TestBatchClientDelays.test_delay_defaults", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["Set[str]", 0.31968019372842504], ["str", 0.28974495331495453], ["list", 0.1978080233656786], ["int", 0.09819123429613609], ["List[str]", 0.09457559529480569]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[443, 4], [446, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delay_with_zero", "params": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_descr": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_occur": {"mock_sleep": [["mock_sleep", "assert_called_once_with", "mock_uniform", "return_value"]], "mock_uniform": [["mock_uniform", "assert_called_once_with"], ["mock_sleep", "assert_called_once_with", "mock_uniform", "return_value"]], "self": [["self", "batch_client", "delay"]]}, "params_p": {"args": [], "kwargs": [], "mock_sleep": [], "mock_uniform": [], "self": []}, "q_name": "TestBatchClientDelays.test_delay_with_zero", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[450, 4], [453, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delay_with_int", "params": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_descr": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_occur": {"mock_sleep": [["mock_sleep", "assert_called_once_with", "mock_uniform", "return_value"]], "mock_uniform": [["mock_uniform", "assert_called_once_with"], ["mock_sleep", "assert_called_once_with", "mock_uniform", "return_value"]], "self": [["self", "batch_client", "delay"]]}, "params_p": {"args": [], "kwargs": [], "mock_sleep": [], "mock_uniform": [], "self": []}, "q_name": "TestBatchClientDelays.test_delay_with_int", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[457, 4], [460, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delay_with_float", "params": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_descr": {"mock_sleep": "", "mock_uniform": "", "self": ""}, "params_occur": {"mock_sleep": [["mock_sleep", "assert_called_once_with", "mock_uniform", "return_value"]], "mock_uniform": [["mock_uniform", "assert_called_once_with"], ["mock_sleep", "assert_called_once_with", "mock_uniform", "return_value"]], "self": [["self", "batch_client", "delay"]]}, "params_p": {"args": [], "kwargs": [], "mock_sleep": [], "mock_uniform": [], "self": []}, "q_name": "TestBatchClientDelays.test_delay_with_float", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[478, 4], [481, 30]], "fn_var_ln": {"result": [[479, 8], [479, 14]]}, "fn_var_occur": {"result": [["result", "self", "batch_client", "exponential_delay", "tries"], ["result", "lower"], ["result", "upper"]]}, "name": "test_exponential_delay", "params": {"lower": "", "self": "", "tries": "", "upper": ""}, "params_descr": {"lower": "", "self": "", "tries": "", "upper": ""}, "params_occur": {"lower": [["result", "lower"]], "self": [["result", "self", "batch_client", "exponential_delay", "tries"]], "tries": [["result", "self", "batch_client", "exponential_delay", "tries"]], "upper": [["result", "upper"]]}, "params_p": {"args": [], "kwargs": [], "lower": [["Union[int, slice]", 0.07018944503318282]], "self": [], "tries": [], "upper": [["Union[int, slice]", 0.07018944503318282]]}, "q_name": "TestBatchClientDelays.test_exponential_delay", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["list", 0.18934029392164065], ["List[Union[Any, Any, Any, Any]]", 0.09047378087667587]]}}], "name": "TestBatchClientDelays", "q_name": "TestBatchClientDelays", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "logging", "time", "unittest", "mock", "botocore.exceptions", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "providers", "amazon", "aws", "hooks", "batch_client", "BatchClientHook", "airflow", "providers", "amazon", "aws", "utils", "task_log_fetcher", "AwsTaskLogFetcher"], "mod_var_ln": {"AWS_ACCESS_KEY_ID": [[33, 0], [33, 17]], "AWS_REGION": [[32, 0], [32, 10]], "AWS_SECRET_ACCESS_KEY": [[34, 0], [34, 21]], "JOB_ID": [[36, 0], [36, 6]], "LOG_STREAM_NAME": [[37, 0], [37, 15]]}, "mod_var_occur": {"AWS_ACCESS_KEY_ID": [], "AWS_REGION": [["self", "batch_client", "BatchClientHook", "max_retries", "self", "MAX_RETRIES", "status_retries", "self", "STATUS_RETRIES", "aws_conn_id", "region_name", "AWS_REGION"], ["self", "batch_client", "region_name", "AWS_REGION"], ["self", "get_client_type_mock", "assert_called_once_with", "region_name", "AWS_REGION"], ["self", "client_mock", "meta", "client", "meta", "region_name", "AWS_REGION"], ["awslogs", "AWS_REGION"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "AWS_REGION", "AWS_REGION"], ["all", "log", "AWS_REGION", "log", "awslogs"], ["self", "batch_client", "BatchClientHook", "aws_conn_id", "region_name", "AWS_REGION"], ["self", "batch_client", "region_name", "AWS_REGION"]], "AWS_SECRET_ACCESS_KEY": [], "JOB_ID": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["job_running", "assert_called_once_with", "JOB_ID", "None"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["job_complete", "assert_called_once_with", "JOB_ID", "None"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["job_running", "assert_called_once_with", "JOB_ID", "None"], ["self", "batch_client", "wait_for_job", "JOB_ID"], ["job_complete", "assert_called_once_with", "JOB_ID", "None"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "wait_for_job", "JOB_ID", "get_batch_log_fetcher", "mock_get_batch_log_fetcher"], ["mock_get_batch_log_fetcher", "assert_called_with", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "poll_for_job_running", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["msg", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_with", "jobs", "JOB_ID"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["msg", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_with", "jobs", "JOB_ID"], ["self", "batch_client", "poll_for_job_complete", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["status", "self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["msg", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["msg", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["msg", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "status"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["msg", "JOB_ID"], ["self", "batch_client", "check_job_success", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["msg", "JOB_ID"], ["response", "self", "batch_client", "terminate_job", "JOB_ID", "reason"], ["self", "client_mock", "terminate_job", "assert_called_once_with", "jobId", "JOB_ID", "reason", "reason"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["awslogs", "self", "batch_client", "get_job_awslogs_info", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["awslogs", "self", "batch_client", "get_job_awslogs_info", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "get_job_awslogs_info", "JOB_ID", "None"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID"], ["self", "batch_client", "get_job_awslogs_info", "JOB_ID"], ["self", "client_mock", "describe_jobs", "assert_called_once_with", "jobs", "JOB_ID"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["self", "batch_client", "get_job_awslogs_info", "JOB_ID", "None"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "AWS_REGION", "AWS_REGION"], ["awslogs", "self", "batch_client", "get_job_all_awslogs_info", "JOB_ID"]], "LOG_STREAM_NAME": [["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["awslogs", "LOG_STREAM_NAME"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"], ["awslogs", "LOG_STREAM_NAME"], ["self", "client_mock", "describe_jobs", "return_value", "JOB_ID", "LOG_STREAM_NAME"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 87}, "session_id": "8mhMtvX2il5b0NiAJi7aQ7KZ7AIBTvnR5TPO-MUCsqQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"AWS_ACCESS_KEY_ID": "", "AWS_REGION": "", "AWS_SECRET_ACCESS_KEY": "", "JOB_ID": "", "LOG_STREAM_NAME": ""}, "variables_p": {"AWS_ACCESS_KEY_ID": [["Optional[str]", 0.49999999999999994], ["str", 0.49999999999999994]], "AWS_REGION": [["int", 0.5249176691774382], ["str", 0.09102649189323103], ["raiden.utils.PaymentAmount", 0.08748717291250606]], "AWS_SECRET_ACCESS_KEY": [["str", 0.6], ["Optional[str]", 0.4]], "JOB_ID": [["str", 0.46955776219636175], ["bool", 0.09879726072223831], ["int", 0.08416688407895034]], "LOG_STREAM_NAME": [["str", 0.9999999999999999]]}}}