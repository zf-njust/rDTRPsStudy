{"error": null, "response": {"classes": [{"cls_lc": [[911, 8], [914, 34]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[913, 12], [914, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function", "params": {"bucket_name": "", "self": ""}, "params_descr": {"bucket_name": "", "self": ""}, "params_occur": {"bucket_name": [], "self": []}, "params_p": {"args": [], "bucket_name": [["str", 0.7777740788494913], ["List[str]", 0.14378746299300765], ["int", 0.07843845815750075]], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_provide_bucket_name.<locals>.FakeS3Hook.test_function", "ret_exprs": ["return bucket_name"], "ret_type": "", "ret_type_p": [["str", 0.5333015141773758], ["Mapping[str, Any]", 0.11316374781278636], ["List[str]", 0.09186162901528123], ["pathlib.Path", 0.08195338271730977]], "variables": {}, "variables_p": {}}], "name": "FakeS3Hook", "q_name": "TestAwsS3Hook.test_provide_bucket_name.<locals>.FakeS3Hook", "variables": {}, "variables_p": {}}, {"cls_lc": [[951, 8], [962, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[953, 12], [954, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function_with_wildcard_key", "params": {"bucket_name": "", "self": "", "wildcard_key": ""}, "params_descr": {"bucket_name": "", "self": "", "wildcard_key": ""}, "params_occur": {"bucket_name": [["bucket_name", "wildcard_key"]], "self": [], "wildcard_key": [["bucket_name", "wildcard_key"]]}, "params_p": {"args": [], "bucket_name": [["str", 0.8024753347063637]], "kwargs": [], "self": [], "wildcard_key": [["str", 0.8024753347063637]]}, "q_name": "TestAwsS3Hook.test_unify_bucket_name_and_key.<locals>.FakeS3Hook.test_function_with_wildcard_key", "ret_exprs": ["return bucket_name, wildcard_key"], "ret_type": "", "ret_type_p": [], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[957, 12], [958, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function_with_key", "params": {"bucket_name": "", "key": "", "self": ""}, "params_descr": {"bucket_name": "", "key": "", "self": ""}, "params_occur": {"bucket_name": [["bucket_name", "key"]], "key": [["bucket_name", "key"]], "self": []}, "params_p": {"args": [], "bucket_name": [["str", 0.2941384529108588], ["Optional[str]", 0.19554127953078426], ["Sequence[str]", 0.1099928477817297], ["Dict[str, Any]", 0.10366601163765235], ["List[str]", 0.1017684245128831], ["dict", 0.09465348481061928]], "key": [["str", 0.2941384529108588], ["Optional[str]", 0.19554127953078426], ["Sequence[str]", 0.1099928477817297], ["Dict[str, Any]", 0.10366601163765235], ["List[str]", 0.1017684245128831], ["dict", 0.09465348481061928]], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_unify_bucket_name_and_key.<locals>.FakeS3Hook.test_function_with_key", "ret_exprs": ["return bucket_name, key"], "ret_type": "", "ret_type_p": [["str", 0.43079574981833935], ["pathlib.Path", 0.12993955182649755], ["int", 0.08670141036928483]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[961, 12], [962, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_function_with_test_key", "params": {"bucket_name": "", "self": "", "test_key": ""}, "params_descr": {"bucket_name": "", "self": "", "test_key": ""}, "params_occur": {"bucket_name": [["bucket_name", "test_key"]], "self": [], "test_key": [["bucket_name", "test_key"]]}, "params_p": {"args": [], "bucket_name": [["str", 0.8854416364830554], ["Tuple[str]", 0.11455836351694458]], "kwargs": [], "self": [], "test_key": [["str", 0.8854416364830554], ["Tuple[str]", 0.11455836351694458]]}, "q_name": "TestAwsS3Hook.test_unify_bucket_name_and_key.<locals>.FakeS3Hook.test_function_with_test_key", "ret_exprs": ["return bucket_name, test_key"], "ret_type": "", "ret_type_p": [["pathlib.Path", 0.2998374278894385], ["str", 0.19960387419403886]], "variables": {}, "variables_p": {}}], "name": "FakeS3Hook", "q_name": "TestAwsS3Hook.test_unify_bucket_name_and_key.<locals>.FakeS3Hook", "variables": {}, "variables_p": {}}, {"cls_lc": [[59, 0], [1277, 61]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [63, 42]], "fn_var_ln": {"hook": [[62, 8], [62, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "get_conn", "None"]]}, "name": "test_get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.4976212663744458], ["libqtile.backend.x11.xcbq.Connection", 0.2859278177930226], ["Dict[str, Any]", 0.09620335295799923]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [67, 55]], "fn_var_ln": {"hook": [[66, 8], [66, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "transfer_config", "use_threads", "True"]]}, "name": "test_use_threads_default_value", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_use_threads_default_value", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["tbump.hooks.Hook", 0.19073352548851588], ["dict", 0.1478979470208841], ["str", 0.11205237469348657], ["bool", 0.11196659015985048], ["frozenset[str]", 0.08248593100708658]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [71, 56]], "fn_var_ln": {"hook": [[70, 8], [70, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook", "transfer_config_args", "False"], ["hook", "transfer_config", "use_threads", "False"]]}, "name": "test_use_threads_set_value", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_use_threads_set_value", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.34119074050955445], ["bool", 0.17553585603659994], ["int", 0.11697644870860033]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 4], [76, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_transfer_config_args_invalid", "params": {"self": "", "transfer_config_args": ""}, "params_descr": {"self": "", "transfer_config_args": ""}, "params_occur": {"self": [], "transfer_config_args": [["S3Hook", "transfer_config_args", "transfer_config_args"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "transfer_config_args": [["asyncpg.Connection", 0.19800022686901572]]}, "q_name": "TestAwsS3Hook.test_transfer_config_args_invalid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [80, 98]], "fn_var_ln": {"parsed": [[79, 8], [79, 14]]}, "fn_var_occur": {"parsed": [["parsed", "S3Hook", "parse_s3_url"]]}, "name": "test_parse_s3_url", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_parse_s3_url", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.287739042662443], ["Set[str]", 0.19799898889976406], ["List[str]", 0.09077268752540718]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [84, 98]], "fn_var_ln": {"parsed": [[83, 8], [83, 14]]}, "fn_var_occur": {"parsed": [["parsed", "S3Hook", "parse_s3_url"]]}, "name": "test_parse_s3_url_s3a_style", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_parse_s3_url_s3a_style", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.287739042662443], ["Set[str]", 0.19799898889976406], ["List[str]", 0.09077268752540718]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [88, 98]], "fn_var_ln": {"parsed": [[87, 8], [87, 14]]}, "fn_var_occur": {"parsed": [["parsed", "S3Hook", "parse_s3_url"]]}, "name": "test_parse_s3_url_s3n_style", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_parse_s3_url_s3n_style", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.287739042662443], ["Set[str]", 0.19799898889976406], ["List[str]", 0.09077268752540718]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 4], [92, 95]], "fn_var_ln": {"parsed": [[91, 8], [91, 14]]}, "fn_var_occur": {"parsed": [["parsed", "S3Hook", "parse_s3_url"]]}, "name": "test_parse_s3_url_path_style", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_parse_s3_url_path_style", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.287739042662443], ["Set[str]", 0.19799898889976406], ["List[str]", 0.09077268752540718]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [96, 95]], "fn_var_ln": {"parsed": [[95, 8], [95, 14]]}, "fn_var_occur": {"parsed": [["parsed", "S3Hook", "parse_s3_url"]]}, "name": "test_parse_s3_url_virtual_hosted_style", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_parse_s3_url_virtual_hosted_style", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.287739042662443], ["Set[str]", 0.19799898889976406], ["List[str]", 0.09077268752540718]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [107, 95]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_invalid_s3_url_virtual_hosted_style", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_parse_invalid_s3_url_virtual_hosted_style", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [111, 104]], "fn_var_ln": {"parsed": [[110, 8], [110, 14]]}, "fn_var_occur": {"parsed": [["parsed", "S3Hook", "parse_s3_url"]]}, "name": "test_parse_s3_object_directory", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_parse_s3_object_directory", "ret_exprs": [], "ret_type": "", "variables": {"parsed": ""}, "variables_p": {"parsed": [["str", 0.287739042662443], ["Set[str]", 0.19799898889976406], ["List[str]", 0.09077268752540718]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [116, 32]], "fn_var_ln": {"bucket": [[114, 8], [114, 14]], "key": [[114, 16], [114, 19]]}, "fn_var_occur": {"bucket": [["bucket", "key", "S3Hook", "get_s3_bucket_key", "None"]], "key": [["bucket", "key", "S3Hook", "get_s3_bucket_key", "None"]]}, "name": "test_get_s3_bucket_key_valid_full_s3_url", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_get_s3_bucket_key_valid_full_s3_url", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "key": ""}, "variables_p": {"bucket": [["str", 0.28754181126571504], ["bytes", 0.22412841409470952]], "key": [["str", 0.3304498862924351], ["int", 0.07786464924334825]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [121, 32]], "fn_var_ln": {"bucket": [[119, 8], [119, 14]], "key": [[119, 16], [119, 19]]}, "fn_var_occur": {"bucket": [["bucket", "key", "S3Hook", "get_s3_bucket_key"]], "key": [["bucket", "key", "S3Hook", "get_s3_bucket_key"]]}, "name": "test_get_s3_bucket_key_valid_bucket_and_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_get_s3_bucket_key_valid_bucket_and_key", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "key": ""}, "variables_p": {"bucket": [["str", 0.5865513647139831], ["float", 0.11549559254368588], ["Optional[str]", 0.10929422818063864], ["Tuple[Type[str], Type[bytes]]", 0.09536283144815365], ["boto.s3.buckeBucket", 0.09329598311353869]], "key": [["str", 0.588502079639727], ["bytes", 0.16915755540252664]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[123, 4], [125, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_s3_bucket_key_incompatible", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_get_s3_bucket_key_incompatible", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [130, 61]], "fn_var_ln": {"hook": [[128, 8], [128, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "check_for_bucket", "s3_bucket", "True"], ["hook", "check_for_bucket", "False"]]}, "name": "test_check_for_bucket", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "check_for_bucket", "s3_bucket", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 1.0]], "self": []}, "q_name": "TestAwsS3Hook.test_check_for_bucket", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.24715919073964407], ["Optional[List[str]]", 0.1387871922386688], ["Union[Literal, Literal]", 0.09540227985621176], ["Dict[str, Dict[str, Any]]", 0.08044496078029438], ["Dict[str, Any]", 0.07651763368695001], ["List[str]", 0.07511802489695317]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [135, 52]], "fn_var_ln": {"hook": [[134, 8], [134, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "get_bucket", "None"]]}, "name": "test_get_bucket", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_get_bucket", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[Tuple[str, int]]", 0.1784807120620357], ["str", 0.17606211663509888], ["raiden.utils.Address", 0.11509189958479146], ["List[str]", 0.10230583796971957], ["dict", 0.09114242660444115]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [141, 56]], "fn_var_ln": {"hook": [[139, 8], [139, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "get_bucket", "None"]]}, "name": "test_create_bucket_default_region", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_create_bucket_default_region", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["dict", 0.21002030490042312], ["raiden.utils.Address", 0.1242349497774853], ["Dict[str, Any]", 0.08539485975292757]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [154, 29]], "fn_var_ln": {"bucket": [[149, 8], [149, 14]], "hook": [[147, 8], [147, 12]], "region": [[151, 8], [151, 14]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket"], ["bucket", "None"], ["region", "bucket", "meta", "client", "get_bucket_location", "Bucket", "bucket", "name", "get"]], "hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name", "region_name"], ["bucket", "hook", "get_bucket"]], "region": [["region", "bucket", "meta", "client", "get_bucket_location", "Bucket", "bucket", "name", "get"], ["region", "None"]]}, "name": "test_create_bucket_us_standard_region", "params": {"monkeypatch": "", "self": ""}, "params_descr": {"monkeypatch": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "delenv", "raising", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [], "self": []}, "q_name": "TestAwsS3Hook.test_create_bucket_us_standard_region", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": "", "region": ""}, "variables_p": {"bucket": [["str", 0.5250927892059287]], "hook": [["str", 0.37483399947985674], ["dict", 0.2228888006449686], ["Set[str]", 0.07652013734231325], ["Union[Dict[str, Any], str]", 0.06785727135430793]], "region": [["Dict[str, str]", 0.2564505369602549], ["str", 0.16409806883835176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[157, 4], [163, 36]], "fn_var_ln": {"bucket": [[160, 8], [160, 14]], "hook": [[158, 8], [158, 12]], "region": [[162, 8], [162, 14]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket"], ["bucket", "None"], ["region", "bucket", "meta", "client", "get_bucket_location", "Bucket", "bucket", "name", "get"]], "hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name", "region_name"], ["bucket", "hook", "get_bucket"]], "region": [["region", "bucket", "meta", "client", "get_bucket_location", "Bucket", "bucket", "name", "get"]]}, "name": "test_create_bucket_other_region", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_create_bucket_other_region", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": "", "region": ""}, "variables_p": {"bucket": [["str", 0.5250927892059287]], "hook": [["str", 0.37483399947985674], ["dict", 0.2228888006449686], ["Set[str]", 0.07652013734231325], ["Union[Dict[str, Any], str]", 0.06785727135430793]], "region": [["str", 0.5907351041747925], ["Union[Literal, str]", 0.08890743280878147]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[167, 4], [184, 82]], "fn_var_ln": {"bucket": [[180, 12], [180, 18]], "bucket_name": [[178, 12], [178, 23]], "conn": [[168, 8], [168, 12]], "hook": [[177, 12], [177, 16]], "region": [[183, 12], [183, 18]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "bucket_name"], ["bucket", "None"], ["bucket", "name", "bucket_name"], ["region", "bucket", "meta", "client", "get_bucket_location", "Bucket", "bucket", "name", "get"]], "bucket_name": [["bucket_name", "region_name"], ["hook", "create_bucket", "bucket_name", "region_name", "region_name"], ["bucket", "hook", "get_bucket", "bucket_name"], ["bucket", "name", "bucket_name"]], "conn": [["conn", "Connection", "conn_id", "conn_type", "extra"], ["mock", "patch", "dict", "values", "conn", "conn_id", "upper", "conn", "get_uri"], ["hook", "S3Hook", "aws_conn_id", "conn", "conn_id"]], "hook": [["hook", "S3Hook", "aws_conn_id", "conn", "conn_id"], ["hook", "create_bucket", "bucket_name", "region_name", "region_name"], ["bucket", "hook", "get_bucket", "bucket_name"]], "region": [["region", "bucket", "meta", "client", "get_bucket_location", "Bucket", "bucket", "name", "get"], ["region", "region_name", "region_name", "None"]]}, "name": "test_create_bucket_regional_endpoint", "params": {"monkeypatch": "", "region_name": "", "self": ""}, "params_descr": {"monkeypatch": "", "region_name": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "delenv", "raising", "False"]], "region_name": [["bucket_name", "region_name"], ["hook", "create_bucket", "bucket_name", "region_name", "region_name"], ["region", "region_name", "region_name", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [["str", 0.09784876325498858], ["pathlib.Path", 0.0881545734314589]], "region_name": [["str", 0.7031850617734944], ["Optional[str]", 0.09833341927536417], ["List[Dict[str, Any]]", 0.09341040297150097]], "self": []}, "q_name": "TestAwsS3Hook.test_create_bucket_regional_endpoint", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "bucket_name": "", "conn": "", "hook": "", "region": ""}, "variables_p": {"bucket": [["str", 0.18126545265399258], ["Dict[str, Union[Any, Any, Any, Any]]", 0.12120161618263976]], "bucket_name": [["str", 0.25823947530532476], ["Dict[str, str]", 0.13802478150194786], ["set", 0.09113290745607305]], "conn": [["str", 0.30033672362845265], ["vjemmie.utils.voting.VotingSession", 0.13921141480985397], ["float", 0.08942894138648273], ["Dict[str, Any]", 0.08500734273670393]], "hook": [["str", 0.1757963144979613], ["List[int]", 0.15389048139435466], ["ide.pathx.Path", 0.10028916194744025], ["list", 0.0948617455768811], ["decksite.data.models.person.Person", 0.08185480191627588]], "region": [["Dict[str, str]", 0.2665561659829529], ["str", 0.2628717423879689]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[186, 4], [200, 54]], "fn_var_ln": {"conn": [[187, 8], [187, 12]], "error_message": [[195, 12], [195, 25]], "hook": [[194, 12], [194, 16]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_id", "conn_type", "extra"], ["mock", "patch", "dict", "values", "conn", "conn_id", "upper", "conn", "get_uri"], ["hook", "S3Hook", "aws_conn_id", "conn", "conn_id"]], "error_message": [["pytest", "raises", "AirflowException", "match", "error_message"]], "hook": [["hook", "S3Hook", "aws_conn_id", "conn", "conn_id"], ["hook", "create_bucket"]]}, "name": "test_create_bucket_no_region_regional_endpoint", "params": {"monkeypatch": "", "self": ""}, "params_descr": {"monkeypatch": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "delenv", "raising", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [], "self": []}, "q_name": "TestAwsS3Hook.test_create_bucket_no_region_regional_endpoint", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "error_message": "", "hook": ""}, "variables_p": {"conn": [["str", 0.30033672362845265], ["vjemmie.utils.voting.VotingSession", 0.13921141480985397], ["float", 0.08942894138648273], ["Dict[str, Any]", 0.08500734273670393]], "error_message": [["Pattern[str]", 1.0]], "hook": [["int", 0.5963226805098772], ["list", 0.19207676719672992], ["bool", 0.1314208768057424]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[202, 4], [209, 95]], "fn_var_ln": {"bucket": [[204, 8], [204, 14]], "hook": [[203, 8], [203, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "check_for_prefix", "bucket_name", "s3_bucket", "prefix", "delimiter", "True"], ["hook", "check_for_prefix", "bucket_name", "s3_bucket", "prefix", "delimiter", "False"]]}, "name": "test_check_for_prefix", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "check_for_prefix", "bucket_name", "s3_bucket", "prefix", "delimiter", "True"], ["hook", "check_for_prefix", "bucket_name", "s3_bucket", "prefix", "delimiter", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5134145512669521], ["asyncpg.Connection", 0.09682819750041308]], "self": []}, "q_name": "TestAwsS3Hook.test_check_for_prefix", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.8917688933895557], ["Dict[str, Union[int, str]]", 0.1082311066104443]], "hook": [["Pattern[str]", 0.3774724052397386], ["str", 0.36488683074374695], ["list", 0.15314226592958285]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[211, 4], [223, 73]], "fn_var_ln": {"bucket": [[213, 8], [213, 14]], "hook": [[212, 8], [212, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"], ["bucket", "put_object", "Key", "Body"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "list_prefixes", "s3_bucket", "prefix"], ["hook", "list_prefixes", "s3_bucket"], ["hook", "list_prefixes", "s3_bucket", "delimiter"], ["hook", "list_prefixes", "s3_bucket", "prefix"], ["hook", "list_prefixes", "s3_bucket", "delimiter", "prefix"], ["hook", "list_prefixes", "s3_bucket", "prefix"]]}, "name": "test_list_prefixes", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "list_prefixes", "s3_bucket", "prefix"], ["hook", "list_prefixes", "s3_bucket"], ["hook", "list_prefixes", "s3_bucket", "delimiter"], ["hook", "list_prefixes", "s3_bucket", "prefix"], ["hook", "list_prefixes", "s3_bucket", "delimiter", "prefix"], ["hook", "list_prefixes", "s3_bucket", "prefix"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.594235887908893], ["Mapping[str, Any]", 0.19855809197001592], ["Optional[str]", 0.1054283780959179]], "self": []}, "q_name": "TestAwsS3Hook.test_list_prefixes", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.552291427583242], ["boto.s3.buckeBucket", 0.2863761088063463], ["Dict[str, Union[int, str]]", 0.08082265700190054]], "hook": [["str", 0.8674492830455314], ["list", 0.132550716954469]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[225, 4], [235, 96]], "fn_var_ln": {"bucket": [[227, 8], [227, 14]], "dirs": [[231, 8], [231, 12]], "hook": [[226, 8], [226, 12]], "keys": [[230, 8], [230, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "key", "Body"]], "dirs": [["dirs", "i", "i", "range"], ["sorted", "dirs", "sorted", "hook", "list_prefixes", "s3_bucket", "delimiter", "page_size"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["sorted", "dirs", "sorted", "hook", "list_prefixes", "s3_bucket", "delimiter", "page_size"]], "keys": [["keys", "i", "i", "range"]]}, "name": "test_list_prefixes_paged", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["sorted", "dirs", "sorted", "hook", "list_prefixes", "s3_bucket", "delimiter", "page_size"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.796282538977696], ["ocspdash.models.Authority", 0.10780990035441103]], "self": []}, "q_name": "TestAwsS3Hook.test_list_prefixes_paged", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "dirs": "", "hook": "", "keys": ""}, "variables_p": {"bucket": [["str", 0.9026017493113108], ["Tuple[str, str]", 0.09739825068868924]], "dirs": [["List[int]", 0.2738583521793638], ["int", 0.2634229158564475], ["Callable[[], bool]", 0.11179574867255383], ["Tuple[int, int, int]", 0.09051377331011996], ["list", 0.09042956286382473], ["float", 0.08684592214663928], ["str", 0.08313372497105087]], "hook": [["str", 0.7106578536920122], ["list", 0.08890591315706994]], "keys": [["str", 0.39583291944177057], ["List[str]", 0.3001254821477061], ["list", 0.2065941009656977], ["int", 0.09744749744482549]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[249, 8], [250, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dummy_object_filter", "params": {"from_datetime": "", "keys": "", "to_datetime": ""}, "params_descr": {"from_datetime": "", "keys": "", "to_datetime": ""}, "params_occur": {"from_datetime": [["from_datetime", "datetime"]], "keys": [], "to_datetime": [["to_datetime", "datetime"]]}, "params_p": {"args": [], "from_datetime": [["Optional[str]", 0.454252986239416], ["str", 0.3107648351498952], ["datetime.datetime", 0.23498217861068876]], "keys": [["str", 0.1945982006409277], ["int", 0.18109370224324678], ["bool", 0.1040513495193043]], "kwargs": [], "self": [], "to_datetime": [["Optional[str]", 0.454252986239416], ["str", 0.3107648351498952], ["datetime.datetime", 0.23498217861068876]]}, "q_name": "TestAwsS3Hook.test_list_keys.<locals>.dummy_object_filter", "ret_exprs": ["return []"], "ret_type": "", "ret_type_p": [["int", 0.5069774649665102], ["dict", 0.2888200503133614], ["Tuple[int, int, int, int]", 0.08449624416108503], ["Optional[BaseException]", 0.07562413265996547], ["str", 0.04408210789907799]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[237, 4], [266, 98]], "fn_var_ln": {"bucket": [[239, 8], [239, 14]], "from_datetime": [[246, 8], [246, 21]], "hook": [[238, 8], [238, 12]], "to_datetime": [[247, 8], [247, 19]]}, "fn_var_occur": {"bucket": [], "from_datetime": [["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime"], ["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime", "object_filter", "dummy_object_filter"]], "hook": [["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket"], ["hook", "list_keys", "s3_bucket", "delimiter"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "start_after_key"], ["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime"], ["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime", "object_filter", "dummy_object_filter"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "prefix", "apply_wildcard", "True"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "prefix", "apply_wildcard", "True"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "prefix", "apply_wildcard", "True"]], "to_datetime": [["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime"], ["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime", "object_filter", "dummy_object_filter"]]}, "name": "test_list_keys", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket"], ["hook", "list_keys", "s3_bucket", "delimiter"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "start_after_key"], ["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime"], ["hook", "list_keys", "s3_bucket", "from_datetime", "from_datetime", "to_datetime", "to_datetime", "object_filter", "dummy_object_filter"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "prefix", "apply_wildcard", "True"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "prefix", "apply_wildcard", "True"], ["hook", "list_keys", "s3_bucket", "prefix"], ["hook", "list_keys", "s3_bucket", "prefix", "apply_wildcard", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.9103910035503028], ["List[tracim.models.data.Content]", 0.0896089964496971]], "self": []}, "q_name": "TestAwsS3Hook.test_list_keys", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "from_datetime": "", "hook": "", "to_datetime": ""}, "variables_p": {"bucket": [["str", 0.7], ["Optional[str]", 0.09999999999999999], ["list", 0.09999999999999999]], "from_datetime": [["datetime.datetime.datetime", 0.4723913487403312], ["datetime.date", 0.30759149991850865], ["datetime.datetime", 0.22001715134116023]], "hook": [["str", 0.26479516056421115], ["List[str]", 0.1874877378473413], ["Dict[str, str]", 0.10582066144739267], ["Dict[str, float]", 0.10582066144739267]], "to_datetime": [["datetime.datetime.datetime", 0.5221243036231344], ["datetime.date", 0.2760130737587079], ["datetime.datetime", 0.10395516861468189], ["datetime.date.time.date", 0.09790745400347564]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[268, 4], [276, 92]], "fn_var_ln": {"bucket": [[270, 8], [270, 14]], "hook": [[269, 8], [269, 12]], "keys": [[272, 8], [272, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["sorted", "keys", "sorted", "hook", "list_keys", "s3_bucket", "delimiter", "page_size"]], "keys": [["keys", "str", "i", "i", "range"], ["sorted", "keys", "sorted", "hook", "list_keys", "s3_bucket", "delimiter", "page_size"]]}, "name": "test_list_keys_paged", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["sorted", "keys", "sorted", "hook", "list_keys", "s3_bucket", "delimiter", "page_size"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.4221333289394851], ["Dict[str, Any]", 0.13737084748717054], ["tracim.models.data.Content", 0.08244875394642044], ["Optional[str]", 0.08208126747474537]], "self": []}, "q_name": "TestAwsS3Hook.test_list_keys_paged", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": "", "keys": ""}, "variables_p": {"bucket": [["str", 0.9026017493113108], ["Tuple[str, str]", 0.09739825068868924]], "hook": [["str", 0.6149408659133224], ["List[str]", 0.12157377558131346], ["Union[Literal, Literal]", 0.0919196957788666], ["Pattern[str]", 0.08094627650792259]], "keys": [["str", 0.8100232567810434], ["list", 0.10047723512438929], ["List[str]", 0.0894995080945675]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[278, 4], [286, 63]], "fn_var_ln": {"bucket": [[280, 8], [280, 14]], "hook": [[279, 8], [279, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["len", "hook", "get_file_metadata", "s3_bucket"], ["hook", "get_file_metadata", "s3_bucket", "None"], ["len", "hook", "get_file_metadata", "s3_bucket"], ["len", "hook", "get_file_metadata", "s3_bucket"]]}, "name": "test_get_file_metadata", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["len", "hook", "get_file_metadata", "s3_bucket"], ["hook", "get_file_metadata", "s3_bucket", "None"], ["len", "hook", "get_file_metadata", "s3_bucket"], ["len", "hook", "get_file_metadata", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.32310293488949715], ["Dict[str, Any]", 0.19911523599302713], ["dict", 0.09366621513341458], ["Optional[str]", 0.09362952734446371]], "self": []}, "q_name": "TestAwsS3Hook.test_get_file_metadata", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.9157536518866547], ["Tuple[str, str]", 0.08424634811334537]], "hook": [["str", 0.37650613427265883], ["List[str]", 0.18864554652373752], ["Dict[str, Optional[str]]", 0.11307491719019905]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[288, 4], [296, 63]], "fn_var_ln": {"bucket": [[290, 8], [290, 14]], "hook": [[289, 8], [289, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "head_object", "s3_bucket", "None"], ["hook", "head_object", "s3_bucket", "None"], ["hook", "head_object", "s3_bucket", "None"], ["hook", "head_object", "s3_bucket", "None"]]}, "name": "test_head_object", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "head_object", "s3_bucket", "None"], ["hook", "head_object", "s3_bucket", "None"], ["hook", "head_object", "s3_bucket", "None"], ["hook", "head_object", "s3_bucket", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5585234197175937], ["cmk.utils.type_defs.CheckPluginName", 0.12710860197212334], ["Optional[str]", 0.12710860197212334], ["Dict[str, Any]", 0.10281297595985817], ["dict", 0.0844464003783014]], "self": []}, "q_name": "TestAwsS3Hook.test_head_object", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.9157536518866547], ["Tuple[str, str]", 0.08424634811334537]], "hook": [["str", 0.6195945487683195], ["List[str]", 0.19489433991336086], ["int", 0.0906261902124846]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[298, 4], [306, 66]], "fn_var_ln": {"bucket": [[300, 8], [300, 14]], "hook": [[299, 8], [299, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "check_for_key", "s3_bucket", "True"], ["hook", "check_for_key", "s3_bucket", "True"], ["hook", "check_for_key", "s3_bucket", "False"], ["hook", "check_for_key", "s3_bucket", "False"]]}, "name": "test_check_for_key", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "check_for_key", "s3_bucket", "True"], ["hook", "check_for_key", "s3_bucket", "True"], ["hook", "check_for_key", "s3_bucket", "False"], ["hook", "check_for_key", "s3_bucket", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.33876112394079866], ["dict", 0.2707673259498705], ["kitovu.utils.JsonType", 0.09427216127911543], ["bool", 0.09349563934663556], ["asyncpg.Connection", 0.09141652162801026]], "self": []}, "q_name": "TestAwsS3Hook.test_check_for_key", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.9157536518866547], ["Tuple[str, str]", 0.08424634811334537]], "hook": [["str", 0.4731665031221491], ["Dict[str, str]", 0.29270903490158107], ["List[str]", 0.1313689977245155], ["list", 0.1027554642517545]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[308, 4], [314, 61]], "fn_var_ln": {"bucket": [[310, 8], [310, 14]], "hook": [[309, 8], [309, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "get_key", "s3_bucket", "key"], ["hook", "get_key", "s3_bucket", "key"]]}, "name": "test_get_key", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "get_key", "s3_bucket", "key"], ["hook", "get_key", "s3_bucket", "key"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5546536345273099], ["Union[str, int]", 0.1739314698452112], ["Dict[str, Any]", 0.0923790674344725], ["Type['Declared']", 0.08816943822604967]], "self": []}, "q_name": "TestAwsS3Hook.test_get_key", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.9157536518866547], ["Tuple[str, str]", 0.08424634811334537]], "hook": [["str", 0.5161403609353172], ["Union[Literal, Literal]", 0.1790688350844863], ["List[str]", 0.12916579660662889], ["Dict[str, List[Any]]", 0.08614015985586375]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[316, 4], [321, 62]], "fn_var_ln": {"bucket": [[318, 8], [318, 14]], "hook": [[317, 8], [317, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "read_key", "s3_bucket"]]}, "name": "test_read_key", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "read_key", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.09190148089626038], ["Optional[List[str]]", 0.08794158817878986]], "self": []}, "q_name": "TestAwsS3Hook.test_read_key", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.9157536518866547], ["Tuple[str, str]", 0.08424634811334537]], "hook": [["str", 0.47495614483583476], ["Optional[str]", 0.08854769136317517]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[325, 4], [330, 64]], "fn_var_ln": {"hook": [[329, 8], [329, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "select_key", "s3_bucket"]]}, "name": "test_select_key", "params": {"mock_get_client_type": "", "s3_bucket": "", "self": ""}, "params_descr": {"mock_get_client_type": "", "s3_bucket": "", "self": ""}, "params_occur": {"mock_get_client_type": [["mock_get_client_type", "return_value", "select_object_content", "return_value"]], "s3_bucket": [["hook", "select_key", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_client_type": [["str", 0.5054812179986435], ["zerver.models.UserProfile", 0.204731858475938], ["zerver.models.Client", 0.10511109900549907], ["Mapping[str, Any]", 0.09962075947043894]], "s3_bucket": [["str", 0.6980156961378269], ["Optional[List[T]]", 0.09913331292973615]], "self": []}, "q_name": "TestAwsS3Hook.test_select_key", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.9159751539424188], ["List[str]", 0.08402484605758108]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[332, 4], [352, 105]], "fn_var_ln": {"bucket": [[334, 8], [334, 14]], "hook": [[333, 8], [333, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"], ["bucket", "put_object", "Key", "Body"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"]]}, "name": "test_check_for_wildcard_key", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "True"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "check_for_wildcard_key", "s3_bucket", "False"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5271275642237169], ["Dict[str, Any]", 0.09722518115573373], ["Optional[str]", 0.09678204873742441], ["Optional[Dict]", 0.09678204873742441], ["dict", 0.08508312450637769]], "self": []}, "q_name": "TestAwsS3Hook.test_check_for_wildcard_key", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.552291427583242], ["boto.s3.buckeBucket", 0.2863761088063463], ["Dict[str, Union[int, str]]", 0.08082265700190054]], "hook": [["str", 0.395616148869282], ["list", 0.21384517139010994], ["List[str]", 0.13008130339096072], ["Pattern[str]", 0.08581491045081391], ["dict", 0.08372302862868397]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[354, 4], [379, 105]], "fn_var_ln": {"bucket": [[356, 8], [356, 14]], "hook": [[355, 8], [355, 12]]}, "fn_var_occur": {"bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["bucket", "put_object", "Key", "Body"], ["bucket", "put_object", "Key", "Body"], ["bucket", "put_object", "Key", "Body"]], "hook": [["hook", "S3Hook"], ["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"]]}, "name": "test_get_wildcard_key", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["bucket", "hook", "get_bucket", "s3_bucket"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "None"], ["hook", "get_wildcard_key", "s3_bucket", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"], ["hook", "get_wildcard_key", "s3_bucket", "delimiter", "key"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.41684433858169223], ["Optional[str]", 0.09355474982393573]], "self": []}, "q_name": "TestAwsS3Hook.test_get_wildcard_key", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "hook": ""}, "variables_p": {"bucket": [["str", 0.552291427583242], ["boto.s3.buckeBucket", 0.2863761088063463], ["Dict[str, Union[int, str]]", 0.08082265700190054]], "hook": [["str", 0.5049400394708055], ["List[str]", 0.23489642368923294], ["Union[Literal, Literal]", 0.08786657268662273], ["Dict[str, List[Any]]", 0.0873541338220191], ["list", 0.08494283033131966]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[381, 4], [385, 65]], "fn_var_ln": {"hook": [[382, 8], [382, 12]], "resource": [[384, 8], [384, 16]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_string", "s3_bucket"]], "resource": [["resource", "boto3", "resource", "Object", "s3_bucket"], ["resource", "get", "read"]]}, "name": "test_load_string", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_string", "s3_bucket"], ["resource", "boto3", "resource", "Object", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.3116547575039177], ["Optional[str]", 0.18160665101222506], ["Union[str, int]", 0.10587620370650054], ["nevergrad.common.Union[str, pathlib.Path]", 0.09740038523718716], ["int", 0.09675556290919962]], "self": []}, "q_name": "TestAwsS3Hook.test_load_string", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "resource": ""}, "variables_p": {"hook": [["List[Dict[str, Any]]", 0.11199398632006342], ["int", 0.07752431927248983], ["Set[str]", 0.0773183559622019], ["Dict[str, Dict[str, str]]", 0.0697431700498091], ["List[str]", 0.06801198482636674]], "resource": [["str", 0.9060119960084667], ["dict", 0.09398800399153344]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[387, 4], [392, 40]], "fn_var_ln": {"data": [[391, 8], [391, 12]], "hook": [[388, 8], [388, 12]], "resource": [[390, 8], [390, 16]]}, "fn_var_occur": {"data": [["data", "gz", "decompress", "resource", "get", "read"]], "hook": [["hook", "S3Hook"], ["hook", "load_string", "s3_bucket", "compression"]], "resource": [["resource", "boto3", "resource", "Object", "s3_bucket"], ["data", "gz", "decompress", "resource", "get", "read"]]}, "name": "test_load_string_compress", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_string", "s3_bucket", "compression"], ["resource", "boto3", "resource", "Object", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.8147127917659022], ["Callable", 0.09575918980809903]], "self": []}, "q_name": "TestAwsS3Hook.test_load_string_compress", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "hook": "", "resource": ""}, "variables_p": {"data": [["dict", 0.42932051447151165], ["Dict[str, str]", 0.1023108956136188], ["kitovu.utils.JsonType", 0.09372033673964182], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08807161120789238], ["bytes", 0.08615674171545827]], "hook": [["str", 0.8973551508909059], ["Dict[str, str]", 0.10264484910909423]], "resource": [["str", 0.2899672110435219], ["Dict[str, str]", 0.2326852012723325], ["BinaryIO", 0.12359021208174395], ["Dict[str, float]", 0.11614289702847326], ["Dict[str, Type[Any]]", 0.079543360797533]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[394, 4], [397, 91]], "fn_var_ln": {"hook": [[395, 8], [395, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_string", "s3_bucket", "compression"]]}, "name": "test_load_string_compress_exception", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_string", "s3_bucket", "compression"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.8736997059397131], ["adam.visualization.utils.Shape", 0.1263002940602868]], "self": []}, "q_name": "TestAwsS3Hook.test_load_string_compress_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.8973551508909059], ["Dict[str, str]", 0.10264484910909423]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[399, 4], [405, 9]], "fn_var_ln": {"hook": [[400, 8], [400, 12]], "response": [[402, 8], [402, 16]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_string", "s3_bucket", "acl_policy"]], "response": [["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"], ["response", "response"]]}, "name": "test_load_string_acl", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_string", "s3_bucket", "acl_policy"], ["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.8036059204632686], ["Dict[str, Any]", 0.10132401881721192], ["dict", 0.09507006071951946]], "self": []}, "q_name": "TestAwsS3Hook.test_load_string_acl", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": ""}, "variables_p": {"hook": [["str", 0.8973551508909059], ["Dict[str, str]", 0.10264484910909423]], "response": [["Dict[str, str]", 0.5141341155727281], ["Optional[str]", 0.10497043724680022], ["str", 0.0881535035806751]]}}, {"docstring": {"func": "Test check_wildcard_key for a valid response", "long_descr": null, "ret": ""}, "fn_lc": [[409, 4], [433, 9]], "fn_var_ln": {"get_paginator": [[428, 8], [428, 33]], "mock_paginate": [[423, 8], [423, 21]], "mock_paginator": [[422, 8], [422, 22]], "s3_hook_async": [[427, 8], [427, 21]], "task": [[429, 8], [429, 12]], "test_resp_iter": [[414, 8], [414, 22]]}, "fn_var_occur": {"get_paginator": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "mock_paginate": [["mock_paginate", "mock", "MagicMock"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"], ["mock_paginator", "paginate", "return_value", "mock_paginate"]], "mock_paginator": [["mock_paginator", "mock", "Mock"], ["mock_paginator", "paginate", "return_value", "mock_paginate"], ["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type"], ["task", "s3_hook_async", "get_file_metadata_async", "mock_client"]], "task": [["task", "s3_hook_async", "get_file_metadata_async", "mock_client"], ["task", "datetime", "datetime"]], "test_resp_iter": [["test_resp_iter", "datetime", "datetime"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"]]}, "name": "test_s3_key_hook_get_file_metadata_async", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"], ["task", "s3_hook_async", "get_file_metadata_async", "mock_client"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.9213722616802141]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_get_file_metadata_async", "ret_exprs": [], "ret_type": "", "variables": {"get_paginator": "", "mock_paginate": "", "mock_paginator": "", "s3_hook_async": "", "task": "", "test_resp_iter": ""}, "variables_p": {"get_paginator": [["unittesmock.Mock", 0.2240153979609638], ["datetime.datetime.datetime", 0.11991300400449108], ["Dict[str, Any]", 0.10836490740854557], ["unittesmock.MagicMock", 0.1083142783846958], ["mock.Mock", 0.10281036218844958], ["Dict[str, Union[Any, Any, Any]]", 0.08728712818765913], ["Callable", 0.0855236241501032], ["List[int]", 0.08299421098686854], ["str", 0.08077708672822315]], "mock_paginate": [["mock.MagicMock", 1.0]], "mock_paginator": [["unittesmock.Mock", 0.4703320228869333], ["Dict[str, Tuple[str, Any]]", 0.20032631589165745], ["datetime.datetime.datetime", 0.1264306434757912], ["mock.Mock", 0.10248291927647091], ["Mock", 0.1004280984691473]], "s3_hook_async": [["str", 0.39122496088515546], ["Dict[str, int]", 0.1003514961570062]], "task": [["List[str]", 0.10769630186623352], ["cmk.utils.type_defs.UserId", 0.09868364907180802], ["Dict[str, str]", 0.09466345702490499], ["Dict[str, Any]", 0.08587133587852831]], "test_resp_iter": [["list", 0.20641710862772028], ["datetime.date.time.timedelta", 0.17407180718837093], ["float", 0.11155898372013073], ["Optional[datetime.tzinfo]", 0.08726566442820556], ["Dict[str, Optional[float]]", 0.083713104853908]]}}, {"docstring": {"func": "Test for 404 error if key not found and assert based on response.", "long_descr": null, "ret": ""}, "fn_lc": [[437, 4], [463, 31]], "fn_var_ln": {"response": [[460, 8], [460, 16]], "s3_hook_async": [[442, 8], [442, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "get_head_object_async", "mock_client"], ["response", "None"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "get_head_object_async", "mock_client"]]}, "name": "test_s3_key_hook_get_head_object_with_error_async", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "head_object", "side_effect", "ClientError", "operation_name"], ["response", "s3_hook_async", "get_head_object_async", "mock_client"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.Mock", 0.4587933646578779], ["unittesmock.MagicMock", 0.08736062959634919]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_get_head_object_with_error_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "s3_hook_async": ""}, "variables_p": {"response": [["Dict[str, Dict[str, Any]]", 0.10495522295445356]], "s3_hook_async": [["str", 0.7360749644045085], ["Dict[str, str]", 0.09634534984365344], ["int", 0.08372873302568618]]}}, {"docstring": {"func": "Test for 500 error if key not found and assert based on response.", "long_descr": null, "ret": ""}, "fn_lc": [[468, 4], [495, 44]], "fn_var_ln": {"response": [[492, 12], [492, 20]], "s3_hook_async": [[473, 8], [473, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "get_head_object_async", "mock_client"], ["isinstance", "response", "err"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "get_head_object_async", "mock_client"]]}, "name": "test_s3_key_hook_get_head_object_raise_exception_async", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "head_object", "side_effect", "ClientError", "operation_name"], ["response", "s3_hook_async", "get_head_object_async", "mock_client"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.Mock", 0.5066883191461047], ["unittesmock.MagicMock", 0.08720813184288752]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_get_head_object_raise_exception_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "s3_hook_async": ""}, "variables_p": {"response": [["Pattern[str]", 0.09796315806975847], ["Dict[str, Dict[str, Any]]", 0.09072482580153257]], "s3_hook_async": [["str", 0.7360749644045085], ["Dict[str, str]", 0.09634534984365344], ["int", 0.08372873302568618]]}}, {"docstring": {"func": "Test get_files for a valid response", "long_descr": null, "ret": ""}, "fn_lc": [[499, 4], [520, 29]], "fn_var_ln": {"get_paginator": [[518, 8], [518, 33]], "mock_paginate": [[513, 8], [513, 21]], "mock_paginator": [[512, 8], [512, 22]], "response": [[519, 8], [519, 16]], "s3_hook_async": [[517, 8], [517, 21]], "test_resp_iter": [[504, 8], [504, 22]]}, "fn_var_occur": {"get_paginator": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "mock_paginate": [["mock_paginate", "mock", "MagicMock"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"], ["mock_paginator", "paginate", "return_value", "mock_paginate"]], "mock_paginator": [["mock_paginator", "mock", "Mock"], ["mock_paginator", "paginate", "return_value", "mock_paginate"], ["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "response": [["response", "s3_hook_async", "get_files_async", "mock_client", "False"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "get_files_async", "mock_client", "False"]], "test_resp_iter": [["test_resp_iter", "datetime", "datetime"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"]]}, "name": "test_s3_key_hook_get_files_without_wildcard_async", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"], ["response", "s3_hook_async", "get_files_async", "mock_client", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.834875223133693], ["unittesmock.Mock", 0.07697526625257102]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_get_files_without_wildcard_async", "ret_exprs": [], "ret_type": "", "variables": {"get_paginator": "", "mock_paginate": "", "mock_paginator": "", "response": "", "s3_hook_async": "", "test_resp_iter": ""}, "variables_p": {"get_paginator": [["unittesmock.Mock", 0.2240153979609638], ["datetime.datetime.datetime", 0.11991300400449108], ["Dict[str, Any]", 0.10836490740854557], ["unittesmock.MagicMock", 0.1083142783846958], ["mock.Mock", 0.10281036218844958], ["Dict[str, Union[Any, Any, Any]]", 0.08728712818765913], ["Callable", 0.0855236241501032], ["List[int]", 0.08299421098686854], ["str", 0.08077708672822315]], "mock_paginate": [["mock.MagicMock", 1.0]], "mock_paginator": [["unittesmock.Mock", 0.4703320228869333], ["Dict[str, Tuple[str, Any]]", 0.20032631589165745], ["datetime.datetime.datetime", 0.1264306434757912], ["mock.Mock", 0.10248291927647091], ["Mock", 0.1004280984691473]], "response": [["str", 0.6116970744796861]], "s3_hook_async": [["str", 0.5074408938017348], ["int", 0.08978688215544117]], "test_resp_iter": [["list", 0.20641710862772028], ["datetime.date.time.timedelta", 0.17407180718837093], ["float", 0.11155898372013073], ["Optional[datetime.tzinfo]", 0.08726566442820556], ["Dict[str, Optional[float]]", 0.083713104853908]]}}, {"docstring": {"func": "Test get_files for a valid response", "long_descr": null, "ret": ""}, "fn_lc": [[524, 4], [545, 29]], "fn_var_ln": {"get_paginator": [[543, 8], [543, 33]], "mock_paginate": [[538, 8], [538, 21]], "mock_paginator": [[537, 8], [537, 22]], "response": [[544, 8], [544, 16]], "s3_hook_async": [[542, 8], [542, 21]], "test_resp_iter": [[529, 8], [529, 22]]}, "fn_var_occur": {"get_paginator": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "mock_paginate": [["mock_paginate", "mock", "MagicMock"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"], ["mock_paginator", "paginate", "return_value", "mock_paginate"]], "mock_paginator": [["mock_paginator", "mock", "Mock"], ["mock_paginator", "paginate", "return_value", "mock_paginate"], ["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "response": [["response", "s3_hook_async", "get_files_async", "mock_client", "True"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "get_files_async", "mock_client", "True"]], "test_resp_iter": [["test_resp_iter", "datetime", "datetime"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"]]}, "name": "test_s3_key_hook_get_files_with_wildcard_async", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"], ["response", "s3_hook_async", "get_files_async", "mock_client", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.7440579914863694]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_get_files_with_wildcard_async", "ret_exprs": [], "ret_type": "", "variables": {"get_paginator": "", "mock_paginate": "", "mock_paginator": "", "response": "", "s3_hook_async": "", "test_resp_iter": ""}, "variables_p": {"get_paginator": [["unittesmock.Mock", 0.2240153979609638], ["datetime.datetime.datetime", 0.11991300400449108], ["Dict[str, Any]", 0.10836490740854557], ["unittesmock.MagicMock", 0.1083142783846958], ["mock.Mock", 0.10281036218844958], ["Dict[str, Union[Any, Any, Any]]", 0.08728712818765913], ["Callable", 0.0855236241501032], ["List[int]", 0.08299421098686854], ["str", 0.08077708672822315]], "mock_paginate": [["mock.MagicMock", 1.0]], "mock_paginator": [["unittesmock.Mock", 0.4703320228869333], ["Dict[str, Tuple[str, Any]]", 0.20032631589165745], ["datetime.datetime.datetime", 0.1264306434757912], ["mock.Mock", 0.10248291927647091], ["Mock", 0.1004280984691473]], "response": [["str", 0.6101062698934712], ["Dict[int, str]", 0.12077699480920362], ["Dict[str, str]", 0.08709061248361749], ["int", 0.08378572735104091]], "s3_hook_async": [["str", 0.7030458766727242], ["Dict[str, Any]", 0.09160814642471626], ["int", 0.09116811358794805]], "test_resp_iter": [["list", 0.20641710862772028], ["datetime.date.time.timedelta", 0.17407180718837093], ["float", 0.11155898372013073], ["Optional[datetime.tzinfo]", 0.08726566442820556], ["Dict[str, Optional[float]]", 0.083713104853908]]}}, {"docstring": {"func": "Test _list_keys for a valid response", "long_descr": null, "ret": ""}, "fn_lc": [[549, 4], [570, 52]], "fn_var_ln": {"get_paginator": [[568, 8], [568, 33]], "mock_paginate": [[563, 8], [563, 21]], "mock_paginator": [[562, 8], [562, 22]], "response": [[569, 8], [569, 16]], "s3_hook_async": [[567, 8], [567, 21]], "test_resp_iter": [[554, 8], [554, 22]]}, "fn_var_occur": {"get_paginator": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "mock_paginate": [["mock_paginate", "mock", "MagicMock"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"], ["mock_paginator", "paginate", "return_value", "mock_paginate"]], "mock_paginator": [["mock_paginator", "mock", "Mock"], ["mock_paginator", "paginate", "return_value", "mock_paginate"], ["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "response": [["response", "s3_hook_async", "_list_keys_async", "mock_client"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "_list_keys_async", "mock_client"]], "test_resp_iter": [["test_resp_iter", "datetime", "datetime"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"]]}, "name": "test_s3_key_hook_list_keys_async", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"], ["response", "s3_hook_async", "_list_keys_async", "mock_client"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.7047507333219346], ["unittesmock.Mock", 0.09880406642615577]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_list_keys_async", "ret_exprs": [], "ret_type": "", "variables": {"get_paginator": "", "mock_paginate": "", "mock_paginator": "", "response": "", "s3_hook_async": "", "test_resp_iter": ""}, "variables_p": {"get_paginator": [["unittesmock.Mock", 0.2240153979609638], ["datetime.datetime.datetime", 0.11991300400449108], ["Dict[str, Any]", 0.10836490740854557], ["unittesmock.MagicMock", 0.1083142783846958], ["mock.Mock", 0.10281036218844958], ["Dict[str, Union[Any, Any, Any]]", 0.08728712818765913], ["Callable", 0.0855236241501032], ["List[int]", 0.08299421098686854], ["str", 0.08077708672822315]], "mock_paginate": [["mock.MagicMock", 1.0]], "mock_paginator": [["unittesmock.Mock", 0.4703320228869333], ["Dict[str, Tuple[str, Any]]", 0.20032631589165745], ["datetime.datetime.datetime", 0.1264306434757912], ["mock.Mock", 0.10248291927647091], ["Mock", 0.1004280984691473]], "response": [["int", 0.46629697183908486], ["list", 0.17082869401391326], ["List[str]", 0.16304989123832067], ["List[Dict[str, Any]]", 0.12001587070813288], ["Dict[str, Union[Any, Any]]", 0.07980857220054825]], "s3_hook_async": [["str", 0.729714558058796], ["Dict[str, str]", 0.1817678608314232]], "test_resp_iter": [["list", 0.20641710862772028], ["datetime.date.time.timedelta", 0.17407180718837093], ["float", 0.11155898372013073], ["Optional[datetime.tzinfo]", 0.08726566442820556], ["Dict[str, Optional[float]]", 0.083713104853908]]}}, {"docstring": {"func": "Test list_prefixes whether it returns a valid response", "long_descr": null, "ret": null}, "fn_lc": [[580, 4], [597, 47]], "fn_var_ln": {"actual_output": [[595, 8], [595, 21]], "expected_output": [[596, 8], [596, 23]], "get_paginator": [[593, 8], [593, 33]], "mock_paginate": [[588, 8], [588, 21]], "mock_paginator": [[587, 8], [587, 22]], "s3_hook_async": [[592, 8], [592, 21]], "test_resp_iter": [[586, 8], [586, 22]]}, "fn_var_occur": {"actual_output": [["actual_output", "s3_hook_async", "list_prefixes_async", "mock_client"], ["expected_output", "actual_output"]], "expected_output": [["expected_output", "test_first_prefix", "test_second_prefix"], ["expected_output", "actual_output"]], "get_paginator": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "mock_paginate": [["mock_paginate", "mock", "MagicMock"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"], ["mock_paginator", "paginate", "return_value", "mock_paginate"]], "mock_paginator": [["mock_paginator", "mock", "Mock"], ["mock_paginator", "paginate", "return_value", "mock_paginate"], ["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["actual_output", "s3_hook_async", "list_prefixes_async", "mock_client"]], "test_resp_iter": [["test_resp_iter", "test_first_prefix", "test_second_prefix"], ["mock_paginate", "__aiter__", "return_value", "test_resp_iter"]]}, "name": "test_s3_prefix_sensor_hook_list_prefixes_async", "params": {"mock_client": "", "self": "", "test_first_prefix": "", "test_second_prefix": ""}, "params_descr": {"mock_client": "", "self": "", "test_first_prefix": "", "test_second_prefix": ""}, "params_occur": {"mock_client": [["mock_client", "get_paginator", "mock", "Mock", "return_value", "mock_paginator"], ["actual_output", "s3_hook_async", "list_prefixes_async", "mock_client"]], "self": [], "test_first_prefix": [["test_resp_iter", "test_first_prefix", "test_second_prefix"], ["expected_output", "test_first_prefix", "test_second_prefix"]], "test_second_prefix": [["test_resp_iter", "test_first_prefix", "test_second_prefix"], ["expected_output", "test_first_prefix", "test_second_prefix"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.548424872194317], ["unittesmock.Mock", 0.1844502119674209]], "self": [], "test_first_prefix": [["unittesmock.MagicMock", 0.17991523687545147], ["str", 0.1336293556400996], ["unittesmock.Mock", 0.08616783822460558]], "test_second_prefix": [["unittesmock.MagicMock", 0.17991523687545147], ["str", 0.1336293556400996], ["unittesmock.Mock", 0.08616783822460558]]}, "q_name": "TestAwsS3Hook.test_s3_prefix_sensor_hook_list_prefixes_async", "ret_exprs": [], "ret_type": "", "variables": {"actual_output": "", "expected_output": "", "get_paginator": "", "mock_paginate": "", "mock_paginator": "", "s3_hook_async": "", "test_resp_iter": ""}, "variables_p": {"actual_output": [["str", 0.4607817131081585], ["List[str]", 0.2467467476727503], ["list", 0.12245627401318845], ["List[Union[Any, Any]]", 0.08901309727138261], ["int", 0.08100216793452016]], "expected_output": [["str", 0.5635575796337216], ["list", 0.20930519182970597], ["Tuple[str]", 0.13387310885414885], ["Tuple[Literal, None]", 0.09326411968242354]], "get_paginator": [["unittesmock.Mock", 0.2240153979609638], ["datetime.datetime.datetime", 0.11991300400449108], ["Dict[str, Any]", 0.10836490740854557], ["unittesmock.MagicMock", 0.1083142783846958], ["mock.Mock", 0.10281036218844958], ["Dict[str, Union[Any, Any, Any]]", 0.08728712818765913], ["Callable", 0.0855236241501032], ["List[int]", 0.08299421098686854], ["str", 0.08077708672822315]], "mock_paginate": [["mock.MagicMock", 1.0]], "mock_paginator": [["unittesmock.Mock", 0.4703320228869333], ["Dict[str, Tuple[str, Any]]", 0.20032631589165745], ["datetime.datetime.datetime", 0.1264306434757912], ["mock.Mock", 0.10248291927647091], ["Mock", 0.1004280984691473]], "s3_hook_async": [["str", 0.1934002302726361], ["Type[Iterator[int]]", 0.1908937888859741], ["int", 0.09544689444298705]], "test_resp_iter": [["unittesmock.Mock", 0.4864852510481884], ["List[Union[Any, Any]]", 0.2154494731443367], ["List[str]", 0.19604388196637973]]}}, {"docstring": {"func": "Test that _check_for_prefix method returns True when valid prefix is used and returns False", "long_descr": "when invalid prefix is used", "ret": null}, "fn_lc": [[608, 4], [632, 32]], "fn_var_ln": {"response": [[625, 8], [625, 16]], "return_value": [[615, 8], [615, 39]], "s3_hook_async": [[617, 8], [617, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "mock_prefix", "bucket_name", "mock_bucket", "delimiter"], ["response", "True"], ["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "bucket_name", "mock_bucket", "delimiter"], ["response", "False"]], "return_value": [["mock_list_prefixes", "return_value"], ["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "mock_prefix", "bucket_name", "mock_bucket", "delimiter"], ["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "bucket_name", "mock_bucket", "delimiter"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "mock_prefix", "bucket_name", "mock_bucket", "delimiter"], ["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "bucket_name", "mock_bucket", "delimiter"]]}, "name": "test_s3_prefix_sensor_hook_check_for_prefix_async", "params": {"mock_bucket": "", "mock_client": "", "mock_list_prefixes": "", "mock_prefix": "", "self": ""}, "params_descr": {"mock_bucket": "", "mock_client": "", "mock_list_prefixes": "", "mock_prefix": "", "self": ""}, "params_occur": {"mock_bucket": [["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "mock_prefix", "bucket_name", "mock_bucket", "delimiter"], ["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "bucket_name", "mock_bucket", "delimiter"]], "mock_client": [["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "mock_prefix", "bucket_name", "mock_bucket", "delimiter"], ["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "bucket_name", "mock_bucket", "delimiter"]], "mock_list_prefixes": [["mock_list_prefixes", "return_value"]], "mock_prefix": [["response", "s3_hook_async", "_check_for_prefix_async", "client", "mock_client", "return_value", "prefix", "mock_prefix", "bucket_name", "mock_bucket", "delimiter"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_bucket": [["unittesmock.Mock", 0.5086726802498853], ["unittesmock.MagicMock", 0.38064701910644133]], "mock_client": [["unittesmock.Mock", 0.5086726802498853], ["unittesmock.MagicMock", 0.38064701910644133]], "mock_list_prefixes": [["unittesmock.Mock", 0.4873488152355272], ["mock.Mock", 0.310620506642666], ["unittesmock.MagicMock", 0.2020306781218068]], "mock_prefix": [["unittesmock.Mock", 0.5799952624302261], ["unittesmock.MagicMock", 0.3206939850123727]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_prefix_sensor_hook_check_for_prefix_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["str", 0.5010542313064235], ["Dict[str, str]", 0.3157382389057735], ["Dict[str, Any]", 0.09701897409363372], ["Dict[str, Dict[str, bool]]", 0.08618855569416918]], "return_value": [["str", 0.8170074680361505], ["Dict[str, Union[int, str]]", 0.098242093462359], ["int", 0.08475043850149033]], "s3_hook_async": [["str", 0.7821764584680431], ["Dict[str, str]", 0.12494738609043297]]}}, {"docstring": {"func": "Test _check_key function", "long_descr": null, "ret": null}, "fn_lc": [[638, 4], [648, 31]], "fn_var_ln": {"response": [[645, 8], [645, 16]], "return_value": [[643, 8], [643, 37]], "s3_hook_async": [[644, 8], [644, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"], ["response", "True"]], "return_value": [["mock_get_bucket_key", "return_value"], ["mock_head_object", "return_value"], ["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"]]}, "name": "test_s3__check_key_without_wild_card_async", "params": {"mock_client": "", "mock_get_bucket_key": "", "mock_head_object": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_bucket_key": "", "mock_head_object": "", "self": ""}, "params_occur": {"mock_client": [["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"]], "mock_get_bucket_key": [["mock_get_bucket_key", "return_value"]], "mock_head_object": [["mock_head_object", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.8146928340899611]], "mock_get_bucket_key": [["unittesmock.Mock", 0.9255174437843261], ["unittesmock.MagicMock", 0.07448255621567378]], "mock_head_object": [["unittesmock.Mock", 0.48215620462687736], ["mock.Mock", 0.3292803036490858], ["unittesmock.MagicMock", 0.18856349172403702]], "self": []}, "q_name": "TestAwsS3Hook.test_s3__check_key_without_wild_card_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["List[Dict[str, Any]]", 0.37823242615935176], ["Dict[str, Any]", 0.2085369023020473], ["str", 0.10960060373587817], ["Dict[Any, str]", 0.10674185452554773], ["List[str]", 0.09782762509343995]], "return_value": [["str", 0.16687219989736407], ["int", 0.10778178373058628], ["unittesmock.MagicMock", 0.08568747359168367]], "s3_hook_async": [["str", 0.7343729593859442], ["Dict[str, str]", 0.17174968201686264]]}}, {"docstring": {"func": "Test _check_key function when get head object returns none", "long_descr": null, "ret": null}, "fn_lc": [[654, 4], [664, 32]], "fn_var_ln": {"response": [[661, 8], [661, 16]], "return_value": [[659, 8], [659, 37]], "s3_hook_async": [[660, 8], [660, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"], ["response", "False"]], "return_value": [["mock_get_bucket_key", "return_value"], ["mock_head_object", "return_value", "None"], ["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"]]}, "name": "test_s3__check_key_none_without_wild_card_async", "params": {"mock_client": "", "mock_get_bucket_key": "", "mock_head_object": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_bucket_key": "", "mock_head_object": "", "self": ""}, "params_occur": {"mock_client": [["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "False"]], "mock_get_bucket_key": [["mock_get_bucket_key", "return_value"]], "mock_head_object": [["mock_head_object", "return_value", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.701387049231484], ["unittesmock.Mock", 0.19696803852702272]], "mock_get_bucket_key": [["unittesmock.Mock", 1.0]], "mock_head_object": [["unittesmock.Mock", 0.9999999999999998]], "self": []}, "q_name": "TestAwsS3Hook.test_s3__check_key_none_without_wild_card_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["Dict[str, Any]", 0.19976227300829308], ["rotkehlchen.tests.utils.mock.MockResponse", 0.19725631561679602], ["str", 0.12413043971490458], ["Dict[Any, str]", 0.09913485148753029], ["list", 0.0926315196343039], ["requests.models.Response", 0.09010020016805499]], "return_value": [["Dict[str, List[Any]]", 0.1170540229341718], ["int", 0.10204764913882769], ["str", 0.0909701547836508], ["unittesmock.Mock", 0.08802420454704056]], "s3_hook_async": [["str", 0.7343729593859442], ["Dict[str, str]", 0.17174968201686264]]}}, {"docstring": {"func": "Test _check_key function", "long_descr": null, "ret": null}, "fn_lc": [[670, 4], [693, 32]], "fn_var_ln": {"response": [[690, 8], [690, 16]], "return_value": [[675, 8], [675, 43]], "s3_hook_async": [[689, 8], [689, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "True"], ["response", "False"]], "return_value": [["mock_get_bucket_key", "return_value"], ["mock_get_file_metadata", "return_value", "datetime", "datetime"], ["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "True"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "True"]]}, "name": "test_s3__check_key_with_wild_card_async", "params": {"mock_client": "", "mock_get_bucket_key": "", "mock_get_file_metadata": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_bucket_key": "", "mock_get_file_metadata": "", "self": ""}, "params_occur": {"mock_client": [["response", "s3_hook_async", "_check_key_async", "mock_client", "return_value", "True"]], "mock_get_bucket_key": [["mock_get_bucket_key", "return_value"]], "mock_get_file_metadata": [["mock_get_file_metadata", "return_value", "datetime", "datetime"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.31826279794220147], ["unittesmock.Mock", 0.09616051117180154]], "mock_get_bucket_key": [["unittesmock.MagicMock", 0.5038962689841696], ["unittesmock.Mock", 0.20607316339372722]], "mock_get_file_metadata": [], "self": []}, "q_name": "TestAwsS3Hook.test_s3__check_key_with_wild_card_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["Dict[str, Any]", 0.19657415674675488], ["str", 0.19521356599933365], ["Dict[Any, str]", 0.1166785226873509], ["list", 0.09361182345878495], ["dict", 0.09234092551091937], ["List[Dict[str, Any]]", 0.0892180125335171]], "return_value": [["str", 0.4045827967009102], ["List[Dict[str, str]]", 0.11845123929567931], ["Dict[Any, Union[int, str]]", 0.10104105569660143], ["Dict[str, Literal[-1]]", 0.09552076043634984], ["Final[Dict[str, Any]]", 0.08734790097653695], ["int", 0.087121786650636]], "s3_hook_async": [["str", 0.6582018950814641], ["Dict[str, str]", 0.15937618981577492], ["Dict[str, List[Any]]", 0.09663431258607291]]}}, {"docstring": {"func": "Test is_key_unchanged gives False response when the key value is unchanged in specified period.", "long_descr": null, "ret": null}, "fn_lc": [[698, 4], [736, 50]], "fn_var_ln": {"response": [[724, 8], [724, 16]], "return_value": [[721, 8], [721, 35]], "s3_hook_async": [[723, 8], [723, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"], ["response", "get"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"], ["response", "get"]], "return_value": [["mock_list_keys", "return_value"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"], ["mock_list_keys", "return_value"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"], ["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"]]}, "name": "test_s3_key_hook_is_keys_unchanged_false_async", "params": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_descr": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_occur": {"mock_client": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "True", "last_activity_time", "None"]], "mock_list_keys": [["mock_list_keys", "return_value"], ["mock_list_keys", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["str", 0.40388125428972554], ["bool", 0.13317456987554677], ["bytes", 0.09464922319661845], ["Optional[str]", 0.08663678260092833]], "mock_list_keys": [["unittesmock.MagicMock", 0.5419890518617759], ["unittesmock.Mock", 0.4580109481382242]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_is_keys_unchanged_false_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["str", 0.5889864028362155], ["OrderedDict[str, Any]", 0.22386312909765446], ["Dict[str, str]", 0.10151235303164839]], "return_value": [["str", 1.0000000000000002]], "s3_hook_async": [["str", 0.7183101950497269], ["Dict[str, str]", 0.09568323465161767], ["Dict[str, Any]", 0.09343152062196329]]}}, {"docstring": {"func": "Test is_key_unchanged gives AirflowException.", "long_descr": null, "ret": null}, "fn_lc": [[741, 4], [761, 92]], "fn_var_ln": {"response": [[749, 8], [749, 16]], "return_value": [[745, 8], [745, 35]], "s3_hook_async": [[747, 8], [747, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "return_value": [["mock_list_keys", "return_value"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]]}, "name": "test_s3_key_hook_is_keys_unchanged_exception_async", "params": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_descr": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_occur": {"mock_client": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "mock_list_keys": [["mock_list_keys", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["str", 0.41385160645942964], ["core.models.Recipe", 0.18506481676039105], ["bool", 0.09615836134903322], ["bytes", 0.09471558719592171]], "mock_list_keys": [["unittesmock.MagicMock", 0.5864681866558344], ["Tuple[str, mock.Mock]", 0.12397582796249333], ["mock.Mock", 0.09618517087802034], ["unittesmock.Mock", 0.09585984941494531]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_is_keys_unchanged_exception_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["str", 0.5889864028362155], ["OrderedDict[str, Any]", 0.22386312909765446], ["Dict[str, str]", 0.10151235303164839]], "return_value": [["str", 1.0000000000000002]], "s3_hook_async": [["str", 0.7183101950497269], ["Dict[str, str]", 0.09568323465161767], ["Dict[str, Any]", 0.09343152062196329]]}}, {"docstring": {"func": "Test is_key_unchanged gives AirflowException.", "long_descr": null, "ret": null}, "fn_lc": [[766, 4], [786, 50]], "fn_var_ln": {"response": [[774, 8], [774, 16]], "return_value": [[770, 8], [770, 35]], "s3_hook_async": [[772, 8], [772, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"], ["response", "get"]], "return_value": [["mock_list_keys", "return_value"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]]}, "name": "test_s3_key_hook_is_keys_unchanged_pending_async", "params": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_descr": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_occur": {"mock_client": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "mock_list_keys": [["mock_list_keys", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["str", 0.4983851009347907], ["bytes", 0.09924673130829705], ["core.models.Recipe", 0.0970836474320756], ["bool", 0.09554248930139211]], "mock_list_keys": [["unittesmock.MagicMock", 0.5871635018839398], ["Tuple[str, mock.Mock]", 0.12585080312747496], ["mock.Mock", 0.09672550400678995], ["unittesmock.Mock", 0.09571178712356188]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_is_keys_unchanged_pending_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["str", 0.5889864028362155], ["OrderedDict[str, Any]", 0.22386312909765446], ["Dict[str, str]", 0.10151235303164839]], "return_value": [["str", 1.0000000000000002]], "s3_hook_async": [["str", 0.7183101950497269], ["Dict[str, str]", 0.09568323465161767], ["Dict[str, Any]", 0.09343152062196329]]}}, {"docstring": {"func": "Test is_key_unchanged gives AirflowException.", "long_descr": null, "ret": null}, "fn_lc": [[791, 4], [814, 9]], "fn_var_ln": {"response": [[799, 8], [799, 16]], "return_value": [[795, 8], [795, 35]], "s3_hook_async": [[797, 8], [797, 21]]}, "fn_var_occur": {"response": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "return_value": [["mock_list_keys", "return_value"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "s3_hook_async": [["s3_hook_async", "S3Hook", "client_type", "resource_type"], ["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]]}, "name": "test_s3_key_hook_is_keys_unchanged_inactivity_error_async", "params": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_descr": {"mock_client": "", "mock_list_keys": "", "self": ""}, "params_occur": {"mock_client": [["response", "s3_hook_async", "is_keys_unchanged_async", "client", "mock_client", "return_value", "bucket_name", "prefix", "inactivity_period", "min_objects", "previous_objects", "set", "inactivity_seconds", "allow_delete", "False", "last_activity_time", "None"]], "mock_list_keys": [["mock_list_keys", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [["str", 0.41803405428802265], ["core.models.Recipe", 0.10009019189787524], ["Optional[str]", 0.09710267787942603], ["bytes", 0.08983800473052535], ["pathlib.Path", 0.08737994522116416]], "mock_list_keys": [["unittesmock.MagicMock", 0.5011933886087758], ["unittesmock.Mock", 0.19596693523247344], ["Tuple[str, mock.Mock]", 0.11397096351024665], ["mock.Mock", 0.09646800695907463]], "self": []}, "q_name": "TestAwsS3Hook.test_s3_key_hook_is_keys_unchanged_inactivity_error_async", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "return_value": "", "s3_hook_async": ""}, "variables_p": {"response": [["str", 0.5889864028362155], ["OrderedDict[str, Any]", 0.22386312909765446], ["Dict[str, str]", 0.10151235303164839]], "return_value": [["str", 1.0000000000000002]], "s3_hook_async": [["str", 0.7183101950497269], ["Dict[str, str]", 0.09568323465161767], ["Dict[str, Any]", 0.09343152062196329]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[816, 4], [820, 58]], "fn_var_ln": {"hook": [[817, 8], [817, 12]], "resource": [[819, 8], [819, 16]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_bytes", "s3_bucket"]], "resource": [["resource", "boto3", "resource", "Object", "s3_bucket"], ["resource", "get", "read"]]}, "name": "test_load_bytes", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_bytes", "s3_bucket"], ["resource", "boto3", "resource", "Object", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.63148167867767], ["raiden.utils.TokenNetworkAddress", 0.09386684491628657], ["bool", 0.08591826092330478], ["raiden.utils.TokenAddress", 0.08541423407454951]], "self": []}, "q_name": "TestAwsS3Hook.test_load_bytes", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "resource": ""}, "variables_p": {"hook": [["int", 0.2860016874177738], ["List[str]", 0.1374969302703852], ["float", 0.0937657357836025], ["List[float]", 0.08803252462820074]], "resource": [["str", 0.9060119960084667], ["dict", 0.09398800399153344]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[822, 4], [828, 9]], "fn_var_ln": {"hook": [[823, 8], [823, 12]], "response": [[825, 8], [825, 16]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_bytes", "s3_bucket", "acl_policy"]], "response": [["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"], ["response", "response"]]}, "name": "test_load_bytes_acl", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_bytes", "s3_bucket", "acl_policy"], ["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.4195154897400575], ["bytes", 0.19330134253789108], ["Optional[bytes]", 0.09669115890838716], ["dict", 0.09156074442936644]], "self": []}, "q_name": "TestAwsS3Hook.test_load_bytes_acl", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": ""}, "variables_p": {"hook": [["int", 0.6837482297947834], ["Type[Dict[Any, Any]]", 0.11685529732191423], ["str", 0.09674388679158051]], "response": [["Dict[str, str]", 0.5141341155727281], ["Optional[str]", 0.10497043724680022], ["str", 0.0881535035806751]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[830, 4], [837, 62]], "fn_var_ln": {"hook": [[831, 8], [831, 12]], "resource": [[836, 12], [836, 20]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_file_obj", "temp_file", "s3_bucket"]], "resource": [["resource", "boto3", "resource", "Object", "s3_bucket"], ["resource", "get", "read"]]}, "name": "test_load_fileobj", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_file_obj", "temp_file", "s3_bucket"], ["resource", "boto3", "resource", "Object", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.6004100878071182], ["Optional[str]", 0.09506138127880223]], "self": []}, "q_name": "TestAwsS3Hook.test_load_fileobj", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "resource": ""}, "variables_p": {"hook": [["str", 0.910779050470132], ["List[str]", 0.08922094952986795]], "resource": [["str", 0.9060119960084667], ["dict", 0.09398800399153344]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[839, 4], [850, 13]], "fn_var_ln": {"hook": [[840, 8], [840, 12]], "response": [[845, 12], [845, 20]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_file_obj", "temp_file", "s3_bucket", "acl_policy"]], "response": [["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"], ["response", "response"]]}, "name": "test_load_fileobj_acl", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_file_obj", "temp_file", "s3_bucket", "acl_policy"], ["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.3822426350298899], ["Optional[str]", 0.1125034345433875], ["dict", 0.10790460405849105], ["accounts.models.Account", 0.10414692788127737]], "self": []}, "q_name": "TestAwsS3Hook.test_load_fileobj_acl", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": ""}, "variables_p": {"hook": [["str", 0.5397708194533746], ["List[str]", 0.08455695544965794]], "response": [["Dict[str, str]", 0.5141341155727281], ["Optional[str]", 0.10497043724680022], ["str", 0.0881535035806751]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[852, 4], [860, 37]], "fn_var_ln": {"hook": [[853, 8], [853, 12]], "resource": [[858, 12], [858, 20]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_file", "temp_file", "name", "s3_bucket", "gzip", "True"]], "resource": [["resource", "boto3", "resource", "Object", "s3_bucket"], ["gz", "decompress", "resource", "get", "read"]]}, "name": "test_load_file_gzip", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_file", "temp_file", "name", "s3_bucket", "gzip", "True"], ["resource", "boto3", "resource", "Object", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.20461390647623887], ["path.Path", 0.10377038255592774], ["pathlib.PosixPath", 0.10161147124891813], ["bool", 0.09878103970766974], ["IO[bytes]", 0.09709069514813554]], "self": []}, "q_name": "TestAwsS3Hook.test_load_file_gzip", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "resource": ""}, "variables_p": {"hook": [["str", 0.1925331083516027], ["float", 0.12187272304346784]], "resource": [["str", 0.5051059791123556], ["Type[Pattern[str]]", 0.1030928155804374], ["Dict[str, str]", 0.10267982299630447], ["int", 0.10143755819711969], ["List[str]", 0.09336169183755369]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[862, 4], [874, 37]], "fn_var_ln": {"hook": [[863, 8], [863, 12]], "response": [[868, 12], [868, 20]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_file", "temp_file", "name", "s3_bucket", "gzip", "True", "acl_policy"]], "response": [["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"], ["response", "response"]]}, "name": "test_load_file_acl", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_file", "temp_file", "name", "s3_bucket", "gzip", "True", "acl_policy"], ["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.21734751137977706], ["dict", 0.10041704281830653], ["IO[bytes]", 0.09689188176072906], ["pathlib.Path", 0.08775566556087232], ["Optional[IO[str]]", 0.08581163466248179]], "self": []}, "q_name": "TestAwsS3Hook.test_load_file_acl", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": ""}, "variables_p": {"hook": [["pathlib.Path", 0.11479142950913919], ["Optional[pathlib.Path]", 0.09605311997207418]], "response": [["Dict[str, str]", 0.5141341155727281], ["Optional[str]", 0.10497043724680022], ["str", 0.0881535035806751]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[876, 4], [886, 109]], "fn_var_ln": {"hook": [[877, 8], [877, 12]], "response": [[883, 12], [883, 20]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "load_file_obj", "temp_file", "s3_bucket"], ["hook", "copy_object", "s3_bucket", "s3_bucket"]], "response": [["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"], ["response", "len", "response"]]}, "name": "test_copy_object_acl", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_file_obj", "temp_file", "s3_bucket"], ["hook", "copy_object", "s3_bucket", "s3_bucket"], ["response", "boto3", "client", "get_object_acl", "Bucket", "s3_bucket", "Key", "RequestPayer"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5082572459165641], ["Optional[Dict[str, Any]]", 0.10817779105062086], ["List[pathlib.Path]", 0.10370145228727837], ["pathlib.Path", 0.10099324570657728]], "self": []}, "q_name": "TestAwsS3Hook.test_copy_object_acl", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": ""}, "variables_p": {"hook": [["str", 0.20070049519869013], ["list", 0.15561919489734713], ["float", 0.13741717499564007], ["pathlib.Path", 0.09587203168893237]], "response": [["Dict[str, str]", 0.22092047767806527], ["Optional[str]", 0.11587071198676616], ["Dict[str, Any]", 0.09424757649452783]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[889, 4], [895, 56]], "fn_var_ln": {"mock_hook": [[891, 8], [891, 17]]}, "fn_var_occur": {"mock_hook": [["mock_hook", "S3Hook"], ["mock_hook", "create_bucket", "bucket_name", "s3_bucket"], ["mock_hook", "check_for_bucket", "bucket_name", "s3_bucket"], ["mock_hook", "delete_bucket", "bucket_name", "s3_bucket", "force_delete", "True"], ["mock_hook", "check_for_bucket", "s3_bucket"]]}, "name": "test_delete_bucket_if_bucket_exist", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["mock_hook", "create_bucket", "bucket_name", "s3_bucket"], ["mock_hook", "check_for_bucket", "bucket_name", "s3_bucket"], ["mock_hook", "delete_bucket", "bucket_name", "s3_bucket", "force_delete", "True"], ["mock_hook", "check_for_bucket", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5938095101760469], ["List[str]", 0.09604581321903644]], "self": []}, "q_name": "TestAwsS3Hook.test_delete_bucket_if_bucket_exist", "ret_exprs": [], "ret_type": "", "variables": {"mock_hook": ""}, "variables_p": {"mock_hook": [["Dict[str, Union[Any, Any]]", 0.246964749429192], ["Dict[str, Dict[Any, Any]]", 0.08865951182749389], ["Dict[str, Dict[Any, str]]", 0.08865951182749389], ["Dict[str, str]", 0.085841184969774]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[898, 4], [903, 68]], "fn_var_ln": {"mock_hook": [[900, 8], [900, 17]]}, "fn_var_occur": {"mock_hook": [["mock_hook", "S3Hook"], ["mock_hook", "delete_bucket", "bucket_name", "s3_bucket", "force_delete", "True"]]}, "name": "test_delete_bucket_if_not_bucket_exist", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["mock_hook", "delete_bucket", "bucket_name", "s3_bucket", "force_delete", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5871620286139904], ["zerver.models.Stream", 0.10148541154964297], ["Dict[str, Any]", 0.09922346269156396]], "self": []}, "q_name": "TestAwsS3Hook.test_delete_bucket_if_not_bucket_exist", "ret_exprs": [], "ret_type": "", "variables": {"mock_hook": ""}, "variables_p": {"mock_hook": [["Dict[str, Union[Any, Any]]", 0.4371188929499672], ["str", 0.2918903956581251], ["Dict[str, dict]", 0.10576260891930421], ["unittesmock.MagicMock", 0.08251242638622087]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[910, 4], [922, 43]], "fn_var_ln": {"fake_s3_hook": [[916, 8], [916, 20]], "test_bucket_name": [[921, 8], [921, 24]]}, "fn_var_occur": {"fake_s3_hook": [["fake_s3_hook", "FakeS3Hook"], ["test_bucket_name", "fake_s3_hook", "test_function"], ["test_bucket_name", "fake_s3_hook", "test_function", "bucket_name"]], "test_bucket_name": [["test_bucket_name", "fake_s3_hook", "test_function"], ["test_bucket_name", "fake_s3_hook", "test_function", "bucket_name"]]}, "name": "test_provide_bucket_name", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.Mock", 0.7010786889265543]], "self": []}, "q_name": "TestAwsS3Hook.test_provide_bucket_name", "ret_exprs": [], "ret_type": "", "variables": {"fake_s3_hook": "", "test_bucket_name": ""}, "variables_p": {"fake_s3_hook": [["str", 0.18738229764944098], ["Dict[str, set]", 0.10229825770403045], ["ajapaik.ajapaik.models.Area", 0.09219408284261313], ["List[Tuple[Any, str]]", 0.08543854506292498]], "test_bucket_name": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[924, 4], [928, 61]], "fn_var_ln": {"hook": [[927, 8], [927, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "delete_objects", "bucket", "s3_bucket", "keys"]]}, "name": "test_delete_objects_key_does_not_exist", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "delete_objects", "bucket", "s3_bucket", "keys"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.8015964396092372], ["Tuple[str, str]", 0.1037488990648458], ["bool", 0.09465466132591711]], "self": []}, "q_name": "TestAwsS3Hook.test_delete_objects_key_does_not_exist", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.37165487707870926], ["int", 0.30839244085337864], ["Type[str]", 0.20672242825184287], ["Optional[str]", 0.11323025381606923]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[930, 4], [935, 83]], "fn_var_ln": {"hook": [[933, 8], [933, 12]], "key": [[931, 8], [931, 11]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "delete_objects", "bucket", "s3_bucket", "keys", "key"]], "key": [["mocked_s3_res", "Object", "s3_bucket", "key", "put", "Body"], ["hook", "delete_objects", "bucket", "s3_bucket", "keys", "key"], ["o", "key", "o", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all"]]}, "name": "test_delete_objects_one_key", "params": {"mocked_s3_res": "", "s3_bucket": "", "self": ""}, "params_descr": {"mocked_s3_res": "", "s3_bucket": "", "self": ""}, "params_occur": {"mocked_s3_res": [["mocked_s3_res", "Object", "s3_bucket", "key", "put", "Body"], ["o", "key", "o", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all"]], "s3_bucket": [["mocked_s3_res", "Object", "s3_bucket", "key", "put", "Body"], ["hook", "delete_objects", "bucket", "s3_bucket", "keys", "key"], ["o", "key", "o", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mocked_s3_res": [], "s3_bucket": [["str", 0.3077541207751812], ["dict", 0.111059854043198]], "self": []}, "q_name": "TestAwsS3Hook.test_delete_objects_one_key", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "key": ""}, "variables_p": {"hook": [["str", 1.0]], "key": [["str", 0.734963848333335], ["Dict[str, Any]", 0.08360314567447824]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[937, 4], [948, 83]], "fn_var_ln": {"hook": [[946, 8], [946, 12]], "key": [[941, 12], [941, 15]], "keys": [[939, 8], [939, 12]], "num_keys_to_remove": [[938, 8], [938, 26]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "delete_objects", "bucket", "s3_bucket", "keys", "keys"]], "key": [["key", "index"], ["mocked_s3_res", "Object", "s3_bucket", "key", "put", "Body"], ["keys", "append", "key"], ["o", "key", "o", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all"]], "keys": [["keys", "append", "key"], ["hook", "delete_objects", "bucket", "s3_bucket", "keys", "keys"]], "num_keys_to_remove": [["range", "num_keys_to_remove"], ["sum", "_", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all", "num_keys_to_remove"]]}, "name": "test_delete_objects_many_keys", "params": {"mocked_s3_res": "", "s3_bucket": "", "self": ""}, "params_descr": {"mocked_s3_res": "", "s3_bucket": "", "self": ""}, "params_occur": {"mocked_s3_res": [["mocked_s3_res", "Object", "s3_bucket", "key", "put", "Body"], ["sum", "_", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all", "num_keys_to_remove"], ["o", "key", "o", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all"]], "s3_bucket": [["mocked_s3_res", "Object", "s3_bucket", "key", "put", "Body"], ["sum", "_", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all", "num_keys_to_remove"], ["hook", "delete_objects", "bucket", "s3_bucket", "keys", "keys"], ["o", "key", "o", "mocked_s3_res", "Bucket", "s3_bucket", "objects", "all"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mocked_s3_res": [["unittesmock.MagicMock", 0.19072643806422046], ["bytes", 0.1036093945189635], ["str", 0.10007404696098139]], "s3_bucket": [["bytes", 0.09422508596614262], ["str", 0.07941326673572774]], "self": []}, "q_name": "TestAwsS3Hook.test_delete_objects_many_keys", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "key": "", "keys": "", "num_keys_to_remove": ""}, "variables_p": {"hook": [["str", 1.0]], "key": [["dict", 0.20289605446412484], ["Tuple[str]", 0.10743835468199228], ["str", 0.10520485517496446], ["int", 0.10285697861448663], ["tuple", 0.0984129182336935], ["Type[Tuple[Any, ...]]", 0.09702146445492044], ["List[str]", 0.09623812428989907], ["Set[str]", 0.09518371304445389], ["list", 0.09474753704146487]], "keys": [["str", 0.798643255432129], ["List[str]", 0.20135674456787098]], "num_keys_to_remove": [["str", 0.5602937108483181], ["bytes", 0.1752510462789692], ["List[str]", 0.09198735890520254], ["List[bytes]", 0.08750962312221457]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[950, 4], [974, 48]], "fn_var_ln": {"fake_s3_hook": [[964, 8], [964, 20]], "test_bucket_name_with_key": [[969, 8], [969, 33]], "test_bucket_name_with_wildcard_key": [[966, 8], [966, 42]]}, "fn_var_occur": {"fake_s3_hook": [["fake_s3_hook", "FakeS3Hook"], ["test_bucket_name_with_wildcard_key", "fake_s3_hook", "test_function_with_wildcard_key"], ["test_bucket_name_with_key", "fake_s3_hook", "test_function_with_key"], ["fake_s3_hook", "test_function_with_test_key"]], "test_bucket_name_with_key": [["test_bucket_name_with_key", "fake_s3_hook", "test_function_with_key"]], "test_bucket_name_with_wildcard_key": [["test_bucket_name_with_wildcard_key", "fake_s3_hook", "test_function_with_wildcard_key"]]}, "name": "test_unify_bucket_name_and_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_unify_bucket_name_and_key", "ret_exprs": [], "ret_type": "", "variables": {"fake_s3_hook": "", "test_bucket_name_with_key": "", "test_bucket_name_with_wildcard_key": ""}, "variables_p": {"fake_s3_hook": [["str", 0.09276959139690773], ["Dict[str, Any]", 0.08641841535320864]], "test_bucket_name_with_key": [["str", 0.8985809151972008], ["Dict[str, Any]", 0.10141908480279908]], "test_bucket_name_with_wildcard_key": [["str", 0.5019492928023409], ["Final", 0.20601788789958678], ["Set[str]", 0.10323617806257936], ["Dict[str, str]", 0.09979485285829018], ["Dict[str, Set[str]]", 0.08900178837720281]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[977, 4], [997, 48]], "fn_var_ln": {"bucket": [[986, 12], [986, 18]], "check_for_key": [[981, 12], [981, 33]], "download_fileobj": [[983, 12], [983, 35]], "get_key": [[984, 12], [984, 27]], "key": [[985, 12], [985, 15]], "output_file": [[988, 12], [988, 23]], "return_value": [[979, 12], [979, 39]], "s3_hook": [[980, 12], [980, 19]], "s3_obj": [[982, 12], [982, 18]]}, "fn_var_occur": {"bucket": [["output_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket"], ["s3_hook", "get_key", "assert_called_once_with", "key", "bucket"]], "check_for_key": [["s3_hook", "check_for_key", "Mock", "return_value", "True"]], "download_fileobj": [["s3_obj", "download_fileobj", "Mock", "return_value", "None"], ["s3_obj", "download_fileobj", "assert_called_once_with", "temp_file", "Config", "s3_hook", "transfer_config", "ExtraArgs", "s3_hook", "extra_args"]], "get_key": [["s3_hook", "get_key", "Mock", "return_value", "s3_obj"], ["s3_hook", "get_key", "assert_called_once_with", "key", "bucket"]], "key": [["output_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket"], ["s3_hook", "get_key", "assert_called_once_with", "key", "bucket"]], "output_file": [["output_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket"], ["temp_file", "name", "output_file"]], "return_value": [["mock_temp_file", "return_value", "temp_file"], ["s3_hook", "check_for_key", "Mock", "return_value", "True"], ["s3_obj", "download_fileobj", "Mock", "return_value", "None"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"]], "s3_hook": [["s3_hook", "S3Hook", "aws_conn_id"], ["s3_hook", "check_for_key", "Mock", "return_value", "True"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"], ["output_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket"], ["s3_hook", "get_key", "assert_called_once_with", "key", "bucket"], ["s3_obj", "download_fileobj", "assert_called_once_with", "temp_file", "Config", "s3_hook", "transfer_config", "ExtraArgs", "s3_hook", "extra_args"]], "s3_obj": [["s3_obj", "Mock"], ["s3_obj", "download_fileobj", "Mock", "return_value", "None"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"], ["s3_obj", "download_fileobj", "assert_called_once_with", "temp_file", "Config", "s3_hook", "transfer_config", "ExtraArgs", "s3_hook", "extra_args"]]}, "name": "test_download_file", "params": {"mock_temp_file": "", "self": ""}, "params_descr": {"mock_temp_file": "", "self": ""}, "params_occur": {"mock_temp_file": [["mock_temp_file", "return_value", "temp_file"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_temp_file": [["unittesmock.MagicMock", 0.38996729364982696], ["mock.MagicMock", 0.22695665442145424], ["unittesmock.Mock", 0.1982776837861278]], "self": []}, "q_name": "TestAwsS3Hook.test_download_file", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "check_for_key": "", "download_fileobj": "", "get_key": "", "key": "", "output_file": "", "return_value": "", "s3_hook": "", "s3_obj": ""}, "variables_p": {"bucket": [["str", 0.5088574872029685], ["Type[str]", 0.10692480215723216], ["dict", 0.10439019686028797], ["Dict[str, str]", 0.09755037233665101], ["bytes", 0.0913409361036139], ["models.store.StoreModel", 0.09093620533924635]], "check_for_key": [["str", 0.745815795377459], ["unittesmock.MagicMock", 0.17060711411167442], ["bool", 0.0835770905108665]], "download_fileobj": [["str", 0.4482266163907505], ["Union[Literal, str]", 0.23008593384687365], ["int", 0.12752161823938818], ["Dict[str, Union[int, str]]", 0.10712912366214615], ["mock.Mock", 0.08703670786084144]], "get_key": [["str", 0.9999999999999998]], "key": [["boto.s3.key.Key", 0.30575907007564934], ["str", 0.20581017660776602]], "output_file": [["str", 0.5446362252997112], ["pathlib.Path", 0.34496885997449267]], "return_value": [["str", 0.6905863521219145], ["list", 0.10579433285307159], ["Dict[str, str]", 0.1053301835154338], ["Dict[str, int]", 0.09828913150958021]], "s3_hook": [["str", 0.598696154849757], ["unittesmock.MagicMock", 0.11070068319861592], ["Dict[str, Any]", 0.10967160093107185], ["List[str]", 0.0902599320402784]], "s3_obj": [["tests.utils.MockProvider", 0.23713060165236408], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.09985207894286335], ["int", 0.09583725136247102]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1000, 4], [1020, 78]], "fn_var_ln": {"bucket": [[1002, 8], [1002, 14]], "check_for_key": [[1007, 8], [1007, 29]], "download_fileobj": [[1010, 8], [1010, 31]], "file_name": [[1001, 8], [1001, 17]], "get_key": [[1011, 8], [1011, 23]], "key": [[1009, 8], [1009, 18]], "local_folder": [[1004, 8], [1004, 20]], "s3_hook": [[1006, 8], [1006, 15]], "s3_obj": [[1008, 8], [1008, 14]]}, "fn_var_occur": {"bucket": [["s3_obj", "key", "bucket", "key"], ["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"]], "check_for_key": [["s3_hook", "check_for_key", "Mock", "return_value", "True"]], "download_fileobj": [["s3_obj", "download_fileobj", "Mock", "return_value", "None"]], "file_name": [["key", "file_name"], ["mock_open", "assert_called_once_with", "Path", "local_folder", "file_name"]], "get_key": [["s3_hook", "get_key", "Mock", "return_value", "s3_obj"]], "key": [["key", "file_name"], ["s3_obj", "key", "bucket", "key"], ["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"]], "local_folder": [["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"], ["mock_open", "assert_called_once_with", "Path", "local_folder", "file_name"]], "s3_hook": [["s3_hook", "S3Hook", "aws_conn_id"], ["s3_hook", "check_for_key", "Mock", "return_value", "True"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"], ["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"]], "s3_obj": [["s3_obj", "Mock"], ["s3_obj", "key", "bucket", "key"], ["s3_obj", "download_fileobj", "Mock", "return_value", "None"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"]]}, "name": "test_download_file_with_preserve_name", "params": {"mock_open": "", "self": ""}, "params_descr": {"mock_open": "", "self": ""}, "params_occur": {"mock_open": [["mock_open", "assert_called_once_with", "Path", "local_folder", "file_name"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_open": [["unittesmock.MagicMock", 0.9015756931222377], ["unittesmock.Mock", 0.09842430687776231]], "self": []}, "q_name": "TestAwsS3Hook.test_download_file_with_preserve_name", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "check_for_key": "", "download_fileobj": "", "file_name": "", "get_key": "", "key": "", "local_folder": "", "s3_hook": "", "s3_obj": ""}, "variables_p": {"bucket": [["str", 0.4840954666323768], ["Optional[str]", 0.11706853398608655], ["Dict[str, str]", 0.11158254935075802], ["int", 0.10207569894517017], ["Dict[Any, Dict[str, str]]", 0.09268312965747481]], "check_for_key": [["str", 0.745815795377459], ["unittesmock.MagicMock", 0.17060711411167442], ["bool", 0.0835770905108665]], "download_fileobj": [["list", 0.3885926728708099], ["property", 0.12188406892909699], ["List[Dict[str, str]]", 0.10835699249510312], ["str", 0.06636975461267956], ["int", 0.05899875706938568], ["set", 0.050737157151782425], ["unittesmock.MagicMock", 0.050302979295364564]], "file_name": [["str", 0.877701651776898], ["Optional[str]", 0.1222983482231019]], "get_key": [["str", 0.528689346152896], ["unittesmock.MagicMock", 0.14088402103259076], ["List[str]", 0.0818537542792785]], "key": [["str", 0.2691172708552383], ["List[str]", 0.2088097207564936], ["Tuple[str]", 0.16104577786034072], ["boto.s3.key.Key", 0.0893344452569901], ["alerta.models.key.ApiKey", 0.08822404426410516]], "local_folder": [["str", 0.18498061862527465], ["Dict[str, Union[Any, Any]]", 0.1408633352083993], ["pathlib.Path", 0.09609912749790285], ["bool", 0.09379552832177242], ["Union[Literal, Literal]", 0.09338950948872908]], "s3_hook": [["str", 0.4206626222839878]], "s3_obj": [["Generator[Any, None, None]", 0.3653348938165267], ["str", 0.1755905533931542], ["Pattern[str]", 0.1267969142909985]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1023, 4], [1043, 76]], "fn_var_ln": {"bucket": [[1025, 8], [1025, 14]], "check_for_key": [[1030, 8], [1030, 29]], "download_fileobj": [[1033, 8], [1033, 31]], "file_name": [[1024, 8], [1024, 17]], "get_key": [[1034, 8], [1034, 23]], "key": [[1032, 8], [1032, 18]], "local_folder": [[1027, 8], [1027, 20]], "result_file": [[1035, 8], [1035, 19]], "s3_hook": [[1029, 8], [1029, 15]], "s3_obj": [[1031, 8], [1031, 14]]}, "fn_var_occur": {"bucket": [["s3_obj", "key", "bucket", "key"], ["result_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "True"]], "check_for_key": [["s3_hook", "check_for_key", "Mock", "return_value", "True"]], "download_fileobj": [["s3_obj", "download_fileobj", "Mock", "return_value", "None"]], "file_name": [["key", "file_name"]], "get_key": [["s3_hook", "get_key", "Mock", "return_value", "s3_obj"]], "key": [["key", "file_name"], ["s3_obj", "key", "bucket", "key"], ["result_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "True"]], "local_folder": [["result_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "True"]], "result_file": [["result_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "True"], ["result_file", "rsplit", "startswith"]], "s3_hook": [["s3_hook", "S3Hook", "aws_conn_id"], ["s3_hook", "check_for_key", "Mock", "return_value", "True"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"], ["result_file", "s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "True"]], "s3_obj": [["s3_obj", "Mock"], ["s3_obj", "key", "bucket", "key"], ["s3_obj", "download_fileobj", "Mock", "return_value", "None"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"]]}, "name": "test_download_file_with_preserve_name_with_autogenerated_subdir", "params": {"mock_open": "", "self": ""}, "params_descr": {"mock_open": "", "self": ""}, "params_occur": {"mock_open": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_open": [["mock.Mock", 0.6878619338284809], ["pathlib.Path", 0.185952242015734]], "self": []}, "q_name": "TestAwsS3Hook.test_download_file_with_preserve_name_with_autogenerated_subdir", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "check_for_key": "", "download_fileobj": "", "file_name": "", "get_key": "", "key": "", "local_folder": "", "result_file": "", "s3_hook": "", "s3_obj": ""}, "variables_p": {"bucket": [["str", 0.8108728180338757], ["Dict[Any, Dict[str, str]]", 0.09277819141331124]], "check_for_key": [["str", 0.745815795377459], ["unittesmock.MagicMock", 0.17060711411167442], ["bool", 0.0835770905108665]], "download_fileobj": [["list", 0.3885926728708099], ["property", 0.12188406892909699], ["List[Dict[str, str]]", 0.10835699249510312], ["str", 0.06636975461267956], ["int", 0.05899875706938568], ["set", 0.050737157151782425], ["unittesmock.MagicMock", 0.050302979295364564]], "file_name": [["List[str]", 0.5333656009276309], ["str", 0.46663439907236914]], "get_key": [["str", 0.528689346152896], ["unittesmock.MagicMock", 0.14088402103259076], ["List[str]", 0.0818537542792785]], "key": [["str", 0.2770366541529787], ["List[str]", 0.17811871534333285], ["Tuple[str]", 0.12707654132598745], ["boto.s3.key.Key", 0.12274149126229408], ["Dict[Any, str]", 0.11128295407981888], ["list", 0.0929409508816753]], "local_folder": [["str", 0.27548869782188334], ["list", 0.18702502317343317], ["Dict[str, int]", 0.11725988436181407], ["Set[str]", 0.09362739055358399], ["dict", 0.08670206055179353]], "result_file": [["str", 0.49623478992008224], ["pathlib.Path", 0.19149183173737935], ["int", 0.13835807795166583]], "s3_hook": [["str", 0.5065300177685061], ["Dict[str, Any]", 0.17104473462947906], ["unittesmock.MagicMock", 0.12912799933289437]], "s3_obj": [["Generator[Any, None, None]", 0.3653348938165267], ["str", 0.1755905533931542], ["Pattern[str]", 0.1267969142909985]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1045, 4], [1064, 17]], "fn_var_ln": {"bucket": [[1048, 12], [1048, 18]], "check_for_key": [[1052, 12], [1052, 33]], "download_fileobj": [[1055, 12], [1055, 35]], "file_name": [[1047, 12], [1047, 21]], "get_key": [[1056, 12], [1056, 27]], "key": [[1054, 12], [1054, 22]], "local_folder": [[1050, 12], [1050, 24]], "s3_hook": [[1051, 12], [1051, 19]], "s3_obj": [[1053, 12], [1053, 18]]}, "fn_var_occur": {"bucket": [["s3_obj", "key", "bucket", "key"], ["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"]], "check_for_key": [["s3_hook", "check_for_key", "Mock", "return_value", "True"]], "download_fileobj": [["s3_obj", "download_fileobj", "Mock", "return_value", "None"]], "file_name": [["file_name", "file", "name", "rsplit"], ["key", "file_name"]], "get_key": [["s3_hook", "get_key", "Mock", "return_value", "s3_obj"]], "key": [["key", "file_name"], ["s3_obj", "key", "bucket", "key"], ["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"]], "local_folder": [["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"]], "s3_hook": [["s3_hook", "S3Hook", "aws_conn_id"], ["s3_hook", "check_for_key", "Mock", "return_value", "True"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"], ["s3_hook", "download_file", "key", "key", "bucket_name", "bucket", "local_path", "local_folder", "preserve_file_name", "True", "use_autogenerated_subdir", "False"]], "s3_obj": [["s3_obj", "Mock"], ["s3_obj", "key", "bucket", "key"], ["s3_obj", "download_fileobj", "Mock", "return_value", "None"], ["s3_hook", "get_key", "Mock", "return_value", "s3_obj"]]}, "name": "test_download_file_with_preserve_name_file_already_exists", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_download_file_with_preserve_name_file_already_exists", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "check_for_key": "", "download_fileobj": "", "file_name": "", "get_key": "", "key": "", "local_folder": "", "s3_hook": "", "s3_obj": ""}, "variables_p": {"bucket": [["str", 0.4840954666323768], ["Optional[str]", 0.11706853398608655], ["Dict[str, str]", 0.11158254935075802], ["int", 0.10207569894517017], ["Dict[Any, Dict[str, str]]", 0.09268312965747481]], "check_for_key": [["str", 0.745815795377459], ["unittesmock.MagicMock", 0.17060711411167442], ["bool", 0.0835770905108665]], "download_fileobj": [["list", 0.3885926728708099], ["property", 0.12188406892909699], ["List[Dict[str, str]]", 0.10835699249510312], ["str", 0.06636975461267956], ["int", 0.05899875706938568], ["set", 0.050737157151782425], ["unittesmock.MagicMock", 0.050302979295364564]], "file_name": [["str", 0.8195473786611908], ["int", 0.09757671000019622], ["List[str]", 0.0828759113386131]], "get_key": [["str", 0.528689346152896], ["unittesmock.MagicMock", 0.14088402103259076], ["List[str]", 0.0818537542792785]], "key": [["str", 0.2691172708552383], ["List[str]", 0.2088097207564936], ["Tuple[str]", 0.16104577786034072], ["boto.s3.key.Key", 0.0893344452569901], ["alerta.models.key.ApiKey", 0.08822404426410516]], "local_folder": [["str", 0.18841274979832356], ["Dict[str, int]", 0.12781097804166766], ["bool", 0.10777577380239546], ["Dict[str, str]", 0.09246356081763445], ["Dict[str, float]", 0.09246356081763445]], "s3_hook": [["str", 0.4206626222839878]], "s3_obj": [["Generator[Any, None, None]", 0.3653348938165267], ["str", 0.1755905533931542], ["Pattern[str]", 0.1267969142909985]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1066, 4], [1075, 86]], "fn_var_ln": {"hook": [[1067, 8], [1067, 12]], "params": [[1073, 8], [1073, 14]], "presigned_url": [[1068, 8], [1068, 21]], "url": [[1072, 8], [1072, 11]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["presigned_url", "hook", "generate_presigned_url", "client_method", "params", "s3_bucket"]], "params": [["presigned_url", "hook", "generate_presigned_url", "client_method", "params", "s3_bucket"], ["params", "x", "x", "x", "x", "split", "x", "url", "split"], ["issubset", "set", "params", "keys"]], "presigned_url": [["presigned_url", "hook", "generate_presigned_url", "client_method", "params", "s3_bucket"], ["url", "presigned_url", "split"]], "url": [["url", "presigned_url", "split"], ["params", "x", "x", "x", "x", "split", "x", "url", "split"]]}, "name": "test_generate_presigned_url", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["presigned_url", "hook", "generate_presigned_url", "client_method", "params", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.5075850867456502], ["List[str]", 0.10782047869164293], ["pathlib.Path", 0.09560737460958504], ["core_lib.core.models.Venue", 0.0913641720250042]], "self": []}, "q_name": "TestAwsS3Hook.test_generate_presigned_url", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "params": "", "presigned_url": "", "url": ""}, "variables_p": {"hook": [["str", 0.28078678837168586], ["dict", 0.10991746183603868], ["List[Dict[str, Any]]", 0.09057974339291952], ["Dict[str, Union[dict, str]]", 0.08333393378207778]], "params": [["Dict[str, Any]", 0.41980145322447204], ["list", 0.41287251134576064], ["List[str]", 0.16732603542976732]], "presigned_url": [["str", 0.6021547380562575], ["list", 0.19674008983977997], ["Dict[int, str]", 0.1083129160675707], ["List[str]", 0.09279225603639182]], "url": [["str", 0.41294072553163896], ["List[str]", 0.26878323270219584], ["Pattern[str]", 0.23204578416706265], ["Final", 0.08623025759910247]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1077, 4], [1079, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_throw_error_if_extra_args_is_not_dict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_should_throw_error_if_extra_args_is_not_dict", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1081, 4], [1087, 92]], "fn_var_ln": {"hook": [[1082, 8], [1082, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook", "extra_args"], ["hook", "load_file_obj", "temp_file", "s3_bucket", "acl_policy"]]}, "name": "test_should_throw_error_if_extra_args_contains_unknown_arg", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_file_obj", "temp_file", "s3_bucket", "acl_policy"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.7973053040161427], ["List[Dict[str, Any]]", 0.11262669468072664], ["Optional[str]", 0.09006800130313075]], "self": []}, "q_name": "TestAwsS3Hook.test_should_throw_error_if_extra_args_contains_unknown_arg", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.1776285894128906], ["Dict[str, str]", 0.1473469501653178]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1089, 4], [1096, 63]], "fn_var_ln": {"hook": [[1090, 8], [1090, 12]], "resource": [[1095, 12], [1095, 20]]}, "fn_var_occur": {"hook": [["hook", "S3Hook", "extra_args"], ["hook", "load_file_obj", "temp_file", "s3_bucket", "acl_policy"]], "resource": [["resource", "boto3", "resource", "Object", "s3_bucket"], ["resource", "get"]]}, "name": "test_should_pass_extra_args", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["hook", "load_file_obj", "temp_file", "s3_bucket", "acl_policy"], ["resource", "boto3", "resource", "Object", "s3_bucket"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.3043271313122223], ["bytes", 0.2097252229517853], ["IO", 0.09802972914775142], ["int", 0.0977772055781176], ["Optional[str]", 0.09593687822622098]], "self": []}, "q_name": "TestAwsS3Hook.test_should_pass_extra_args", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "resource": ""}, "variables_p": {"hook": [["str", 0.1776285894128906], ["Dict[str, str]", 0.1473469501653178]], "resource": [["str", 0.8933409018123377]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1098, 4], [1146, 9]], "fn_var_ln": {"check_for_key": [[1113, 8], [1113, 29]], "dummy": [[1112, 8], [1112, 13]], "first_call_extra_args": [[1119, 8], [1119, 29]], "fourth_call_extra_args": [[1139, 8], [1139, 30]], "get_connection": [[1108, 8], [1108, 30]], "mock_upload_file": [[1115, 8], [1115, 24]], "mock_upload_fileobj": [[1114, 8], [1114, 27]], "original": [[1099, 8], [1099, 16]], "s3_hook": [[1105, 8], [1105, 15]], "second_call_extra_args": [[1125, 8], [1125, 30]], "third_call_extra_args": [[1132, 8], [1132, 29]]}, "fn_var_occur": {"check_for_key": [["s3_hook", "check_for_key", "Mock", "return_value", "False"]], "dummy": [["dummy", "mock", "MagicMock"], ["s3_hook", "load_file_obj", "dummy", "s3_bucket", "encrypt", "True", "acl_policy"]], "first_call_extra_args": [["first_call_extra_args", "mock_upload_fileobj", "call_args_list"], ["first_call_extra_args", "s3_hook", "extra_args"], ["second_call_extra_args", "first_call_extra_args"], ["third_call_extra_args", "first_call_extra_args", "second_call_extra_args"], ["fourth_call_extra_args", "third_call_extra_args", "first_call_extra_args", "second_call_extra_args"]], "fourth_call_extra_args": [["fourth_call_extra_args", "mock_upload_file", "call_args_list"], ["fourth_call_extra_args", "s3_hook", "extra_args"], ["fourth_call_extra_args", "third_call_extra_args", "first_call_extra_args", "second_call_extra_args"]], "get_connection": [["s3_hook", "get_connection", "_", "None"]], "mock_upload_file": [["mock_upload_file", "s3_hook", "conn", "upload_file", "Mock", "return_value", "None"], ["fourth_call_extra_args", "mock_upload_file", "call_args_list"]], "mock_upload_fileobj": [["mock_upload_fileobj", "s3_hook", "conn", "upload_fileobj", "Mock", "return_value", "None"], ["first_call_extra_args", "mock_upload_fileobj", "call_args_list"], ["second_call_extra_args", "mock_upload_fileobj", "call_args_list"], ["third_call_extra_args", "mock_upload_fileobj", "call_args_list"]], "original": [["s3_hook", "S3Hook", "aws_conn_id", "extra_args", "original"], ["s3_hook", "extra_args", "original"], ["s3_hook", "extra_args", "original"], ["s3_hook", "extra_args", "original"], ["s3_hook", "extra_args", "original"], ["s3_hook", "extra_args", "original"], ["s3_hook", "extra_args", "original"]], "s3_hook": [["s3_hook", "S3Hook", "aws_conn_id", "extra_args", "original"], ["s3_hook", "get_connection", "_", "None"], ["s3_hook", "extra_args", "original"], ["s3_hook", "extra_args", "original"], ["s3_hook", "check_for_key", "Mock", "return_value", "False"], ["mock_upload_fileobj", "s3_hook", "conn", "upload_fileobj", "Mock", "return_value", "None"], ["mock_upload_file", "s3_hook", "conn", "upload_file", "Mock", "return_value", "None"], ["s3_hook", "load_file_obj", "dummy", "s3_bucket", "encrypt", "True", "acl_policy"], ["s3_hook", "extra_args", "original"], ["first_call_extra_args", "s3_hook", "extra_args"], ["s3_hook", "load_string", "s3_bucket", "acl_policy"], ["s3_hook", "extra_args", "original"], ["second_call_extra_args", "s3_hook", "extra_args"], ["s3_hook", "load_bytes", "s3_bucket", "encrypt", "True"], ["s3_hook", "extra_args", "original"], ["third_call_extra_args", "s3_hook", "extra_args"], ["s3_hook", "load_file", "s3_bucket", "encrypt", "True", "acl_policy"], ["s3_hook", "extra_args", "original"], ["fourth_call_extra_args", "s3_hook", "extra_args"]], "second_call_extra_args": [["second_call_extra_args", "mock_upload_fileobj", "call_args_list"], ["second_call_extra_args", "s3_hook", "extra_args"], ["second_call_extra_args", "first_call_extra_args"], ["third_call_extra_args", "first_call_extra_args", "second_call_extra_args"], ["fourth_call_extra_args", "third_call_extra_args", "first_call_extra_args", "second_call_extra_args"]], "third_call_extra_args": [["third_call_extra_args", "mock_upload_fileobj", "call_args_list"], ["third_call_extra_args", "s3_hook", "extra_args"], ["third_call_extra_args", "first_call_extra_args", "second_call_extra_args"], ["fourth_call_extra_args", "third_call_extra_args", "first_call_extra_args", "second_call_extra_args"]]}, "name": "test_that_extra_args_not_changed_between_calls", "params": {"s3_bucket": "", "self": ""}, "params_descr": {"s3_bucket": "", "self": ""}, "params_occur": {"s3_bucket": [["s3_hook", "load_file_obj", "dummy", "s3_bucket", "encrypt", "True", "acl_policy"], ["s3_hook", "load_string", "s3_bucket", "acl_policy"], ["s3_hook", "load_bytes", "s3_bucket", "encrypt", "True"], ["s3_hook", "load_file", "s3_bucket", "encrypt", "True", "acl_policy"]], "self": []}, "params_p": {"args": [], "kwargs": [], "s3_bucket": [["str", 0.49966112711013977], ["List[str]", 0.30557901572734697], ["Set[str]", 0.09782934730076029]], "self": []}, "q_name": "TestAwsS3Hook.test_that_extra_args_not_changed_between_calls", "ret_exprs": [], "ret_type": "", "variables": {"check_for_key": "", "dummy": "", "first_call_extra_args": "", "fourth_call_extra_args": "", "get_connection": "", "mock_upload_file": "", "mock_upload_fileobj": "", "original": "", "s3_hook": "", "second_call_extra_args": "", "third_call_extra_args": ""}, "variables_p": {"check_for_key": [["str", 0.9352797762153582], ["bool", 0.06472022378464173]], "dummy": [["mock.Mock", 1.0]], "first_call_extra_args": [["set", 0.29268637580830065], ["int", 0.205292333030901], ["List[str]", 0.2048144212666207], ["str", 0.20269816965078236], ["dict", 0.0945087002433953]], "fourth_call_extra_args": [["str", 0.7035638754915591], ["List[str]", 0.10197878958452766], ["Dict[str, str]", 0.09706237106433147]], "get_connection": [["int", 0.4144984724291761], ["Dict[str, Type[Any]]", 0.1072939344032067], ["List[str]", 0.10140371559730728], ["str", 0.09722140155173165], ["Tuple[float]", 0.09164701769598303], ["Optional[int]", 0.09129472777182879]], "mock_upload_file": [["str", 0.40907768365168745], ["unittesmock.MagicMock", 0.10198503130657871], ["Dict[str, Union[Any, Any]]", 0.09539413165713323], ["Dict[str, str]", 0.08896307887860117]], "mock_upload_fileobj": [["str", 0.5980553658251222], ["list", 0.11343702114685236], ["unittesmock.MagicMock", 0.09868540231303403], ["unittesmock.Mock", 0.08464162317011957]], "original": [["Pattern[str]", 0.2603511015910469], ["str", 0.13248276481378973], ["Dict[str, int]", 0.08885846729937451], ["Optional[str]", 0.08195371697768819]], "s3_hook": [["int", 0.39048008343904944], ["unittesmock.MagicMock", 0.09002826597539852]], "second_call_extra_args": [["set", 0.29268637580830065], ["int", 0.205292333030901], ["List[str]", 0.2048144212666207], ["str", 0.20269816965078236], ["dict", 0.0945087002433953]], "third_call_extra_args": [["set", 0.29268637580830065], ["int", 0.205292333030901], ["List[str]", 0.2048144212666207], ["str", 0.20269816965078236], ["dict", 0.0945087002433953]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1149, 4], [1154, 61]], "fn_var_ln": {"hook": [[1150, 8], [1150, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "get_bucket_tagging", "bucket_name"]]}, "name": "test_get_bucket_tagging_no_tags_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_get_bucket_tagging_no_tags_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.48843407053714877], ["List[str]", 0.10890832776525344], ["Dict[str, List[str]]", 0.10460163119100885]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1157, 4], [1161, 61]], "fn_var_ln": {"hook": [[1158, 8], [1158, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "get_bucket_tagging", "bucket_name"]]}, "name": "test_get_bucket_tagging_no_bucket_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_get_bucket_tagging_no_bucket_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.19435295074103826], ["List[str]", 0.11443883994303923], ["List[Optional[Any]]", 0.11382132670924429], ["pathlib.Path", 0.10246581619805141], ["Dict[str, Any]", 0.09735268927114187], ["str", 0.09317706083472395]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1164, 4], [1170, 75]], "fn_var_ln": {"hook": [[1165, 8], [1165, 12]], "tag_set": [[1167, 8], [1167, 15]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set"], ["hook", "get_bucket_tagging", "bucket_name", "tag_set"]], "tag_set": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set"], ["hook", "get_bucket_tagging", "bucket_name", "tag_set"]]}, "name": "test_put_bucket_tagging_with_valid_set", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_valid_set", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "tag_set": ""}, "variables_p": {"hook": [["str", 0.20880859199015628], ["Dict[str, Dict[str, Any]]", 0.09554285871507504], ["utils.sap_hana.ParsedSection", 0.09215253696666915]], "tag_set": [["Set[str]", 0.1854618319176528], ["Optional[str]", 0.12108063583638616], ["Dict[str, List[str]]", 0.10418710875285989], ["List[Union[Any, Any, Any, Any]]", 0.1005574219549904], ["Pattern[str]", 0.08934039999425522], ["str", 0.08924334340058693]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1173, 4], [1179, 104]], "fn_var_ln": {"hook": [[1174, 8], [1174, 12]], "tag_set": [[1176, 8], [1176, 15]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set"], ["hook", "get_bucket_tagging", "bucket_name"]], "tag_set": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set"]]}, "name": "test_put_bucket_tagging_with_dict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_dict", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "tag_set": ""}, "variables_p": {"hook": [["str", 0.20880859199015628], ["Dict[str, Dict[str, Any]]", 0.09554285871507504], ["utils.sap_hana.ParsedSection", 0.09215253696666915]], "tag_set": [["str", 0.6156183099467598], ["Type[Callable[..., None]]", 0.10211601686770243], ["Tuple[str, str]", 0.09731688728072947], ["List[str]", 0.09578987485338095]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1182, 4], [1190, 75]], "fn_var_ln": {"hook": [[1183, 8], [1183, 12]], "key": [[1186, 8], [1186, 11]], "tag_set": [[1185, 8], [1185, 15]], "value": [[1187, 8], [1187, 13]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "key", "key", "value", "value"], ["hook", "get_bucket_tagging", "bucket_name", "tag_set"]], "key": [["hook", "put_bucket_tagging", "bucket_name", "key", "key", "value", "value"]], "tag_set": [["hook", "get_bucket_tagging", "bucket_name", "tag_set"]], "value": [["hook", "put_bucket_tagging", "bucket_name", "key", "key", "value", "value"]]}, "name": "test_put_bucket_tagging_with_pair", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_pair", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "key": "", "tag_set": "", "value": ""}, "variables_p": {"hook": [["Dict[str, Union[Any, Any, Any]]", 0.20335828142788814], ["str", 0.19433779319553784], ["Tuple[Any, Any]", 0.12981450460199856], ["T", 0.09470086745589622]], "key": [["str", 0.9383544443639377]], "tag_set": [["Set[str]", 0.21777241869380531], ["str", 0.1779828167980758], ["Pattern[str]", 0.12243797598646428], ["List[str]", 0.10978883647251471], ["list", 0.09896103218676873], ["pathlib.Path", 0.09304049934219975], ["Iterable[str]", 0.09152637015109664], ["Dict[str, List[str]]", 0.08849005036907474]], "value": [["str", 0.28136562369885365], ["dict", 0.15304259581437885], ["List[str]", 0.10850813535505507], ["float", 0.10321109976345574], ["Dict[str, str]", 0.09444994692879181], ["Dict[str, Dict[str, Any]]", 0.08307979991961877], ["Dict[str, Tuple[Any, Any]]", 0.08292299763479172]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1193, 4], [1204, 33]], "fn_var_ln": {"expected": [[1196, 8], [1196, 16]], "hook": [[1194, 8], [1194, 12]], "key": [[1198, 8], [1198, 11]], "result": [[1202, 8], [1202, 14]], "tag_set": [[1197, 8], [1197, 15]], "value": [[1199, 8], [1199, 13]]}, "fn_var_occur": {"expected": [["result", "expected"]], "hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set", "key", "key", "value", "value"], ["result", "hook", "get_bucket_tagging", "bucket_name"]], "key": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set", "key", "key", "value", "value"]], "result": [["result", "hook", "get_bucket_tagging", "bucket_name"], ["len", "result"], ["result", "expected"]], "tag_set": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set", "key", "key", "value", "value"]], "value": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set", "key", "key", "value", "value"]]}, "name": "test_put_bucket_tagging_with_pair_and_set", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_pair_and_set", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "hook": "", "key": "", "result": "", "tag_set": "", "value": ""}, "variables_p": {"expected": [["List[Dict[str, Any]]", 0.33333333331256754], ["int", 0.33333333331256754], ["List[int]", 0.33333333331256754], ["list", 3.559847558721587e-11]], "hook": [["Dict[str, Dict[str, Any]]", 0.1111511712069429], ["Dict[str, Any]", 0.09233169759812423], ["str", 0.09025844964258817]], "key": [["str", 0.6991577739386413], ["Tuple[Type[str], Type[bytes]]", 0.11605236221849931], ["Set[str]", 0.09474452206821977]], "result": [["list", 0.2708050819645905], ["Set[str]", 0.2330038555017111], ["Mapping[str, Sequence[str]]", 0.10838141931692354], ["dict", 0.10610086820174099], ["tuple", 0.09844154067805783], ["MutableMapping[Any, Any]", 0.09351334063927512], ["Tuple[str]", 0.0897538936977008]], "tag_set": [["Set[str]", 0.3170241309760708], ["str", 0.2552304855242155], ["dict", 0.09614735644963844], ["List[Tuple[str, Any]]", 0.08505419011217824], ["Dict[str, str]", 0.07706093083200252]], "value": [["set", 0.2677633130556323], ["Dict[str, bool]", 0.22373096037101114], ["str", 0.19444662553500708], ["Dict[str, Any]", 0.12490246879355299], ["dict", 0.0928032002807956]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1207, 4], [1213, 70]], "fn_var_ln": {"hook": [[1208, 8], [1208, 12]], "key": [[1211, 8], [1211, 11]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "key", "key"]], "key": [["hook", "put_bucket_tagging", "bucket_name", "key", "key"]]}, "name": "test_put_bucket_tagging_with_key_but_no_value_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_key_but_no_value_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "key": ""}, "variables_p": {"hook": [["dict", 0.23017250845160314], ["Dict[str, Dict[str, Any]]", 0.11110036751378029]], "key": [["int", 0.3115827941512254], ["Dict[str, str]", 0.2654947425256047], ["list", 0.1160968370801397], ["List[str]", 0.10886714459254071], ["str", 0.08958481633708702]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1216, 4], [1221, 74]], "fn_var_ln": {"hook": [[1217, 8], [1217, 12]], "value": [[1219, 8], [1219, 13]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "value", "value"]], "value": [["hook", "put_bucket_tagging", "bucket_name", "value", "value"]]}, "name": "test_put_bucket_tagging_with_value_but_no_key_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_value_but_no_key_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "value": ""}, "variables_p": {"hook": [["Tuple[Literal, Literal, Literal]", 0.30444711526783913], ["dict", 0.13540501817529493], ["Union[Dict[str, Any], str]", 0.0847523798479443], ["str", 0.0847523798479443]], "value": [["Dict[str, Any]", 0.19977519061650156], ["dict", 0.1968545089196886], ["Set[str]", 0.1182335478231911], ["str", 0.10265728176809566], ["ChainMap[str, str]", 0.09461187890858672], ["bytes", 0.0908033357788043]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1224, 4], [1230, 87]], "fn_var_ln": {"hook": [[1225, 8], [1225, 12]], "key": [[1228, 8], [1228, 11]], "tag_set": [[1227, 8], [1227, 15]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "key", "key", "tag_set", "tag_set"]], "key": [["hook", "put_bucket_tagging", "bucket_name", "key", "key", "tag_set", "tag_set"]], "tag_set": [["hook", "put_bucket_tagging", "bucket_name", "key", "key", "tag_set", "tag_set"]]}, "name": "test_put_bucket_tagging_with_key_and_set_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_key_and_set_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "key": "", "tag_set": ""}, "variables_p": {"hook": [["dict", 0.18735331636930747], ["Dict[str, str]", 0.17895527044793783], ["Dict[str, Dict[str, Any]]", 0.10341947004307604]], "key": [["int", 0.28094911160911124], ["str", 0.1385644561038512], ["list", 0.11045786990608522], ["Final", 0.10120061684702479], ["Dict[str, int]", 0.09335161817549739], ["Type[Dict[str, Any]]", 0.0862299419561396], ["List[str]", 0.08268966218262738]], "tag_set": [["Dict[str, str]", 0.598175506949904], ["Set[str]", 0.20259476637054893], ["Pattern[str]", 0.1027032300728463], ["Tuple[Literal, Literal, Literal]", 0.09652649660670073]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1233, 4], [1239, 91]], "fn_var_ln": {"hook": [[1234, 8], [1234, 12]], "tag_set": [[1236, 8], [1236, 15]], "value": [[1237, 8], [1237, 13]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "value", "value", "tag_set", "tag_set"]], "tag_set": [["hook", "put_bucket_tagging", "bucket_name", "value", "value", "tag_set", "tag_set"]], "value": [["hook", "put_bucket_tagging", "bucket_name", "value", "value", "tag_set", "tag_set"]]}, "name": "test_put_bucket_tagging_with_value_and_set_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_with_value_and_set_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "tag_set": "", "value": ""}, "variables_p": {"hook": [["Tuple[Literal, Literal, Literal]", 0.21945815477715996], ["dict", 0.1536683424480926], ["Union[Dict[str, Any], str]", 0.09839682122537376], ["str", 0.09839682122537376]], "tag_set": [["str", 0.17987863064805867], ["Dict[str, bool]", 0.1088487418885837], ["int", 0.09906856219819066], ["Dict[str, str]", 0.09601909680772622], ["list", 0.09010635244793085], ["List[str]", 0.08892472016070495]], "value": [["Set[str]", 0.41278399955348827], ["list", 0.10819605964062519], ["Dict[str, Dict[str, str]]", 0.10099725978227907], ["Dict[str, str]", 0.09808633024904011], ["Optional[str]", 0.09380437518562744], ["Union[int, str]", 0.08992221316988253]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1242, 4], [1255, 36]], "fn_var_ln": {"hook": [[1243, 8], [1243, 12]], "initial_tag_set": [[1245, 8], [1245, 23]], "new_tag_set": [[1250, 8], [1250, 19]], "result": [[1253, 8], [1253, 14]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "tag_set", "initial_tag_set"], ["len", "hook", "get_bucket_tagging", "bucket_name"], ["hook", "get_bucket_tagging", "bucket_name", "initial_tag_set"], ["hook", "put_bucket_tagging", "bucket_name", "tag_set", "new_tag_set"], ["result", "hook", "get_bucket_tagging", "bucket_name"]], "initial_tag_set": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "initial_tag_set"], ["hook", "get_bucket_tagging", "bucket_name", "initial_tag_set"]], "new_tag_set": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "new_tag_set"], ["result", "new_tag_set"]], "result": [["result", "hook", "get_bucket_tagging", "bucket_name"], ["len", "result"], ["result", "new_tag_set"]]}, "name": "test_put_bucket_tagging_when_tags_exist_overwrites", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_put_bucket_tagging_when_tags_exist_overwrites", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "initial_tag_set": "", "new_tag_set": "", "result": ""}, "variables_p": {"hook": [["dict", 0.1924552555892636], ["Anaconda3.Lib.site-packages.conda.models.match_spec.MatchSpec", 0.095877928138018], ["str", 0.0913631418065904]], "initial_tag_set": [["str", 0.2866429132768454], ["Set[str]", 0.10867310304205592], ["Dict[str, Union[Any, Any]]", 0.09203045361093068], ["frozenset[Any]", 0.08139995585925436], ["List[str]", 0.08116105427141114]], "new_tag_set": [["str", 0.3000924075433067], ["Union[Literal, Literal]", 0.11701174347565148], ["List[str]", 0.10522752625869952], ["Set[str]", 0.09562283139873926], ["list", 0.09105394392022749], ["Dict[str, List[str]]", 0.08888360521103049]], "result": [["MutableMapping[Any, Any]", 0.40375327110567594], ["List[str]", 0.29988746956986356], ["Dict[str, Tuple[Any, Any]]", 0.10319160421737324], ["list", 0.09963665937650829], ["Set[str]", 0.09353099573057899]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1258, 4], [1267, 61]], "fn_var_ln": {"hook": [[1259, 8], [1259, 12]], "tag_set": [[1261, 8], [1261, 15]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set"], ["hook", "get_bucket_tagging", "bucket_name"], ["hook", "delete_bucket_tagging", "bucket_name"], ["hook", "get_bucket_tagging", "bucket_name"]], "tag_set": [["hook", "put_bucket_tagging", "bucket_name", "tag_set", "tag_set"]]}, "name": "test_delete_bucket_tagging", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_delete_bucket_tagging", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "tag_set": ""}, "variables_p": {"hook": [["str", 0.20880859199015628], ["Dict[str, Dict[str, Any]]", 0.09554285871507504], ["utils.sap_hana.ParsedSection", 0.09215253696666915]], "tag_set": [["str", 0.6156183099467598], ["Type[Callable[..., None]]", 0.10211601686770243], ["Tuple[str, str]", 0.09731688728072947], ["List[str]", 0.09578987485338095]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1270, 4], [1277, 61]], "fn_var_ln": {"hook": [[1271, 8], [1271, 12]]}, "fn_var_occur": {"hook": [["hook", "S3Hook"], ["hook", "create_bucket", "bucket_name"], ["hook", "delete_bucket_tagging", "bucket_name"], ["hook", "get_bucket_tagging", "bucket_name"]]}, "name": "test_delete_bucket_tagging_with_no_tags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAwsS3Hook.test_delete_bucket_tagging_with_no_tags", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.37727987484123204], ["Sequence[str]", 0.11880683097942968]]}}], "name": "TestAwsS3Hook", "q_name": "TestAwsS3Hook", "variables": {}, "variables_p": {}}, {"cls_lc": [[1331, 8], [1335, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1334, 12], [1335, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "do_something", "params": {"bucket_name": "", "key": "", "self": ""}, "params_descr": {"bucket_name": "", "key": "", "self": ""}, "params_occur": {"bucket_name": [["bucket_name", "key"]], "key": [["key", "key_kind"], ["kwargs", "key"], ["kwargs", "key"], ["bucket_name", "key"]], "self": []}, "params_p": {"args": [], "bucket_name": [["str", 0.9311122092130096], ["List[str]", 0.0688877907869905]], "key": [["Dict[str, str]", 0.6133623247410717], ["str", 0.17981642699705297], ["Dict[int, Any]", 0.11178270997609865], ["Dict[Any, Union[Any, Any]]", 0.09503853828577684]], "kwargs": [], "self": []}, "q_name": "test_unify_and_provide_bucket_name_combination.<locals>.MyHook.do_something", "ret_exprs": ["return bucket_name, key"], "ret_type": "", "ret_type_p": [["bool", 0.1766475501991219], ["OrderedDict", 0.11598378658248244], ["dict", 0.11293490815698723], ["Optional[Union[Any, str]]", 0.09584789869590774], ["Optional[zerver.models.Realm]", 0.09288107275323639]], "variables": {}, "variables_p": {}}], "name": "MyHook", "q_name": "test_unify_and_provide_bucket_name_combination.<locals>.MyHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[1341, 12], [1345, 43]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1344, 16], [1345, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "do_something", "params": {"bucket_name": "", "key": "", "self": ""}, "params_descr": {"bucket_name": "", "key": "", "self": ""}, "params_occur": {"bucket_name": [["bucket_name", "key"]], "key": [["bucket_name", "key"]], "self": []}, "params_p": {"args": [], "bucket_name": [["str", 0.9311122092130096], ["List[str]", 0.0688877907869905]], "key": [["str", 0.9311122092130096], ["List[str]", 0.0688877907869905]], "kwargs": [], "self": []}, "q_name": "test_unify_and_provide_bucket_name_combination.<locals>.MyHook.do_something", "ret_exprs": ["return bucket_name, key"], "ret_type": "", "ret_type_p": [["bool", 0.1766475501991219], ["OrderedDict", 0.11598378658248244], ["dict", 0.11293490815698723], ["Optional[Union[Any, str]]", 0.09584789869590774], ["Optional[zerver.models.Realm]", 0.09288107275323639]], "variables": {}, "variables_p": {}}], "name": "MyHook", "q_name": "test_unify_and_provide_bucket_name_combination.<locals>.MyHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 0], [49, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mocked_s3_res", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "mocked_s3_res", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[53, 0], [56, 17]], "fn_var_ln": {"bucket": [[54, 4], [54, 10]]}, "fn_var_occur": {"bucket": [["mocked_s3_res", "create_bucket", "Bucket", "bucket"]]}, "name": "s3_bucket", "params": {"mocked_s3_res": ""}, "params_descr": {"mocked_s3_res": ""}, "params_occur": {"mocked_s3_res": [["mocked_s3_res", "create_bucket", "Bucket", "bucket"]]}, "params_p": {"args": [], "kwargs": [], "mocked_s3_res": [["str", 0.3917818401688038], ["dict", 0.2159024749135048], ["bool", 0.1008964851009231]]}, "q_name": "s3_bucket", "ret_exprs": ["return bucket"], "ret_type": "", "ret_type_p": [["str", 0.6867567954502993], ["bool", 0.11583530317985333], ["int", 0.10825768435041012], ["Optional[str]", 0.08915021701943698]], "variables": {"bucket": ""}, "variables_p": {"bucket": [["str", 0.6162289331821003], ["int", 0.1980661740896854], ["Optional[str]", 0.09481087905668116], ["Dict[str, str]", 0.09089401367153317]]}}, {"docstring": {"func": "Verify what is the outcome when the unify_bucket_name_and_key and provide_bucket_name", "long_descr": "decorators are combined.\n\nThe one case (at least in this test) where the order makes a difference is when\nuser provides a full s3 key, and also has a connection with a bucket defined,\nand does not provide a bucket in the method call.  In this case, if we unify\nfirst, then we (desirably) get the bucket from the key.  If we provide bucket first,\nsomething undesirable happens.  The bucket from the connection is used, which means\nwe don't respect the full key provided. Further, the full key is not made relative,\nwhich would cause the actual request to fail. For this reason we want to put unify\nfirst.", "ret": null}, "fn_lc": [[1302, 0], [1349, 56]], "fn_var_ln": {"c": [[1321, 8], [1321, 9]], "hook": [[1348, 4], [1348, 8]], "key": [[1322, 4], [1322, 7]], "kwargs": [[1326, 8], [1326, 14]], "return_value": [[1328, 4], [1328, 26]]}, "fn_var_occur": {"c": [], "hook": [["hook", "MyHook"], ["list", "hook", "do_something", "kwargs", "expected"]], "key": [], "kwargs": [["list", "hook", "do_something", "kwargs", "expected"]], "return_value": []}, "name": "test_unify_and_provide_bucket_name_combination", "params": {"caplog": "", "expected": "", "has_bucket": "", "has_conn": "", "key_kind": "", "mock_base": "", "precedence": ""}, "params_descr": {"caplog": "", "expected": "", "has_bucket": "", "has_conn": "", "key_kind": "", "mock_base": "", "precedence": ""}, "params_occur": {"caplog": [["caplog", "records", "message"]], "expected": [["list", "hook", "do_something", "kwargs", "expected"]], "has_bucket": [], "has_conn": [], "key_kind": [], "mock_base": [], "precedence": []}, "params_p": {"args": [], "caplog": [["str", 0.09855496938503852], ["unittesmock.MagicMock", 0.08497888765023447]], "expected": [["bool", 0.11757648474409622], ["Dict[str, Sequence[Any]]", 0.090523704755714], ["Iterable[Tuple[int, int]]", 0.09048865294770608]], "has_bucket": [["mock.MagicMock", 0.18413723343079624], ["Callable[[], int]", 0.09034436549638371]], "has_conn": [["mock.MagicMock", 0.18413723343079624], ["Callable[[], int]", 0.09034436549638371]], "key_kind": [["mock.MagicMock", 0.18413723343079624], ["Callable[[], int]", 0.09034436549638371]], "kwargs": [], "mock_base": [["mock.MagicMock", 0.18413723343079624], ["Callable[[], int]", 0.09034436549638371]], "precedence": [["mock.MagicMock", 0.18413723343079624], ["Callable[[], int]", 0.09034436549638371]]}, "q_name": "test_unify_and_provide_bucket_name_combination", "ret_exprs": [], "ret_type": "", "variables": {"c": "", "hook": "", "key": "", "kwargs": "", "return_value": ""}, "variables_p": {"c": [["int", 0.30000000000000004], ["str", 0.2], ["unittesmock.MagicMock", 0.1], ["float", 0.1]], "hook": [["list", 0.41032101488179284], ["int", 0.21024002165437228], ["str", 0.19025312597594454], ["Generator[int, None, None]", 0.09512656298797227]], "key": [["str", 0.5], ["int", 0.30000000000000004], ["Optional[str]", 0.1], ["Type[x509_pki.models.Certificate]", 0.1]], "kwargs": [["int", 0.41594718534905856], ["list", 0.19466848137835047], ["Set[str]", 0.11846306634564387], ["Tuple[Any, None]", 0.09172976661510203], ["unittesmock.Mock", 0.09133617211939647], ["Callable(hash)[[object], int]", 0.08785532819244858]], "return_value": [["str", 0.49999999999999994], ["list", 0.19999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1366, 0], [1382, 56]], "fn_var_ln": {"c": [[1370, 8], [1370, 9]], "get_conn": [[1380, 4], [1380, 17]], "hook": [[1378, 4], [1378, 8]], "key": [[1372, 4], [1372, 7]], "kwargs": [[1376, 8], [1376, 14]], "m": [[1379, 4], [1379, 5]], "return_value": [[1371, 4], [1371, 26]]}, "fn_var_occur": {"c": [["c", "Connection", "schema"], ["c", "Connection", "schema", "None"], ["mock_conn", "return_value", "c"]], "get_conn": [["hook", "get_conn", "m"]], "hook": [["hook", "S3Hook"], ["hook", "get_conn", "m"], ["hook", "head_object", "kwargs"]], "key": [["key", "key_kind"], ["kwargs", "key"], ["kwargs", "key"]], "kwargs": [["kwargs", "key"], ["kwargs", "key"], ["hook", "head_object", "kwargs"]], "m": [["m", "MagicMock"], ["hook", "get_conn", "m"], ["list", "m", "mock_calls", "values", "expected"]], "return_value": [["mock_conn", "return_value", "c"]]}, "name": "test_s3_head_object_decorated_behavior", "params": {"expected": "", "has_bucket": "", "has_conn": "", "key_kind": "", "mock_conn": ""}, "params_descr": {"expected": "", "has_bucket": "", "has_conn": "", "key_kind": "", "mock_conn": ""}, "params_occur": {"expected": [["list", "m", "mock_calls", "values", "expected"]], "has_bucket": [], "has_conn": [], "key_kind": [["key", "key_kind"]], "mock_conn": [["mock_conn", "return_value", "c"]]}, "params_p": {"args": [], "expected": [["bool", 0.24578577486776484], ["int", 0.12289288743388242], ["raiden.utils.Secret", 0.10583093859129174], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.08472499670502523]], "has_bucket": [["bool", 0.5369513614435855], ["List[List[int]]", 0.09344993593909635]], "has_conn": [["bool", 0.5369513614435855], ["List[List[int]]", 0.09344993593909635]], "key_kind": [["str", 0.4109291960183549]], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.44958599696035023], ["unittesmock.Mock", 0.1970017567848783]]}, "q_name": "test_s3_head_object_decorated_behavior", "ret_exprs": [], "ret_type": "", "variables": {"c": "", "get_conn": "", "hook": "", "key": "", "kwargs": "", "m": "", "return_value": ""}, "variables_p": {"c": [["int", 0.36549857823374327], ["str", 0.10279398706739064], ["Optional[str]", 0.0924631701006673], ["List[Tuple[int, str]]", 0.09184085380749786]], "get_conn": [["Dict[str, str]", 0.20329878242841004], ["BoundMethod[Callable(datetime.datetime.now)[Any, Any], Type[datetime.datetime]]", 0.14263170584967083], ["int", 0.10217055151363451], ["Dict[str, Any]", 0.10164939121420502], ["dict", 0.08380471279789989], ["Type[Dict[str, Any]]", 0.0831986545302721], ["bool", 0.07735664228687465]], "hook": [["str", 0.28199062894907645], ["List[Union[Any, Any]]", 0.11361729717494842], ["dict", 0.09732952912609172]], "key": [["str", 0.2602202946387599], ["KeysView[int]", 0.09543101576737335], ["Set[str]", 0.08562218908809179]], "kwargs": [["Union[List[Any], List[str]]", 0.16912579798016272], ["Dict[str, str]", 0.148118435403912], ["dict", 0.12324633818198608], ["Dict[Union[int, str], Union[int, str]]", 0.11055865043632335], ["List[str]", 0.09883273185691759], ["list", 0.08667771996451276], ["str", 0.0834912143127642]], "m": [["mock.Mock", 0.5220275038699673], ["mode.utils.mocks.Mock", 0.28460399632099825], ["unittesmock.Mock", 0.10381683067372818], ["bytes", 0.08955166913530614]], "return_value": [["unittesmock.Mock", 0.3250385305217157], ["int", 0.2854560711354669], ["str", 0.22297769573804777], ["Dict[str, Dict[str, Any]]", 0.09353613298236951], ["List[Dict[str, str]]", 0.07299156962240015]]}}, {"docstring": {"func": "If we unify first, then we (desirably) get the bucket from the key.  If we provide bucket first,", "long_descr": "something undesirable happens.  The bucket from the connection is used, which means\nwe don't respect the full key provided. Further, the full key is not made relative,\nwhich would cause the actual request to fail. For this reason we want to put unify\nfirst.", "ret": null}, "fn_lc": [[1385, 0], [1396, 105]], "fn_var_ln": {"code": [[1393, 4], [1393, 8]], "matches": [[1394, 4], [1394, 11]]}, "fn_var_occur": {"code": [["code", "inspect", "getsource", "S3Hook"], ["matches", "re", "findall", "code", "re", "MULTILINE"]], "matches": [["matches", "re", "findall", "code", "re", "MULTILINE"]]}, "name": "test_unify_and_provide_ordered_properly", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_unify_and_provide_ordered_properly", "ret_exprs": [], "ret_type": "", "variables": {"code": "", "matches": ""}, "variables_p": {"code": [["str", 0.28591791877190936], ["Dict[bytes, str]", 0.16791506396579908], ["list", 0.11183634894792353], ["int", 0.08757765466186788], ["Dict[int, Any]", 0.08754489031686065], ["Pattern[str]", 0.08202048512120741]], "matches": [["int", 0.12248854368533804], ["Pattern[bytes]", 0.09235584119936095], ["requests.models.Response", 0.08729461536896128], ["str", 0.08688032690041342], ["dict", 0.08567911483621488], ["list", 0.08301507790647722]]}}], "imports": ["__future__", "annotations", "gzip", "gz", "inspect", "os", "re", "tempfile", "unittest", "pathlib", "Path", "unittest", "mock", "mock", "async_mock", "unittest", "mock", "MagicMock", "Mock", "patch", "boto3", "pytest", "botocore", "exceptions", "ClientError", "moto", "mock_s3", "airflow", "exceptions", "AirflowException", "airflow", "models", "Connection", "airflow", "providers", "amazon", "aws", "exceptions", "S3HookUriParseFailure", "airflow", "providers", "amazon", "aws", "hooks", "s3", "S3Hook", "provide_bucket_name", "unify_bucket_name_and_key", "airflow", "utils", "timezone", "datetime"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 459}, "session_id": "5QOsfLCBiGyIDLmhsAaHrN4xCaB3jAx3_ooigwdxp0s", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}