{"error": null, "response": {"classes": [{"cls_lc": [[31, 0], [300, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[32, 4], [43, 90]], "fn_var_ln": {"custom_waiters": [[35, 8], [35, 22]], "hook": [[33, 8], [33, 12]], "official_waiters": [[34, 8], [34, 24]]}, "fn_var_occur": {"custom_waiters": [["sorted", "hook", "list_waiters", "sorted", "official_waiters", "custom_waiters"]], "hook": [["hook", "EmrHook", "aws_conn_id", "None"], ["official_waiters", "hook", "conn", "waiter_names"], ["sorted", "hook", "list_waiters", "sorted", "official_waiters", "custom_waiters"]], "official_waiters": [["official_waiters", "hook", "conn", "waiter_names"], ["sorted", "hook", "list_waiters", "sorted", "official_waiters", "custom_waiters"]]}, "name": "test_service_waiters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_service_waiters", "ret_exprs": [], "ret_type": "", "variables": {"custom_waiters": "", "hook": "", "official_waiters": ""}, "variables_p": {"custom_waiters": [], "hook": [], "official_waiters": [["dict", 0.18732572596325237], ["List[Union[Any, Any, Any, Any]]", 0.1393377805919619], ["Dict[Tuple[Any, str], str]", 0.11780009259323525], ["bool", 0.09715502090273416], ["Dict[str, Any]", 0.08879796349907457]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [48, 58]], "fn_var_ln": {"hook": [[47, 8], [47, 12]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "region_name"], ["hook", "get_conn", "list_clusters", "None"]]}, "name": "test_get_conn_returns_a_boto3_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_get_conn_returns_a_boto3_connection", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.48600522506386745], ["Dict[str, str]", 0.13382490339023922]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [59, 82]], "fn_var_ln": {"client": [[52, 8], [52, 14]], "cluster": [[55, 8], [55, 15]], "hook": [[54, 8], [54, 12]]}, "fn_var_occur": {"client": [["client", "boto3", "client", "region_name"], ["client", "list_clusters", "cluster"]], "cluster": [["cluster", "hook", "create_job_flow", "False"], ["client", "list_clusters", "cluster"]], "hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id", "region_name"], ["cluster", "hook", "create_job_flow", "False"]]}, "name": "test_create_job_flow_uses_the_emr_config_to_create_a_cluster", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_create_job_flow_uses_the_emr_config_to_create_a_cluster", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "cluster": "", "hook": ""}, "variables_p": {"client": [["Generator[Any, None, None]", 0.2708342947705197]], "cluster": [["str", 0.19583962281854395], ["List[str]", 0.1873295538213589], ["dict", 0.11566814670695903], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0894279254516407]], "hook": [["str", 0.6229674654149835], ["List[int]", 0.10089571220584459], ["Union[Literal, str]", 0.09162019741612973], ["List[str]", 0.08315711966677322]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [83, 55]], "fn_var_ln": {"cluster": [[65, 8], [65, 15]], "hook": [[64, 8], [64, 12]], "response": [[79, 8], [79, 16]], "steps": [[68, 8], [68, 13]]}, "fn_var_occur": {"cluster": [["cluster", "hook", "create_job_flow", "False"], ["response", "hook", "add_job_flow_steps", "job_flow_id", "cluster", "steps", "steps"]], "hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id", "region_name"], ["cluster", "hook", "create_job_flow", "False"], ["response", "hook", "add_job_flow_steps", "job_flow_id", "cluster", "steps", "steps"]], "response": [["response", "hook", "add_job_flow_steps", "job_flow_id", "cluster", "steps", "steps"], ["len", "response", "num_steps"]], "steps": [["steps", "i", "i", "range", "num_steps"], ["response", "hook", "add_job_flow_steps", "job_flow_id", "cluster", "steps", "steps"]]}, "name": "test_add_job_flow_steps_one_step", "params": {"num_steps": "", "self": ""}, "params_descr": {"num_steps": "", "self": ""}, "params_occur": {"num_steps": [["steps", "i", "i", "range", "num_steps"], ["len", "response", "num_steps"]], "self": []}, "params_p": {"args": [], "kwargs": [], "num_steps": [["int", 0.46874549886015043], ["Sequence[int]", 0.09673643884301653]], "self": []}, "q_name": "TestEmrHook.test_add_job_flow_steps_one_step", "ret_exprs": [], "ret_type": "", "variables": {"cluster": "", "hook": "", "response": "", "steps": ""}, "variables_p": {"cluster": [["str", 0.28420657737697813], ["Dict[str, str]", 0.1133363223870157], ["int", 0.11189941484239138], ["float", 0.10446010632430487], ["list", 0.09630097714155231], ["Tuple[Any, Any]", 0.08650717808153138]], "hook": [["str", 0.3892244782725368], ["int", 0.10013489702210329], ["List[str]", 0.09885301823379382]], "response": [["str", 0.24164457118160043], ["Dict[str, Union[Any, bool, str]]", 0.1848138835140745], ["bytes", 0.11901930142208675], ["dict", 0.08448712249581657]], "steps": [["int", 0.5534694049245288], ["float", 0.19080546621520833], ["dict", 0.08494997586567757]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [114, 69]], "fn_var_ln": {"hook": [[87, 8], [87, 12]], "steps": [[101, 8], [101, 13]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id", "region_name"], ["hook", "create_job_flow", "False"], ["hook", "add_job_flow_steps", "job_flow_id", "steps", "steps", "wait_for_completion", "True"]], "steps": [["hook", "add_job_flow_steps", "job_flow_id", "steps", "steps", "wait_for_completion", "True"]]}, "name": "test_add_job_flow_steps_wait_for_completion", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "run_job_flow", "return_value"], ["mock_conn", "add_job_flow_steps", "return_value"], ["mock_conn", "get_waiter", "assert_called_once_with"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestEmrHook.test_add_job_flow_steps_wait_for_completion", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "steps": ""}, "variables_p": {"hook": [["str", 0.30541610428225097], ["Union[Literal, str]", 0.0969794282321128], ["Dict[Any, str]", 0.09323216675671867], ["List[int]", 0.08942460272083969]], "steps": [["str", 0.4667297431954298], ["int", 0.0872757761178388]]}}, {"docstring": {"func": "Test that we can add extra arguments to the launch call.", "long_descr": "This is useful for when AWS add new options, such as\n\"SecurityConfiguration\" so that we don't have to change our code", "ret": null}, "fn_lc": [[117, 4], [135, 54]], "fn_var_ln": {"client": [[124, 8], [124, 14]], "cluster": [[132, 8], [132, 15]], "hook": [[126, 8], [126, 12]]}, "fn_var_occur": {"client": [["client", "boto3", "client", "region_name"], ["cluster", "client", "describe_cluster", "ClusterId", "cluster"]], "cluster": [["cluster", "hook", "create_job_flow"], ["cluster", "client", "describe_cluster", "ClusterId", "cluster"]], "hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id"], ["cluster", "hook", "create_job_flow"]]}, "name": "test_create_job_flow_extra_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_create_job_flow_extra_args", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "cluster": "", "hook": ""}, "variables_p": {"client": [["Generator[Any, None, None]", 0.40221387869553016], ["bool", 0.10524781096140907], ["str", 0.09551120863136467]], "cluster": [["str", 0.8139009906796173], ["Dict[int, Dict[str, Any]]", 0.1860990093203827]], "hook": [["int", 0.6351983362921474], ["bytes", 0.07872756689959598]]}}, {"docstring": {"func": "Test empty ``emr_conn_id``.", "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [146, 71]], "fn_var_ln": {"hook": [[144, 8], [144, 12]], "job_flow_overrides": [[142, 8], [142, 26]], "mock_run_job_flow": [[140, 8], [140, 25]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id", "None"], ["hook", "create_job_flow", "job_flow_overrides"]], "job_flow_overrides": [["hook", "create_job_flow", "job_flow_overrides"], ["mock_run_job_flow", "assert_called_once_with", "job_flow_overrides"]], "mock_run_job_flow": [["mock_run_job_flow", "mock", "MagicMock"], ["mock_boto3_client", "return_value", "run_job_flow", "mock_run_job_flow"], ["mock_run_job_flow", "assert_called_once_with", "job_flow_overrides"]]}, "name": "test_empty_emr_conn_id", "params": {"mock_boto3_client": "", "self": ""}, "params_descr": {"mock_boto3_client": "", "self": ""}, "params_occur": {"mock_boto3_client": [["mock_boto3_client", "return_value", "run_job_flow", "mock_run_job_flow"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_boto3_client": [], "self": []}, "q_name": "TestEmrHook.test_empty_emr_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "job_flow_overrides": "", "mock_run_job_flow": ""}, "variables_p": {"hook": [["int", 0.4928299312853759], ["dict", 0.11647080719692507], ["List[dict]", 0.11447398872437121], ["bool", 0.08563651494693472]], "job_flow_overrides": [["str", 0.8131958445569096], ["Dict[str, str]", 0.09737297602718233], ["int", 0.08943117941590802]], "mock_run_job_flow": []}}, {"docstring": {"func": "Test not exists ``emr_conn_id``.", "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [159, 71]], "fn_var_ln": {"hook": [[155, 8], [155, 12]], "job_flow_overrides": [[153, 8], [153, 26]], "mock_run_job_flow": [[151, 8], [151, 25]], "warning_message": [[156, 8], [156, 23]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id"], ["hook", "create_job_flow", "job_flow_overrides"]], "job_flow_overrides": [["hook", "create_job_flow", "job_flow_overrides"], ["mock_run_job_flow", "assert_called_once_with", "job_flow_overrides"]], "mock_run_job_flow": [["mock_run_job_flow", "mock", "MagicMock"], ["mock_boto3_client", "return_value", "run_job_flow", "mock_run_job_flow"], ["mock_run_job_flow", "assert_called_once_with", "job_flow_overrides"]], "warning_message": [["pytest", "warns", "UserWarning", "match", "warning_message"]]}, "name": "test_missing_emr_conn_id", "params": {"mock_boto3_client": "", "self": ""}, "params_descr": {"mock_boto3_client": "", "self": ""}, "params_occur": {"mock_boto3_client": [["mock_boto3_client", "return_value", "run_job_flow", "mock_run_job_flow"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_boto3_client": [], "self": []}, "q_name": "TestEmrHook.test_missing_emr_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "job_flow_overrides": "", "mock_run_job_flow": "", "warning_message": ""}, "variables_p": {"hook": [["int", 0.9105513299095238]], "job_flow_overrides": [["str", 0.8131958445569096], ["Dict[str, str]", 0.09737297602718233], ["int", 0.08943117941590802]], "mock_run_job_flow": [], "warning_message": [["str", 0.454658800522061], ["List[str]", 0.2788456985013123], ["int", 0.08710269649984069]]}}, {"docstring": {"func": "Test exists ``emr_conn_id`` have unexpected ``conn_type``.", "long_descr": null, "ret": null}, "fn_lc": [[162, 4], [176, 75]], "fn_var_ln": {"hook": [[169, 12], [169, 16]], "job_flow_overrides": [[166, 8], [166, 26]], "mock_run_job_flow": [[164, 8], [164, 25]], "warning_message": [[170, 12], [170, 27]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id"], ["hook", "create_job_flow", "job_flow_overrides"]], "job_flow_overrides": [["hook", "create_job_flow", "job_flow_overrides"], ["mock_run_job_flow", "assert_called_once_with", "job_flow_overrides"]], "mock_run_job_flow": [["mock_run_job_flow", "mock", "MagicMock"], ["mock_boto3_client", "return_value", "run_job_flow", "mock_run_job_flow"], ["mock_run_job_flow", "assert_called_once_with", "job_flow_overrides"]], "warning_message": [["pytest", "warns", "UserWarning", "match", "warning_message"]]}, "name": "test_emr_conn_id_wrong_conn_type", "params": {"mock_boto3_client": "", "self": ""}, "params_descr": {"mock_boto3_client": "", "self": ""}, "params_occur": {"mock_boto3_client": [["mock_boto3_client", "return_value", "run_job_flow", "mock_run_job_flow"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_boto3_client": [], "self": []}, "q_name": "TestEmrHook.test_emr_conn_id_wrong_conn_type", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "job_flow_overrides": "", "mock_run_job_flow": "", "warning_message": ""}, "variables_p": {"hook": [["int", 0.9105513299095238]], "job_flow_overrides": [["str", 0.8131958445569096], ["Dict[str, str]", 0.09737297602718233], ["int", 0.08943117941590802]], "mock_run_job_flow": [], "warning_message": [["str", 0.454658800522061], ["List[str]", 0.2788456985013123], ["int", 0.08710269649984069]]}}, {"docstring": {"func": "Test that ``EmrHook`` always return False state.", "long_descr": null, "ret": null}, "fn_lc": [[180, 4], [185, 99]], "fn_var_ln": {"hook": [[182, 8], [182, 12]], "message": [[183, 16], [183, 23]], "result": [[183, 8], [183, 14]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "aws_conn_id", "emr_conn_id", "emr_conn_id"], ["result", "message", "hook", "test_connection"]], "message": [["result", "message", "hook", "test_connection"], ["message", "startswith"]], "result": [["result", "message", "hook", "test_connection"]]}, "name": "test_emr_connection", "params": {"aws_conn_id": "", "emr_conn_id": "", "self": ""}, "params_descr": {"aws_conn_id": "", "emr_conn_id": "", "self": ""}, "params_occur": {"aws_conn_id": [["hook", "EmrHook", "aws_conn_id", "aws_conn_id", "emr_conn_id", "emr_conn_id"]], "emr_conn_id": [["hook", "EmrHook", "aws_conn_id", "aws_conn_id", "emr_conn_id", "emr_conn_id"]], "self": []}, "params_p": {"args": [], "aws_conn_id": [["int", 0.4274871419802325], ["List[Dict[str, Any]]", 0.1317555973667268], ["str", 0.09072043927688798], ["bytearray", 0.0896724244871382]], "emr_conn_id": [["int", 0.4274871419802325], ["List[Dict[str, Any]]", 0.1317555973667268], ["str", 0.09072043927688798], ["bytearray", 0.0896724244871382]], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_emr_connection", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "message": "", "result": ""}, "variables_p": {"hook": [["str", 0.5081679991168851], ["Dict[int, Dict[str, Any]]", 0.19359876444224816], ["int", 0.19068856448249588]], "message": [["str", 0.48575039709577594], ["Pattern[str]", 0.2940309788878546], ["int", 0.1355276617590709], ["Dict[str, Union[Any, Any]]", 0.08469096225729866]], "result": [["dict", 0.1094127143549132], ["str", 0.0961825544228088]]}}, {"docstring": {"func": "Test that we can resolve cluster id by cluster name.", "long_descr": null, "ret": null}, "fn_lc": [[188, 4], [206, 31]], "fn_var_ln": {"hook": [[192, 8], [192, 12]], "job_flow": [[194, 8], [194, 16]], "job_flow_id": [[198, 8], [198, 19]], "matching_cluster": [[200, 8], [200, 24]], "no_match": [[204, 8], [204, 16]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id"], ["job_flow", "hook", "create_job_flow", "True"], ["matching_cluster", "hook", "get_cluster_id_by_name"], ["no_match", "hook", "get_cluster_id_by_name"]], "job_flow": [["job_flow", "hook", "create_job_flow", "True"], ["job_flow_id", "job_flow"]], "job_flow_id": [["job_flow_id", "job_flow"], ["matching_cluster", "job_flow_id"]], "matching_cluster": [["matching_cluster", "hook", "get_cluster_id_by_name"], ["matching_cluster", "job_flow_id"]], "no_match": [["no_match", "hook", "get_cluster_id_by_name"], ["no_match", "None"]]}, "name": "test_get_cluster_id_by_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_get_cluster_id_by_name", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "job_flow": "", "job_flow_id": "", "matching_cluster": "", "no_match": ""}, "variables_p": {"hook": [["str", 0.3874443393017873]], "job_flow": [["str", 0.900308823357066]], "job_flow_id": [["int", 0.25829103111691276], ["Pattern[Any]", 0.14760996496432627], ["List[str]", 0.1229527324061572], ["str", 0.09587547389633959]], "matching_cluster": [["Dict[str, int]", 0.3914510721549119], ["str", 0.21747424837639912], ["int", 0.10313297452189196], ["Type[bytes]", 0.10128531482900444]], "no_match": [["str", 0.23761056461341723], ["list", 0.22668092180015437], ["Type[int]", 0.1751361116821897], ["Dict[str, Any]", 0.10046197710347858], ["List[Dict[str, Any]]", 0.07828081217447305]]}}, {"docstring": {"func": "Test that we get an exception when there are duplicate clusters", "long_descr": null, "ret": null}, "fn_lc": [[209, 4], [220, 96]], "fn_var_ln": {"hook": [[213, 8], [213, 12]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id"], ["hook", "create_job_flow", "True"], ["hook", "create_job_flow", "True"], ["hook", "get_cluster_id_by_name"]]}, "name": "test_get_cluster_id_by_name_duplicate", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_get_cluster_id_by_name_duplicate", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["Dict[str, Union[float, str]]", 0.08663425703809964]]}}, {"docstring": {"func": "Test that we can resolve cluster id by cluster name when there are", "long_descr": "enough clusters to trigger pagination", "ret": null}, "fn_lc": [[223, 4], [252, 66]], "fn_var_ln": {"client": [[237, 8], [237, 14]], "hook": [[228, 8], [228, 12]], "response_marker": [[238, 8], [238, 23]], "second_page_cluster": [[241, 8], [241, 27]], "second_page_cluster_id": [[246, 8], [246, 30]]}, "fn_var_occur": {"client": [["client", "boto3", "client", "region_name"], ["response_marker", "client", "list_clusters", "ClusterStates"], ["second_page_cluster", "client", "list_clusters", "ClusterStates", "Marker", "response_marker"]], "hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id"], ["hook", "create_job_flow", "index", "True"], ["second_page_cluster_id", "hook", "get_cluster_id_by_name", "second_page_cluster"]], "response_marker": [["response_marker", "client", "list_clusters", "ClusterStates"], ["second_page_cluster", "client", "list_clusters", "ClusterStates", "Marker", "response_marker"]], "second_page_cluster": [["second_page_cluster", "client", "list_clusters", "ClusterStates", "Marker", "response_marker"], ["second_page_cluster_id", "hook", "get_cluster_id_by_name", "second_page_cluster"], ["second_page_cluster_id", "second_page_cluster"]], "second_page_cluster_id": [["second_page_cluster_id", "hook", "get_cluster_id_by_name", "second_page_cluster"], ["second_page_cluster_id", "second_page_cluster"]]}, "name": "test_get_cluster_id_by_name_pagination", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEmrHook.test_get_cluster_id_by_name_pagination", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "hook": "", "response_marker": "", "second_page_cluster": "", "second_page_cluster_id": ""}, "variables_p": {"client": [["Generator[Any, None, None]", 0.3657192812488694], ["Dict[str, Dict[str, Any]]", 0.10050643181037462], ["Dict[str, Any]", 0.08585884810314466]], "hook": [["int", 0.3030047006798076], ["bool", 0.10489247721936883]], "response_marker": [["Dict[str, Dict[str, Any]]", 0.3198122748149161], ["str", 0.0917117496073517]], "second_page_cluster": [["int", 0.23455673493453]], "second_page_cluster_id": [["str", 0.33849454891339537], ["Pattern[Any]", 0.12088944679942479], ["Optional[str]", 0.10359138809725787], ["List[str]", 0.09181147011155401], ["list", 0.08693454419582128], ["int", 0.08630117998753362]]}}, {"docstring": {"func": "Test that execution_role_arn only gets passed when it is not None.", "long_descr": null, "ret": null}, "fn_lc": [[255, 4], [300, 9]], "fn_var_ln": {"hook": [[269, 8], [269, 12]], "job_flow": [[271, 8], [271, 16]], "job_flow_id": [[275, 8], [275, 19]], "step": [[277, 8], [277, 12]]}, "fn_var_occur": {"hook": [["hook", "EmrHook", "aws_conn_id", "emr_conn_id"], ["job_flow", "hook", "create_job_flow", "True"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn", "None"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn"]], "job_flow": [["job_flow", "hook", "create_job_flow", "True"], ["job_flow_id", "job_flow"]], "job_flow_id": [["job_flow_id", "job_flow"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn", "None"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step", "ExecutionRoleArn"]], "step": [["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn", "None"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["hook", "add_job_flow_steps", "job_flow_id", "job_flow_id", "steps", "step", "execution_role_arn"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step", "ExecutionRoleArn"]]}, "name": "test_add_job_flow_steps_execution_role_arn", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "run_job_flow", "return_value"], ["mock_conn", "add_job_flow_steps", "return_value"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step"], ["mock_conn", "add_job_flow_steps", "assert_called_with", "JobFlowId", "job_flow_id", "Steps", "step", "ExecutionRoleArn"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestEmrHook.test_add_job_flow_steps_execution_role_arn", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "job_flow": "", "job_flow_id": "", "step": ""}, "variables_p": {"hook": [["str", 0.34639730926111495], ["dict", 0.08449090320170292]], "job_flow": [["str", 0.900308823357066]], "job_flow_id": [["str", 0.21653555904351576], ["int", 0.18623725411003192], ["Pattern[str]", 0.098926725772288], ["RuntimeError", 0.09324689079412114]], "step": [["dict", 0.10716097753364412]]}}], "name": "TestEmrHook", "q_name": "TestEmrHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "re", "unittest", "mock", "boto3", "pytest", "moto", "mock_emr", "airflow", "exceptions", "AirflowException", "airflow", "providers", "amazon", "aws", "hooks", "emr", "EmrHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 67}, "session_id": "ys91B8jj1nVx1y7E6Esks3EQqRMa0S-pqk5A58Qx184", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}