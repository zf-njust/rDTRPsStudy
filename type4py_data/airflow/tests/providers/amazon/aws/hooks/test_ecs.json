{"error": null, "response": {"classes": [{"cls_lc": [[36, 0], [53, 93]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 4], [41, 41]], "fn_var_ln": {"hook": [[38, 8], [38, 12]]}, "fn_var_occur": {"hook": [["hook", "EcsHook", "region_name", "REGION"], ["hook", "conn", "None"], ["hook", "aws_conn_id", "DEFAULT_CONN_ID"], ["hook", "region_name", "REGION"]]}, "name": "test_hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEksHooks.test_hook", "ret_exprs": [], "ret_type": "None", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.23647241614703995], ["List[str]", 0.166379793810127], ["Dict[str, Any]", 0.12228172655459404], ["Optional[Dict[str, str]]", 0.11256897087752168], ["dict", 0.0960911019788494], ["List[dict]", 0.09496182420948981], ["list", 0.08552556259120324]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [45, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_cluster_state", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "describe_clusters", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.Mock", 0.22222807384375878]], "self": []}, "q_name": "TestEksHooks.test_get_cluster_state", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [49, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_task_definition_state", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "describe_task_definition", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestEksHooks.test_get_task_definition_state", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [53, 93]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_task_state", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "describe_tasks", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestEksHooks.test_get_task_state", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestEksHooks", "q_name": "TestEksHooks", "variables": {}, "variables_p": {}}, {"cls_lc": [[56, 0], [61, 91]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[57, 4], [58, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_return_true_on_valid_reason", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShouldRetry.test_return_true_on_valid_reason", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [61, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_return_false_on_invalid_reason", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShouldRetry.test_return_false_on_invalid_reason", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestShouldRetry", "q_name": "TestShouldRetry", "variables": {}, "variables_p": {}}, {"cls_lc": [[64, 0], [80, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [71, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_return_true_on_valid_reason", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShouldRetryEni.test_return_true_on_valid_reason", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [80, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_return_false_on_invalid_reason", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestShouldRetryEni.test_return_false_on_invalid_reason", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestShouldRetryEni", "q_name": "TestShouldRetryEni", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 0], [33, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_conn", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_conn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "airflow", "providers", "amazon", "aws", "exceptions", "EcsOperatorError", "EcsTaskFailToStart", "airflow", "providers", "amazon", "aws", "hooks", "ecs", "EcsHook", "should_retry", "should_retry_eni"], "mod_var_ln": {"DEFAULT_CONN_ID": [[26, 0], [26, 15]], "REGION": [[27, 0], [27, 6]]}, "mod_var_occur": {"DEFAULT_CONN_ID": [["hook", "aws_conn_id", "DEFAULT_CONN_ID"]], "REGION": [["hook", "EcsHook", "region_name", "REGION"], ["hook", "region_name", "REGION"]]}, "no_types_annot": {"D": 6, "I": 0, "U": 9}, "session_id": "VzNcJjYJj-_QOiEPSRpkbEe6vGFVQCNkJ_ZKtxxL4y8", "set": null, "tc": [false, null], "type_annot_cove": 0.4, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_CONN_ID": "builtins.str", "REGION": "builtins.str"}, "variables_p": {"DEFAULT_CONN_ID": [["str", 0.191375409364425], ["int", 0.13101814543461202], ["bytes", 0.0953700634373895]], "REGION": [["str", 0.17568006169280337], ["Dict[str, Any]", 0.1525824288804631], ["Tuple[str, str, str, str, str, str, str, str, str]", 0.0927001040285857], ["Tuple[str, str, str, str, str, str]", 0.0927001040285857], ["Type[Callable[Any, str]]", 0.08740857832179304]]}}}