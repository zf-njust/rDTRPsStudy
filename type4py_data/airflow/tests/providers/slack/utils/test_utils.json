{"error": null, "response": {"classes": [{"cls_lc": [[24, 0], [94, 55]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test get arguments from connection extra: prefixed and not.", "long_descr": null, "ret": null}, "fn_lc": [[26, 4], [34, 48]], "fn_var_ln": {"extra_config": [[28, 8], [28, 20]]}, "fn_var_occur": {"extra_config": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_type", "conn_id", "extra", "conn_type"], ["extra_config", "get"], ["extra_config", "get"]]}, "name": "test_get_extra_field", "params": {"conn_type": "", "self": ""}, "params_descr": {"conn_type": "", "self": ""}, "params_occur": {"conn_type": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_type", "conn_id", "extra", "conn_type"]], "self": []}, "params_p": {"args": [], "conn_type": [["str", 0.2037582897886055]], "kwargs": [], "self": []}, "q_name": "TestConnectionExtra.test_get_extra_field", "ret_exprs": [], "ret_type": "", "variables": {"extra_config": ""}, "variables_p": {"extra_config": [["Dict[str, Optional[str]]", 0.2693255858275144], ["Dict[str, Dict[str, Any]]", 0.24350595444320974], ["Dict[str, Any]", 0.1254559024452918], ["Dict[str, Dict[str, int]]", 0.09571606010453668], ["Dict[str, int]", 0.09060819352517936], ["Dict[str, bool]", 0.09019373320153193], ["Dict[str, Union[None, int, str]]", 0.08519457045273597]]}}, {"docstring": {"func": "Test missing field in extra.", "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [44, 43]], "fn_var_ln": {"error_message": [[39, 8], [39, 21]], "extra_config": [[38, 8], [38, 20]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "KeyError", "match", "error_message"]], "extra_config": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_id", "extra"], ["extra_config", "get"]]}, "name": "test_missing_extra_field", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionExtra.test_missing_extra_field", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "extra_config": ""}, "variables_p": {"error_message": [["str", 0.5650000555717503], ["Pattern[str]", 0.4349999444282498]], "extra_config": [["Dict[str, Dict[str, Any]]", 0.34249240163762873], ["Dict[str, Any]", 0.11210494755366475], ["Final", 0.10236953297134008], ["dict", 0.09897010181233891], ["List[str]", 0.0908171918793574], ["Dict[str, dict]", 0.08657390994020157], ["Dict[str, Dict[str, int]]", 0.07992431502102432]]}}, {"docstring": {"func": "Test default value for missing field in extra.", "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [50, 70]], "fn_var_ln": {"extra_config": [[49, 8], [49, 20]]}, "fn_var_occur": {"extra_config": [["extra_config", "ConnectionExtraConfig", "conn_type", "extra"], ["extra_config", "get", "default", "value", "value"]]}, "name": "test_default_extra_field", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["extra_config", "get", "default", "value", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["dict", 0.3700791696216966], ["str", 0.16004012252053007], ["int", 0.08635994239571061], ["Dict[str, Any]", 0.07631694044869428]]}, "q_name": "TestConnectionExtra.test_default_extra_field", "ret_exprs": [], "ret_type": "", "variables": {"extra_config": ""}, "variables_p": {"extra_config": [["Dict[str, Union[Any, Any]]", 0.37187929073633436], ["Dict[str, int]", 0.13522412174556003], ["Dict[str, str]", 0.08993328758065042], ["Dict[Any, Union[int, str]]", 0.08893226403950166]]}}, {"docstring": {"func": "Test resolve field from extra when both specified prefixed and not for single field.", "long_descr": null, "ret": null}, "fn_lc": [[53, 4], [60, 48]], "fn_var_ln": {"extra_config": [[55, 8], [55, 20]]}, "fn_var_occur": {"extra_config": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_type", "conn_id", "extra", "conn_type"], ["extra_config", "get"]]}, "name": "test_both_prefixed_and_not_in_extra_field", "params": {"conn_type": "", "self": ""}, "params_descr": {"conn_type": "", "self": ""}, "params_occur": {"conn_type": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_type", "conn_id", "extra", "conn_type"]], "self": []}, "params_p": {"args": [], "conn_type": [["str", 0.38366078378169777], ["Type[Any]", 0.09842735005328282]], "kwargs": [], "self": []}, "q_name": "TestConnectionExtra.test_both_prefixed_and_not_in_extra_field", "ret_exprs": [], "ret_type": "", "variables": {"extra_config": ""}, "variables_p": {"extra_config": [["Dict[str, Dict[str, Any]]", 0.20967108909400495], ["dict", 0.12279313746794815], ["Dict[str, Any]", 0.11684603785141984], ["str", 0.09667086213877044], ["Dict[str, Dict[str, int]]", 0.0958003492070898], ["Dict[str, dict]", 0.08484920446710975]]}}, {"docstring": {"func": "Test that empty strings or None values in UI ignored.", "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [83, 53]], "fn_var_ln": {"error_message": [[75, 8], [75, 21]], "extra_config": [[66, 8], [66, 20]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "KeyError", "match", "error_message"]], "extra_config": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_type", "conn_id", "extra", "conn_type", "empty_value", "conn_type", "empty_value"], ["extra_config", "get"], ["extra_config", "get", "default"], ["extra_config", "get"]]}, "name": "test_prefixed_extra_created_in_ui_connections", "params": {"conn_type": "", "empty_value": "", "self": ""}, "params_descr": {"conn_type": "", "empty_value": "", "self": ""}, "params_occur": {"conn_type": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_type", "conn_id", "extra", "conn_type", "empty_value", "conn_type", "empty_value"]], "empty_value": [["extra_config", "ConnectionExtraConfig", "conn_type", "conn_type", "conn_id", "extra", "conn_type", "empty_value", "conn_type", "empty_value"]], "self": []}, "params_p": {"args": [], "conn_type": [["Mapping", 0.1031791448654195], ["Optional[Any]", 0.09810227991279151], ["str", 0.08891943566143379]], "empty_value": [["Mapping", 0.1031791448654195], ["Optional[Any]", 0.09810227991279151], ["str", 0.08891943566143379]], "kwargs": [], "self": []}, "q_name": "TestConnectionExtra.test_prefixed_extra_created_in_ui_connections", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "extra_config": ""}, "variables_p": {"error_message": [["str", 0.5650000555717503], ["Pattern[str]", 0.4349999444282498]], "extra_config": [["Dict[str, Dict[str, Any]]", 0.20082655780074776], ["Dict[str, Any]", 0.1336196681215229], ["dict", 0.1115662348196753], ["str", 0.10255741003980354], ["Dict[str, Dict[str, int]]", 0.09225943341403067], ["Dict[str, bool]", 0.08827909748626969]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [94, 55]], "fn_var_ln": {"extra_config": [[86, 8], [86, 20]]}, "fn_var_occur": {"extra_config": [["extra_config", "ConnectionExtraConfig", "conn_type", "extra"], ["extra_config", "getint"], ["extra_config", "getint"]]}, "name": "test_get_parse_int", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionExtra.test_get_parse_int", "ret_exprs": [], "ret_type": "", "variables": {"extra_config": ""}, "variables_p": {"extra_config": [["Dict[str, Optional[str]]", 0.29545173025290783], ["str", 0.19692136471491903], ["Dict[str, Dict[str, str]]", 0.10389917998034259], ["Dict[str, Union[None, int, str]]", 0.09851760048397683], ["Dict[str, Dict[str, Any]]", 0.09591210704707713]]}}], "name": "TestConnectionExtra", "q_name": "TestConnectionExtra", "variables": {}, "variables_p": {}}, {"cls_lc": [[97, 0], [146, 73]], "cls_var_ln": {"SUPPORTED_FORMAT": [[98, 4], [98, 20]]}, "cls_var_occur": {"SUPPORTED_FORMAT": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [102, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_error_parse_without_extension", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["parse_filename", "self", "SUPPORTED_FORMAT"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestParseFilename.test_error_parse_without_extension", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [114, 89]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_first_level", "params": {"expected_format": "", "filename": "", "self": ""}, "params_descr": {"expected_format": "", "filename": "", "self": ""}, "params_occur": {"expected_format": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "expected_format", "None"]], "filename": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "expected_format", "None"]], "self": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "expected_format", "None"]]}, "params_p": {"args": [], "expected_format": [["str", 0.3932612325512588], ["raiden_contracts.utils.type_aliases.ChainID", 0.09917215689853924], ["list", 0.09454094071113482], ["bool", 0.09310839386323161]], "filename": [["str", 0.3932612325512588], ["raiden_contracts.utils.type_aliases.ChainID", 0.09917215689853924], ["list", 0.09454094071113482], ["bool", 0.09310839386323161]], "kwargs": [], "self": []}, "q_name": "TestParseFilename.test_parse_first_level", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[117, 4], [119, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_error_parse_first_level", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT"]], "self": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT"]]}, "params_p": {"args": [], "filename": [], "kwargs": [], "self": []}, "q_name": "TestParseFilename.test_error_parse_first_level", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[130, 4], [131, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_second_level", "params": {"expected": "", "filename": "", "self": ""}, "params_descr": {"expected": "", "filename": "", "self": ""}, "params_occur": {"expected": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "expected"]], "filename": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "expected"]], "self": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "expected"]]}, "params_p": {"args": [], "expected": [["str", 0.49260021539889104], ["bool", 0.09903088880831586]], "filename": [["str", 0.49260021539889104], ["bool", 0.09903088880831586]], "kwargs": [], "self": []}, "q_name": "TestParseFilename.test_parse_second_level", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [136, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_error_parse_second_level", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT"]], "self": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT"]]}, "params_p": {"args": [], "filename": [], "kwargs": [], "self": []}, "q_name": "TestParseFilename.test_error_parse_second_level", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [141, 92]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_fallback", "params": {"fallback": "", "filename": "", "self": ""}, "params_descr": {"fallback": "", "filename": "", "self": ""}, "params_occur": {"fallback": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "fallback", "fallback", "None"]], "filename": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "fallback", "fallback", "None"]], "self": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT", "fallback", "fallback", "None"]]}, "params_p": {"args": [], "fallback": [], "filename": [], "kwargs": [], "self": []}, "q_name": "TestParseFilename.test_fallback", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [146, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_wrong_fallback", "params": {"filename": "", "self": ""}, "params_descr": {"filename": "", "self": ""}, "params_occur": {"filename": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT"]], "self": [["parse_filename", "filename", "self", "SUPPORTED_FORMAT"]]}, "params_p": {"args": [], "filename": [], "kwargs": [], "self": []}, "q_name": "TestParseFilename.test_wrong_fallback", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestParseFilename", "q_name": "TestParseFilename", "variables": {"SUPPORTED_FORMAT": ""}, "variables_p": {"SUPPORTED_FORMAT": [["str", 0.6000000000000001], ["Optional[str]", 0.10000000000000002], ["List[str]", 0.10000000000000002], ["List[Tuple[str, int]]", 0.10000000000000002], ["Dict[str, str]", 0.10000000000000002]]}}], "funcs": [], "imports": ["__future__", "annotations", "pytest", "airflow", "providers", "slack", "utils", "ConnectionExtraConfig", "parse_filename"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 36}, "session_id": "NORL6HdQCtsEOSwWZ0NMM-POdDSIlJSCZ1vZBHzetFQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}