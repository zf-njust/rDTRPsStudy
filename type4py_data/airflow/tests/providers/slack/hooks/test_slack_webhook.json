{"error": null, "response": {"classes": [{"cls_lc": [[143, 0], [174, 30]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[148, 8], [149, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "decorated", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCheckWebhookResponseDecorator.test_ok_response.<locals>.decorated", "ret_exprs": ["return MOCK_WEBHOOK_RESPONSE"], "ret_type": "", "ret_type_p": [["str", 0.5098064114387144], ["List[str]", 0.19558500224212122], ["Dict[str, Sequence[Any]]", 0.09484226903595869]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test OK response.", "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [151, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_ok_response", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCheckWebhookResponseDecorator.test_ok_response", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[169, 8], [170, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "decorated", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCheckWebhookResponseDecorator.test_error_response.<locals>.decorated", "ret_exprs": ["return test_response"], "ret_type": "", "ret_type_p": [["str", 0.3055435986164359], ["bool", 0.19236095727426453], ["Tuple[int, int]", 0.09766617465560853]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test error response.", "long_descr": null, "ret": null}, "fn_lc": [[164, 4], [174, 30]], "fn_var_ln": {"error_message": [[172, 8], [172, 21]], "test_response": [[166, 8], [166, 21]]}, "fn_var_occur": {"error_message": [["error_message", "body", "status_code"], ["pytest", "raises", "AirflowException", "match", "error_message"]], "test_response": []}, "name": "test_error_response", "params": {"body": "", "self": "", "status_code": ""}, "params_descr": {"body": "", "self": "", "status_code": ""}, "params_occur": {"body": [["error_message", "body", "status_code"]], "self": [], "status_code": [["error_message", "body", "status_code"]]}, "params_p": {"args": [], "body": [["str", 0.7777442806034007], ["int", 0.2222557193965992]], "kwargs": [], "self": [], "status_code": [["str", 0.7777442806034007], ["int", 0.2222557193965992]]}, "q_name": "TestCheckWebhookResponseDecorator.test_error_response", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "test_response": ""}, "variables_p": {"error_message": [["Dict[str, str]", 0.5115935730938598], ["Dict[Any, Tuple[int, str]]", 0.39487878595072], ["Dict[int, str]", 0.09352764095542022]], "test_response": [["Optional[bool]", 0.27772914294128137], ["str", 0.25296864773636296], ["Type[todo.models.Comment]", 0.10114609126919376], ["dict", 0.06453921123165912], ["Dict[str, str]", 0.058385255535893514], ["bytes", 0.048263908859789144]]}}], "name": "TestCheckWebhookResponseDecorator", "q_name": "TestCheckWebhookResponseDecorator", "variables": {}, "variables_p": {}}, {"cls_lc": [[177, 0], [653, 40]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test missing credentials.", "long_descr": null, "ret": null}, "fn_lc": [[178, 4], [182, 76]], "fn_var_ln": {"error_message": [[180, 8], [180, 21]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "AirflowException", "match", "error_message"]]}, "name": "test_no_credentials", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_no_credentials", "ret_exprs": [], "ret_type": "", "variables": {"error_message": ""}, "variables_p": {"error_message": [["Pattern[str]", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 4], [193, 63]], "fn_var_ln": {"warning_message": [[187, 8], [187, 23]], "webhook_token": [[186, 8], [186, 21]]}, "fn_var_occur": {"warning_message": [["pytest", "warns", "AirflowProviderDeprecationWarning", "match", "warning_message"]], "webhook_token": [["SlackWebhookHook", "webhook_token", "webhook_token"], ["mock_mask_secret", "assert_called_once_with", "webhook_token"]]}, "name": "test_webhook_token", "params": {"mock_mask_secret": "", "self": ""}, "params_descr": {"mock_mask_secret": "", "self": ""}, "params_occur": {"mock_mask_secret": [["mock_mask_secret", "assert_called_once_with", "webhook_token"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_mask_secret": [], "self": []}, "q_name": "TestSlackWebhookHook.test_webhook_token", "ret_exprs": [], "ret_type": "", "variables": {"warning_message": "", "webhook_token": ""}, "variables_p": {"warning_message": [["Pattern[str]", 1.0000000000000002]], "webhook_token": [["str", 0.6341022687188707], ["List[str]", 0.14977308729982405], ["Union[Literal, str]", 0.12514882761105764]]}}, {"docstring": {"func": "Different conn_id arguments and options.", "long_descr": null, "ret": null}, "fn_lc": [[195, 4], [210, 13]], "fn_var_ln": {"error_message": [[205, 8], [205, 21]], "hook": [[201, 8], [201, 12]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "AirflowException", "match", "error_message"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "SlackWebhookHook", "default_conn_name", "http_conn_id", "None"], ["hook", "slack_webhook_conn_id", "SlackWebhookHook", "default_conn_name"], ["hasattr", "hook"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "None", "http_conn_id", "SlackWebhookHook", "default_conn_name"], ["hook", "slack_webhook_conn_id", "SlackWebhookHook", "default_conn_name"], ["hasattr", "hook"]]}, "name": "test_conn_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "hook": ""}, "variables_p": {"error_message": [["Pattern[str]", 1.0]], "hook": [["List[str]", 0.10877210923198626], ["List[Tuple[int, int]]", 0.08732469030394341], ["int", 0.08548834849875543]]}}, {"docstring": {"func": "Test valid connections.", "long_descr": null, "ret": null}, "fn_lc": [[225, 4], [230, 53]], "fn_var_ln": {"conn_params": [[228, 8], [228, 19]], "hook": [[227, 8], [227, 12]]}, "fn_var_occur": {"conn_params": [["conn_params", "hook", "_get_conn_params"], ["conn_params", "TEST_WEBHOOK_URL"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"], ["conn_params", "hook", "_get_conn_params"]]}, "name": "test_construct_webhook_url", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"]], "self": []}, "params_p": {"args": [], "conn_id": [["str", 0.44441652525117353], ["int", 0.34615548238611055], ["qcodes.datasesqlite.connection.ConnectionPlus", 0.10041077806552685]], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_construct_webhook_url", "ret_exprs": [], "ret_type": "", "variables": {"conn_params": "", "hook": ""}, "variables_p": {"conn_params": [["str", 0.3113775600985605], ["float", 0.18873075248463198]], "hook": [["str", 0.08979035300262209]]}}, {"docstring": {"func": "Test deprecated option with full URL in host/schema and empty password.", "long_descr": null, "ret": null}, "fn_lc": [[234, 4], [244, 53]], "fn_var_ln": {"conn_params": [[241, 12], [241, 23]], "hook": [[236, 8], [236, 12]], "warning_message": [[237, 8], [237, 23]]}, "fn_var_occur": {"conn_params": [["conn_params", "hook", "_get_conn_params"], ["conn_params", "TEST_WEBHOOK_URL"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"], ["conn_params", "hook", "_get_conn_params"]], "warning_message": [["pytest", "warns", "AirflowProviderDeprecationWarning", "match", "warning_message"]]}, "name": "test_construct_webhook_url_deprecated_full_url_in_host", "params": {"conn_id": "", "mock_mask_secret": "", "self": ""}, "params_descr": {"conn_id": "", "mock_mask_secret": "", "self": ""}, "params_occur": {"conn_id": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"]], "mock_mask_secret": [["mock_mask_secret", "assert_called_once_with", "mock", "ANY"]], "self": []}, "params_p": {"args": [], "conn_id": [["str", 0.6155730101899994], ["int", 0.1770555056332958]], "kwargs": [], "mock_mask_secret": [["mock.Mock", 0.1882742334450934], ["int", 0.10625027806871763]], "self": []}, "q_name": "TestSlackWebhookHook.test_construct_webhook_url_deprecated_full_url_in_host", "ret_exprs": [], "ret_type": "", "variables": {"conn_params": "", "hook": "", "warning_message": ""}, "variables_p": {"conn_params": [["str", 0.3113775600985605], ["float", 0.18873075248463198]], "hook": [["str", 0.08979035300262209]], "warning_message": [["Pattern[str]", 1.0000000000000002]]}}, {"docstring": {"func": "Test valid connections with endpoint != https://hooks.slack.com/hooks.", "long_descr": null, "ret": null}, "fn_lc": [[249, 4], [254, 60]], "fn_var_ln": {"conn_params": [[252, 8], [252, 19]], "hook": [[251, 8], [251, 12]]}, "fn_var_occur": {"conn_params": [["conn_params", "hook", "_get_conn_params"], ["conn_params", "TEST_CUSTOM_WEBHOOK_URL"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"], ["conn_params", "hook", "_get_conn_params"]]}, "name": "test_construct_webhook_url_with_non_default_host", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"]], "self": []}, "params_p": {"args": [], "conn_id": [["str", 0.46824020984002923], ["int", 0.3369400287206237], ["qcodes.datasesqlite.connection.ConnectionPlus", 0.09592060898803272]], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_construct_webhook_url_with_non_default_host", "ret_exprs": [], "ret_type": "", "variables": {"conn_params": "", "hook": ""}, "variables_p": {"conn_params": [["str", 0.3113775600985605], ["float", 0.18873075248463198]], "hook": [["str", 0.08979035300262209]]}}, {"docstring": {"func": "Test connection which missing password field in connection.", "long_descr": null, "ret": null}, "fn_lc": [[264, 4], [269, 35]], "fn_var_ln": {"error_message": [[267, 8], [267, 21]], "hook": [[266, 8], [266, 12]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "AirflowException", "match", "error_message"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"], ["hook", "_get_conn_params"]]}, "name": "test_no_password_in_connection_field", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "conn_id"]], "self": []}, "params_p": {"args": [], "conn_id": [["str", 0.4802652590062413], ["int", 0.161149996105221]], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_no_password_in_connection_field", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "hook": ""}, "variables_p": {"error_message": [["Pattern[str]", 1.0]], "hook": []}}, {"docstring": {"func": "Test connections which is empty or not set and valid webhook_token specified.", "long_descr": null, "ret": null}, "fn_lc": [[273, 4], [278, 53]], "fn_var_ln": {"conn_params": [[276, 8], [276, 19]], "hook": [[275, 8], [275, 12]]}, "fn_var_occur": {"conn_params": [["conn_params", "hook", "_get_conn_params"], ["conn_params", "TEST_WEBHOOK_URL"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "webhook_token", "token"], ["conn_params", "hook", "_get_conn_params"]]}, "name": "test_empty_connection_field_with_token", "params": {"conn_id": "", "self": "", "token": ""}, "params_descr": {"conn_id": "", "self": "", "token": ""}, "params_occur": {"conn_id": [], "self": [], "token": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "webhook_token", "token"]]}, "params_p": {"args": [], "conn_id": [["bool", 0.2094686608090512], ["int", 0.17741931328117727], ["zerver.models.Realm", 0.1582005583589862], ["List[int]", 0.1011731048644878], ["Set[int]", 0.0791002791794931], ["Optional[Set[int]]", 0.0791002791794931]], "kwargs": [], "self": [], "token": [["str", 0.17797785193523313], ["excars.models.user.User", 0.12708570984208872], ["bytes", 0.12170602044363465], ["bool", 0.09014956356894364]]}, "q_name": "TestSlackWebhookHook.test_empty_connection_field_with_token", "ret_exprs": [], "ret_type": "", "variables": {"conn_params": "", "hook": ""}, "variables_p": {"conn_params": [["str", 0.3113775600985605], ["float", 0.18873075248463198]], "hook": []}}, {"docstring": {"func": "Test read/parse/merge WebhookClient config from connection and hook arguments.", "long_descr": null, "ret": null}, "fn_lc": [[363, 4], [387, 71]], "fn_var_ln": {"client": [[383, 12], [383, 18]], "conn_params": [[380, 12], [380, 23]], "hook": [[378, 12], [378, 16]], "mock_webhook_client": [[375, 8], [375, 27]], "test_conn": [[368, 8], [368, 17]], "test_conn_env": [[374, 8], [374, 21]]}, "fn_var_occur": {"client": [["client", "hook", "client"], ["client", "mock_webhook_client"], ["hook", "get_conn", "client"]], "conn_params": [["conn_params", "hook", "_get_conn_params"], ["conn_params", "expected"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "test_conn", "conn_id", "hook_config"], ["expected", "hook", "log"], ["conn_params", "hook", "_get_conn_params"], ["client", "hook", "client"], ["hook", "get_conn", "mock_webhook_client"], ["hook", "get_conn", "client"]], "mock_webhook_client": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["client", "mock_webhook_client"], ["hook", "get_conn", "mock_webhook_client"]], "test_conn": [["test_conn", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "extra", "conn_extra"], ["test_conn_env", "test_conn", "conn_id", "upper"], ["mock", "patch", "dict", "values", "test_conn_env", "test_conn", "get_uri"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "test_conn", "conn_id", "hook_config"]], "test_conn_env": [["test_conn_env", "test_conn", "conn_id", "upper"], ["mock", "patch", "dict", "values", "test_conn_env", "test_conn", "get_uri"]]}, "name": "test_client_configuration", "params": {"conn_extra": "", "expected": "builtins.dict[builtins.str, typing.Any]", "hook_config": "", "mock_webhook_client_cls": "", "self": ""}, "params_descr": {"conn_extra": "", "expected": "", "hook_config": "", "mock_webhook_client_cls": "", "self": ""}, "params_occur": {"conn_extra": [["test_conn", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "extra", "conn_extra"]], "expected": [["expected", "TEST_WEBHOOK_URL"], ["expected", "hook", "log"], ["conn_params", "expected"], ["mock_webhook_client_cls", "assert_called_once_with", "expected"]], "hook_config": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "test_conn", "conn_id", "hook_config"]], "mock_webhook_client_cls": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_cls", "assert_called_once_with", "expected"]], "self": []}, "params_p": {"args": [], "conn_extra": [["dict", 0.3124541066049113], ["str", 0.08231724200792453]], "expected": [["bool", 0.10234960257465203]], "hook_config": [], "kwargs": [], "mock_webhook_client_cls": [], "self": []}, "q_name": "TestSlackWebhookHook.test_client_configuration", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "conn_params": "", "hook": "", "mock_webhook_client": "", "test_conn": "", "test_conn_env": ""}, "variables_p": {"client": [["zerver.tests.test_queue_worker.WorkerTesFakeClient", 0.22469256415662062]], "conn_params": [["Tuple[Literal, Literal, Literal]", 0.166666666664164], ["Optional[gardnr.models.Grow]", 0.166666666664164], ["int", 6.787451833966716e-12], ["Dict[str, int]", 4.834950806013953e-12], ["str", 3.393725916983358e-12]], "hook": [["str", 0.2924542572293286], ["Dict[str, Any]", 0.11602751031323383], ["Tuple[Literal, Literal]", 0.09881163914399582], ["tbump.hooks.Hook", 0.0946144513365303]], "mock_webhook_client": [["tests.utils.PicklableMock", 0.6591770413383875], ["tests.clientest_auth.App", 0.0686546409886145]], "test_conn": [["dict", 0.3981923102395171], ["Dict[str, Union[Any, str]]", 0.09876015869434003], ["str", 0.09692133179333444], ["Dict[Any, Dict[Any, str]]", 0.09176413768298886], ["Dict[str, str]", 0.0673415457429133], ["Dict[Any, int]", 0.06510609431220103], ["Tuple[Literal, Dict[str, str]]", 0.06157529004544515], ["Type[List[Any]]", 0.06013356976357491]], "test_conn_env": [["str", 0.20693032192409816], ["int", 0.10702690594923313], ["circle_core.models.cc_info.CcInfo", 0.08959510543242495]]}}, {"docstring": {"func": "Test `SlackWebhookHook.send_dict` method.", "long_descr": null, "ret": null}, "fn_lc": [[399, 4], [413, 89]], "fn_var_ln": {"hook": [[405, 8], [405, 12]], "mock_webhook_client": [[401, 8], [401, 27]], "mock_webhook_client_send_dict": [[402, 8], [402, 37]], "return_value": [[403, 8], [403, 50]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "send_dict", "body", "send_body", "headers", "headers"], ["hook", "send_dict", "body", "json", "dumps", "send_body", "headers", "headers"]], "mock_webhook_client": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"]], "mock_webhook_client_send_dict": [["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "assert_called_once_with", "send_body", "headers", "headers"], ["mock_webhook_client_send_dict", "reset_mock"], ["mock_webhook_client_send_dict", "assert_called_once_with", "send_body", "headers", "headers"]], "return_value": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"]]}, "name": "test_hook_send_dict", "params": {"headers": "", "mock_webhook_client_cls": "", "self": "", "send_body": ""}, "params_descr": {"headers": "", "mock_webhook_client_cls": "", "self": "", "send_body": ""}, "params_occur": {"headers": [["hook", "send_dict", "body", "send_body", "headers", "headers"], ["mock_webhook_client_send_dict", "assert_called_once_with", "send_body", "headers", "headers"], ["hook", "send_dict", "body", "json", "dumps", "send_body", "headers", "headers"], ["mock_webhook_client_send_dict", "assert_called_once_with", "send_body", "headers", "headers"]], "mock_webhook_client_cls": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"]], "self": [], "send_body": [["hook", "send_dict", "body", "send_body", "headers", "headers"], ["mock_webhook_client_send_dict", "assert_called_once_with", "send_body", "headers", "headers"], ["hook", "send_dict", "body", "json", "dumps", "send_body", "headers", "headers"], ["mock_webhook_client_send_dict", "assert_called_once_with", "send_body", "headers", "headers"]]}, "params_p": {"args": [], "headers": [["mock.MagicMock", 0.2006830901160457], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.11820353887048514], ["server.models.PickupPoint", 0.09227832026348355]], "kwargs": [], "mock_webhook_client_cls": [["mock.Mock", 0.15429289649857808]], "self": [], "send_body": [["mock.MagicMock", 0.2006830901160457], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.11820353887048514], ["server.models.PickupPoint", 0.09227832026348355]]}, "q_name": "TestSlackWebhookHook.test_hook_send_dict", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_webhook_client": "", "mock_webhook_client_send_dict": "", "return_value": ""}, "variables_p": {"hook": [["Dict[str, Any]", 0.11093279389821482], ["int", 0.10163458387258059], ["list", 0.09774751485850856]], "mock_webhook_client": [["tests.utils.PicklableMock", 0.5904881473468615], ["tests.clientest_auth.App", 0.07753270058061144]], "mock_webhook_client_send_dict": [["docusign.models.Config", 0.103463921366623], ["Dict[str, Union[Any, Any, Any]]", 0.08767865748968934]], "return_value": [["str", 0.7120838548994017], ["tests.utils.MockCoroutine", 0.11027993775245701], ["int", 0.09008559849415067], ["List[Dict[str, str]]", 0.08755060885399074]]}}, {"docstring": {"func": "Test invalid body type for `SlackWebhookHook.send_dict` method.", "long_descr": null, "ret": null}, "fn_lc": [[417, 4], [426, 62]], "fn_var_ln": {"hook": [[423, 8], [423, 12]], "mock_webhook_client": [[419, 8], [419, 27]], "mock_webhook_client_send_dict": [[420, 8], [420, 37]], "return_value": [[421, 8], [421, 50]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "send_dict", "body", "send_body"]], "mock_webhook_client": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"]], "mock_webhook_client_send_dict": [["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "assert_not_called"]], "return_value": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"]]}, "name": "test_hook_send_dict_invalid_type", "params": {"mock_webhook_client_cls": "", "self": "", "send_body": ""}, "params_descr": {"mock_webhook_client_cls": "", "self": "", "send_body": ""}, "params_occur": {"mock_webhook_client_cls": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"]], "self": [], "send_body": [["hook", "send_dict", "body", "send_body"]]}, "params_p": {"args": [], "kwargs": [], "mock_webhook_client_cls": [["mock.Mock", 0.1326213761391752]], "self": [], "send_body": [["bool", 0.10608986797274692]]}, "q_name": "TestSlackWebhookHook.test_hook_send_dict_invalid_type", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_webhook_client": "", "mock_webhook_client_send_dict": "", "return_value": ""}, "variables_p": {"hook": [["bool", 0.09939959729566628]], "mock_webhook_client": [["tests.utils.PicklableMock", 0.5904881473468615], ["tests.clientest_auth.App", 0.07753270058061144]], "mock_webhook_client_send_dict": [["docusign.models.Config", 0.103463921366623], ["Dict[str, Union[Any, Any, Any]]", 0.08767865748968934]], "return_value": [["str", 0.7120838548994017], ["tests.utils.MockCoroutine", 0.11027993775245701], ["int", 0.09008559849415067], ["List[Dict[str, str]]", 0.08755060885399074]]}}, {"docstring": {"func": "Test invalid JSON-string passed to `SlackWebhookHook.send_dict` method.", "long_descr": null, "ret": null}, "fn_lc": [[430, 4], [440, 62]], "fn_var_ln": {"error_message": [[437, 8], [437, 21]], "hook": [[436, 8], [436, 12]], "mock_webhook_client": [[432, 8], [432, 27]], "mock_webhook_client_send_dict": [[433, 8], [433, 37]], "return_value": [[434, 8], [434, 50]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "AirflowException", "match", "error_message"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "send_dict", "body", "json_string"]], "mock_webhook_client": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"]], "mock_webhook_client_send_dict": [["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "assert_not_called"]], "return_value": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"]]}, "name": "test_hook_send_dict_invalid_json_string", "params": {"json_string": "", "mock_webhook_client_cls": "", "self": ""}, "params_descr": {"json_string": "", "mock_webhook_client_cls": "", "self": ""}, "params_occur": {"json_string": [["hook", "send_dict", "body", "json_string"]], "mock_webhook_client_cls": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"]], "self": []}, "params_p": {"args": [], "json_string": [], "kwargs": [], "mock_webhook_client_cls": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.19569078399401185]], "self": []}, "q_name": "TestSlackWebhookHook.test_hook_send_dict_invalid_json_string", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "hook": "", "mock_webhook_client": "", "mock_webhook_client_send_dict": "", "return_value": ""}, "variables_p": {"error_message": [["Pattern[str]", 1.0]], "hook": [["bool", 0.09939959729566628]], "mock_webhook_client": [["tests.utils.PicklableMock", 0.5904881473468615], ["tests.clientest_auth.App", 0.07753270058061144]], "mock_webhook_client_send_dict": [["docusign.models.Config", 0.103463921366623], ["Dict[str, Union[Any, Any, Any]]", 0.08767865748968934]], "return_value": [["str", 0.7120838548994017], ["tests.utils.MockCoroutine", 0.11027993775245701], ["int", 0.09008559849415067], ["List[Dict[str, str]]", 0.08755060885399074]]}}, {"docstring": {"func": "Test `SlackWebhookHook.send_dict` warn users about Legacy Slack Integrations.", "long_descr": null, "ret": null}, "fn_lc": [[452, 4], [469, 106]], "fn_var_ln": {"hook": [[459, 8], [459, 12]], "legacy_slack_integration_body": [[458, 8], [458, 37]], "mock_webhook_client": [[454, 8], [454, 27]], "mock_webhook_client_send_dict": [[455, 8], [455, 37]], "return_value": [[456, 8], [456, 50]], "warning_message": [[460, 8], [460, 23]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "send_dict", "body", "legacy_slack_integration_body"]], "legacy_slack_integration_body": [["legacy_slack_integration_body", "legacy_attr"], ["hook", "send_dict", "body", "legacy_slack_integration_body"], ["mock_webhook_client_send_dict", "assert_called_once_with", "legacy_slack_integration_body", "headers", "None"]], "mock_webhook_client": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"]], "mock_webhook_client_send_dict": [["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "assert_called_once_with", "legacy_slack_integration_body", "headers", "None"]], "return_value": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"]], "warning_message": [["pytest", "warns", "UserWarning", "match", "warning_message"]]}, "name": "test_hook_send_dict_legacy_slack_integration", "params": {"legacy_attr": "", "mock_webhook_client_cls": "", "self": ""}, "params_descr": {"legacy_attr": "", "mock_webhook_client_cls": "", "self": ""}, "params_occur": {"legacy_attr": [["legacy_slack_integration_body", "legacy_attr"]], "mock_webhook_client_cls": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "legacy_attr": [], "mock_webhook_client_cls": [["mock.Mock", 0.12717548814761567]], "self": []}, "q_name": "TestSlackWebhookHook.test_hook_send_dict_legacy_slack_integration", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "legacy_slack_integration_body": "", "mock_webhook_client": "", "mock_webhook_client_send_dict": "", "return_value": "", "warning_message": ""}, "variables_p": {"hook": [["bool", 0.09939959729566628]], "legacy_slack_integration_body": [["int", 0.31624305033179134], ["str", 0.3112235958337012], ["Set[str]", 0.11055992910987023], ["Dict[str, Union[int, Any]]", 0.09059041442496787], ["List[float]", 0.08260469991715072]], "mock_webhook_client": [["tests.utils.PicklableMock", 0.5904881473468615], ["tests.clientest_auth.App", 0.07753270058061144]], "mock_webhook_client_send_dict": [["docusign.models.Config", 0.103463921366623], ["Dict[str, Union[Any, Any, Any]]", 0.08767865748968934]], "return_value": [["str", 0.7120838548994017], ["tests.utils.MockCoroutine", 0.11027993775245701], ["int", 0.09008559849415067], ["List[Dict[str, str]]", 0.08755060885399074]], "warning_message": [["str", 0.454658800522061], ["List[str]", 0.2788456985013123], ["int", 0.08710269649984069]]}}, {"docstring": {"func": "Test `SlackWebhookHook.send` method.", "long_descr": null, "ret": null}, "fn_lc": [[481, 4], [485, 86]], "fn_var_ln": {"hook": [[483, 8], [483, 12]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "send", "send_params", "headers", "headers"]]}, "name": "test_hook_send", "params": {"headers": "", "mock_hook_send_dict": "", "self": "", "send_params": ""}, "params_descr": {"headers": "", "mock_hook_send_dict": "", "self": "", "send_params": ""}, "params_occur": {"headers": [["hook", "send", "send_params", "headers", "headers"], ["mock_hook_send_dict", "assert_called_once_with", "body", "send_params", "headers", "headers"]], "mock_hook_send_dict": [["mock_hook_send_dict", "assert_called_once_with", "body", "send_params", "headers", "headers"]], "self": [], "send_params": [["hook", "send", "send_params", "headers", "headers"], ["mock_hook_send_dict", "assert_called_once_with", "body", "send_params", "headers", "headers"]]}, "params_p": {"args": [], "headers": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.1427043759790927], ["server.models.PickupPoint", 0.09213265927808684], ["server.models.User", 0.09204291470154066]], "kwargs": [], "mock_hook_send_dict": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.2026415060946422]], "self": [], "send_params": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.1427043759790927], ["server.models.PickupPoint", 0.09213265927808684], ["server.models.User", 0.09204291470154066]]}, "q_name": "TestSlackWebhookHook.test_hook_send", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.36031616832089836], ["Dict[str, int]", 0.10855907975641887], ["Tuple[int, int, int, int]", 0.10337593515245624], ["dict", 0.08436958680832604]]}}, {"docstring": {"func": "Test `SlackWebhookHook.send` with parameters set in hook attributes.", "long_descr": null, "ret": null}, "fn_lc": [[500, 4], [526, 85]], "fn_var_ln": {"expected_body": [[503, 8], [503, 21]], "hook": [[509, 12], [509, 16]], "send_params": [[502, 8], [502, 19]], "warning_message": [[519, 8], [519, 23]]}, "fn_var_occur": {"expected_body": [["expected_body", "deprecated_hook_attr", "deprecated_hook_attr"], ["mock_hook_send_dict", "assert_called_once_with", "body", "expected_body", "headers", "None"], ["mock_hook_send_dict", "assert_called_once_with", "body", "expected_body", "headers", "None"]], "hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID", "send_params"], ["getattr", "hook", "deprecated_hook_attr"], ["getattr", "hook"], ["hook", "send"], ["hook", "execute"]], "send_params": [["send_params", "deprecated_hook_attr"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID", "send_params"]], "warning_message": [["pytest", "warns", "AirflowProviderDeprecationWarning", "match", "warning_message"], ["pytest", "warns", "AirflowProviderDeprecationWarning", "match", "warning_message"]]}, "name": "test_hook_send_by_hook_attributes", "params": {"deprecated_hook_attr": "", "mock_hook_send_dict": "", "self": ""}, "params_descr": {"deprecated_hook_attr": "", "mock_hook_send_dict": "", "self": ""}, "params_occur": {"deprecated_hook_attr": [["send_params", "deprecated_hook_attr"], ["expected_body", "deprecated_hook_attr", "deprecated_hook_attr"], ["getattr", "hook", "deprecated_hook_attr"]], "mock_hook_send_dict": [["mock_hook_send_dict", "assert_called_once_with", "body", "expected_body", "headers", "None"], ["mock_hook_send_dict", "reset_mock"], ["mock_hook_send_dict", "assert_called_once_with", "body", "expected_body", "headers", "None"]], "self": []}, "params_p": {"args": [], "deprecated_hook_attr": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.28228136931697223], ["core.models.Team", 0.09792697235604461]], "kwargs": [], "mock_hook_send_dict": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.20310975645313437], ["core_lib.core.models.Venue", 0.0934292837854746]], "self": []}, "q_name": "TestSlackWebhookHook.test_hook_send_by_hook_attributes", "ret_exprs": [], "ret_type": "", "variables": {"expected_body": "", "hook": "", "send_params": "", "warning_message": ""}, "variables_p": {"expected_body": [["str", 0.5033463756725309], ["Dict[str, str]", 0.1045833686095076]], "hook": [["Dict[str, Callable]", 0.10072404595775206], ["decksite.data.models.person.Person", 0.09900233834828837]], "send_params": [["str", 0.9022451141480992], ["int", 0.09775488585190073]], "warning_message": [["Pattern[str]", 0.80367305822754], ["str", 0.19632694177246]]}}, {"docstring": {"func": "Test hook constructor warn users about ignored attributes.", "long_descr": null, "ret": null}, "fn_lc": [[529, 4], [544, 79]], "fn_var_ln": {"hook": [[535, 12], [535, 16]], "mock_webhook_client": [[531, 8], [531, 27]], "mock_webhook_client_send_dict": [[532, 8], [532, 37]], "return_value": [[533, 8], [533, 50]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID", "link_names"], ["hook", "send"]], "mock_webhook_client": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"]], "mock_webhook_client_send_dict": [["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "assert_called_once_with", "headers", "None"]], "return_value": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"]]}, "name": "test_hook_ignored_attributes", "params": {"mock_webhook_client_cls": "", "self": ""}, "params_descr": {"mock_webhook_client_cls": "", "self": ""}, "params_occur": {"mock_webhook_client_cls": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_webhook_client_cls": [["mock.Mock", 0.09793525498298401]], "self": []}, "q_name": "TestSlackWebhookHook.test_hook_ignored_attributes", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_webhook_client": "", "mock_webhook_client_send_dict": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.5160495155196323], ["Dict[str, Any]", 0.08741342042182339]], "mock_webhook_client": [["tests.utils.PicklableMock", 0.5904881473468615], ["tests.clientest_auth.App", 0.07753270058061144]], "mock_webhook_client_send_dict": [["docusign.models.Config", 0.103463921366623], ["Dict[str, Union[Any, Any, Any]]", 0.08767865748968934]], "return_value": [["str", 0.7120838548994017], ["tests.utils.MockCoroutine", 0.11027993775245701], ["int", 0.09008559849415067], ["List[Dict[str, str]]", 0.08755060885399074]]}}, {"docstring": {"func": "Test `SlackWebhookHook.send` unexpected attributes.", "long_descr": null, "ret": null}, "fn_lc": [[547, 4], [561, 97]], "fn_var_ln": {"hook": [[553, 8], [553, 12]], "mock_webhook_client": [[549, 8], [549, 27]], "mock_webhook_client_send_dict": [[550, 8], [550, 37]], "return_value": [[551, 8], [551, 50]], "warning_message": [[554, 8], [554, 23]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "send", "link_names", "as_user", "text"]], "mock_webhook_client": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"]], "mock_webhook_client_send_dict": [["mock_webhook_client_send_dict", "mock_webhook_client", "send_dict"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "assert_called_once_with", "headers", "None"]], "return_value": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"]], "warning_message": [["pytest", "warns", "UserWarning", "match", "warning_message"]]}, "name": "test_hook_send_unexpected_arguments", "params": {"mock_webhook_client_cls": "", "recwarn": "", "self": ""}, "params_descr": {"mock_webhook_client_cls": "", "recwarn": "", "self": ""}, "params_occur": {"mock_webhook_client_cls": [["mock_webhook_client", "mock_webhook_client_cls", "return_value"]], "recwarn": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_webhook_client_cls": [["mock.Mock", 0.09793525498298401]], "recwarn": [["mock.Mock", 0.09500707121435809]], "self": []}, "q_name": "TestSlackWebhookHook.test_hook_send_unexpected_arguments", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_webhook_client": "", "mock_webhook_client_send_dict": "", "return_value": "", "warning_message": ""}, "variables_p": {"hook": [["str", 0.24042785414039003]], "mock_webhook_client": [["tests.utils.PicklableMock", 0.5904881473468615], ["tests.clientest_auth.App", 0.07753270058061144]], "mock_webhook_client_send_dict": [["docusign.models.Config", 0.103463921366623], ["Dict[str, Union[Any, Any, Any]]", 0.08767865748968934]], "return_value": [["str", 0.7120838548994017], ["tests.utils.MockCoroutine", 0.11027993775245701], ["int", 0.09008559849415067], ["List[Dict[str, str]]", 0.08755060885399074]], "warning_message": [["str", 0.454658800522061], ["List[str]", 0.2788456985013123], ["int", 0.08710269649984069]]}}, {"docstring": {"func": "Test `SlackWebhookHook.send_text` method.", "long_descr": null, "ret": null}, "fn_lc": [[567, 4], [573, 9]], "fn_var_ln": {"hook": [[569, 8], [569, 12]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "send_text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"]]}, "name": "test_hook_send_text", "params": {"headers": "", "mock_hook_send": "", "self": "", "unfurl_links": "", "unfurl_media": ""}, "params_descr": {"headers": "", "mock_hook_send": "", "self": "", "unfurl_links": "", "unfurl_media": ""}, "params_occur": {"headers": [["hook", "send_text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"], ["mock_hook_send", "assert_called_once_with", "text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"]], "mock_hook_send": [["mock_hook_send", "assert_called_once_with", "text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"]], "self": [], "unfurl_links": [["hook", "send_text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"], ["mock_hook_send", "assert_called_once_with", "text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"]], "unfurl_media": [["hook", "send_text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"], ["mock_hook_send", "assert_called_once_with", "text", "headers", "headers", "unfurl_links", "unfurl_links", "unfurl_media", "unfurl_media"]]}, "params_p": {"args": [], "headers": [["dict", 0.11180101913043795], ["server.models.User", 0.08445122647245015], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.08217633648212094]], "kwargs": [], "mock_hook_send": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.3691686964334651]], "self": [], "unfurl_links": [["dict", 0.11180101913043795], ["server.models.User", 0.08445122647245015], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.08217633648212094]], "unfurl_media": [["dict", 0.11180101913043795], ["server.models.User", 0.08445122647245015], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.08217633648212094]]}, "q_name": "TestSlackWebhookHook.test_hook_send_text", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.19519863704750703], ["int", 0.1881562950532033], ["decksite.data.models.person.Person", 0.10700469762564133], ["list", 0.10158558261783743], ["Dict[str, Callable]", 0.09159090629321252]]}}, {"docstring": {"func": "Ensure that _ensure_prefixes is removed from snowflake when airflow min version >= 2.5.0.", "long_descr": null, "ret": null}, "fn_lc": [[575, 4], [588, 13]], "fn_var_ln": {"path": [[577, 8], [577, 12]]}, "fn_var_occur": {"path": [["object_exists", "path"]]}, "name": "test__ensure_prefixes_removal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test__ensure_prefixes_removal", "ret_exprs": [], "ret_type": "", "variables": {"path": ""}, "variables_p": {"path": [["str", 0.3333333333865924], ["List[Tuple[float, float]]", 0.3333333332854392], ["Tuple[str, str]", 2.978817973747046e-11]]}}, {"docstring": {"func": "Check that ensure_prefixes decorator working properly", "long_descr": "Note: remove this test when removing ensure_prefixes (after min airflow version >= 2.5.0", "ret": null}, "fn_lc": [[590, 4], [602, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test___ensure_prefixes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test___ensure_prefixes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[614, 4], [620, 45]], "fn_var_ln": {"hook": [[616, 12], [616, 16]], "params": [[617, 12], [617, 18]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id"], ["params", "hook", "_get_conn_params"]], "params": [["params", "hook", "_get_conn_params"]]}, "name": "test_backcompat_prefix_works", "params": {"self": "", "uri": ""}, "params_descr": {"self": "", "uri": ""}, "params_occur": {"self": [], "uri": [["patch", "dict", "in_dict", "os", "environ", "AIRFLOW_CONN_MY_CONN", "uri"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "uri": [["str", 0.086275972943967]]}, "q_name": "TestSlackWebhookHook.test_backcompat_prefix_works", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "params": ""}, "variables_p": {"hook": [["str", 0.23208678087028672]], "params": [["Dict[str, int]", 0.9999999998054235], ["list", 2.668682299364027e-11], ["Tuple[Literal, Literal, Literal]", 2.5973179132715253e-11], ["Optional[gardnr.models.Grow]", 2.5973179132715253e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[622, 4], [630, 47]], "fn_var_ln": {"hook": [[627, 12], [627, 16]], "params": [[629, 16], [629, 22]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id"], ["params", "hook", "_get_conn_params"]], "params": [["params", "hook", "_get_conn_params"]]}, "name": "test_backcompat_prefix_both_causes_warning", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_backcompat_prefix_both_causes_warning", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "params": ""}, "variables_p": {"hook": [["str", 0.23208678087028672]], "params": [["Dict[str, int]", 0.9999999998054235], ["list", 2.668682299364027e-11], ["Tuple[Literal, Literal, Literal]", 2.5973179132715253e-11], ["Optional[gardnr.models.Grow]", 2.5973179132715253e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[632, 4], [644, 40]], "fn_var_ln": {"hook": [[642, 12], [642, 16]], "params": [[643, 12], [643, 18]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id"], ["params", "hook", "_get_conn_params"]], "params": [["params", "hook", "_get_conn_params"]]}, "name": "test_empty_string_ignored_prefixed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_empty_string_ignored_prefixed", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "params": ""}, "variables_p": {"hook": [["str", 0.23208678087028672]], "params": [["Dict[str, int]", 0.9999999998054235], ["list", 2.668682299364027e-11], ["Tuple[Literal, Literal, Literal]", 2.5973179132715253e-11], ["Optional[gardnr.models.Grow]", 2.5973179132715253e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[646, 4], [653, 40]], "fn_var_ln": {"hook": [[651, 12], [651, 16]], "params": [[652, 12], [652, 18]]}, "fn_var_occur": {"hook": [["hook", "SlackWebhookHook", "slack_webhook_conn_id"], ["params", "hook", "_get_conn_params"]], "params": [["params", "hook", "_get_conn_params"]]}, "name": "test_empty_string_ignored_non_prefixed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookHook.test_empty_string_ignored_non_prefixed", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "params": ""}, "variables_p": {"hook": [["str", 0.23208678087028672]], "params": [["Dict[str, int]", 0.9999999998054235], ["list", 2.668682299364027e-11], ["Tuple[Literal, Literal, Literal]", 2.5973179132715253e-11], ["Optional[gardnr.models.Grow]", 2.5973179132715253e-11]]}}], "name": "TestSlackWebhookHook", "q_name": "TestSlackWebhookHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Create tests connections.", "long_descr": null, "ret": null}, "fn_lc": [[51, 0], [140, 13]], "fn_var_ln": {"conn_uris": [[137, 4], [137, 13]], "connections": [[53, 4], [53, 15]]}, "fn_var_occur": {"conn_uris": [["conn_uris", "c", "conn_id", "upper", "c", "get_uri", "c", "connections"], ["mock", "patch", "dict", "values", "conn_uris"]], "connections": [["connections", "Connection", "conn_id", "SlackWebhookHook", "default_conn_name", "conn_type", "CONN_TYPE", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "schema", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "extra", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "TEST_CUSTOM_SCHEMA", "host", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_CUSTOM_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host"], ["conn_uris", "c", "conn_id", "upper", "c", "get_uri", "c", "connections"]]}, "name": "slack_webhook_connections", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "slack_webhook_connections", "ret_exprs": [], "ret_type": "", "variables": {"conn_uris": "", "connections": ""}, "variables_p": {"conn_uris": [["tests.data.Pri", 0.20785721630852486], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.13396207845379005], ["List[Tuple[int, int, int, int, int, int]]", 0.0855275112317092]], "connections": [["str", 0.3924827257610948], ["Dict[str, Any]", 0.0991026159195325], ["bool", 0.09545145403166155]]}}], "imports": ["__future__", "annotations", "json", "os", "typing", "Any", "unittest", "mock", "unittest", "mock", "patch", "pytest", "pytest", "param", "slack_sdk", "http_retry", "builtin_handlers", "ConnectionErrorRetryHandler", "RateLimitErrorRetryHandler", "slack_sdk", "webhook", "webhook_response", "WebhookResponse", "airflow", "exceptions", "AirflowException", "AirflowProviderDeprecationWarning", "airflow", "models", "connection", "Connection", "airflow", "providers", "slack", "hooks", "slack_webhook", "SlackWebhookHook", "check_webhook_response", "tests", "test_utils", "providers", "get_provider_min_airflow_version", "object_exists"], "mod_var_ln": {"CONN_TYPE": [[44, 0], [44, 9]], "MOCK_WEBHOOK_RESPONSE": [[47, 0], [47, 21]], "TEST_CONN_ERROR_RETRY_HANDLER": [[45, 0], [45, 29]], "TEST_CONN_ID": [[43, 0], [43, 12]], "TEST_CUSTOM_ENDPOINT": [[41, 0], [41, 20]], "TEST_CUSTOM_SCHEMA": [[40, 0], [40, 18]], "TEST_CUSTOM_WEBHOOK_URL": [[42, 0], [42, 23]], "TEST_RATE_LIMIT_RETRY_HANDLER": [[46, 0], [46, 29]], "TEST_TOKEN": [[38, 0], [38, 10]], "TEST_WEBHOOK_URL": [[39, 0], [39, 16]]}, "mod_var_occur": {"CONN_TYPE": [["connections", "Connection", "conn_id", "SlackWebhookHook", "default_conn_name", "conn_type", "CONN_TYPE", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "schema", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "extra", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "TEST_CUSTOM_SCHEMA", "host", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_CUSTOM_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host"], ["test_conn", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "extra", "conn_extra"]], "MOCK_WEBHOOK_RESPONSE": [["MOCK_WEBHOOK_RESPONSE"], ["decorated", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"], ["mock_webhook_client_send_dict", "return_value", "MOCK_WEBHOOK_RESPONSE"]], "TEST_CONN_ERROR_RETRY_HANDLER": [], "TEST_CONN_ID": [["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID", "send_params"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID", "link_names"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"], ["hook", "SlackWebhookHook", "slack_webhook_conn_id", "TEST_CONN_ID"]], "TEST_CUSTOM_ENDPOINT": [["TEST_CUSTOM_WEBHOOK_URL", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "TEST_TOKEN"], ["connections", "Connection", "conn_id", "SlackWebhookHook", "default_conn_name", "conn_type", "CONN_TYPE", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "schema", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "extra", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "TEST_CUSTOM_SCHEMA", "host", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_CUSTOM_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host"]], "TEST_CUSTOM_SCHEMA": [["TEST_CUSTOM_WEBHOOK_URL", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "TEST_TOKEN"], ["connections", "Connection", "conn_id", "SlackWebhookHook", "default_conn_name", "conn_type", "CONN_TYPE", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "schema", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "extra", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "TEST_CUSTOM_SCHEMA", "host", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_CUSTOM_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host"]], "TEST_CUSTOM_WEBHOOK_URL": [["connections", "Connection", "conn_id", "SlackWebhookHook", "default_conn_name", "conn_type", "CONN_TYPE", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "schema", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "extra", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "TEST_CUSTOM_SCHEMA", "host", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_CUSTOM_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host"], ["conn_params", "TEST_CUSTOM_WEBHOOK_URL"]], "TEST_RATE_LIMIT_RETRY_HANDLER": [], "TEST_TOKEN": [["TEST_WEBHOOK_URL", "TEST_TOKEN"], ["TEST_CUSTOM_WEBHOOK_URL", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "TEST_TOKEN"], ["connections", "Connection", "conn_id", "SlackWebhookHook", "default_conn_name", "conn_type", "CONN_TYPE", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "schema", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "extra", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "TEST_CUSTOM_SCHEMA", "host", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_CUSTOM_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host"]], "TEST_WEBHOOK_URL": [["connections", "Connection", "conn_id", "SlackWebhookHook", "default_conn_name", "conn_type", "CONN_TYPE", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "schema", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "extra", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "TEST_CUSTOM_SCHEMA", "host", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "TEST_CUSTOM_SCHEMA", "TEST_CUSTOM_ENDPOINT", "password", "TEST_TOKEN", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_CUSTOM_WEBHOOK_URL", "Connection", "conn_id", "conn_type", "CONN_TYPE", "Connection", "conn_id", "conn_type", "CONN_TYPE", "host", "Connection", "conn_id", "conn_type", "CONN_TYPE", "schema", "host"], ["conn_params", "TEST_WEBHOOK_URL"], ["conn_params", "TEST_WEBHOOK_URL"], ["conn_params", "TEST_WEBHOOK_URL"], ["expected", "TEST_WEBHOOK_URL"], ["test_conn", "Connection", "conn_id", "conn_type", "CONN_TYPE", "password", "TEST_WEBHOOK_URL", "extra", "conn_extra"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 142}, "session_id": "WzavpL-toe-2LRZdpeyT1YRZelq0KY3HziBEBIW0YSg", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {"CONN_TYPE": "", "MOCK_WEBHOOK_RESPONSE": "", "TEST_CONN_ERROR_RETRY_HANDLER": "", "TEST_CONN_ID": "", "TEST_CUSTOM_ENDPOINT": "", "TEST_CUSTOM_SCHEMA": "", "TEST_CUSTOM_WEBHOOK_URL": "", "TEST_RATE_LIMIT_RETRY_HANDLER": "", "TEST_TOKEN": "", "TEST_WEBHOOK_URL": ""}, "variables_p": {"CONN_TYPE": [["Dict[str, Tuple[str, str, str]]", 0.1442673058174822], ["Dict[Any, str]", 0.11254537485641446], ["list", 0.0919161386976687], ["str", 0.08417992296656672], ["legistar.models.VoteType", 0.0803680374163145]], "MOCK_WEBHOOK_RESPONSE": [["str", 0.214544743965629], ["List[Tuple[str, Any]]", 0.1186432862469398], ["Dict[str, Dict[Any, Any]]", 0.10298709337262314], ["Dict[str, Dict[Any, str]]", 0.10298709337262314], ["Dict[str, str]", 0.0962999624939619], ["Dict[str, Union[Any, int, str]]", 0.0927053639377992], ["Dict[str, Union[Any, Any]]", 0.09192786724976891], ["tests.utils.MockCoroutine", 0.0893062966984911]], "TEST_CONN_ERROR_RETRY_HANDLER": [["str", 0.5065695024067933], ["List[Tuple[Any, Any, Any, bool]]", 0.100375906147231], ["Pattern[str]", 0.10034498535710029], ["int", 0.09845045918316263], ["Dict[str, Union[int, str]]", 0.09754966707989672], ["bool", 0.09670947982581585]], "TEST_CONN_ID": [["str", 0.30356811401094624], ["int", 0.20364715059510363], ["Pattern[Any]", 0.10625474725886382], ["Set[str]", 0.10459196298900811], ["bool", 0.10248128007805146]], "TEST_CUSTOM_ENDPOINT": [["str", 1.0]], "TEST_CUSTOM_SCHEMA": [["str", 1.0]], "TEST_CUSTOM_WEBHOOK_URL": [["str", 0.2882363512993945], ["Dict[str, Union[int, str]]", 0.10647320906050384], ["list", 0.10579297907419956], ["List[Union[Any, Any, Any]]", 0.09564431301461962]], "TEST_RATE_LIMIT_RETRY_HANDLER": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_TOKEN": [["str", 1.0]], "TEST_WEBHOOK_URL": [["Pattern[str]", 0.18544681232617133], ["Dict[str, str]", 0.18095068838385206], ["Dict[str, Callable]", 0.12785621797744853], ["str", 0.09320227374185036], ["List[Dict[str, Any]]", 0.09175249320174857]]}}}