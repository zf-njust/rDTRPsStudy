{"error": null, "response": {"classes": [{"cls_lc": [[28, 0], [167, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[29, 4], [35, 9]], "fn_var_ln": {"default_op_kwargs": [[30, 8], [30, 30]]}, "fn_var_occur": {"default_op_kwargs": [["self", "default_op_kwargs", "None", "None", "None", "None"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "default_op_kwargs", "None", "None", "None", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"default_op_kwargs": ""}, "variables_p": {"default_op_kwargs": [["list", 0.25146109346292284], ["float", 0.09248933960535201], ["List[Tuple[str, int]]", 0.0853444904521321], ["Set[str]", 0.08109723320110696]]}}, {"docstring": {"func": "Test remove deprecated (and unused) SimpleHttpOperator keyword arguments.", "long_descr": "No error should happen if provide any of attribute, unless operator allow to provide this attributes.", "ret": null}, "fn_lc": [[55, 4], [63, 66]], "fn_var_ln": {"kw": [[60, 8], [60, 10]], "warning_message": [[61, 8], [61, 23]]}, "fn_var_occur": {"kw": [["kw", "simple_http_op_attr"], ["SlackWebhookOperator", "task_id", "kw"]], "warning_message": [["warning_message", "simple_http_op_attr"], ["pytest", "warns", "AirflowProviderDeprecationWarning", "match", "warning_message"]]}, "name": "test_unused_deprecated_http_operator_kwargs", "params": {"self": "", "simple_http_op_attr": ""}, "params_descr": {"self": "", "simple_http_op_attr": ""}, "params_occur": {"self": [], "simple_http_op_attr": [["kw", "simple_http_op_attr"], ["warning_message", "simple_http_op_attr"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "simple_http_op_attr": [["Callable", 0.2028175062626122]]}, "q_name": "TestSlackWebhookOperator.test_unused_deprecated_http_operator_kwargs", "ret_exprs": [], "ret_type": "", "variables": {"kw": "", "warning_message": ""}, "variables_p": {"kw": [["str", 0.3030348258850599], ["List[int]", 0.09969546701061908]], "warning_message": [["Pattern[str]", 0.5619933132809434], ["Dict[str, str]", 0.1213747955311357], ["Dict[str, int]", 0.1213747955311357], ["Pattern[bytes]", 0.08916899132562427]]}}, {"docstring": {"func": "Test resolve deprecated http_conn_id.", "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [83, 17]], "fn_var_ln": {"error_message": [[76, 8], [76, 21]], "op": [[71, 12], [71, 14]], "warning_message": [[67, 8], [67, 23]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "AirflowException", "match", "error_message"]], "op": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "None", "http_conn_id"], ["op", "slack_webhook_conn_id"]], "warning_message": [["pytest", "warns", "AirflowProviderDeprecationWarning", "match", "warning_message"], ["pytest", "warns", "AirflowProviderDeprecationWarning", "match", "warning_message"]]}, "name": "test_deprecated_http_conn_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookOperator.test_deprecated_http_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "op": "", "warning_message": ""}, "variables_p": {"error_message": [["Pattern[str]", 1.0]], "op": [["List[List[int]]", 0.1806784697754337], ["dict", 0.1188197428099305], ["Dict[str, str]", 0.107197000040053]], "warning_message": [["Pattern[str]", 0.80367305822754], ["str", 0.19632694177246]]}}, {"docstring": {"func": "Test get cached ``SlackWebhookHook`` hook.", "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [105, 62]], "fn_var_ln": {"hook": [[103, 8], [103, 12]], "op": [[102, 8], [102, 10]], "op_kw": [[97, 8], [97, 13]]}, "fn_var_occur": {"hook": [["hook", "op", "hook"], ["hook", "op", "hook"]], "op": [["op", "SlackWebhookOperator", "task_id", "op_kw"], ["hook", "op", "hook"], ["hook", "op", "hook"]], "op_kw": [["op_kw", "slack_webhook_conn_id", "proxy", "webhook_token"], ["op", "SlackWebhookOperator", "task_id", "op_kw"], ["mock_slackwebhook_cls", "assert_called_once_with", "op_kw"]]}, "name": "test_hook", "params": {"mock_slackwebhook_cls": "", "proxy": "", "self": "", "slack_webhook_conn_id": "", "webhook_token": ""}, "params_descr": {"mock_slackwebhook_cls": "", "proxy": "", "self": "", "slack_webhook_conn_id": "", "webhook_token": ""}, "params_occur": {"mock_slackwebhook_cls": [["mock_slackwebhook_cls", "assert_called_once_with", "op_kw"]], "proxy": [["op_kw", "slack_webhook_conn_id", "proxy", "webhook_token"]], "self": [], "slack_webhook_conn_id": [["op_kw", "slack_webhook_conn_id", "proxy", "webhook_token"]], "webhook_token": [["op_kw", "slack_webhook_conn_id", "proxy", "webhook_token"]]}, "params_p": {"args": [], "kwargs": [], "mock_slackwebhook_cls": [], "proxy": [["str", 0.2631691639486229], ["Optional[str]", 0.21954041103124072], ["int", 0.18007527366780798], ["bool", 0.13571562855646122]], "self": [], "slack_webhook_conn_id": [["str", 0.2631691639486229], ["Optional[str]", 0.21954041103124072], ["int", 0.18007527366780798], ["bool", 0.13571562855646122]], "webhook_token": [["str", 0.2631691639486229], ["Optional[str]", 0.21954041103124072], ["int", 0.18007527366780798], ["bool", 0.13571562855646122]]}, "q_name": "TestSlackWebhookOperator.test_hook", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "op": "", "op_kw": ""}, "variables_p": {"hook": [["Set[str]", 0.1762413816963139], ["list", 0.09246855406672738], ["Tuple[str, str, str, str]", 0.08801464966596476], ["Dict[str, Any]", 0.0873280660914852], ["float", 0.0861879965211732]], "op": [["List[List[int]]", 0.15483170009082914], ["Dict[str, str]", 0.08781336646956975], ["str", 0.08093529124293553], ["Pattern[Any]", 0.07884803671418664]], "op_kw": [["dict", 0.10697886867139954], ["str", 0.0949914666527918], ["RuntimeError", 0.09432382490917955]]}}, {"docstring": {"func": "Test expected templated fields.", "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [119, 58]], "fn_var_ln": {"operator": [[109, 8], [109, 16]], "template_fields": [[110, 8], [110, 23]]}, "fn_var_occur": {"operator": [["operator", "SlackWebhookOperator", "task_id", "self", "default_op_kwargs"], ["operator", "template_fields", "template_fields"]], "template_fields": [["operator", "template_fields", "template_fields"]]}, "name": "test_assert_templated_fields", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["operator", "SlackWebhookOperator", "task_id", "self", "default_op_kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSlackWebhookOperator.test_assert_templated_fields", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "template_fields": ""}, "variables_p": {"operator": [["int", 0.08640357163456933], ["float", 0.07876530647309128], ["bytes", 0.0770448654623209]], "template_fields": [["str", 0.9220430848009687]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[141, 4], [167, 9]], "fn_var_ln": {"mock_slackwebhook": [[144, 8], [144, 25]], "mock_slackwebhook_send": [[145, 8], [145, 30]], "op": [[146, 8], [146, 10]]}, "fn_var_occur": {"mock_slackwebhook": [["mock_slackwebhook", "mock_slackwebhook_cls", "return_value"], ["mock_slackwebhook_send", "mock_slackwebhook", "send"]], "mock_slackwebhook_send": [["mock_slackwebhook_send", "mock_slackwebhook", "send"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]], "op": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["op", "execute", "mock", "MagicMock"]]}, "name": "test_execute_operator", "params": {"attachments": "", "blocks": "", "channel": "", "icon_emoji": "", "icon_url": "", "message": "", "mock_slackwebhook_cls": "", "self": "", "username": ""}, "params_descr": {"attachments": "", "blocks": "", "channel": "", "icon_emoji": "", "icon_url": "", "message": "", "mock_slackwebhook_cls": "", "self": "", "username": ""}, "params_occur": {"attachments": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]], "blocks": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]], "channel": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]], "icon_emoji": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]], "icon_url": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]], "message": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]], "mock_slackwebhook_cls": [["mock_slackwebhook", "mock_slackwebhook_cls", "return_value"]], "self": [], "username": [["op", "SlackWebhookOperator", "task_id", "slack_webhook_conn_id", "message", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url"], ["mock_slackwebhook_send", "assert_called_once_with", "text", "message", "blocks", "blocks", "attachments", "attachments", "channel", "channel", "username", "username", "icon_emoji", "icon_emoji", "icon_url", "icon_url", "link_names", "mock", "ANY"]]}, "params_p": {"args": [], "attachments": [["mock.MagicMock", 0.1026839767346766], ["float", 0.08783498584652445]], "blocks": [["mock.MagicMock", 0.1026839767346766], ["float", 0.08783498584652445]], "channel": [["mock.MagicMock", 0.1026839767346766], ["float", 0.08783498584652445]], "icon_emoji": [["mock.MagicMock", 0.1026839767346766], ["float", 0.08783498584652445]], "icon_url": [["mock.MagicMock", 0.1026839767346766], ["float", 0.08783498584652445]], "kwargs": [], "message": [["mock.MagicMock", 0.1026839767346766], ["float", 0.08783498584652445]], "mock_slackwebhook_cls": [], "self": [], "username": [["mock.MagicMock", 0.1026839767346766], ["float", 0.08783498584652445]]}, "q_name": "TestSlackWebhookOperator.test_execute_operator", "ret_exprs": [], "ret_type": "", "variables": {"mock_slackwebhook": "", "mock_slackwebhook_send": "", "op": ""}, "variables_p": {"mock_slackwebhook": [["Dict[str, Union[int, str]]", 0.12874092216376687], ["list", 0.09568815924203099], ["mock.Mock", 0.07311101438591007]], "mock_slackwebhook_send": [["Dict[str, str]", 0.1338730551390814]], "op": [["List[List[int]]", 0.1821656807706916], ["Dict[str, str]", 0.09948177941924943]]}}], "name": "TestSlackWebhookOperator", "q_name": "TestSlackWebhookOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "airflow", "exceptions", "AirflowException", "AirflowProviderDeprecationWarning", "airflow", "providers", "slack", "operators", "slack_webhook", "SlackWebhookOperator"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 33}, "session_id": "z9d31hox4lqZYFk9w14YwYy0r_FNq1wztETaPbUZDrg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}