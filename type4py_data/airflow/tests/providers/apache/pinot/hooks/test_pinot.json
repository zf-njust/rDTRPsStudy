{"error": null, "response": {"classes": [{"cls_lc": [[38, 8], [40, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 12], [40, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [], "self": [["self", "conn", "conn", "mock", "MagicMock"], ["self", "conn", "host"], ["self", "conn", "port"], ["self", "conn", "extra_dejson"]]}, "params_p": {"args": [], "conn_id": [["int", 0.49999999999999994], ["str", 0.19999999999999998], ["bool", 0.19999999999999998]], "kwargs": [], "self": []}, "q_name": "TestPinotAdminHook.setup_method.<locals>.PinotAdminHookTest.get_connection", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}], "name": "PinotAdminHookTest", "q_name": "TestPinotAdminHook.setup_method.<locals>.PinotAdminHookTest", "variables": {}, "variables_p": {}}, {"cls_lc": [[31, 0], [202, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[32, 4], [42, 43]], "fn_var_ln": {"conn": [[33, 20], [33, 24]], "db_hook": [[42, 8], [42, 20]]}, "fn_var_occur": {"conn": [], "db_hook": [["self", "db_hook", "PinotAdminHookTest"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "PinotAdminHookTest"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotAdminHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "db_hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["Dict[str, Union[int, str]]", 6.111485891715269e-12], ["Counter", 3.492753903786034e-12]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [58, 9]], "fn_var_ln": {"params": [[46, 8], [46, 14]]}, "fn_var_occur": {"params": [["params", "False"], ["self", "db_hook", "add_schema", "params"], ["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]]}, "name": "test_add_schema", "params": {"mock_run_cli": "", "self": ""}, "params_descr": {"mock_run_cli": "", "self": ""}, "params_occur": {"mock_run_cli": [["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]], "self": [["self", "db_hook", "add_schema", "params"], ["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_cli": [["str", 0.21219429510945909]], "self": []}, "q_name": "TestPinotAdminHook.test_add_schema", "ret_exprs": [], "ret_type": "", "variables": {"params": ""}, "variables_p": {"params": [["str", 0.23019377882852038], ["Union[Literal, str]", 0.1529805813361985], ["int", 0.08864976272071377], ["mock.Mock", 0.08142080263595615]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [74, 9]], "fn_var_ln": {"params": [[62, 8], [62, 14]]}, "fn_var_occur": {"params": [["params", "False"], ["self", "db_hook", "add_table", "params"], ["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]]}, "name": "test_add_table", "params": {"mock_run_cli": "", "self": ""}, "params_descr": {"mock_run_cli": "", "self": ""}, "params_occur": {"mock_run_cli": [["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]], "self": [["self", "db_hook", "add_table", "params"], ["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_cli": [], "self": []}, "q_name": "TestPinotAdminHook.test_add_table", "ret_exprs": [], "ret_type": "", "variables": {"params": ""}, "variables_p": {"params": [["str", 0.17774704271827158], ["app.providers.Provider", 0.11619222233006087], ["Dict[str, Union[int, str]]", 0.11128805740458274], ["list", 0.08287525544020143]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [139, 9]], "fn_var_ln": {"params": [[78, 8], [78, 14]]}, "fn_var_occur": {"params": [["params", "True", "False", "True"], ["self", "db_hook", "create_segment", "params"], ["mock_run_cli", "assert_called_once_with", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params"]]}, "name": "test_create_segment", "params": {"mock_run_cli": "", "self": ""}, "params_descr": {"mock_run_cli": "", "self": ""}, "params_occur": {"mock_run_cli": [["mock_run_cli", "assert_called_once_with", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "params"]], "self": [["self", "db_hook", "create_segment", "params"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_cli": [], "self": []}, "q_name": "TestPinotAdminHook.test_create_segment", "ret_exprs": [], "ret_type": "", "variables": {"params": ""}, "variables_p": {"params": [["Dict[str, Any]", 0.09937758443957656]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[142, 4], [155, 9]], "fn_var_ln": {"params": [[143, 8], [143, 14]]}, "fn_var_occur": {"params": [["params", "False"], ["self", "db_hook", "upload_segment", "params"], ["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]]}, "name": "test_upload_segment", "params": {"mock_run_cli": "", "self": ""}, "params_descr": {"mock_run_cli": "", "self": ""}, "params_occur": {"mock_run_cli": [["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]], "self": [["self", "db_hook", "upload_segment", "params"], ["mock_run_cli", "assert_called_once_with", "self", "conn", "host", "self", "conn", "port", "params"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_cli": [["str", 0.26119723463185895]], "self": []}, "q_name": "TestPinotAdminHook.test_upload_segment", "ret_exprs": [], "ret_type": "", "variables": {"params": ""}, "variables_p": {"params": [["str", 0.411600937119642], ["Union[Literal, str]", 0.18614348291358881], ["Dict[str, Union[Any, Any]]", 0.11962570202423382], ["Dict[str, Union[Any, Any, Any]]", 0.09248111556269106]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [169, 9]], "fn_var_ln": {"mock_proc": [[159, 8], [159, 17]], "params": [[164, 8], [164, 14]], "returncode": [[160, 8], [160, 28]], "stdout": [[161, 8], [161, 24]]}, "fn_var_occur": {"mock_proc": [["mock_proc", "mock", "MagicMock"], ["mock_proc", "returncode"], ["mock_proc", "stdout", "io", "BytesIO"], ["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"]], "params": [["self", "db_hook", "run_cli", "params"], ["params", "insert"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "None"]], "returncode": [["mock_proc", "returncode"]], "stdout": [["mock_proc", "stdout", "io", "BytesIO"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "None"]]}, "name": "test_run_cli_success", "params": {"mock_popen": "", "self": ""}, "params_descr": {"mock_popen": "", "self": ""}, "params_occur": {"mock_popen": [["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "None"]], "self": [["self", "db_hook", "run_cli", "params"]]}, "params_p": {"args": [], "kwargs": [], "mock_popen": [["mock.Mock", 0.382677313348005]], "self": []}, "q_name": "TestPinotAdminHook.test_run_cli_success", "ret_exprs": [], "ret_type": "", "variables": {"mock_proc": "", "params": "", "returncode": "", "stdout": ""}, "variables_p": {"mock_proc": [["mock.MagicMock", 0.09979145060977497]], "params": [["str", 0.6265491419429841], ["Union[Literal, str]", 0.20273154553106584], ["Union[Literal, Literal]", 0.08831027602158434], ["Dict[str, Union[Any, Any]]", 0.08240903650436554]], "returncode": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "stdout": [["io.BytesIO", 0.1902652438419278], ["bytes", 0.08946585527555594], ["io.TextIOWrapper", 0.0877740490864274]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[172, 4], [184, 9]], "fn_var_ln": {"mock_proc": [[174, 8], [174, 17]], "msg": [[173, 8], [173, 11]], "params": [[178, 8], [178, 14]], "returncode": [[175, 8], [175, 28]], "stdout": [[176, 8], [176, 24]]}, "fn_var_occur": {"mock_proc": [["mock_proc", "mock", "MagicMock"], ["mock_proc", "returncode"], ["mock_proc", "stdout", "io", "BytesIO", "msg"], ["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"]], "msg": [["mock_proc", "stdout", "io", "BytesIO", "msg"]], "params": [["self", "db_hook", "run_cli", "params"], ["params", "insert"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "None"]], "returncode": [["mock_proc", "returncode"]], "stdout": [["mock_proc", "stdout", "io", "BytesIO", "msg"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "None"]]}, "name": "test_run_cli_failure_error_message", "params": {"mock_popen": "", "self": ""}, "params_descr": {"mock_popen": "", "self": ""}, "params_occur": {"mock_popen": [["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "None"]], "self": [["self", "db_hook", "run_cli", "params"]]}, "params_p": {"args": [], "kwargs": [], "mock_popen": [["mock.Mock", 0.3931975139732528]], "self": []}, "q_name": "TestPinotAdminHook.test_run_cli_failure_error_message", "ret_exprs": [], "ret_type": "", "variables": {"mock_proc": "", "msg": "", "params": "", "returncode": "", "stdout": ""}, "variables_p": {"mock_proc": [["mock.MagicMock", 0.10525678449068432], ["mock.Mock", 0.09385016059330713]], "msg": [["str", 0.21153544082687958], ["bytes", 0.18621411574290003], ["dict", 0.11503677483495499], ["io.TextIOWrapper", 0.09941895697742428], ["io.BufferedReader", 0.09834249860941391], ["io.BufferedWriter", 0.09834249860941391]], "params": [["str", 0.6265491419429841], ["Union[Literal, str]", 0.20273154553106584], ["Union[Literal, Literal]", 0.08831027602158434], ["Dict[str, Union[Any, Any]]", 0.08240903650436554]], "returncode": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "stdout": [["bytes", 0.18658740844151162], ["io.BytesIO", 0.10760530555201377], ["io.TextIOWrapper", 0.10532993082630233]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [202, 9]], "fn_var_ln": {"env": [[198, 8], [198, 11]], "mock_proc": [[188, 8], [188, 17]], "params": [[194, 8], [194, 14]], "returncode": [[189, 8], [189, 28]], "stdout": [[190, 8], [190, 24]]}, "fn_var_occur": {"env": [["env", "os", "environ", "copy"], ["env", "update"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "env"]], "mock_proc": [["mock_proc", "mock", "MagicMock"], ["mock_proc", "returncode"], ["mock_proc", "stdout", "io", "BytesIO"], ["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"]], "params": [["self", "db_hook", "run_cli", "params"], ["params", "insert"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "env"]], "returncode": [["mock_proc", "returncode"]], "stdout": [["mock_proc", "stdout", "io", "BytesIO"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "env"]]}, "name": "test_run_cli_failure_status_code", "params": {"mock_popen": "", "self": ""}, "params_descr": {"mock_popen": "", "self": ""}, "params_occur": {"mock_popen": [["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"], ["mock_popen", "assert_called_once_with", "params", "stderr", "subprocess", "STDOUT", "stdout", "subprocess", "PIPE", "close_fds", "True", "env", "env"]], "self": [["self", "db_hook", "pinot_admin_system_exit", "True"], ["self", "db_hook", "run_cli", "params"]]}, "params_p": {"args": [], "kwargs": [], "mock_popen": [["mock.Mock", 0.2664386529649903]], "self": []}, "q_name": "TestPinotAdminHook.test_run_cli_failure_status_code", "ret_exprs": [], "ret_type": "", "variables": {"env": "", "mock_proc": "", "params": "", "returncode": "", "stdout": ""}, "variables_p": {"env": [["str", 0.42228483143674056], ["Union[Literal, str]", 0.18163603026554614], ["Dict[str, str]", 0.10032032276241268], ["Dict[str, Union[Any, Any]]", 0.09044730979776011], ["Dict[str, Union[int, str]]", 0.08701691141425343]], "mock_proc": [["mock.MagicMock", 0.09979145060977497]], "params": [["str", 0.6265491419429841], ["Union[Literal, str]", 0.20273154553106584], ["Union[Literal, Literal]", 0.08831027602158434], ["Dict[str, Union[Any, Any]]", 0.08240903650436554]], "returncode": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "stdout": [["io.BytesIO", 0.1902652438419278], ["bytes", 0.08946585527555594], ["io.TextIOWrapper", 0.0877740490864274]]}}], "name": "TestPinotAdminHook", "q_name": "TestPinotAdminHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[205, 0], [211, 49]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[206, 4], [208, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_exception_when_overriding_cmd_path", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotAdminHookCreation.test_exception_when_overriding_cmd_path", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[210, 4], [211, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_exception_when_keeping_cmd_path", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotAdminHookCreation.test_exception_when_keeping_cmd_path", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestPinotAdminHookCreation", "q_name": "TestPinotAdminHookCreation", "variables": {}, "variables_p": {}}, {"cls_lc": [[226, 8], [231, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[227, 12], [228, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn", "conn", "mock", "MagicMock"], ["self", "conn", "host"], ["self", "conn", "port"], ["self", "conn", "conn_type"], ["self", "conn", "extra_dejson"], ["self", "cur", "mock", "MagicMock", "rowcount"], ["self", "conn", "cursor", "return_value", "self", "cur"], ["self", "conn", "__enter__", "return_value", "self", "cur"], ["self", "conn", "__exit__", "return_value", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.setup_method.<locals>.TestPinotDBApiHook.get_conn", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[230, 12], [231, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [], "self": []}, "params_p": {"args": [], "conn_id": [["int", 0.49999999999999994], ["str", 0.19999999999999998], ["bool", 0.19999999999999998]], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.setup_method.<locals>.TestPinotDBApiHook.get_connection", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}], "name": "TestPinotDBApiHook", "q_name": "TestPinotDbApiHook.setup_method.<locals>.TestPinotDBApiHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[214, 0], [273, 54]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [233, 41]], "fn_var_ln": {"conn": [[216, 20], [216, 24]], "cur": [[221, 8], [221, 16]], "db_hook": [[233, 8], [233, 20]]}, "fn_var_occur": {"conn": [], "cur": [], "db_hook": [["self", "db_hook", "TestPinotDBApiHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "TestPinotDBApiHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "cur": "", "db_hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "cur": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["int", 0.17772318735265744], ["str", 0.16713724898850246]]}}, {"docstring": {"func": "Test on getting a pinot connection uri", "long_descr": null, "ret": null}, "fn_lc": [[235, 4], [240, 64]], "fn_var_ln": {"db_hook": [[239, 8], [239, 15]]}, "fn_var_occur": {"db_hook": [["db_hook", "self", "db_hook"], ["db_hook", "get_uri"]]}, "name": "test_get_uri", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["db_hook", "self", "db_hook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.test_get_uri", "ret_exprs": [], "ret_type": "", "variables": {"db_hook": ""}, "variables_p": {"db_hook": []}}, {"docstring": {"func": "Test on getting a pinot connection", "long_descr": null, "ret": null}, "fn_lc": [[242, 4], [250, 63]], "fn_var_ln": {"conn": [[246, 8], [246, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "db_hook", "get_conn"], ["conn", "host"], ["conn", "port"], ["conn", "conn_type"], ["conn", "extra_dejson", "get"]]}, "name": "test_get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["conn", "self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.8119876784286406], ["bool", 0.09522329057889733], ["int", 0.09278903099246204]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [256, 67]], "fn_var_ln": {"result_sets": [[254, 8], [254, 19]], "statement": [[253, 8], [253, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_records", "statement"]]}, "name": "test_get_records", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.test_get_records", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.6091932708467824], ["bool", 0.10683523375182219]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[258, 4], [262, 68]], "fn_var_ln": {"result_sets": [[260, 8], [260, 19]], "statement": [[259, 8], [259, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_first", "statement"]]}, "name": "test_get_first", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.test_get_first", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.6091932708467824], ["bool", 0.10683523375182219]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[264, 4], [273, 54]], "fn_var_ln": {"column": [[266, 8], [266, 14]], "df": [[270, 8], [270, 10]], "result_sets": [[267, 8], [267, 19]], "statement": [[265, 8], [265, 17]]}, "fn_var_occur": {"column": [["self", "cur", "description", "column"], ["column", "df", "columns"]], "df": [["df", "self", "db_hook", "get_pandas_df", "statement"], ["column", "df", "columns"], ["item", "df", "values", "tolist", "i"]], "result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["enumerate", "result_sets"]], "statement": [["df", "self", "db_hook", "get_pandas_df", "statement"]]}, "name": "test_get_pandas_df", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "description", "column"], ["self", "cur", "fetchall", "return_value", "result_sets"], ["df", "self", "db_hook", "get_pandas_df", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPinotDbApiHook.test_get_pandas_df", "ret_exprs": [], "ret_type": "", "variables": {"column": "", "df": "", "result_sets": "", "statement": ""}, "variables_p": {"column": [["str", 0.2514383088298724], ["int", 0.1922766414040206], ["dict", 0.12681732062703294], ["Dict[str, int]", 0.12477955940011504], ["List[str]", 0.11673232158052399], ["Optional[str]", 0.10414307854847757], ["bool", 0.08381276960995745]], "df": [["Tuple[Any, Any, Any, Any]", 0.3757400897303964], ["List[str]", 0.11412969269632396], ["str", 0.09740362926634165], ["list", 0.09569431329720011]], "result_sets": [["Dict[float, int]", 0.38664669374509325], ["Dict[str, str]", 0.10971008628745654], ["Dict[str, Dict[str, Any]]", 0.10624481403607677], ["float", 0.10602636803568007], ["str", 0.0992127516527673], ["Dict[str, Dict[str, str]]", 0.09607964312146304], ["Dict[int, Any]", 0.09607964312146304]], "statement": [["str", 0.20876359651985738], ["int", 0.19023618816498922], ["Final", 0.12362211718403086], ["Tuple[str, str, str, str, str, str, str, str, str, str]", 0.09828734765629914], ["float", 0.09675913396752218], ["dict", 0.09577631574423152], ["List[str]", 0.09077898501883803]]}}], "name": "TestPinotDbApiHook", "q_name": "TestPinotDbApiHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "io", "os", "subprocess", "unittest", "mock", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "providers", "apache", "pinot", "hooks", "pinot", "PinotAdminHook", "PinotDbApiHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 61}, "session_id": "1nqfhIm8Cjjmi3fB7h2y_XVln_lzv62qeATCpMuLiMU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}