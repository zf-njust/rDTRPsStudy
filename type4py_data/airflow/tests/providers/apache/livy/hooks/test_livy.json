{"error": null, "response": {"classes": [{"cls_lc": [[54, 0], [406, 60]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [80, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestLivyHook.setup_class", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [84, 63]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestLivyHook.teardown_class", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [99, 40]], "fn_var_ln": {"hook": [[97, 8], [97, 12]]}, "fn_var_occur": {"hook": [["hook", "LivyHook", "livy_conn_id", "conn_id"], ["hook", "get_conn"], ["hook", "base_url", "expected"]]}, "name": "test_build_get_hook", "params": {"conn_id": "", "expected": "", "self": ""}, "params_descr": {"conn_id": "", "expected": "", "self": ""}, "params_occur": {"conn_id": [["hook", "LivyHook", "livy_conn_id", "conn_id"]], "expected": [["hook", "base_url", "expected"]], "self": []}, "params_p": {"args": [], "conn_id": [["int", 0.3923533286956852], ["str", 0.3090646458812223], ["bool", 0.10524846481945598], ["Union[int,str]", 0.09995492759983018], ["Tuple[Optional[str], str]", 0.09337863300380621]], "expected": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_build_get_hook", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[str]", 0.11141657874383419], ["Dict[str, Any]", 0.10928951994334953], ["str", 0.0945674859270235], ["Tuple[Any, Any]", 0.09039120237800415]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[102, 4], [104, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_host", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_missing_host", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [107, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_build_body_minimal_request", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_build_body_minimal_request", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [146, 9]], "fn_var_ln": {"body": [[110, 8], [110, 12]]}, "fn_var_occur": {"body": [["body", "LivyHook", "build_post_batch_body", "file", "class_name", "proxy_user", "args", "jars", "files", "py_files", "archives", "queue", "name", "conf", "driver_cores", "driver_memory", "executor_memory", "executor_cores", "num_executors"]]}, "name": "test_build_body_complex_request", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_build_body_complex_request", "ret_exprs": [], "ret_type": "", "variables": {"body": ""}, "variables_p": {"body": [["List[str]", 0.39248586156558524], ["str", 0.20401491816159506], ["Dict[str, str]", 0.103675626515127]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [152, 110]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parameters_validation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_parameters_validation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [166, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_size_format", "params": {"self": "", "size": ""}, "params_descr": {"self": "", "size": ""}, "params_occur": {"self": [], "size": [["LivyHook", "_validate_size_format", "size"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "size": [["int", 0.33338988139361503], ["str", 0.09427445135021817]]}, "q_name": "TestLivyHook.test_validate_size_format", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [178, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_size_format_failed", "params": {"self": "", "size": ""}, "params_descr": {"self": "", "size": ""}, "params_occur": {"self": [], "size": [["pytest", "raises", "ValueError", "match", "size"], ["LivyHook", "_validate_size_format", "size"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "size": [["int", 0.37666897995101456], ["str", 0.29279639997387114], ["Optional[int]", 0.12387258167402625]]}, "q_name": "TestLivyHook.test_validate_size_format_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 4], [189, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_list_of_stringables", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["LivyHook", "_validate_list_of_stringables", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["Mapping[str, Any]", 0.19390292344650675], ["bool", 0.10248947340563552], ["dict", 0.09483739666589124]]}, "q_name": "TestLivyHook.test_validate_list_of_stringables", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[201, 4], [203, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_list_of_stringables_failed", "params": {"self": "", "value": ""}, "params_descr": {"self": "", "value": ""}, "params_occur": {"self": [], "value": [["LivyHook", "_validate_list_of_stringables", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "value": [["Mapping[str, Any]", 0.19390292344650675], ["bool", 0.10248947340563552], ["dict", 0.09483739666589124]]}, "q_name": "TestLivyHook.test_validate_list_of_stringables_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[213, 4], [214, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_extra_conf", "params": {"config": "", "self": ""}, "params_descr": {"config": "", "self": ""}, "params_occur": {"config": [["LivyHook", "_validate_extra_conf", "config"]], "self": []}, "params_p": {"args": [], "config": [["int", 0.11788127362533826], ["IO", 0.11549469349689348], ["app.models.dto.ClientInfo", 0.09251964112653449], ["Callable", 0.08964319183484273]], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_validate_extra_conf", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[226, 4], [228, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_extra_conf_failed", "params": {"config": "", "self": ""}, "params_descr": {"config": "", "self": ""}, "params_occur": {"config": [["LivyHook", "_validate_extra_conf", "config"]], "self": []}, "params_p": {"args": [], "config": [["int", 0.11788127362533826], ["IO", 0.11549469349689348], ["app.models.dto.ClientInfo", 0.09251964112653449], ["Callable", 0.08964319183484273]], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_validate_extra_conf_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [251, 31]], "fn_var_ln": {"request_args": [[246, 8], [246, 20]], "resp": [[240, 8], [240, 12]]}, "fn_var_occur": {"request_args": [["request_args", "mock_request", "call_args", "kwargs"], ["isinstance", "request_args", "str"]], "resp": [["resp", "LivyHook", "post_batch", "file"], ["isinstance", "resp", "int"], ["resp", "BATCH_ID"]]}, "name": "test_post_batch_arguments", "params": {"mock_request": "", "self": ""}, "params_descr": {"mock_request": "", "self": ""}, "params_occur": {"mock_request": [["mock_request", "return_value", "status_code"], ["mock_request", "return_value", "json", "return_value", "BATCH_ID", "BatchState", "STARTING", "value"], ["mock_request", "assert_called_once_with", "method", "endpoint", "data", "json", "dumps", "headers"], ["request_args", "mock_request", "call_args", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_request": [["unittesmock.MagicMock", 0.6065352619036541]], "self": []}, "q_name": "TestLivyHook.test_post_batch_arguments", "ret_exprs": [], "ret_type": "", "variables": {"request_args": "", "resp": ""}, "variables_p": {"request_args": [["dict", 0.3407613520447693], ["Union[Literal, str]", 0.26831915647775184], ["Dict[str, Dict[str, Any]]", 0.10500799819364874], ["Dict[str, Union[bytes, str]]", 0.09147226196748721]], "resp": [["list", 0.12096221734772815], ["List[Tuple[str, str]]", 0.10768685857161492], ["Callable(hash)[[object], int]", 0.10267662060004391], ["str", 0.10217076576450398], ["Dict[Any, Dict[str, str]]", 0.09883629439175617], ["List[str]", 0.09281313901670175], ["unittesmock.MagicMock", 0.09017698382774053], ["Dict[str, str]", 0.08938135885919878]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [262, 31]], "fn_var_ln": {"resp": [[260, 8], [260, 12]]}, "fn_var_occur": {"resp": [["resp", "LivyHook", "post_batch", "file"], ["isinstance", "resp", "int"], ["resp", "BATCH_ID"]]}, "name": "test_post_batch_success", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "json", "BATCH_ID", "BatchState", "STARTING", "value", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.4330091310677267], ["unittesmock.MagicMock", 0.07669743936693148]], "self": []}, "q_name": "TestLivyHook.test_post_batch_success", "ret_exprs": [], "ret_type": "", "variables": {"resp": ""}, "variables_p": {"resp": [["list", 0.12096221734772815], ["List[Tuple[str, str]]", 0.10768685857161492], ["Callable(hash)[[object], int]", 0.10267662060004391], ["str", 0.10217076576450398], ["Dict[Any, Dict[str, str]]", 0.09883629439175617], ["List[str]", 0.09281313901670175], ["unittesmock.MagicMock", 0.09017698382774053], ["Dict[str, str]", 0.08938135885919878]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[264, 4], [267, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_post_batch_fail", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "json", "status_code", "reason"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.5921749014395629]], "self": []}, "q_name": "TestLivyHook.test_post_batch_fail", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 4], [275, 27]], "fn_var_ln": {"resp": [[273, 8], [273, 12]]}, "fn_var_occur": {"resp": [["resp", "LivyHook", "get_batch", "BATCH_ID"], ["isinstance", "resp", "dict"]]}, "name": "test_get_batch_success", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.43586782426266435]], "self": []}, "q_name": "TestLivyHook.test_get_batch_success", "ret_exprs": [], "ret_type": "", "variables": {"resp": ""}, "variables_p": {"resp": [["Dict[str, Union[float, str]]", 0.191555853446753], ["List[str]", 0.12172693836228775], ["Dict[str, Union[int, str]]", 0.11771853367008149], ["bytes", 0.11627604949954662], ["list", 0.09802395428614082], ["pytch.utils.Position", 0.08213273556366547]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[277, 4], [286, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_fail", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.5735832587576772]], "self": []}, "q_name": "TestLivyHook.test_get_batch_fail", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[288, 4], [290, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_invalid_uri", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_invalid_uri", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[292, 4], [305, 31]], "fn_var_ln": {"running": [[293, 8], [293, 15]], "state": [[302, 8], [302, 13]]}, "fn_var_occur": {"running": [["running", "BatchState", "RUNNING"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "running", "value", "status_code"], ["state", "running"]], "state": [["state", "LivyHook", "get_batch_state", "BATCH_ID"], ["isinstance", "state", "BatchState"], ["state", "running"]]}, "name": "test_get_batch_state_success", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "running", "value", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.5701151075482915]], "self": []}, "q_name": "TestLivyHook.test_get_batch_state_success", "ret_exprs": [], "ret_type": "", "variables": {"running": "", "state": ""}, "variables_p": {"running": [["float", 0.38666255130766436], ["int", 0.30951363853843855], ["str", 0.22125699981281766], ["bytes", 0.08256681034107927]], "state": [["raiden.utils.Any", 0.15916928128858426], ["Optional[raiden.utils.TokenNetworkAddress]", 0.0916200134481556], ["src.scrape.models.Product", 0.08554857607084289], ["raiden.utils.TokenNetworkAddress", 0.08517523183361901]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[307, 4], [312, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_state_fail", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.5642199245034292]], "self": []}, "q_name": "TestLivyHook.test_get_batch_state_fail", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[314, 4], [317, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_state_missing", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.40015395649310204]], "self": []}, "q_name": "TestLivyHook.test_get_batch_state_missing", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[319, 4], [321, 33]], "fn_var_ln": {"res_id": [[320, 8], [320, 14]]}, "fn_var_occur": {"res_id": [["res_id", "LivyHook", "_parse_post_response", "BATCH_ID"], ["BATCH_ID", "res_id"]]}, "name": "test_parse_post_response", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_parse_post_response", "ret_exprs": [], "ret_type": "", "variables": {"res_id": ""}, "variables_p": {"res_id": [["int", 0.1692812968509181]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[323, 4], [327, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_batch_success", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.6602480656063181]], "self": []}, "q_name": "TestLivyHook.test_delete_batch_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[329, 4], [334, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_batch_fail", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.557015294408812]], "self": []}, "q_name": "TestLivyHook.test_delete_batch_fail", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[336, 4], [339, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_batch_id", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "json", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.28402588547614394]], "self": []}, "q_name": "TestLivyHook.test_missing_batch_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[342, 4], [346, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_validation", "params": {"requests_mock": "", "self": "", "session_id": ""}, "params_descr": {"requests_mock": "", "self": "", "session_id": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"]], "self": [], "session_id": [["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"], ["LivyHook", "get_batch", "session_id", "SAMPLE_GET_RESPONSE"]]}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.5098616925039477], ["str", 0.49013830749605225]], "self": [], "session_id": [["unittesmock.MagicMock", 0.5105956412781083], ["str", 0.40734876341590487]]}, "q_name": "TestLivyHook.test_get_batch_validation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[349, 4], [351, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_validation_failed", "params": {"self": "", "session_id": ""}, "params_descr": {"self": "", "session_id": ""}, "params_occur": {"self": [], "session_id": [["LivyHook", "get_batch", "session_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session_id": [["str", 0.5868374889076303], ["int", 0.3214238084857661]]}, "q_name": "TestLivyHook.test_get_batch_validation_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[354, 4], [358, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_state_validation", "params": {"requests_mock": "", "self": "", "session_id": ""}, "params_descr": {"requests_mock": "", "self": "", "session_id": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"]], "self": [], "session_id": [["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"], ["LivyHook", "get_batch_state", "session_id", "BatchState", "SUCCESS"]]}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["str", 0.5937484877237249], ["unittesmock.MagicMock", 0.406251512276275]], "self": [], "session_id": [["str", 0.3800663336659341], ["mediaarchiver.models.Account", 0.1011378759664937], ["dict", 0.09893880570653732]]}, "q_name": "TestLivyHook.test_get_batch_state_validation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[361, 4], [363, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_state_validation_failed", "params": {"self": "", "session_id": ""}, "params_descr": {"self": "", "session_id": ""}, "params_occur": {"self": [], "session_id": [["LivyHook", "get_batch_state", "session_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session_id": [["int", 0.5377109251638452], ["str", 0.1625322847138572], ["List[int]", 0.0803467837035922]]}, "q_name": "TestLivyHook.test_get_batch_state_validation_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[365, 4], [369, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_batch_validation", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.6709505946119663]], "self": []}, "q_name": "TestLivyHook.test_delete_batch_validation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[372, 4], [374, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_batch_validation_failed", "params": {"self": "", "session_id": ""}, "params_descr": {"self": "", "session_id": ""}, "params_occur": {"self": [], "session_id": [["LivyHook", "delete_batch", "session_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session_id": [["str", 0.38602216877576295], ["int", 0.3385471072646098]]}, "q_name": "TestLivyHook.test_delete_batch_validation_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[377, 4], [378, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_session_id", "params": {"self": "", "session_id": ""}, "params_descr": {"self": "", "session_id": ""}, "params_occur": {"self": [], "session_id": [["LivyHook", "_validate_session_id", "session_id"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session_id": [["int", 0.5023894987513953], ["str", 0.40284318092258214], ["Dict[str, Any]", 0.09476732032602248]]}, "q_name": "TestLivyHook.test_check_session_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[381, 4], [383, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_session_id_failed", "params": {"self": "", "session_id": ""}, "params_descr": {"self": "", "session_id": ""}, "params_occur": {"self": [], "session_id": []}, "params_p": {"args": [], "kwargs": [], "self": [], "session_id": [["List[str]", 0.341624441798774], ["bool", 0.21330385781171182], ["Dict[str, Any]", 0.09671732925658064], ["str", 0.08663330351520272]]}, "q_name": "TestLivyHook.test_check_session_id_failed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[385, 4], [395, 40]], "fn_var_ln": {"hook": [[394, 8], [394, 12]]}, "fn_var_occur": {"hook": [["hook", "LivyHook", "extra_headers"], ["hook", "post_batch", "file"]]}, "name": "test_extra_headers", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["requests_mock", "register_uri", "json", "BATCH_ID", "BatchState", "STARTING", "value", "status_code", "request_headers"]], "self": []}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.41328995348369574], ["unittesmock.MagicMock", 0.19640014341221276]], "self": []}, "q_name": "TestLivyHook.test_extra_headers", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.08672425891257822], ["str", 0.08533943165135632]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[397, 4], [406, 60]], "fn_var_ln": {"auth_type": [[398, 8], [398, 17]], "hook": [[400, 8], [400, 12]]}, "fn_var_occur": {"auth_type": [["auth_type", "MagicMock"], ["hook", "LivyHook", "livy_conn_id", "auth_type", "auth_type"], ["auth_type", "assert_not_called"], ["auth_type", "assert_called_once_with"]], "hook": [["hook", "LivyHook", "livy_conn_id", "auth_type", "auth_type"], ["hook", "get_conn"]]}, "name": "test_alternate_auth_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyHook.test_alternate_auth_type", "ret_exprs": [], "ret_type": "", "variables": {"auth_type": "", "hook": ""}, "variables_p": {"auth_type": [["unittesmock.MagicMock", 0.1675971393744272], ["dict", 0.1381454770385827], ["tests.conftesConfluentAvroConsumerMock", 0.11500004517598568], ["Dict[str, Any]", 0.09415205873664205], ["List[Dict[str, Any]]", 0.0859849273910309], ["int", 0.08436318253901694]], "hook": [["int", 0.13403564644424396]]}}], "name": "TestLivyHook", "q_name": "TestLivyHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[409, 0], [792, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Asserts the batch state as running with success response.", "long_descr": null, "ret": null}, "fn_lc": [[412, 4], [421, 9]], "fn_var_ln": {"hook": [[415, 8], [415, 12]], "return_value": [[414, 8], [414, 36]], "state": [[416, 8], [416, 13]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["state", "hook", "get_batch_state", "BATCH_ID"]], "return_value": [["mock_run_method", "return_value", "BatchState", "RUNNING"]], "state": [["state", "hook", "get_batch_state", "BATCH_ID"], ["state", "BatchState", "RUNNING"]]}, "name": "test_get_batch_state_running", "params": {"mock_run_method": "", "self": ""}, "params_descr": {"mock_run_method": "", "self": ""}, "params_occur": {"mock_run_method": [["mock_run_method", "return_value", "BatchState", "RUNNING"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_run_method": [["unittesmock.MagicMock", 1.0000000000000002]], "self": []}, "q_name": "TestLivyAsyncHook.test_get_batch_state_running", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": "", "state": ""}, "variables_p": {"hook": [["Dict[str, Any]", 0.09083215486178614], ["List[Dict[str, Any]]", 0.08656008904046197], ["list", 0.08371199453039047], ["alerta.models.alerAlert", 0.07761091478906401]], "return_value": [["str", 0.46530361635822903], ["int", 0.15764330418398248], ["list", 0.10075713639282631], ["Dict[str, str]", 0.08549180551521053], ["unittesmock.MagicMock", 0.0783169595838787]], "state": [["raiden.utils.Any", 0.13439009155254292], ["Tuple[Any, Any, Any]", 0.11881352017532516], ["str", 0.09760806389901472], ["Optional[str]", 0.08394225296646332]]}}, {"docstring": {"func": "Asserts the batch state as error with error response.", "long_descr": null, "ret": null}, "fn_lc": [[425, 4], [430, 41]], "fn_var_ln": {"hook": [[428, 8], [428, 12]], "return_value": [[427, 8], [427, 36]], "state": [[429, 8], [429, 13]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["state", "hook", "get_batch_state", "BATCH_ID"]], "return_value": [["mock_run_method", "return_value"]], "state": [["state", "hook", "get_batch_state", "BATCH_ID"]]}, "name": "test_get_batch_state_error", "params": {"mock_run_method": "", "self": ""}, "params_descr": {"mock_run_method": "", "self": ""}, "params_occur": {"mock_run_method": [["mock_run_method", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_run_method": [["unittesmock.MagicMock", 0.17524570554414537]], "self": []}, "q_name": "TestLivyAsyncHook.test_get_batch_state_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": "", "state": ""}, "variables_p": {"hook": [["Dict[str, Any]", 0.09083215486178614], ["List[Dict[str, Any]]", 0.08656008904046197], ["list", 0.08371199453039047], ["alerta.models.alerAlert", 0.07761091478906401]], "return_value": [["list", 0.22678446232736738], ["Tuple[int, int]", 0.12436051666956545], ["List[Tuple[str, str]]", 0.10867657113455054], ["tests.mock.zwave.MockNode", 0.09540570566088229], ["str", 0.09525195137584432], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0915609326352504], ["List[str]", 0.08853395083108118], ["List[Dict[str, str]]", 0.08471295468272921]], "state": [["raiden.utils.Any", 0.17301958208533152], ["str", 0.10452920948993549], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10070025570632547], ["raiden.utils.TokenAddress", 0.09436150419865397], ["cmk.utils.type_defs.UserId", 0.08855244130007794], ["list", 0.08526708038567692], ["int", 0.07966922189616332]]}}, {"docstring": {"func": "Asserts the batch state as error without state returned as part of mock.", "long_descr": null, "ret": null}, "fn_lc": [[434, 4], [439, 41]], "fn_var_ln": {"hook": [[437, 8], [437, 12]], "return_value": [[436, 8], [436, 36]], "state": [[438, 8], [438, 13]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["state", "hook", "get_batch_state", "BATCH_ID"]], "return_value": [["mock_run_method", "return_value"]], "state": [["state", "hook", "get_batch_state", "BATCH_ID"]]}, "name": "test_get_batch_state_error_without_state", "params": {"mock_run_method": "", "self": ""}, "params_descr": {"mock_run_method": "", "self": ""}, "params_occur": {"mock_run_method": [["mock_run_method", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_run_method": [["unittesmock.MagicMock", 0.181636848600627]], "self": []}, "q_name": "TestLivyAsyncHook.test_get_batch_state_error_without_state", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": "", "state": ""}, "variables_p": {"hook": [["Dict[str, Any]", 0.09083215486178614], ["List[Dict[str, Any]]", 0.08656008904046197], ["list", 0.08371199453039047], ["alerta.models.alerAlert", 0.07761091478906401]], "return_value": [["list", 0.22678446232736738], ["Tuple[int, int]", 0.12436051666956545], ["List[Tuple[str, str]]", 0.10867657113455054], ["tests.mock.zwave.MockNode", 0.09540570566088229], ["str", 0.09525195137584432], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0915609326352504], ["List[str]", 0.08853395083108118], ["List[Dict[str, str]]", 0.08471295468272921]], "state": [["raiden.utils.Any", 0.17301958208533152], ["str", 0.10452920948993549], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10070025570632547], ["raiden.utils.TokenAddress", 0.09436150419865397], ["cmk.utils.type_defs.UserId", 0.08855244130007794], ["list", 0.08526708038567692], ["int", 0.07966922189616332]]}}, {"docstring": {"func": "Asserts the batch log as success.", "long_descr": null, "ret": null}, "fn_lc": [[443, 4], [448, 43]], "fn_var_ln": {"hook": [[446, 8], [446, 12]], "return_value": [[445, 8], [445, 36]], "state": [[447, 8], [447, 13]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["state", "hook", "get_batch_logs", "BATCH_ID"]], "return_value": [["mock_run_method", "return_value"]], "state": [["state", "hook", "get_batch_logs", "BATCH_ID"]]}, "name": "test_get_batch_logs_success", "params": {"mock_run_method": "", "self": ""}, "params_descr": {"mock_run_method": "", "self": ""}, "params_occur": {"mock_run_method": [["mock_run_method", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_run_method": [["unittesmock.MagicMock", 0.09530152461137043]], "self": []}, "q_name": "TestLivyAsyncHook.test_get_batch_logs_success", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": "", "state": ""}, "variables_p": {"hook": [["int", 0.3873194730841656], ["str", 0.098260339480854]], "return_value": [["list", 0.22678446232736738], ["Tuple[int, int]", 0.12436051666956545], ["List[Tuple[str, str]]", 0.10867657113455054], ["tests.mock.zwave.MockNode", 0.09540570566088229], ["str", 0.09525195137584432], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0915609326352504], ["List[str]", 0.08853395083108118], ["List[Dict[str, str]]", 0.08471295468272921]], "state": [["str", 0.3851517482961318], ["List[str]", 0.19293862869513095], ["tuple", 0.10624165281740093], ["Dict[bool, str]", 0.09779639261256584]]}}, {"docstring": {"func": "Asserts the batch log for error.", "long_descr": null, "ret": null}, "fn_lc": [[452, 4], [457, 41]], "fn_var_ln": {"hook": [[455, 8], [455, 12]], "return_value": [[454, 8], [454, 36]], "state": [[456, 8], [456, 13]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["state", "hook", "get_batch_logs", "BATCH_ID"]], "return_value": [["mock_run_method", "return_value"]], "state": [["state", "hook", "get_batch_logs", "BATCH_ID"]]}, "name": "test_get_batch_logs_error", "params": {"mock_run_method": "", "self": ""}, "params_descr": {"mock_run_method": "", "self": ""}, "params_occur": {"mock_run_method": [["mock_run_method", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_run_method": [["unittesmock.MagicMock", 0.27010616640300467]], "self": []}, "q_name": "TestLivyAsyncHook.test_get_batch_logs_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": "", "state": ""}, "variables_p": {"hook": [["int", 0.3873194730841656], ["str", 0.098260339480854]], "return_value": [["list", 0.22678446232736738], ["Tuple[int, int]", 0.12436051666956545], ["List[Tuple[str, str]]", 0.10867657113455054], ["tests.mock.zwave.MockNode", 0.09540570566088229], ["str", 0.09525195137584432], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0915609326352504], ["List[str]", 0.08853395083108118], ["List[Dict[str, str]]", 0.08471295468272921]], "state": [["str", 0.3851517482961318], ["List[str]", 0.19293862869513095], ["tuple", 0.10624165281740093], ["Dict[bool, str]", 0.09779639261256584]]}}, {"docstring": {"func": "Asserts the log dump log for success response.", "long_descr": null, "ret": null}, "fn_lc": [[461, 4], [469, 69]], "fn_var_ln": {"hook": [[467, 8], [467, 12]], "log_dump": [[468, 8], [468, 16]], "return_value": [[463, 8], [463, 40]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["log_dump", "hook", "dump_batch_logs", "BATCH_ID"]], "log_dump": [["log_dump", "hook", "dump_batch_logs", "BATCH_ID"]], "return_value": [["mock_get_batch_logs", "return_value"]]}, "name": "test_dump_batch_logs_success", "params": {"mock_get_batch_logs": "", "self": ""}, "params_descr": {"mock_get_batch_logs": "", "self": ""}, "params_occur": {"mock_get_batch_logs": [["mock_get_batch_logs", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_batch_logs": [["unittesmock.MagicMock", 0.2548656971868171], ["tests._TestServerFactory", 0.1311443396482097]], "self": []}, "q_name": "TestLivyAsyncHook.test_dump_batch_logs_success", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "log_dump": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.4511193551254814], ["list", 0.0882433948665455], ["Dict[int, Dict[str, Any]]", 0.08269656293350955]], "log_dump": [["int", 0.10684933453880736], ["Dict[str, Union[Any, Any]]", 0.07424095489166527], ["dict", 0.07332103553081414], ["Dict[str, Union[Any, Any, Any]]", 0.07331708622943992]], "return_value": [["str", 0.6783753270419012], ["int", 0.1592914479169122], ["List[str]", 0.08988135201342469], ["unittesmock.MagicMock", 0.07245187302776188]]}}, {"docstring": {"func": "Asserts the log dump log for error response.", "long_descr": null, "ret": null}, "fn_lc": [[473, 4], [481, 73]], "fn_var_ln": {"hook": [[479, 8], [479, 12]], "log_dump": [[480, 8], [480, 16]], "return_value": [[475, 8], [475, 40]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["log_dump", "hook", "dump_batch_logs", "BATCH_ID"]], "log_dump": [["log_dump", "hook", "dump_batch_logs", "BATCH_ID"]], "return_value": [["mock_get_batch_logs", "return_value"]]}, "name": "test_dump_batch_logs_error", "params": {"mock_get_batch_logs": "", "self": ""}, "params_descr": {"mock_get_batch_logs": "", "self": ""}, "params_occur": {"mock_get_batch_logs": [["mock_get_batch_logs", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_batch_logs": [["unittesmock.MagicMock", 0.26112121719317294], ["mock.MagicMock", 0.06909027627303702]], "self": []}, "q_name": "TestLivyAsyncHook.test_dump_batch_logs_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "log_dump": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.4511193551254814], ["list", 0.0882433948665455], ["Dict[int, Dict[str, Any]]", 0.08269656293350955]], "log_dump": [["int", 0.10684933453880736], ["Dict[str, Union[Any, Any]]", 0.07424095489166527], ["dict", 0.07332103553081414], ["Dict[str, Union[Any, Any, Any]]", 0.07331708622943992]], "return_value": [["str", 0.6783753270419012], ["int", 0.1592914479169122], ["List[str]", 0.08988135201342469], ["unittesmock.MagicMock", 0.07245187302776188]]}}, {"docstring": {"func": "Asserts the run_method for success response.", "long_descr": null, "ret": null}, "fn_lc": [[485, 4], [490, 46]], "fn_var_ln": {"hook": [[488, 8], [488, 12]], "response": [[489, 8], [489, 16]], "return_value": [[487, 8], [487, 43]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["response", "hook", "run_method"]], "response": [["response", "hook", "run_method"]], "return_value": [["mock_do_api_call_async", "return_value"]]}, "name": "test_run_method_success", "params": {"mock_do_api_call_async": "", "self": ""}, "params_descr": {"mock_do_api_call_async": "", "self": ""}, "params_occur": {"mock_do_api_call_async": [["mock_do_api_call_async", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_do_api_call_async": [["unittesmock.MagicMock", 0.9999999999999999]], "self": []}, "q_name": "TestLivyAsyncHook.test_run_method_success", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": "", "return_value": ""}, "variables_p": {"hook": [["List[Dict[str, Any]]", 0.1113605642671902], ["str", 0.10536567286019287], ["dict", 0.09602051705382147], ["List[unittesmock.MagicMock]", 0.08710933608845967], ["Dict[str, str]", 0.08540376721398095]], "response": [["str", 1.0]], "return_value": [["list", 0.14498489080462748], ["Type[tuple]", 0.11638836458168954], ["cmk.utils.structured_data.Numeration", 0.08480860271220388], ["str", 0.08365111991648708], ["Dict[str, Union[Any, Any]]", 0.07809170317282997], ["int", 0.07178581967077682]]}}, {"docstring": {"func": "Asserts the run_method for error response.", "long_descr": null, "ret": null}, "fn_lc": [[494, 4], [499, 85]], "fn_var_ln": {"hook": [[497, 8], [497, 12]], "response": [[498, 8], [498, 16]], "return_value": [[496, 8], [496, 43]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["response", "hook", "run_method"]], "response": [["response", "hook", "run_method"]], "return_value": [["mock_do_api_call_async", "return_value"]]}, "name": "test_run_method_error", "params": {"mock_do_api_call_async": "", "self": ""}, "params_descr": {"mock_do_api_call_async": "", "self": ""}, "params_occur": {"mock_do_api_call_async": [["mock_do_api_call_async", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_do_api_call_async": [["unittesmock.MagicMock", 0.7380030773336419]], "self": []}, "q_name": "TestLivyAsyncHook.test_run_method_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": "", "return_value": ""}, "variables_p": {"hook": [["List[Dict[str, Any]]", 0.1113605642671902], ["str", 0.10536567286019287], ["dict", 0.09602051705382147], ["List[unittesmock.MagicMock]", 0.08710933608845967], ["Dict[str, str]", 0.08540376721398095]], "response": [["str", 1.0]], "return_value": [["list", 0.14498489080462748], ["Type[tuple]", 0.11638836458168954], ["cmk.utils.structured_data.Numeration", 0.08480860271220388], ["str", 0.08365111991648708], ["Dict[str, Union[Any, Any]]", 0.07809170317282997], ["int", 0.07178581967077682]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[507, 8], [508, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_fun", "params": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_descr": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_occur": {"arg1": [], "arg2": [], "arg3": [], "arg4": []}, "params_p": {"arg1": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg2": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg3": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg4": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_post_method_with_success.<locals>.mock_fun", "ret_exprs": ["return {\"status\": \"success\"}"], "ret_type": "", "ret_type_p": [["str", 0.2721283839652534], ["django.db.models.query.QuerySet", 0.1674015589227201], ["List[Dict[str, Any]]", 0.14883334784947105], ["raiden.utils.TokenAmount", 0.07874306650164686], ["raiden.utils.BlockNumber", 0.07874306650164686]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Asserts the _do_api_call_async for success response for POST method.", "long_descr": null, "ret": null}, "fn_lc": [[504, 4], [522, 48]], "fn_var_ln": {"GET_RUN_ENDPOINT": [[515, 8], [515, 24]], "hook": [[516, 8], [516, 12]], "http_conn_id": [[517, 8], [517, 25]], "response": [[521, 8], [521, 16]]}, "fn_var_occur": {"GET_RUN_ENDPOINT": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "http_conn_id": [["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"]], "response": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]]}, "name": "test_do_api_call_async_post_method_with_success", "params": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_descr": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_occur": {"mock_get_connection": [["hook", "http_conn_id", "mock_get_connection"]], "mock_session": [["mock_session", "return_value", "__aexit__", "return_value", "mock_fun"], ["mock_session", "return_value", "__aenter__", "return_value", "post", "AsyncMock"], ["mock_session", "return_value", "__aenter__", "return_value", "post", "return_value", "json", "AsyncMock", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.4298580851115871], ["mock.MagicMock", 0.07993320079828566]], "mock_session": [["unittesmock.MagicMock", 0.2964575222156389]], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_post_method_with_success", "ret_exprs": [], "ret_type": "", "variables": {"GET_RUN_ENDPOINT": "", "hook": "", "http_conn_id": "", "response": ""}, "variables_p": {"GET_RUN_ENDPOINT": [["str", 0.6957760881335562], ["int", 0.18522500928723984], ["List[Pattern[str]]", 0.11899890257920415]], "hook": [["Dict[str, Any]", 0.18563570745360028], ["list", 0.10738333500666221], ["Counter", 0.10738333500666221], ["str", 0.0921440560419316]], "http_conn_id": [["str", 0.8544916912261069], ["Optional[str]", 0.14550830877389317]], "response": [["int", 0.11999956158918938], ["Dict[int, str]", 0.09882723687093091], ["Dict[str, str]", 0.0967561508268901], ["Dict[str, Union[Any, Any, Any]]", 0.08692893046545597]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[530, 8], [531, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_fun", "params": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_descr": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_occur": {"arg1": [], "arg2": [], "arg3": [], "arg4": []}, "params_p": {"arg1": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg2": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg3": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg4": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_get_method_with_success.<locals>.mock_fun", "ret_exprs": ["return {\"status\": \"success\"}"], "ret_type": "", "ret_type_p": [["str", 0.2721283839652534], ["django.db.models.query.QuerySet", 0.1674015589227201], ["List[Dict[str, Any]]", 0.14883334784947105], ["raiden.utils.TokenAmount", 0.07874306650164686], ["raiden.utils.BlockNumber", 0.07874306650164686]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Asserts the _do_api_call_async for GET method.", "long_descr": null, "ret": null}, "fn_lc": [[527, 4], [547, 48]], "fn_var_ln": {"GET_RUN_ENDPOINT": [[538, 8], [538, 24]], "hook": [[539, 8], [539, 12]], "http_conn_id": [[541, 8], [541, 25]], "method": [[540, 8], [540, 19]], "response": [[546, 8], [546, 16]]}, "fn_var_occur": {"GET_RUN_ENDPOINT": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "method"], ["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"], ["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "http_conn_id": [["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"]], "method": [["hook", "method"]], "response": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]]}, "name": "test_do_api_call_async_get_method_with_success", "params": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_descr": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_occur": {"mock_get_connection": [["hook", "http_conn_id", "mock_get_connection"]], "mock_session": [["mock_session", "return_value", "__aexit__", "return_value", "mock_fun"], ["mock_session", "return_value", "__aenter__", "return_value", "get", "AsyncMock"], ["mock_session", "return_value", "__aenter__", "return_value", "get", "return_value", "json", "AsyncMock", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.4209947222644558], ["mock.MagicMock", 0.07743464935799399]], "mock_session": [["unittesmock.MagicMock", 0.5995147970952235]], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_get_method_with_success", "ret_exprs": [], "ret_type": "", "variables": {"GET_RUN_ENDPOINT": "", "hook": "", "http_conn_id": "", "method": "", "response": ""}, "variables_p": {"GET_RUN_ENDPOINT": [["str", 0.6957760881335562], ["int", 0.18522500928723984], ["List[Pattern[str]]", 0.11899890257920415]], "hook": [["str", 0.2020252340049536], ["Dict[str, Any]", 0.10875355550105756], ["list", 0.10151111080924653], ["dict", 0.10072834941917584], ["Dict[Any, str]", 0.0921145478456471]], "http_conn_id": [["str", 0.8544916912261069], ["Optional[str]", 0.14550830877389317]], "method": [["Tuple[Literal, Literal, Literal, Literal]", 0.7], ["List[str]", 0.09999999999999999], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "response": [["int", 0.11999956158918938], ["Dict[int, str]", 0.09882723687093091], ["Dict[str, str]", 0.0967561508268901], ["Dict[str, Union[Any, Any, Any]]", 0.08692893046545597]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[555, 8], [556, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_fun", "params": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_descr": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_occur": {"arg1": [], "arg2": [], "arg3": [], "arg4": []}, "params_p": {"arg1": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg2": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg3": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg4": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_patch_method_with_success.<locals>.mock_fun", "ret_exprs": ["return {\"status\": \"success\"}"], "ret_type": "", "ret_type_p": [["str", 0.2721283839652534], ["django.db.models.query.QuerySet", 0.1674015589227201], ["List[Dict[str, Any]]", 0.14883334784947105], ["raiden.utils.TokenAmount", 0.07874306650164686], ["raiden.utils.BlockNumber", 0.07874306650164686]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Asserts the _do_api_call_async for PATCH method.", "long_descr": null, "ret": null}, "fn_lc": [[552, 4], [572, 48]], "fn_var_ln": {"GET_RUN_ENDPOINT": [[563, 8], [563, 24]], "hook": [[564, 8], [564, 12]], "http_conn_id": [[566, 8], [566, 25]], "method": [[565, 8], [565, 19]], "response": [[571, 8], [571, 16]]}, "fn_var_occur": {"GET_RUN_ENDPOINT": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "method"], ["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"], ["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "http_conn_id": [["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"]], "method": [["hook", "method"]], "response": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]]}, "name": "test_do_api_call_async_patch_method_with_success", "params": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_descr": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_occur": {"mock_get_connection": [["hook", "http_conn_id", "mock_get_connection"]], "mock_session": [["mock_session", "return_value", "__aexit__", "return_value", "mock_fun"], ["mock_session", "return_value", "__aenter__", "return_value", "patch", "AsyncMock"], ["mock_session", "return_value", "__aenter__", "return_value", "patch", "return_value", "json", "AsyncMock", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.4282881435446445], ["mock.MagicMock", 0.07679863585244075]], "mock_session": [["unittesmock.MagicMock", 0.19594110633976528]], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_patch_method_with_success", "ret_exprs": [], "ret_type": "", "variables": {"GET_RUN_ENDPOINT": "", "hook": "", "http_conn_id": "", "method": "", "response": ""}, "variables_p": {"GET_RUN_ENDPOINT": [["str", 0.6957760881335562], ["int", 0.18522500928723984], ["List[Pattern[str]]", 0.11899890257920415]], "hook": [["str", 0.2020252340049536], ["Dict[str, Any]", 0.10875355550105756], ["list", 0.10151111080924653], ["dict", 0.10072834941917584], ["Dict[Any, str]", 0.0921145478456471]], "http_conn_id": [["str", 0.8544916912261069], ["Optional[str]", 0.14550830877389317]], "method": [["Tuple[Literal, Literal, Literal, Literal]", 0.7], ["List[str]", 0.09999999999999999], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "response": [["int", 0.11999956158918938], ["Dict[int, str]", 0.09882723687093091], ["Dict[str, str]", 0.0967561508268901], ["Dict[str, Union[Any, Any, Any]]", 0.08692893046545597]]}}, {"docstring": {"func": "Asserts the _do_api_call_async for unexpected method error", "long_descr": null, "ret": null}, "fn_lc": [[577, 4], [588, 89]], "fn_var_ln": {"GET_RUN_ENDPOINT": [[579, 8], [579, 24]], "hook": [[580, 8], [580, 12]], "http_conn_id": [[582, 8], [582, 25]], "method": [[581, 8], [581, 19]], "response": [[587, 8], [587, 16]]}, "fn_var_occur": {"GET_RUN_ENDPOINT": [["response", "hook", "_do_api_call_async", "endpoint", "GET_RUN_ENDPOINT", "headers"]], "hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "method"], ["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"], ["response", "hook", "_do_api_call_async", "endpoint", "GET_RUN_ENDPOINT", "headers"]], "http_conn_id": [["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"]], "method": [["hook", "method"]], "response": [["response", "hook", "_do_api_call_async", "endpoint", "GET_RUN_ENDPOINT", "headers"]]}, "name": "test_do_api_call_async_unexpected_method_error", "params": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_descr": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_occur": {"mock_get_connection": [["hook", "http_conn_id", "mock_get_connection"]], "mock_session": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.5137997865707232]], "mock_session": [["unittesmock.MagicMock", 0.5052819463910834], ["mock.Mock", 0.20707615574705626]], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_unexpected_method_error", "ret_exprs": [], "ret_type": "", "variables": {"GET_RUN_ENDPOINT": "", "hook": "", "http_conn_id": "", "method": "", "response": ""}, "variables_p": {"GET_RUN_ENDPOINT": [["str", 0.6343969432212485], ["List[str]", 0.09903530997819983], ["Optional[str]", 0.09393853931973571], ["Tuple[str, str]", 0.0817985297226332]], "hook": [["str", 0.2020252340049536], ["Dict[str, Any]", 0.10875355550105756], ["list", 0.10151111080924653], ["dict", 0.10072834941917584], ["Dict[Any, str]", 0.0921145478456471]], "http_conn_id": [["str", 0.8544916912261069], ["Optional[str]", 0.14550830877389317]], "method": [["Tuple[Literal, Literal, Literal, Literal]", 0.7], ["List[str]", 0.09999999999999999], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "response": [["str", 0.7821495941972195], ["Type[psef.models.rubric.RubricItem]", 0.11700842101007666], ["Dict[str, Any]", 0.10084198479270381]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[596, 8], [597, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_fun", "params": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_descr": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_occur": {"arg1": [], "arg2": [], "arg3": [], "arg4": []}, "params_p": {"arg1": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg2": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg3": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg4": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_with_type_error.<locals>.mock_fun", "ret_exprs": ["return {\"random value\"}"], "ret_type": "", "ret_type_p": [["List[str]", 0.11233637211690545], ["Sequence[str]", 0.10079654508612969], ["str", 0.10079654508612969], ["int", 0.09259956200383802]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Asserts the _do_api_call_async for TypeError.", "long_descr": null, "ret": null}, "fn_lc": [[593, 4], [607, 109]], "fn_var_ln": {"hook": [[601, 8], [601, 12]], "http_conn_id": [[605, 8], [605, 25]], "method": [[602, 8], [602, 19]], "retry_delay": [[604, 8], [604, 24]], "retry_limit": [[603, 8], [603, 24]]}, "fn_var_occur": {"hook": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "method"], ["hook", "retry_limit"], ["hook", "retry_delay"], ["hook", "http_conn_id", "mock_get_connection"], ["hook", "_do_api_call_async", "endpoint", "data", "headers", "mock_fun", "extra_options", "mock_fun"]], "http_conn_id": [["hook", "http_conn_id", "mock_get_connection"]], "method": [["hook", "method"]], "retry_delay": [["hook", "retry_delay"]], "retry_limit": [["hook", "retry_limit"]]}, "name": "test_do_api_call_async_with_type_error", "params": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_descr": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_occur": {"mock_get_connection": [["hook", "http_conn_id", "mock_get_connection"]], "mock_session": [["mock_session", "return_value", "__aexit__", "return_value", "mock_fun"], ["mock_session", "return_value", "__aenter__", "return_value", "patch", "return_value", "json", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.6148267686477425]], "mock_session": [["unittesmock.MagicMock", 1.0000000000000002]], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_with_type_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "http_conn_id": "", "method": "", "retry_delay": "", "retry_limit": ""}, "variables_p": {"hook": [["int", 0.20928868699355604], ["list", 0.18063346169176497], ["Dict[str, Any]", 0.11693575990808482], ["Dict[Any, str]", 0.1152951902361195], ["Dict[str, Union[None, Any, str]]", 0.09835771612480926], ["List[Dict[str, Any]]", 0.09365923307419777], ["Type[List[Any]]", 0.09154768392898541]], "http_conn_id": [["str", 0.5865898640692915], ["List[str]", 0.0919262182642104]], "method": [["Tuple[Literal, Literal, Literal, Literal]", 0.7], ["List[str]", 0.09999999999999999], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "retry_delay": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "retry_limit": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[615, 8], [616, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_fun", "params": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_descr": {"arg1": "", "arg2": "", "arg3": "", "arg4": ""}, "params_occur": {"arg1": [], "arg2": [], "arg3": [], "arg4": []}, "params_p": {"arg1": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg2": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg3": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "arg4": [["str", 0.2000002148625046], ["Dict[str, BinaryIO]", 0.19999994628437384], ["bool", 0.19999994628437384], ["float", 0.19999994628437384]], "args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_with_client_response_error.<locals>.mock_fun", "ret_exprs": ["return {\"random value\"}"], "ret_type": "", "ret_type_p": [["List[str]", 0.11233637211690545], ["Sequence[str]", 0.10079654508612969], ["str", 0.10079654508612969], ["int", 0.09259956200383802]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Asserts the _do_api_call_async for Client Response Error.", "long_descr": null, "ret": null}, "fn_lc": [[612, 4], [637, 44]], "fn_var_ln": {"GET_RUN_ENDPOINT": [[627, 8], [627, 24]], "base_url": [[630, 8], [630, 21]], "hook": [[628, 8], [628, 12]], "http_conn_id": [[631, 8], [631, 25]], "method": [[629, 8], [629, 19]], "response": [[636, 8], [636, 16]]}, "fn_var_occur": {"GET_RUN_ENDPOINT": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "base_url": [["hook", "base_url"]], "hook": [["hook", "LivyAsyncHook", "livy_conn_id"], ["hook", "method"], ["hook", "base_url"], ["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"], ["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]], "http_conn_id": [["hook", "http_conn_id", "mock_get_connection"], ["hook", "http_conn_id", "host"], ["hook", "http_conn_id", "login"], ["hook", "http_conn_id", "password"], ["hook", "http_conn_id", "extra_dejson"]], "method": [["mock_session", "return_value", "__aenter__", "return_value", "patch", "return_value", "json", "side_effect", "ClientResponseError", "request_info", "RequestInfo", "url", "method", "headers", "multidict", "CIMultiDict", "status", "history"], ["hook", "method"]], "response": [["response", "hook", "_do_api_call_async", "GET_RUN_ENDPOINT"]]}, "name": "test_do_api_call_async_with_client_response_error", "params": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_descr": {"mock_get_connection": "", "mock_session": "", "self": ""}, "params_occur": {"mock_get_connection": [["hook", "http_conn_id", "mock_get_connection"]], "mock_session": [["mock_session", "return_value", "__aexit__", "return_value", "mock_fun"], ["mock_session", "return_value", "__aenter__", "return_value", "patch", "AsyncMock"], ["mock_session", "return_value", "__aenter__", "return_value", "patch", "return_value", "json", "side_effect", "ClientResponseError", "request_info", "RequestInfo", "url", "method", "headers", "multidict", "CIMultiDict", "status", "history"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.5141936095431703]], "mock_session": [["unittesmock.MagicMock", 0.49335135890381143]], "self": []}, "q_name": "TestLivyAsyncHook.test_do_api_call_async_with_client_response_error", "ret_exprs": [], "ret_type": "", "variables": {"GET_RUN_ENDPOINT": "", "base_url": "", "hook": "", "http_conn_id": "", "method": "", "response": ""}, "variables_p": {"GET_RUN_ENDPOINT": [["str", 0.6957760881335562], ["int", 0.18522500928723984], ["List[Pattern[str]]", 0.11899890257920415]], "base_url": [["str", 0.9029025948899044]], "hook": [["str", 0.11507645748084859]], "http_conn_id": [["str", 0.8544916912261069], ["Optional[str]", 0.14550830877389317]], "method": [["str", 0.4359332745431732], ["Dict[str, Union[Any, Any]]", 0.09892783041483298], ["Dict[str, List[Any]]", 0.0981850848687611], ["Dict[str, Union[Any, Any, Any]]", 0.09462041857791448], ["Dict[str, str]", 0.09367559299425039], ["Dict[str, Union[int, str]]", 0.0915708655324486], ["Dict[str, Dict[str, str]]", 0.08708693306861928]], "response": [["int", 0.11999956158918938], ["Dict[int, str]", 0.09882723687093091], ["Dict[str, str]", 0.0967561508268901], ["Dict[str, Union[Any, Any, Any]]", 0.08692893046545597]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[639, 4], [651, 87]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "set_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.set_conn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[653, 4], [668, 69]], "fn_var_ln": {"connection_url_mapping": [[655, 8], [655, 30]], "hook": [[665, 12], [665, 16]], "response_conn": [[666, 12], [666, 25]]}, "fn_var_occur": {"connection_url_mapping": [["connection_url_mapping", "items"]], "hook": [["hook", "LivyAsyncHook", "livy_conn_id", "conn_id"], ["response_conn", "airflow", "models", "Connection", "hook", "get_connection", "conn_id", "conn_id"], ["hook", "_generate_base_url", "response_conn", "expected"]], "response_conn": [["response_conn", "airflow", "models", "Connection", "hook", "get_connection", "conn_id", "conn_id"], ["isinstance", "response_conn", "Connection"], ["hook", "_generate_base_url", "response_conn", "expected"]]}, "name": "test_build_get_hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "set_conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_build_get_hook", "ret_exprs": [], "ret_type": "", "variables": {"connection_url_mapping": "", "hook": "", "response_conn": "airflow.models.Connection"}, "variables_p": {"connection_url_mapping": [["str", 0.43478808063825325], ["Set[str]", 0.17809902934537516], ["Dict[Any, Union[dict, Any]]", 0.09932101039719304], ["List[dict]", 0.09932101039719304], ["requests.models.Response", 0.09461962668757058]], "hook": [["decksite.data.models.person.Person", 0.3045406603818371], ["str", 0.21290781453411028], ["lms.lmsdb.models.Solution", 0.10461395211732179], ["List[Tuple[Any, Any]]", 0.09949169832903895], ["byceps.services.party.transfer.models.Party", 0.09409264726951068], ["iamdb.models.Movie", 0.09355933952897437], ["int", 0.09079388783920678]], "response_conn": [["app.models.page.PageRevision", 0.10916624259993615], ["alerta.models.note.Note", 0.10632176199384266], ["passzero.models.documents.DecryptedDocument", 0.10399004283225542], ["int", 0.09139807863890799], ["accounts.models.Account", 0.09050195758659202]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[670, 4], [713, 9]], "fn_var_ln": {"body": [[677, 8], [677, 12]]}, "fn_var_occur": {"body": [["body", "LivyAsyncHook", "build_post_batch_body", "file"], ["body", "LivyAsyncHook", "build_post_batch_body", "file", "class_name", "proxy_user", "args", "jars", "files", "py_files", "archives", "queue", "name", "conf", "driver_cores", "driver_memory", "executor_memory", "executor_cores", "num_executors"]]}, "name": "test_build_body", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_build_body", "ret_exprs": [], "ret_type": "", "variables": {"body": ""}, "variables_p": {"body": [["str", 0.5975692655371753], ["Dict[str, Dict[str, Any]]", 0.1004844018512348], ["List[str]", 0.09646706117484947]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[715, 4], [723, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parameters_validation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_parameters_validation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[725, 4], [728, 33]], "fn_var_ln": {"res_id": [[726, 8], [726, 14]]}, "fn_var_occur": {"res_id": [["res_id", "LivyAsyncHook", "_parse_post_response", "BATCH_ID"], ["BATCH_ID", "res_id"]]}, "name": "test_parse_post_response", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_parse_post_response", "ret_exprs": [], "ret_type": "", "variables": {"res_id": ""}, "variables_p": {"res_id": [["Pattern[Any]", 0.08266750791715861], ["str", 0.08241009395449915]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[731, 4], [732, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_size_format_success", "params": {"self": "", "valid_size": ""}, "params_descr": {"self": "", "valid_size": ""}, "params_occur": {"self": [], "valid_size": [["LivyAsyncHook", "_validate_size_format", "valid_size"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "valid_size": [["int", 0.3949437145250851], ["float", 0.11302296448527786], ["str", 0.11302296448527786]]}, "q_name": "TestLivyAsyncHook.test_validate_size_format_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[735, 4], [737, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_size_format_failure", "params": {"invalid_size": "", "self": ""}, "params_descr": {"invalid_size": "", "self": ""}, "params_occur": {"invalid_size": [["LivyAsyncHook", "_validate_size_format", "invalid_size"]], "self": []}, "params_p": {"args": [], "invalid_size": [["str", 0.5376040791945601], ["int", 0.09271064061302285]], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_validate_size_format_failure", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[747, 4], [748, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_list_of_stringables_success", "params": {"self": "", "valid_string": ""}, "params_descr": {"self": "", "valid_string": ""}, "params_occur": {"self": [], "valid_string": [["LivyAsyncHook", "_validate_list_of_stringables", "valid_string"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "valid_string": [["str", 0.2878891148738401], ["int", 0.19603802759414096], ["Optional[int]", 0.1088987700228986], ["bool", 0.09801901379707048], ["unittesmock.MagicMock", 0.09676319400371608]]}, "q_name": "TestLivyAsyncHook.test_validate_list_of_stringables_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[751, 4], [753, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_list_of_stringables_failure", "params": {"invalid_string": "", "self": ""}, "params_descr": {"invalid_string": "", "self": ""}, "params_occur": {"invalid_string": [["LivyAsyncHook", "_validate_list_of_stringables", "invalid_string"]], "self": []}, "params_p": {"args": [], "invalid_string": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_validate_list_of_stringables_failure", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[763, 4], [764, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_extra_conf_success", "params": {"conf": "", "self": ""}, "params_descr": {"conf": "", "self": ""}, "params_occur": {"conf": [["LivyAsyncHook", "_validate_extra_conf", "conf"]], "self": []}, "params_p": {"args": [], "conf": [["lms.lmsdb.models.Comment", 0.1036022424260117]], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_validate_extra_conf_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[776, 4], [778, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_validate_extra_conf_failure", "params": {"conf": "", "self": ""}, "params_descr": {"conf": "", "self": ""}, "params_occur": {"conf": [["LivyAsyncHook", "_validate_extra_conf", "conf"]], "self": []}, "params_p": {"args": [], "conf": [["lms.lmsdb.models.Comment", 0.1036022424260117]], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_validate_extra_conf_failure", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[780, 4], [783, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_request_response", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_parse_request_response", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[786, 4], [787, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_session_id_success", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [["LivyAsyncHook", "_validate_session_id", "conn_id", "None"]], "self": []}, "params_p": {"args": [], "conn_id": [["str", 0.3037695246060482], ["int", 0.19809075013818148], ["Type[models.taxonomies.T]", 0.12241418125534913]], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_check_session_id_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[790, 4], [792, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_session_id_failure", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [], "self": []}, "params_p": {"args": [], "conn_id": [["str", 0.4211159604025907], ["List[str]", 0.1024850924699005], ["Dict[str, tonga.models.structs.positioning.BasePositioning]", 0.10164406151884182], ["models.CloudConfig", 0.09323650287950576]], "kwargs": [], "self": []}, "q_name": "TestLivyAsyncHook.test_check_session_id_failure", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestLivyAsyncHook", "q_name": "TestLivyAsyncHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "unittest", "mock", "AsyncMock", "MagicMock", "patch", "multidict", "pytest", "aiohttp", "ClientResponseError", "RequestInfo", "requests", "exceptions", "RequestException", "airflow", "exceptions", "AirflowException", "airflow", "models", "Connection", "airflow", "providers", "apache", "livy", "hooks", "livy", "BatchState", "LivyAsyncHook", "LivyHook", "airflow", "utils", "db", "tests", "test_utils", "db", "clear_db_connections"], "mod_var_ln": {"BATCH_ID": [[41, 0], [41, 8]], "DEFAULT_CONN_ID": [[35, 0], [35, 15]], "DEFAULT_HOST": [[36, 0], [36, 12]], "DEFAULT_PORT": [[38, 0], [38, 12]], "DEFAULT_SCHEMA": [[37, 0], [37, 14]], "INVALID_SESSION_ID_TEST_CASES": [[47, 0], [47, 29]], "LIVY_CONN_ID": [[34, 0], [34, 12]], "MATCH_URL": [[39, 0], [39, 9]], "SAMPLE_GET_RESPONSE": [[42, 0], [42, 19]], "VALID_SESSION_ID_TEST_CASES": [[43, 0], [43, 27]]}, "mod_var_occur": {"BATCH_ID": [["SAMPLE_GET_RESPONSE", "BATCH_ID", "BatchState", "SUCCESS", "value"], ["VALID_SESSION_ID_TEST_CASES", "pytest", "param", "BATCH_ID", "id", "pytest", "param", "str", "BATCH_ID", "id"], ["mock_request", "return_value", "json", "return_value", "BATCH_ID", "BatchState", "STARTING", "value"], ["resp", "BATCH_ID"], ["requests_mock", "register_uri", "json", "BATCH_ID", "BatchState", "STARTING", "value", "status_code"], ["resp", "BATCH_ID"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "status_code"], ["resp", "LivyHook", "get_batch", "BATCH_ID"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"], ["LivyHook", "get_batch", "BATCH_ID"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "running", "value", "status_code"], ["state", "LivyHook", "get_batch_state", "BATCH_ID"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"], ["LivyHook", "get_batch_state", "BATCH_ID"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code"], ["LivyHook", "get_batch_state", "BATCH_ID"], ["res_id", "LivyHook", "_parse_post_response", "BATCH_ID"], ["BATCH_ID", "res_id"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code"], ["LivyHook", "delete_batch", "BATCH_ID"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"], ["LivyHook", "delete_batch", "BATCH_ID"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "status_code"], ["LivyHook", "delete_batch", "BATCH_ID", "BATCH_ID"], ["requests_mock", "register_uri", "json", "BATCH_ID", "BatchState", "STARTING", "value", "status_code", "request_headers"], ["state", "hook", "get_batch_state", "BATCH_ID"], ["state", "hook", "get_batch_state", "BATCH_ID"], ["state", "hook", "get_batch_state", "BATCH_ID"], ["state", "hook", "get_batch_logs", "BATCH_ID"], ["state", "hook", "get_batch_logs", "BATCH_ID"], ["log_dump", "hook", "dump_batch_logs", "BATCH_ID"], ["log_dump", "hook", "dump_batch_logs", "BATCH_ID"], ["res_id", "LivyAsyncHook", "_parse_post_response", "BATCH_ID"], ["BATCH_ID", "res_id"], ["BATCH_ID", "LivyAsyncHook", "_parse_request_response", "response", "BATCH_ID", "parameter"]], "DEFAULT_CONN_ID": [["db", "merge_conn", "Connection", "conn_id", "DEFAULT_CONN_ID", "conn_type", "host", "DEFAULT_HOST", "schema", "DEFAULT_SCHEMA", "port", "DEFAULT_PORT"]], "DEFAULT_HOST": [["MATCH_URL", "DEFAULT_HOST", "DEFAULT_PORT"], ["db", "merge_conn", "Connection", "conn_id", "DEFAULT_CONN_ID", "conn_type", "host", "DEFAULT_HOST", "schema", "DEFAULT_SCHEMA", "port", "DEFAULT_PORT"]], "DEFAULT_PORT": [["MATCH_URL", "DEFAULT_HOST", "DEFAULT_PORT"], ["db", "merge_conn", "Connection", "conn_id", "DEFAULT_CONN_ID", "conn_type", "host", "DEFAULT_HOST", "schema", "DEFAULT_SCHEMA", "port", "DEFAULT_PORT"]], "DEFAULT_SCHEMA": [["db", "merge_conn", "Connection", "conn_id", "DEFAULT_CONN_ID", "conn_type", "host", "DEFAULT_HOST", "schema", "DEFAULT_SCHEMA", "port", "DEFAULT_PORT"]], "INVALID_SESSION_ID_TEST_CASES": [], "LIVY_CONN_ID": [["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["hook", "LivyAsyncHook", "livy_conn_id", "LIVY_CONN_ID"], ["db", "merge_conn", "Connection", "conn_id", "LIVY_CONN_ID", "conn_type", "host", "schema", "port"]], "MATCH_URL": [["requests_mock", "register_uri", "MATCH_URL", "json", "status_code", "reason"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "status_code"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "running", "value", "status_code"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "status_code", "reason"], ["requests_mock", "register_uri", "MATCH_URL", "json", "status_code"], ["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"], ["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"], ["requests_mock", "register_uri", "MATCH_URL", "BATCH_ID", "json", "BATCH_ID", "status_code"]], "SAMPLE_GET_RESPONSE": [["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"], ["LivyHook", "get_batch", "session_id", "SAMPLE_GET_RESPONSE"], ["requests_mock", "register_uri", "MATCH_URL", "session_id", "json", "SAMPLE_GET_RESPONSE", "status_code"]], "VALID_SESSION_ID_TEST_CASES": []}, "no_types_annot": {"D": 1, "I": 0, "U": 214}, "session_id": "QQ9x6gSA_HOkKEOLvZXReVUab_agbAbDqwZr4jCwfuQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BATCH_ID": "", "DEFAULT_CONN_ID": "", "DEFAULT_HOST": "", "DEFAULT_PORT": "", "DEFAULT_SCHEMA": "", "INVALID_SESSION_ID_TEST_CASES": "", "LIVY_CONN_ID": "", "MATCH_URL": "", "SAMPLE_GET_RESPONSE": "", "VALID_SESSION_ID_TEST_CASES": ""}, "variables_p": {"BATCH_ID": [["str", 0.2879621901132044], ["int", 0.18608879821988158], ["list", 0.10388017906923068]], "DEFAULT_CONN_ID": [["str", 0.4285678668148289], ["Optional[str]", 0.09299082194312257], ["list", 0.09065493510624054], ["dict", 0.08886159730439663]], "DEFAULT_HOST": [["int", 0.5096770229230365], ["str", 0.1840832562299109], ["Dict[str, str]", 0.129444444228715], ["List[int]", 0.09160634609576467], ["Dict[str, int]", 0.08518893052257298]], "DEFAULT_PORT": [["int", 0.5096770229230365], ["str", 0.1840832562299109], ["Dict[str, str]", 0.129444444228715], ["List[int]", 0.09160634609576467], ["Dict[str, int]", 0.08518893052257298]], "DEFAULT_SCHEMA": [["str", 0.255715186557953], ["Dict[str, Dict[str, str]]", 0.13435484620285132], ["Dict[str, Dict[str, Any]]", 0.11967773392088477], ["Set[str]", 0.09799224681424745], ["Dict[str, str]", 0.08793813413660906], ["int", 0.08322128934465065]], "INVALID_SESSION_ID_TEST_CASES": [["str", 0.4256323610547815], ["int", 0.26913287747846726], ["FrozenSet[str]", 0.08706559209060423], ["property", 0.08518508991299278]], "LIVY_CONN_ID": [["str", 0.495760179777528], ["dict", 0.1189817958785684], ["Optional[int]", 0.099516843204811], ["int", 0.08984512924051842]], "MATCH_URL": [["Dict[str, Union[int, str]]", 0.2803494233510695], ["List[str]", 0.18688829271049784], ["dict", 0.11538619188480985], ["Dict[str, Union[Any, Any]]", 0.11343158666930231], ["List[List[int]]", 0.10798390971164254], ["Dict[str, int]", 0.10573214898355926], ["Pattern[str]", 0.09022844668911872]], "SAMPLE_GET_RESPONSE": [["Dict[str, str]", 0.28794018109407904], ["str", 0.21930010767481034], ["List[Union[Any, Any, Any]]", 0.11077342606847276], ["Dict[str, Union[None, Any, int]]", 0.09569848368120866]], "VALID_SESSION_ID_TEST_CASES": [["str", 0.7663401690163801], ["Optional[str]", 0.23365983098361984]]}}}