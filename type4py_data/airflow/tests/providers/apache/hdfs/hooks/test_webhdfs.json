{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [258, 74]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[30, 4], [31, 41]], "fn_var_ln": {"webhdfs_hook": [[31, 8], [31, 25]]}, "fn_var_occur": {"webhdfs_hook": [["self", "webhdfs_hook", "WebHDFSHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "webhdfs_hook", "WebHDFSHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestWebHDFSHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"webhdfs_hook": ""}, "variables_p": {"webhdfs_hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [59, 56]], "fn_var_ln": {"conn": [[45, 8], [45, 12]], "connection": [[46, 8], [46, 18]], "hosts": [[47, 8], [47, 13]], "side_effect": [[43, 8], [43, 40]]}, "fn_var_occur": {"conn": [["conn", "self", "webhdfs_hook", "get_conn"], ["conn", "mock_insecure_client", "return_value"]], "connection": [["connection", "mock_get_connection", "return_value"], ["hosts", "connection", "host", "split"], ["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "hosts": [["hosts", "connection", "host", "split"], ["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "side_effect": [["mock_insecure_client", "side_effect", "HdfsError", "mock_insecure_client", "return_value"]]}, "name": "test_get_conn_without_schema", "params": {"mock_get_connection": "", "mock_insecure_client": "", "mock_session": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_insecure_client": "", "mock_session": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"]], "mock_insecure_client": [["mock_insecure_client", "side_effect", "HdfsError", "mock_insecure_client", "return_value"], ["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"], ["mock_insecure_client", "return_value", "status", "assert_called_once_with"], ["conn", "mock_insecure_client", "return_value"]], "mock_session": [["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "self": [["conn", "self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.Mock", 0.28092259751054]], "mock_insecure_client": [["mock.MagicMock", 0.10268898231800921]], "mock_session": [["mock.MagicMock", 0.11381367742192278]], "self": [], "socket_mock": [["mock.Mock", 0.09262905581813802]]}, "q_name": "TestWebHDFSHook.test_get_conn_without_schema", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "connection": "", "hosts": "", "side_effect": ""}, "variables_p": {"conn": [["list", 0.19975144695454933], ["legistar.models.MatterHistory", 0.09919783162878151]], "connection": [["str", 0.23203568953813675], ["List[str]", 0.09937633545605398], ["Dict[str, Union[int, str]]", 0.08343504434309984], ["Dict[str, Union[Any, Any, Any]]", 0.07805062911905782]], "hosts": [["str", 0.5815786544291519], ["Dict[str, List[Any]]", 0.11077110272953723], ["Dict[str, Union[Any, Any]]", 0.10541479258845517]], "side_effect": [["str", 0.5359489158627844], ["int", 0.1022781157520201], ["Dict[str, Union[Any, Any]]", 0.10031880351633665], ["Union[Literal, str]", 0.07696362017131254]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [85, 56]], "fn_var_ln": {"conn": [[71, 8], [71, 12]], "connection": [[72, 8], [72, 18]], "hosts": [[73, 8], [73, 13]], "side_effect": [[69, 8], [69, 40]]}, "fn_var_occur": {"conn": [["conn", "self", "webhdfs_hook", "get_conn"], ["conn", "mock_insecure_client", "return_value"]], "connection": [["connection", "mock_get_connection", "return_value"], ["hosts", "connection", "host", "split"], ["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "connection", "schema", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "hosts": [["hosts", "connection", "host", "split"], ["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "connection", "schema", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "side_effect": [["mock_insecure_client", "side_effect", "HdfsError", "mock_insecure_client", "return_value"]]}, "name": "test_get_conn_with_schema", "params": {"mock_get_connection": "", "mock_insecure_client": "", "mock_session": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_insecure_client": "", "mock_session": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"]], "mock_insecure_client": [["mock_insecure_client", "side_effect", "HdfsError", "mock_insecure_client", "return_value"], ["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "connection", "schema", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"], ["mock_insecure_client", "return_value", "status", "assert_called_once_with"], ["conn", "mock_insecure_client", "return_value"]], "mock_session": [["mock_insecure_client", "assert_has_calls", "call", "host", "connection", "port", "connection", "schema", "user", "connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "self": [["conn", "self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.Mock", 0.28092259751054]], "mock_insecure_client": [["mock.MagicMock", 0.10268898231800921]], "mock_session": [["mock.MagicMock", 0.11989841691571909]], "self": [], "socket_mock": [["mock.Mock", 0.09262905581813802]]}, "q_name": "TestWebHDFSHook.test_get_conn_with_schema", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "connection": "", "hosts": "", "side_effect": ""}, "variables_p": {"conn": [["list", 0.19975144695454933], ["legistar.models.MatterHistory", 0.09919783162878151]], "connection": [["str", 0.22305849708779288], ["List[str]", 0.09929144638099979], ["Dict[str, Union[int, str]]", 0.08245303897025384], ["Dict[str, Union[Any, Any, Any]]", 0.07981630305190544]], "hosts": [["str", 0.3278792189977399], ["List[str]", 0.09726553421354925], ["List[int]", 0.09190186438709215]], "side_effect": [["str", 0.5359489158627844], ["int", 0.1022781157520201], ["Dict[str, Union[Any, Any]]", 0.10031880351633665], ["Union[Literal, str]", 0.07696362017131254]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [119, 60]], "fn_var_ln": {"conn": [[106, 12], [106, 16]], "hosts": [[107, 12], [107, 17]], "side_effect": [[104, 12], [104, 44]]}, "fn_var_occur": {"conn": [["conn", "self", "webhdfs_hook", "get_conn"], ["conn", "mock_insecure_client", "return_value"]], "hosts": [["hosts", "test_connection", "host", "split"], ["mock_insecure_client", "assert_has_calls", "call", "host", "user", "test_connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "side_effect": [["mock_insecure_client", "side_effect", "HdfsError", "mock_insecure_client", "return_value"]]}, "name": "test_get_conn_without_port_schema", "params": {"mock_insecure_client": "", "mock_session": "", "self": "", "socket_mock": "", "test_connection": ""}, "params_descr": {"mock_insecure_client": "", "mock_session": "", "self": "", "socket_mock": "", "test_connection": ""}, "params_occur": {"mock_insecure_client": [["mock_insecure_client", "side_effect", "HdfsError", "mock_insecure_client", "return_value"], ["mock_insecure_client", "assert_has_calls", "call", "host", "user", "test_connection", "login", "session", "mock_session", "return_value", "host", "hosts"], ["mock_insecure_client", "return_value", "status", "assert_called_once_with"], ["conn", "mock_insecure_client", "return_value"]], "mock_session": [["mock_insecure_client", "assert_has_calls", "call", "host", "user", "test_connection", "login", "session", "mock_session", "return_value", "host", "hosts"]], "self": [["conn", "self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]], "test_connection": [["patch", "object", "WebHDFSHook", "return_value", "test_connection"], ["hosts", "test_connection", "host", "split"], ["mock_insecure_client", "assert_has_calls", "call", "host", "user", "test_connection", "login", "session", "mock_session", "return_value", "host", "hosts"]]}, "params_p": {"args": [], "kwargs": [], "mock_insecure_client": [["mock.MagicMock", 0.09892737962797424]], "mock_session": [["mock.MagicMock", 0.09830331208553705]], "self": [], "socket_mock": [["mock.Mock", 0.1868134757668474]], "test_connection": []}, "q_name": "TestWebHDFSHook.test_get_conn_without_port_schema", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "hosts": "", "side_effect": ""}, "variables_p": {"conn": [["list", 0.19975144695454933], ["legistar.models.MatterHistory", 0.09919783162878151]], "hosts": [["str", 0.7068924453585926], ["Dict[str, Union[Any, Any]]", 0.11645834322062011], ["mock._patch[Literal]", 0.0883859084837207], ["Dict[str, Dict[str, Any]]", 0.08826330293706647]], "side_effect": [["str", 0.5359489158627844], ["int", 0.1022781157520201], ["Dict[str, Union[Any, Any]]", 0.10031880351633665], ["Union[Literal, str]", 0.07696362017131254]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [130, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_hdfs_error", "params": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [], "mock_insecure_client": [], "self": [["self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.MagicMock", 0.12881500431611945]], "mock_insecure_client": [["mock.MagicMock", 0.12881500431611945]], "self": [], "socket_mock": []}, "q_name": "TestWebHDFSHook.test_get_conn_hdfs_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [155, 56]], "fn_var_ln": {"conn": [[149, 8], [149, 12]], "connection": [[151, 8], [151, 18]]}, "fn_var_occur": {"conn": [["conn", "self", "webhdfs_hook", "get_conn"], ["conn", "mock_kerberos_client", "return_value"]], "connection": [["connection", "mock_get_connection", "return_value"], ["mock_kerberos_client", "assert_called_once_with", "connection", "host", "connection", "port", "session", "mock_session", "return_value"]]}, "name": "test_get_conn_kerberos_security_mode", "params": {"mock_get_connection": "", "mock_kerberos_client": "", "mock_kerberos_security_mode": "", "mock_session": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_kerberos_client": "", "mock_kerberos_security_mode": "", "mock_session": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"]], "mock_kerberos_client": [["mock_kerberos_client", "assert_called_once_with", "connection", "host", "connection", "port", "session", "mock_session", "return_value"], ["conn", "mock_kerberos_client", "return_value"]], "mock_kerberos_security_mode": [], "mock_session": [["mock_kerberos_client", "assert_called_once_with", "connection", "host", "connection", "port", "session", "mock_session", "return_value"]], "self": [["conn", "self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.Mock", 0.13446023291230907]], "mock_kerberos_client": [], "mock_kerberos_security_mode": [["mock.Mock", 0.5738684709028647]], "mock_session": [], "self": [], "socket_mock": [["mock.Mock", 0.08839364344867141]]}, "q_name": "TestWebHDFSHook.test_get_conn_kerberos_security_mode", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "connection": ""}, "variables_p": {"conn": [["list", 0.19975144695454933], ["legistar.models.MatterHistory", 0.09919783162878151]], "connection": [["str", 0.43661882339465014], ["Dict[str, Union[Any, Any, Any]]", 0.11497500968761931], ["List[str]", 0.11187617230010231], ["Dict[str, Union[Any, Any]]", 0.08367588329712933], ["Dict[str, Dict[str, Any]]", 0.07300591539714157], ["Dict[str, Any]", 0.07166577129897705]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [160, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_no_connection_found", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [], "self": [["self", "webhdfs_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.Mock", 0.341184446134734], ["mock.MagicMock", 0.14277550219685856], ["Callable", 0.07835655014159343]], "self": []}, "q_name": "TestWebHDFSHook.test_get_conn_no_connection_found", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 4], [171, 60]], "fn_var_ln": {"exists_path": [[166, 8], [166, 19]], "hdfs_path": [[164, 8], [164, 17]], "mock_status": [[169, 8], [169, 19]]}, "fn_var_occur": {"exists_path": [["exists_path", "self", "webhdfs_hook", "check_for_path", "hdfs_path"], ["exists_path", "bool", "mock_status", "return_value"]], "hdfs_path": [["exists_path", "self", "webhdfs_hook", "check_for_path", "hdfs_path"], ["mock_status", "assert_called_once_with", "hdfs_path", "strict", "False"]], "mock_status": [["mock_status", "mock_get_conn", "return_value", "status"], ["mock_status", "assert_called_once_with", "hdfs_path", "strict", "False"], ["exists_path", "bool", "mock_status", "return_value"]]}, "name": "test_check_for_path", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "assert_called_once_with"], ["mock_status", "mock_get_conn", "return_value", "status"]], "self": [["exists_path", "self", "webhdfs_hook", "check_for_path", "hdfs_path"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestWebHDFSHook.test_check_for_path", "ret_exprs": [], "ret_type": "", "variables": {"exists_path": "", "hdfs_path": "", "mock_status": ""}, "variables_p": {"exists_path": [["str", 0.9005086724297584]], "hdfs_path": [["str", 0.5625636129183955]], "mock_status": [["str", 0.4561255803881746], ["List[str]", 0.2753438460895804], ["Dict[str, Dict[str, Any]]", 0.09839608765422506], ["Dict[str, str]", 0.0885216160396195], ["Tuple[str, str, str]", 0.08161286982840045]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[174, 4], [184, 9]], "fn_var_ln": {"destination": [[176, 8], [176, 19]], "mock_upload": [[181, 8], [181, 19]], "source": [[175, 8], [175, 14]]}, "fn_var_occur": {"destination": [["self", "webhdfs_hook", "load_file", "source", "destination"], ["mock_upload", "assert_called_once_with", "hdfs_path", "destination", "local_path", "source", "overwrite", "True", "n_threads"]], "mock_upload": [["mock_upload", "mock_get_conn", "return_value", "upload"], ["mock_upload", "assert_called_once_with", "hdfs_path", "destination", "local_path", "source", "overwrite", "True", "n_threads"]], "source": [["self", "webhdfs_hook", "load_file", "source", "destination"], ["mock_upload", "assert_called_once_with", "hdfs_path", "destination", "local_path", "source", "overwrite", "True", "n_threads"]]}, "name": "test_load_file", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "assert_called_once_with"], ["mock_upload", "mock_get_conn", "return_value", "upload"]], "self": [["self", "webhdfs_hook", "load_file", "source", "destination"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.5572878259312326]], "self": []}, "q_name": "TestWebHDFSHook.test_load_file", "ret_exprs": [], "ret_type": "", "variables": {"destination": "", "mock_upload": "", "source": ""}, "variables_p": {"destination": [["str", 0.4894009275504372], ["List[str]", 0.0976060110133654], ["Dict[str, int]", 0.09502417740924604]], "mock_upload": [["mock._Call", 0.2085278912192089], ["Dict[str, Tuple[str, Any]]", 0.2000821279144737]], "source": [["str", 0.6753948713983837], ["List[str]", 0.13419687580433762], ["Set[str]", 0.09187472721318389]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[186, 4], [188, 38]], "fn_var_ln": {"hook": [[187, 8], [187, 12]]}, "fn_var_occur": {"hook": [["hook", "WebHDFSHook"], ["hook", "proxy_user", "None"]]}, "name": "test_simple_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestWebHDFSHook.test_simple_init", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["dict", 0.08456760140312493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [192, 43]], "fn_var_ln": {"hook": [[191, 8], [191, 12]]}, "fn_var_occur": {"hook": [["hook", "WebHDFSHook", "proxy_user"], ["hook", "proxy_user"]]}, "name": "test_init_proxy_user", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestWebHDFSHook.test_init_proxy_user", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["list", 0.07950836714377475], ["str", 0.07692312118040597]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[203, 4], [211, 90]], "fn_var_ln": {"connection": [[208, 8], [208, 18]]}, "fn_var_occur": {"connection": [["connection", "mock_get_connection", "return_value"], ["connection", "host", "connection", "port", "mock_kerberos_client", "call_args", "args"]]}, "name": "test_conn_kerberos_ssl", "params": {"mock_get_connection": "", "mock_kerberos_client": "", "mock_kerberos_security_mode": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_kerberos_client": "", "mock_kerberos_security_mode": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"]], "mock_kerberos_client": [["connection", "host", "connection", "port", "mock_kerberos_client", "call_args", "args"], ["mock_kerberos_client", "call_args", "kwargs", "verify"]], "mock_kerberos_security_mode": [], "self": [["self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.Mock", 0.1982518057877021]], "mock_kerberos_client": [], "mock_kerberos_security_mode": [["mock.Mock", 0.803252603070155]], "self": [], "socket_mock": []}, "q_name": "TestWebHDFSHook.test_conn_kerberos_ssl", "ret_exprs": [], "ret_type": "", "variables": {"connection": ""}, "variables_p": {"connection": [["str", 0.36940741417200795], ["Union[Literal, str]", 0.08639581246504856], ["Dict[str, Union[Any, Any, Any]]", 0.08520295985143851], ["list", 0.07411965211513846], ["property", 0.07219880493056924]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[221, 4], [230, 74]], "fn_var_ln": {"connection": [[224, 8], [224, 18]]}, "fn_var_occur": {"connection": [["connection", "mock_get_connection", "return_value"], ["connection", "host", "connection", "port", "connection", "schema", "mock_insecure_client", "call_args", "args"]]}, "name": "test_conn_insecure_ssl_with_port_schema", "params": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"]], "mock_insecure_client": [["connection", "host", "connection", "port", "connection", "schema", "mock_insecure_client", "call_args", "args"], ["mock_insecure_client", "call_args", "kwargs", "verify"]], "self": [["self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [], "mock_insecure_client": [], "self": [], "socket_mock": []}, "q_name": "TestWebHDFSHook.test_conn_insecure_ssl_with_port_schema", "ret_exprs": [], "ret_type": "", "variables": {"connection": ""}, "variables_p": {"connection": [["str", 0.2342422894526005], ["Union[Literal, str]", 0.2025644990002111], ["Dict[str, Union[Any, Any, Any]]", 0.10403200703974258], ["Dict[str, Union[int, str]]", 0.09599612904122366], ["mock.Mock", 0.08164981642318543], ["int", 0.08120633130028389]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[238, 4], [244, 74]], "fn_var_ln": {"connection": [[241, 8], [241, 18]]}, "fn_var_occur": {"connection": [["connection", "mock_get_connection", "return_value"], ["connection", "host", "connection", "schema", "mock_insecure_client", "call_args", "args"]]}, "name": "test_conn_insecure_ssl_without_port", "params": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"]], "mock_insecure_client": [["connection", "host", "connection", "schema", "mock_insecure_client", "call_args", "args"], ["mock_insecure_client", "call_args", "kwargs", "verify"]], "self": [["self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [], "mock_insecure_client": [], "self": [], "socket_mock": []}, "q_name": "TestWebHDFSHook.test_conn_insecure_ssl_without_port", "ret_exprs": [], "ret_type": "", "variables": {"connection": ""}, "variables_p": {"connection": [["str", 0.4032408205894594], ["Dict[str, Union[Any, Any, Any]]", 0.10014916446218396], ["int", 0.08003337022732494], ["Union[Literal, str]", 0.07881004678070753]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [258, 74]], "fn_var_ln": {"connection": [[255, 8], [255, 18]]}, "fn_var_occur": {"connection": [["connection", "mock_get_connection", "return_value"], ["connection", "host", "connection", "port", "mock_insecure_client", "call_args", "args"]]}, "name": "test_conn_insecure_ssl_without_schema", "params": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_descr": {"mock_get_connection": "", "mock_insecure_client": "", "self": "", "socket_mock": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"]], "mock_insecure_client": [["connection", "host", "connection", "port", "mock_insecure_client", "call_args", "args"], ["mock_insecure_client", "call_args", "kwargs", "verify"]], "self": [["self", "webhdfs_hook", "get_conn"]], "socket_mock": [["socket_mock", "socket", "return_value", "connect_ex", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [], "mock_insecure_client": [["mock.MagicMock", 0.19920724301908313]], "self": [], "socket_mock": []}, "q_name": "TestWebHDFSHook.test_conn_insecure_ssl_without_schema", "ret_exprs": [], "ret_type": "", "variables": {"connection": ""}, "variables_p": {"connection": [["str", 0.36940741417200795], ["Union[Literal, str]", 0.08639581246504856], ["Dict[str, Union[Any, Any, Any]]", 0.08520295985143851], ["list", 0.07411965211513846], ["property", 0.07219880493056924]]}}], "name": "TestWebHDFSHook", "q_name": "TestWebHDFSHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "call", "patch", "pytest", "hdfs", "HdfsError", "airflow", "models", "connection", "Connection", "airflow", "providers", "apache", "hdfs", "hooks", "webhdfs", "AirflowWebHDFSHookException", "WebHDFSHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 77}, "session_id": "0H31JrS26ryWSRO3oHWTZhi37DbaJLdjcWnjZMgIEFo", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}