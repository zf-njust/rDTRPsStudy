{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [78, 65]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [42, 65]], "fn_var_ln": {"exists": [[37, 8], [37, 14]], "sensor": [[32, 8], [32, 14]]}, "fn_var_occur": {"exists": [["exists", "sensor", "poke", "dict"]], "sensor": [["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE"], ["exists", "sensor", "poke", "dict"]]}, "name": "test_poke", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "table_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestCassandraTableSensor.test_poke", "ret_exprs": [], "ret_type": "", "variables": {"exists": "", "sensor": ""}, "variables_p": {"exists": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "sensor": [["Dict[str, str]", 0.1300362058551395], ["Dict[str, Union[Any, str]]", 0.10111315411404362], ["Dict[str, Any]", 0.09900254557294355], ["int", 0.09774493555047689], ["dict", 0.09534652855904577], ["Tuple[str, str, str, str, str, str, str, str, str, str]", 0.08618733989310626], ["Union[Literal, Literal]", 0.08566123045836997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [58, 65]], "fn_var_ln": {"exists": [[53, 8], [53, 14]], "sensor": [[48, 8], [48, 14]]}, "fn_var_occur": {"exists": [["exists", "sensor", "poke", "dict"]], "sensor": [["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE"], ["exists", "sensor", "poke", "dict"]]}, "name": "test_poke_should_return_false_for_non_existing_table", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "table_exists", "return_value", "False"], ["mock_hook", "return_value", "table_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestCassandraTableSensor.test_poke_should_return_false_for_non_existing_table", "ret_exprs": [], "ret_type": "", "variables": {"exists": "", "sensor": ""}, "variables_p": {"exists": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "sensor": [["Dict[str, str]", 0.1300362058551395], ["Dict[str, Union[Any, str]]", 0.10111315411404362], ["Dict[str, Any]", 0.09900254557294355], ["int", 0.09774493555047689], ["dict", 0.09534652855904577], ["Tuple[str, str, str, str, str, str, str, str, str, str]", 0.08618733989310626], ["Union[Literal, Literal]", 0.08566123045836997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [72, 65]], "fn_var_ln": {"exists": [[67, 8], [67, 14]], "sensor": [[62, 8], [62, 14]]}, "fn_var_occur": {"exists": [["exists", "sensor", "poke", "dict"]], "sensor": [["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE_WITH_KEYSPACE"], ["exists", "sensor", "poke", "dict"]]}, "name": "test_poke_should_succeed_for_table_with_mentioned_keyspace", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "table_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE_WITH_KEYSPACE"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestCassandraTableSensor.test_poke_should_succeed_for_table_with_mentioned_keyspace", "ret_exprs": [], "ret_type": "", "variables": {"exists": "", "sensor": ""}, "variables_p": {"exists": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "sensor": [["str", 0.30348579435686207], ["List[str]", 0.22730466344865438], ["Dict[str, List[Any]]", 0.10015096460753943]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [78, 65]], "fn_var_ln": {"sensor": [[76, 8], [76, 14]]}, "fn_var_occur": {"sensor": [["sensor", "CassandraTableSensor", "task_id", "table", "TEST_CASSANDRA_TABLE"], ["sensor", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID"]]}, "name": "test_init_with_default_conn", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.Mock", 0.667509470781517]], "self": []}, "q_name": "TestCassandraTableSensor.test_init_with_default_conn", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["str", 0.20374971376521733], ["list", 0.19883818253447827], ["bool", 0.09823533231659806]]}}], "name": "TestCassandraTableSensor", "q_name": "TestCassandraTableSensor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "patch", "airflow", "providers", "apache", "cassandra", "sensors", "table", "CassandraTableSensor"], "mod_var_ln": {"TEST_CASSANDRA_CONN_ID": [[24, 0], [24, 22]], "TEST_CASSANDRA_TABLE": [[25, 0], [25, 20]], "TEST_CASSANDRA_TABLE_WITH_KEYSPACE": [[26, 0], [26, 34]]}, "mod_var_occur": {"TEST_CASSANDRA_CONN_ID": [["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"], ["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"], ["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE_WITH_KEYSPACE"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"], ["sensor", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID"]], "TEST_CASSANDRA_TABLE": [["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE"], ["mock_hook", "return_value", "table_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE"], ["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE"], ["mock_hook", "return_value", "table_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE"], ["sensor", "CassandraTableSensor", "task_id", "table", "TEST_CASSANDRA_TABLE"]], "TEST_CASSANDRA_TABLE_WITH_KEYSPACE": [["sensor", "CassandraTableSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE_WITH_KEYSPACE"], ["mock_hook", "return_value", "table_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE_WITH_KEYSPACE"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 18}, "session_id": "QSzC787wFZaV9k4XkTsHqNk28OQIarKiWfUQFI1wtTw", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_CASSANDRA_CONN_ID": "", "TEST_CASSANDRA_TABLE": "", "TEST_CASSANDRA_TABLE_WITH_KEYSPACE": ""}, "variables_p": {"TEST_CASSANDRA_CONN_ID": [["str", 0.6021153483915614], ["Dict[str, str]", 0.29818989107257343], ["list", 0.09969476053586512]], "TEST_CASSANDRA_TABLE": [["str", 0.4869682286490016], ["Dict[str, str]", 0.4131803474258586]], "TEST_CASSANDRA_TABLE_WITH_KEYSPACE": [["str", 0.5003879627144802], ["List[str]", 0.18520580302807346], ["Dict[str, str]", 0.1071779052357519], ["Dict[Any, str]", 0.09309354620573773]]}}}