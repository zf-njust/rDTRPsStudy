{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [85, 65]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [43, 65]], "fn_var_ln": {"exists": [[38, 8], [38, 14]], "sensor": [[32, 8], [32, 14]]}, "fn_var_occur": {"exists": [["exists", "sensor", "poke", "dict"]], "sensor": [["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["exists", "sensor", "poke", "dict"]]}, "name": "test_poke", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "TEST_CASSANDRA_KEY"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestCassandraRecordSensor.test_poke", "ret_exprs": [], "ret_type": "", "variables": {"exists": "", "sensor": ""}, "variables_p": {"exists": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "sensor": [["Type[List[Any]]", 0.09036203579021336], ["list", 0.08609857075192921], ["Dict[str, dict]", 0.08399000542246224]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [58, 65]], "fn_var_ln": {"exists": [[53, 8], [53, 14]], "sensor": [[47, 8], [47, 14]]}, "fn_var_occur": {"exists": [["exists", "sensor", "poke", "dict"]], "sensor": [["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "None"], ["exists", "sensor", "poke", "dict"]]}, "name": "test_poke_should_not_fail_with_empty_keys", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "None"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestCassandraRecordSensor.test_poke_should_not_fail_with_empty_keys", "ret_exprs": [], "ret_type": "", "variables": {"exists": "", "sensor": ""}, "variables_p": {"exists": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "sensor": [["str", 0.19186488235264115], ["List[str]", 0.09593244117632058], ["backend.recordmanagemenmodels.record.Record", 0.09191893245487728], ["int", 0.08613038119555201]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [75, 65]], "fn_var_ln": {"exists": [[70, 8], [70, 14]], "sensor": [[64, 8], [64, 14]]}, "fn_var_occur": {"exists": [["exists", "sensor", "poke", "dict"]], "sensor": [["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["exists", "sensor", "poke", "dict"]]}, "name": "test_poke_should_return_false_for_non_existing_table", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "record_exists", "return_value", "False"], ["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "TEST_CASSANDRA_KEY"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestCassandraRecordSensor.test_poke_should_return_false_for_non_existing_table", "ret_exprs": [], "ret_type": "", "variables": {"exists": "", "sensor": ""}, "variables_p": {"exists": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "sensor": [["Type[List[Any]]", 0.09036203579021336], ["list", 0.08609857075192921], ["Dict[str, dict]", 0.08399000542246224]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [85, 65]], "fn_var_ln": {"sensor": [[79, 8], [79, 14]]}, "fn_var_occur": {"sensor": [["sensor", "CassandraRecordSensor", "task_id", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["sensor", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID"]]}, "name": "test_init_with_default_conn", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.Mock", 0.667509470781517]], "self": []}, "q_name": "TestCassandraRecordSensor.test_init_with_default_conn", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["list", 0.09539950141495675]]}}], "name": "TestCassandraRecordSensor", "q_name": "TestCassandraRecordSensor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "patch", "airflow", "providers", "apache", "cassandra", "sensors", "record", "CassandraRecordSensor"], "mod_var_ln": {"TEST_CASSANDRA_CONN_ID": [[24, 0], [24, 22]], "TEST_CASSANDRA_KEY": [[26, 0], [26, 18]], "TEST_CASSANDRA_TABLE": [[25, 0], [25, 20]]}, "mod_var_occur": {"TEST_CASSANDRA_CONN_ID": [["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"], ["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "None"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"], ["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["mock_hook", "assert_called_once_with", "TEST_CASSANDRA_CONN_ID"], ["sensor", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID"]], "TEST_CASSANDRA_KEY": [["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "TEST_CASSANDRA_KEY"], ["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "TEST_CASSANDRA_KEY"], ["sensor", "CassandraRecordSensor", "task_id", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"]], "TEST_CASSANDRA_TABLE": [["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "TEST_CASSANDRA_KEY"], ["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "None"], ["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "None"], ["sensor", "CassandraRecordSensor", "task_id", "cassandra_conn_id", "TEST_CASSANDRA_CONN_ID", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"], ["mock_hook", "return_value", "record_exists", "assert_called_once_with", "TEST_CASSANDRA_TABLE", "TEST_CASSANDRA_KEY"], ["sensor", "CassandraRecordSensor", "task_id", "table", "TEST_CASSANDRA_TABLE", "keys", "TEST_CASSANDRA_KEY"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 18}, "session_id": "shx1c-knXSaDA1FRGeTCd_G14zUzUTvIqX2k_pv0K94", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_CASSANDRA_CONN_ID": "", "TEST_CASSANDRA_KEY": "", "TEST_CASSANDRA_TABLE": ""}, "variables_p": {"TEST_CASSANDRA_CONN_ID": [["str", 0.9089305977817628]], "TEST_CASSANDRA_KEY": [["str", 0.8188781668718681], ["Dict[str, str]", 0.09066216309949782], ["Set[str]", 0.09045967002863395]], "TEST_CASSANDRA_TABLE": [["str", 0.5987777861428059], ["Pattern[str]", 0.10047126021820474], ["int", 0.0973825082837794], ["List[str]", 0.09442908341728315]]}}}