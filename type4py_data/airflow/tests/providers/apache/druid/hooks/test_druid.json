{"error": null, "response": {"classes": [{"cls_lc": [[37, 8], [39, 73]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[38, 12], [39, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn_url", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidHook.setup_method.<locals>.TestDRuidhook.get_conn_url", "ret_exprs": ["return \"http://druid-overlord:8081/druid/indexer/v1/task\""], "ret_type": "", "ret_type_p": [["str", 0.23148847793949473], ["Dict[str, int]", 0.10341713516102441], ["int", 0.09498308994561104]], "variables": {}, "variables_p": {}}], "name": "TestDRuidhook", "q_name": "TestDruidHook.setup_method.<locals>.TestDRuidhook", "variables": {}, "variables_p": {}}, {"cls_lc": [[29, 0], [183, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[30, 4], [41, 38]], "fn_var_ln": {"adapter": [[34, 8], [34, 15]], "db_hook": [[41, 8], [41, 20]], "session": [[33, 8], [33, 15]]}, "fn_var_occur": {"adapter": [], "db_hook": [["self", "db_hook", "TestDRuidhook"]], "session": []}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "TestDRuidhook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"adapter": "", "db_hook": "", "session": ""}, "variables_p": {"adapter": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["int", 0.20598223365934745]], "session": [["int", 0.29999999999999993], ["requests.sessions.Session", 0.09999999999999998], ["str", 0.09999999999999998], ["float", 0.09999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [58, 39]], "fn_var_ln": {"status_check": [[48, 8], [48, 20]], "task_post": [[44, 8], [44, 17]]}, "fn_var_occur": {"status_check": [["status_check", "requests_mock", "get", "text"], ["status_check", "called_once"]], "task_post": [["task_post", "requests_mock", "post", "text"], ["task_post", "called_once"]]}, "name": "test_submit_gone_wrong", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["task_post", "requests_mock", "post", "text"], ["status_check", "requests_mock", "get", "text"]], "self": [["self", "db_hook", "submit_indexing_job"]]}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.5055399261924719], ["requests_mock.Mocker", 0.09088499754047505]], "self": []}, "q_name": "TestDruidHook.test_submit_gone_wrong", "ret_exprs": [], "ret_type": "", "variables": {"status_check": "", "task_post": ""}, "variables_p": {"status_check": [["str", 0.5696328344480636], ["int", 0.21168287685745996], ["Dict[int, int]", 0.10647392721883682]], "task_post": [["str", 0.5959855151396529], ["Dict[str, str]", 0.07912473042925738]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [74, 39]], "fn_var_ln": {"status_check": [[65, 8], [65, 20]], "task_post": [[61, 8], [61, 17]]}, "fn_var_occur": {"status_check": [["status_check", "requests_mock", "get", "text"], ["status_check", "called_once"]], "task_post": [["task_post", "requests_mock", "post", "text"], ["task_post", "called_once"]]}, "name": "test_submit_ok", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["task_post", "requests_mock", "post", "text"], ["status_check", "requests_mock", "get", "text"]], "self": [["self", "db_hook", "submit_indexing_job"]]}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["unittesmock.MagicMock", 0.5055399261924719], ["requests_mock.Mocker", 0.09088499754047505]], "self": []}, "q_name": "TestDruidHook.test_submit_ok", "ret_exprs": [], "ret_type": "", "variables": {"status_check": "", "task_post": ""}, "variables_p": {"status_check": [["str", 0.5696328344480636], ["int", 0.21168287685745996], ["Dict[int, int]", 0.10647392721883682]], "task_post": [["str", 0.5959855151396529], ["Dict[str, str]", 0.07912473042925738]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 4], [97, 77]], "fn_var_ln": {"json_ingestion_string": [[86, 8], [86, 29]], "req_body": [[96, 12], [96, 20]], "status_check": [[81, 8], [81, 20]], "task_post": [[77, 8], [77, 17]]}, "fn_var_occur": {"json_ingestion_string": [["self", "db_hook", "submit_indexing_job", "json_ingestion_string"]], "req_body": [["req_body", "task_post", "request_history", "json"]], "status_check": [["status_check", "requests_mock", "get", "text"], ["status_check", "called_once"]], "task_post": [["task_post", "requests_mock", "post", "text"], ["task_post", "called_once"], ["task_post", "called_once"], ["req_body", "task_post", "request_history", "json"]]}, "name": "test_submit_correct_json_body", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["task_post", "requests_mock", "post", "text"], ["status_check", "requests_mock", "get", "text"]], "self": [["self", "db_hook", "submit_indexing_job", "json_ingestion_string"]]}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["requests_mock.Mocker", 0.1978193765246126]], "self": []}, "q_name": "TestDruidHook.test_submit_correct_json_body", "ret_exprs": [], "ret_type": "", "variables": {"json_ingestion_string": "", "req_body": "", "status_check": "", "task_post": ""}, "variables_p": {"json_ingestion_string": [["str", 0.9999999998562661], ["int", 1.2434968648703575e-10], ["List[str]", 1.938432075043805e-11]], "req_body": [["str", 0.41923112300418763], ["List[Dict[str, str]]", 0.30427709602028846], ["Dict[str, Tuple[str, str]]", 0.09565622640125401], ["Optional[str]", 0.09135210308434734]], "status_check": [["str", 0.5696328344480636], ["int", 0.21168287685745996], ["Dict[int, int]", 0.10647392721883682]], "task_post": [["Dict[str, str]", 0.52580296971325], ["str", 0.16777428638061997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [114, 39]], "fn_var_ln": {"status_check": [[104, 8], [104, 20]], "task_post": [[100, 8], [100, 17]]}, "fn_var_occur": {"status_check": [["status_check", "requests_mock", "get", "text"], ["status_check", "called_once"]], "task_post": [["task_post", "requests_mock", "post", "text"], ["task_post", "called_once"]]}, "name": "test_submit_unknown_response", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["task_post", "requests_mock", "post", "text"], ["status_check", "requests_mock", "get", "text"]], "self": [["self", "db_hook", "submit_indexing_job"]]}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["requests_mock.Mocker", 0.39033100796141706]], "self": []}, "q_name": "TestDruidHook.test_submit_unknown_response", "ret_exprs": [], "ret_type": "", "variables": {"status_check": "", "task_post": ""}, "variables_p": {"status_check": [["str", 0.5696328344480636], ["int", 0.21168287685745996], ["Dict[int, int]", 0.10647392721883682]], "task_post": [["str", 0.5959855151396529], ["Dict[str, str]", 0.07912473042925738]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [139, 40]], "fn_var_ln": {"shutdown_post": [[127, 8], [127, 21]], "status_check": [[123, 8], [123, 20]], "task_post": [[119, 8], [119, 17]]}, "fn_var_occur": {"shutdown_post": [["shutdown_post", "requests_mock", "post", "text"], ["shutdown_post", "called_once"]], "status_check": [["status_check", "requests_mock", "get", "text"], ["status_check", "called"]], "task_post": [["task_post", "requests_mock", "post", "text"], ["task_post", "called_once"]]}, "name": "test_submit_timeout", "params": {"requests_mock": "", "self": ""}, "params_descr": {"requests_mock": "", "self": ""}, "params_occur": {"requests_mock": [["task_post", "requests_mock", "post", "text"], ["status_check", "requests_mock", "get", "text"], ["shutdown_post", "requests_mock", "post", "text"]], "self": [["self", "db_hook", "timeout"], ["self", "db_hook", "max_ingestion_time"], ["self", "db_hook", "submit_indexing_job"]]}, "params_p": {"args": [], "kwargs": [], "requests_mock": [["requests_mock.Mocker", 0.3886693551405326]], "self": []}, "q_name": "TestDruidHook.test_submit_timeout", "ret_exprs": [], "ret_type": "", "variables": {"shutdown_post": "", "status_check": "", "task_post": ""}, "variables_p": {"shutdown_post": [["str", 0.586911928478551], ["Dict[str, Union[int, str]]", 0.11709523412031667]], "status_check": [["str", 0.5696328344480636], ["int", 0.21168287685745996], ["Dict[int, int]", 0.10647392721883682]], "task_post": [["str", 0.5959855151396529], ["Dict[str, str]", 0.07912473042925738]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[142, 4], [150, 66]], "fn_var_ln": {"conn_type": [[145, 8], [145, 32]], "extra_dejson": [[147, 8], [147, 35]], "get_conn_value": [[143, 8], [143, 22]], "hook": [[149, 8], [149, 12]], "host": [[144, 8], [144, 27]], "port": [[146, 8], [146, 27]], "return_value": [[148, 8], [148, 40]]}, "fn_var_occur": {"conn_type": [["get_conn_value", "conn_type"]], "extra_dejson": [["get_conn_value", "extra_dejson"]], "get_conn_value": [["get_conn_value", "MagicMock"], ["get_conn_value", "host"], ["get_conn_value", "conn_type"], ["get_conn_value", "port"], ["get_conn_value", "extra_dejson"], ["mock_get_connection", "return_value", "get_conn_value"]], "hook": [["hook", "DruidHook", "timeout", "max_ingestion_time"], ["hook", "get_conn_url"]], "host": [["get_conn_value", "host"]], "port": [["get_conn_value", "port"]], "return_value": [["mock_get_connection", "return_value", "get_conn_value"]]}, "name": "test_get_conn_url", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "get_conn_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.4079946070638496]], "self": []}, "q_name": "TestDruidHook.test_get_conn_url", "ret_exprs": [], "ret_type": "", "variables": {"conn_type": "", "extra_dejson": "", "get_conn_value": "", "hook": "", "host": "", "port": "", "return_value": ""}, "variables_p": {"conn_type": [["str", 0.39938906001958474], ["Type[int]", 0.18357105889806055], ["Dict[str, Union[Any, Any, Any]]", 0.12262382793778463], ["List[str]", 0.08549979690663605]], "extra_dejson": [["float", 0.49999999999153966], ["int", 0.49999999996982025], ["list", 1.5288762215625244e-11], ["Type[Dict[str, Any]]", 9.477765191549133e-12], ["Dict[str, Set[str]]", 7.164983630269139e-12], ["Type[List[Any]]", 6.708580304627141e-12]], "get_conn_value": [["unittesmock.MagicMock", 0.7072469003904986], ["str", 0.1043116683729469]], "hook": [["int", 0.5464724537669085], ["Tuple[float, float]", 0.15624264651689834], ["float", 0.1218375640185371]], "host": [["float", 0.49999999999153966], ["int", 0.49999999996982025], ["list", 1.5288762215625244e-11], ["Type[Dict[str, Any]]", 9.477765191549133e-12], ["Dict[str, Set[str]]", 7.164983630269139e-12], ["Type[List[Any]]", 6.708580304627141e-12]], "port": [["float", 0.49999999999153966], ["int", 0.49999999996982025], ["list", 1.5288762215625244e-11], ["Type[Dict[str, Any]]", 9.477765191549133e-12], ["Dict[str, Set[str]]", 7.164983630269139e-12], ["Type[List[Any]]", 6.708580304627141e-12]], "return_value": [["list", 0.29681775321610926], ["unittesmock.MagicMock", 0.20957221179137087], ["str", 0.09732008094062176], ["List[Dict[str, str]]", 0.08842413918185778]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[153, 4], [159, 50]], "fn_var_ln": {"expected": [[158, 8], [158, 16]], "get_conn_value": [[154, 8], [154, 22]], "login": [[155, 8], [155, 28]], "password": [[156, 8], [156, 31]], "return_value": [[157, 8], [157, 40]]}, "fn_var_occur": {"expected": [["expected", "requests", "auth", "HTTPBasicAuth"], ["self", "db_hook", "get_auth", "expected"]], "get_conn_value": [["get_conn_value", "MagicMock"], ["get_conn_value", "login"], ["get_conn_value", "password"], ["mock_get_connection", "return_value", "get_conn_value"]], "login": [["get_conn_value", "login"]], "password": [["get_conn_value", "password"]], "return_value": [["mock_get_connection", "return_value", "get_conn_value"]]}, "name": "test_get_auth", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "get_conn_value"]], "self": [["self", "db_hook", "get_auth", "expected"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.8091449148205581]], "self": []}, "q_name": "TestDruidHook.test_get_auth", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "get_conn_value": "", "login": "", "password": "", "return_value": ""}, "variables_p": {"expected": [["str", 0.9031435472741319], ["Dict[str, str]", 0.096856452725868]], "get_conn_value": [["unittesmock.MagicMock", 0.45958649438960175], ["Dict[str, List[Any]]", 0.33975998186423345], ["Dict[str, Union[Any, Any, Any]]", 0.11325332728807781], ["str", 0.08740019645808712]], "login": [["float", 0.49999999999153966], ["int", 0.49999999996982025], ["list", 1.5288762215625244e-11], ["Type[Dict[str, Any]]", 9.477765191549133e-12], ["Dict[str, Set[str]]", 7.164983630269139e-12], ["Type[List[Any]]", 6.708580304627141e-12]], "password": [["int", 0.4979506968105386], ["Tuple[Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any]]", 0.10043007854171444], ["str", 0.09707462376578029]], "return_value": [["list", 0.29681775321610926], ["unittesmock.MagicMock", 0.20957221179137087], ["str", 0.09732008094062176], ["List[Dict[str, str]]", 0.08842413918185778]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[162, 4], [167, 46]], "fn_var_ln": {"get_conn_value": [[163, 8], [163, 22]], "login": [[164, 8], [164, 28]], "password": [[165, 8], [165, 31]], "return_value": [[166, 8], [166, 40]]}, "fn_var_occur": {"get_conn_value": [["get_conn_value", "MagicMock"], ["get_conn_value", "login", "None"], ["get_conn_value", "password"], ["mock_get_connection", "return_value", "get_conn_value"]], "login": [["get_conn_value", "login", "None"]], "password": [["get_conn_value", "password"]], "return_value": [["mock_get_connection", "return_value", "get_conn_value"]]}, "name": "test_get_auth_with_no_user", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "get_conn_value"]], "self": [["self", "db_hook", "get_auth", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.8086029401761821]], "self": []}, "q_name": "TestDruidHook.test_get_auth_with_no_user", "ret_exprs": [], "ret_type": "", "variables": {"get_conn_value": "", "login": "", "password": "", "return_value": ""}, "variables_p": {"get_conn_value": [["unittesmock.MagicMock", 0.47987267148859053], ["Dict[str, List[Any]]", 0.32528558621594855], ["Dict[str, Union[Any, Any, Any]]", 0.10842852873864951], ["str", 0.0864132135568113]], "login": [["List[List[str]]", 0.09006591668568684]], "password": [["int", 0.4979506968105386], ["Tuple[Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any]]", 0.10043007854171444], ["str", 0.09707462376578029]], "return_value": [["list", 0.29681775321610926], ["unittesmock.MagicMock", 0.20957221179137087], ["str", 0.09732008094062176], ["List[Dict[str, str]]", 0.08842413918185778]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [175, 46]], "fn_var_ln": {"get_conn_value": [[171, 8], [171, 22]], "login": [[172, 8], [172, 28]], "password": [[173, 8], [173, 31]], "return_value": [[174, 8], [174, 40]]}, "fn_var_occur": {"get_conn_value": [["get_conn_value", "MagicMock"], ["get_conn_value", "login"], ["get_conn_value", "password", "None"], ["mock_get_connection", "return_value", "get_conn_value"]], "login": [["get_conn_value", "login"]], "password": [["get_conn_value", "password", "None"]], "return_value": [["mock_get_connection", "return_value", "get_conn_value"]]}, "name": "test_get_auth_with_no_password", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "get_conn_value"]], "self": [["self", "db_hook", "get_auth", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.8211047760934228]], "self": []}, "q_name": "TestDruidHook.test_get_auth_with_no_password", "ret_exprs": [], "ret_type": "", "variables": {"get_conn_value": "", "login": "", "password": "", "return_value": ""}, "variables_p": {"get_conn_value": [["Dict[str, List[Any]]", 0.32910229862532075], ["unittesmock.MagicMock", 0.280231311061028], ["List[Union[Any, Any]]", 0.18771619420765892], ["Dict[str, Union[Any, Any, Any]]", 0.10970076620844026], ["bool", 0.09324942989755211]], "login": [["float", 0.49999999999153966], ["int", 0.49999999996982025], ["list", 1.5288762215625244e-11], ["Type[Dict[str, Any]]", 9.477765191549133e-12], ["Dict[str, Set[str]]", 7.164983630269139e-12], ["Type[List[Any]]", 6.708580304627141e-12]], "password": [["int", 0.19874812591664676], ["List[int]", 0.09923168103730583], ["Optional[str]", 0.0936194255293861]], "return_value": [["list", 0.29681775321610926], ["unittesmock.MagicMock", 0.20957221179137087], ["str", 0.09732008094062176], ["List[Dict[str, str]]", 0.08842413918185778]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[178, 4], [183, 46]], "fn_var_ln": {"get_conn_value": [[179, 8], [179, 22]], "login": [[180, 8], [180, 28]], "password": [[181, 8], [181, 31]], "return_value": [[182, 8], [182, 40]]}, "fn_var_occur": {"get_conn_value": [["get_conn_value", "MagicMock"], ["get_conn_value", "login", "None"], ["get_conn_value", "password", "None"], ["mock_get_connection", "return_value", "get_conn_value"]], "login": [["get_conn_value", "login", "None"]], "password": [["get_conn_value", "password", "None"]], "return_value": [["mock_get_connection", "return_value", "get_conn_value"]]}, "name": "test_get_auth_with_no_user_and_password", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "get_conn_value"]], "self": [["self", "db_hook", "get_auth", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["unittesmock.MagicMock", 0.8240769190946895]], "self": []}, "q_name": "TestDruidHook.test_get_auth_with_no_user_and_password", "ret_exprs": [], "ret_type": "", "variables": {"get_conn_value": "", "login": "", "password": "", "return_value": ""}, "variables_p": {"get_conn_value": [["unittesmock.MagicMock", 0.5349911523232126], ["str", 0.10280045289493588], ["Dict[str, Union[bool, str]]", 0.09481449342855922], ["Dict[str, bool]", 0.09481449342855922]], "login": [["List[List[str]]", 0.09006591668568684]], "password": [["int", 0.19874812591664676], ["List[int]", 0.09923168103730583], ["Optional[str]", 0.0936194255293861]], "return_value": [["list", 0.29681775321610926], ["unittesmock.MagicMock", 0.20957221179137087], ["str", 0.09732008094062176], ["List[Dict[str, str]]", 0.08842413918185778]]}}], "name": "TestDruidHook", "q_name": "TestDruidHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[196, 8], [201, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[197, 12], [198, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "MagicMock", "rowcount"], ["self", "conn", "conn", "MagicMock"], ["self", "conn", "host"], ["self", "conn", "port"], ["self", "conn", "conn_type"], ["self", "conn", "extra_dejson"], ["self", "conn", "cursor", "return_value", "self", "cur"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidDbApiHook.setup_method.<locals>.TestDruidDBApiHook.get_conn", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[200, 12], [201, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_connection", "params": {"conn_id": "", "self": ""}, "params_descr": {"conn_id": "", "self": ""}, "params_occur": {"conn_id": [], "self": []}, "params_p": {"args": [], "conn_id": [["int", 0.49999999999999994], ["str", 0.19999999999999998], ["bool", 0.19999999999999998]], "kwargs": [], "self": []}, "q_name": "TestDruidDbApiHook.setup_method.<locals>.TestDruidDBApiHook.get_connection", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}], "name": "TestDruidDBApiHook", "q_name": "TestDruidDbApiHook.setup_method.<locals>.TestDruidDBApiHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[186, 0], [242, 59]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [203, 41]], "fn_var_ln": {"conn": [[189, 20], [189, 24]], "cur": [[188, 8], [188, 16]], "db_hook": [[203, 8], [203, 20]]}, "fn_var_occur": {"conn": [], "cur": [], "db_hook": [["self", "db_hook", "TestDruidDBApiHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "TestDruidDBApiHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidDbApiHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "cur": "", "db_hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "cur": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["int", 0.17772318735265744], ["str", 0.16713724898850246]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[205, 4], [207, 68]], "fn_var_ln": {"db_hook": [[206, 8], [206, 15]]}, "fn_var_occur": {"db_hook": [["db_hook", "self", "db_hook"], ["db_hook", "get_uri"]]}, "name": "test_get_uri", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["db_hook", "self", "db_hook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidDbApiHook.test_get_uri", "ret_exprs": [], "ret_type": "", "variables": {"db_hook": ""}, "variables_p": {"db_hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[209, 4], [217, 59]], "fn_var_ln": {"result_sets": [[211, 8], [211, 19]], "statement": [[210, 8], [210, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_first", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_first_record", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"], ["self", "conn", "close", "call_count"], ["self", "cur", "close", "call_count"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidDbApiHook.test_get_first_record", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.2772479655868859]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[219, 4], [227, 59]], "fn_var_ln": {"result_sets": [[221, 8], [221, 19]], "statement": [[220, 8], [220, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_records", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_records", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"], ["self", "conn", "close", "call_count"], ["self", "cur", "close", "call_count"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidDbApiHook.test_get_records", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.2772479655868859]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[229, 4], [242, 59]], "fn_var_ln": {"column": [[231, 8], [231, 14]], "df": [[235, 8], [235, 10]], "result_sets": [[232, 8], [232, 19]], "statement": [[230, 8], [230, 17]]}, "fn_var_occur": {"column": [["self", "cur", "description", "column"], ["column", "df", "columns"]], "df": [["df", "self", "db_hook", "get_pandas_df", "statement"], ["column", "df", "columns"], ["item", "df", "values", "tolist", "i"]], "result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["enumerate", "result_sets"]], "statement": [["df", "self", "db_hook", "get_pandas_df", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_pandas_df", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "description", "column"], ["self", "cur", "fetchall", "return_value", "result_sets"], ["df", "self", "db_hook", "get_pandas_df", "statement"], ["self", "conn", "close", "call_count"], ["self", "cur", "close", "call_count"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDruidDbApiHook.test_get_pandas_df", "ret_exprs": [], "ret_type": "", "variables": {"column": "", "df": "", "result_sets": "", "statement": ""}, "variables_p": {"column": [["str", 0.2514383088298724], ["int", 0.1922766414040206], ["dict", 0.12681732062703294], ["Dict[str, int]", 0.12477955940011504], ["List[str]", 0.11673232158052399], ["Optional[str]", 0.10414307854847757], ["bool", 0.08381276960995745]], "df": [["Tuple[Any, Any, Any, Any]", 0.3757400897303964], ["List[str]", 0.11412969269632396], ["str", 0.09740362926634165], ["list", 0.09569431329720011]], "result_sets": [["Dict[float, int]", 0.38664669374509325], ["Dict[str, str]", 0.10971008628745654], ["Dict[str, Dict[str, Any]]", 0.10624481403607677], ["float", 0.10602636803568007], ["str", 0.0992127516527673], ["Dict[str, Dict[str, str]]", 0.09607964312146304], ["Dict[int, Any]", 0.09607964312146304]], "statement": [["list", 0.5119921421725822]]}}], "name": "TestDruidDbApiHook", "q_name": "TestDruidDbApiHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "MagicMock", "patch", "pytest", "requests", "airflow", "exceptions", "AirflowException", "airflow", "providers", "apache", "druid", "hooks", "druid", "DruidDbApiHook", "DruidHook", "requests_mock"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 82}, "session_id": "3Gu-_98wcfvpUnazxIA4Ze14rEsUBGD6UFfRuVYNTPY", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}