{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[28, 0], [35, 15]], "fn_var_ln": {"get_conn": [[33, 4], [33, 17]], "hook": [[29, 4], [29, 8]], "mock_get_conn": [[30, 4], [30, 17]]}, "fn_var_occur": {"get_conn": [["hook", "get_conn", "mock_get_conn"]], "hook": [["hook", "ImpalaHook"], ["hook", "get_conn", "mock_get_conn"]], "mock_get_conn": [["mock_get_conn", "MagicMock"], ["mock_get_conn", "return_value", "cursor", "MagicMock"], ["mock_get_conn", "return_value", "cursor", "return_value", "rowcount"], ["hook", "get_conn", "mock_get_conn"]]}, "name": "impala_hook_fixture", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "impala_hook_fixture", "ret_exprs": ["return hook"], "ret_type": "airflow.providers.apache.impala.hooks.impala.ImpalaHook", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"get_conn": "", "hook": "", "mock_get_conn": ""}, "variables_p": {"get_conn": [["Optional[str]", 0.22206079925596373], ["str", 0.10117925436760375], ["Dict[str, Union[Any, int, str]]", 0.09985030068690885], ["Dict[str, Union[Any, Any, Any]]", 0.09427830854955604], ["List[str]", 0.0873714183160274]], "hook": [["Dict[str, Any]", 0.11293508330149736], ["Dict[str, List[str]]", 0.10018192361819779], ["str", 0.09693899086845367], ["float", 0.09403152452459412]], "mock_get_conn": [["unittesmock.MagicMock", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 0], [54, 5]], "fn_var_ln": {"get_connection": [[41, 4], [41, 23]], "hook": [[40, 4], [40, 8]]}, "fn_var_occur": {"get_connection": [["hook", "get_connection", "MagicMock", "return_value", "Connection", "login", "password", "host", "port", "schema", "extra", "True"]], "hook": [["hook", "ImpalaHook"], ["hook", "get_connection", "MagicMock", "return_value", "Connection", "login", "password", "host", "port", "schema", "extra", "True"], ["hook", "get_conn"]]}, "name": "test_get_conn", "params": {"mock_connect": ""}, "params_descr": {"mock_connect": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "host", "port", "user", "password", "database", "use_ssl", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["unittesmock.MagicMock", 0.7963015242219327]]}, "q_name": "test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"get_connection": "", "hook": ""}, "variables_p": {"get_connection": [["unittesmock.MagicMock", 0.5007767617732825]], "hook": [["unittesmock.MagicMock", 0.4066751744333785], ["mock.MagicMock", 0.09603470843680936], ["Dict[str, str]", 0.09493497586014298]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 0], [79, 5]], "fn_var_ln": {"get_connection": [[60, 4], [60, 23]], "hook": [[59, 4], [59, 8]]}, "fn_var_occur": {"get_connection": [["hook", "get_connection", "MagicMock", "return_value", "Connection", "login", "password", "host", "port", "schema", "extra", "True"]], "hook": [["hook", "ImpalaHook"], ["hook", "get_connection", "MagicMock", "return_value", "Connection", "login", "password", "host", "port", "schema", "extra", "True"], ["hook", "get_conn"]]}, "name": "test_get_conn_kerberos", "params": {"mock_connect": ""}, "params_descr": {"mock_connect": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "host", "port", "user", "password", "database", "use_ssl", "True", "auth_mechanism"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["unittesmock.MagicMock", 0.39507933241323256], ["mock.MagicMock", 0.09518246659804938]]}, "q_name": "test_get_conn_kerberos", "ret_exprs": [], "ret_type": "", "variables": {"get_connection": "", "hook": ""}, "variables_p": {"get_connection": [["unittesmock.MagicMock", 0.5007767617732825]], "hook": [["unittesmock.MagicMock", 0.4066751744333785], ["mock.MagicMock", 0.09603470843680936], ["Dict[str, str]", 0.09493497586014298]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 0], [89, 67]], "fn_var_ln": {"commit_every": [[87, 4], [87, 16]], "rows": [[85, 4], [85, 8]], "table": [[84, 4], [84, 9]], "target_fields": [[86, 4], [86, 17]]}, "fn_var_occur": {"commit_every": [["impala_hook_fixture", "insert_rows", "table", "rows", "target_fields", "commit_every"]], "rows": [["impala_hook_fixture", "insert_rows", "table", "rows", "target_fields", "commit_every"], ["mock_insert_rows", "assert_called_once_with", "table", "rows", "None"]], "table": [["impala_hook_fixture", "insert_rows", "table", "rows", "target_fields", "commit_every"], ["mock_insert_rows", "assert_called_once_with", "table", "rows", "None"]], "target_fields": [["target_fields", "None"], ["impala_hook_fixture", "insert_rows", "table", "rows", "target_fields", "commit_every"]]}, "name": "test_insert_rows", "params": {"impala_hook_fixture": "", "mock_insert_rows": ""}, "params_descr": {"impala_hook_fixture": "", "mock_insert_rows": ""}, "params_occur": {"impala_hook_fixture": [["impala_hook_fixture", "insert_rows", "table", "rows", "target_fields", "commit_every"]], "mock_insert_rows": [["mock_insert_rows", "assert_called_once_with", "table", "rows", "None"]]}, "params_p": {"args": [], "impala_hook_fixture": [["unittesmock.MagicMock", 0.08524217520595471]], "kwargs": [], "mock_insert_rows": [["bool", 0.09348295658523348], ["core_lib.core.models.Venue", 0.07661191333606694]]}, "q_name": "test_insert_rows", "ret_exprs": [], "ret_type": "", "variables": {"commit_every": "", "rows": "", "table": "", "target_fields": ""}, "variables_p": {"commit_every": [["Tuple[int, int, int]", 0.1929452938504112], ["List[int]", 0.12443021059633469], ["List[str]", 0.10426479818601404], ["list", 0.09965729091973458], ["str", 0.09067606481183332], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.08957746234001916]], "rows": [["str", 0.19633410357200567], ["Dict[str, Union[Any, Any, Any]]", 0.19134612882759863], ["Dict[str, Union[Any, Any]]", 0.10438851741874566], ["float", 0.09822002952245741], ["Dict[str, Union[Any, bool, str]]", 0.09567306441379932]], "table": [["legistar.models.Event", 0.11048821498871066]], "target_fields": [["list", 0.3056653494583137], ["dict", 0.11979121877915512], ["Dict[str, str]", 0.10651394806353388], ["tuple", 0.10069516471663734], ["List[Optional[str]]", 0.08477534991346085], ["Pattern[str]", 0.08442901449188661]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 0], [98, 108]], "fn_var_ln": {"result_sets": [[94, 4], [94, 15]], "statement": [[93, 4], [93, 13]]}, "fn_var_occur": {"result_sets": [["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "fetchone", "return_value", "result_sets"], ["result_sets", "impala_hook_fixture", "get_first", "statement"]], "statement": [["result_sets", "impala_hook_fixture", "get_first", "statement"], ["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_first_record", "params": {"impala_hook_fixture": ""}, "params_descr": {"impala_hook_fixture": ""}, "params_occur": {"impala_hook_fixture": [["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "fetchone", "return_value", "result_sets"], ["result_sets", "impala_hook_fixture", "get_first", "statement"], ["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "impala_hook_fixture": [["unittesmock.MagicMock", 0.10801419379726772], ["accounts.models.User", 0.09448403943291178]], "kwargs": []}, "q_name": "test_get_first_record", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["Dict[str, int]", 0.45094521495955797], ["str", 0.10146202561179703]], "statement": [["list", 0.33508280967891624]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 0], [107, 108]], "fn_var_ln": {"result_sets": [[103, 4], [103, 15]], "statement": [[102, 4], [102, 13]]}, "fn_var_occur": {"result_sets": [["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "fetchall", "return_value", "result_sets"], ["result_sets", "impala_hook_fixture", "get_records", "statement"]], "statement": [["result_sets", "impala_hook_fixture", "get_records", "statement"], ["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_records", "params": {"impala_hook_fixture": ""}, "params_descr": {"impala_hook_fixture": ""}, "params_occur": {"impala_hook_fixture": [["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "fetchall", "return_value", "result_sets"], ["result_sets", "impala_hook_fixture", "get_records", "statement"], ["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "impala_hook_fixture": [["unittesmock.MagicMock", 0.10801419379726772], ["accounts.models.User", 0.09448403943291178]], "kwargs": []}, "q_name": "test_get_records", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["Dict[str, int]", 0.45094521495955797], ["str", 0.10146202561179703]], "statement": [["list", 0.33508280967891624]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 0], [123, 108]], "fn_var_ln": {"column": [[112, 4], [112, 10]], "df": [[116, 4], [116, 6]], "result_sets": [[113, 4], [113, 15]], "statement": [[111, 4], [111, 13]]}, "fn_var_occur": {"column": [["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "description", "column"], ["column", "df", "columns"]], "df": [["df", "impala_hook_fixture", "get_pandas_df", "statement"], ["column", "df", "columns"], ["result_sets", "df", "values", "tolist"], ["result_sets", "df", "values", "tolist"]], "result_sets": [["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "fetchall", "return_value", "result_sets"], ["result_sets", "df", "values", "tolist"], ["result_sets", "df", "values", "tolist"]], "statement": [["df", "impala_hook_fixture", "get_pandas_df", "statement"], ["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_pandas_df", "params": {"impala_hook_fixture": ""}, "params_descr": {"impala_hook_fixture": ""}, "params_occur": {"impala_hook_fixture": [["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "description", "column"], ["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "fetchall", "return_value", "result_sets"], ["df", "impala_hook_fixture", "get_pandas_df", "statement"], ["impala_hook_fixture", "get_conn", "return_value", "cursor", "return_value", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "impala_hook_fixture": [["unittesmock.MagicMock", 0.1915835547673764], ["tests.async_mock.MagicMock", 0.09616724637359018]], "kwargs": []}, "q_name": "test_get_pandas_df", "ret_exprs": [], "ret_type": "", "variables": {"column": "", "df": "", "result_sets": "", "statement": ""}, "variables_p": {"column": [["list", 0.18259465736487604], ["List[Tuple[int, Any]]", 0.11533405716874545], ["int", 0.1151050896039171], ["dict", 0.1060026568320476], ["bytes", 0.10393881905094397], ["List[Tuple[Any, Any, Any]]", 0.0905949439308188], ["str", 0.08948200943544048]], "df": [["list", 0.18099725512063017], ["str", 0.12474867544981345], ["Dict[None, None]", 0.09522993250313651], ["dict", 0.08538332904575735]], "result_sets": [["int", 0.32605001659344535], ["Dict[str, Tuple[str, str]]", 0.09726715605761253], ["set", 0.09244462840390674]], "statement": [["list", 0.26839534955579963], ["dict", 0.17641108928870247]]}}], "imports": ["__future__", "annotations", "unittest", "mock", "MagicMock", "patch", "pytest", "airflow", "models", "Connection", "airflow", "providers", "apache", "impala", "hooks", "impala", "ImpalaHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 1, "I": 0, "U": 32}, "session_id": "aWy5s2h15va3vOgUcNQbwN3w_Lafxy8r4Rnvz63E8Ns", "set": null, "tc": [false, null], "type_annot_cove": 0.03, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}