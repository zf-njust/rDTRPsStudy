{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Patch ``BaseHook.get_connection()`` by mock value.", "long_descr": "This fixture optionally parametrized, if ``param`` not set or empty it just mock method.\nIf param is dictionary or :class:`~airflow.models.Connection` than return it,\nIf param is exception than add side effect.\nOtherwise, it raises an error", "ret": null}, "fn_lc": [[28, 0], [57, 15]], "fn_var_ln": {"conn": [[40, 8], [40, 12]], "return_value": [[48, 12], [48, 26]], "side_effect": [[50, 12], [50, 25]]}, "fn_var_occur": {"conn": [["conn", "request", "param"], ["conn", "None"], ["isinstance", "conn", "dict"], ["m", "return_value", "Connection", "conn"], ["isinstance", "conn", "Connection"], ["m", "return_value", "conn"], ["isinstance", "conn", "Exception"], ["m", "side_effect", "conn"], ["TypeError", "request", "node", "name", "type", "conn", "__name__"]], "return_value": [["m", "return_value", "Connection", "conn"], ["m", "return_value", "conn"]], "side_effect": [["m", "side_effect", "conn"]]}, "name": "hook_conn", "params": {"request": ""}, "params_descr": {"request": ""}, "params_occur": {"request": [["conn", "request", "param"], ["TypeError", "request", "node", "name", "type", "conn", "__name__"]]}, "params_p": {"args": [], "kwargs": [], "request": [["django.db.models.query.QuerySet", 0.10578282757240934], ["grouper.models.user.User", 0.09192747264696109], ["grouper.models.base.session.Session", 0.09192747264696109]]}, "q_name": "hook_conn", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "return_value": "", "side_effect": ""}, "variables_p": {"conn": [["int", 0.18969756870735785], ["str", 0.18860498024685002], ["List[Tuple[str, Any]]", 0.11060992595200143], ["bool", 0.08509863454773635], ["Dict[str, Union[Any, int, str]]", 0.08488740576142068]], "return_value": [["str", 0.6962229019148993], ["Set[str]", 0.1155709967018115], ["Optional[str]", 0.09557609619747222], ["Dict[str, Union[int, str]]", 0.09263000518581689]], "side_effect": [["bytes", 0.19999999999999998], ["str", 0.19999999999999998], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09999999999999999], ["int", 0.09999999999999999]]}}], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "airflow", "models", "Connection"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 5}, "session_id": "HBXuoksJMeYSy_xwK-0akiJXX31UWwoGapQwz2ouTvU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}