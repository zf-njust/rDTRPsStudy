{"error": null, "response": {"classes": [{"cls_lc": [[37, 8], [38, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "UnitTestVerticaHook", "q_name": "TestVerticaHookConn.setup_method.<locals>.UnitTestVerticaHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[28, 0], [124, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[29, 4], [42, 66]], "fn_var_ln": {"conn_name_attr": [[38, 12], [38, 26]], "connection": [[30, 8], [30, 23]], "db_hook": [[40, 8], [40, 20]]}, "fn_var_occur": {"conn_name_attr": [], "connection": [["self", "connection", "Connection", "login", "password", "host", "schema"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]], "db_hook": [["self", "db_hook", "UnitTestVerticaHook"], ["self", "db_hook", "get_connection", "mock", "Mock"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "connection", "Connection", "login", "password", "host", "schema"], ["self", "db_hook", "UnitTestVerticaHook"], ["self", "db_hook", "get_connection", "mock", "Mock"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVerticaHookConn.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn_name_attr": "", "connection": "", "db_hook": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "connection": [["float", 0.6178905770718065], ["dict", 0.09546928954686028], ["str", 0.09544095979116766], ["Tuple[Any, Any]", 0.09014448297444658]], "db_hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [49, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "host", "port", "database", "user", "password"]], "self": [["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["mock.MagicMock", 0.12767625296577131]], "self": []}, "q_name": "TestVerticaHookConn.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test if parameters are correctly passed to connection", "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [95, 41]], "fn_var_ln": {"args": [[84, 8], [84, 12]], "bck_server_node": [[75, 8], [75, 23]], "bool_options": [[55, 8], [55, 20]], "conn_timeout": [[76, 8], [76, 20]], "extra_dict": [[54, 8], [54, 18]], "kwargs": [[84, 14], [84, 20]], "log_lvl": [[77, 8], [77, 15]], "std_options": [[65, 8], [65, 19]]}, "fn_var_occur": {"args": [["args", "kwargs", "mock_connect", "call_args"]], "bck_server_node": [["extra_dict", "update", "bck_server_node"], ["bck_server_node", "kwargs"], ["bck_server_node", "kwargs"]], "bool_options": [], "conn_timeout": [["extra_dict", "update", "conn_timeout"], ["kwargs", "conn_timeout"]], "extra_dict": [["extra_dict", "self", "connection", "extra_dejson"], ["extra_dict", "update", "bo", "True"], ["extra_dict", "update", "False"], ["extra_dict", "update", "so", "so"], ["extra_dict", "update", "bck_server_node"], ["extra_dict", "update", "conn_timeout"], ["extra_dict", "update", "log_lvl"], ["self", "connection", "extra", "json", "dumps", "extra_dict"]], "kwargs": [["args", "kwargs", "mock_connect", "call_args"], ["kwargs", "bo", "True"], ["kwargs", "False"], ["kwargs", "so", "so"], ["bck_server_node", "kwargs"], ["bck_server_node", "kwargs"], ["kwargs", "conn_timeout"], ["kwargs", "log_lvl"], ["kwargs", "None"]], "log_lvl": [["extra_dict", "update", "log_lvl"], ["kwargs", "log_lvl"]], "std_options": []}, "name": "test_get_conn_extra_parameters_no_cast", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "call_count"], ["args", "kwargs", "mock_connect", "call_args"]], "self": [["extra_dict", "self", "connection", "extra_dejson"], ["self", "connection", "extra", "json", "dumps", "extra_dict"], ["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["mock.MagicMock", 0.10794572439539035]], "self": []}, "q_name": "TestVerticaHookConn.test_get_conn_extra_parameters_no_cast", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "bck_server_node": "", "bool_options": "", "conn_timeout": "", "extra_dict": "", "kwargs": "", "log_lvl": "", "std_options": ""}, "variables_p": {"args": [["list", 0.09023848639491402], ["Dict[str, str]", 0.08433117130769581], ["Type[Dict[str, Any]]", 0.07514333884225831]], "bck_server_node": [["dict", 0.4693953147286837], ["str", 0.09656691119041923]], "bool_options": [["str", 0.364099798336042], ["int", 0.2083592780315121], ["Tuple[str]", 0.1896147806479796], ["Tuple[Literal, Literal]", 0.14311875266047644], ["dict", 0.0948073903239898]], "conn_timeout": [["int", 0.7217307834633004], ["Dict[str, bool]", 0.09468733364816025], ["Type[bytes]", 0.09420775290293848]], "extra_dict": [["Dict[str, Literal]", 0.18208518925178743], ["dict", 0.10950844326132647], ["Dict[int, bool]", 0.10537642668355772], ["Dict[Any, Dict[str, Any]]", 0.1053268037098032], ["Dict[int, List[Any]]", 0.0958971147833824], ["DefaultDict[Any, int]", 0.09489591499774205], ["OrderedDict[Any, Dict[str, Any]]", 0.09449647647467273]], "kwargs": [["mock._Call", 0.11339300939265219], ["tests.mock.zwave.MockNode", 0.09462393669379163], ["Dict[str, Literal]", 0.09373766103173348]], "log_lvl": [["logging.Logger", 0.2908456030654643], ["Dict[str, Union[Any, Any, Any]]", 0.23739374283857528], ["dict", 0.1867912953120734], ["Dict[str, Union[Any, Any, Any, Any]]", 0.18519750046905695], ["str", 0.09977185831483001]], "std_options": [["List[str]", 0.3], ["List[Tuple[str, str]]", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["list", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["Dict[int, str]", 0.09999999999999999]]}}, {"docstring": {"func": "Test if parameters that can be passed either as string or int/bool", "long_descr": "like log_level are correctly converted when passed as string\n(while test_get_conn_extra_parameters_no_cast tests them passed as int/bool)", "ret": null}, "fn_lc": [[98, 4], [124, 41]], "fn_var_ln": {"args": [[118, 8], [118, 12]], "bool_options": [[105, 8], [105, 20]], "extra_dict": [[104, 8], [104, 18]], "kwargs": [[118, 14], [118, 20]]}, "fn_var_occur": {"args": [["args", "kwargs", "mock_connect", "call_args"]], "bool_options": [], "extra_dict": [["extra_dict", "self", "connection", "extra_dejson"], ["extra_dict", "update", "bo"], ["extra_dict", "update"], ["extra_dict", "update"], ["self", "connection", "extra", "json", "dumps", "extra_dict"]], "kwargs": [["args", "kwargs", "mock_connect", "call_args"], ["kwargs", "bo", "True"], ["kwargs", "False"], ["kwargs", "logging", "ERROR"], ["kwargs", "None"]]}, "name": "test_get_conn_extra_parameters_cast", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "call_count"], ["args", "kwargs", "mock_connect", "call_args"]], "self": [["extra_dict", "self", "connection", "extra_dejson"], ["self", "connection", "extra", "json", "dumps", "extra_dict"], ["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["mock.MagicMock", 0.11647038222516078]], "self": []}, "q_name": "TestVerticaHookConn.test_get_conn_extra_parameters_cast", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "bool_options": "", "extra_dict": "", "kwargs": ""}, "variables_p": {"args": [["list", 0.09023848639491402], ["Dict[str, str]", 0.08433117130769581], ["Type[Dict[str, Any]]", 0.07514333884225831]], "bool_options": [["str", 0.364099798336042], ["int", 0.2083592780315121], ["Tuple[str]", 0.1896147806479796], ["Tuple[Literal, Literal]", 0.14311875266047644], ["dict", 0.0948073903239898]], "extra_dict": [["dict", 0.6065030894536821], ["Dict[str, str]", 0.1847361940993742], ["Dict[str, Any]", 0.08454327997244317]], "kwargs": [["str", 0.12582133452020514], ["mock._Call", 0.11361794197335408], ["RuntimeError", 0.08372835907631862], ["int", 0.08340093476726983]]}}], "name": "TestVerticaHookConn", "q_name": "TestVerticaHookConn", "variables": {}, "variables_p": {}}, {"cls_lc": [[134, 8], [138, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[137, 12], [138, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "mock", "MagicMock", "rowcount"], ["self", "conn", "mock", "MagicMock"], ["self", "conn", "cursor", "return_value", "self", "cur"], ["conn", "self", "conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVerticaHook.setup_method.<locals>.UnitTestVerticaHook.get_conn", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}], "name": "UnitTestVerticaHook", "q_name": "TestVerticaHook.setup_method.<locals>.UnitTestVerticaHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[127, 0], [182, 60]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [140, 44]], "fn_var_ln": {"conn": [[132, 8], [132, 12]], "conn_name_attr": [[135, 12], [135, 26]], "cur": [[129, 8], [129, 16]], "db_hook": [[140, 8], [140, 20]]}, "fn_var_occur": {"conn": [], "conn_name_attr": [], "cur": [], "db_hook": [["self", "db_hook", "UnitTestVerticaHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "UnitTestVerticaHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVerticaHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn_name_attr": "", "cur": "", "db_hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "cur": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["int", 0.5250353812261196], ["Optional[Callable[..., Any]]", 0.09447207897187364], ["Dict[str, List[float]]", 0.08997898109868518], ["str", 0.08702347876209815]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [149, 71]], "fn_var_ln": {"commit_every": [[147, 8], [147, 20]], "rows": [[145, 8], [145, 12]], "table": [[144, 8], [144, 13]], "target_fields": [[146, 8], [146, 21]]}, "fn_var_occur": {"commit_every": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every"]], "rows": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every"], ["mock_insert_rows", "assert_called_once_with", "table", "rows", "None"]], "table": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every"], ["mock_insert_rows", "assert_called_once_with", "table", "rows", "None"]], "target_fields": [["target_fields", "None"], ["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every"]]}, "name": "test_insert_rows", "params": {"mock_insert_rows": "", "self": ""}, "params_descr": {"mock_insert_rows": "", "self": ""}, "params_occur": {"mock_insert_rows": [["mock_insert_rows", "assert_called_once_with", "table", "rows", "None"]], "self": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every"]]}, "params_p": {"args": [], "kwargs": [], "mock_insert_rows": [["bool", 0.09348295658523348], ["core_lib.core.models.Venue", 0.07661191333606694]], "self": []}, "q_name": "TestVerticaHook.test_insert_rows", "ret_exprs": [], "ret_type": "", "variables": {"commit_every": "", "rows": "", "table": "", "target_fields": ""}, "variables_p": {"commit_every": [["list", 0.3789697588727493], ["int", 0.213516070978301], ["Type[List[Any]]", 0.11123077137574296], ["float", 0.10300082336052879], ["str", 0.09503574562876857]], "rows": [["dict", 0.2050976895757479], ["list", 0.18930345967433107], ["Dict[str, Type[Any]]", 0.10529704219196502], ["int", 0.09175318912557062], ["float", 0.09077868485827904]], "table": [["Dict[str, str]", 0.16398485412575886], ["legistar.models.Event", 0.10361379841021967], ["list", 0.09062297490605423], ["Dict[str, Any]", 0.0904713202787546]], "target_fields": [["list", 0.350340450488514], ["int", 0.25879399085969673], ["str", 0.1759796443130618], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10955585327315195], ["set", 0.1053300610655757]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[151, 4], [159, 59]], "fn_var_ln": {"result_sets": [[153, 8], [153, 19]], "statement": [[152, 8], [152, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_first", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_first_record", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"], ["self", "conn", "close", "assert_called_once_with"], ["self", "cur", "close", "assert_called_once_with"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVerticaHook.test_get_first_record", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.2772479655868859]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[161, 4], [169, 59]], "fn_var_ln": {"result_sets": [[163, 8], [163, 19]], "statement": [[162, 8], [162, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_records", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_records", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"], ["self", "conn", "close", "assert_called_once_with"], ["self", "cur", "close", "assert_called_once_with"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVerticaHook.test_get_records", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.2772479655868859]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[171, 4], [182, 60]], "fn_var_ln": {"column": [[173, 8], [173, 14]], "df": [[177, 8], [177, 10]], "result_sets": [[174, 8], [174, 19]], "statement": [[172, 8], [172, 17]]}, "fn_var_occur": {"column": [["self", "cur", "description", "column"], ["column", "df", "columns"]], "df": [["df", "self", "db_hook", "get_pandas_df", "statement"], ["column", "df", "columns"], ["result_sets", "df", "values", "tolist"], ["result_sets", "df", "values", "tolist"]], "result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "df", "values", "tolist"], ["result_sets", "df", "values", "tolist"]], "statement": [["df", "self", "db_hook", "get_pandas_df", "statement"]]}, "name": "test_get_pandas_df", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "description", "column"], ["self", "cur", "fetchall", "return_value", "result_sets"], ["df", "self", "db_hook", "get_pandas_df", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVerticaHook.test_get_pandas_df", "ret_exprs": [], "ret_type": "", "variables": {"column": "", "df": "", "result_sets": "", "statement": ""}, "variables_p": {"column": [["str", 0.2514383088298724], ["int", 0.1922766414040206], ["dict", 0.12681732062703294], ["Dict[str, int]", 0.12477955940011504], ["List[str]", 0.11673232158052399], ["Optional[str]", 0.10414307854847757], ["bool", 0.08381276960995745]], "df": [["int", 0.19689727283848246], ["Set[str]", 0.11313426110300921], ["str", 0.10481779496011173], ["list", 0.09151588730990809], ["tuple", 0.08946390544928084]], "result_sets": [["float", 0.3965372394866048], ["int", 0.2171873572768021], ["List[int]", 0.10468087134504546], ["List[float]", 0.09418728208456263], ["Dict[str, str]", 0.09389481344978012], ["List[str]", 0.09351243635720498]], "statement": [["str", 0.20876359651985738], ["int", 0.19023618816498922], ["Final", 0.12362211718403086], ["Tuple[str, str, str, str, str, str, str, str, str, str]", 0.09828734765629914], ["float", 0.09675913396752218], ["dict", 0.09577631574423152], ["List[str]", 0.09077898501883803]]}}], "name": "TestVerticaHook", "q_name": "TestVerticaHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "unittest", "mock", "patch", "airflow", "models", "Connection", "airflow", "providers", "vertica", "hooks", "vertica", "VerticaHook", "logging"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 44}, "session_id": "hlIj4A676tMSa_u35cl8S5sVPiNervc9B4rE5ihB1W8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}