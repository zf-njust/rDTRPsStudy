{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [119, 103]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [37, 40]], "fn_var_ln": {"client": [[33, 8], [33, 25]], "conn": [[35, 8], [35, 12]], "winrm_hook": [[32, 8], [32, 18]]}, "fn_var_occur": {"client": [["winrm_hook", "client", "mock_protocol", "return_value", "open_shell", "return_value"], ["conn", "winrm_hook", "client"]], "conn": [["conn", "winrm_hook", "get_conn"], ["conn", "winrm_hook", "client"]], "winrm_hook": [["winrm_hook", "WinRMHook"], ["winrm_hook", "client", "mock_protocol", "return_value", "open_shell", "return_value"], ["conn", "winrm_hook", "get_conn"], ["conn", "winrm_hook", "client"]]}, "name": "test_get_conn_exists", "params": {"mock_protocol": "", "self": ""}, "params_descr": {"mock_protocol": "", "self": ""}, "params_occur": {"mock_protocol": [["winrm_hook", "client", "mock_protocol", "return_value", "open_shell", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_protocol": [], "self": []}, "q_name": "TestWinRMHook.test_get_conn_exists", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "conn": "", "winrm_hook": ""}, "variables_p": {"client": [], "conn": [["Tuple[Literal, Literal, Literal]", 0.166666666664164], ["Optional[gardnr.models.Grow]", 0.166666666664164], ["int", 6.787451833966716e-12], ["Dict[str, int]", 4.834950806013953e-12], ["str", 3.393725916983358e-12]], "winrm_hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [41, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_missing_remote_host", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestWinRMHook.test_get_conn_missing_remote_host", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [48, 52]], "fn_var_ln": {"side_effect": [[45, 8], [45, 33]]}, "fn_var_occur": {"side_effect": [["mock_protocol", "side_effect", "Exception"]]}, "name": "test_get_conn_error", "params": {"mock_protocol": "", "self": ""}, "params_descr": {"mock_protocol": "", "self": ""}, "params_occur": {"mock_protocol": [["mock_protocol", "side_effect", "Exception"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_protocol": [["mock.Mock", 0.06804635717914581], ["mock.MagicMock", 0.05713143299533151]], "self": []}, "q_name": "TestWinRMHook.test_get_conn_error", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [102, 9]], "fn_var_ln": {"connection": [[78, 8], [78, 18]], "winrm_hook": [[79, 8], [79, 18]]}, "fn_var_occur": {"connection": [["connection", "mock_get_connection", "return_value"], ["mock_protocol", "assert_called_once_with", "endpoint", "str", "connection", "extra_dejson", "transport", "str", "connection", "extra_dejson", "username", "connection", "login", "password", "connection", "password", "service", "str", "connection", "extra_dejson", "keytab", "str", "connection", "extra_dejson", "ca_trust_path", "str", "connection", "extra_dejson", "cert_pem", "str", "connection", "extra_dejson", "cert_key_pem", "str", "connection", "extra_dejson", "server_cert_validation", "str", "connection", "extra_dejson", "kerberos_delegation", "str", "connection", "extra_dejson", "lower", "read_timeout_sec", "int", "connection", "extra_dejson", "operation_timeout_sec", "int", "connection", "extra_dejson", "kerberos_hostname_override", "str", "connection", "extra_dejson", "message_encryption", "str", "connection", "extra_dejson", "credssp_disable_tlsv1_2", "str", "connection", "extra_dejson", "lower", "send_cbt", "str", "connection", "extra_dejson", "lower"]], "winrm_hook": [["winrm_hook", "WinRMHook", "ssh_conn_id"], ["winrm_hook", "get_conn"], ["mock_get_connection", "assert_called_once_with", "winrm_hook", "ssh_conn_id"]]}, "name": "test_get_conn_from_connection", "params": {"mock_get_connection": "", "mock_protocol": "", "self": ""}, "params_descr": {"mock_get_connection": "", "mock_protocol": "", "self": ""}, "params_occur": {"mock_get_connection": [["connection", "mock_get_connection", "return_value"], ["mock_get_connection", "assert_called_once_with", "winrm_hook", "ssh_conn_id"]], "mock_protocol": [["mock_protocol", "assert_called_once_with", "endpoint", "str", "connection", "extra_dejson", "transport", "str", "connection", "extra_dejson", "username", "connection", "login", "password", "connection", "password", "service", "str", "connection", "extra_dejson", "keytab", "str", "connection", "extra_dejson", "ca_trust_path", "str", "connection", "extra_dejson", "cert_pem", "str", "connection", "extra_dejson", "cert_key_pem", "str", "connection", "extra_dejson", "server_cert_validation", "str", "connection", "extra_dejson", "kerberos_delegation", "str", "connection", "extra_dejson", "lower", "read_timeout_sec", "int", "connection", "extra_dejson", "operation_timeout_sec", "int", "connection", "extra_dejson", "kerberos_hostname_override", "str", "connection", "extra_dejson", "message_encryption", "str", "connection", "extra_dejson", "credssp_disable_tlsv1_2", "str", "connection", "extra_dejson", "lower", "send_cbt", "str", "connection", "extra_dejson", "lower"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.Mock", 0.11372740234993961]], "mock_protocol": [], "self": []}, "q_name": "TestWinRMHook.test_get_conn_from_connection", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "winrm_hook": ""}, "variables_p": {"connection": [["str", 0.6581994757169971], ["Dict[str, Union[Any, Any, Any]]", 0.1212109597111122], ["Union[Literal, str]", 0.10254926893328177], ["Dict[str, Union[int, str]]", 0.061433613967491515], ["Dict[str, Union[Any, Any]]", 0.056606681671117515]], "winrm_hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [111, 63]], "fn_var_ln": {"winrm_hook": [[107, 8], [107, 18]]}, "fn_var_occur": {"winrm_hook": [["winrm_hook", "WinRMHook", "remote_host", "password"], ["winrm_hook", "get_conn"], ["mock_getuser", "return_value", "winrm_hook", "username"]]}, "name": "test_get_conn_no_username", "params": {"mock_getuser": "", "mock_protocol": "", "self": ""}, "params_descr": {"mock_getuser": "", "mock_protocol": "", "self": ""}, "params_occur": {"mock_getuser": [["mock_getuser", "return_value", "winrm_hook", "username"]], "mock_protocol": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_getuser": [["mock.MagicMock", 0.17243951551942505]], "mock_protocol": [["mock.MagicMock", 0.1246140600957531]], "self": []}, "q_name": "TestWinRMHook.test_get_conn_no_username", "ret_exprs": [], "ret_type": "", "variables": {"winrm_hook": ""}, "variables_p": {"winrm_hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [119, 103]], "fn_var_ln": {"winrm_hook": [[115, 8], [115, 18]]}, "fn_var_occur": {"winrm_hook": [["winrm_hook", "WinRMHook", "remote_host", "password"], ["winrm_hook", "get_conn"], ["winrm_hook", "remote_host", "winrm_hook", "remote_port", "winrm_hook", "endpoint"]]}, "name": "test_get_conn_no_endpoint", "params": {"mock_protocol": "", "self": ""}, "params_descr": {"mock_protocol": "", "self": ""}, "params_occur": {"mock_protocol": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_protocol": [["mock.Mock", 0.6464396911943224], ["Generator[None, Any, None]", 0.12993686336493476]], "self": []}, "q_name": "TestWinRMHook.test_get_conn_no_endpoint", "ret_exprs": [], "ret_type": "", "variables": {"winrm_hook": ""}, "variables_p": {"winrm_hook": [["int", 0.20993505071546256]]}}], "name": "TestWinRMHook", "q_name": "TestWinRMHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "patch", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "models", "Connection", "airflow", "providers", "microsoft", "winrm", "hooks", "winrm", "WinRMHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 21}, "session_id": "9VefuMjk29uKNGTPusL4ybfGVzJnCLXG6Iw0jLqNvyI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}