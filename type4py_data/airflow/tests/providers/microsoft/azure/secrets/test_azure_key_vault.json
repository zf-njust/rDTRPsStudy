{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [152, 43]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [34, 34]], "fn_var_ln": {"conn": [[33, 8], [33, 12]], "return_value": [[32, 8], [32, 35]]}, "fn_var_occur": {"conn": [["conn", "AzureKeyVaultBackend", "get_connection"], ["conn", "host"]], "return_value": [["mock_get_value", "return_value"]]}, "name": "test_get_connection", "params": {"mock_get_value": "", "self": ""}, "params_descr": {"mock_get_value": "", "self": ""}, "params_occur": {"mock_get_value": [["mock_get_value", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_value": [["mock.MagicMock", 0.12057815252413569]], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_get_connection", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "return_value": ""}, "variables_p": {"conn": [["float", 0.4895269696544058], ["dict", 0.12085155137794085], ["Dict[str, float]", 0.11216307594154003], ["int", 0.09269929687648291]], "return_value": [["str", 0.18912662088057908], ["List[Dict[str, Any]]", 0.18829514115232585], ["List[str]", 0.1503270106332012], ["Dict[str, Dict[str, Any]]", 0.12565892175924767], ["Dict[str, int]", 0.09822915448846747], ["Dict[str, Union[Any, Any, Any]]", 0.08630167051880366], ["List[Dict[str, str]]", 0.07972386934076722]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[38, 4], [54, 79]], "fn_var_ln": {"backend": [[48, 8], [48, 15]], "mock_cred": [[39, 8], [39, 17]], "mock_sec_client": [[40, 8], [40, 23]], "return_value": [[42, 8], [42, 39]], "returned_uri": [[50, 12], [50, 24]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend", "vault_url"], ["returned_uri", "backend", "get_conn_uri", "conn_id"]], "mock_cred": [["mock_cred", "mock", "Mock"], ["mock_azure_cred", "return_value", "mock_cred"], ["mock_secret_client", "assert_called_once_with", "credential", "mock_cred", "vault_url"]], "mock_sec_client": [["mock_sec_client", "mock", "Mock"], ["mock_secret_client", "return_value", "mock_sec_client"], ["mock_sec_client", "get_secret", "return_value", "mock", "Mock", "value"]], "return_value": [["mock_azure_cred", "return_value", "mock_cred"], ["mock_secret_client", "return_value", "mock_sec_client"], ["mock_sec_client", "get_secret", "return_value", "mock", "Mock", "value"]], "returned_uri": [["returned_uri", "backend", "get_conn_uri", "conn_id"]]}, "name": "test_get_conn_uri", "params": {"mock_azure_cred": "", "mock_secret_client": "", "self": ""}, "params_descr": {"mock_azure_cred": "", "mock_secret_client": "", "self": ""}, "params_occur": {"mock_azure_cred": [["mock_azure_cred", "return_value", "mock_cred"]], "mock_secret_client": [["mock_secret_client", "return_value", "mock_sec_client"], ["mock_secret_client", "assert_called_once_with", "credential", "mock_cred", "vault_url"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_azure_cred": [], "mock_secret_client": [["mock.Mock", 0.10439022069186123]], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_get_conn_uri", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "mock_cred": "", "mock_sec_client": "", "return_value": "", "returned_uri": ""}, "variables_p": {"backend": [["Pattern[str]", 0.25368023310257864], ["str", 0.18592684926277722], ["int", 0.1776988491611613], ["float", 0.10819201569319715], ["Mapping", 0.10452248184201061]], "mock_cred": [], "mock_sec_client": [["Dict[str, Union[int, str]]", 0.09513781414234306], ["mock.Mock", 0.09130997924515259]], "return_value": [["str", 0.18923597023639593], ["Optional[bytes]", 0.1424560164671839], ["Dict[str, List[Any]]", 0.08776940155142329]], "returned_uri": [["str", 0.6062224647442087], ["List[str]", 0.10017528351853615], ["Dict[str, str]", 0.09178615459263885]]}}, {"docstring": {"func": "Test that if the key with connection ID is not present,", "long_descr": "AzureKeyVaultBackend.get_connection should return None", "ret": null}, "fn_lc": [[57, 4], [68, 62]], "fn_var_ln": {"backend": [[64, 8], [64, 15]], "conn_id": [[62, 8], [62, 15]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend", "vault_url"], ["backend", "get_conn_uri", "conn_id", "conn_id", "None"], ["backend", "get_connection", "conn_id", "conn_id", "None"]], "conn_id": [["backend", "get_conn_uri", "conn_id", "conn_id", "None"], ["backend", "get_connection", "conn_id", "conn_id", "None"]]}, "name": "test_get_conn_uri_non_existent_key", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_secret", "side_effect", "ResourceNotFoundError"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_get_conn_uri_non_existent_key", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "conn_id": ""}, "variables_p": {"backend": [["str", 0.39741370496371187], ["Dict[str, List[str]]", 0.0951265380122119]], "conn_id": [["int", 0.23966864322146733], ["str", 0.18068809893005], ["Optional[str]", 0.10805632915314392], ["Pattern[Any]", 0.07617926017048278]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [76, 38]], "fn_var_ln": {"backend": [[73, 8], [73, 15]], "returned_uri": [[74, 8], [74, 20]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend"], ["returned_uri", "backend", "get_variable"]], "returned_uri": [["returned_uri", "backend", "get_variable"]]}, "name": "test_get_variable", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_secret", "return_value", "mock", "Mock", "value"], ["mock_client", "get_secret", "assert_called_with", "name"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_get_variable", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "returned_uri": ""}, "variables_p": {"backend": [["str", 0.2811548478880714], ["Pattern[str]", 0.16376881733737278], ["list", 0.14332500036057505], ["Dict[str, Callable]", 0.08516118658927335]], "returned_uri": [["str", 0.4045616323059942], ["Optional[str]", 0.09523576837963371], ["List[str]", 0.09485866438459362]]}}, {"docstring": {"func": "Test that if Variable key is not present,", "long_descr": "AzureKeyVaultBackend.get_variables should return None", "ret": null}, "fn_lc": [[79, 4], [86, 57]], "fn_var_ln": {"backend": [[85, 8], [85, 15]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend"], ["backend", "get_variable", "None"]]}, "name": "test_get_variable_non_existent_key", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_secret", "side_effect", "ResourceNotFoundError"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_get_variable_non_existent_key", "ret_exprs": [], "ret_type": "", "variables": {"backend": ""}, "variables_p": {"backend": [["str", 0.5671847297355711], ["Tuple[Any, Any]", 0.09652851911016368], ["List[str]", 0.0802726637624492]]}}, {"docstring": {"func": "Test that if a non-existent secret returns None", "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [97, 9]], "fn_var_ln": {"backend": [[94, 8], [94, 15]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend"], ["backend", "_get_secret", "path_prefix", "backend", "connections_prefix", "secret_id", "None"]]}, "name": "test_get_secret_value_not_found", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_secret", "side_effect", "ResourceNotFoundError"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_get_secret_value_not_found", "ret_exprs": [], "ret_type": "", "variables": {"backend": ""}, "variables_p": {"backend": [["str", 0.32092566045603005], ["int", 0.2785709606912822], ["float", 0.10222514179722635], ["Dict[str, List[Any]]", 0.09877304195678692], ["core.arxiv.submission.process.process_source.SourceProcess", 0.09769643249136425]]}}, {"docstring": {"func": "Test that get_secret returns the secret value", "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [108, 43]], "fn_var_ln": {"backend": [[105, 8], [105, 15]], "secret_val": [[106, 8], [106, 18]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend"], ["secret_val", "backend", "_get_secret"]], "secret_val": [["secret_val", "backend", "_get_secret"]]}, "name": "test_get_secret_value", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "get_secret", "return_value", "mock", "Mock", "value"], ["mock_client", "get_secret", "assert_called_with", "name"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_get_secret_value", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "secret_val": ""}, "variables_p": {"backend": [["Pattern[str]", 0.39152098203360697], ["int", 0.20089674121173753], ["Dict[str, str]", 0.16947243996592998], ["Tuple[str, int]", 0.07400062056145494]], "secret_val": [["str", 0.2828441873172191], ["int", 0.10659078496273885], ["Tuple[str]", 0.0980676445562382]]}}, {"docstring": {"func": "Test that if Connections prefix is None,", "long_descr": "AzureKeyVaultBackend.get_connection should return None\nAzureKeyVaultBackend._get_secret should not be called", "ret": null}, "fn_lc": [[111, 4], [126, 47]], "fn_var_ln": {"backend": [[119, 8], [119, 15]], "kwargs": [[117, 8], [117, 14]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend", "kwargs"], ["backend", "get_connection", "None"], ["backend", "get_conn_uri", "None"]], "kwargs": [["kwargs", "None"], ["backend", "AzureKeyVaultBackend", "kwargs"]]}, "name": "test_connection_prefix_none_value", "params": {"mock_get_secret": "", "self": ""}, "params_descr": {"mock_get_secret": "", "self": ""}, "params_occur": {"mock_get_secret": [["mock_get_secret", "assert_not_called"], ["mock_get_secret", "reset_mock"], ["mock_get_secret", "assert_not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_secret": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_connection_prefix_none_value", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "kwargs": ""}, "variables_p": {"backend": [["Set[str]", 0.09694031736537259], ["Optional[str]", 0.09183666276567265]], "kwargs": [["Dict[str, Union[int, str]]", 0.1095589294552195], ["Dict[str, Optional[str]]", 0.0936396467101905], ["Dict[str, Dict[str, bool]]", 0.08674020694556442]]}}, {"docstring": {"func": "Test that if Variables prefix is None,", "long_descr": "AzureKeyVaultBackend.get_variables should return None\nAzureKeyVaultBackend._get_secret should not be called", "ret": null}, "fn_lc": [[129, 4], [139, 43]], "fn_var_ln": {"backend": [[137, 8], [137, 15]], "kwargs": [[135, 8], [135, 14]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend", "kwargs"], ["backend", "get_variable", "None"]], "kwargs": [["kwargs", "None"], ["backend", "AzureKeyVaultBackend", "kwargs"]]}, "name": "test_variable_prefix_none_value", "params": {"mock_get_secret": "", "self": ""}, "params_descr": {"mock_get_secret": "", "self": ""}, "params_occur": {"mock_get_secret": [["mock_get_secret", "assert_not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_secret": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_variable_prefix_none_value", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "kwargs": ""}, "variables_p": {"backend": [["str", 0.6816191297051215], ["Dict[str, str]", 0.08181821501164002]], "kwargs": [["Dict[str, Union[int, str]]", 0.1095589294552195], ["Dict[str, Optional[str]]", 0.0936396467101905], ["Dict[str, Dict[str, bool]]", 0.08674020694556442]]}}, {"docstring": {"func": "Test that if Config prefix is None,", "long_descr": "AzureKeyVaultBackend.get_config should return None\nAzureKeyVaultBackend._get_secret should not be called", "ret": null}, "fn_lc": [[142, 4], [152, 43]], "fn_var_ln": {"backend": [[150, 8], [150, 15]], "kwargs": [[148, 8], [148, 14]]}, "fn_var_occur": {"backend": [["backend", "AzureKeyVaultBackend", "kwargs"], ["backend", "get_config", "None"]], "kwargs": [["kwargs", "None"], ["backend", "AzureKeyVaultBackend", "kwargs"]]}, "name": "test_config_prefix_none_value", "params": {"mock_get_secret": "", "self": ""}, "params_descr": {"mock_get_secret": "", "self": ""}, "params_occur": {"mock_get_secret": [["mock_get_secret", "assert_not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_secret": [], "self": []}, "q_name": "TestAzureKeyVaultBackend.test_config_prefix_none_value", "ret_exprs": [], "ret_type": "", "variables": {"backend": "", "kwargs": ""}, "variables_p": {"backend": [["Pattern[str]", 0.7413737356195281], ["tuple", 0.09881913080543672], ["list", 0.08315394193104321], ["Pattern[bytes]", 0.07665319164399173]], "kwargs": [["Dict[str, Union[int, str]]", 0.1095589294552195], ["Dict[str, Optional[str]]", 0.0936396467101905], ["Dict[str, Dict[str, bool]]", 0.08674020694556442]]}}], "name": "TestAzureKeyVaultBackend", "q_name": "TestAzureKeyVaultBackend", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "azure", "core", "exceptions", "ResourceNotFoundError", "airflow", "exceptions", "AirflowProviderDeprecationWarning", "airflow", "providers", "microsoft", "azure", "secrets", "key_vault", "AzureKeyVaultBackend"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 42}, "session_id": "nE0z5J_g2s7RAi9WLzPHT8RhMBwwu1skpACnzrdfYek", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}