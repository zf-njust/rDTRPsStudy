{"error": null, "response": {"classes": [{"cls_lc": [[36, 0], [123, 77]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 4], [48, 9]], "fn_var_ln": {"conn_id": [[39, 8], [39, 20]], "connection_string": [[40, 8], [40, 30]], "mock_conn": [[44, 8], [44, 22]], "queue_name": [[38, 8], [38, 23]]}, "fn_var_occur": {"conn_id": [["self", "conn_id", "builtins", "str"], ["self", "mock_conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]], "connection_string": [["self", "connection_string"], ["self", "mock_conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]], "mock_conn": [["self", "mock_conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]], "queue_name": [["self", "queue_name", "builtins", "str"]]}, "name": "setup_class", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "queue_name", "builtins", "str"], ["self", "conn_id", "builtins", "str"], ["self", "connection_string"], ["self", "mock_conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAdminClientHook.setup_class", "ret_exprs": [], "ret_type": "None", "variables": {"conn_id": "builtins.str", "connection_string": "", "mock_conn": "", "queue_name": "builtins.str"}, "variables_p": {"conn_id": [["str", 0.9999999999999999]], "connection_string": [["str", 0.36787716070287846], ["int", 0.11879414812606316], ["Dict[int, str]", 0.11844045601307114], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09519178676370092], ["Type[Dict[str, Any]]", 0.09192438347439155]], "mock_conn": [["str", 0.458580473623348], ["Dict[str, Union[float, str]]", 0.1597628474178823], ["Counter[str]", 0.12578447620954877], ["int", 0.08656977557318465], ["ChainMap", 0.08156019484808882]], "queue_name": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [54, 74]], "fn_var_ln": {"hook": [[53, 8], [53, 12]], "return_value": [[52, 8], [52, 36]]}, "fn_var_occur": {"hook": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["isinstance", "hook", "get_conn", "ServiceBusAdministrationClient"]], "return_value": [["mock_connection", "return_value", "self", "mock_conn"]]}, "name": "test_get_conn", "params": {"mock_connection": "", "self": ""}, "params_descr": {"mock_connection": "", "self": ""}, "params_occur": {"mock_connection": [["mock_connection", "return_value", "self", "mock_conn"]], "self": [["mock_connection", "return_value", "self", "mock_conn"], ["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_connection": [["mock.MagicMock", 0.1984919104084349]], "self": []}, "q_name": "TestAdminClientHook.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": ""}, "variables_p": {"hook": [["int", 0.1485235009847117], ["Optional[int]", 0.09568276267137693], ["models.facilityData", 0.09367899699925876]], "return_value": [["str", 0.45744418645119445], ["int", 0.12700846569177784], ["Dict[str, str]", 0.08880159428613851], ["list", 0.0762751945775957]]}}, {"docstring": {"func": "Test `create_queue` hook function with mocking connection, queue properties value and", "long_descr": "the azure service bus `create_queue` function", "ret": null}, "fn_lc": [[58, 4], [69, 48]], "fn_var_ln": {"hook": [[67, 8], [67, 12]], "name": [[63, 8], [63, 34]], "response": [[68, 8], [68, 16]]}, "fn_var_occur": {"hook": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["response", "hook", "create_queue", "self", "queue_name"]], "name": [["mock_queue_properties", "name", "self", "queue_name"]], "response": [["response", "hook", "create_queue", "self", "queue_name"], ["response", "mock_queue_properties"]]}, "name": "test_create_queue", "params": {"mock_queue_properties": "", "mock_sb_admin_client": "", "self": ""}, "params_descr": {"mock_queue_properties": "", "mock_sb_admin_client": "", "self": ""}, "params_occur": {"mock_queue_properties": [["mock_queue_properties", "name", "self", "queue_name"], ["mock_sb_admin_client", "return_value", "__enter__", "return_value", "create_queue", "return_value", "mock_queue_properties"], ["response", "mock_queue_properties"]], "mock_sb_admin_client": [["mock_sb_admin_client", "return_value", "__enter__", "return_value", "create_queue", "return_value", "mock_queue_properties"]], "self": [["mock_queue_properties", "name", "self", "queue_name"], ["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["response", "hook", "create_queue", "self", "queue_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_queue_properties": [], "mock_sb_admin_client": [], "self": []}, "q_name": "TestAdminClientHook.test_create_queue", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "name": "", "response": ""}, "variables_p": {"hook": [], "name": [["str", 0.5986885384568081], ["Optional[str]", 0.19718595787104048], ["List[str]", 0.09811803825072751]], "response": [["rotkehlchen.tests.utils.mock.MockResponse", 0.29489757585838616], ["str", 0.2740927181235911]]}}, {"docstring": {"func": "Test `create_queue` functionality to raise ValueError by passing queue name as None", "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [76, 35]], "fn_var_ln": {"hook": [[74, 8], [74, 12]]}, "fn_var_occur": {"hook": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "create_queue", "None"]]}, "name": "test_create_queue_exception", "params": {"mock_sb_admin_client": "", "self": ""}, "params_descr": {"mock_sb_admin_client": "", "self": ""}, "params_occur": {"mock_sb_admin_client": [], "self": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_admin_client": [], "self": []}, "q_name": "TestAdminClientHook.test_create_queue_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["models.facilityData", 0.11743217282819078], ["hub2labhook.github.models.evenGithubEvent", 0.0883219305729009]]}}, {"docstring": {"func": "Test Delete queue functionality by passing queue name, assert the function with values,", "long_descr": "mock the azure service bus function  `delete_queue`", "ret": null}, "fn_lc": [[79, 4], [87, 61]], "fn_var_ln": {"expected_calls": [[86, 8], [86, 22]], "hook": [[84, 8], [84, 12]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "__enter__", "delete_queue", "self", "queue_name"], ["mock_sb_admin_client", "assert_has_calls", "expected_calls"]], "hook": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "delete_queue", "self", "queue_name"]]}, "name": "test_delete_queue", "params": {"mock_sb_admin_client": "", "self": ""}, "params_descr": {"mock_sb_admin_client": "", "self": ""}, "params_occur": {"mock_sb_admin_client": [["mock_sb_admin_client", "assert_has_calls", "expected_calls"]], "self": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "delete_queue", "self", "queue_name"], ["expected_calls", "mock", "call", "__enter__", "delete_queue", "self", "queue_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_admin_client": [], "self": []}, "q_name": "TestAdminClientHook.test_delete_queue", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": ""}, "variables_p": {"expected_calls": [["List[Tuple[str, str]]", 0.11567991858292323], ["Dict[str, str]", 0.0893502268984243], ["int", 0.08913367269772607]], "hook": [["byceps.services.email.transfer.models.Message", 0.09700783078873064]]}}, {"docstring": {"func": "Test `delete_queue` functionality to raise ValueError, by passing queue name as None", "long_descr": null, "ret": null}, "fn_lc": [[90, 4], [94, 35]], "fn_var_ln": {"hook": [[92, 8], [92, 12]]}, "fn_var_occur": {"hook": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "delete_queue", "None"]]}, "name": "test_delete_queue_exception", "params": {"mock_sb_admin_client": "", "self": ""}, "params_descr": {"mock_sb_admin_client": "", "self": ""}, "params_occur": {"mock_sb_admin_client": [], "self": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_admin_client": [], "self": []}, "q_name": "TestAdminClientHook.test_delete_queue_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.16219524230008744], ["Optional[int]", 0.10554744555319907]]}}, {"docstring": {"func": "Test Delete subscription functionality by passing subscription name and topic name,", "long_descr": "assert the function with values, mock the azure service bus function  `delete_subscription`", "ret": null}, "fn_lc": [[97, 4], [107, 61]], "fn_var_ln": {"expected_calls": [[106, 8], [106, 22]], "hook": [[104, 8], [104, 12]], "subscription_name": [[102, 8], [102, 25]], "topic_name": [[103, 8], [103, 18]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "__enter__", "delete_subscription", "topic_name", "subscription_name"], ["mock_sb_admin_client", "assert_has_calls", "expected_calls"]], "hook": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "delete_subscription", "subscription_name", "topic_name"]], "subscription_name": [["hook", "delete_subscription", "subscription_name", "topic_name"], ["expected_calls", "mock", "call", "__enter__", "delete_subscription", "topic_name", "subscription_name"]], "topic_name": [["hook", "delete_subscription", "subscription_name", "topic_name"], ["expected_calls", "mock", "call", "__enter__", "delete_subscription", "topic_name", "subscription_name"]]}, "name": "test_delete_subscription", "params": {"mock_sb_admin_client": "", "self": ""}, "params_descr": {"mock_sb_admin_client": "", "self": ""}, "params_occur": {"mock_sb_admin_client": [["mock_sb_admin_client", "assert_has_calls", "expected_calls"]], "self": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_admin_client": [], "self": []}, "q_name": "TestAdminClientHook.test_delete_subscription", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": "", "subscription_name": "", "topic_name": ""}, "variables_p": {"expected_calls": [["str", 0.4679908164729698], ["Dict[str, str]", 0.09972704290363658], ["List[Dict[str, str]]", 0.08959172312251419], ["List[dict]", 0.08232223339721373]], "hook": [["decksite.data.models.person.Person", 0.11617133923581986], ["iamdb.models.Movie", 0.08854599711449875], ["Optional[List[Any]]", 0.08808753405815603]], "subscription_name": [["str", 0.9191265973935933], ["int", 0.08087340260640666]], "topic_name": [["str", 0.9191265973935933], ["int", 0.08087340260640666]]}}, {"docstring": {"func": "Test `delete_subscription` functionality to raise AirflowException,", "long_descr": "by passing subscription name and topic name as None and pytest raise Airflow Exception", "ret": null}, "fn_lc": [[114, 4], [123, 77]], "fn_var_ln": {"hook": [[121, 8], [121, 12]]}, "fn_var_occur": {"hook": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "delete_subscription", "mock_subscription_name", "mock_topic_name"]]}, "name": "test_delete_subscription_exception", "params": {"mock_sb_admin_client": "", "mock_subscription_name": "", "mock_topic_name": "", "self": ""}, "params_descr": {"mock_sb_admin_client": "", "mock_subscription_name": "", "mock_topic_name": "", "self": ""}, "params_occur": {"mock_sb_admin_client": [], "mock_subscription_name": [["hook", "delete_subscription", "mock_subscription_name", "mock_topic_name"]], "mock_topic_name": [["hook", "delete_subscription", "mock_subscription_name", "mock_topic_name"]], "self": [["hook", "AdminClientHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_admin_client": [["List[int]", 0.2600997294327183], ["str", 0.11368587707205279], ["Dict[str, Any]", 0.08496371499601758], ["bool", 0.08085356349489964]], "mock_subscription_name": [["str", 0.0887210993524822]], "mock_topic_name": [["str", 0.0887210993524822]], "self": []}, "q_name": "TestAdminClientHook.test_delete_subscription_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.1436195746033069], ["list", 0.1039809315104072], ["Optional[List[Any]]", 0.10228696005593448], ["decksite.data.models.person.Person", 0.09683832041743305]]}}], "name": "TestAdminClientHook", "q_name": "TestAdminClientHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[126, 0], [280, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [138, 9]], "fn_var_ln": {"conn": [[134, 8], [134, 17]], "conn_id": [[129, 8], [129, 20]], "connection_string": [[130, 8], [130, 30]], "queue_name": [[128, 8], [128, 23]]}, "fn_var_occur": {"conn": [["self", "conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]], "conn_id": [["self", "conn_id", "builtins", "str"], ["self", "conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]], "connection_string": [["self", "connection_string"], ["self", "conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]], "queue_name": [["self", "queue_name", "builtins", "str"]]}, "name": "setup_class", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "queue_name", "builtins", "str"], ["self", "conn_id", "builtins", "str"], ["self", "connection_string"], ["self", "conn", "Connection", "conn_id", "conn_type", "schema", "self", "connection_string"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMessageHook.setup_class", "ret_exprs": [], "ret_type": "None", "variables": {"conn": "", "conn_id": "builtins.str", "connection_string": "", "queue_name": "builtins.str"}, "variables_p": {"conn": [["int", 0.49141581676163487], ["Type[range]", 0.1739113974001295], ["str", 0.14276658998032765]], "conn_id": [["str", 1.0]], "connection_string": [["int", 0.296437104301854], ["Dict[str, str]", 0.19509048769401136], ["str", 0.1913114308988435], ["Dict[str, int]", 0.12543680378960465], ["float", 0.09758114349449856], ["List[str]", 0.09414302982118808]], "queue_name": [["str", 1.0]]}}, {"docstring": {"func": "Test get_conn() function and check whether the get_conn() function returns value", "long_descr": "is instance of ServiceBusClient", "ret": null}, "fn_lc": [[141, 4], [148, 60]], "fn_var_ln": {"hook": [[147, 8], [147, 12]], "return_value": [[146, 8], [146, 36]]}, "fn_var_occur": {"hook": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"], ["isinstance", "hook", "get_conn", "ServiceBusClient"]], "return_value": [["mock_connection", "return_value", "self", "conn"]]}, "name": "test_get_service_bus_message_conn", "params": {"mock_connection": "", "self": ""}, "params_descr": {"mock_connection": "", "self": ""}, "params_occur": {"mock_connection": [["mock_connection", "return_value", "self", "conn"]], "self": [["mock_connection", "return_value", "self", "conn"], ["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_connection": [["mock.MagicMock", 0.16642635594604116]], "self": []}, "q_name": "TestMessageHook.test_get_service_bus_message_conn", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": ""}, "variables_p": {"hook": [], "return_value": [["str", 0.27065904001159813], ["Optional[bytes]", 0.13974106888704016], ["List[Dict[str, Any]]", 0.08396171725712417], ["list", 0.08385770717090732], ["int", 0.07856157531482848]]}}, {"docstring": {"func": "Test `send_message` hook function with batch flag and message passed as mocked params,", "long_descr": "which can be string or list of string, mock the azure service bus `send_messages` function", "ret": null}, "fn_lc": [[162, 4], [192, 72]], "fn_var_ln": {"expected_calls": [[184, 8], [184, 22]], "hook": [[169, 8], [169, 12]], "message": [[182, 16], [182, 23]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "__enter__", "get_queue_sender", "self", "queue_name", "__enter__", "send_messages", "message", "__exit__"], ["mock_sb_client", "assert_has_calls", "expected_calls", "any_order", "False"]], "hook": [["hook", "MessageHook", "azure_service_bus_conn_id"], ["hook", "send_message", "queue_name", "self", "queue_name", "messages", "mock_message", "batch_message_flag", "mock_batch_flag"]], "message": [["message", "ServiceBusMessageBatch", "mock_message"], ["message", "ServiceBusMessage", "msg", "msg", "mock_message"], ["message", "ServiceBusMessageBatch", "mock_message"], ["message", "ServiceBusMessage", "mock_message"], ["expected_calls", "mock", "call", "__enter__", "get_queue_sender", "self", "queue_name", "__enter__", "send_messages", "message", "__exit__"]]}, "name": "test_send_message", "params": {"mock_batch_flag": "", "mock_batch_message": "", "mock_list_message": "", "mock_message": "", "mock_sb_client": "", "self": ""}, "params_descr": {"mock_batch_flag": "", "mock_batch_message": "", "mock_list_message": "", "mock_message": "", "mock_sb_client": "", "self": ""}, "params_occur": {"mock_batch_flag": [["hook", "send_message", "queue_name", "self", "queue_name", "messages", "mock_message", "batch_message_flag", "mock_batch_flag"]], "mock_batch_message": [], "mock_list_message": [], "mock_message": [["hook", "send_message", "queue_name", "self", "queue_name", "messages", "mock_message", "batch_message_flag", "mock_batch_flag"], ["isinstance", "mock_message", "list"], ["message", "ServiceBusMessageBatch", "mock_message"], ["message", "ServiceBusMessage", "msg", "msg", "mock_message"], ["isinstance", "mock_message", "str"], ["message", "ServiceBusMessageBatch", "mock_message"], ["message", "ServiceBusMessage", "mock_message"]], "mock_sb_client": [["mock_sb_client", "assert_has_calls", "expected_calls", "any_order", "False"]], "self": [["hook", "send_message", "queue_name", "self", "queue_name", "messages", "mock_message", "batch_message_flag", "mock_batch_flag"], ["expected_calls", "mock", "call", "__enter__", "get_queue_sender", "self", "queue_name", "__enter__", "send_messages", "message", "__exit__"]]}, "params_p": {"args": [], "kwargs": [], "mock_batch_flag": [["mock.Mock", 0.32446960428841354]], "mock_batch_message": [["mock.Mock", 0.7159167125140292]], "mock_list_message": [["mock.Mock", 0.7159167125140292]], "mock_message": [["mock.Mock", 0.20058992524246375]], "mock_sb_client": [["mock.Mock", 0.4117455180800256]], "self": []}, "q_name": "TestMessageHook.test_send_message", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": "", "message": ""}, "variables_p": {"expected_calls": [["float", 0.12066066971704113], ["circle_core.models.cc_info.CcInfo", 0.1064272133989462], ["Dict[str, str]", 0.09412072400700991], ["dict", 0.09203952569894844], ["Dict[str, Any]", 0.08700360962347288]], "hook": [["str", 0.10286625493487263]], "message": [["str", 0.09853549867845669]]}}, {"docstring": {"func": "Test `send_message` functionality to raise AirflowException in Azure MessageHook", "long_descr": "by passing queue name as None", "ret": null}, "fn_lc": [[195, 4], [202, 85]], "fn_var_ln": {"hook": [[200, 8], [200, 12]]}, "fn_var_occur": {"hook": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "send_message", "queue_name", "None", "messages", "batch_message_flag", "False"]]}, "name": "test_send_message_exception", "params": {"mock_sb_client": "", "self": ""}, "params_descr": {"mock_sb_client": "", "self": ""}, "params_occur": {"mock_sb_client": [], "self": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_client": [["mock.Mock", 0.03341294050120396], ["mock.MagicMock", 0.030476014262831592]], "self": []}, "q_name": "TestMessageHook.test_send_message_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": []}}, {"docstring": {"func": "Test `receive_message` hook function and assert the function with mock value,", "long_descr": "mock the azure service bus `receive_messages` function", "ret": null}, "fn_lc": [[206, 4], [227, 55]], "fn_var_ln": {"expected_calls": [[216, 8], [216, 22]], "hook": [[211, 8], [211, 12]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "__enter__", "get_queue_receiver", "self", "queue_name", "__enter__", "receive_messages", "max_message_count", "max_wait_time", "get_queue_receiver", "self", "queue_name", "__exit__", "mock_call", "__exit__"], ["mock_sb_client", "assert_has_calls", "expected_calls"]], "hook": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "receive_message", "self", "queue_name"]]}, "name": "test_receive_message", "params": {"mock_sb_client": "", "mock_service_bus_message": "", "self": ""}, "params_descr": {"mock_sb_client": "", "mock_service_bus_message": "", "self": ""}, "params_occur": {"mock_sb_client": [["mock_sb_client", "return_value", "get_queue_receiver", "return_value", "receive_messages", "return_value", "mock_service_bus_message"], ["mock_sb_client", "assert_has_calls", "expected_calls"]], "mock_service_bus_message": [["mock_sb_client", "return_value", "get_queue_receiver", "return_value", "receive_messages", "return_value", "mock_service_bus_message"]], "self": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "receive_message", "self", "queue_name"], ["expected_calls", "mock", "call", "__enter__", "get_queue_receiver", "self", "queue_name", "__enter__", "receive_messages", "max_message_count", "max_wait_time", "get_queue_receiver", "self", "queue_name", "__exit__", "mock_call", "__exit__"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_client": [["mock.MagicMock", 0.09977992309927997]], "mock_service_bus_message": [], "self": []}, "q_name": "TestMessageHook.test_receive_message", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": ""}, "variables_p": {"expected_calls": [["float", 0.12814394293264686]], "hook": []}}, {"docstring": {"func": "Test `receive_message` functionality to raise AirflowException in Azure MessageHook", "long_descr": "by passing queue name as None", "ret": null}, "fn_lc": [[230, 4], [237, 38]], "fn_var_ln": {"hook": [[235, 8], [235, 12]]}, "fn_var_occur": {"hook": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "receive_message", "None"]]}, "name": "test_receive_message_exception", "params": {"mock_sb_client": "", "self": ""}, "params_descr": {"mock_sb_client": "", "self": ""}, "params_occur": {"mock_sb_client": [], "self": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_client": [["mock.Mock", 0.03341294050120396], ["mock.MagicMock", 0.030476014262831592]], "self": []}, "q_name": "TestMessageHook.test_receive_message_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": []}}, {"docstring": {"func": "Test `receive_subscription_message` hook function and assert the function with mock value,", "long_descr": "mock the azure service bus `receive_message` function of subscription", "ret": null}, "fn_lc": [[240, 4], [262, 55]], "fn_var_ln": {"expected_calls": [[251, 8], [251, 22]], "hook": [[249, 8], [249, 12]], "max_message_count": [[247, 8], [247, 25]], "max_wait_time": [[248, 8], [248, 21]], "subscription_name": [[245, 8], [245, 25]], "topic_name": [[246, 8], [246, 18]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "__enter__", "get_subscription_receiver", "subscription_name", "topic_name", "__enter__", "receive_messages", "max_message_count", "max_message_count", "max_wait_time", "max_wait_time", "get_subscription_receiver", "subscription_name", "topic_name", "__exit__", "mock_call", "__exit__"], ["mock_sb_client", "assert_has_calls", "expected_calls"]], "hook": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "receive_subscription_message", "topic_name", "subscription_name", "max_message_count", "max_wait_time"]], "max_message_count": [["hook", "receive_subscription_message", "topic_name", "subscription_name", "max_message_count", "max_wait_time"], ["expected_calls", "mock", "call", "__enter__", "get_subscription_receiver", "subscription_name", "topic_name", "__enter__", "receive_messages", "max_message_count", "max_message_count", "max_wait_time", "max_wait_time", "get_subscription_receiver", "subscription_name", "topic_name", "__exit__", "mock_call", "__exit__"]], "max_wait_time": [["hook", "receive_subscription_message", "topic_name", "subscription_name", "max_message_count", "max_wait_time"], ["expected_calls", "mock", "call", "__enter__", "get_subscription_receiver", "subscription_name", "topic_name", "__enter__", "receive_messages", "max_message_count", "max_message_count", "max_wait_time", "max_wait_time", "get_subscription_receiver", "subscription_name", "topic_name", "__exit__", "mock_call", "__exit__"]], "subscription_name": [["hook", "receive_subscription_message", "topic_name", "subscription_name", "max_message_count", "max_wait_time"], ["expected_calls", "mock", "call", "__enter__", "get_subscription_receiver", "subscription_name", "topic_name", "__enter__", "receive_messages", "max_message_count", "max_message_count", "max_wait_time", "max_wait_time", "get_subscription_receiver", "subscription_name", "topic_name", "__exit__", "mock_call", "__exit__"]], "topic_name": [["hook", "receive_subscription_message", "topic_name", "subscription_name", "max_message_count", "max_wait_time"], ["expected_calls", "mock", "call", "__enter__", "get_subscription_receiver", "subscription_name", "topic_name", "__enter__", "receive_messages", "max_message_count", "max_message_count", "max_wait_time", "max_wait_time", "get_subscription_receiver", "subscription_name", "topic_name", "__exit__", "mock_call", "__exit__"]]}, "name": "test_receive_subscription_message", "params": {"mock_sb_client": "", "self": ""}, "params_descr": {"mock_sb_client": "", "self": ""}, "params_occur": {"mock_sb_client": [["mock_sb_client", "assert_has_calls", "expected_calls"]], "self": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_sb_client": [], "self": []}, "q_name": "TestMessageHook.test_receive_subscription_message", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": "", "max_message_count": "", "max_wait_time": "", "subscription_name": "", "topic_name": ""}, "variables_p": {"expected_calls": [["float", 0.1724734442864804], ["Dict[Any, Dict[str, int]]", 0.10112904938671687], ["tests.mock.zwave.MockNode", 0.09977115471513175], ["List[Tuple[str, str]]", 0.09677996178496173]], "hook": [], "max_message_count": [["int", 0.5262443115033761], ["str", 0.09406058223173874]], "max_wait_time": [["int", 1.0]], "subscription_name": [["str", 0.6903645401517043], ["int", 0.2164105531251672], ["Tuple[str, str, str, str, str, str, str]", 0.09322490672312833]], "topic_name": [["str", 0.6903645401517043], ["int", 0.2164105531251672], ["Tuple[str, str, str, str, str, str, str]", 0.09322490672312833]]}}, {"docstring": {"func": "Test `receive_subscription_message` hook function to raise exception", "long_descr": "by sending the subscription and topic name as none", "ret": null}, "fn_lc": [[269, 4], [280, 13]], "fn_var_ln": {"hook": [[276, 8], [276, 12]]}, "fn_var_occur": {"hook": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"], ["hook", "receive_subscription_message", "mock_subscription_name", "mock_topic_name", "mock_max_count", "mock_wait_time"]]}, "name": "test_receive_subscription_message_exception", "params": {"mock_max_count": "", "mock_sb_client": "", "mock_subscription_name": "", "mock_topic_name": "", "mock_wait_time": "", "self": ""}, "params_descr": {"mock_max_count": "", "mock_sb_client": "", "mock_subscription_name": "", "mock_topic_name": "", "mock_wait_time": "", "self": ""}, "params_occur": {"mock_max_count": [["hook", "receive_subscription_message", "mock_subscription_name", "mock_topic_name", "mock_max_count", "mock_wait_time"]], "mock_sb_client": [], "mock_subscription_name": [["hook", "receive_subscription_message", "mock_subscription_name", "mock_topic_name", "mock_max_count", "mock_wait_time"]], "mock_topic_name": [["hook", "receive_subscription_message", "mock_subscription_name", "mock_topic_name", "mock_max_count", "mock_wait_time"]], "mock_wait_time": [["hook", "receive_subscription_message", "mock_subscription_name", "mock_topic_name", "mock_max_count", "mock_wait_time"]], "self": [["hook", "MessageHook", "azure_service_bus_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_max_count": [["mock.Mock", 0.1991804518066809]], "mock_sb_client": [["mock.Mock", 0.21295587912614858], ["bool", 0.11862430712811683], ["mock.MagicMock", 0.1039329180403103]], "mock_subscription_name": [["mock.Mock", 0.1991804518066809]], "mock_topic_name": [["mock.Mock", 0.1991804518066809]], "mock_wait_time": [["mock.Mock", 0.1991804518066809]], "self": []}, "q_name": "TestMessageHook.test_receive_subscription_message_exception", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": []}}], "name": "TestMessageHook", "q_name": "TestMessageHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "azure", "servicebus", "ServiceBusClient", "ServiceBusMessage", "ServiceBusMessageBatch", "azure", "servicebus", "management", "ServiceBusAdministrationClient", "airflow", "models", "Connection", "airflow", "providers", "microsoft", "azure", "hooks", "asb", "AdminClientHook", "MessageHook"], "mod_var_ln": {"MESSAGE": [[32, 0], [32, 7]], "MESSAGE_LIST": [[33, 0], [33, 12]]}, "mod_var_occur": {"MESSAGE": [["MESSAGE_LIST", "MESSAGE", "str", "n", "n", "range"]], "MESSAGE_LIST": []}, "no_types_annot": {"D": 6, "I": 0, "U": 76}, "session_id": "RRVmyTyusD53WHiZzhbEYknajX07ZFF547jVPwExeqI", "set": null, "tc": [false, null], "type_annot_cove": 0.07, "typed_seq": "", "untyped_seq": "", "variables": {"MESSAGE": "", "MESSAGE_LIST": ""}, "variables_p": {"MESSAGE": [["int", 0.5897962648812243], ["list", 0.11959992383187619], ["dict", 0.10881457199640732], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str]", 0.095339571045567], ["bytearray", 0.08644966824492524]], "MESSAGE_LIST": [["List[str]", 0.39999999999999997], ["list", 0.3], ["str", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999]]}}}