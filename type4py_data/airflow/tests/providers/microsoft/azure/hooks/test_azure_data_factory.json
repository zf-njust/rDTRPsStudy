{"error": null, "response": {"classes": [{"cls_lc": [[731, 0], [958, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test get_adf_pipeline_run_status function with mocked status", "long_descr": null, "ret": null}, "fn_lc": [[735, 4], [741, 38]], "fn_var_ln": {"hook": [[739, 8], [739, 12]], "mock_status": [[737, 8], [737, 19]], "response": [[740, 8], [740, 16]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"]], "mock_status": [["mock_get_pipeline_run", "return_value", "status", "mock_status"], ["response", "mock_status"]], "response": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "mock_status"]]}, "name": "test_get_adf_pipeline_run_status_queued", "params": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_get_pipeline_run": [["mock_get_pipeline_run", "return_value", "status", "mock_status"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.22577931610676408], ["mock.Mock", 0.17908286465401071]], "mock_get_pipeline_run": [["unittesmock.MagicMock", 0.5082741971315846]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_adf_pipeline_run_status_queued", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_status": "", "response": ""}, "variables_p": {"hook": [["dict", 0.2032579511235344], ["str", 0.14089399083690352], ["frozenset[int]", 0.09159747337182007]], "mock_status": [["str", 0.33805708414193564], ["Dict[str, str]", 0.1602642469036042], ["int", 0.13495224915533227], ["List[str]", 0.12700474746533574], ["Dict[str, Dict[str, Any]]", 0.08169477912583262], ["List[Dict[str, str]]", 0.08075064025290232], ["Dict[str, Tuple[str, int]]", 0.07727625295505719]], "response": [["str", 0.19346423260855938], ["Dict[str, Dict[str, Any]]", 0.18483832432105257], ["Dict[str, str]", 0.1628326197813936], ["Dict[int, str]", 0.0886639290512734], ["list", 0.07861949444181392]]}}, {"docstring": {"func": "Test get_adf_pipeline_run_status function with mocked status", "long_descr": null, "ret": null}, "fn_lc": [[746, 4], [756, 38]], "fn_var_ln": {"hook": [[754, 8], [754, 12]], "mock_status": [[752, 8], [752, 19]], "response": [[755, 8], [755, 16]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"]], "mock_status": [["mock_get_pipeline_run", "return_value", "status", "mock_status"], ["response", "mock_status"]], "response": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "mock_status"]]}, "name": "test_get_adf_pipeline_run_status_inprogress", "params": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_get_pipeline_run": [["mock_get_pipeline_run", "return_value", "status", "mock_status"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.22577931610676408], ["mock.Mock", 0.17908286465401071]], "mock_get_pipeline_run": [["unittesmock.MagicMock", 0.5082741971315846]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_adf_pipeline_run_status_inprogress", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_status": "", "response": ""}, "variables_p": {"hook": [["dict", 0.2032579511235344], ["str", 0.14089399083690352], ["frozenset[int]", 0.09159747337182007]], "mock_status": [["str", 0.33805708414193564], ["Dict[str, str]", 0.1602642469036042], ["int", 0.13495224915533227], ["List[str]", 0.12700474746533574], ["Dict[str, Dict[str, Any]]", 0.08169477912583262], ["List[Dict[str, str]]", 0.08075064025290232], ["Dict[str, Tuple[str, int]]", 0.07727625295505719]], "response": [["str", 0.19346423260855938], ["Dict[str, Dict[str, Any]]", 0.18483832432105257], ["Dict[str, str]", 0.1628326197813936], ["Dict[int, str]", 0.0886639290512734], ["list", 0.07861949444181392]]}}, {"docstring": {"func": "Test get_adf_pipeline_run_status function with mocked status", "long_descr": null, "ret": null}, "fn_lc": [[761, 4], [767, 38]], "fn_var_ln": {"hook": [[765, 8], [765, 12]], "mock_status": [[763, 8], [763, 19]], "response": [[766, 8], [766, 16]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"]], "mock_status": [["mock_get_pipeline_run", "return_value", "status", "mock_status"], ["response", "mock_status"]], "response": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "mock_status"]]}, "name": "test_get_adf_pipeline_run_status_success", "params": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_get_pipeline_run": [["mock_get_pipeline_run", "return_value", "status", "mock_status"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.22577931610676408], ["mock.Mock", 0.17908286465401071]], "mock_get_pipeline_run": [["unittesmock.MagicMock", 0.5082741971315846]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_adf_pipeline_run_status_success", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_status": "", "response": ""}, "variables_p": {"hook": [["dict", 0.2032579511235344], ["str", 0.14089399083690352], ["frozenset[int]", 0.09159747337182007]], "mock_status": [["str", 0.33805708414193564], ["Dict[str, str]", 0.1602642469036042], ["int", 0.13495224915533227], ["List[str]", 0.12700474746533574], ["Dict[str, Dict[str, Any]]", 0.08169477912583262], ["List[Dict[str, str]]", 0.08075064025290232], ["Dict[str, Tuple[str, int]]", 0.07727625295505719]], "response": [["str", 0.19346423260855938], ["Dict[str, Dict[str, Any]]", 0.18483832432105257], ["Dict[str, str]", 0.1628326197813936], ["Dict[int, str]", 0.0886639290512734], ["list", 0.07861949444181392]]}}, {"docstring": {"func": "Test get_adf_pipeline_run_status function with mocked status", "long_descr": null, "ret": null}, "fn_lc": [[772, 4], [778, 38]], "fn_var_ln": {"hook": [[776, 8], [776, 12]], "mock_status": [[774, 8], [774, 19]], "response": [[777, 8], [777, 16]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"]], "mock_status": [["mock_get_pipeline_run", "return_value", "status", "mock_status"], ["response", "mock_status"]], "response": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "mock_status"]]}, "name": "test_get_adf_pipeline_run_status_failed", "params": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_get_pipeline_run": [["mock_get_pipeline_run", "return_value", "status", "mock_status"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.22577931610676408], ["mock.Mock", 0.17908286465401071]], "mock_get_pipeline_run": [["unittesmock.MagicMock", 0.5082741971315846]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_adf_pipeline_run_status_failed", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_status": "", "response": ""}, "variables_p": {"hook": [["dict", 0.2032579511235344], ["str", 0.14089399083690352], ["frozenset[int]", 0.09159747337182007]], "mock_status": [["str", 0.33805708414193564], ["Dict[str, str]", 0.1602642469036042], ["int", 0.13495224915533227], ["List[str]", 0.12700474746533574], ["Dict[str, Dict[str, Any]]", 0.08169477912583262], ["List[Dict[str, str]]", 0.08075064025290232], ["Dict[str, Tuple[str, int]]", 0.07727625295505719]], "response": [["str", 0.19346423260855938], ["Dict[str, Dict[str, Any]]", 0.18483832432105257], ["Dict[str, str]", 0.1628326197813936], ["Dict[int, str]", 0.0886639290512734], ["list", 0.07861949444181392]]}}, {"docstring": {"func": "Test get_adf_pipeline_run_status function with mocked status", "long_descr": null, "ret": null}, "fn_lc": [[783, 4], [789, 38]], "fn_var_ln": {"hook": [[787, 8], [787, 12]], "mock_status": [[785, 8], [785, 19]], "response": [[788, 8], [788, 16]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"]], "mock_status": [["mock_get_pipeline_run", "return_value", "status", "mock_status"], ["response", "mock_status"]], "response": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "mock_status"]]}, "name": "test_get_adf_pipeline_run_status_cancelled", "params": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_get_pipeline_run": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_get_pipeline_run": [["mock_get_pipeline_run", "return_value", "status", "mock_status"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.22577931610676408], ["mock.Mock", 0.17908286465401071]], "mock_get_pipeline_run": [["unittesmock.MagicMock", 0.5082741971315846]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_adf_pipeline_run_status_cancelled", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_status": "", "response": ""}, "variables_p": {"hook": [["dict", 0.2032579511235344], ["str", 0.14089399083690352], ["frozenset[int]", 0.09159747337182007]], "mock_status": [["str", 0.33805708414193564], ["Dict[str, str]", 0.1602642469036042], ["int", 0.13495224915533227], ["List[str]", 0.12700474746533574], ["Dict[str, Dict[str, Any]]", 0.08169477912583262], ["List[Dict[str, str]]", 0.08075064025290232], ["Dict[str, Tuple[str, int]]", 0.07727625295505719]], "response": [["str", 0.19346423260855938], ["Dict[str, Dict[str, Any]]", 0.18483832432105257], ["Dict[str, str]", 0.1628326197813936], ["Dict[int, str]", 0.0886639290512734], ["list", 0.07861949444181392]]}}, {"docstring": {"func": "Test get_pipeline_run function without passing the resource name to check the decorator function and", "long_descr": "raise exception", "ret": null}, "fn_lc": [[795, 4], [809, 71]], "fn_var_ln": {"hook": [[807, 8], [807, 12]], "mock_connection": [[802, 8], [802, 23]], "return_value": [[805, 8], [805, 40]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "get_pipeline_run", "RUN_ID", "None", "DATAFACTORY_NAME"]], "mock_connection": [["mock_connection", "Connection", "extra", "json", "dumps", "DATAFACTORY_NAME"], ["mock_get_connection", "return_value", "mock_connection"]], "return_value": [["mock_get_connection", "return_value", "mock_connection"], ["mock_conn", "return_value", "pipeline_runs", "get", "return_value", "mock_pipeline_run"]]}, "name": "test_get_pipeline_run_exception_without_resource", "params": {"mock_conn": "", "mock_get_connection": "", "mock_pipeline_run": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_get_connection": "", "mock_pipeline_run": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "pipeline_runs", "get", "return_value", "mock_pipeline_run"]], "mock_get_connection": [["mock_get_connection", "return_value", "mock_connection"]], "mock_pipeline_run": [["mock_conn", "return_value", "pipeline_runs", "get", "return_value", "mock_pipeline_run"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.6020926276184468]], "mock_get_connection": [["unittesmock.MagicMock", 0.097212163241219]], "mock_pipeline_run": [["unittesmock.MagicMock", 0.6020926276184468]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_pipeline_run_exception_without_resource", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_connection": "", "return_value": ""}, "variables_p": {"hook": [["Pattern[str]", 0.2515277652011762], ["Dict[str, str]", 0.2080580875759685], ["int", 0.15692857267339105], ["ddionrails.base.models.System", 0.09528867686641583], ["str", 0.09441885988203645], ["Mapping", 0.09441885988203645]], "mock_connection": [["List[str]", 0.6092261300287444], ["Dict[str, str]", 0.1758713380336382], ["Dict[Any, Union[Any, Any]]", 0.12960778923025731], ["Dict[str, Dict[str, str]]", 0.0852947427073601]], "return_value": [["tests.mock.zwave.MockValue", 0.10530518691971692], ["str", 0.09624942839457125], ["unittesmock.MagicMock", 0.09582932085521544], ["int", 0.09533001950877978], ["Dict[str, Union[Any, Any, Any]]", 0.09299411872563666], ["list", 0.0908601109343474]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[813, 4], [832, 64]], "fn_var_ln": {"hook": [[830, 8], [830, 12]], "mock_conn": [[815, 8], [815, 17]], "response": [[831, 8], [831, 16]], "return_value": [[829, 8], [829, 36]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["response", "hook", "get_async_conn"]], "mock_conn": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_connection", "return_value", "mock_conn"]], "response": [["response", "hook", "get_async_conn"], ["isinstance", "response", "DataFactoryManagementClient"]], "return_value": [["mock_connection", "return_value", "mock_conn"]]}, "name": "test_get_async_conn", "params": {"mock_connection": "", "self": ""}, "params_descr": {"mock_connection": "", "self": ""}, "params_occur": {"mock_connection": [["mock_connection", "return_value", "mock_conn"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_connection": [["unittesmock.MagicMock", 0.2530375557350833], ["mock.MagicMock", 0.1984919104084349]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_async_conn", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_conn": "", "response": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.32165717019272705], ["Mapping", 0.10494767486042712], ["dict", 0.09698026914699288], ["frozenset[int]", 0.09567842335709209]], "mock_conn": [["str", 0.3046707373374361], ["Dict[str, Union[Any, Any]]", 0.17700302238264787], ["Dict[str, dict]", 0.14630100062401588], ["Dict[Any, Union[Any, Any]]", 0.11104354815678034], ["Dict[str, Union[float, str]]", 0.10094253657371767], ["List[Dict[str, str]]", 0.08485362766816319], ["Dict[str, Union[int, str]]", 0.07518552725723898]], "response": [["bytes", 0.09162704561700524], ["str", 0.08708010016780723], ["list", 0.08444071567977662], ["requests.models.Response", 0.08324531033336252]], "return_value": [["str", 0.2739727328165447], ["int", 0.1817088953945033], ["List[Dict[str, Any]]", 0.1510729310435544], ["Dict[str, Union[Any, Any]]", 0.07799393828890551]]}}, {"docstring": {"func": "Test get_async_conn function without login id", "long_descr": null, "ret": null}, "fn_lc": [[836, 4], [853, 64]], "fn_var_ln": {"hook": [[851, 8], [851, 12]], "mock_conn": [[838, 8], [838, 17]], "response": [[852, 8], [852, 16]], "return_value": [[850, 8], [850, 36]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["response", "hook", "get_async_conn"]], "mock_conn": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_connection", "return_value", "mock_conn"]], "response": [["response", "hook", "get_async_conn"], ["isinstance", "response", "DataFactoryManagementClient"]], "return_value": [["mock_connection", "return_value", "mock_conn"]]}, "name": "test_get_async_conn_without_login_id", "params": {"mock_connection": "", "self": ""}, "params_descr": {"mock_connection": "", "self": ""}, "params_occur": {"mock_connection": [["mock_connection", "return_value", "mock_conn"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_connection": [["mock.MagicMock", 0.21315823518791135], ["unittesmock.MagicMock", 0.08996218503306935]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_async_conn_without_login_id", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_conn": "", "response": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.32165717019272705], ["Mapping", 0.10494767486042712], ["dict", 0.09698026914699288], ["frozenset[int]", 0.09567842335709209]], "mock_conn": [["str", 0.30399166670394484], ["Dict[str, dict]", 0.17486512476466], ["Dict[str, Union[Any, Any]]", 0.1671658476757239], ["Dict[str, Union[float, str]]", 0.12402114136324612], ["Dict[Any, Union[Any, Any]]", 0.08558801524310439], ["int", 0.07423633528174381], ["ChainMap", 0.070131868967577]], "response": [["bytes", 0.09162704561700524], ["str", 0.08708010016780723], ["list", 0.08444071567977662], ["requests.models.Response", 0.08324531033336252]], "return_value": [["str", 0.2739727328165447], ["int", 0.1817088953945033], ["List[Dict[str, Any]]", 0.1510729310435544], ["Dict[str, Union[Any, Any]]", 0.07799393828890551]]}}, {"docstring": {"func": "Test get_async_conn function when subscription_id is missing in the connection", "long_descr": null, "ret": null}, "fn_lc": [[867, 4], [879, 39]], "fn_var_ln": {"hook": [[877, 8], [877, 12]], "mock_conn": [[869, 8], [869, 17]], "return_value": [[876, 8], [876, 36]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "get_async_conn"]], "mock_conn": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "mock_connection_params"], ["mock_connection", "return_value", "mock_conn"]], "return_value": [["mock_connection", "return_value", "mock_conn"]]}, "name": "test_get_async_conn_key_error_subscription_id", "params": {"mock_connection": "", "mock_connection_params": "", "self": ""}, "params_descr": {"mock_connection": "", "mock_connection_params": "", "self": ""}, "params_occur": {"mock_connection": [["mock_connection", "return_value", "mock_conn"]], "mock_connection_params": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "mock_connection_params"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_connection": [["unittesmock.MagicMock", 0.2053583769409022]], "mock_connection_params": [["mock.Mock", 0.19984408536188197]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_async_conn_key_error_subscription_id", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_conn": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.7329246492880365], ["Dict[str, str]", 0.10843165559839339], ["List[str]", 0.08127768202703667], ["sqlite3.dbapi2.Connection", 0.07736601308653351]], "mock_conn": [["str", 0.30249840237088055], ["Dict[str, Union[Any, Any]]", 0.16437365377005342], ["Dict[str, dict]", 0.14845918120941548], ["Dict[str, Union[float, str]]", 0.11716128594316655], ["Dict[Any, Union[Any, Any]]", 0.10030010397006864], ["List[Dict[str, str]]", 0.09376397882228348], ["Dict[str, Union[int, str]]", 0.07344339391413185]], "return_value": [["str", 0.2739727328165447], ["int", 0.1817088953945033], ["List[Dict[str, Any]]", 0.1510729310435544], ["Dict[str, Union[Any, Any]]", 0.07799393828890551]]}}, {"docstring": {"func": "Test get_async_conn function when tenant id is missing in the connection", "long_descr": null, "ret": null}, "fn_lc": [[893, 4], [905, 39]], "fn_var_ln": {"hook": [[903, 8], [903, 12]], "mock_conn": [[895, 8], [895, 17]], "return_value": [[902, 8], [902, 36]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "get_async_conn"]], "mock_conn": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "mock_connection_params"], ["mock_connection", "return_value", "mock_conn"]], "return_value": [["mock_connection", "return_value", "mock_conn"]]}, "name": "test_get_async_conn_key_error_tenant_id", "params": {"mock_connection": "", "mock_connection_params": "", "self": ""}, "params_descr": {"mock_connection": "", "mock_connection_params": "", "self": ""}, "params_occur": {"mock_connection": [["mock_connection", "return_value", "mock_conn"]], "mock_connection_params": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "mock_connection_params"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_connection": [["unittesmock.MagicMock", 0.18828874505448018]], "mock_connection_params": [["mock.Mock", 0.23648863145064256], ["unittesmock.MagicMock", 0.09773316476759943]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_async_conn_key_error_tenant_id", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "mock_conn": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.7329246492880365], ["Dict[str, str]", 0.10843165559839339], ["List[str]", 0.08127768202703667], ["sqlite3.dbapi2.Connection", 0.07736601308653351]], "mock_conn": [["str", 0.30249840237088055], ["Dict[str, Union[Any, Any]]", 0.16437365377005342], ["Dict[str, dict]", 0.14845918120941548], ["Dict[str, Union[float, str]]", 0.11716128594316655], ["Dict[Any, Union[Any, Any]]", 0.10030010397006864], ["List[Dict[str, str]]", 0.09376397882228348], ["Dict[str, Union[int, str]]", 0.07344339391413185]], "return_value": [["str", 0.2739727328165447], ["int", 0.1817088953945033], ["List[Dict[str, Any]]", 0.1510729310435544], ["Dict[str, Union[Any, Any]]", 0.07799393828890551]]}}, {"docstring": {"func": "Test get_field function for retrieving prefixed extra fields", "long_descr": null, "ret": null}, "fn_lc": [[907, 4], [927, 64]], "fn_var_ln": {"extras": [[921, 8], [921, 14]], "mock_conn": [[909, 8], [909, 17]]}, "fn_var_occur": {"extras": [["extras", "mock_conn", "extra_dejson"], ["get_field", "extras", "strict", "True"], ["get_field", "extras", "strict", "True"], ["get_field", "extras", "strict", "True", "RESOURCE_GROUP_NAME"], ["get_field", "extras", "strict", "True", "DATAFACTORY_NAME"], ["get_field", "extras", "strict", "True"]], "mock_conn": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["extras", "mock_conn", "extra_dejson"]]}, "name": "test_get_field_prefixed_extras", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_field_prefixed_extras", "ret_exprs": [], "ret_type": "", "variables": {"extras": "", "mock_conn": ""}, "variables_p": {"extras": [["list", 0.43936452508312307], ["set", 0.09216803198717907]], "mock_conn": [["str", 0.2804419052851424], ["Dict[str, dict]", 0.20017765851045655], ["Dict[str, str]", 0.14108271892747867], ["Dict[str, Union[float, str]]", 0.14050043929850367], ["Dict[Any, Union[Any, Any]]", 0.08351131526531638], ["ChainMap", 0.07945578439018838], ["Dict[str, Union[Any, Any]]", 0.07483017832291401]]}}, {"docstring": {"func": "Test get_field function for retrieving non-prefixed extra fields", "long_descr": null, "ret": null}, "fn_lc": [[929, 4], [949, 64]], "fn_var_ln": {"extras": [[943, 8], [943, 14]], "mock_conn": [[931, 8], [931, 17]]}, "fn_var_occur": {"extras": [["extras", "mock_conn", "extra_dejson"], ["get_field", "extras", "strict", "True"], ["get_field", "extras", "strict", "True"], ["get_field", "extras", "strict", "True", "RESOURCE_GROUP_NAME"], ["get_field", "extras", "strict", "True", "DATAFACTORY_NAME"], ["get_field", "extras", "strict", "True"]], "mock_conn": [["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["extras", "mock_conn", "extra_dejson"]]}, "name": "test_get_field_non_prefixed_extras", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_get_field_non_prefixed_extras", "ret_exprs": [], "ret_type": "", "variables": {"extras": "", "mock_conn": ""}, "variables_p": {"extras": [["list", 0.43936452508312307], ["set", 0.09216803198717907]], "mock_conn": [["str", 0.2804419052851424], ["Dict[str, dict]", 0.20017765851045655], ["Dict[str, str]", 0.14108271892747867], ["Dict[str, Union[float, str]]", 0.14050043929850367], ["Dict[Any, Union[Any, Any]]", 0.08351131526531638], ["ChainMap", 0.07945578439018838], ["Dict[str, Union[Any, Any]]", 0.07483017832291401]]}}, {"docstring": {"func": "Test refresh_conn method _conn is reset and get_async_conn is called", "long_descr": null, "ret": null}, "fn_lc": [[953, 4], [958, 41]], "fn_var_ln": {"hook": [[955, 8], [955, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "refresh_conn"], ["hook", "_conn"]]}, "name": "test_refresh_conn", "params": {"mock_get_async_conn": "", "self": ""}, "params_descr": {"mock_get_async_conn": "", "self": ""}, "params_occur": {"mock_get_async_conn": [["mock_get_async_conn", "called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_async_conn": [["unittesmock.MagicMock", 0.19221450458487643], ["mock.Mock", 0.1407453853437506], ["str", 0.08989544868218945]], "self": []}, "q_name": "TestAzureDataFactoryAsyncHook.test_refresh_conn", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.2955759678873493], ["list", 0.11933152050937142], ["bytes", 0.08474792570399317], ["str", 0.07665778527992721]]}}], "name": "TestAzureDataFactoryAsyncHook", "q_name": "TestAzureDataFactoryAsyncHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 0], [118, 47]], "fn_var_ln": {"connection_client_secret": [[63, 4], [63, 28]], "connection_default_credential": [[77, 4], [77, 33]], "connection_missing_subscription_id": [[88, 4], [88, 38]], "connection_missing_tenant_id": [[101, 4], [101, 32]]}, "fn_var_occur": {"connection_client_secret": [["connection_client_secret", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["db", "merge_conn", "connection_client_secret"]], "connection_default_credential": [["connection_default_credential", "Connection", "conn_id", "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL", "conn_type", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["db", "merge_conn", "connection_default_credential"]], "connection_missing_subscription_id": [["connection_missing_subscription_id", "Connection", "conn_id", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["db", "merge_conn", "connection_missing_subscription_id"]], "connection_missing_tenant_id": [["connection_missing_tenant_id", "Connection", "conn_id", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["db", "merge_conn", "connection_missing_tenant_id"]]}, "name": "setup_module", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "setup_module", "ret_exprs": [], "ret_type": "", "variables": {"connection_client_secret": "", "connection_default_credential": "", "connection_missing_subscription_id": "", "connection_missing_tenant_id": ""}, "variables_p": {"connection_client_secret": [["str", 1.0]], "connection_default_credential": [["Dict[str, Any]", 0.30496430847414696], ["dict", 0.25952784316889393], ["str", 0.17288615544110658], ["Dict[str, str]", 0.0944977086381951], ["Type[MutableMapping[Any, Any]]", 0.08927300949973602], ["Dict[str, Type[Any]]", 0.07885097477792134]], "connection_missing_subscription_id": [["str", 0.392878890466823], ["int", 0.138098953191432], ["Pattern[str]", 0.11630350488185105], ["Dict[str, Dict[str, str]]", 0.09869052586757497], ["Dict[int, str]", 0.08675409956183124], ["Optional[str]", 0.08550241223874849], ["Dict[int, int]", 0.0817716137917393]], "connection_missing_tenant_id": [["str", 0.39889366352677075], ["int", 0.20213056435734808], ["Optional[str]", 0.10253905295366045], ["Dict[str, Dict[str, str]]", 0.09458010617377338]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[122, 0], [137, 17]], "fn_var_ln": {"_conn": [[124, 4], [124, 16]], "client": [[123, 4], [123, 10]]}, "fn_var_occur": {"_conn": [["client", "_conn", "MagicMock", "spec"]], "client": [["client", "AzureDataFactoryHook", "azure_data_factory_conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET"], ["client", "_conn", "MagicMock", "spec"]]}, "name": "hook", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "hook", "ret_exprs": ["return client"], "ret_type": "", "ret_type_p": [["bool", 0.11570370078545189], ["int", 0.09800782134877127], ["str", 0.09618548917022605], ["dict", 0.09118485179250495]], "variables": {"_conn": "", "client": ""}, "variables_p": {"_conn": [["mock.Mock", 0.6155920594004354], ["mode.utils.mocks.Mock", 0.09236590508349721], ["int", 0.08995864067465759]], "client": [["unittesmock.MagicMock", 0.0747681081466494]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[141, 4], [146, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "wrapper", "params": {"func": ""}, "params_descr": {"func": ""}, "params_occur": {"func": [["pytest", "mark", "parametrize", "explicit_factory", "implicit_factory", "ids", "func"]]}, "params_p": {"args": [], "func": [["str", 0.14428863367273928], ["int", 0.11318977598882962], ["deeplearning.ml4pl.models.classifier_base.ClassifierBase", 0.08380037092247802]], "kwargs": []}, "q_name": "parametrize.<locals>.wrapper", "ret_exprs": ["return pytest.mark.parametrize( (\"user_args\", \"sdk_args\"), (explicit_factory, implicit_factory), ids=(\"explicit factory\", \"implicit factory\"),)(func)"], "ret_type": "", "ret_type_p": [["str", 0.1777138743432671], ["int", 0.12580707148331774], ["bool", 0.0991121008799478], ["Generator", 0.0897428527352765]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 0], [148, 18]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "parametrize", "params": {"explicit_factory": "", "implicit_factory": ""}, "params_descr": {"explicit_factory": "", "implicit_factory": ""}, "params_occur": {"explicit_factory": [], "implicit_factory": []}, "params_p": {"args": [], "explicit_factory": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "implicit_factory": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "parametrize", "ret_exprs": ["return wrapper"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[152, 4], [153, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "echo", "params": {"_": "", "factory_name": "", "resource_group_name": ""}, "params_descr": {"_": "", "factory_name": "", "resource_group_name": ""}, "params_occur": {"_": [], "factory_name": [["resource_group_name", "factory_name"]], "resource_group_name": [["resource_group_name", "factory_name"]]}, "params_p": {"_": [["str", 0.7402788715066152], ["Optional[List[str]]", 0.0743699922112129], ["List[Tuple[str, str, str]]", 0.07436632306627167]], "args": [], "factory_name": [["str", 0.8386315352558371], ["Optional[str]", 0.16136846474416278]], "kwargs": [], "resource_group_name": [["str", 0.8386315352558371], ["Optional[str]", 0.16136846474416278]]}, "q_name": "test_provide_targeted_factory.<locals>.echo", "ret_exprs": ["return resource_group_name, factory_name"], "ret_type": "", "ret_type_p": [["str", 0.1798097062375719], ["Tuple[str, List[str], List[float], List[str], List[float], List[float], List[Any]]", 0.09126386345961357]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[151, 0], [173, 44]], "fn_var_ln": {"conn": [[155, 4], [155, 8]], "extra_dejson": [[172, 8], [172, 25]], "hook": [[156, 4], [156, 8]]}, "fn_var_occur": {"conn": [["conn", "MagicMock"], ["hook", "get_connection", "return_value", "conn"], ["conn", "extra_dejson"], ["conn", "extra_dejson", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["conn", "extra_dejson"]], "extra_dejson": [["conn", "extra_dejson"], ["conn", "extra_dejson", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["conn", "extra_dejson"]], "hook": [["hook", "MagicMock"], ["hook", "get_connection", "return_value", "conn"], ["provide_targeted_factory", "echo", "hook", "RESOURCE_GROUP", "FACTORY", "RESOURCE_GROUP", "FACTORY"], ["provide_targeted_factory", "echo", "hook", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook", "RESOURCE_GROUP", "None", "RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook", "None", "FACTORY", "DEFAULT_RESOURCE_GROUP", "FACTORY"], ["provide_targeted_factory", "echo", "hook", "None", "None", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook"]]}, "name": "test_provide_targeted_factory", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_provide_targeted_factory", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra_dejson": "", "hook": ""}, "variables_p": {"conn": [["mock.Mock", 0.832255989961638]], "extra_dejson": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "hook": [["mock.Mock", 0.8439661022430187]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[183, 0], [192, 71]], "fn_var_ln": {"connection": [[188, 8], [188, 18]], "hook": [[184, 4], [184, 8]], "return_value": [[187, 8], [187, 39]]}, "fn_var_occur": {"connection": [["connection", "hook", "get_conn"], ["connection", "None"]], "hook": [["hook", "AzureDataFactoryHook", "connection_id"], ["patch", "object", "hook", "mock_create_client"], ["connection", "hook", "get_conn"]], "return_value": [["mock_create_client", "return_value", "MagicMock"]]}, "name": "test_get_connection_by_credential_client_secret", "params": {"connection_id": "builtins.str", "credential_type": "builtins.type"}, "params_descr": {"connection_id": "", "credential_type": ""}, "params_occur": {"connection_id": [["hook", "AzureDataFactoryHook", "connection_id"]], "credential_type": [["isinstance", "mock_create_client", "call_args", "args", "credential_type"]]}, "params_p": {"args": [], "connection_id": [["str", 0.8039793913147049]], "credential_type": [["str", 0.9057026570296631], ["Optional[str]", 0.09429734297033675]], "kwargs": []}, "q_name": "test_get_connection_by_credential_client_secret", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["int", 0.19882626567646866], ["Dict[str, Union[Any, Any, Any]]", 0.1164618720631746], ["Dict[str, Any]", 0.09749730009982512], ["str", 0.09109100881967519], ["list", 0.08611711031202685]], "hook": [["str", 0.17778949438278885], ["list", 0.11938060474967689], ["Tuple[str, int]", 0.08442887412039855]], "return_value": [["str", 0.2735638163025394], ["List[Dict[str, Any]]", 0.13068265842624405], ["Dict[str, Any]", 0.09126268025199183], ["Dict[str, Dict[str, Any]]", 0.08460988599912429], ["Type[Dict[Any, Any]]", 0.07815018068542848], ["set", 0.07290922110900659], ["tests.mock.zwave.MockNode", 0.0706117183013342], ["int", 0.06993228792348528]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[199, 0], [202, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_factory", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "get_factory", "user_args"], ["hook", "_conn", "factories", "get", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "factories", "get", "assert_called_with", "sdk_args"]], "user_args": [["hook", "get_factory", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.19718721465572797]], "kwargs": [], "sdk_args": [["raiden.utils.Address", 0.11246490844379498], ["zerver.models.UserProfile", 0.1013175203587338], ["set", 0.08986716843564604], ["utils.clienClient", 0.08688714298798143]], "user_args": [["raiden.utils.TokenAmount", 0.1914657029965688], ["int", 0.16948090048647685], ["django.contrib.auth.models.User", 0.12129524864557376], ["deeplearning.ml4pl.models.logger.Logger", 0.1005915907133265]]}, "q_name": "test_get_factory", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[209, 0], [212, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_factory", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "create_factory", "user_args"], ["hook", "_conn", "factories", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "factories", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "create_factory", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.3053519046299082], ["salon.models.Stylist", 0.112897073296415], ["core.models.Recipe", 0.08781309263405196]], "kwargs": [], "sdk_args": [["accounts.models.User", 0.1440200395805466], ["excars.models.user.User", 0.09827726703220312], ["str", 0.08981875976112719]], "user_args": [["List[str]", 0.19697588811545566], ["bool", 0.09017007331259695], ["str", 0.08471843800982387]]}, "q_name": "test_create_factory", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[219, 0], [224, 71]], "fn_var_ln": {"return_value": [[221, 8], [221, 40]]}, "fn_var_occur": {"return_value": [["mock_factory_exists", "return_value", "True"]]}, "name": "test_update_factory", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_factory_exists"], ["hook", "update_factory", "user_args"], ["hook", "_conn", "factories", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "factories", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "update_factory", "user_args"]]}, "params_p": {"args": [], "hook": [["zerver.models.UserProfile", 0.08502193453939681]], "kwargs": [], "sdk_args": [["bool", 0.17974091429682032], ["accounts.models.User", 0.14585275172388162], ["excars.models.user.User", 0.1034449048031822]], "user_args": [["Optional[Tuple[float, float]]", 0.10813009931175885], ["Optional[zerver.models.Realm]", 0.09983395198614288], ["tracim.models.auth.User", 0.09249170988127303], ["pyppeteer.connection.CDPSession", 0.09240271740478527], ["connection.ClientType", 0.09133164718035389], ["raiden.utils.AddressHex", 0.08404194644589544]]}, "q_name": "test_update_factory", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.16029958167037964], ["List[str]", 0.14553720445254295], ["Optional[bytes]", 0.12694362101953677], ["str", 0.11176311340731358], ["Tuple[int, int]", 0.09377314312562458], ["int", 0.07926586939411204], ["Dict[str, Dict[str, Any]]", 0.06948960229955532]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 0], [236, 39]], "fn_var_ln": {"return_value": [[233, 8], [233, 40]]}, "fn_var_occur": {"return_value": [["mock_factory_exists", "return_value", "False"]]}, "name": "test_update_factory_non_existent", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_factory_exists"], ["hook", "update_factory", "user_args"]], "sdk_args": [], "user_args": [["hook", "update_factory", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.11911934631322005], ["zerver.models.UserProfile", 0.10740664946897392], ["List[str]", 0.0894899006185434], ["str", 0.0837197917957972]], "kwargs": [], "sdk_args": [["unittesmock.MagicMock", 0.4338413125860049], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.10432733101273303], ["int", 0.07023563636587815], ["List[List[int]]", 0.06488647653270929]], "user_args": [["Optional[Tuple[float, float]]", 0.11428920424255168], ["pyppeteer.connection.CDPSession", 0.09733445004775346], ["connection.ClientType", 0.09323879657580346], ["Optional[zerver.models.Realm]", 0.08963480153158154], ["raiden.utils.AddressHex", 0.08800845939175914], ["tracim.models.auth.User", 0.08265714107209282]]}, "q_name": "test_update_factory_non_existent", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.32734597058835074], ["Dict[str, Dict[str, Any]]", 0.1580116078228232], ["float", 0.14163793755070184], ["Dict[str, Union[Any, int]]", 0.0840377256230441], ["list", 0.08311870144653177], ["set", 0.07561662443219579], ["int", 0.06772012563800678], ["raiden.utils.Any", 0.06251130689834584]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[243, 0], [246, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_factory", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "delete_factory", "user_args"], ["hook", "_conn", "factories", "delete", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "factories", "delete", "assert_called_with", "sdk_args"]], "user_args": [["hook", "delete_factory", "user_args"]]}, "params_p": {"args": [], "hook": [["models.Station", 0.11413604729161142]], "kwargs": [], "sdk_args": [["accounts.models.User", 0.14866344144005186], ["raiden.utils.List[raiden.utils.TokenAddress]", 0.08879636112743311]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.09016516477288165]]}, "q_name": "test_delete_factory", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[253, 0], [256, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_linked_service", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "get_linked_service", "user_args"], ["hook", "_conn", "linked_services", "get", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "linked_services", "get", "assert_called_with", "sdk_args"]], "user_args": [["hook", "get_linked_service", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.08973647951810357]], "kwargs": [], "sdk_args": [["raiden.utils.Address", 0.1237539219756634]], "user_args": [["str", 0.48468682781801337], ["asgard.models.accounAccount", 0.12428820127228793]]}, "q_name": "test_get_linked_service", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[263, 0], [266, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_linked_service", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "create_linked_service", "user_args"], ["hook", "_conn", "linked_services", "create_or_update", "sdk_args"]], "sdk_args": [["hook", "_conn", "linked_services", "create_or_update", "sdk_args"]], "user_args": [["hook", "create_linked_service", "user_args"]]}, "params_p": {"args": [], "hook": [["services.user.transfer.models.User", 0.39114840780058474], ["services.ticketing.models.tickeTicket", 0.39114840780058474], ["zerver.models.UserProfile", 0.10523024952299326]], "kwargs": [], "sdk_args": [["str", 0.1959287137585019], ["zam_repondeur.models.Dossier", 0.10189566216148668], ["raiden.utils.List[raiden.utils.FeeAmount]", 0.09209132588148773]], "user_args": [["str", 0.7226411105712301], ["zerver.models.UserProfile", 0.09581248504828933], ["services.user.transfer.models.User", 0.09077320219024014], ["services.ticketing.models.tickeTicket", 0.09077320219024014]]}, "q_name": "test_create_linked_service", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[273, 0], [278, 58]], "fn_var_ln": {"return_value": [[275, 8], [275, 47]]}, "fn_var_occur": {"return_value": [["mock_linked_service_exists", "return_value", "True"]]}, "name": "test_update_linked_service", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_linked_service_exists"], ["hook", "update_linked_service", "user_args"], ["hook", "_conn", "linked_services", "create_or_update", "sdk_args"]], "sdk_args": [["hook", "_conn", "linked_services", "create_or_update", "sdk_args"]], "user_args": [["hook", "update_linked_service", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.2036674973756362]], "kwargs": [], "sdk_args": [["str", 0.19428044560529417], ["zam_repondeur.models.Dossier", 0.1025746707245771], ["raiden.utils.List[raiden.utils.FeeAmount]", 0.09244681646964813]], "user_args": [["bool", 0.49655356832880304], ["Optional[str]", 0.10602119004183759], ["zerver.models.UserProfile", 0.09585952913910285]]}, "q_name": "test_update_linked_service", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.1877891308376084], ["Tuple[int, int]", 0.13543204647918697], ["List[str]", 0.13003479444029528], ["Dict[str, Dict[str, Any]]", 0.11102154843919493], ["str", 0.09699669311257736], ["List[Tuple[str, str]]", 0.09449210242307768], ["Type[Dict[Any, Any]]", 0.08587058784852462], ["tests.mock.zwave.MockNode", 0.08191816272862093], ["Dict[str, str]", 0.07644493369091386]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[285, 0], [290, 46]], "fn_var_ln": {"return_value": [[287, 8], [287, 47]]}, "fn_var_occur": {"return_value": [["mock_linked_service_exists", "return_value", "False"]]}, "name": "test_update_linked_service_non_existent", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_linked_service_exists"], ["hook", "update_linked_service", "user_args"]], "sdk_args": [], "user_args": [["hook", "update_linked_service", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.2978264464846223], ["Dict[str, str]", 0.10332106464589211], ["zerver.models.Client", 0.09832836571536788], ["zerver.models.UserProfile", 0.09832836571536788]], "kwargs": [], "sdk_args": [["unittesmock.MagicMock", 0.4486270371800238], ["core.models.Recipe", 0.09456996657697649], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.0903219937026128], ["int", 0.0805754488431845]], "user_args": [["bool", 0.41740117619130235], ["Optional[str]", 0.11509710883518146], ["zerver.models.UserProfile", 0.08850042468470432]]}, "q_name": "test_update_linked_service_non_existent", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.17625085664281143], ["List[str]", 0.1662229394463884], ["Tuple[int, int]", 0.11204913043011736], ["Dict[str, Dict[str, Any]]", 0.10538226486435787], ["List[Tuple[str, str]]", 0.10272859148185871], ["Type[Dict[Any, Any]]", 0.0937107054950278], ["str", 0.0865069559142934], ["int", 0.07970262221216186], ["tests.mock.zwave.MockNode", 0.07744593351298318]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[297, 0], [300, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_linked_service", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "delete_linked_service", "user_args"], ["hook", "_conn", "linked_services", "delete", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "linked_services", "delete", "assert_called_with", "sdk_args"]], "user_args": [["hook", "delete_linked_service", "user_args"]]}, "params_p": {"args": [], "hook": [["Callable", 0.0902076423638254]], "kwargs": [], "sdk_args": [["bool", 0.10166689915419998], ["models.user.User", 0.08546460605938103]], "user_args": [["bool", 0.43221794395639607], ["zerver.models.UserProfile", 0.10525954041428381], ["dict", 0.09858232890641783], ["str", 0.09858232890641783], ["Optional[str]", 0.08788355158607122]]}, "q_name": "test_delete_linked_service", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[307, 0], [310, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_dataset", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "get_dataset", "user_args"], ["hook", "_conn", "datasets", "get", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "datasets", "get", "assert_called_with", "sdk_args"]], "user_args": [["hook", "get_dataset", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.19718721465572797]], "kwargs": [], "sdk_args": [["raiden.utils.Address", 0.11246490844379498], ["zerver.models.UserProfile", 0.1013175203587338], ["set", 0.08986716843564604], ["utils.clienClient", 0.08688714298798143]], "user_args": [["raiden.utils.TokenAmount", 0.1914657029965688], ["int", 0.16948090048647685], ["django.contrib.auth.models.User", 0.12129524864557376], ["deeplearning.ml4pl.models.logger.Logger", 0.1005915907133265]]}, "q_name": "test_get_dataset", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[317, 0], [320, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_dataset", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "create_dataset", "user_args"], ["hook", "_conn", "datasets", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "datasets", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "create_dataset", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.3053519046299082], ["salon.models.Stylist", 0.112897073296415], ["core.models.Recipe", 0.08781309263405196]], "kwargs": [], "sdk_args": [["accounts.models.User", 0.1440200395805466], ["excars.models.user.User", 0.09827726703220312], ["str", 0.08981875976112719]], "user_args": [["List[str]", 0.19697588811545566], ["bool", 0.09017007331259695], ["str", 0.08471843800982387]]}, "q_name": "test_create_dataset", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[327, 0], [332, 70]], "fn_var_ln": {"return_value": [[329, 8], [329, 40]]}, "fn_var_occur": {"return_value": [["mock_dataset_exists", "return_value", "True"]]}, "name": "test_update_dataset", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_dataset_exists"], ["hook", "update_dataset", "user_args"], ["hook", "_conn", "datasets", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "datasets", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "update_dataset", "user_args"]]}, "params_p": {"args": [], "hook": [["zerver.models.UserProfile", 0.08502193453939681]], "kwargs": [], "sdk_args": [["bool", 0.17974091429682032], ["accounts.models.User", 0.14585275172388162], ["excars.models.user.User", 0.1034449048031822]], "user_args": [["Optional[Tuple[float, float]]", 0.10813009931175885], ["Optional[zerver.models.Realm]", 0.09983395198614288], ["tracim.models.auth.User", 0.09249170988127303], ["pyppeteer.connection.CDPSession", 0.09240271740478527], ["connection.ClientType", 0.09133164718035389], ["raiden.utils.AddressHex", 0.08404194644589544]]}, "q_name": "test_update_dataset", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.16029958167037964], ["List[str]", 0.14553720445254295], ["Optional[bytes]", 0.12694362101953677], ["str", 0.11176311340731358], ["Tuple[int, int]", 0.09377314312562458], ["int", 0.07926586939411204], ["Dict[str, Dict[str, Any]]", 0.06948960229955532]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[339, 0], [344, 39]], "fn_var_ln": {"return_value": [[341, 8], [341, 40]]}, "fn_var_occur": {"return_value": [["mock_dataset_exists", "return_value", "False"]]}, "name": "test_update_dataset_non_existent", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_dataset_exists"], ["hook", "update_dataset", "user_args"]], "sdk_args": [], "user_args": [["hook", "update_dataset", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.11911934631322005], ["zerver.models.UserProfile", 0.10740664946897392], ["List[str]", 0.0894899006185434], ["str", 0.0837197917957972]], "kwargs": [], "sdk_args": [["unittesmock.MagicMock", 0.4338413125860049], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.10432733101273303], ["int", 0.07023563636587815], ["List[List[int]]", 0.06488647653270929]], "user_args": [["Optional[Tuple[float, float]]", 0.11428920424255168], ["pyppeteer.connection.CDPSession", 0.09733445004775346], ["connection.ClientType", 0.09323879657580346], ["Optional[zerver.models.Realm]", 0.08963480153158154], ["raiden.utils.AddressHex", 0.08800845939175914], ["tracim.models.auth.User", 0.08265714107209282]]}, "q_name": "test_update_dataset_non_existent", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.32734597058835074], ["Dict[str, Dict[str, Any]]", 0.1580116078228232], ["float", 0.14163793755070184], ["Dict[str, Union[Any, int]]", 0.0840377256230441], ["list", 0.08311870144653177], ["set", 0.07561662443219579], ["int", 0.06772012563800678], ["raiden.utils.Any", 0.06251130689834584]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[351, 0], [354, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_dataset", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "delete_dataset", "user_args"], ["hook", "_conn", "datasets", "delete", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "datasets", "delete", "assert_called_with", "sdk_args"]], "user_args": [["hook", "delete_dataset", "user_args"]]}, "params_p": {"args": [], "hook": [["models.Station", 0.11413604729161142]], "kwargs": [], "sdk_args": [["accounts.models.User", 0.14866344144005186], ["raiden.utils.List[raiden.utils.TokenAddress]", 0.08879636112743311]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.09016516477288165]]}, "q_name": "test_delete_dataset", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[361, 0], [364, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_dataflow", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "get_dataflow", "user_args"], ["hook", "_conn", "data_flows", "get", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "data_flows", "get", "assert_called_with", "sdk_args"]], "user_args": [["hook", "get_dataflow", "user_args"]]}, "params_p": {"args": [], "hook": [["List[server.models.Reservation]", 0.18323441607263372], ["raiden.utils.TokenNetworkID", 0.12847218232712207], ["django.contrib.auth.models.User", 0.09338982800366026]], "kwargs": [], "sdk_args": [["raiden.utils.Address", 0.11958328903150015], ["bool", 0.0929497401580444], ["django.contrib.auth.models.User", 0.09043591222275163]], "user_args": [["raiden.utils.TokenAmount", 0.1914657029965688], ["int", 0.16948090048647685], ["django.contrib.auth.models.User", 0.12129524864557376], ["deeplearning.ml4pl.models.logger.Logger", 0.1005915907133265]]}, "q_name": "test_get_dataflow", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[371, 0], [374, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_dataflow", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "create_dataflow", "user_args"], ["hook", "_conn", "data_flows", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "data_flows", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "create_dataflow", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.2990361729510197], ["salon.models.Stylist", 0.11134248092046294], ["core.models.Recipe", 0.09056617366780813]], "kwargs": [], "sdk_args": [["dict", 0.21727077215139465], ["str", 0.0925016580023427], ["Dict[str, Any]", 0.0925016580023427]], "user_args": [["List[str]", 0.19697588811545566], ["bool", 0.09017007331259695], ["str", 0.08471843800982387]]}, "q_name": "test_create_dataflow", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[381, 0], [386, 72]], "fn_var_ln": {"return_value": [[383, 8], [383, 41]]}, "fn_var_occur": {"return_value": [["mock_dataflow_exists", "return_value", "True"]]}, "name": "test_update_dataflow", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_dataflow_exists"], ["hook", "update_dataflow", "user_args"], ["hook", "_conn", "data_flows", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "data_flows", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "update_dataflow", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.11728761968264712], ["zerver.models.UserProfile", 0.10556527449011874], ["lunch_buddies.models.polls.Choice", 0.08397687314945113]], "kwargs": [], "sdk_args": [["dict", 0.2157375158993609]], "user_args": [["Optional[Tuple[float, float]]", 0.10813009931175885], ["Optional[zerver.models.Realm]", 0.09983395198614288], ["tracim.models.auth.User", 0.09249170988127303], ["pyppeteer.connection.CDPSession", 0.09240271740478527], ["connection.ClientType", 0.09133164718035389], ["raiden.utils.AddressHex", 0.08404194644589544]]}, "q_name": "test_update_dataflow", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.16029958167037964], ["List[str]", 0.14553720445254295], ["Optional[bytes]", 0.12694362101953677], ["str", 0.11176311340731358], ["Tuple[int, int]", 0.09377314312562458], ["int", 0.07926586939411204], ["Dict[str, Dict[str, Any]]", 0.06948960229955532]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[393, 0], [398, 40]], "fn_var_ln": {"return_value": [[395, 8], [395, 41]]}, "fn_var_occur": {"return_value": [["mock_dataflow_exists", "return_value", "False"]]}, "name": "test_update_dataflow_non_existent", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_dataflow_exists"], ["hook", "update_dataflow", "user_args"]], "sdk_args": [], "user_args": [["hook", "update_dataflow", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.11911934631322005], ["zerver.models.UserProfile", 0.10740664946897392], ["List[str]", 0.0894899006185434], ["str", 0.0837197917957972]], "kwargs": [], "sdk_args": [["unittesmock.MagicMock", 0.4338413125860049], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.10432733101273303], ["int", 0.07023563636587815], ["List[List[int]]", 0.06488647653270929]], "user_args": [["Optional[Tuple[float, float]]", 0.11428920424255168], ["pyppeteer.connection.CDPSession", 0.09733445004775346], ["connection.ClientType", 0.09323879657580346], ["Optional[zerver.models.Realm]", 0.08963480153158154], ["raiden.utils.AddressHex", 0.08800845939175914], ["tracim.models.auth.User", 0.08265714107209282]]}, "q_name": "test_update_dataflow_non_existent", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.32734597058835074], ["Dict[str, Dict[str, Any]]", 0.1580116078228232], ["float", 0.14163793755070184], ["Dict[str, Union[Any, int]]", 0.0840377256230441], ["list", 0.08311870144653177], ["set", 0.07561662443219579], ["int", 0.06772012563800678], ["raiden.utils.Any", 0.06251130689834584]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[412, 0], [415, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_dataflow", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "delete_dataflow", "user_args"], ["hook", "_conn", "data_flows", "delete", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "data_flows", "delete", "assert_called_with", "sdk_args"]], "user_args": [["hook", "delete_dataflow", "user_args"]]}, "params_p": {"args": [], "hook": [], "kwargs": [], "sdk_args": [["bool", 0.10085806723910885]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.09016516477288165]]}, "q_name": "test_delete_dataflow", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[422, 0], [425, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_pipeline", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "get_pipeline", "user_args"], ["hook", "_conn", "pipelines", "get", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "pipelines", "get", "assert_called_with", "sdk_args"]], "user_args": [["hook", "get_pipeline", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.2938677902685587]], "kwargs": [], "sdk_args": [["set", 0.2249750467762368], ["zerver.models.UserProfile", 0.08246746379769929]], "user_args": [["raiden.utils.TokenAmount", 0.1914657029965688], ["int", 0.16948090048647685], ["django.contrib.auth.models.User", 0.12129524864557376], ["deeplearning.ml4pl.models.logger.Logger", 0.1005915907133265]]}, "q_name": "test_get_pipeline", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[432, 0], [435, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_pipeline", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "create_pipeline", "user_args"], ["hook", "_conn", "pipelines", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "pipelines", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "create_pipeline", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.40828188691406603], ["salon.models.Stylist", 0.09647606885537714]], "kwargs": [], "sdk_args": [["str", 0.13236602312771023], ["core_lib.core.models.Event", 0.10627790046077866], ["raiden.utils.Address", 0.07593491932073304], ["mock.MagicMock", 0.07380652933852956]], "user_args": [["List[str]", 0.19697588811545566], ["bool", 0.09017007331259695], ["str", 0.08471843800982387]]}, "q_name": "test_create_pipeline", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[442, 0], [447, 71]], "fn_var_ln": {"return_value": [[444, 8], [444, 41]]}, "fn_var_occur": {"return_value": [["mock_pipeline_exists", "return_value", "True"]]}, "name": "test_update_pipeline", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_pipeline_exists"], ["hook", "update_pipeline", "user_args"], ["hook", "_conn", "pipelines", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "pipelines", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "update_pipeline", "user_args"]]}, "params_p": {"args": [], "hook": [["db.Db", 0.095049176740487], ["core.models.MyUser", 0.08998354580403065], ["app.models.dto.NewUserRequest", 0.0867823664947572]], "kwargs": [], "sdk_args": [["str", 0.13051314537809713], ["core_lib.core.models.Event", 0.10780323583169145], ["raiden.utils.Address", 0.07521655395792567], ["mock.MagicMock", 0.07078112272613123]], "user_args": [["Optional[Tuple[float, float]]", 0.10813009931175885], ["Optional[zerver.models.Realm]", 0.09983395198614288], ["tracim.models.auth.User", 0.09249170988127303], ["pyppeteer.connection.CDPSession", 0.09240271740478527], ["connection.ClientType", 0.09133164718035389], ["raiden.utils.AddressHex", 0.08404194644589544]]}, "q_name": "test_update_pipeline", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.16029958167037964], ["List[str]", 0.14553720445254295], ["Optional[bytes]", 0.12694362101953677], ["str", 0.11176311340731358], ["Tuple[int, int]", 0.09377314312562458], ["int", 0.07926586939411204], ["Dict[str, Dict[str, Any]]", 0.06948960229955532]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[454, 0], [459, 40]], "fn_var_ln": {"return_value": [[456, 8], [456, 41]]}, "fn_var_occur": {"return_value": [["mock_pipeline_exists", "return_value", "False"]]}, "name": "test_update_pipeline_non_existent", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_pipeline_exists"], ["hook", "update_pipeline", "user_args"]], "sdk_args": [], "user_args": [["hook", "update_pipeline", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.11911934631322005], ["zerver.models.UserProfile", 0.10740664946897392], ["List[str]", 0.0894899006185434], ["str", 0.0837197917957972]], "kwargs": [], "sdk_args": [["unittesmock.MagicMock", 0.4338413125860049], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.10432733101273303], ["int", 0.07023563636587815], ["List[List[int]]", 0.06488647653270929]], "user_args": [["Optional[Tuple[float, float]]", 0.11428920424255168], ["pyppeteer.connection.CDPSession", 0.09733445004775346], ["connection.ClientType", 0.09323879657580346], ["Optional[zerver.models.Realm]", 0.08963480153158154], ["raiden.utils.AddressHex", 0.08800845939175914], ["tracim.models.auth.User", 0.08265714107209282]]}, "q_name": "test_update_pipeline_non_existent", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.32734597058835074], ["Dict[str, Dict[str, Any]]", 0.1580116078228232], ["float", 0.14163793755070184], ["Dict[str, Union[Any, int]]", 0.0840377256230441], ["list", 0.08311870144653177], ["set", 0.07561662443219579], ["int", 0.06772012563800678], ["raiden.utils.Any", 0.06251130689834584]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[466, 0], [469, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_pipeline", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "delete_pipeline", "user_args"], ["hook", "_conn", "pipelines", "delete", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "pipelines", "delete", "assert_called_with", "sdk_args"]], "user_args": [["hook", "delete_pipeline", "user_args"]]}, "params_p": {"args": [], "hook": [], "kwargs": [], "sdk_args": [["unittesmock.MagicMock", 0.09624173698390767], ["dict", 0.08854063422629825]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.09016516477288165]]}, "q_name": "test_delete_pipeline", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[476, 0], [479, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_run_pipeline", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "run_pipeline", "user_args"], ["hook", "_conn", "pipelines", "create_run", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "pipelines", "create_run", "assert_called_with", "sdk_args"]], "user_args": [["hook", "run_pipeline", "user_args"]]}, "params_p": {"args": [], "hook": [["Dict[str, Any]", 0.09085619292159561]], "kwargs": [], "sdk_args": [["int", 0.17504465201385278], ["core_lib.core.models.Event", 0.11163651250851407], ["str", 0.11038026233966497], ["app.models.user.User", 0.10209437705641322], ["models.characters.character_base.Character", 0.08347731968148812]], "user_args": [["str", 0.24362616496061906], ["bool", 0.16085853056579197], ["zerver.models.UserProfile", 0.12181308248030953], ["Mapping[str, Any]", 0.12181308248030953], ["Optional[str]", 0.08970570045021158]]}, "q_name": "test_run_pipeline", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[486, 0], [489, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_pipeline_run", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "get_pipeline_run", "user_args"], ["hook", "_conn", "pipeline_runs", "get", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "pipeline_runs", "get", "assert_called_with", "sdk_args"]], "user_args": [["hook", "get_pipeline_run", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.09630123396167031], ["asgard.models.job.ScheduledJob", 0.09458572638129523]], "kwargs": [], "sdk_args": [["raiden.utils.Address", 0.11542843882597063], ["bool", 0.09058609961092148]], "user_args": [["dict", 0.11977978588596082], ["str", 0.11977978588596082], ["deeplearning.ml4pl.models.logger.Logger", 0.10041448714615196], ["Dict[str, Any]", 0.08445505475382127]]}, "q_name": "test_get_pipeline_run", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[515, 0], [525, 59]], "fn_var_ln": {"config": [[516, 4], [516, 10]]}, "fn_var_occur": {"config": [["config", "ID", "expected_status"], ["hook", "wait_for_pipeline_run_status", "config", "expected_output"], ["hook", "wait_for_pipeline_run_status", "config"]]}, "name": "test_wait_for_pipeline_run_status", "params": {"expected_output": "", "expected_status": "", "hook": "", "pipeline_run_status": ""}, "params_descr": {"expected_output": "", "expected_status": "", "hook": "", "pipeline_run_status": ""}, "params_occur": {"expected_output": [["hook", "wait_for_pipeline_run_status", "config", "expected_output"]], "expected_status": [["config", "ID", "expected_status"]], "hook": [["hook", "wait_for_pipeline_run_status", "config", "expected_output"], ["hook", "wait_for_pipeline_run_status", "config"]], "pipeline_run_status": [["mock_pipeline_run", "return_value", "status", "pipeline_run_status"]]}, "params_p": {"args": [], "expected_output": [["str", 0.08736230781052795]], "expected_status": [["str", 0.30246835932033317], ["dict", 0.10912943628990636], ["Tuple[int, int]", 0.10340412187854923], ["bool", 0.1012843143554551]], "hook": [["lunch_buddies.models.teams.Team", 0.10480284040931656], ["str", 0.10229917783811111]], "kwargs": [], "pipeline_run_status": [["str", 0.10651525266643028], ["bool", 0.09997657976792954], ["zerver.models.UserProfile", 0.0949876136108918]]}, "q_name": "test_wait_for_pipeline_run_status", "ret_exprs": [], "ret_type": "", "variables": {"config": ""}, "variables_p": {"config": [["Final", 0.3529526938795504], ["Dict[str, str]", 0.09720069902610953], ["Dict[str, Union[Any, str]]", 0.07349163705821017], ["Dict[str, Dict[str, Any]]", 0.07115266793977908]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[532, 0], [535, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cancel_pipeline_run", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "cancel_pipeline_run", "user_args"], ["hook", "_conn", "pipeline_runs", "cancel", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "pipeline_runs", "cancel", "assert_called_with", "sdk_args"]], "user_args": [["hook", "cancel_pipeline_run", "user_args"]]}, "params_p": {"args": [], "hook": [["raiden.utils.Address", 0.0962433047611161]], "kwargs": [], "sdk_args": [["bool", 0.11106531350533017]], "user_args": [["Callable[[List, bool], None]", 0.4576080430320191]]}, "q_name": "test_cancel_pipeline_run", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[542, 0], [545, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "get_trigger", "user_args"], ["hook", "_conn", "triggers", "get", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "triggers", "get", "assert_called_with", "sdk_args"]], "user_args": [["hook", "get_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.19718721465572797]], "kwargs": [], "sdk_args": [["raiden.utils.Address", 0.11246490844379498], ["zerver.models.UserProfile", 0.1013175203587338], ["set", 0.08986716843564604], ["utils.clienClient", 0.08688714298798143]], "user_args": [["raiden.utils.TokenAmount", 0.1914657029965688], ["int", 0.16948090048647685], ["django.contrib.auth.models.User", 0.12129524864557376], ["deeplearning.ml4pl.models.logger.Logger", 0.1005915907133265]]}, "q_name": "test_get_trigger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[552, 0], [555, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "create_trigger", "user_args"], ["hook", "_conn", "triggers", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "triggers", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "create_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [["str", 0.3053519046299082], ["salon.models.Stylist", 0.112897073296415], ["core.models.Recipe", 0.08781309263405196]], "kwargs": [], "sdk_args": [["accounts.models.User", 0.1440200395805466], ["excars.models.user.User", 0.09827726703220312], ["str", 0.08981875976112719]], "user_args": [["List[str]", 0.19697588811545566], ["bool", 0.09017007331259695], ["str", 0.08471843800982387]]}, "q_name": "test_create_trigger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[562, 0], [567, 70]], "fn_var_ln": {"return_value": [[564, 8], [564, 40]]}, "fn_var_occur": {"return_value": [["mock_trigger_exists", "return_value", "True"]]}, "name": "test_update_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_trigger_exists"], ["hook", "update_trigger", "user_args"], ["hook", "_conn", "triggers", "create_or_update", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "triggers", "create_or_update", "assert_called_with", "sdk_args"]], "user_args": [["hook", "update_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [["zerver.models.UserProfile", 0.08502193453939681]], "kwargs": [], "sdk_args": [["bool", 0.17974091429682032], ["accounts.models.User", 0.14585275172388162], ["excars.models.user.User", 0.1034449048031822]], "user_args": [["Optional[Tuple[float, float]]", 0.10813009931175885], ["Optional[zerver.models.Realm]", 0.09983395198614288], ["tracim.models.auth.User", 0.09249170988127303], ["pyppeteer.connection.CDPSession", 0.09240271740478527], ["connection.ClientType", 0.09133164718035389], ["raiden.utils.AddressHex", 0.08404194644589544]]}, "q_name": "test_update_trigger", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.16029958167037964], ["List[str]", 0.14553720445254295], ["Optional[bytes]", 0.12694362101953677], ["str", 0.11176311340731358], ["Tuple[int, int]", 0.09377314312562458], ["int", 0.07926586939411204], ["Dict[str, Dict[str, Any]]", 0.06948960229955532]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[574, 0], [579, 39]], "fn_var_ln": {"return_value": [[576, 8], [576, 40]]}, "fn_var_occur": {"return_value": [["mock_trigger_exists", "return_value", "False"]]}, "name": "test_update_trigger_non_existent", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_trigger_exists"], ["hook", "update_trigger", "user_args"]], "sdk_args": [], "user_args": [["hook", "update_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [["asgard.models.accounAccount", 0.11911934631322005], ["zerver.models.UserProfile", 0.10740664946897392], ["List[str]", 0.0894899006185434], ["str", 0.0837197917957972]], "kwargs": [], "sdk_args": [["unittesmock.MagicMock", 0.4338413125860049], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.10432733101273303], ["int", 0.07023563636587815], ["List[List[int]]", 0.06488647653270929]], "user_args": [["Optional[Tuple[float, float]]", 0.11428920424255168], ["pyppeteer.connection.CDPSession", 0.09733445004775346], ["connection.ClientType", 0.09323879657580346], ["Optional[zerver.models.Realm]", 0.08963480153158154], ["raiden.utils.AddressHex", 0.08800845939175914], ["tracim.models.auth.User", 0.08265714107209282]]}, "q_name": "test_update_trigger_non_existent", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.32734597058835074], ["Dict[str, Dict[str, Any]]", 0.1580116078228232], ["float", 0.14163793755070184], ["Dict[str, Union[Any, int]]", 0.0840377256230441], ["list", 0.08311870144653177], ["set", 0.07561662443219579], ["int", 0.06772012563800678], ["raiden.utils.Any", 0.06251130689834584]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[586, 0], [589, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "delete_trigger", "user_args"], ["hook", "_conn", "triggers", "delete", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "triggers", "delete", "assert_called_with", "sdk_args"]], "user_args": [["hook", "delete_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [["models.Station", 0.11413604729161142]], "kwargs": [], "sdk_args": [["accounts.models.User", 0.14866344144005186], ["raiden.utils.List[raiden.utils.TokenAddress]", 0.08879636112743311]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.09016516477288165]]}, "q_name": "test_delete_trigger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[596, 0], [599, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_start_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "start_trigger", "user_args"], ["hook", "_conn", "triggers", "begin_start", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "triggers", "begin_start", "assert_called_with", "sdk_args"]], "user_args": [["hook", "start_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [["rotkehlchen.db.dbhandler.DBHandler", 0.08975342703309618], ["Optional[Mapping]", 0.08894974470303889]], "kwargs": [], "sdk_args": [], "user_args": [["raiden.utils.ChannelID", 0.10307679589002548], ["django.contrib.auth.models.User", 0.10248384441638396], ["List[domain.models.User]", 0.10050474108170057], ["deeplearning.ml4pl.models.logger.Logger", 0.09913252906690187], ["str", 0.09064490253961995], ["List[str]", 0.08796952270966053]]}, "q_name": "test_start_trigger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[606, 0], [609, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_stop_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "stop_trigger", "user_args"], ["hook", "_conn", "triggers", "begin_stop", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "triggers", "begin_stop", "assert_called_with", "sdk_args"]], "user_args": [["hook", "stop_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [], "kwargs": [], "sdk_args": [["bool", 0.1148813516236077], ["float", 0.08733785026081431]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.20501441692913974]]}, "q_name": "test_stop_trigger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[616, 0], [619, 63]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rerun_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "rerun_trigger", "user_args"], ["hook", "_conn", "trigger_runs", "rerun", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "trigger_runs", "rerun", "assert_called_with", "sdk_args"]], "user_args": [["hook", "rerun_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [], "kwargs": [], "sdk_args": [["bool", 0.1148813516236077], ["float", 0.08733785026081431]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.20501441692913974]]}, "q_name": "test_rerun_trigger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[626, 0], [629, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cancel_trigger", "params": {"hook": "airflow.providers.microsoft.azure.hooks.data_factory.AzureDataFactoryHook", "sdk_args": "", "user_args": ""}, "params_descr": {"hook": "", "sdk_args": "", "user_args": ""}, "params_occur": {"hook": [["hook", "cancel_trigger", "user_args"], ["hook", "_conn", "trigger_runs", "cancel", "assert_called_with", "sdk_args"]], "sdk_args": [["hook", "_conn", "trigger_runs", "cancel", "assert_called_with", "sdk_args"]], "user_args": [["hook", "cancel_trigger", "user_args"]]}, "params_p": {"args": [], "hook": [], "kwargs": [], "sdk_args": [["bool", 0.1148813516236077], ["float", 0.08733785026081431]], "user_args": [["deeplearning.ml4pl.models.logger.Logger", 0.20501441692913974]]}, "q_name": "test_cancel_trigger", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[637, 0], [642, 65]], "fn_var_ln": {"msg": [[639, 12], [639, 15]], "status": [[639, 4], [639, 10]]}, "fn_var_occur": {"msg": [["status", "msg", "hook", "test_connection"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "True"]]}, "name": "test_connection_success", "params": {"factory_list_result": "", "hook": ""}, "params_descr": {"factory_list_result": "", "hook": ""}, "params_occur": {"factory_list_result": [["hook", "get_conn", "factories", "list", "return_value", "factory_list_result"]], "hook": [["hook", "get_conn", "factories", "list", "return_value", "factory_list_result"], ["status", "msg", "hook", "test_connection"]]}, "params_p": {"args": [], "factory_list_result": [["str", 0.09863549921795162], ["app.models.dto.ClientInfo", 0.09815013027107967], ["app.models.Game", 0.09593039132216427]], "hook": [["app.models.Game", 0.12225034625290927], ["str", 0.09094915280294763]], "kwargs": []}, "q_name": "test_connection_success", "ret_exprs": [], "ret_type": "", "variables": {"msg": "", "status": ""}, "variables_p": {"msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "status": [["str", 0.8070705504286348], ["Dict[str, str]", 0.10742002232739085], ["Optional[str]", 0.08550942724397416]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[645, 0], [650, 42]], "fn_var_ln": {"msg": [[647, 12], [647, 15]], "status": [[647, 4], [647, 10]]}, "fn_var_occur": {"msg": [["status", "msg", "hook", "test_connection"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "False"]]}, "name": "test_connection_failure", "params": {"hook": ""}, "params_descr": {"hook": ""}, "params_occur": {"hook": [["hook", "get_conn", "factories", "list", "PropertyMock", "side_effect", "Exception"], ["status", "msg", "hook", "test_connection"]]}, "params_p": {"args": [], "hook": [], "kwargs": []}, "q_name": "test_connection_failure", "ret_exprs": [], "ret_type": "", "variables": {"msg": "", "status": ""}, "variables_p": {"msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "status": [["int", 0.5965902263708184], ["str", 0.09504299251503023]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[653, 0], [658, 83]], "fn_var_ln": {"hook": [[654, 4], [654, 8]], "msg": [[655, 12], [655, 15]], "status": [[655, 4], [655, 10]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryHook"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "False"]]}, "name": "test_connection_failure_missing_subscription_id", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_connection_failure_missing_subscription_id", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "msg": "", "status": ""}, "variables_p": {"hook": [["str", 0.47174774914150924], ["List[str]", 0.17443713387387977], ["Union[Literal, str]", 0.14509270628130655]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "status": [["int", 0.5965902263708184], ["str", 0.09504299251503023]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[661, 0], [666, 90]], "fn_var_ln": {"hook": [[662, 4], [662, 8]], "msg": [[663, 12], [663, 15]], "status": [[663, 4], [663, 10]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryHook"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "False"]]}, "name": "test_connection_failure_missing_tenant_id", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_connection_failure_missing_tenant_id", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "msg": "", "status": ""}, "variables_p": {"hook": [["str", 0.47174774914150924], ["List[str]", 0.17443713387387977], ["Union[Literal, str]", 0.14509270628130655]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "status": [["int", 0.5965902263708184], ["str", 0.09504299251503023]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[681, 0], [685, 83]], "fn_var_ln": {"hook": [[683, 8], [683, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryHook"], ["hook", "delete_factory"]]}, "name": "test_provide_targeted_factory_backcompat_prefix_works", "params": {"mock_connect": "", "uri": ""}, "params_descr": {"mock_connect": "", "uri": ""}, "params_occur": {"mock_connect": [["mock_connect", "return_value", "factories", "delete", "assert_called_with"]], "uri": [["patch", "dict", "os", "environ", "uri"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["unittesmock.MagicMock", 0.5879336090280929]], "uri": [["unittesmock.MagicMock", 0.16371253138091252]]}, "q_name": "test_provide_targeted_factory_backcompat_prefix_works", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["Dict[str, Union[Any, Any]]", 0.9999999999411803], ["str", 2.0047744748339186e-11], ["Tuple[Literal, Literal]", 7.125627640324509e-12]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[701, 0], [706, 69]], "fn_var_ln": {"hook": [[703, 8], [703, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryHook"], ["hook", "get_conn"]]}, "name": "test_get_conn_backcompat_prefix_works", "params": {"mock_create": "", "mock_cred": "", "uri": ""}, "params_descr": {"mock_create": "", "mock_cred": "", "uri": ""}, "params_occur": {"mock_create": [["mock_create", "assert_called_with", "mock_cred", "return_value"]], "mock_cred": [["mock_cred", "assert_called_with", "client_id", "client_secret", "tenant_id"], ["mock_create", "assert_called_with", "mock_cred", "return_value"]], "uri": [["patch", "dict", "os", "environ", "uri"]]}, "params_p": {"args": [], "kwargs": [], "mock_create": [["unittesmock.MagicMock", 0.7873955925242694]], "mock_cred": [["unittesmock.MagicMock", 0.6967180574425966]], "uri": [["unittesmock.MagicMock", 0.2063228991512153], ["core.models.Recipe", 0.09950723741111435]]}, "q_name": "test_get_conn_backcompat_prefix_works", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.5989734195779081], ["Dict[str, str]", 0.1403831385715331], ["int", 0.08688114728351956]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[710, 0], [720, 92]], "fn_var_ln": {"hook": [[718, 8], [718, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataFactoryHook"], ["hook", "delete_factory", "factory_name"]]}, "name": "test_backcompat_prefix_both_prefers_short", "params": {"mock_connect": ""}, "params_descr": {"mock_connect": ""}, "params_occur": {"mock_connect": [["mock_connect", "return_value", "factories", "delete", "assert_called_with"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["unittesmock.MagicMock", 0.5879336090280929]]}, "q_name": "test_backcompat_prefix_both_prefers_short", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.3994626781879306], ["list", 0.19719572456493678], ["int", 0.10905404461509118], ["unittesmock.MagicMock", 0.1040082518663002], ["Dict[str, str]", 0.0979972855410017], ["Tuple[Any, Any]", 0.09228201522473962]]}}, {"docstring": {"func": "Test refresh_conn method _conn is reset and get_conn is called", "long_descr": null, "ret": null}, "fn_lc": [[723, 0], [728, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_refresh_conn", "params": {"hook": ""}, "params_descr": {"hook": ""}, "params_occur": {"hook": [["patch", "object", "hook", "mock_get_conn"], ["hook", "refresh_conn"], ["hook", "_conn"]]}, "params_p": {"args": [], "hook": [["str", 0.09311662125683998]], "kwargs": []}, "q_name": "test_refresh_conn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "json", "os", "unittest", "mock", "unittest", "mock", "MagicMock", "PropertyMock", "patch", "pytest", "azure", "identity", "ClientSecretCredential", "DefaultAzureCredential", "azure", "mgmt", "datafactory", "aio", "DataFactoryManagementClient", "azure", "mgmt", "datafactory", "models", "FactoryListResponse", "pytest", "fixture", "param", "airflow", "AirflowException", "airflow", "models", "connection", "Connection", "airflow", "providers", "microsoft", "azure", "hooks", "data_factory", "AzureDataFactoryAsyncHook", "AzureDataFactoryHook", "AzureDataFactoryPipelineRunException", "AzureDataFactoryPipelineRunStatus", "get_field", "provide_targeted_factory", "airflow", "utils", "db"], "mod_var_ln": {"AZURE_DATA_FACTORY_CONN_ID": [[43, 0], [43, 26]], "DATAFACTORY_NAME": [[45, 0], [45, 16]], "DEFAULT_CONNECTION_CLIENT_SECRET": [[48, 0], [48, 32]], "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL": [[55, 0], [55, 37]], "DEFAULT_FACTORY": [[52, 0], [52, 15]], "DEFAULT_RESOURCE_GROUP": [[42, 0], [42, 22]], "FACTORY": [[53, 0], [53, 7]], "ID": [[59, 0], [59, 2]], "MODEL": [[57, 0], [57, 5]], "MODULE": [[49, 0], [49, 6]], "NAME": [[58, 0], [58, 4]], "RESOURCE_GROUP": [[51, 0], [51, 14]], "RESOURCE_GROUP_NAME": [[44, 0], [44, 19]], "RUN_ID": [[47, 0], [47, 6]], "TASK_ID": [[46, 0], [46, 7]], "_wait_for_pipeline_run_status_test_args": [[492, 0], [492, 39]]}, "mod_var_occur": {"AZURE_DATA_FACTORY_CONN_ID": [["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"], ["hook", "AzureDataFactoryAsyncHook", "AZURE_DATA_FACTORY_CONN_ID"]], "DATAFACTORY_NAME": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_connection", "Connection", "extra", "json", "dumps", "DATAFACTORY_NAME"], ["hook", "get_pipeline_run", "RUN_ID", "None", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["get_field", "extras", "strict", "True", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["get_field", "extras", "strict", "True", "DATAFACTORY_NAME"]], "DEFAULT_CONNECTION_CLIENT_SECRET": [["connection_client_secret", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["client", "AzureDataFactoryHook", "azure_data_factory_conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "mock_connection_params"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "mock_connection_params"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"]], "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL": [["connection_default_credential", "Connection", "conn_id", "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL", "conn_type", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"]], "DEFAULT_FACTORY": [["connection_client_secret", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["connection_default_credential", "Connection", "conn_id", "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL", "conn_type", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["connection_missing_subscription_id", "Connection", "conn_id", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["connection_missing_tenant_id", "Connection", "conn_id", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["conn", "extra_dejson", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook", "RESOURCE_GROUP", "None", "RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook", "None", "None", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"]], "DEFAULT_RESOURCE_GROUP": [["connection_client_secret", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["connection_default_credential", "Connection", "conn_id", "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL", "conn_type", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["connection_missing_subscription_id", "Connection", "conn_id", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["connection_missing_tenant_id", "Connection", "conn_id", "conn_type", "login", "password", "extra", "json", "dumps", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["conn", "extra_dejson", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"], ["provide_targeted_factory", "echo", "hook", "None", "FACTORY", "DEFAULT_RESOURCE_GROUP", "FACTORY"], ["provide_targeted_factory", "echo", "hook", "None", "None", "DEFAULT_RESOURCE_GROUP", "DEFAULT_FACTORY"]], "FACTORY": [["provide_targeted_factory", "echo", "hook", "RESOURCE_GROUP", "FACTORY", "RESOURCE_GROUP", "FACTORY"], ["provide_targeted_factory", "echo", "hook", "None", "FACTORY", "DEFAULT_RESOURCE_GROUP", "FACTORY"]], "ID": [["config", "ID", "expected_status"]], "MODEL": [], "MODULE": [], "NAME": [], "RESOURCE_GROUP": [["provide_targeted_factory", "echo", "hook", "RESOURCE_GROUP", "FACTORY", "RESOURCE_GROUP", "FACTORY"], ["provide_targeted_factory", "echo", "hook", "RESOURCE_GROUP", "None", "RESOURCE_GROUP", "DEFAULT_FACTORY"]], "RESOURCE_GROUP_NAME": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "login", "password", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["get_field", "extras", "strict", "True", "RESOURCE_GROUP_NAME"], ["mock_conn", "Connection", "conn_id", "DEFAULT_CONNECTION_CLIENT_SECRET", "conn_type", "extra", "json", "dumps", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["get_field", "extras", "strict", "True", "RESOURCE_GROUP_NAME"]], "RUN_ID": [["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["response", "hook", "get_adf_pipeline_run_status", "RUN_ID", "RESOURCE_GROUP_NAME", "DATAFACTORY_NAME"], ["hook", "get_pipeline_run", "RUN_ID", "None", "DATAFACTORY_NAME"]], "TASK_ID": [], "_wait_for_pipeline_run_status_test_args": []}, "no_types_annot": {"D": 39, "I": 0, "U": 271}, "session_id": "yo1_B9vNx5NAfTgA012F4hvP00q6t8jVcSN9Ra57wuE", "set": null, "tc": [false, null], "type_annot_cove": 0.13, "typed_seq": "", "untyped_seq": "", "variables": {"AZURE_DATA_FACTORY_CONN_ID": "", "DATAFACTORY_NAME": "", "DEFAULT_CONNECTION_CLIENT_SECRET": "", "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL": "", "DEFAULT_FACTORY": "", "DEFAULT_RESOURCE_GROUP": "", "FACTORY": "", "ID": "", "MODEL": "", "MODULE": "", "NAME": "", "RESOURCE_GROUP": "", "RESOURCE_GROUP_NAME": "", "RUN_ID": "", "TASK_ID": "", "_wait_for_pipeline_run_status_test_args": ""}, "variables_p": {"AZURE_DATA_FACTORY_CONN_ID": [["List[Dict[str, Any]]", 0.11066851103341536], ["int", 0.09512641167987677], ["raiden.utils.Dict[str, raiden.utils.Any]", 0.09463628259800973], ["str", 0.09423332234810305], ["dict", 0.09223925335878724]], "DATAFACTORY_NAME": [["str", 0.6823022176463196], ["Optional[str]", 0.13535746027851245]], "DEFAULT_CONNECTION_CLIENT_SECRET": [["str", 0.8114981540776207]], "DEFAULT_CONNECTION_DEFAULT_CREDENTIAL": [["int", 0.36808892207617405], ["bool", 0.36808892207617405], ["str", 0.2638221558476518]], "DEFAULT_FACTORY": [["str", 0.31294716469070716], ["List[str]", 0.09487765956677634], ["int", 0.089532329606155]], "DEFAULT_RESOURCE_GROUP": [["str", 0.31294716469070716], ["List[str]", 0.09487765956677634], ["int", 0.089532329606155]], "FACTORY": [["src.pip_shims.models.ShimmedPathCollection", 0.11430846838617582], ["Iterator[Any]", 0.10626362515566852], ["rotkehlchen.db.dbhandler.DBHandler", 0.09120285414444822]], "ID": [["str", 0.4811908238540684], ["List[Optional[str]]", 0.16055277104831636], ["int", 0.14075071115307558], ["ImportError", 0.06877719027751518], ["Type[Dict[str, Any]]", 0.06870711037462457]], "MODEL": [["Type[apps.blog.models.Post]", 0.1], ["Type[ajapaik.ajapaik.models.GeoTag]", 0.1], ["Type[thanks_python.contributions.models.Commit]", 0.1], ["Type[expressmanage.customers.models.Customer]", 0.1], ["Type[data_capture.models.SubmittedPriceList]", 0.1], ["Type[users.models.User]", 0.1], ["Type[backend.main.models.models.Comment]", 0.1], ["Type[hypha.apply.categories.models.Category]", 0.1], ["Type[backend.seminars.models.SeminarComment]", 0.1]], "MODULE": [["str", 0.6000000000000001], ["property", 0.20000000000000004], ["list", 0.10000000000000002]], "NAME": [["str", 0.8999999999999999]], "RESOURCE_GROUP": [["src.pip_shims.models.ShimmedPathCollection", 0.13060073504448522], ["Iterator[Any]", 0.10668018577051509], ["nevergrad.benchmark.utils.Selector", 0.08535175212030469]], "RESOURCE_GROUP_NAME": [["str", 0.6690966356118047], ["Optional[str]", 0.14379513237211813], ["Dict[str, str]", 0.10256222990072247], ["Union[Literal, str]", 0.0845460021153547]], "RUN_ID": [["str", 0.5118095472123265], ["int", 0.28610633906369143], ["Optional[str]", 0.11137310691015292]], "TASK_ID": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "_wait_for_pipeline_run_status_test_args": [["int", 0.35909358589431783], ["str", 0.2365440523325621], ["Dict[int, str]", 0.09509196065691694], ["Dict[str, str]", 0.09509196065691694], ["List[str]", 0.07503778717225865], ["list", 0.07503778717225865]]}}}