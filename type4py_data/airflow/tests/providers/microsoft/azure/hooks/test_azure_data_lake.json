{"error": null, "response": {"classes": [{"cls_lc": [[33, 0], [157, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [43, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAzureDataLakeHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [55, 35]], "fn_var_ln": {"hook": [[51, 8], [51, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeHook", "azure_data_lake_conn_id"], ["hook", "_conn", "None"], ["hook", "conn_id"], ["isinstance", "hook", "get_conn", "core", "AzureDLFileSystem"]]}, "name": "test_conn", "params": {"mock_lib": "", "self": ""}, "params_descr": {"mock_lib": "", "self": ""}, "params_occur": {"mock_lib": [["mock_lib", "auth", "called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_lib": [["mock.Mock", 4.721543982704e-11], ["mock.MagicMock", 4.04551120243284e-11]], "self": []}, "q_name": "TestAzureDataLakeHook.test_conn", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.11436370408469723], ["Dict[str, str]", 0.08447654881605182]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [64, 35]], "fn_var_ln": {"hook": [[62, 8], [62, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeHook", "azure_data_lake_conn_id"], ["hook", "check_for_file"]]}, "name": "test_check_for_blob", "params": {"mock_filesystem": "", "mock_lib": "", "self": ""}, "params_descr": {"mock_filesystem": "", "mock_lib": "", "self": ""}, "params_occur": {"mock_filesystem": [["mock_filesystem", "glob", "called"]], "mock_lib": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_filesystem": [["scraper.storage.Storage", 0.18255134248638594], ["mock.MagicMock", 0.1027894429187702]], "mock_lib": [["mock.MagicMock", 0.07416483193477919], ["mock.Mock", 0.06740673989861126]], "self": []}, "q_name": "TestAzureDataLakeHook.test_check_for_blob", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4920896410216221], ["int", 0.1473316122024573], ["ddionrails.base.models.System", 0.09713928165135031], ["Dict[str, Dict[str, str]]", 0.09357665438357834], ["aws_sam_sample.storage.Account", 0.08845609624057425], ["Mapping", 0.08140671450041773]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [88, 9]], "fn_var_ln": {"hook": [[71, 8], [71, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeHook", "azure_data_lake_conn_id"], ["hook", "upload_file", "local_path", "remote_path", "nthreads", "overwrite", "True", "buffersize", "blocksize"], ["mock_uploader", "assert_called_once_with", "hook", "get_conn", "lpath", "rpath", "nthreads", "overwrite", "True", "buffersize", "blocksize"]]}, "name": "test_upload_file", "params": {"mock_lib": "", "mock_uploader": "", "self": ""}, "params_descr": {"mock_lib": "", "mock_uploader": "", "self": ""}, "params_occur": {"mock_lib": [], "mock_uploader": [["mock_uploader", "assert_called_once_with", "hook", "get_conn", "lpath", "rpath", "nthreads", "overwrite", "True", "buffersize", "blocksize"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_lib": [["mock.Mock", 0.2266577478248195], ["mock.MagicMock", 0.06947648562839394]], "mock_uploader": [], "self": []}, "q_name": "TestAzureDataLakeHook.test_upload_file", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.6996042512839259], ["int", 0.1001319162386914]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [112, 9]], "fn_var_ln": {"hook": [[95, 8], [95, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeHook", "azure_data_lake_conn_id"], ["hook", "download_file", "local_path", "remote_path", "nthreads", "overwrite", "True", "buffersize", "blocksize"], ["mock_downloader", "assert_called_once_with", "hook", "get_conn", "lpath", "rpath", "nthreads", "overwrite", "True", "buffersize", "blocksize"]]}, "name": "test_download_file", "params": {"mock_downloader": "", "mock_lib": "", "self": ""}, "params_descr": {"mock_downloader": "", "mock_lib": "", "self": ""}, "params_occur": {"mock_downloader": [["mock_downloader", "assert_called_once_with", "hook", "get_conn", "lpath", "rpath", "nthreads", "overwrite", "True", "buffersize", "blocksize"]], "mock_lib": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_downloader": [], "mock_lib": [["mock.Mock", 0.12086598958020936], ["mock.MagicMock", 0.0683742028109641]], "self": []}, "q_name": "TestAzureDataLakeHook.test_download_file", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.6996042512839259], ["int", 0.1001319162386914]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [121, 72]], "fn_var_ln": {"hook": [[119, 8], [119, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeHook", "azure_data_lake_conn_id"], ["hook", "list"]]}, "name": "test_list_glob", "params": {"mock_fs": "", "mock_lib": "", "self": ""}, "params_descr": {"mock_fs": "", "mock_lib": "", "self": ""}, "params_occur": {"mock_fs": [["mock_fs", "return_value", "glob", "assert_called_once_with"]], "mock_lib": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_fs": [], "mock_lib": [["mock.Mock", 0.21268927035726587]], "self": []}, "q_name": "TestAzureDataLakeHook.test_list_glob", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.6074796599643384], ["Dict[int, Dict[str, Any]]", 0.19585297580552083], ["int", 0.10029550612804775], ["bytes", 0.09637185810209299]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[125, 4], [130, 83]], "fn_var_ln": {"hook": [[128, 8], [128, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeHook", "azure_data_lake_conn_id"], ["hook", "list"]]}, "name": "test_list_walk", "params": {"mock_fs": "", "mock_lib": "", "self": ""}, "params_descr": {"mock_fs": "", "mock_lib": "", "self": ""}, "params_occur": {"mock_fs": [["mock_fs", "return_value", "walk", "assert_called_once_with"]], "mock_lib": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_fs": [], "mock_lib": [["mock.Mock", 0.21268927035726587]], "self": []}, "q_name": "TestAzureDataLakeHook.test_list_walk", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.6074796599643384], ["Dict[int, Dict[str, Any]]", 0.19585297580552083], ["int", 0.10029550612804775], ["bytes", 0.09637185810209299]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [139, 87]], "fn_var_ln": {"hook": [[137, 8], [137, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeHook", "azure_data_lake_conn_id"], ["hook", "remove", "True"]]}, "name": "test_remove", "params": {"mock_fs": "", "mock_lib": "", "self": ""}, "params_descr": {"mock_fs": "", "mock_lib": "", "self": ""}, "params_occur": {"mock_fs": [["mock_fs", "return_value", "remove", "assert_called_once_with", "recursive", "True"]], "mock_lib": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_fs": [], "mock_lib": [["mock.Mock", 0.3328841522316244], ["mock.MagicMock", 0.10114645890048647]], "self": []}, "q_name": "TestAzureDataLakeHook.test_remove", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.6969760204685276], ["int", 0.13891168310904992], ["Mapping", 0.08747891034900618]]}}, {"docstring": {"func": "Check that ensure_prefixes decorator working properly", "long_descr": "Note: remove this test and the _ensure_prefixes decorator after min airflow version >= 2.5.0", "ret": null}, "fn_lc": [[141, 4], [157, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_ui_field_behaviour_placeholders", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAzureDataLakeHook.test_get_ui_field_behaviour_placeholders", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestAzureDataLakeHook", "q_name": "TestAzureDataLakeHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[160, 0], [273, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[161, 4], [165, 41]], "fn_var_ln": {"conn_id": [[162, 8], [162, 20]], "directory_name": [[164, 8], [164, 27]], "file_name": [[165, 8], [165, 22]], "file_system_name": [[163, 8], [163, 29]]}, "fn_var_occur": {"conn_id": [["self", "conn_id", "builtins", "str"]], "directory_name": [["self", "directory_name"]], "file_name": [["self", "file_name"]], "file_system_name": [["self", "file_system_name"]]}, "name": "setup_class", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "conn_id", "builtins", "str"], ["self", "file_system_name"], ["self", "directory_name"], ["self", "file_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.setup_class", "ret_exprs": [], "ret_type": "None", "variables": {"conn_id": "builtins.str", "directory_name": "", "file_name": "", "file_system_name": ""}, "variables_p": {"conn_id": [["str", 1.0]], "directory_name": [["str", 0.9999999999999999]], "file_name": [["str", 0.7984977924307232], ["List[str]", 0.10716627385595587]], "file_system_name": [["str", 0.7809645661156099], ["int", 0.13704869787115256], ["List[str]", 0.08198673601323733]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[168, 4], [172, 50]], "fn_var_ln": {"expected_calls": [[171, 8], [171, 22]], "hook": [[169, 8], [169, 12]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "create_file_system", "file_system", "self", "file_system_name"], ["mock_conn", "assert_has_calls", "expected_calls"]], "hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "create_file_system"]]}, "name": "test_create_file_system", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_has_calls", "expected_calls"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["expected_calls", "mock", "call", "create_file_system", "file_system", "self", "file_system_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_create_file_system", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": ""}, "variables_p": {"expected_calls": [["str", 0.08230270000097728]], "hook": [["str", 0.41743308896873443], ["Dict[int, Dict[str, Any]]", 0.16555880269176118], ["int", 0.1370958098635036], ["bytes", 0.0915691313313396]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [180, 41]], "fn_var_ln": {"hook": [[178, 8], [178, 12]], "result": [[179, 8], [179, 14]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "get_file_system", "self", "file_system_name"]], "result": [["result", "hook", "get_file_system", "self", "file_system_name"], ["result", "mock_file_system"]]}, "name": "test_get_file_system", "params": {"mock_conn": "", "mock_file_system": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_file_system": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "get_file_system_client", "return_value", "mock_file_system"]], "mock_file_system": [["mock_conn", "return_value", "get_file_system_client", "return_value", "mock_file_system"], ["result", "mock_file_system"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "get_file_system", "self", "file_system_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "mock_file_system": [], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_get_file_system", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "result": ""}, "variables_p": {"hook": [["str", 0.22919408457644241], ["Mapping", 0.10477743765877191], ["raiden.utils.PaymentID", 0.10366160491673712], ["ddionrails.base.models.System", 0.09915579693223979], ["core.arxiv.submission.domain.submission.Submission", 0.09757360544985888], ["int", 0.08603183978154064]], "result": [["Dict[str, Any]", 0.31455983976897217], ["List[str]", 0.15164950359416504], ["str", 0.12787589423005377], ["Dict[str, int]", 0.08510780362434493], ["dict", 0.08317879790634325], ["Dict[str, Union[Any, str]]", 0.07863749712362719]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [191, 46]], "fn_var_ln": {"hook": [[189, 8], [189, 12]], "result": [[190, 8], [190, 14]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "create_directory", "self", "file_system_name", "self", "directory_name"]], "result": [["result", "hook", "create_directory", "self", "file_system_name", "self", "directory_name"], ["result", "mock_directory_client"]]}, "name": "test_create_directory", "params": {"mock_conn": "", "mock_directory_client": "", "mock_get_file_system": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_directory_client": "", "mock_get_file_system": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_directory_client": [["mock_get_file_system", "return_value", "create_directory", "return_value", "mock_directory_client"], ["result", "mock_directory_client"]], "mock_get_file_system": [["mock_get_file_system", "return_value", "create_directory", "return_value", "mock_directory_client"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "create_directory", "self", "file_system_name", "self", "directory_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.MagicMock", 0.4286874195999348]], "mock_directory_client": [], "mock_get_file_system": [["mock.MagicMock", 0.20079407093824383]], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_create_directory", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "result": ""}, "variables_p": {"hook": [["Pattern[str]", 0.28886054672085626], ["str", 0.24856395423587893], ["int", 0.1739176671204558], ["Mapping", 0.1065247457964627], ["core.arxiv.submission.domain.submission.Submission", 0.09155309023691637]], "result": [["preacher.core.scenario.scenario.ScenarioResult", 0.1449735339363438], ["str", 0.13657535966183768], ["ezscrape.scraping.core.ScrapeResult", 0.09772764304507912], ["List[None]", 0.08565662967574822], ["List[Dict[str, Any]]", 0.08226548587214755]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[198, 4], [202, 46]], "fn_var_ln": {"hook": [[200, 8], [200, 12]], "result": [[201, 8], [201, 14]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "get_directory_client", "self", "file_system_name", "self", "directory_name"]], "result": [["result", "hook", "get_directory_client", "self", "file_system_name", "self", "directory_name"], ["result", "mock_directory_client"]]}, "name": "test_get_directory", "params": {"mock_conn": "", "mock_directory_client": "", "mock_get_file_system": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_directory_client": "", "mock_get_file_system": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_directory_client": [["mock_get_file_system", "return_value", "get_directory_client", "return_value", "mock_directory_client"], ["result", "mock_directory_client"]], "mock_get_file_system": [["mock_get_file_system", "return_value", "get_directory_client", "return_value", "mock_directory_client"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "get_directory_client", "self", "file_system_name", "self", "directory_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["tests.async_mock.MagicMock", 0.10585282934815879], ["mock.Mock", 0.08818041848787354], ["mock.MagicMock", 0.07685034872567222]], "mock_directory_client": [], "mock_get_file_system": [], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_get_directory", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "result": ""}, "variables_p": {"hook": [["str", 0.22387269915221925], ["core.arxiv.submission.domain.submission.Submission", 0.11461505512411467], ["raiden.utils.PaymentID", 0.10141410218226067], ["Mapping", 0.10042581678284292], ["ddionrails.base.models.System", 0.09571331027431322]], "result": [["list", 0.14814030233490996], ["str", 0.106449716577689], ["topicdb.core.models.basename.BaseName", 0.1012523797658845]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[209, 4], [213, 41]], "fn_var_ln": {"hook": [[211, 8], [211, 12]], "result": [[212, 8], [212, 14]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "create_file", "self", "file_system_name", "self", "file_name"]], "result": [["result", "hook", "create_file", "self", "file_system_name", "self", "file_name"], ["result", "mock_file_client"]]}, "name": "test_create_file", "params": {"mock_conn": "", "mock_file_client": "", "mock_get_file_system": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_file_client": "", "mock_get_file_system": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_file_client": [["mock_get_file_system", "return_value", "create_file", "return_value", "mock_file_client"], ["result", "mock_file_client"]], "mock_get_file_system": [["mock_get_file_system", "return_value", "create_file", "return_value", "mock_file_client"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["result", "hook", "create_file", "self", "file_system_name", "self", "file_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.MagicMock", 0.12336354855153052], ["mock.Mock", 0.07663574332011575]], "mock_file_client": [["mock.MagicMock", 0.10244922585682317], ["antidote.core.DependencyContainer", 0.09612976426919197]], "mock_get_file_system": [["mock.MagicMock", 0.20589491194721815]], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_create_file", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "result": ""}, "variables_p": {"hook": [["str", 0.33805569905291466], ["Pattern[str]", 0.3018817423190709], ["Mapping", 0.10519331170684462], ["int", 0.08381609130978737]], "result": [["Union[dict, Dict[str, int]]", 0.16934147412014566], ["bytes", 0.08344735264629001]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[216, 4], [220, 50]], "fn_var_ln": {"expected_calls": [[219, 8], [219, 22]], "hook": [[217, 8], [217, 12]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "delete_file_system", "self", "file_system_name"], ["mock_conn", "assert_has_calls", "expected_calls"]], "hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "delete_file_system", "self", "file_system_name"]]}, "name": "test_delete_file_system", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_has_calls", "expected_calls"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "delete_file_system", "self", "file_system_name"], ["expected_calls", "mock", "call", "delete_file_system", "self", "file_system_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_delete_file_system", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": ""}, "variables_p": {"expected_calls": [["str", 0.10720911602623712], ["int", 0.08128303978953226]], "hook": [["str", 0.29740478459392866], ["raiden.utils.PaymentID", 0.10682408184781993], ["ddionrails.base.models.System", 0.10069532691133054], ["Mapping", 0.09775183311451163], ["int", 0.08893129788224803]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[224, 4], [234, 50]], "fn_var_ln": {"expected_calls": [[228, 8], [228, 22]], "hook": [[226, 8], [226, 12]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "get_file_system_client", "self", "file_system_name", "get_directory_client", "self", "directory_name", "delete_directory"], ["mock_conn", "assert_has_calls", "expected_calls"]], "hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "delete_directory", "self", "file_system_name", "self", "directory_name"]]}, "name": "test_delete_directory", "params": {"mock_conn": "", "mock_directory_client": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_directory_client": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "get_directory_client", "return_value", "mock_directory_client"], ["mock_conn", "assert_has_calls", "expected_calls"]], "mock_directory_client": [["mock_conn", "return_value", "get_directory_client", "return_value", "mock_directory_client"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "delete_directory", "self", "file_system_name", "self", "directory_name"], ["expected_calls", "mock", "call", "get_file_system_client", "self", "file_system_name", "get_directory_client", "self", "directory_name", "delete_directory"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "mock_directory_client": [], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_delete_directory", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": "", "hook": ""}, "variables_p": {"expected_calls": [["str", 0.30374229512944856], ["Dict[str, Any]", 0.14038103907243588], ["List[str]", 0.09471514461718869], ["Dict[str, Union[int, str]]", 0.09459913003134031], ["Dict[str, List[str]]", 0.0907296271426203]], "hook": [["str", 0.4026913593729545], ["raiden.utils.PaymentID", 0.11009940286873046], ["Mapping", 0.09177375669847476], ["Dict[str, Any]", 0.09050986774239506], ["core.arxiv.submission.domain.submission.Submission", 0.08729525625497303]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[237, 4], [242, 9]], "fn_var_ln": {"hook": [[238, 8], [238, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "list_file_system", "prefix"]]}, "name": "test_list_file_system", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "return_value", "list_file_systems", "assert_called_once_with", "name_starts_with", "include_metadata", "False"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.25276641728789784]], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_list_file_system", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.3853923772021521], ["raiden.utils.PaymentID", 0.1129977317435081], ["str", 0.10915519074604245]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[248, 4], [251, 96]], "fn_var_ln": {"hook": [[249, 8], [249, 12]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "list_files_directory", "self", "file_system_name", "self", "directory_name"]]}, "name": "test_list_files_directory", "params": {"mock_conn": "", "mock_get_file_system": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_get_file_system": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_get_file_system": [["mock_get_file_system", "return_value", "get_paths", "assert_called_once_with", "self", "directory_name"]], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "list_files_directory", "self", "file_system_name", "self", "directory_name"], ["mock_get_file_system", "return_value", "get_paths", "assert_called_once_with", "self", "directory_name"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.Mock", 0.07557080700421621]], "mock_get_file_system": [], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_list_files_directory", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.41326616068542565], ["core.arxiv.submission.domain.submission.Submission", 0.09334688625301309], ["Mapping", 0.09193709281923272]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[258, 4], [264, 68]], "fn_var_ln": {"hook": [[259, 8], [259, 12]], "msg": [[261, 16], [261, 19]], "status": [[261, 8], [261, 14]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "get_conn", "list_file_systems", "return_value", "list_file_systems_result"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "True"]]}, "name": "test_connection_success", "params": {"list_file_systems_result": "", "mock_conn": "", "self": ""}, "params_descr": {"list_file_systems_result": "", "mock_conn": "", "self": ""}, "params_occur": {"list_file_systems_result": [["hook", "get_conn", "list_file_systems", "return_value", "list_file_systems_result"]], "mock_conn": [], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "list_file_systems_result": [], "mock_conn": [["bool", 0.33371835636576375], ["str", 0.2691353654900616], ["cli_ui.tests.MessageRecorder", 0.09639843947373021]], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_connection_success", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "msg": "", "status": ""}, "variables_p": {"hook": [["raiden.utils.PaymentID", 0.20277560718611765], ["str", 0.18602149755903805], ["int", 0.09510358921415456]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "status": [["str", 0.8070705504286348], ["Dict[str, str]", 0.10742002232739085], ["Optional[str]", 0.08550942724397416]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [273, 46]], "fn_var_ln": {"hook": [[268, 8], [268, 12]], "msg": [[270, 16], [270, 19]], "status": [[270, 8], [270, 14]]}, "fn_var_occur": {"hook": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"], ["hook", "get_conn", "list_file_systems", "PropertyMock", "side_effect", "Exception"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "False"]]}, "name": "test_connection_failure", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [], "self": [["hook", "AzureDataLakeStorageV2Hook", "adls_conn_id", "self", "conn_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["mock.Mock", 0.7777777782457801]], "self": []}, "q_name": "TestAzureDataLakeStorageV2Hook.test_connection_failure", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "msg": "", "status": ""}, "variables_p": {"hook": [["Pattern[str]", 0.28114130174993796], ["str", 0.21443482352786464], ["raiden.utils.PaymentID", 0.10571186256708966], ["int", 0.09737969801448615]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "status": [["int", 0.5965902263708184], ["str", 0.09504299251503023]]}}], "name": "TestAzureDataLakeStorageV2Hook", "q_name": "TestAzureDataLakeStorageV2Hook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "unittest", "mock", "PropertyMock", "pytest", "azure", "storage", "filedatalake", "_models", "FileSystemProperties", "airflow", "models", "Connection", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook", "AzureDataLakeStorageV2Hook", "airflow", "utils", "db", "tests", "test_utils", "providers", "get_provider_min_airflow_version", "azure", "datalake", "store", "core", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook", "airflow", "providers", "microsoft", "azure", "hooks", "data_lake", "AzureDataLakeHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 2, "I": 0, "U": 86}, "session_id": "OfnG4dw-eL1w3MYpuWgC63YPJ2B8j6Q3VkaV3ZNJ2ME", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}