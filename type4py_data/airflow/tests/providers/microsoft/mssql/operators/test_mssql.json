{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [63, 65]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [50, 44]], "fn_var_ln": {"mock_hook": [[46, 8], [46, 17]], "op": [[49, 8], [49, 10]], "return_value": [[47, 8], [47, 37]]}, "fn_var_occur": {"mock_hook": [["mock_hook", "MagicMock"], ["mock_get_db_hook", "return_value", "mock_hook"], ["op", "get_db_hook", "mock_hook"]], "op": [["op", "MsSqlOperator", "task_id", "sql"], ["op", "get_db_hook", "mock_hook"]], "return_value": [["mock_get_db_hook", "return_value", "mock_hook"]]}, "name": "test_get_hook_from_conn", "params": {"mock_get_db_hook": "", "self": ""}, "params_descr": {"mock_get_db_hook": "", "self": ""}, "params_occur": {"mock_get_db_hook": [["mock_get_db_hook", "return_value", "mock_hook"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_db_hook": [["unittesmock.MagicMock", 0.26012693979848067], ["mock.MagicMock", 0.25138970533804766], ["unittesmock.Mock", 0.07758548905508028]], "self": []}, "q_name": "TestMsSqlOperator.test_get_hook_from_conn", "ret_exprs": [], "ret_type": "", "variables": {"mock_hook": "", "op": "", "return_value": ""}, "variables_p": {"mock_hook": [["unittesmock.MagicMock", 0.4840542146997717], ["mock.Mock", 0.2134971909667383], ["mock.MagicMock", 0.20520856020440734], ["Mock", 0.0972400341290826]], "op": [["Dict[str, Union[Any, bool, str]]", 0.1736709059275056], ["Dict[str, Union[int, str]]", 0.10242551197761887], ["str", 0.10166206943072167], ["Dict[str, Any]", 0.0756592792454119]], "return_value": [["unittesmock.Mock", 0.2985931303337065], ["str", 0.2721846278854315], ["Optional[bytes]", 0.1076706133562834], ["list", 0.08513682037104754], ["List[Dict[str, Any]]", 0.08504942325796207], ["int", 0.08219034127882022]]}}, {"docstring": {"func": "If :meth:`airflow.models.Connection.get_hook` does not return a hook (e.g. because of an invalid", "long_descr": "conn type), then :class:`~.MsSqlHook` should be used.", "ret": null}, "fn_lc": [[55, 4], [63, 65]], "fn_var_ln": {"op": [[62, 8], [62, 10]]}, "fn_var_occur": {"op": [["op", "MsSqlOperator", "task_id", "sql"], ["op", "get_db_hook", "__class__", "__name__"]]}, "name": "test_get_hook_default", "params": {"mock_get_db_hook": "", "self": ""}, "params_descr": {"mock_get_db_hook": "", "self": ""}, "params_occur": {"mock_get_db_hook": [["mock_get_db_hook", "return_value", "side_effect", "Mock", "side_effect", "AirflowException"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_db_hook": [["unittesmock.MagicMock", 0.3057278517678719], ["mock.MagicMock", 0.09860667697800314], ["Dict[str, Any]", 0.09420789223158914]], "self": []}, "q_name": "TestMsSqlOperator.test_get_hook_default", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, str]", 0.11393146585653496], ["dict", 0.07271169134302567]]}}], "name": "TestMsSqlOperator", "q_name": "TestMsSqlOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "MagicMock", "Mock", "pytest", "airflow", "AirflowException", "airflow", "providers", "microsoft", "mssql", "hooks", "mssql", "MsSqlHook", "airflow", "providers", "microsoft", "mssql", "operators", "mssql", "MsSqlOperator"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 8}, "session_id": "c4sUouk9zfGm-K9GDwJMElc0o5ZIKCTmAg112hMsBm4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}