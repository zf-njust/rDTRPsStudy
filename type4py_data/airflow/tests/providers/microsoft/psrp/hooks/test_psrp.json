{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [94, 30]], "cls_var_ln": {"had_errors": [[41, 4], [41, 14]]}, "cls_var_occur": {"had_errors": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [45, 50]], "fn_var_ln": {"state": [[45, 8], [45, 18]]}, "fn_var_occur": {"state": [["self", "state", "PSInvocationState", "NOT_STARTED"]]}, "name": "__init__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "__init__", "args", "kwargs"]], "kwargs": [["super", "__init__", "args", "kwargs"]], "self": [["self", "state", "PSInvocationState", "NOT_STARTED"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MockPowerShell.__init__", "ret_exprs": [], "ret_type": "", "variables": {"state": ""}, "variables_p": {"state": [["int", 0.4751647637983665], ["List[int]", 0.18057104796717932]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 8], [53, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "informational", "params": {"kwargs": "", "message": "", "message_type": ""}, "params_descr": {"kwargs": "", "message": "", "message_type": ""}, "params_occur": {"kwargs": [["kwargs", "setdefault"], ["Mock", "MESSAGE_TYPE", "message_type", "message", "message", "kwargs"]], "message": [["Mock", "MESSAGE_TYPE", "message_type", "message", "message", "kwargs"]], "message_type": [["Mock", "MESSAGE_TYPE", "message_type", "message", "message", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "message": [["str", 0.9049867510621404], ["Optional[str]", 0.09501324893785962]], "message_type": [["str", 0.9049867510621404], ["Optional[str]", 0.09501324893785962]], "self": []}, "q_name": "MockPowerShell.poll_invoke.<locals>.informational", "ret_exprs": ["return Mock(MESSAGE_TYPE=message_type, message=message, **kwargs)"], "ret_type": "", "ret_type_p": [["int", 0.26533101051447516], ["bool", 0.2627385139833289], ["Dict[str, Any]", 0.2573360592613694], ["Type", 0.09892879692004465]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [80, 13]], "fn_var_ln": {"state": [[48, 8], [48, 18]]}, "fn_var_occur": {"state": []}, "name": "poll_invoke", "params": {"self": "", "timeout": ""}, "params_descr": {"self": "", "timeout": ""}, "params_occur": {"self": [["self", "streams", "debug", "append", "informational", "MessageType", "DEBUG_RECORD"], ["self", "streams", "debug", "append", "informational", "MessageType", "DEBUG_RECORD", "command_name", "None"], ["self", "streams", "verbose", "append", "informational", "MessageType", "VERBOSE_RECORD"], ["self", "streams", "warning", "append", "informational", "MessageType", "WARNING_RECORD"], ["self", "streams", "information", "append", "Mock", "MESSAGE_TYPE", "MessageType", "INFORMATION_RECORD", "computer", "user", "message_data"], ["self", "streams", "progress", "append", "Mock", "MESSAGE_TYPE", "MessageType", "PROGRESS_RECORD", "activity", "description"], ["self", "had_errors"], ["self", "streams", "error", "append", "Mock", "MESSAGE_TYPE", "MessageType", "ERROR_RECORD", "command_name", "message", "reason", "script_stacktrace", "join", "DUMMY_STACKTRACE"]], "timeout": []}, "params_p": {"args": [], "kwargs": [], "self": [], "timeout": [["float", 0.30000000000000004], ["Optional[float]", 0.30000000000000004], ["int", 0.1], ["Optional[int]", 0.1], ["bool", 0.1]]}, "q_name": "MockPowerShell.poll_invoke", "ret_exprs": [], "ret_type": "", "variables": {"state": ""}, "variables_p": {"state": [["str", 0.29999999999999993], ["bool", 0.19999999999999996], ["Optional[\"StateResourceIdentifier\"]", 0.09999999999999998], ["Optional[str]", 0.09999999999999998], ["Type[demoboapp.models.Group]", 0.09999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [90, 33]], "fn_var_ln": {"output": [[84, 8], [84, 19]], "state": [[83, 8], [83, 18]]}, "fn_var_occur": {"output": [["self", "output"]], "state": [["self", "state", "PSInvocationState", "RUNNING"]]}, "name": "begin_invoke", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "state", "PSInvocationState", "RUNNING"], ["self", "output"], ["self", "streams", "debug"], ["self", "streams", "error"], ["self", "streams", "information"], ["self", "streams", "progress"], ["self", "streams", "verbose"], ["self", "streams", "warning"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MockPowerShell.begin_invoke", "ret_exprs": [], "ret_type": "", "variables": {"output": "", "state": ""}, "variables_p": {"output": [["str", 0.36278260780342353], ["int", 0.3014020699102006], ["List[str]", 0.10661073519712555]], "state": [["int", 0.4751647637983665], ["List[int]", 0.18057104796717932]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [94, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "end_invoke", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "state", "PSInvocationState", "RUNNING"], ["self", "poll_invoke"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MockPowerShell.end_invoke", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "MockPowerShell", "q_name": "MockPowerShell", "variables": {"had_errors": ""}, "variables_p": {"had_errors": [["int", 0.6], ["str", 0.30000000000000004], ["bool", 0.1]]}}, {"cls_lc": [[113, 0], [213, 54]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [116, 60]], "fn_var_ln": {"hook": [[115, 8], [115, 12]]}, "fn_var_occur": {"hook": [["hook", "PsrpHook", "CONNECTION_ID"], ["hook", "get_conn", "runspace_pool", "return_value"]]}, "name": "test_get_conn", "params": {"powershell": "", "runspace_pool": "", "self": "", "ws_man": ""}, "params_descr": {"powershell": "", "runspace_pool": "", "self": "", "ws_man": ""}, "params_occur": {"powershell": [], "runspace_pool": [["hook", "get_conn", "runspace_pool", "return_value"]], "self": [], "ws_man": []}, "params_p": {"args": [], "kwargs": [], "powershell": [["str", 1.5935828980470775e-09], ["bool", 6.357647239276776e-10]], "runspace_pool": [["zerver.models.Realm", 0.10755117865989049], ["int", 0.09953237859400069]], "self": [], "ws_man": [["str", 1.5935828980470775e-09], ["bool", 6.357647239276776e-10]]}, "q_name": "TestPsrpHook.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.5222407701840214], ["str", 0.19503240320714868]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[122, 8], [124, 23]], "fn_var_ln": {"extra": [[123, 12], [123, 22]]}, "fn_var_occur": {"extra": [["conn", "extra"]]}, "name": "get_connection", "params": {"args": ""}, "params_descr": {"args": ""}, "params_occur": {"args": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPsrpHook.test_get_conn_unexpected_extra.<locals>.get_connection", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"extra": ""}, "variables_p": {"extra": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [128, 27]], "fn_var_ln": {"conn": [[120, 8], [120, 12]], "get_connection": [[126, 8], [126, 27]], "hook": [[119, 8], [119, 12]]}, "fn_var_occur": {"conn": [], "get_connection": [["hook", "get_connection", "get_connection"]], "hook": [["hook", "get_connection", "get_connection"], ["hook", "get_conn"]]}, "name": "test_get_conn_unexpected_extra", "params": {"powershell": "", "runspace_pool": "", "self": "", "ws_man": ""}, "params_descr": {"powershell": "", "runspace_pool": "", "self": "", "ws_man": ""}, "params_occur": {"powershell": [], "runspace_pool": [], "self": [], "ws_man": []}, "params_p": {"args": [], "kwargs": [], "powershell": [["str", 1.5935828980470775e-09], ["bool", 6.357647239276776e-10]], "runspace_pool": [["str", 1.5935828980470775e-09], ["bool", 6.357647239276776e-10]], "self": [], "ws_man": [["str", 1.5935828980470775e-09], ["bool", 6.357647239276776e-10]]}, "q_name": "TestPsrpHook.test_get_conn_unexpected_extra", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "get_connection": "", "hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "get_connection": [["str", 0.10929881313098694], ["Dict[str, int]", 0.10687063475142208], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.09673101033989512], ["Set[str]", 0.0928333394149379], ["List[Dict[str, Any]]", 0.09213522605771718], ["geode.models.geocoding.Result", 0.09015518234526529]], "hook": [["list", 0.1742501672355244], ["str", 0.10380082623479686], ["Dict[str, str]", 0.09193200955871317]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 8], [171, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_log", "params": {"args": "", "level": ""}, "params_descr": {"args": "", "level": ""}, "params_occur": {"args": [["call", "log", "level", "args", "logger", "method_calls"]], "level": [["call", "log", "level", "args", "logger", "method_calls"]]}, "params_p": {"args": [], "kwargs": [], "level": [["str", 0.8156404347571524], ["bytes", 0.09450478883438067], ["zam_repondeur.models.Lecture", 0.08985477640846687]], "self": []}, "q_name": "TestPsrpHook.test_invoke.<locals>.assert_log", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [188, 49]], "fn_var_ln": {"args": [[185, 8], [185, 12]], "had_errors": [[157, 20], [157, 33]], "kwargs": [[185, 14], [185, 20]], "on_output_callback": [[141, 8], [141, 26]], "options": [[137, 8], [137, 15]], "runspace_options": [[134, 8], [134, 24]], "wsman_options": [[135, 8], [135, 21]]}, "fn_var_occur": {"args": [["args", "kwargs", "runspace_pool", "call_args"], ["args", "ws_man", "return_value"]], "had_errors": [], "kwargs": [["args", "kwargs", "runspace_pool", "call_args"], ["isinstance", "kwargs", "PSHost"]], "on_output_callback": [], "options": [], "runspace_options": [], "wsman_options": []}, "name": "test_invoke", "params": {"logging_level": "", "powershell": "", "runspace_pool": "", "self": "", "ws_man": ""}, "params_descr": {"logging_level": "", "powershell": "", "runspace_pool": "", "self": "", "ws_man": ""}, "params_occur": {"logging_level": [], "powershell": [], "runspace_pool": [["args", "kwargs", "runspace_pool", "call_args"]], "self": [], "ws_man": [["args", "ws_man", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "logging_level": [["bool", 0.3559653282893968], ["List[Tuple[str, Any]]", 0.17400051646849973], ["str", 0.08999864977877174]], "powershell": [["bool", 0.3559653282893968], ["List[Tuple[str, Any]]", 0.17400051646849973], ["str", 0.08999864977877174]], "runspace_pool": [["bool", 0.188111550870411], ["float", 0.10405728937739006], ["Optional[\"Game\"]", 0.09823643008854194], ["str", 0.0940557754352055], ["int", 0.0940557754352055]], "self": [], "ws_man": [["bool", 0.22306078007101207], ["str", 0.1062639038786861]]}, "q_name": "TestPsrpHook.test_invoke", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "had_errors": "", "kwargs": "", "on_output_callback": "", "options": "", "runspace_options": "", "wsman_options": ""}, "variables_p": {"args": [["Dict[str, Any]", 0.16891616410133503], ["list", 0.08061789963456409]], "had_errors": [["int", 0.6], ["str", 0.30000000000000004], ["bool", 0.1]], "kwargs": [["Dict[int, List[str]]", 0.18769982627730347], ["MutableMapping[str, Any]", 0.09819136502636257], ["List[List[str]]", 0.09748675863593047], ["list", 0.09377285568472432], ["str", 0.09377285568472432]], "on_output_callback": [["str", 0.4000000000000001], ["bool", 0.20000000000000004], ["int", 0.10000000000000002], ["List[bytes]", 0.10000000000000002], ["IO", 0.10000000000000002]], "options": [["Type[List[Any]]", 0.1], ["Dict[str, Dict[str, int]]", 0.1], ["Dict[str, Type[bool]]", 0.1], ["Dict[str, Dict[str, str]]", 0.1], ["str", 0.1], ["dict", 0.1], ["Dict[str, dict]", 0.1]], "runspace_options": [["List[str]", 0.3], ["List[Tuple[str, str]]", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["list", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["Dict[int, str]", 0.09999999999999999]], "wsman_options": [["List[str]", 0.3], ["List[Tuple[str, str]]", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["list", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["List[Dict[str, Any]]", 0.09999999999999999], ["Dict[int, str]", 0.09999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [197, 81]], "fn_var_ln": {"arguments": [[191, 8], [191, 17]], "parameters": [[192, 8], [192, 18]], "ps": [[194, 12], [194, 14]]}, "fn_var_occur": {"arguments": [["ps", "hook", "invoke_cmdlet", "arguments", "arguments", "parameters", "parameters"], ["call", "arg", "arg", "arguments", "ps", "add_argument", "mock_calls"]], "parameters": [["ps", "hook", "invoke_cmdlet", "arguments", "arguments", "parameters", "parameters"]], "ps": [["ps", "hook", "invoke_cmdlet", "arguments", "arguments", "parameters", "parameters"], ["call", "use_local_scope", "None", "ps", "add_cmdlet", "mock_calls"], ["call", "ps", "add_parameters", "mock_calls"], ["call", "arg", "arg", "arguments", "ps", "add_argument", "mock_calls"]]}, "name": "test_invoke_cmdlet", "params": {"mocks": "", "self": ""}, "params_descr": {"mocks": "", "self": ""}, "params_occur": {"mocks": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mocks": [["mock.Mock", 0.7777777782457801], ["unittesmock.Mock", 0.11111111087711001]], "self": []}, "q_name": "TestPsrpHook.test_invoke_cmdlet", "ret_exprs": [], "ret_type": "", "variables": {"arguments": "", "parameters": "", "ps": ""}, "variables_p": {"arguments": [["dict", 0.08953266499971144]], "parameters": [["Dict[str, Dict[str, str]]", 0.11038525498754499], ["Iterable[object]", 0.09381694590258467], ["str", 0.08566339507581879]], "ps": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[199, 4], [203, 83]], "fn_var_ln": {"ps": [[201, 12], [201, 14]]}, "fn_var_occur": {"ps": [["ps", "hook", "invoke_cmdlet", "bar", "baz"], ["call", "use_local_scope", "None", "ps", "add_cmdlet", "mock_calls"], ["call", "ps", "add_parameters", "mock_calls"]]}, "name": "test_invoke_cmdlet_deprecated_kwargs", "params": {"mocks": "", "self": ""}, "params_descr": {"mocks": "", "self": ""}, "params_occur": {"mocks": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mocks": [["mock.Mock", 0.903182991703097]], "self": []}, "q_name": "TestPsrpHook.test_invoke_cmdlet_deprecated_kwargs", "ret_exprs": [], "ret_type": "", "variables": {"ps": ""}, "variables_p": {"ps": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[205, 4], [208, 58]], "fn_var_ln": {"ps": [[207, 12], [207, 14]]}, "fn_var_occur": {"ps": [["ps", "hook", "invoke_powershell"], ["call", "ps", "add_script", "mock_calls"]]}, "name": "test_invoke_powershell", "params": {"mocks": "", "self": ""}, "params_descr": {"mocks": "", "self": ""}, "params_occur": {"mocks": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mocks": [["mock.Mock", 0.7777777782457801], ["unittesmock.Mock", 0.11111111087711001]], "self": []}, "q_name": "TestPsrpHook.test_invoke_powershell", "ret_exprs": [], "ret_type": "", "variables": {"ps": ""}, "variables_p": {"ps": [["list", 0.1954622440257508], ["set", 0.06034996474727041], ["dict", 0.05988393845089057]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[210, 4], [213, 54]], "fn_var_ln": {"hook": [[211, 8], [211, 12]], "ps": [[212, 8], [212, 10]]}, "fn_var_occur": {"hook": [["hook", "PsrpHook", "CONNECTION_ID"], ["ps", "hook", "invoke_powershell"]], "ps": [["ps", "hook", "invoke_powershell"], ["call", "ps", "add_script", "mock_calls"]]}, "name": "test_invoke_local_context", "params": {"mocks": "", "self": ""}, "params_descr": {"mocks": "", "self": ""}, "params_occur": {"mocks": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mocks": [["mock.Mock", 0.7777777782457801], ["unittesmock.Mock", 0.11111111087711001]], "self": []}, "q_name": "TestPsrpHook.test_invoke_local_context", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "ps": ""}, "variables_p": {"hook": [["str", 0.5797225957117296], ["int", 0.14009246809609016]], "ps": [["list", 0.1954622440257508], ["set", 0.06034996474727041], ["dict", 0.05988393845089057]]}}], "name": "TestPsrpHook", "q_name": "TestPsrpHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[97, 0], [98, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_powershell_factory", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_powershell_factory", "ret_exprs": ["return MagicMock(return_value=MockPowerShell())"], "ret_type": "", "ret_type_p": [["List[src.main.core.models.window.Window]", 0.10259232677604369], ["T", 0.1005553050681256], ["List[str]", 0.09902428924969804], ["bool", 0.08866522421569731]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "logging", "DEBUG", "ERROR", "INFO", "WARNING", "unittest", "mock", "MagicMock", "Mock", "call", "patch", "pytest", "pypsrp", "host", "PSHost", "pypsrp", "messages", "MessageType", "pypsrp", "powershell", "PSInvocationState", "pytest", "raises", "airflow", "exceptions", "AirflowException", "airflow", "models", "Connection", "airflow", "providers", "microsoft", "psrp", "hooks", "psrp", "PsrpHook"], "mod_var_ln": {"CONNECTION_ID": [[33, 0], [33, 13]], "DUMMY_STACKTRACE": [[34, 0], [34, 16]]}, "mod_var_occur": {"CONNECTION_ID": [["hook", "PsrpHook", "CONNECTION_ID"], ["hook", "PsrpHook", "CONNECTION_ID"], ["conn", "hook", "get_connection", "CONNECTION_ID"], ["PsrpHook", "CONNECTION_ID", "runspace_options", "runspace_options", "wsman_options", "wsman_options", "on_output_callback", "on_output_callback", "options", "hook"], ["PsrpHook", "CONNECTION_ID", "hook"], ["PsrpHook", "CONNECTION_ID", "hook"], ["PsrpHook", "CONNECTION_ID", "hook"], ["hook", "PsrpHook", "CONNECTION_ID"]], "DUMMY_STACKTRACE": [["self", "streams", "error", "append", "Mock", "MESSAGE_TYPE", "MessageType", "ERROR_RECORD", "command_name", "message", "reason", "script_stacktrace", "join", "DUMMY_STACKTRACE"], ["assert_log", "INFO", "DUMMY_STACKTRACE"], ["assert_log", "INFO", "DUMMY_STACKTRACE"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 64}, "session_id": "nyncTdi0IWYMqyB1iXuP-i-pbTKtqHtwB21xg7ic6IQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CONNECTION_ID": "", "DUMMY_STACKTRACE": ""}, "variables_p": {"CONNECTION_ID": [["str", 0.5470084289627816], ["Optional[str]", 0.19174408672773668], ["list", 0.09617003298952372], ["int", 0.08426841408372421]], "DUMMY_STACKTRACE": [["str", 0.5216634458923812], ["viewer.models.Gallery", 0.11335433749642786], ["Set[str]", 0.10488722801788627], ["int", 0.08665829884589343], ["Dict[str, str]", 0.08201351930012589]]}}}