{"error": null, "response": {"classes": [{"cls_lc": [[33, 0], [35, 63]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [35, 63]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__call__", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "AsyncMock", "self", "__call__", "args", "kwargs"]], "kwargs": [["super", "AsyncMock", "self", "__call__", "args", "kwargs"]], "self": [["super", "AsyncMock", "self", "__call__", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AsyncMock.__call__", "ret_exprs": ["return super(AsyncMock, self).__call__(*args, **kwargs)"], "ret_type": "", "ret_type_p": [["str", 0.2904035834268479], ["Iterable[str]", 0.1352966472648362], ["IO[str]", 0.10530325547937436]], "variables": {}, "variables_p": {}}], "name": "AsyncMock", "q_name": "AsyncMock", "variables": {}, "variables_p": {}}, {"cls_lc": [[38, 0], [198, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [60, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTelegramHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [66, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_raise_exception_if_both_connection_or_token_is_not_provided", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTelegramHook.test_should_raise_exception_if_both_connection_or_token_is_not_provided", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [72, 92]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_raise_exception_if_conn_id_doesnt_exist", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTelegramHook.test_should_raise_exception_if_conn_id_doesnt_exist", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 4], [78, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_raise_exception_if_conn_id_doesnt_contain_token", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTelegramHook.test_should_raise_exception_if_conn_id_doesnt_contain_token", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [86, 82]], "fn_var_ln": {"hook": [[83, 12], [83, 16]]}, "fn_var_occur": {"hook": [["hook", "TelegramHook", "telegram_conn_id"], ["hook", "send_message"]]}, "name": "test_should_raise_exception_if_chat_id_is_not_provided_anywhere", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.321029056630358], ["Callable", 0.07350435322348704]], "self": []}, "q_name": "TestTelegramHook.test_should_raise_exception_if_chat_id_is_not_provided_anywhere", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.49999999999334244], ["Dict[str, Union[Any, Any, Any, Any]]", 0.49999999992212585], ["str", 3.930471124067573e-11], ["list", 2.4144457927609122e-11], ["List[Dict[str, Any]]", 9.941449852521256e-12]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [94, 79]], "fn_var_ln": {"hook": [[91, 12], [91, 16]]}, "fn_var_occur": {"hook": [["hook", "TelegramHook", "telegram_conn_id"], ["hook", "send_message"]]}, "name": "test_should_raise_exception_if_message_text_is_not_provided", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.4310538938852874], ["Callable", 0.10866776990787011], ["mock.MagicMock", 0.06373401284280994]], "self": []}, "q_name": "TestTelegramHook.test_should_raise_exception_if_message_text_is_not_provided", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.49999999999334244], ["Dict[str, Union[Any, Any, Any, Any]]", 0.49999999992212585], ["str", 3.930471124067573e-11], ["list", 2.4144457927609122e-11], ["List[Dict[str, Any]]", 9.941449852521256e-12]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[97, 4], [113, 9]], "fn_var_ln": {"hook": [[100, 8], [100, 12]], "return_value": [[98, 8], [98, 34]]}, "fn_var_occur": {"hook": [["hook", "TelegramHook", "telegram_conn_id"], ["hook", "send_message"]], "return_value": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]]}, "name": "test_should_send_message_if_all_parameters_are_correctly_provided", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "assert_called_once"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestTelegramHook.test_should_send_message_if_all_parameters_are_correctly_provided", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": ""}, "variables_p": {"hook": [["int", 0.49999999999334244], ["Dict[str, Union[Any, Any, Any, Any]]", 0.49999999992212585], ["str", 3.930471124067573e-11], ["list", 2.4144457927609122e-11], ["List[Dict[str, Any]]", 9.941449852521256e-12]], "return_value": [["str", 0.4730716959007195], ["tests.utils.MockCoroutine", 0.10065658728366253], ["Optional[bytes]", 0.08689033592096893], ["Dict[str, int]", 0.08616609034718417], ["Dict[str, Any]", 0.08364622158179176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [132, 9]], "fn_var_ln": {"hook": [[119, 8], [119, 12]], "return_value": [[117, 8], [117, 34]]}, "fn_var_occur": {"hook": [["hook", "TelegramHook", "telegram_conn_id", "chat_id"], ["hook", "send_message"]], "return_value": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]]}, "name": "test_should_send_message_if_chat_id_is_provided_through_constructor", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "assert_called_once"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestTelegramHook.test_should_send_message_if_chat_id_is_provided_through_constructor", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": ""}, "variables_p": {"hook": [["int", 0.3606889349684867], ["str", 0.24171048526582828], ["list", 0.12507306546779628], ["Dict[str, Union[Any, Any, Any, Any]]", 0.12346158359417961]], "return_value": [["str", 0.4730716959007195], ["tests.utils.MockCoroutine", 0.10065658728366253], ["Optional[bytes]", 0.08689033592096893], ["Dict[str, int]", 0.08616609034718417], ["Dict[str, Any]", 0.08364622158179176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[135, 4], [151, 9]], "fn_var_ln": {"hook": [[138, 8], [138, 12]], "return_value": [[136, 8], [136, 34]]}, "fn_var_occur": {"hook": [["hook", "TelegramHook", "telegram_conn_id"], ["hook", "send_message"]], "return_value": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]]}, "name": "test_should_send_message_if_chat_id_is_provided_in_connection", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "assert_called_once"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["core_lib.core.models.Venue", 0.10281778173866561]], "self": []}, "q_name": "TestTelegramHook.test_should_send_message_if_chat_id_is_provided_in_connection", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": ""}, "variables_p": {"hook": [["int", 0.49999999999334244], ["Dict[str, Union[Any, Any, Any, Any]]", 0.49999999992212585], ["str", 3.930471124067573e-11], ["list", 2.4144457927609122e-11], ["List[Dict[str, Any]]", 9.941449852521256e-12]], "return_value": [["str", 0.4730716959007195], ["tests.utils.MockCoroutine", 0.10065658728366253], ["Optional[bytes]", 0.08689033592096893], ["Dict[str, int]", 0.08616609034718417], ["Dict[str, Any]", 0.08364622158179176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[158, 8], [159, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "side_effect", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTelegramHook.test_should_retry_when_any_telegram_error_is_encountered.<locals>.side_effect", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [179, 89]], "fn_var_ln": {"excepted_retry_count": [[155, 8], [155, 28]], "hook": [[164, 12], [164, 16]], "return_value": [[156, 8], [156, 34]]}, "fn_var_occur": {"excepted_retry_count": [["excepted_retry_count", "mock_get_conn", "return_value", "send_message", "call_count"]], "hook": [["hook", "TelegramHook", "telegram_conn_id"], ["hook", "send_message"]], "return_value": [["mock_get_conn", "return_value", "send_message", "side_effect", "side_effect"], ["mock_get_conn", "return_value", "send_message", "assert_called_with", "True"], ["excepted_retry_count", "mock_get_conn", "return_value", "send_message", "call_count"]]}, "name": "test_should_retry_when_any_telegram_error_is_encountered", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "send_message", "side_effect", "side_effect"], ["mock_get_conn", "assert_called_once"], ["mock_get_conn", "return_value", "send_message", "assert_called_with", "True"], ["excepted_retry_count", "mock_get_conn", "return_value", "send_message", "call_count"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestTelegramHook.test_should_retry_when_any_telegram_error_is_encountered", "ret_exprs": [], "ret_type": "", "variables": {"excepted_retry_count": "", "hook": "", "return_value": ""}, "variables_p": {"excepted_retry_count": [["int", 0.5429119834024021], ["Dict[str, Union[Any, Any, Any]]", 0.08967032536019404], ["Dict[str, Dict[str, Any]]", 0.08967032536019404], ["List[Dict[str, Any]]", 0.08967032536019404]], "hook": [["int", 0.49999999999334244], ["Dict[str, Union[Any, Any, Any, Any]]", 0.49999999992212585], ["str", 3.930471124067573e-11], ["list", 2.4144457927609122e-11], ["List[Dict[str, Any]]", 9.941449852521256e-12]], "return_value": [["str", 0.30603786547878353], ["Tuple[int, int]", 0.11302713002102185], ["Type[Dict[Any, Any]]", 0.11200865176742923], ["Dict[str, Dict[str, Any]]", 0.10321286877222292], ["list", 0.09330797607858454]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[182, 4], [198, 9]], "fn_var_ln": {"hook": [[185, 8], [185, 12]], "return_value": [[183, 8], [183, 34]]}, "fn_var_occur": {"hook": [["hook", "TelegramHook", "token", "TELEGRAM_TOKEN", "chat_id"], ["hook", "send_message"]], "return_value": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]]}, "name": "test_should_send_message_if_token_is_provided", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "AsyncMock", "password"], ["mock_get_conn", "return_value", "send_message", "return_value"], ["mock_get_conn", "assert_called_once"], ["mock_get_conn", "return_value", "send_message", "assert_called_once_with", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestTelegramHook.test_should_send_message_if_token_is_provided", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": ""}, "variables_p": {"hook": [["str", 0.19594414894993473], ["list", 0.09635641715896207], ["int", 0.08162624121152505]], "return_value": [["str", 0.4730716959007195], ["tests.utils.MockCoroutine", 0.10065658728366253], ["Optional[bytes]", 0.08689033592096893], ["Dict[str, int]", 0.08616609034718417], ["Dict[str, Any]", 0.08364622158179176]]}}], "name": "TestTelegramHook", "q_name": "TestTelegramHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "telegram", "airflow", "airflow", "models", "Connection", "airflow", "providers", "telegram", "hooks", "telegram", "TelegramHook", "airflow", "utils", "db"], "mod_var_ln": {"TELEGRAM_TOKEN": [[30, 0], [30, 14]]}, "mod_var_occur": {"TELEGRAM_TOKEN": [["db", "merge_conn", "Connection", "conn_id", "conn_type", "password", "TELEGRAM_TOKEN"], ["db", "merge_conn", "Connection", "conn_id", "conn_type", "password", "TELEGRAM_TOKEN", "host"], ["hook", "TelegramHook", "token", "TELEGRAM_TOKEN", "chat_id"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 38}, "session_id": "s6PUrNDfW28vs9t_6HUJl0JdhS_3UP0HA2y7GyGKDp4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TELEGRAM_TOKEN": ""}, "variables_p": {"TELEGRAM_TOKEN": [["str", 0.5289009881331405], ["List[Dict[str, Any]]", 0.09137444976622949], ["List[Pattern[str]]", 0.0875723680526832]]}}}