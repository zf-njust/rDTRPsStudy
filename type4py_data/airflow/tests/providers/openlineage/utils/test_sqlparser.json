{"error": null, "response": {"classes": [{"cls_lc": [[51, 0], [233, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [90, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_tables_hierarchy", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSQLParser.test_get_tables_hierarchy", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [118, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_normalize_sql", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSQLParser.test_normalize_sql", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [125, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_normalize_sql_with_no_common_sql_provider", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSQLParser.test_normalize_sql_with_no_common_sql_provider", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [157, 9]], "fn_var_ln": {"db_info": [[129, 8], [129, 15]], "expected": [[146, 8], [146, 16]], "hook": [[131, 8], [131, 12]], "parser": [[128, 8], [128, 14]], "rows": [[133, 8], [133, 12]]}, "fn_var_occur": {"db_info": [["db_info", "DatabaseInfo", "scheme"], ["expected", "parser", "parse_table_schemas", "hook", "hook", "namespace", "NAMESPACE", "inputs", "DbTableMeta", "outputs", "DbTableMeta", "database_info", "db_info"]], "expected": [["expected", "Dataset", "namespace", "NAMESPACE", "name", "facets", "SCHEMA_FACET", "Dataset", "namespace", "NAMESPACE", "name", "facets", "SCHEMA_FACET"], ["expected", "parser", "parse_table_schemas", "hook", "hook", "namespace", "NAMESPACE", "inputs", "DbTableMeta", "outputs", "DbTableMeta", "database_info", "db_info"]], "hook": [["hook", "MagicMock"], ["hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "rows", "rows"], ["expected", "parser", "parse_table_schemas", "hook", "hook", "namespace", "NAMESPACE", "inputs", "DbTableMeta", "outputs", "DbTableMeta", "database_info", "db_info"]], "parser": [["parser", "SQLParser"], ["expected", "parser", "parse_table_schemas", "hook", "hook", "namespace", "NAMESPACE", "inputs", "DbTableMeta", "outputs", "DbTableMeta", "database_info", "db_info"]], "rows": [["rows", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name"], ["hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "rows", "rows"]]}, "name": "test_parse_table_schemas", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSQLParser.test_parse_table_schemas", "ret_exprs": [], "ret_type": "", "variables": {"db_info": "", "expected": "", "hook": "", "parser": "", "rows": ""}, "variables_p": {"db_info": [["Union[Literal, str]", 0.30489616326361557], ["Union[None, bool, str]", 0.188137317728277], ["Union[Literal, Literal]", 0.11355288923782336], ["Optional[Literal]", 0.0945357282460603]], "expected": [["str", 0.20387037919699524], ["Dict[str, Any]", 0.18207116610605809], ["int", 0.10518832090022165]], "hook": [["mock.Mock", 0.8666325983555258]], "parser": [], "rows": [["list", 0.11079707913398999], ["dict", 0.10268710334732943], ["Dict[str, Union[Any, Any]]", 0.09465072612124803], ["Type[Dict[str, Any]]", 0.09348749043971333]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[161, 4], [233, 9]], "fn_var_ln": {"db_info": [[163, 8], [163, 15]], "errors": [[198, 8], [198, 28]], "expected": [[211, 8], [211, 16]], "expected_schema": [[210, 8], [210, 23]], "formatted_sql": [[202, 8], [202, 21]], "hook": [[165, 8], [165, 12]], "in_tables": [[196, 12], [196, 35]], "mock_sql_meta": [[191, 8], [191, 21]], "out_tables": [[197, 12], [197, 36]], "parser": [[162, 8], [162, 14]], "return_value": [[200, 8], [200, 31]], "rows": [[167, 8], [167, 12]], "sql": [[175, 8], [175, 11]]}, "fn_var_occur": {"db_info": [["db_info", "DatabaseInfo", "scheme", "authority"], ["expected", "parser", "generate_openlineage_metadata_from_sql", "sql", "sql", "hook", "hook", "database_info", "db_info"]], "errors": [["mock_sql_meta", "errors"]], "expected": [["expected", "OperatorLineage", "inputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "outputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "job_facets", "SqlJobFacet", "query", "formatted_sql"], ["expected", "parser", "generate_openlineage_metadata_from_sql", "sql", "sql", "hook", "hook", "database_info", "db_info"]], "expected_schema": [["expected_schema", "parser_returns_schema"], ["expected", "OperatorLineage", "inputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "outputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "job_facets", "SqlJobFacet", "query", "formatted_sql"]], "formatted_sql": [["expected", "OperatorLineage", "inputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "outputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "job_facets", "SqlJobFacet", "query", "formatted_sql"]], "hook": [["hook", "MagicMock"], ["hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None"], ["expected", "parser", "generate_openlineage_metadata_from_sql", "sql", "sql", "hook", "hook", "database_info", "db_info"]], "in_tables": [["mock_sql_meta", "in_tables", "DbTableMeta"], ["mock_sql_meta", "in_tables", "DbTableMeta"]], "mock_sql_meta": [["mock_sql_meta", "MagicMock"], ["mock_sql_meta", "in_tables", "DbTableMeta"], ["mock_sql_meta", "out_tables", "DbTableMeta"], ["mock_sql_meta", "in_tables", "DbTableMeta"], ["mock_sql_meta", "out_tables", "DbTableMeta"], ["mock_sql_meta", "errors"], ["mock_parse", "return_value", "mock_sql_meta"]], "out_tables": [["mock_sql_meta", "out_tables", "DbTableMeta"], ["mock_sql_meta", "out_tables", "DbTableMeta"]], "parser": [["parser", "SQLParser", "default_schema"], ["expected", "parser", "generate_openlineage_metadata_from_sql", "sql", "sql", "hook", "hook", "database_info", "db_info"]], "return_value": [["hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None"], ["mock_parse", "return_value", "mock_sql_meta"]], "rows": [["rows", "schema", "table", "schema", "table", "schema", "table", "schema", "table", "schema", "table", "schema", "table"], ["hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None"]], "sql": [["expected", "parser", "generate_openlineage_metadata_from_sql", "sql", "sql", "hook", "hook", "database_info", "db_info"]]}, "name": "test_generate_openlineage_metadata_from_sql", "params": {"mock_parse": "", "parser_returns_schema": "", "self": ""}, "params_descr": {"mock_parse": "", "parser_returns_schema": "", "self": ""}, "params_occur": {"mock_parse": [["mock_parse", "return_value", "mock_sql_meta"]], "parser_returns_schema": [["hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None"], ["expected_schema", "parser_returns_schema"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_parse": [["mock.MagicMock", 0.25420170198079933], ["unittesmock.MagicMock", 0.14102984125264645]], "parser_returns_schema": [["unittesmock.MagicMock", 0.40082921127571647], ["mock.MagicMock", 0.2036930995604022]], "self": []}, "q_name": "TestSQLParser.test_generate_openlineage_metadata_from_sql", "ret_exprs": [], "ret_type": "", "variables": {"db_info": "", "errors": "", "expected": "", "expected_schema": "", "formatted_sql": "", "hook": "", "in_tables": "", "mock_sql_meta": "", "out_tables": "", "parser": "", "return_value": "", "rows": "", "sql": ""}, "variables_p": {"db_info": [["Union[Any, Any]", 0.12601273808416177], ["List[tuple]", 0.11043806157387141], ["Union[Literal, Literal]", 0.09905971692822434], ["List[str]", 0.09098729905869048]], "errors": [["str", 0.4432955631300623], ["int", 0.1624340405775448], ["Dict[str, Any]", 0.09286007794133709], ["List[Tuple[str, str]]", 0.0836947791815326], ["Dict[str, Union[Any, Any, Any]]", 0.08203541339331752]], "expected": [["List[int]", 0.11105360521202678], ["List[str]", 0.10196744528050775], ["str", 0.08757560114432994]], "expected_schema": [["str", 0.22766802472844158], ["Set[str]", 0.1850004297061445], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.10023362936246913], ["List[str]", 0.0826756651656063], ["bool", 0.08252434317815012], ["Dict[str, str]", 0.07991895152510073]], "formatted_sql": [["Tuple[Type[bytes], Type[str]]", 0.21481620418237668], ["str", 0.20507709951993114], ["list", 0.09500269119071338]], "hook": [["mock.Mock", 0.8666316697688025]], "in_tables": [["int", 0.5940155391633358], ["list", 0.19967607128413223], ["str", 0.12534755339219497], ["float", 0.08096083616033689]], "mock_sql_meta": [["unittesmock.MagicMock", 0.3571665532179476], ["Dict[str, Any]", 0.09485408015003195], ["List[int]", 0.08711731427544754], ["str", 0.06776961758410902]], "out_tables": [["unittesmock.MagicMock", 0.2824546892751094], ["List[str]", 0.2553425578192597], ["Dict[str, Dict[str, Any]]", 0.10485105620198819], ["str", 0.09051216634125132], ["list", 0.08634074722316303]], "parser": [], "return_value": [["str", 0.18396757284471565], ["List[str]", 0.16526606287688986], ["Dict[str, Union[Any, Any, Any]]", 0.1643067422247838], ["Dict[str, Dict[str, Any]]", 0.1491408212514283], ["List[Dict[str, Any]]", 0.12787734916164625], ["List[Dict[str, str]]", 0.09165930408828274]], "rows": [["Optional[str]", 0.1963021339086385], ["Dict[str, bool]", 0.11346395383049901], ["int", 0.10435725761116958], ["Type[MutableMapping[str, Any]]", 0.10435725761116958], ["float", 0.10427223791650225], ["Dict[str, int]", 0.09969285481830786], ["Set[int]", 0.09711567105523057], ["Dict[str, Any]", 0.09026481321313486], ["List[bool]", 0.09017382003534784]], "sql": []}}], "name": "TestSQLParser", "q_name": "TestSQLParser", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 0], [48, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "normalize_name_lower", "params": {"name": "builtins.str"}, "params_descr": {"name": ""}, "params_occur": {"name": [["name", "lower"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.9999999993207015], ["dict", 8.219532103379987e-11], ["type", 7.774989958010447e-11]]}, "q_name": "normalize_name_lower", "ret_exprs": ["return name.lower()"], "ret_type": "builtins.str", "ret_type_p": [["str", 1.0]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "MagicMock", "pytest", "openlineage", "client", "facet", "SchemaDatasetFacet", "SchemaField", "SqlJobFacet", "openlineage", "client", "run", "Dataset", "openlineage", "common", "sql", "DbTableMeta", "airflow", "providers", "openlineage", "extractors", "OperatorLineage", "airflow", "providers", "openlineage", "sqlparser", "DatabaseInfo", "SQLParser"], "mod_var_ln": {"DB_NAME": [[30, 0], [30, 7]], "DB_SCHEMA_NAME": [[31, 0], [31, 14]], "DB_TABLE_NAME": [[32, 0], [32, 13]], "NAMESPACE": [[34, 0], [34, 9]], "SCHEMA_FACET": [[36, 0], [36, 12]]}, "mod_var_occur": {"DB_NAME": [], "DB_SCHEMA_NAME": [["rows", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name", "DB_SCHEMA_NAME", "name"], ["hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None", "rows", "DB_SCHEMA_NAME", "parser_returns_schema", "None"]], "DB_TABLE_NAME": [], "NAMESPACE": [["expected", "Dataset", "namespace", "NAMESPACE", "name", "facets", "SCHEMA_FACET", "Dataset", "namespace", "NAMESPACE", "name", "facets", "SCHEMA_FACET"], ["expected", "parser", "parse_table_schemas", "hook", "hook", "namespace", "NAMESPACE", "inputs", "DbTableMeta", "outputs", "DbTableMeta", "database_info", "db_info"]], "SCHEMA_FACET": [["expected", "Dataset", "namespace", "NAMESPACE", "name", "facets", "SCHEMA_FACET", "Dataset", "namespace", "NAMESPACE", "name", "facets", "SCHEMA_FACET"], ["expected", "OperatorLineage", "inputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "outputs", "Dataset", "namespace", "name", "expected_schema", "facets", "SCHEMA_FACET", "job_facets", "SqlJobFacet", "query", "formatted_sql"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 30}, "session_id": "SKP2lUKstSePkNVQHYiib6t4xcaEuI_-Jq3pkJb72IU", "set": null, "tc": [false, null], "type_annot_cove": 0.06, "typed_seq": "", "untyped_seq": "", "variables": {"DB_NAME": "", "DB_SCHEMA_NAME": "", "DB_TABLE_NAME": "", "NAMESPACE": "", "SCHEMA_FACET": ""}, "variables_p": {"DB_NAME": [["str", 0.7999999999999999], ["Optional[str]", 0.1], ["Union[Literal, str]", 0.1]], "DB_SCHEMA_NAME": [["str", 0.2900074379015686], ["Pattern[str]", 0.17909554824464136], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.11897790428307424], ["Dict[str, str]", 0.1119354118105489], ["OrderedDict[Any, str]", 0.09771705720809047], ["set", 0.0884688571806788]], "DB_TABLE_NAME": [["str", 0.8255383479966389], ["List[str]", 0.08723082600168046]], "NAMESPACE": [["List[Tuple[int, int]]", 0.14929110257953193], ["str", 0.1251464021684155], ["Sequence[str]", 0.09841968917895802]], "SCHEMA_FACET": [["str", 0.21027122117427927], ["List[Tuple[int, int]]", 0.17798852825106537]]}}}