{"error": null, "response": {"classes": [{"cls_lc": [[33, 0], [115, 79]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [37, 22]], "fn_var_ln": {"args": [[35, 8], [35, 12]], "dag": [[37, 8], [37, 16]]}, "fn_var_occur": {"args": [["args", "DEFAULT_DATE"], ["dag", "DAG", "TEST_DAG_ID", "default_args", "args"]], "dag": [["dag", "DAG", "TEST_DAG_ID", "default_args", "args"], ["self", "dag", "dag"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgres.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag": ""}, "variables_p": {"args": [["dict", 0.14710642105377056], ["tuple", 0.14677109585846893], ["Dict[str, Union[Any, bool, str]]", 0.11589628741007202], ["Dict[str, Union[Any, Any, Any, bool, str]]", 0.11589628741007202], ["Dict[str, Union[Any, Any, bool, str]]", 0.11589628741007202], ["Dict[str, str]", 0.07473030195547072]], "dag": [["int", 0.43833390544974943], ["Dict[str, Any]", 0.26501835082172837], ["str", 0.11538593735348021], ["Dict[str, Union[Any, Any]]", 0.07038670126327531]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [46, 64]], "fn_var_ln": {"tables_to_drop": [[40, 8], [40, 22]]}, "fn_var_occur": {"tables_to_drop": []}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgres.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {"tables_to_drop": ""}, "variables_p": {"tables_to_drop": [["List[str]", 0.99999999843862], ["Dict[str, Any]", 3.9413096339819485e-10], ["int", 3.4033329807683973e-10], ["str", 1.8078527484768585e-10], ["raiden.utils.Address", 1.6770622334931758e-10], ["Tuple[str, str, str, str, str, str, str, str, str, str, str]", 1.515654809363344e-10], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str]", 1.515654809363344e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [60, 97]], "fn_var_ln": {"autocommit_task": [[57, 8], [57, 23]], "op": [[54, 8], [54, 10]], "sql": [[49, 8], [49, 11]]}, "fn_var_occur": {"autocommit_task": [["autocommit_task", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True"], ["autocommit_task", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "op": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "sql": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag"], ["autocommit_task", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True"]]}, "name": "test_postgres_operator_test", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag"], ["autocommit_task", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgres.test_postgres_operator_test", "ret_exprs": [], "ret_type": "", "variables": {"autocommit_task": "", "op": "", "sql": ""}, "variables_p": {"autocommit_task": [["khetha.models.Task", 0.09208615839380366]], "op": [["Dict[Any, str]", 0.28049548049256834], ["Dict[Tuple[str, str], Any]", 0.19631823035072588], ["int", 0.10785474277003765], ["dict", 0.09349849349752277]], "sql": [["int", 0.24158202919513205], ["str", 0.17169134216094734], ["set", 0.10452185690351092], ["pydynasync.models.Changes", 0.09549890854250719], ["List[str]", 0.08584567108047367]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [69, 84]], "fn_var_ln": {"op": [[68, 8], [68, 10]], "sql": [[63, 8], [63, 11]]}, "fn_var_occur": {"op": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "sql": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag"]]}, "name": "test_postgres_operator_test_multi", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgres.test_postgres_operator_test_multi", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "sql": ""}, "variables_p": {"op": [["Dict[Any, str]", 0.28049548049256834], ["Dict[Tuple[str, str], Any]", 0.19631823035072588], ["int", 0.10785474277003765], ["dict", 0.09349849349752277]], "sql": [["int", 0.21307848662687076], ["str", 0.17276765384836368], ["list", 0.13512167558900842], ["Type[List[Any]]", 0.12281781910347182], ["Dict[Any, str]", 0.09575071346766711], ["pydynasync.models.Changes", 0.08694849808520938], ["set", 0.08263148034884163]]}}, {"docstring": {"func": "Verifies the VACUUM operation runs well with the PostgresOperator", "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [78, 84]], "fn_var_ln": {"op": [[77, 8], [77, 10]], "sql": [[76, 8], [76, 11]]}, "fn_var_occur": {"op": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "sql": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True"]]}, "name": "test_vacuum", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgres.test_vacuum", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "sql": ""}, "variables_p": {"op": [["Dict[Any, str]", 0.31392711521411565], ["dict", 0.19846758552121468], ["Dict[Tuple[str, str], Any]", 0.18503201807944786], ["int", 0.10948512194536024]], "sql": [["bool", 0.09593427331906214], ["str", 0.09225378059071673], ["raiden.utils.TargetAddress", 0.08841376959540735]]}}, {"docstring": {"func": "Verifies option to overwrite connection database", "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [99, 63]], "fn_var_ln": {"op": [[86, 8], [86, 10]], "sql": [[85, 8], [85, 11]]}, "fn_var_occur": {"op": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True", "database"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "sql": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True", "database"]]}, "name": "test_overwrite_database", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "autocommit", "True", "database"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgres.test_overwrite_database", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "sql": ""}, "variables_p": {"op": [["int", 0.2121512968874416], ["list", 0.19538109195180223], ["dict", 0.12796841849337265]], "sql": [["Dict[Any, str]", 0.13880668064795587], ["list", 0.1353340721049207], ["Type[List[Any]]", 0.09964810864028087], ["str", 0.09859242527805764], ["pydynasync.models.Changes", 0.08471366047521402], ["Dict[str, dict]", 0.08137080716209627], ["dict", 0.08106260765078974]]}}, {"docstring": {"func": "Verifies ability to pass server configuration parameters to", "long_descr": "PostgresOperator", "ret": null}, "fn_lc": [[101, 4], [115, 79]], "fn_var_ln": {"op": [[108, 8], [108, 10]], "sql": [[107, 8], [107, 11]]}, "fn_var_occur": {"op": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "runtime_parameters"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"], ["op", "get_db_hook", "get_first"]], "sql": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "runtime_parameters"]]}, "name": "test_runtime_parameter_setting", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["op", "PostgresOperator", "task_id", "sql", "sql", "dag", "self", "dag", "runtime_parameters"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgres.test_runtime_parameter_setting", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "sql": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.19685480727559704], ["taskiapplication.models.task.Task", 0.09959687071665303]], "sql": [["int", 0.21307848662687076], ["str", 0.17276765384836368], ["list", 0.13512167558900842], ["Type[List[Any]]", 0.12281781910347182], ["Dict[Any, str]", 0.09575071346766711], ["pydynasync.models.Changes", 0.08694849808520938], ["set", 0.08263148034884163]]}}], "name": "TestPostgres", "q_name": "TestPostgres", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "pytest", "airflow", "models", "dag", "DAG", "airflow", "providers", "postgres", "operators", "postgres", "PostgresOperator", "airflow", "utils", "timezone", "airflow", "providers", "postgres", "hooks", "postgres", "PostgresHook", "psycopg2", "OperationalError"], "mod_var_ln": {"DEFAULT_DATE": [[26, 0], [26, 12]], "DEFAULT_DATE_DS": [[28, 0], [28, 15]], "DEFAULT_DATE_ISO": [[27, 0], [27, 16]], "TEST_DAG_ID": [[29, 0], [29, 11]]}, "mod_var_occur": {"DEFAULT_DATE": [["DEFAULT_DATE_ISO", "DEFAULT_DATE", "isoformat"], ["args", "DEFAULT_DATE"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"], ["autocommit_task", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"], ["op", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "DEFAULT_DATE_DS": [], "DEFAULT_DATE_ISO": [["DEFAULT_DATE_DS", "DEFAULT_DATE_ISO"]], "TEST_DAG_ID": [["dag", "DAG", "TEST_DAG_ID", "default_args", "args"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 25}, "session_id": "pw8ZmXC104fle6xqFD07uitwcH2hC3c1C5XU_MPhyuk", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "DEFAULT_DATE_DS": "", "DEFAULT_DATE_ISO": "", "TEST_DAG_ID": ""}, "variables_p": {"DEFAULT_DATE": [["str", 0.3223026665307198], ["Pattern[str]", 0.27442604090744316], ["Dict[str, Any]", 0.08896395995702691]], "DEFAULT_DATE_DS": [["str", 0.3059945994881268], ["bool", 0.130176423055987], ["Type[apps.registrations.models.registration_field_value.RegistrationFieldValue]", 0.12840709180797258], ["Optional[bool]", 0.0863799894115707], ["int", 0.0863799894115707], ["list", 0.06941968313314296]], "DEFAULT_DATE_ISO": [["int", 0.11824233664115807], ["Dict[Any, List[str]]", 0.11486735568385283]], "TEST_DAG_ID": [["str", 0.3783348212408371], ["List[str]", 0.11475084067820322]]}}}