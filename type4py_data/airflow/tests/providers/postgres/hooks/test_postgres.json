{"error": null, "response": {"classes": [{"cls_lc": [[36, 8], [37, 43]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "UnitTestPostgresHook", "q_name": "TestPostgresHookConn.setup_method.<locals>.UnitTestPostgresHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[32, 0], [270, 40]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[33, 4], [41, 66]], "fn_var_ln": {"conn_name_attr": [[37, 12], [37, 26]], "connection": [[34, 8], [34, 23]], "db_hook": [[39, 8], [39, 20]]}, "fn_var_occur": {"conn_name_attr": [], "connection": [["self", "connection", "Connection", "login", "password", "host", "schema"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]], "db_hook": [["self", "db_hook", "UnitTestPostgresHook"], ["self", "db_hook", "get_connection", "mock", "Mock"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "connection", "Connection", "login", "password", "host", "schema"], ["self", "db_hook", "UnitTestPostgresHook"], ["self", "db_hook", "get_connection", "mock", "Mock"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHookConn.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn_name_attr": "", "connection": "", "db_hook": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "connection": [["float", 0.6178905770718065], ["dict", 0.09546928954686028], ["str", 0.09544095979116766], ["Tuple[Any, Any]", 0.09014448297444658]], "db_hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [50, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_non_default_id", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "user", "password", "host", "dbname", "port", "None"]], "self": [["self", "db_hook", "test_conn_id"], ["self", "db_hook", "get_conn"], ["self", "db_hook", "get_connection", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_non_default_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[53, 4], [57, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "user", "password", "host", "dbname", "port", "None"]], "self": [["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [65, 106]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_uri", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "call_count"]], "self": [["self", "connection", "extra", "json", "dumps"], ["self", "connection", "conn_type"], ["self", "db_hook", "get_conn"], ["self", "db_hook", "get_uri"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["mock.Mock", 0.07583049153121221], ["mock.MagicMock", 0.0705759787282718]], "self": []}, "q_name": "TestPostgresHookConn.test_get_uri", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [78, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_cursor", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "cursor_factory", "psycopg2", "extras", "DictCursor", "user", "password", "host", "dbname", "port", "None"]], "self": [["self", "connection", "extra"], ["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_cursor", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [84, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_with_invalid_cursor", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [], "self": [["self", "connection", "extra"], ["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["mock.Mock", 0.7769422778905122]], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_with_invalid_cursor", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [93, 9]], "fn_var_ln": {"conn": [[88, 8], [88, 12]], "hook": [[89, 8], [89, 12]]}, "fn_var_occur": {"conn": [["conn", "Connection", "login", "password", "host", "schema"], ["hook", "PostgresHook", "connection", "conn"]], "hook": [["hook", "PostgresHook", "connection", "conn"], ["hook", "get_conn"]]}, "name": "test_get_conn_from_connection", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "user", "password", "host", "dbname", "port", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_from_connection", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "hook": ""}, "variables_p": {"conn": [["sqlite3.dbapi2.Connection", 0.49050332207231234], ["str", 0.09408275615790361]], "hook": [["pymysql.connections.Connection", 0.651354687548331], ["str", 0.1681116518715982]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [102, 9]], "fn_var_ln": {"conn": [[97, 8], [97, 12]], "hook": [[98, 8], [98, 12]]}, "fn_var_occur": {"conn": [["conn", "Connection", "login", "password", "host", "schema"], ["hook", "PostgresHook", "connection", "conn", "database"]], "hook": [["hook", "PostgresHook", "connection", "conn", "database"], ["hook", "get_conn"]]}, "name": "test_get_conn_from_connection_with_database", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "user", "password", "host", "dbname", "port", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_from_connection_with_database", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "hook": ""}, "variables_p": {"conn": [["sqlite3.dbapi2.Connection", 0.49050332207231234], ["str", 0.09408275615790361]], "hook": [["pymysql.connections.Connection", 0.5191556979548695], ["sqlite3.dbapi2.Connection", 0.2856373126210262]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [116, 9]], "fn_var_ln": {"conn": [[106, 8], [106, 12]], "hook": [[107, 8], [107, 12]]}, "fn_var_occur": {"conn": [["conn", "Connection", "login", "password", "host", "schema"], ["hook", "PostgresHook", "connection", "conn", "options"]], "hook": [["hook", "PostgresHook", "connection", "conn", "options"], ["hook", "get_conn"]]}, "name": "test_get_conn_from_connection_with_options", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "user", "password", "host", "dbname", "port", "None", "options"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_from_connection_with_options", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "hook": ""}, "variables_p": {"conn": [["sqlite3.dbapi2.Connection", 0.49050332207231234], ["str", 0.09408275615790361]], "hook": [["int", 0.19605000770632405]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[122, 4], [154, 9]], "fn_var_ln": {"mock_aws_hook_instance": [[131, 8], [131, 30]], "mock_client": [[132, 8], [132, 19]], "mock_conn_extra": [[123, 8], [123, 23]], "mock_db_token": [[128, 8], [128, 21]]}, "fn_var_occur": {"mock_aws_hook_instance": [["mock_aws_hook_instance", "mock_aws_hook_class", "return_value"], ["type", "mock_aws_hook_instance", "conn", "mock", "PropertyMock", "return_value", "mock_client"]], "mock_client": [["mock_client", "mock", "MagicMock"], ["mock_client", "generate_db_auth_token", "return_value", "mock_db_token"], ["type", "mock_aws_hook_instance", "conn", "mock", "PropertyMock", "return_value", "mock_client"], ["mock_client", "generate_db_auth_token", "assert_called_once_with", "self", "connection", "host", "port", "self", "connection", "login"]], "mock_conn_extra": [["mock_conn_extra", "True"], ["mock_conn_extra", "aws_conn_id"], ["self", "connection", "extra", "json", "dumps", "mock_conn_extra"]], "mock_db_token": [["mock_client", "generate_db_auth_token", "return_value", "mock_db_token"], ["mock_connect", "assert_called_once_with", "user", "self", "connection", "login", "password", "mock_db_token", "host", "self", "connection", "host", "dbname", "self", "connection", "schema", "port", "port"]]}, "name": "test_get_conn_rds_iam_postgres", "params": {"aws_conn_id": "", "mock_aws_hook_class": "", "mock_connect": "", "port": "", "self": ""}, "params_descr": {"aws_conn_id": "", "mock_aws_hook_class": "", "mock_connect": "", "port": "", "self": ""}, "params_occur": {"aws_conn_id": [["aws_conn_id", "NOTSET"], ["mock_conn_extra", "aws_conn_id"], ["mock_aws_hook_class", "assert_called_once_with", "aws_conn_id", "aws_conn_id", "aws_conn_id", "NOTSET", "client_type"]], "mock_aws_hook_class": [["mock_aws_hook_instance", "mock_aws_hook_class", "return_value"], ["mock_aws_hook_class", "assert_called_once_with", "aws_conn_id", "aws_conn_id", "aws_conn_id", "NOTSET", "client_type"]], "mock_connect": [["mock_connect", "assert_called_once_with", "user", "self", "connection", "login", "password", "mock_db_token", "host", "self", "connection", "host", "dbname", "self", "connection", "schema", "port", "port"]], "port": [["self", "connection", "port", "port"], ["mock_client", "generate_db_auth_token", "assert_called_once_with", "self", "connection", "host", "port", "self", "connection", "login"], ["mock_connect", "assert_called_once_with", "user", "self", "connection", "login", "password", "mock_db_token", "host", "self", "connection", "host", "dbname", "self", "connection", "schema", "port", "port"]], "self": [["self", "connection", "extra", "json", "dumps", "mock_conn_extra"], ["self", "connection", "port", "port"], ["self", "db_hook", "get_conn"], ["mock_client", "generate_db_auth_token", "assert_called_once_with", "self", "connection", "host", "port", "self", "connection", "login"], ["mock_connect", "assert_called_once_with", "user", "self", "connection", "login", "password", "mock_db_token", "host", "self", "connection", "host", "dbname", "self", "connection", "schema", "port", "port"]]}, "params_p": {"args": [], "aws_conn_id": [["Tuple[str, mock.Mock]", 0.10122333600411261]], "kwargs": [], "mock_aws_hook_class": [], "mock_connect": [["str", 0.6245065290516243]], "port": [["str", 0.08768661628717737], ["Optional[str]", 0.08485260656828532]], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_rds_iam_postgres", "ret_exprs": [], "ret_type": "", "variables": {"mock_aws_hook_instance": "", "mock_client": "", "mock_conn_extra": "", "mock_db_token": ""}, "variables_p": {"mock_aws_hook_instance": [["Dict[str, List[Any]]", 0.08467821543701352], ["Dict[str, Any]", 0.08223671201340982]], "mock_client": [["mock.Mock", 0.7183141626264179]], "mock_conn_extra": [["Dict[str, Union[Any, Any]]", 0.18971175618535718], ["Dict[str, str]", 0.12249791698665433], ["Dict[str, Any]", 0.09705836066692716]], "mock_db_token": [["rotkehlchen.tests.utils.mock.MockResponse", 0.30354865146227306], ["Pattern[str]", 0.15287296663489666], ["Dict[str, Union[Any, Any, Any]]", 0.10897034605865588], ["Dict[str, List[Any]]", 0.10683650704372549], ["str", 0.08120391370885204]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[157, 4], [162, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_extra", "params": {"mock_connect": "", "self": ""}, "params_descr": {"mock_connect": "", "self": ""}, "params_occur": {"mock_connect": [["mock_connect", "assert_called_once_with", "user", "password", "host", "dbname", "port", "None", "connect_timeout"]], "self": [["self", "connection", "extra"], ["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["mock.MagicMock", 0.2475996743468194]], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_extra", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[183, 4], [238, 9]], "fn_var_ln": {"mock_aws_hook_instance": [[209, 8], [209, 30]], "mock_client": [[210, 8], [210, 19]], "mock_conn_extra": [[193, 8], [193, 23]], "mock_db_pass": [[206, 8], [206, 20]], "mock_db_user": [[205, 8], [205, 20]]}, "fn_var_occur": {"mock_aws_hook_instance": [["mock_aws_hook_instance", "mock_aws_hook_class", "return_value"], ["type", "mock_aws_hook_instance", "conn", "mock", "PropertyMock", "return_value", "mock_client"]], "mock_client": [["mock_client", "mock", "MagicMock"], ["mock_client", "get_cluster_credentials", "return_value", "mock_db_pass", "mock_db_user"], ["type", "mock_aws_hook_instance", "conn", "mock", "PropertyMock", "return_value", "mock_client"], ["mock_client", "get_cluster_credentials", "assert_called_once_with", "DbUser", "self", "connection", "login", "DbName", "self", "connection", "schema", "ClusterIdentifier", "expected_cluster_identifier", "AutoCreate", "False"]], "mock_conn_extra": [["mock_conn_extra", "True", "True"], ["mock_conn_extra", "aws_conn_id"], ["mock_conn_extra", "conn_cluster_identifier"], ["self", "connection", "extra", "json", "dumps", "mock_conn_extra"]], "mock_db_pass": [["mock_client", "get_cluster_credentials", "return_value", "mock_db_pass", "mock_db_user"], ["mock_connect", "assert_called_once_with", "user", "mock_db_user", "password", "mock_db_pass", "host", "host", "dbname", "self", "connection", "schema", "port", "port"]], "mock_db_user": [["mock_db_user", "self", "connection", "login"], ["mock_client", "get_cluster_credentials", "return_value", "mock_db_pass", "mock_db_user"], ["mock_connect", "assert_called_once_with", "user", "mock_db_user", "password", "mock_db_pass", "host", "host", "dbname", "self", "connection", "schema", "port", "port"]]}, "name": "test_get_conn_rds_iam_redshift", "params": {"aws_conn_id": "", "conn_cluster_identifier": "", "expected_cluster_identifier": "", "host": "", "mock_aws_hook_class": "", "mock_connect": "", "port": "", "self": ""}, "params_descr": {"aws_conn_id": "", "conn_cluster_identifier": "", "expected_cluster_identifier": "", "host": "", "mock_aws_hook_class": "", "mock_connect": "", "port": "", "self": ""}, "params_occur": {"aws_conn_id": [["aws_conn_id", "NOTSET"], ["mock_conn_extra", "aws_conn_id"], ["mock_aws_hook_class", "assert_called_once_with", "aws_conn_id", "aws_conn_id", "aws_conn_id", "NOTSET", "client_type"]], "conn_cluster_identifier": [["conn_cluster_identifier", "NOTSET"], ["mock_conn_extra", "conn_cluster_identifier"]], "expected_cluster_identifier": [["mock_client", "get_cluster_credentials", "assert_called_once_with", "DbUser", "self", "connection", "login", "DbName", "self", "connection", "schema", "ClusterIdentifier", "expected_cluster_identifier", "AutoCreate", "False"]], "host": [["self", "connection", "host", "host"], ["mock_connect", "assert_called_once_with", "user", "mock_db_user", "password", "mock_db_pass", "host", "host", "dbname", "self", "connection", "schema", "port", "port"]], "mock_aws_hook_class": [["mock_aws_hook_instance", "mock_aws_hook_class", "return_value"], ["mock_aws_hook_class", "assert_called_once_with", "aws_conn_id", "aws_conn_id", "aws_conn_id", "NOTSET", "client_type"]], "mock_connect": [["mock_connect", "assert_called_once_with", "user", "mock_db_user", "password", "mock_db_pass", "host", "host", "dbname", "self", "connection", "schema", "port", "port"]], "port": [["self", "connection", "port", "port"], ["mock_connect", "assert_called_once_with", "user", "mock_db_user", "password", "mock_db_pass", "host", "host", "dbname", "self", "connection", "schema", "port", "port"]], "self": [["self", "connection", "extra", "json", "dumps", "mock_conn_extra"], ["self", "connection", "host", "host"], ["self", "connection", "port", "port"], ["mock_db_user", "self", "connection", "login"], ["self", "db_hook", "get_conn"], ["mock_client", "get_cluster_credentials", "assert_called_once_with", "DbUser", "self", "connection", "login", "DbName", "self", "connection", "schema", "ClusterIdentifier", "expected_cluster_identifier", "AutoCreate", "False"], ["mock_connect", "assert_called_once_with", "user", "mock_db_user", "password", "mock_db_pass", "host", "host", "dbname", "self", "connection", "schema", "port", "port"]]}, "params_p": {"args": [], "aws_conn_id": [["Tuple[str, mock.Mock]", 0.10122333600411261]], "conn_cluster_identifier": [], "expected_cluster_identifier": [["mock.Mock", 0.08770384204185548]], "host": [], "kwargs": [], "mock_aws_hook_class": [], "mock_connect": [], "port": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_conn_rds_iam_redshift", "ret_exprs": [], "ret_type": "", "variables": {"mock_aws_hook_instance": "", "mock_client": "", "mock_conn_extra": "", "mock_db_pass": "", "mock_db_user": ""}, "variables_p": {"mock_aws_hook_instance": [["Dict[str, List[Any]]", 0.08467821543701352], ["Dict[str, Any]", 0.08223671201340982]], "mock_client": [["mock.Mock", 0.7695230392169242]], "mock_conn_extra": [["Dict[str, str]", 0.19437802443533053], ["Dict[str, Union[Any, Any]]", 0.16371498899116843], ["Dict[Any, Union[Any, Any]]", 0.09877728553640981]], "mock_db_pass": [["Dict[str, str]", 0.2538777191590081], ["tests.utils.MockCoroutine", 0.0945407187928233], ["str", 0.0758241114267707]], "mock_db_user": [["str", 0.7283981821297492], ["Dict[Any, Dict[str, Any]]", 0.09260929220246665], ["Optional[str]", 0.0918520169253219], ["Dict[Any, str]", 0.08714050874246232]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [251, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_uri_from_connection_without_database_override", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "get_connection", "mock", "MagicMock", "return_value", "Connection", "conn_type", "host", "login", "password", "schema", "port"], ["self", "db_hook", "get_uri"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_uri_from_connection_without_database_override", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [265, 87]], "fn_var_ln": {"get_connection": [[255, 8], [255, 27]], "hook": [[254, 8], [254, 12]]}, "fn_var_occur": {"get_connection": [["hook", "get_connection", "mock", "MagicMock", "return_value", "Connection", "conn_type", "host", "login", "password", "schema", "port"]], "hook": [["hook", "PostgresHook", "database"], ["hook", "get_connection", "mock", "MagicMock", "return_value", "Connection", "conn_type", "host", "login", "password", "schema", "port"], ["hook", "get_uri"]]}, "name": "test_get_uri_from_connection_with_database_override", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHookConn.test_get_uri_from_connection_with_database_override", "ret_exprs": [], "ret_type": "", "variables": {"get_connection": "", "hook": ""}, "variables_p": {"get_connection": [], "hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [270, 40]], "fn_var_ln": {"database": [[268, 8], [268, 16]], "hook": [[269, 8], [269, 12]]}, "fn_var_occur": {"database": [["hook", "PostgresHook", "schema", "database"], ["hook", "database", "database"]], "hook": [["hook", "PostgresHook", "schema", "database"], ["hook", "database", "database"]]}, "name": "test_schema_kwarg_database_kwarg_compatibility", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHookConn.test_schema_kwarg_database_kwarg_compatibility", "ret_exprs": [], "ret_type": "", "variables": {"database": "", "hook": ""}, "variables_p": {"database": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "hook": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}], "name": "TestPostgresHookConn", "q_name": "TestPostgresHookConn", "variables": {}, "variables_p": {}}, {"cls_lc": [[282, 8], [286, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[285, 12], [286, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "mock", "MagicMock", "rowcount"], ["self", "conn", "conn", "mock", "MagicMock"], ["self", "conn", "cursor", "return_value", "self", "cur"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.setup_method.<locals>.UnitTestPostgresHook.get_conn", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}], "name": "UnitTestPostgresHook", "q_name": "TestPostgresHook.setup_method.<locals>.UnitTestPostgresHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[274, 0], [468, 54]], "cls_var_ln": {"table": [[275, 4], [275, 9]]}, "cls_var_occur": {"table": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[277, 4], [288, 45]], "fn_var_ln": {"conn": [[279, 20], [279, 24]], "conn_name_attr": [[283, 12], [283, 26]], "cur": [[278, 8], [278, 16]], "db_hook": [[288, 8], [288, 20]]}, "fn_var_occur": {"conn": [], "conn_name_attr": [], "cur": [], "db_hook": [["self", "db_hook", "UnitTestPostgresHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "UnitTestPostgresHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn_name_attr": "", "cur": "", "db_hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "cur": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["int", 0.5250353812261196], ["Optional[Callable[..., Any]]", 0.09447207897187364], ["Dict[str, List[float]]", 0.08997898109868518], ["str", 0.08702347876209815]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[290, 4], [293, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["cur", "execute", "self", "table"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[295, 4], [309, 63]], "fn_var_ln": {"filename": [[299, 12], [299, 20]], "open_mock": [[296, 8], [296, 17]], "statement": [[298, 12], [298, 21]]}, "fn_var_occur": {"filename": [["self", "db_hook", "copy_expert", "statement", "filename", "None"], ["open_mock", "call_args", "args", "filename"]], "open_mock": [["open_mock", "mock", "mock_open", "read_data"], ["mock", "patch", "open_mock"], ["self", "cur", "copy_expert", "assert_called_once_with", "statement", "open_mock", "return_value"], ["open_mock", "call_args", "args", "filename"]], "statement": [["self", "db_hook", "copy_expert", "statement", "filename", "None"], ["self", "cur", "copy_expert", "assert_called_once_with", "statement", "open_mock", "return_value"]]}, "name": "test_copy_expert", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchall", "return_value", "None"], ["self", "db_hook", "copy_expert", "statement", "filename", "None"], ["self", "conn", "close", "call_count"], ["self", "cur", "close", "call_count"], ["self", "conn", "commit", "call_count"], ["self", "cur", "copy_expert", "assert_called_once_with", "statement", "open_mock", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_copy_expert", "ret_exprs": [], "ret_type": "", "variables": {"filename": "", "open_mock": "", "statement": ""}, "variables_p": {"filename": [["List[str]", 0.23637022283937364], ["Dict[str, Union[Any, Any]]", 0.09897668811780054]], "open_mock": [], "statement": [["Tuple[str, str, str, str, str]", 0.10203666490366811], ["Dict[str, List[int]]", 0.10106710937427053], ["Any[Any]", 0.09475585414145986], ["Set[str]", 0.09046466504126434], ["src.pip_shims.models.ShimmedPathCollection", 0.09012005279633724]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[311, 4], [328, 52]], "fn_var_ln": {"hook": [[312, 8], [312, 12]], "input_data": [[313, 8], [313, 18]], "results": [[326, 16], [326, 23]]}, "fn_var_occur": {"hook": [["hook", "PostgresHook"], ["hook", "get_conn", "conn"], ["hook", "bulk_load", "self", "table", "f", "name"]], "input_data": [["f", "write", "join", "input_data", "encode"], ["sorted", "input_data", "sorted", "results"]], "results": [["results", "row", "row", "cur", "fetchall"], ["sorted", "input_data", "sorted", "results"]]}, "name": "test_bulk_load", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["cur", "execute", "self", "table"], ["hook", "bulk_load", "self", "table", "f", "name"], ["cur", "execute", "self", "table"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_bulk_load", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "input_data": "", "results": ""}, "variables_p": {"hook": [], "input_data": [["str", 0.6682435787419823], ["bytes", 0.14259151645097706]], "results": [["Dict[str, Any]", 0.1774549981241474], ["mock.MagicMock", 0.1349415744420843], ["Callable[[List[Any]], List[Any]]", 0.0818657833280274], ["Dict[int, Any]", 0.08157989776133716], ["dict", 0.07628756064595855]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[330, 4], [346, 52]], "fn_var_ln": {"hook": [[331, 8], [331, 12]], "input_data": [[332, 8], [332, 18]], "results": [[344, 20], [344, 27]], "values": [[337, 16], [337, 22]]}, "fn_var_occur": {"hook": [["hook", "PostgresHook"], ["hook", "get_conn", "conn"], ["hook", "bulk_dump", "self", "table", "f", "name"]], "input_data": [["values", "join", "data", "data", "input_data"], ["sorted", "input_data", "sorted", "results"]], "results": [["results", "line", "rstrip", "decode", "line", "f", "readlines"], ["sorted", "input_data", "sorted", "results"]], "values": [["values", "join", "data", "data", "input_data"], ["cur", "execute", "self", "table", "values"]]}, "name": "test_bulk_dump", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["cur", "execute", "self", "table"], ["cur", "execute", "self", "table", "values"], ["hook", "bulk_dump", "self", "table", "f", "name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_bulk_dump", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "input_data": "", "results": "", "values": ""}, "variables_p": {"hook": [], "input_data": [["str", 0.3975395659512404], ["dict", 0.17569214453308224], ["Dict[str, Any]", 0.1273976420598598], ["Type[Dict[str, Any]]", 0.109546267384143], ["kitovu.utils.JsonType", 0.10897497794576963]], "results": [["List[Tuple[str, str, str, str, Any]]", 0.19593803567660512], ["List[Tuple[str, str]]", 0.19593803567660512], ["Tuple[Tuple[str, Any]]", 0.10858480841045386], ["dict", 0.10267267421745187], ["List[Tuple[Any, Any, Any, str]]", 0.09796901783830256], ["list", 0.09188734043373689]], "values": [["Dict[str, bool]", 0.28564467695289025], ["bytes", 0.24800282758053652], ["int", 0.12723744432269835], ["dict", 0.07622140685397577], ["Dict[Any, Dict[str, str]]", 0.06986423879901757], ["str", 0.06737227084845175], ["float", 0.06314253218564628], ["Dict[str, Callable[[], Any]]", 0.06251460245678345]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[348, 4], [362, 54]], "fn_var_ln": {"commit_count": [[357, 8], [357, 20]], "rows": [[350, 8], [350, 12]], "sql": [[360, 8], [360, 11]], "table": [[349, 8], [349, 13]]}, "fn_var_occur": {"commit_count": [["commit_count", "self", "conn", "commit", "call_count"]], "rows": [["self", "db_hook", "insert_rows", "table", "rows"]], "sql": [["sql", "table"], ["self", "cur", "execute", "assert_any_call", "sql", "row"]], "table": [["self", "db_hook", "insert_rows", "table", "rows"], ["sql", "table"]]}, "name": "test_insert_rows", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "insert_rows", "table", "rows"], ["self", "conn", "close", "call_count"], ["self", "cur", "close", "call_count"], ["commit_count", "self", "conn", "commit", "call_count"], ["self", "cur", "execute", "assert_any_call", "sql", "row"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_insert_rows", "ret_exprs": [], "ret_type": "", "variables": {"commit_count": "", "rows": "", "sql": "", "table": ""}, "variables_p": {"commit_count": [["int", 0.6427783641329655], ["float", 0.3572216358670346]], "rows": [["List[Dict[str, str]]", 0.22445922079955075], ["List[Dict]", 0.21252223132754355], ["list", 0.16367835146199677], ["List[str]", 0.1390195464525874], ["List[Sequence[str]]", 0.09583854269560454], ["List[List]", 0.0819062588684432]], "sql": [["Pattern[str]", 0.09996486986945646], ["Dict[str, int]", 0.09982220270130242], ["str", 0.08830884175078463], ["int", 0.08654910222303965], ["list", 0.07589593493813492], ["Dict[str, Union[dict, Any]]", 0.0757723466511685], ["Dict[str, str]", 0.0757723466511685], ["List[Tuple[str, str, Any]]", 0.0757723466511685]], "table": [["List[Dict]", 0.23083149334610387], ["List[Mapping]", 0.1020858725677167], ["List[list]", 0.09189844549575271], ["Tuple[Hashable]", 0.08951603592460071], ["list", 0.08895229949602988]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[364, 4], [391, 54]], "fn_var_ln": {"commit_count": [[383, 8], [383, 20]], "fields": [[376, 8], [376, 14]], "rows": [[366, 8], [366, 12]], "sql": [[386, 8], [386, 11]], "table": [[365, 8], [365, 13]]}, "fn_var_occur": {"commit_count": [["commit_count", "self", "conn", "commit", "call_count"]], "fields": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"], ["sql", "format", "table", "fields", "fields"]], "rows": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"]], "sql": [["sql", "format", "table", "fields", "fields"], ["self", "cur", "execute", "assert_any_call", "sql", "row"]], "table": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"], ["sql", "format", "table", "fields", "fields"]]}, "name": "test_insert_rows_replace", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"], ["self", "conn", "close", "call_count"], ["self", "cur", "close", "call_count"], ["commit_count", "self", "conn", "commit", "call_count"], ["self", "cur", "execute", "assert_any_call", "sql", "row"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_insert_rows_replace", "ret_exprs": [], "ret_type": "", "variables": {"commit_count": "", "fields": "", "rows": "", "sql": "", "table": ""}, "variables_p": {"commit_count": [["int", 0.6427783641329655], ["float", 0.3572216358670346]], "fields": [["str", 1.0000000000000002]], "rows": [["paradigm.models.Plain", 0.25545539979069626], ["int", 0.17724171258692933], ["fklearn.types.SplitterFnType", 0.09894533721180061], ["fklearn.types.EvalFnType", 0.09894533721180061], ["Dict[str, int]", 0.09507902394888708], ["List[str]", 0.08954202353861408]], "sql": [["Dict[str, str]", 0.3206433302065727], ["str", 0.20747469304494542], ["Dict[str, List[str]]", 0.19516382298945786], ["Dict[str, Dict[str, str]]", 0.09326656491074366], ["List[str]", 0.09153402362572273]], "table": [["str", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[393, 4], [409, 93]], "fn_var_ln": {"fields": [[405, 8], [405, 14]], "rows": [[395, 8], [395, 12]], "table": [[394, 8], [394, 13]]}, "fn_var_occur": {"fields": [["self", "db_hook", "insert_rows", "table", "rows", "replace", "True", "replace_index", "fields"]], "rows": [["self", "db_hook", "insert_rows", "table", "rows", "replace", "True", "replace_index", "fields"]], "table": [["self", "db_hook", "insert_rows", "table", "rows", "replace", "True", "replace_index", "fields"]]}, "name": "test_insert_rows_replace_missing_target_field_arg", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "insert_rows", "table", "rows", "replace", "True", "replace_index", "fields"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_insert_rows_replace_missing_target_field_arg", "ret_exprs": [], "ret_type": "", "variables": {"fields": "", "rows": "", "table": ""}, "variables_p": {"fields": [["List[str]", 0.30891316751276726], ["Set[str]", 0.3068394268035384], ["Dict[str, List[str]]", 0.10669231575180146], ["list", 0.09969272705310743], ["Tuple[str]", 0.09199460079509779], ["Tuple[str, Any, int]", 0.08586776208368761]], "rows": [["int", 0.10843681295118549], ["Dict[str, Any]", 0.10843681295118549], ["str", 0.10843681295118549], ["List[str]", 0.10843681295118549], ["list", 0.09877868255389362], ["List[Dict[str, Any]]", 0.09471481818740565], ["Dict[int, List[str]]", 0.09471481818740565], ["float", 0.09471481818740565]], "table": [["str", 0.21927712680440786], ["list", 0.21270669990287494], ["Set[str]", 0.12198666742123207], ["int", 0.09056598835134594], ["dict", 0.0882933654265368]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[411, 4], [427, 96]], "fn_var_ln": {"fields": [[423, 8], [423, 14]], "rows": [[413, 8], [413, 12]], "table": [[412, 8], [412, 13]]}, "fn_var_occur": {"fields": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True"]], "rows": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True"]], "table": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True"]]}, "name": "test_insert_rows_replace_missing_replace_index_arg", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_insert_rows_replace_missing_replace_index_arg", "ret_exprs": [], "ret_type": "", "variables": {"fields": "", "rows": "", "table": ""}, "variables_p": {"fields": [["int", 0.21339311899338556], ["str", 0.19116412376745293], ["Dict[str, str]", 0.18327485039160518], ["Dict[str, Any]", 0.09858260533245564], ["Union[bytes, str]", 0.09657176044148559], ["Type[Callable[Any, str]]", 0.09461683156132861]], "rows": [["str", 0.28706471546989176], ["int", 0.22462194236549238], ["List[List[Any]]", 0.09935252576889451], ["Dict[str, str]", 0.09298763251512306]], "table": [["str", 0.6948214807347465], ["List[int]", 0.12769155556000877], ["Dict[bool, str]", 0.08915262602831199]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[429, 4], [456, 54]], "fn_var_ln": {"commit_count": [[448, 8], [448, 20]], "fields": [[441, 8], [441, 14]], "rows": [[431, 8], [431, 12]], "sql": [[451, 8], [451, 11]], "table": [[430, 8], [430, 13]]}, "fn_var_occur": {"commit_count": [["commit_count", "self", "conn", "commit", "call_count"]], "fields": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"], ["sql", "table", "join", "fields", "join", "fields"]], "rows": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"]], "sql": [["sql", "table", "join", "fields", "join", "fields"], ["self", "cur", "execute", "assert_any_call", "sql", "row"]], "table": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"], ["sql", "table", "join", "fields", "join", "fields"]]}, "name": "test_insert_rows_replace_all_index", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "insert_rows", "table", "rows", "fields", "replace", "True", "replace_index", "fields"], ["self", "conn", "close", "call_count"], ["self", "cur", "close", "call_count"], ["commit_count", "self", "conn", "commit", "call_count"], ["self", "cur", "execute", "assert_any_call", "sql", "row"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_insert_rows_replace_all_index", "ret_exprs": [], "ret_type": "", "variables": {"commit_count": "", "fields": "", "rows": "", "sql": "", "table": ""}, "variables_p": {"commit_count": [["int", 0.6427783641329655], ["float", 0.3572216358670346]], "fields": [["str", 0.2800576548472941], ["List[str]", 0.09692060685201427]], "rows": [["paradigm.models.Plain", 0.25545539979069626], ["int", 0.17724171258692933], ["fklearn.types.SplitterFnType", 0.09894533721180061], ["fklearn.types.EvalFnType", 0.09894533721180061], ["Dict[str, int]", 0.09507902394888708], ["List[str]", 0.08954202353861408]], "sql": [["Tuple[Literal]", 0.4402337048190061], ["int", 0.21507369474750798], ["DefaultDict[Any, List[Any]]", 0.09415387943926204], ["frozenset[str]", 0.08348790986145908], ["List[Tuple[Any, Any]]", 0.07879832247165987]], "table": [["str", 0.39495503588088854], ["dict", 0.10079978942944848], ["Type[Dict[str, str]]", 0.0993534842221465]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[458, 4], [468, 54]], "fn_var_ln": {"hook": [[459, 8], [459, 12]], "input_data": [[460, 8], [460, 18]], "values": [[465, 16], [465, 22]]}, "fn_var_occur": {"hook": [["hook", "PostgresHook"], ["hook", "get_conn", "conn"]], "input_data": [["values", "join", "data", "data", "input_data"], ["cur", "rowcount", "len", "input_data"]], "values": [["values", "join", "data", "data", "input_data"], ["cur", "execute", "self", "table", "values"]]}, "name": "test_rowcount", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["cur", "execute", "self", "table"], ["cur", "execute", "self", "table", "values"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresHook.test_rowcount", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "input_data": "", "values": ""}, "variables_p": {"hook": [["str", 0.4999999999845869], ["int", 0.49999999996751665]], "input_data": [["List[Tuple[Any, Any, Any, Any, str]]", 0.6], ["List[Tuple[Any, Any, Any, Any, Any]]", 0.2], ["List[tuple]", 0.1], ["List[Dict[Any, Any]]", 0.1]], "values": [["Dict[str, bool]", 0.28564467695289025], ["bytes", 0.24800282758053652], ["int", 0.12723744432269835], ["dict", 0.07622140685397577], ["Dict[Any, Dict[str, str]]", 0.06986423879901757], ["str", 0.06737227084845175], ["float", 0.06314253218564628], ["Dict[str, Callable[[], Any]]", 0.06251460245678345]]}}], "name": "TestPostgresHook", "q_name": "TestPostgresHook", "variables": {"table": ""}, "variables_p": {"table": [["str", 0.7000000000000001], ["Dict[str, List[str]]", 0.10000000000000002], ["Tuple[int, int]", 0.10000000000000002], ["list", 0.10000000000000002]]}}], "funcs": [], "imports": ["__future__", "annotations", "json", "tempfile", "NamedTemporaryFile", "unittest", "mock", "psycopg2.extras", "pytest", "airflow", "models", "Connection", "airflow", "providers", "postgres", "hooks", "postgres", "PostgresHook", "airflow", "utils", "types", "NOTSET"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 106}, "session_id": "eUoYvmVpyICOKxm1IT3JqStvJjuHFvczUTJe-haarQM", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}