{"error": null, "response": {"classes": [{"cls_lc": [[31, 0], [140, 55]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[32, 4], [33, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_class", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeToSlackOperator.setup_class", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 4], [36, 91]], "fn_var_ln": {"example_dag": [[36, 8], [36, 24]]}, "fn_var_occur": {"example_dag": [["self", "example_dag", "DAG", "start_date", "DEFAULT_DATE"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "example_dag", "DAG", "start_date", "DEFAULT_DATE"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeToSlackOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"example_dag": ""}, "variables_p": {"example_dag": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[38, 4], [39, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeToSlackOperator.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [45, 27]], "fn_var_ln": {"operator": [[44, 12], [44, 20]]}, "fn_var_occur": {"operator": [["operator", "SnowflakeToSlackOperator", "task_id", "TEST_DAG_ID", "kwargs"]]}, "name": "_construct_operator", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": [["operator", "SnowflakeToSlackOperator", "task_id", "TEST_DAG_ID", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeToSlackOperator._construct_operator", "ret_exprs": ["return operator"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.22397029825372303], ["Type[insta.models.Image]", 0.11735102353229974], ["Union[Literal[False], Literal[True]]", 0.10680672604848965], ["str", 0.09659532647199968], ["Tuple[str, str, str, str, str, str, str, str, str, str]", 0.09588111363323429], ["Dict[str, List[str]]", 0.09185672639919551], ["List[str]", 0.08686540086283145], ["dict", 0.08581589353490329]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [83, 9]], "fn_var_ln": {"_get_hook": [[66, 8], [66, 45]], "get_pandas_df_mock": [[68, 8], [68, 26]], "mock_dbapi_hook": [[65, 8], [65, 23]], "operator_args": [[50, 8], [50, 21]], "return_value": [[69, 8], [69, 39]], "slack_webhook_hook": [[49, 8], [49, 26]], "snowflake_to_slack_operator": [[63, 8], [63, 35]]}, "fn_var_occur": {"_get_hook": [["snowflake_to_slack_operator", "_get_hook", "mock_dbapi_hook"]], "get_pandas_df_mock": [["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value"]], "mock_dbapi_hook": [["mock_dbapi_hook", "mock", "Mock"], ["snowflake_to_slack_operator", "_get_hook", "mock_dbapi_hook"], ["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"]], "operator_args": [["operator_args", "self", "example_dag"], ["snowflake_to_slack_operator", "self", "_construct_operator", "operator_args"]], "return_value": [["slack_webhook_hook", "mock_slack_hook_class", "return_value"], ["get_pandas_df_mock", "mock_dbapi_hook", "return_value", "get_pandas_df"], ["get_pandas_df_mock", "return_value"]], "slack_webhook_hook": [["slack_webhook_hook", "mock_slack_hook_class", "return_value"], ["slack_webhook_hook", "send", "assert_called_once_with", "text", "channel", "None"]], "snowflake_to_slack_operator": [["snowflake_to_slack_operator", "self", "_construct_operator", "operator_args"], ["snowflake_to_slack_operator", "_get_hook", "mock_dbapi_hook"], ["snowflake_to_slack_operator", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]]}, "name": "test_hooks_and_rendering", "params": {"mock_slack_hook_class": "", "self": ""}, "params_descr": {"mock_slack_hook_class": "", "self": ""}, "params_occur": {"mock_slack_hook_class": [["slack_webhook_hook", "mock_slack_hook_class", "return_value"], ["mock_slack_hook_class", "assert_called_once_with", "slack_webhook_conn_id", "webhook_token"]], "self": [["operator_args", "self", "example_dag"], ["snowflake_to_slack_operator", "self", "_construct_operator", "operator_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_slack_hook_class": [["mock.Mock", 0.1031981199598526]], "self": []}, "q_name": "TestSnowflakeToSlackOperator.test_hooks_and_rendering", "ret_exprs": [], "ret_type": "", "variables": {"_get_hook": "", "get_pandas_df_mock": "", "mock_dbapi_hook": "", "operator_args": "", "return_value": "", "slack_webhook_hook": "", "snowflake_to_slack_operator": ""}, "variables_p": {"_get_hook": [["list", 0.19392261407347033], ["circle_core.models.cc_info.CcInfo", 0.11910619143338243], ["Dict[str, Union[int, str]]", 0.11904615568034055], ["List[Tuple[str, str]]", 0.08686635200714954], ["int", 0.08463402608317074]], "get_pandas_df_mock": [["str", 0.21080679190266866], ["int", 0.12379114358244095], ["rotkehlchen.tests.utils.mock.MockResponse", 0.10290801711047468], ["Dict[str, str]", 0.10092381870140751], ["Dict[Any, Union[Any, Any]]", 0.09849256285123373], ["Dict[str, List[Any]]", 0.09354470746278228], ["bool", 0.09047756757632215]], "mock_dbapi_hook": [["Union[mock.AsyncMock, mock.MagicMock]", 0.8026808667040943]], "operator_args": [["Dict[str, Dict[str, Any]]", 0.1785790077490776], ["str", 0.14215788552865322], ["List[str]", 0.124185052778483], ["Dict[str, Union[Any, Any]]", 0.09792400224061194], ["list", 0.09576418282413088], ["Pattern[str]", 0.09256580735416949], ["Dict[str, str]", 0.08664388920740924], ["Dict[str, dict]", 0.08641598949333369]], "return_value": [["str", 0.2499636682860727], ["Dict[str, Any]", 0.16759873804099856], ["Optional[bytes]", 0.14082960192744254], ["tests.utils.MockCoroutine", 0.12429240040205126], ["Dict[Any, Union[int, str]]", 0.07813136646274284]], "slack_webhook_hook": [["Dict[str, Dict[str, Any]]", 0.36446275963463626], ["list", 0.29190198963772496], ["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.10417471658545366], ["Dict[str, List[str]]", 0.07940555464422207], ["str", 0.07717541461818128]], "snowflake_to_slack_operator": [["Dict[str, List[Any]]", 0.18023305229177167]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [107, 64]], "fn_var_ln": {"hook_params": [[86, 8], [86, 19]], "operator_args": [[92, 8], [92, 21]], "snowflake_operator": [[105, 8], [105, 26]]}, "fn_var_occur": {"hook_params": [["operator_args", "hook_params", "hook_params", "hook_params", "hook_params", "self", "example_dag"], ["snowflake_operator", "sql_hook_params", "hook_params"]], "operator_args": [["operator_args", "hook_params", "hook_params", "hook_params", "hook_params", "self", "example_dag"], ["snowflake_operator", "self", "_construct_operator", "operator_args"]], "snowflake_operator": [["snowflake_operator", "self", "_construct_operator", "operator_args"], ["snowflake_operator", "sql_hook_params", "hook_params"]]}, "name": "test_hook_params_building", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["operator_args", "hook_params", "hook_params", "hook_params", "hook_params", "self", "example_dag"], ["snowflake_operator", "self", "_construct_operator", "operator_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeToSlackOperator.test_hook_params_building", "ret_exprs": [], "ret_type": "", "variables": {"hook_params": "", "operator_args": "", "snowflake_operator": ""}, "variables_p": {"hook_params": [["List[List[Any]]", 0.1923158922866487]], "operator_args": [["List[str]", 0.09863270983013535], ["str", 0.09334655598940217]], "snowflake_operator": [["int", 0.3033954910571871], ["str", 0.21650613522704695], ["dict", 0.1884336847819503]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [126, 64]], "fn_var_ln": {"hook_params": [[110, 8], [110, 19]], "operator_args": [[111, 8], [111, 21]], "snowflake_operator": [[124, 8], [124, 26]]}, "fn_var_occur": {"hook_params": [["operator_args", "hook_params", "hook_params", "hook_params", "None", "self", "example_dag"], ["snowflake_operator", "sql_hook_params", "hook_params"]], "operator_args": [["operator_args", "hook_params", "hook_params", "hook_params", "None", "self", "example_dag"], ["snowflake_operator", "self", "_construct_operator", "operator_args"]], "snowflake_operator": [["snowflake_operator", "self", "_construct_operator", "operator_args"], ["snowflake_operator", "sql_hook_params", "hook_params"]]}, "name": "test_partial_hook_params_building", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["operator_args", "hook_params", "hook_params", "hook_params", "None", "self", "example_dag"], ["snowflake_operator", "self", "_construct_operator", "operator_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeToSlackOperator.test_partial_hook_params_building", "ret_exprs": [], "ret_type": "", "variables": {"hook_params": "", "operator_args": "", "snowflake_operator": ""}, "variables_p": {"hook_params": [["str", 0.10312777707482897]], "operator_args": [["list", 0.17750968270097162], ["dict", 0.11264433794331243]], "snowflake_operator": [["int", 0.3033954910571871], ["str", 0.21650613522704695], ["dict", 0.1884336847819503]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [140, 55]], "fn_var_ln": {"operator_args": [[129, 8], [129, 21]], "snowflake_operator": [[138, 8], [138, 26]]}, "fn_var_occur": {"operator_args": [["operator_args", "self", "example_dag"], ["snowflake_operator", "self", "_construct_operator", "operator_args"]], "snowflake_operator": [["snowflake_operator", "self", "_construct_operator", "operator_args"], ["snowflake_operator", "sql_hook_params"]]}, "name": "test_no_hook_params_building", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["operator_args", "self", "example_dag"], ["snowflake_operator", "self", "_construct_operator", "operator_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeToSlackOperator.test_no_hook_params_building", "ret_exprs": [], "ret_type": "", "variables": {"operator_args": "", "snowflake_operator": ""}, "variables_p": {"operator_args": [["str", 0.8934685522868538], ["MutableMapping[Any, Any]", 0.10653144771314622]], "snowflake_operator": [["int", 0.3033954910571871], ["str", 0.21650613522704695], ["dict", 0.1884336847819503]]}}], "name": "TestSnowflakeToSlackOperator", "q_name": "TestSnowflakeToSlackOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "airflow", "models", "DAG", "airflow", "providers", "snowflake", "transfers", "snowflake_to_slack", "SnowflakeToSlackOperator", "airflow", "utils", "timezone", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_runs"], "mod_var_ln": {"DEFAULT_DATE": [[28, 0], [28, 12]], "TEST_DAG_ID": [[27, 0], [27, 11]]}, "mod_var_occur": {"DEFAULT_DATE": [["self", "example_dag", "DAG", "start_date", "DEFAULT_DATE"], ["snowflake_to_slack_operator", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "TEST_DAG_ID": [["operator", "SnowflakeToSlackOperator", "task_id", "TEST_DAG_ID", "kwargs"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 29}, "session_id": "CLkRItWSNknq-3_oyhysMV2AzztSeSzhfdfRXfjA4e0", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "TEST_DAG_ID": ""}, "variables_p": {"DEFAULT_DATE": [["datetime.datetime.timezone", 0.10925068207326387], ["str", 0.10598029351837512], ["Pattern[str]", 0.09164593144676632], ["Type[leasing.models.vaVat]", 0.08926942213457267]], "TEST_DAG_ID": [["int", 0.19985281456494036], ["str", 0.18255792826276804], ["Dict[str, str]", 0.1780474621725898], ["Tuple[str]", 0.11448409075188265]]}}}