{"error": null, "response": {"classes": [{"cls_lc": [[76, 0], [605, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [272, 106]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_hook_should_support_prepare_basic_conn_params_and_uri", "params": {"connection_kwargs": "", "expected_conn_params": "", "expected_uri": "", "self": ""}, "params_descr": {"connection_kwargs": "", "expected_conn_params": "", "expected_uri": "", "self": ""}, "params_occur": {"connection_kwargs": [["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"]], "expected_conn_params": [["SnowflakeHook", "snowflake_conn_id", "_get_conn_params", "expected_conn_params"]], "expected_uri": [["SnowflakeHook", "snowflake_conn_id", "get_uri", "expected_uri"]], "self": []}, "params_p": {"args": [], "connection_kwargs": [["bool", 0.10649505083015037]], "expected_conn_params": [["int", 0.40432786056897585]], "expected_uri": [["int", 0.3374230233667936]], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_hook_should_support_prepare_basic_conn_params_and_uri", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[274, 4], [290, 99]], "fn_var_ln": {"connection_kwargs": [[277, 8], [277, 25]]}, "fn_var_occur": {"connection_kwargs": [["connection_kwargs", "typing", "Any", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key", "read_text"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"]]}, "name": "test_get_conn_params_should_support_private_auth_in_connection", "params": {"encrypted_temporary_private_key": "pathlib.Path", "self": ""}, "params_descr": {"encrypted_temporary_private_key": "", "self": ""}, "params_occur": {"encrypted_temporary_private_key": [["connection_kwargs", "typing", "Any", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key", "read_text"]], "self": []}, "params_p": {"args": [], "encrypted_temporary_private_key": [["str", 0.8158182908796443], ["int", 0.08647635001801512]], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_conn_params_should_support_private_auth_in_connection", "ret_exprs": [], "ret_type": "", "variables": {"connection_kwargs": "typing.Any"}, "variables_p": {"connection_kwargs": [["Dict[str, str]", 0.19061683589262252], ["dict", 0.17021642657591612], ["Set[str]", 0.09016406466494781], ["Dict[str, Union[dict, Any, Any]]", 0.08787062862653328], ["Dict[str, Any]", 0.08364906667162474], ["str", 0.07800403073610152], ["Dict[str, Optional[int]]", 0.0776050199904208]]}}, {"docstring": {"func": "When both hook params and extras are supplied, hook params should", "long_descr": "beat extras.", "ret": null}, "fn_lc": [[293, 4], [319, 13]], "fn_var_ln": {"extras": [[305, 8], [305, 14]], "hook_params": [[296, 8], [296, 19]]}, "fn_var_occur": {"extras": [["extras", "k", "v", "k", "v", "hook_params", "items"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "conn_type", "extra", "json", "dumps", "extras", "get_uri"], ["hook_params", "extras"], ["SnowflakeHook", "snowflake_conn_id", "hook_params", "include_params", "_get_conn_params", "None", "hook_params", "include_params", "extras"]], "hook_params": [["hook_params", "dict", "account", "warehouse", "database", "region", "role", "authenticator", "session_parameters"], ["extras", "k", "v", "k", "v", "hook_params", "items"], ["hook_params", "extras"], ["SnowflakeHook", "snowflake_conn_id", "hook_params", "include_params", "_get_conn_params", "None", "hook_params", "include_params", "extras"]]}, "name": "test_hook_param_beats_extra", "params": {"include_params": "", "self": ""}, "params_descr": {"include_params": "", "self": ""}, "params_occur": {"include_params": [["SnowflakeHook", "snowflake_conn_id", "hook_params", "include_params", "_get_conn_params", "None", "hook_params", "include_params", "extras"]], "self": []}, "params_p": {"args": [], "include_params": [["base.Connection", 0.36123357842858517], ["tests.basilisp.helpers.CompileFn", 0.07830914033802007]], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_hook_param_beats_extra", "ret_exprs": [], "ret_type": "", "variables": {"extras": "", "hook_params": ""}, "variables_p": {"extras": [["dict", 0.1740657641725753], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, str]]", 0.101396116198897], ["List[bytes]", 0.097069847240281], ["Dict[Any, list]", 0.09370993387955145], ["OrderedDict[str, Any]", 0.08869265700846327], ["List[Union[Any, Any]]", 0.08773584364793055], ["Dict[str, str]", 0.08469726507887952]], "hook_params": [["dict", 0.37574011323908324], ["list", 0.15973980476916455], ["Dict[str, str]", 0.1086327244347184], ["List[Tuple[Any, Any]]", 0.09214550776400149], ["tuple", 0.09057262173878339], ["List[Tuple[int, Any]]", 0.081978881157657]]}}, {"docstring": {"func": "When both prefixed and unprefixed values are found in extra (e.g.", "long_descr": "extra__snowflake__account and account), we should prefer the short\nname.", "ret": null}, "fn_lc": [[322, 4], [350, 13]], "fn_var_ln": {"extras": [[326, 8], [326, 14]], "extras_prefixed": [[333, 8], [333, 23]]}, "fn_var_occur": {"extras": [["extras", "dict", "account", "warehouse", "database", "region", "role"], ["extras_prefixed", "k", "v", "k", "v", "extras", "items"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "conn_type", "extra", "json", "dumps", "extras", "include_unprefixed", "extras_prefixed", "get_uri"], ["list", "extras", "values", "list", "extras_prefixed", "values"], ["SnowflakeHook", "snowflake_conn_id", "_get_conn_params", "None", "None", "extras", "include_unprefixed", "dict", "zip", "extras", "keys", "extras_prefixed", "values"]], "extras_prefixed": [["extras_prefixed", "k", "v", "k", "v", "extras", "items"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "conn_type", "extra", "json", "dumps", "extras", "include_unprefixed", "extras_prefixed", "get_uri"], ["list", "extras", "values", "list", "extras_prefixed", "values"], ["SnowflakeHook", "snowflake_conn_id", "_get_conn_params", "None", "None", "extras", "include_unprefixed", "dict", "zip", "extras", "keys", "extras_prefixed", "values"]]}, "name": "test_extra_short_beats_long", "params": {"include_unprefixed": "", "self": ""}, "params_descr": {"include_unprefixed": "", "self": ""}, "params_occur": {"include_unprefixed": [["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "conn_type", "extra", "json", "dumps", "extras", "include_unprefixed", "extras_prefixed", "get_uri"], ["SnowflakeHook", "snowflake_conn_id", "_get_conn_params", "None", "None", "extras", "include_unprefixed", "dict", "zip", "extras", "keys", "extras_prefixed", "values"]], "self": []}, "params_p": {"args": [], "include_unprefixed": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_extra_short_beats_long", "ret_exprs": [], "ret_type": "", "variables": {"extras": "", "extras_prefixed": ""}, "variables_p": {"extras": [["dict", 0.4860325973772265], ["str", 0.2094846532284977], ["Dict[str, str]", 0.13385759233001865], ["Dict[str, Sequence[Any]]", 0.08872019736986012], ["list", 0.08190495969439698]], "extras_prefixed": [["Dict[str, str]", 0.3885874342589894], ["List[str]", 0.20276428097902552], ["int", 0.1058507264004707], ["dict", 0.10065519330473159], ["str", 0.09843534946823161]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[352, 4], [368, 99]], "fn_var_ln": {"connection_kwargs": [[355, 8], [355, 25]]}, "fn_var_occur": {"connection_kwargs": [["connection_kwargs", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"]]}, "name": "test_get_conn_params_should_support_private_auth_with_encrypted_key", "params": {"encrypted_temporary_private_key": "", "self": ""}, "params_descr": {"encrypted_temporary_private_key": "", "self": ""}, "params_occur": {"encrypted_temporary_private_key": [["connection_kwargs", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key"]], "self": []}, "params_p": {"args": [], "encrypted_temporary_private_key": [["int", 0.2882506170179302], ["str", 0.1951843557370831], ["pathlib.Path", 0.09721616518331407], ["bytes", 0.0903872651041984]], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_conn_params_should_support_private_auth_with_encrypted_key", "ret_exprs": [], "ret_type": "", "variables": {"connection_kwargs": ""}, "variables_p": {"connection_kwargs": [["Dict[str, Union[Any, Any]]", 0.09598795670309515], ["Dict[str, Union[bytes, int]]", 0.09539390865800519], ["Dict[str, Any]", 0.09480836591704389]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[370, 4], [394, 75]], "fn_var_ln": {"connection_kwargs": [[373, 8], [373, 25]]}, "fn_var_occur": {"connection_kwargs": [["connection_kwargs", "BASE_CONNECTION_KWARGS", "None", "str", "non_encrypted_temporary_private_key"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"], ["connection_kwargs", "_PASSWORD"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"]]}, "name": "test_get_conn_params_should_support_private_auth_with_unencrypted_key", "params": {"non_encrypted_temporary_private_key": "", "self": ""}, "params_descr": {"non_encrypted_temporary_private_key": "", "self": ""}, "params_occur": {"non_encrypted_temporary_private_key": [["connection_kwargs", "BASE_CONNECTION_KWARGS", "None", "str", "non_encrypted_temporary_private_key"]], "self": []}, "params_p": {"args": [], "kwargs": [], "non_encrypted_temporary_private_key": [["bool", 0.2965256018230926], ["Optional[Mapping[str, Any]]", 0.10552012107795987], ["str", 0.10552012107795987], ["pathlib.Path", 0.09558910336926037]], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_conn_params_should_support_private_auth_with_unencrypted_key", "ret_exprs": [], "ret_type": "", "variables": {"connection_kwargs": ""}, "variables_p": {"connection_kwargs": [["str", 0.3534617369603485], ["Dict[str, Any]", 0.11899826700401211], ["Dict[str, Union[int, str]]", 0.085805638088902], ["dict", 0.08295427231841901], ["Dict[str, List[int]]", 0.08066141659670761]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[396, 4], [405, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_add_partner_info", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_should_add_partner_info", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[407, 4], [414, 62]], "fn_var_ln": {"conn": [[412, 12], [412, 16]], "hook": [[411, 12], [411, 16]]}, "fn_var_occur": {"conn": [["conn", "hook", "get_conn"], ["mock_connector", "connect", "return_value", "conn"]], "hook": [["hook", "SnowflakeHook", "snowflake_conn_id"], ["conn", "hook", "get_conn"], ["mock_connector", "connect", "assert_called_once_with", "hook", "_get_conn_params"]]}, "name": "test_get_conn_should_call_connect", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_conn_should_call_connect", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "hook": ""}, "variables_p": {"conn": [["list", 0.29483521529213935], ["Dict[str, int]", 0.19129259074622834], ["int", 0.10915789324438543], ["List[Dict[str, Any]]", 0.09005485697712572]], "hook": [["Dict[str, Union[Any, Any, Any]]", 0.13769839358145203], ["str", 0.09701362990576483]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[416, 4], [426, 58]], "fn_var_ln": {"conn": [[421, 12], [421, 16]], "hook": [[420, 12], [420, 16]]}, "fn_var_occur": {"conn": [["conn", "hook", "get_sqlalchemy_engine"], ["mock_create_engine", "return_value", "conn"]], "hook": [["hook", "SnowflakeHook", "snowflake_conn_id"], ["conn", "hook", "get_sqlalchemy_engine"]]}, "name": "test_get_sqlalchemy_engine_should_support_pass_auth", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_sqlalchemy_engine_should_support_pass_auth", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "hook": ""}, "variables_p": {"conn": [["list", 0.3719051666809531], ["str", 0.08726731548586283]], "hook": [["str", 0.1377857807361858], ["Tuple[str, str, str, str]", 0.07553073031814489], ["decksite.data.models.person.Person", 0.07173549787720472]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[428, 4], [442, 58]], "fn_var_ln": {"conn": [[436, 12], [436, 16]], "connection_kwargs": [[429, 8], [429, 25]], "hook": [[435, 12], [435, 16]]}, "fn_var_occur": {"conn": [["conn", "hook", "get_sqlalchemy_engine"], ["mock_create_engine", "return_value", "conn"]], "connection_kwargs": [["connection_kwargs", "deepcopy", "BASE_CONNECTION_KWARGS"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"]], "hook": [["hook", "SnowflakeHook", "snowflake_conn_id"], ["conn", "hook", "get_sqlalchemy_engine"]]}, "name": "test_get_sqlalchemy_engine_should_support_insecure_mode", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_sqlalchemy_engine_should_support_insecure_mode", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "connection_kwargs": "", "hook": ""}, "variables_p": {"conn": [["list", 0.3719051666809531], ["str", 0.08726731548586283]], "connection_kwargs": [["Dict[str, List[int]]", 0.19345268807882218], ["dict", 0.1400337150311893], ["Dict[str, List[Any]]", 0.09655825348531165], ["DefaultDict[Any, dict]", 0.09367327671932459], ["str", 0.08704409511311925]], "hook": [["str", 0.1377857807361858], ["Tuple[str, str, str, str]", 0.07553073031814489], ["decksite.data.models.person.Person", 0.07173549787720472]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[444, 4], [458, 58]], "fn_var_ln": {"conn": [[452, 12], [452, 16]], "connection_kwargs": [[445, 8], [445, 25]], "hook": [[451, 12], [451, 16]]}, "fn_var_occur": {"conn": [["conn", "hook", "get_sqlalchemy_engine"], ["mock_create_engine", "return_value", "conn"]], "connection_kwargs": [["connection_kwargs", "deepcopy", "BASE_CONNECTION_KWARGS"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"]], "hook": [["hook", "SnowflakeHook", "snowflake_conn_id"], ["conn", "hook", "get_sqlalchemy_engine"]]}, "name": "test_get_sqlalchemy_engine_should_support_session_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_sqlalchemy_engine_should_support_session_parameters", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "connection_kwargs": "", "hook": ""}, "variables_p": {"conn": [["list", 0.3719051666809531], ["str", 0.08726731548586283]], "connection_kwargs": [["Dict[str, List[int]]", 0.19345268807882218], ["dict", 0.1400337150311893], ["Dict[str, List[Any]]", 0.09655825348531165], ["DefaultDict[Any, dict]", 0.09367327671932459], ["str", 0.08704409511311925]], "hook": [["str", 0.1377857807361858], ["Tuple[str, str, str, str]", 0.07553073031814489], ["decksite.data.models.person.Person", 0.07173549787720472]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[460, 4], [471, 58]], "fn_var_ln": {"conn": [[469, 12], [469, 16]], "connection_kwargs": [[461, 8], [461, 25]], "hook": [[468, 12], [468, 16]]}, "fn_var_occur": {"conn": [["conn", "hook", "get_sqlalchemy_engine"], ["mock_create_engine", "return_value", "conn"]], "connection_kwargs": [["connection_kwargs", "deepcopy", "BASE_CONNECTION_KWARGS"], ["connection_kwargs", "str", "non_encrypted_temporary_private_key"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "connection_kwargs", "get_uri"]], "hook": [["hook", "SnowflakeHook", "snowflake_conn_id"], ["conn", "hook", "get_sqlalchemy_engine"]]}, "name": "test_get_sqlalchemy_engine_should_support_private_key_auth", "params": {"non_encrypted_temporary_private_key": "", "self": ""}, "params_descr": {"non_encrypted_temporary_private_key": "", "self": ""}, "params_occur": {"non_encrypted_temporary_private_key": [["connection_kwargs", "str", "non_encrypted_temporary_private_key"]], "self": []}, "params_p": {"args": [], "kwargs": [], "non_encrypted_temporary_private_key": [["str", 0.6912401037542507], ["bytes", 0.1066358476864082], ["IO[bytes]", 0.09141140019508698]], "self": []}, "q_name": "TestPytestSnowflakeHook.test_get_sqlalchemy_engine_should_support_private_key_auth", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "connection_kwargs": "", "hook": ""}, "variables_p": {"conn": [["list", 0.3719051666809531], ["str", 0.08726731548586283]], "connection_kwargs": [], "hook": [["str", 0.1377857807361858], ["Tuple[str, str, str, str]", 0.07553073031814489], ["decksite.data.models.person.Person", 0.07173549787720472]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[473, 4], [504, 31]], "fn_var_ln": {"hook": [[477, 12], [477, 16]]}, "fn_var_occur": {"hook": [["hook", "SnowflakeHook", "snowflake_conn_id", "account", "warehouse", "database", "region", "role", "schema", "authenticator", "session_parameters"], ["hook", "_get_conn_params"], ["hook", "get_uri"]]}, "name": "test_hook_parameters_should_take_precedence", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_hook_parameters_should_take_precedence", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.1987886580768537], ["pathlib.Path", 0.15088650734512524], ["list", 0.11641740814114594], ["int", 0.07541011446111426], ["Dict[str, Union[Any, Any, Any, Any]]", 0.07541011446111426]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[524, 4], [535, 33]], "fn_var_ln": {"conn": [[526, 8], [526, 12]], "cur": [[527, 8], [527, 11]], "hook": [[525, 8], [525, 12]], "mock_params": [[530, 8], [530, 19]]}, "fn_var_occur": {"conn": [["conn", "mock_conn", "return_value"], ["conn", "cursor", "return_value", "cur"]], "cur": [["cur", "mock", "MagicMock", "rowcount"], ["conn", "cursor", "return_value", "cur"], ["type", "cur", "sfqid", "mock", "PropertyMock", "side_effect", "expected_query_ids"], ["cur", "execute", "assert_has_calls", "mock", "call", "query", "mock_params", "query", "expected_sql"], ["cur", "close", "assert_called"]], "hook": [["hook", "SnowflakeHook"], ["hook", "run", "sql", "parameters", "mock_params"], ["hook", "query_ids", "expected_query_ids"]], "mock_params": [["hook", "run", "sql", "parameters", "mock_params"], ["cur", "execute", "assert_has_calls", "mock", "call", "query", "mock_params", "query", "expected_sql"]]}, "name": "test_run_storing_query_ids_extra", "params": {"expected_query_ids": "", "expected_sql": "", "mock_conn": "", "self": "", "sql": ""}, "params_descr": {"expected_query_ids": "", "expected_sql": "", "mock_conn": "", "self": "", "sql": ""}, "params_occur": {"expected_query_ids": [["type", "cur", "sfqid", "mock", "PropertyMock", "side_effect", "expected_query_ids"], ["hook", "query_ids", "expected_query_ids"]], "expected_sql": [["cur", "execute", "assert_has_calls", "mock", "call", "query", "mock_params", "query", "expected_sql"]], "mock_conn": [["conn", "mock_conn", "return_value"]], "self": [], "sql": [["hook", "run", "sql", "parameters", "mock_params"]]}, "params_p": {"args": [], "expected_query_ids": [["mock.Mock", 0.09528015139977256]], "expected_sql": [], "kwargs": [], "mock_conn": [], "self": [], "sql": [["int", 0.1336672029088655], ["Iterable", 0.08522840009828642]]}, "q_name": "TestPytestSnowflakeHook.test_run_storing_query_ids_extra", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "cur": "", "hook": "", "mock_params": ""}, "variables_p": {"conn": [["str", 0.18782682706577253], ["Dict[str, Union[Any, Any, Any, Any]]", 0.1435088107561844], ["List[Union[Any, Any, Any]]", 0.1435088107561844], ["List[Dict[str, Any]]", 0.07598747393416971], ["list", 0.07292185980980455]], "cur": [["mock.Mock", 0.17207569985761856]], "hook": [["str", 0.19317780389175393]], "mock_params": [["Dict[str, Tuple[str, Any]]", 0.2513073478374389]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[538, 4], [547, 62]], "fn_var_ln": {"hook": [[542, 12], [542, 16]], "msg": [[544, 20], [544, 23]], "return_value": [[543, 12], [543, 39]], "status": [[544, 12], [544, 18]]}, "fn_var_occur": {"hook": [["hook", "SnowflakeHook"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "return_value": [["mock_get_first", "return_value"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "True"]]}, "name": "test_connection_success", "params": {"mock_get_first": "", "self": ""}, "params_descr": {"mock_get_first": "", "self": ""}, "params_occur": {"mock_get_first": [["mock_get_first", "return_value"], ["mock_get_first", "assert_called_once_with"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_first": [["mock.MagicMock", 0.12356419903047691]], "self": []}, "q_name": "TestPytestSnowflakeHook.test_connection_success", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "msg": "", "return_value": "", "status": ""}, "variables_p": {"hook": [["str", 0.3753054093155023], ["int", 0.09145548486064957], ["Dict[Any, str]", 0.07961872863917242]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "return_value": [["int", 0.3135222837064679], ["str", 0.23052785147261584], ["Tuple[int, int]", 0.11094316168745796], ["Dict[str, Union[int, str]]", 0.07347137688931107]], "status": [["str", 0.8070705504286348], ["Dict[str, str]", 0.10742002232739085], ["Optional[str]", 0.08550942724397416]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[553, 4], [561, 62]], "fn_var_ln": {"hook": [[557, 12], [557, 16]], "msg": [[558, 20], [558, 23]], "status": [[558, 12], [558, 18]]}, "fn_var_occur": {"hook": [["hook", "SnowflakeHook"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "False"]]}, "name": "test_connection_failure", "params": {"mock_get_first": "", "self": ""}, "params_descr": {"mock_get_first": "", "self": ""}, "params_occur": {"mock_get_first": [["mock_get_first", "assert_called_once_with"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_first": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_connection_failure", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "msg": "", "status": ""}, "variables_p": {"hook": [["str", 0.3753054093155023], ["int", 0.09145548486064957], ["Dict[Any, str]", 0.07961872863917242]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "status": [["int", 0.5965902263708184], ["str", 0.09504299251503023]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[563, 4], [569, 73]], "fn_var_ln": {"hook": [[564, 8], [564, 12]]}, "fn_var_occur": {"hook": [["hook", "SnowflakeHook"], ["hook", "run", "sql", "empty_statement"]]}, "name": "test_empty_sql_parameter", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test_empty_sql_parameter", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": []}}, {"docstring": {"func": "Ensure that _ensure_prefixes is removed from snowflake when airflow min version >= 2.5.0.", "long_descr": null, "ret": null}, "fn_lc": [[571, 4], [584, 13]], "fn_var_ln": {"path": [[573, 8], [573, 12]]}, "fn_var_occur": {"path": [["object_exists", "path"]]}, "name": "test__ensure_prefixes_removal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test__ensure_prefixes_removal", "ret_exprs": [], "ret_type": "", "variables": {"path": ""}, "variables_p": {"path": [["str", 0.3333333333865924], ["List[Tuple[float, float]]", 0.3333333332854392], ["Tuple[str, str]", 2.978817973747046e-11]]}}, {"docstring": {"func": "Check that ensure_prefixes decorator working properly", "long_descr": "Note: remove this test when removing ensure_prefixes (after min airflow version >= 2.5.0", "ret": null}, "fn_lc": [[586, 4], [605, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test___ensure_prefixes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPytestSnowflakeHook.test___ensure_prefixes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestPytestSnowflakeHook", "q_name": "TestPytestSnowflakeHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[53, 0], [60, 24]], "fn_var_ln": {"key": [[54, 4], [54, 7]], "private_key": [[55, 4], [55, 15]], "test_key_file": [[58, 4], [58, 17]]}, "fn_var_occur": {"key": [["key", "rsa", "generate_private_key", "backend", "default_backend", "public_exponent", "key_size"], ["private_key", "key", "private_bytes", "serialization", "Encoding", "PEM", "serialization", "PrivateFormat", "PKCS8", "serialization", "NoEncryption"]], "private_key": [["private_key", "key", "private_bytes", "serialization", "Encoding", "PEM", "serialization", "PrivateFormat", "PKCS8", "serialization", "NoEncryption"], ["test_key_file", "write_bytes", "private_key"]], "test_key_file": [["test_key_file", "tmp_path"], ["test_key_file", "write_bytes", "private_key"]]}, "name": "non_encrypted_temporary_private_key", "params": {"tmp_path": "pathlib.Path"}, "params_descr": {"tmp_path": ""}, "params_occur": {"tmp_path": [["test_key_file", "tmp_path"]]}, "params_p": {"args": [], "kwargs": [], "tmp_path": [["pathlib.Path", 0.5875146770539749], ["pathlib.PurePath", 0.21005340520836313], ["Iterable[str]", 0.10750814630727225], ["str", 0.09492377143038981]]}, "q_name": "non_encrypted_temporary_private_key", "ret_exprs": ["return test_key_file"], "ret_type": "pathlib.Path", "ret_type_p": [["str", 0.1956642089715885], ["dict", 0.17974457620649376], ["List[int]", 0.1175963432180135], ["salon.models.Stylist", 0.11123073702007848], ["Mapping[str, Any]", 0.09229844483035694]], "variables": {"key": "", "private_key": "", "test_key_file": ""}, "variables_p": {"key": [["bytes", 0.45861204867277444]], "private_key": [["str", 0.589338786583619], ["Dict[str, List[str]]", 0.10468774818030648], ["Dict[str, str]", 0.07126588445141452], ["bytes", 0.06702430291376883]], "test_key_file": [["str", 0.667396442415038], ["pathlib.Path", 0.22772872624663254]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 0], [73, 24]], "fn_var_ln": {"key": [[65, 4], [65, 7]], "private_key": [[66, 4], [66, 15]], "test_key_file": [[71, 4], [71, 17]]}, "fn_var_occur": {"key": [["key", "rsa", "generate_private_key", "backend", "default_backend", "public_exponent", "key_size"], ["private_key", "key", "private_bytes", "serialization", "Encoding", "PEM", "serialization", "PrivateFormat", "PKCS8", "encryption_algorithm", "serialization", "BestAvailableEncryption", "_PASSWORD", "encode"]], "private_key": [["private_key", "key", "private_bytes", "serialization", "Encoding", "PEM", "serialization", "PrivateFormat", "PKCS8", "encryption_algorithm", "serialization", "BestAvailableEncryption", "_PASSWORD", "encode"], ["test_key_file", "write_bytes", "private_key"]], "test_key_file": [["test_key_file", "pathlib", "Path", "tmp_path"], ["test_key_file", "write_bytes", "private_key"]]}, "name": "encrypted_temporary_private_key", "params": {"tmp_path": "pathlib.Path"}, "params_descr": {"tmp_path": ""}, "params_occur": {"tmp_path": [["test_key_file", "pathlib", "Path", "tmp_path"]]}, "params_p": {"args": [], "kwargs": [], "tmp_path": [["pathlib.Path", 0.6780857197060677], ["str", 0.253354463717896]]}, "q_name": "encrypted_temporary_private_key", "ret_exprs": ["return test_key_file"], "ret_type": "pathlib.Path", "ret_type_p": [["List[int]", 0.1216501931768469], ["Iterable[Tuple[str, str]]", 0.11191714240071485], ["dict", 0.10259619117455517], ["MutableMapping[str, Any]", 0.09754376355766428], ["str", 0.0947965395121045], ["List[str]", 0.08823650795523158], ["Mapping[str, Any]", 0.0876387781626865], ["salon.models.Stylist", 0.08733731326304697]], "variables": {"key": "", "private_key": "", "test_key_file": "pathlib.Path"}, "variables_p": {"key": [["bytes", 0.45861204867277444]], "private_key": [["str", 0.8724369634198912], ["Dict[str, List[str]]", 0.1275630365801088]], "test_key_file": [["pathlib.Path", 1.0]]}}], "imports": ["__future__", "annotations", "json", "copy", "deepcopy", "pathlib", "Path", "typing", "Any", "unittest", "mock", "pytest", "cryptography", "hazmat", "backends", "default_backend", "cryptography", "hazmat", "primitives", "serialization", "cryptography", "hazmat", "primitives", "asymmetric", "rsa", "airflow", "models", "Connection", "airflow", "providers", "snowflake", "hooks", "snowflake", "SnowflakeHook", "tests", "test_utils", "providers", "get_provider_min_airflow_version", "object_exists"], "mod_var_ln": {"BASE_CONNECTION_KWARGS": [[37, 0], [37, 22]], "_PASSWORD": [[35, 0], [35, 9]]}, "mod_var_occur": {"BASE_CONNECTION_KWARGS": [["connection_kwargs", "typing", "Any", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key", "read_text"], ["connection_kwargs", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key"], ["connection_kwargs", "BASE_CONNECTION_KWARGS", "None", "str", "non_encrypted_temporary_private_key"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "BASE_CONNECTION_KWARGS", "get_uri", "AIRFLOW_SNOWFLAKE_PARTNER"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "BASE_CONNECTION_KWARGS", "get_uri"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "BASE_CONNECTION_KWARGS", "get_uri"], ["connection_kwargs", "deepcopy", "BASE_CONNECTION_KWARGS"], ["connection_kwargs", "deepcopy", "BASE_CONNECTION_KWARGS"], ["connection_kwargs", "deepcopy", "BASE_CONNECTION_KWARGS"], ["mock", "patch", "dict", "AIRFLOW_CONN_TEST_CONN", "Connection", "BASE_CONNECTION_KWARGS", "get_uri"], ["mock", "patch", "dict", "AIRFLOW_CONN_SNOWFLAKE_DEFAULT", "Connection", "BASE_CONNECTION_KWARGS", "get_uri"], ["mock", "patch", "dict", "AIRFLOW_CONN_SNOWFLAKE_DEFAULT", "Connection", "BASE_CONNECTION_KWARGS", "get_uri"]], "_PASSWORD": [["private_key", "key", "private_bytes", "serialization", "Encoding", "PEM", "serialization", "PrivateFormat", "PKCS8", "encryption_algorithm", "serialization", "BestAvailableEncryption", "_PASSWORD", "encode"], ["connection_kwargs", "typing", "Any", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key", "read_text"], ["connection_kwargs", "BASE_CONNECTION_KWARGS", "_PASSWORD", "str", "encrypted_temporary_private_key"], ["connection_kwargs", "_PASSWORD"]]}, "no_types_annot": {"D": 8, "I": 0, "U": 72}, "session_id": "3rojR7PYGCcD_6nX-tYo3_fpoBhT-gjpT7OQ0I8PZtc", "set": null, "tc": [false, null], "type_annot_cove": 0.1, "typed_seq": "", "untyped_seq": "", "variables": {"BASE_CONNECTION_KWARGS": "builtins.dict", "_PASSWORD": ""}, "variables_p": {"BASE_CONNECTION_KWARGS": [["str", 0.907778428395874], ["Final", 0.09222157160412603]], "_PASSWORD": [["str", 0.6991030411426994], ["List[str]", 0.12027404213701379], ["Dict[str, List[str]]", 0.0911943622802518], ["Tuple[Literal]", 0.08942855444003511]]}}}