{"error": null, "response": {"classes": [{"cls_lc": [[35, 0], [37, 37]], "cls_var_ln": {"conn_name_attr": [[36, 4], [36, 18]], "get_conn": [[37, 4], [37, 12]]}, "cls_var_occur": {"conn_name_attr": [], "get_conn": []}, "funcs": [], "name": "SnowflakeHookForTests", "q_name": "SnowflakeHookForTests", "variables": {"conn_name_attr": "", "get_conn": ""}, "variables_p": {"conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "get_conn": [["str", 0.6], ["bool", 0.1]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 0], [41, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_cursor_descriptions", "params": {"fields": "builtins.list[builtins.str]"}, "params_descr": {"fields": ""}, "params_occur": {"fields": [["field", "field", "fields"]]}, "params_p": {"args": [], "fields": [["str", 0.10573012143287025], ["int", 0.10455046250480103], ["ValueError", 0.07499802619315853], ["set", 0.07039597757791444]], "kwargs": []}, "q_name": "get_cursor_descriptions", "ret_exprs": ["return [(field,) for field in fields]"], "ret_type": "builtins.list[builtins.tuple[builtins.str]]", "ret_type_p": [["list", 0.2079127639634381], ["dict", 0.1988841892733677], ["List[str]", 0.1916905793268722], ["str", 0.09912101132850135], ["List[\"Variable\"]", 0.09642178229951548]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[206, 4], [213, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_execute", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_query.<locals>.mock_execute", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 0], [233, 78]], "fn_var_ln": {"dbapi_hook": [[202, 4], [202, 14]], "modified_descriptions": [[199, 4], [199, 25]], "results": [[217, 4], [217, 11]]}, "fn_var_occur": {"dbapi_hook": [["dbapi_hook", "get_conn", "return_value", "cursor", "return_value", "execute", "mock_execute"], ["dbapi_hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "cursor_results"], ["results", "dbapi_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements", "return_dictionaries", "return_dictionaries"], ["dbapi_hook", "descriptions", "hook_descriptions"], ["dbapi_hook", "last_description", "hook_descriptions"], ["dbapi_hook", "get_conn", "return_value", "cursor", "assert_called_with", "DictCursor"], ["dbapi_hook", "get_conn", "return_value", "cursor", "assert_called_with"], ["dbapi_hook", "get_conn", "return_value", "cursor", "return_value", "close", "assert_called"]], "modified_descriptions": [], "results": [["results", "dbapi_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements", "return_dictionaries", "return_dictionaries"], ["results", "hook_results"]]}, "name": "test_query", "params": {"cursor_calls": "", "cursor_descriptions": "", "cursor_results": "", "hook_descriptions": "", "hook_results": "", "return_dictionaries": "", "return_last": "", "split_statements": "", "sql": ""}, "params_descr": {"cursor_calls": "", "cursor_descriptions": "", "cursor_results": "", "hook_descriptions": "", "hook_results": "", "return_dictionaries": "", "return_last": "", "split_statements": "", "sql": ""}, "params_occur": {"cursor_calls": [], "cursor_descriptions": [], "cursor_results": [["dbapi_hook", "get_conn", "return_value", "cursor", "return_value", "fetchall", "side_effect", "cursor_results"]], "hook_descriptions": [["dbapi_hook", "descriptions", "hook_descriptions"], ["dbapi_hook", "last_description", "hook_descriptions"]], "hook_results": [["results", "hook_results"]], "return_dictionaries": [["results", "dbapi_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements", "return_dictionaries", "return_dictionaries"]], "return_last": [["results", "dbapi_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements", "return_dictionaries", "return_dictionaries"]], "split_statements": [["results", "dbapi_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements", "return_dictionaries", "return_dictionaries"]], "sql": [["results", "dbapi_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements", "return_dictionaries", "return_dictionaries"]]}, "params_p": {"args": [], "cursor_calls": [["str", 0.2534335499961579], ["Callable[..., None]", 0.12050866345395235], ["int", 0.08977920308722835], ["bool", 0.08738256802651959]], "cursor_descriptions": [["str", 0.2534335499961579], ["Callable[..., None]", 0.12050866345395235], ["int", 0.08977920308722835], ["bool", 0.08738256802651959]], "cursor_results": [["unittesmock.MagicMock", 0.12501236544134559]], "hook_descriptions": [["str", 0.7015303745425348], ["list", 0.09604134948971155]], "hook_results": [["Callable[..., Awaitable]", 0.09360479920376687], ["geoapi.common.json_models.RealPropertyIn", 0.09215667884278352]], "kwargs": [], "return_dictionaries": [], "return_last": [], "split_statements": [], "sql": []}, "q_name": "test_query", "ret_exprs": [], "ret_type": "", "variables": {"dbapi_hook": "", "modified_descriptions": "", "results": ""}, "variables_p": {"dbapi_hook": [["Dict[str, Dict[str, Any]]", 0.4735858758116005], ["list", 0.1483867384643731], ["str", 0.07634453121053804]], "modified_descriptions": [["str", 0.4], ["int", 0.4], ["Optional[\"LocalizedString\"]", 0.1], ["List[str]", 0.1]], "results": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[244, 0], [249, 65]], "fn_var_ln": {"dbapi_hook": [[245, 4], [245, 14]]}, "fn_var_occur": {"dbapi_hook": [["dbapi_hook", "SnowflakeHookForTests"], ["dbapi_hook", "get_conn", "return_value", "cursor", "rowcount"], ["dbapi_hook", "run", "sql", "empty_statement"]]}, "name": "test_no_query", "params": {"empty_statement": ""}, "params_descr": {"empty_statement": ""}, "params_occur": {"empty_statement": [["dbapi_hook", "run", "sql", "empty_statement"]]}, "params_p": {"args": [], "empty_statement": [["str", 0.09698188691795945]], "kwargs": []}, "q_name": "test_no_query", "ret_exprs": [], "ret_type": "", "variables": {"dbapi_hook": ""}, "variables_p": {"dbapi_hook": [["List[str]", 0.2911440186818877], ["str", 0.09195538923397766]]}}], "imports": ["__future__", "annotations", "unittest", "mock", "MagicMock", "pytest", "snowflake", "connector", "DictCursor", "airflow", "providers", "common", "sql", "hooks", "sql", "fetch_all_handler", "airflow", "providers", "snowflake", "hooks", "snowflake", "SnowflakeHook"], "mod_var_ln": {"DEFAULT_CONN_ID": [[31, 0], [31, 15]], "HOST": [[30, 0], [30, 4]], "PASSWORD": [[32, 0], [32, 8]], "TASK_ID": [[29, 0], [29, 7]]}, "mod_var_occur": {"DEFAULT_CONN_ID": [], "HOST": [], "PASSWORD": [], "TASK_ID": []}, "no_types_annot": {"D": 2, "I": 0, "U": 25}, "session_id": "uiRxLvliFQaELrkaxC7YEkYT9AJ8rkNOphWvMoPUTP0", "set": null, "tc": [false, null], "type_annot_cove": 0.07, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_CONN_ID": "", "HOST": "", "PASSWORD": "", "TASK_ID": ""}, "variables_p": {"DEFAULT_CONN_ID": [["int", 0.49999999979426935], ["str", 0.3333333331961796], ["List[str]", 0.1666666665980898], ["Optional[str]", 2.0573054751055548e-10]], "HOST": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "PASSWORD": [["str", 0.6], ["Type[mangle.common.models.User]", 0.09999999999999999], ["Tuple[str]", 0.09999999999999999], ["bytes", 0.09999999999999999], ["List[str]", 0.09999999999999999]], "TASK_ID": [["str", 0.4], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}}