{"error": null, "response": {"classes": [{"cls_lc": [[57, 0], [72, 90]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [61, 22]], "fn_var_ln": {"args": [[59, 8], [59, 12]], "dag": [[61, 8], [61, 16]]}, "fn_var_occur": {"args": [["args", "DEFAULT_DATE"], ["dag", "DAG", "TEST_DAG_ID", "default_args", "args"]], "dag": [["dag", "DAG", "TEST_DAG_ID", "default_args", "args"], ["self", "dag", "dag"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag": ""}, "variables_p": {"args": [["dict", 0.14710642105377056], ["tuple", 0.14677109585846893], ["Dict[str, Union[Any, bool, str]]", 0.11589628741007202], ["Dict[str, Union[Any, Any, Any, bool, str]]", 0.11589628741007202], ["Dict[str, Union[Any, Any, bool, str]]", 0.11589628741007202], ["Dict[str, str]", 0.07473030195547072]], "dag": [["int", 0.43833390544974943], ["Dict[str, Any]", 0.26501835082172837], ["str", 0.11538593735348021], ["Dict[str, Union[Any, Any]]", 0.07038670126327531]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [72, 90]], "fn_var_ln": {"operator": [[70, 8], [70, 16]], "sql": [[65, 8], [65, 11]]}, "fn_var_occur": {"operator": [["operator", "SnowflakeOperator", "task_id", "sql", "sql", "dag", "self", "dag", "do_xcom_push", "False"], ["operator", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "sql": [["operator", "SnowflakeOperator", "task_id", "sql", "sql", "dag", "self", "dag", "do_xcom_push", "False"]]}, "name": "test_snowflake_operator", "params": {"mock_get_db_hook": "", "self": ""}, "params_descr": {"mock_get_db_hook": "", "self": ""}, "params_occur": {"mock_get_db_hook": [], "self": [["operator", "SnowflakeOperator", "task_id", "sql", "sql", "dag", "self", "dag", "do_xcom_push", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_db_hook": [["salon.models.Stylist", 0.3441719495945494], ["Callable", 0.14867104726928376]], "self": []}, "q_name": "TestSnowflakeOperator.test_snowflake_operator", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "sql": ""}, "variables_p": {"operator": [["tuple", 0.1532208283473367], ["Dict[str, Any]", 0.0908330665707553], ["backend.api.models.group.Group", 0.08676039224768646], ["Dict[str, str]", 0.0861594103201697], ["int", 0.08584490926440695]], "sql": [["str", 0.24641957081180177], ["list", 0.12920435177685322], ["float", 0.10946444844179802], ["DefaultDict[Any, List[Any]]", 0.08426569301082389]]}}], "name": "TestSnowflakeOperator", "q_name": "TestSnowflakeOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[83, 0], [93, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [93, 45]], "fn_var_ln": {"operator": [[91, 8], [91, 16]]}, "fn_var_occur": {"operator": [["operator", "operator_class", "task_id", "snowflake_conn_id", "kwargs"], ["operator", "get_db_hook"]]}, "name": "test_get_db_hook", "params": {"kwargs": "", "mock_get_db_hook": "", "operator_class": "", "self": ""}, "params_descr": {"kwargs": "", "mock_get_db_hook": "", "operator_class": "", "self": ""}, "params_occur": {"kwargs": [["operator", "operator_class", "task_id", "snowflake_conn_id", "kwargs"]], "mock_get_db_hook": [["mock_get_db_hook", "assert_called_once"]], "operator_class": [["operator", "operator_class", "task_id", "snowflake_conn_id", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_db_hook": [["str", 0.09718849315302712]], "operator_class": [["asgard.models.user.User", 0.10482650884547737], ["asgard.models.accounAccount", 0.10482650884547737]], "self": []}, "q_name": "TestSnowflakeCheckOperators.test_get_db_hook", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["dict", 0.2799791624403312], ["Tuple[Any, Any, Any]", 0.15354768441253322], ["int", 0.12100299865175529], ["List[str]", 0.09952345189012128], ["Dict[str, Any]", 0.09276858569894518], ["OrderedDict", 0.08963674381500245], ["Dict[Any, list]", 0.07846252585708396]]}}], "name": "TestSnowflakeCheckOperators", "q_name": "TestSnowflakeCheckOperators", "variables": {}, "variables_p": {}}, {"cls_lc": [[124, 0], [238, 79]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[126, 4], [130, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_execute_query", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeSqlApiOperator.mock_execute_query", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [137, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_get_sql_api_query_status", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeSqlApiOperator.mock_get_sql_api_query_status", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [144, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_check_query_output", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeSqlApiOperator.mock_check_query_output", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Tests SnowflakeSqlApiOperator passed if poll_on_queries method gives no error", "long_descr": null, "ret": null}, "fn_lc": [[146, 4], [160, 38]], "fn_var_ln": {"operator": [[151, 8], [151, 16]], "return_value": [[158, 8], [158, 39]], "side_effect": [[159, 8], [159, 49]]}, "fn_var_occur": {"operator": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "do_xcom_push", "False"], ["operator", "execute", "context", "None"]], "return_value": [["mock_execute_query", "return_value"]], "side_effect": [["mock_get_sql_api_query_status", "side_effect"]]}, "name": "test_snowflake_sql_api_to_succeed_when_no_query_fails", "params": {"mock_check_query_output": "", "mock_execute_query": "", "mock_get_sql_api_query_status": "", "self": ""}, "params_descr": {"mock_check_query_output": "", "mock_execute_query": "", "mock_get_sql_api_query_status": "", "self": ""}, "params_occur": {"mock_check_query_output": [], "mock_execute_query": [["mock_execute_query", "return_value"]], "mock_get_sql_api_query_status": [["mock_get_sql_api_query_status", "side_effect"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_check_query_output": [["mock.Mock", 0.5884062090885627]], "mock_execute_query": [["mock.Mock", 0.4146037804009206], ["mock.MagicMock", 0.18329734094542083]], "mock_get_sql_api_query_status": [["mock.Mock", 0.22148396578528817]], "self": []}, "q_name": "TestSnowflakeSqlApiOperator.test_snowflake_sql_api_to_succeed_when_no_query_fails", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "return_value": "", "side_effect": ""}, "variables_p": {"operator": [["int", 0.6093505066351572], ["bool", 0.09180800810831491], ["lists.models.Todo", 0.08874403040810674]], "return_value": [["Dict[str, Union[int, str]]", 0.30242339205918956], ["str", 0.24566881783350503], ["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.18180504163564473], ["Dict[str, Union[Any, Any, Any]]", 0.09003424949055358], ["Dict[str, Dict[str, Any]]", 0.09003424949055358], ["List[Dict[str, Any]]", 0.09003424949055358]], "side_effect": [["str", 0.27585834219536437], ["Dict[Any, str]", 0.09792404191142157]]}}, {"docstring": {"func": "Tests SnowflakeSqlApiOperator passed if poll_on_queries method gives one or more error", "long_descr": null, "ret": null}, "fn_lc": [[162, 4], [177, 42]], "fn_var_ln": {"operator": [[167, 8], [167, 16]], "return_value": [[174, 8], [174, 39]], "side_effect": [[175, 8], [175, 49]]}, "fn_var_occur": {"operator": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "do_xcom_push", "False"], ["operator", "execute", "context", "None"]], "return_value": [["mock_execute_query", "return_value"]], "side_effect": [["mock_get_sql_api_query_status", "side_effect"]]}, "name": "test_snowflake_sql_api_to_fails_when_one_query_fails", "params": {"mock_execute_query": "", "mock_get_sql_api_query_status": "", "self": ""}, "params_descr": {"mock_execute_query": "", "mock_get_sql_api_query_status": "", "self": ""}, "params_occur": {"mock_execute_query": [["mock_execute_query", "return_value"]], "mock_get_sql_api_query_status": [["mock_get_sql_api_query_status", "side_effect"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_execute_query": [], "mock_get_sql_api_query_status": [["raiden.utils.List[raiden.utils.TokenAddress]", 0.10878884135724445]], "self": []}, "q_name": "TestSnowflakeSqlApiOperator.test_snowflake_sql_api_to_fails_when_one_query_fails", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "return_value": "", "side_effect": ""}, "variables_p": {"operator": [["int", 0.6093505066351572], ["bool", 0.09180800810831491], ["lists.models.Todo", 0.08874403040810674]], "return_value": [["Dict[str, Union[int, str]]", 0.30242339205918956], ["str", 0.24566881783350503], ["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.18180504163564473], ["Dict[str, Union[Any, Any, Any]]", 0.09003424949055358], ["Dict[str, Dict[str, Any]]", 0.09003424949055358], ["List[Dict[str, Any]]", 0.09003424949055358]], "side_effect": [["str", 0.27585834219536437], ["Dict[Any, str]", 0.09792404191142157]]}}, {"docstring": {"func": "Asserts that a task is deferred and an SnowflakeSqlApiTrigger will be fired", "long_descr": "when the SnowflakeSqlApiOperator is executed.", "ret": null}, "fn_lc": [[181, 4], [199, 52]], "fn_var_ln": {"operator": [[186, 8], [186, 16]]}, "fn_var_occur": {"operator": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "mock_sql", "statement_count", "statement_count", "deferrable", "True"], ["operator", "execute", "create_context", "operator"]]}, "name": "test_snowflake_sql_api_execute_operator_async", "params": {"mock_db_hook": "", "mock_sql": "", "self": "", "statement_count": ""}, "params_descr": {"mock_db_hook": "", "mock_sql": "", "self": "", "statement_count": ""}, "params_occur": {"mock_db_hook": [], "mock_sql": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "mock_sql", "statement_count", "statement_count", "deferrable", "True"]], "self": [], "statement_count": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "mock_sql", "statement_count", "statement_count", "deferrable", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_db_hook": [["mock.Mock", 0.6794881959976513]], "mock_sql": [], "self": [], "statement_count": []}, "q_name": "TestSnowflakeSqlApiOperator.test_snowflake_sql_api_execute_operator_async", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.77789731214433]]}}, {"docstring": {"func": "Test SnowflakeSqlApiOperator raise AirflowException of error event", "long_descr": null, "ret": null}, "fn_lc": [[201, 4], [215, 13]], "fn_var_ln": {"operator": [[204, 8], [204, 16]]}, "fn_var_occur": {"operator": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_snowflake_sql_api_execute_complete_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSnowflakeSqlApiOperator.test_snowflake_sql_api_execute_complete_failure", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.6049051492363775], ["str", 0.07869356837595391]]}}, {"docstring": {"func": "Tests execute_complete assert with successful message", "long_descr": null, "ret": null}, "fn_lc": [[225, 4], [238, 79]], "fn_var_ln": {"operator": [[228, 8], [228, 16]]}, "fn_var_occur": {"operator": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"], ["mock", "patch", "object", "operator", "log", "mock_log_info"], ["operator", "execute_complete", "context", "None", "event", "mock_event"]]}, "name": "test_snowflake_sql_api_execute_complete", "params": {"mock_conn": "", "mock_event": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_event": "", "self": ""}, "params_occur": {"mock_conn": [], "mock_event": [["operator", "execute_complete", "context", "None", "event", "mock_event"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "mock_event": [["Optional[Tuple[float, float]]", 0.10520498551949124], ["tracim.models.data.ContentRevisionRO", 0.10071325985080616], ["dict", 0.09941050326327132], ["str", 0.09941050326327132], ["tracim.models.data.Content", 0.09941050326327132], ["tracim.models.data.User", 0.09941050326327132]], "self": []}, "q_name": "TestSnowflakeSqlApiOperator.test_snowflake_sql_api_execute_complete", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.6049051492363775], ["str", 0.07869356837595391]]}}], "name": "TestSnowflakeSqlApiOperator", "q_name": "TestSnowflakeSqlApiOperator", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 0], [121, 5]], "fn_var_ln": {"dag": [[98, 8], [98, 11]], "dag_run": [[108, 4], [108, 25]], "execution_date": [[100, 4], [100, 18]], "task_instance": [[107, 4], [107, 17]], "tzinfo": [[99, 4], [99, 10]], "xcom_push": [[109, 4], [109, 27]]}, "fn_var_occur": {"dag": [["dag", "None"], ["dag", "DAG", "dag_id"], ["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "execution_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "execution_date"], ["dag", "execution_date", "isoformat", "task", "task_instance", "task_instance", "dag_run", "run_id", "dag_run", "execution_date", "execution_date", "execution_date"]], "dag_run": [["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "execution_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "execution_date"], ["task_instance", "dag_run", "dag_run"], ["dag", "execution_date", "isoformat", "task", "task_instance", "task_instance", "dag_run", "run_id", "dag_run", "execution_date", "execution_date", "execution_date"]], "execution_date": [["execution_date", "timezone", "datetime", "tzinfo", "tzinfo"], ["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "execution_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "execution_date"], ["dag", "execution_date", "isoformat", "task", "task_instance", "task_instance", "dag_run", "run_id", "dag_run", "execution_date", "execution_date", "execution_date"]], "task_instance": [["task_instance", "TaskInstance", "task", "task"], ["task_instance", "dag_run", "dag_run"], ["task_instance", "xcom_push", "mock", "Mock"], ["dag", "execution_date", "isoformat", "task", "task_instance", "task_instance", "dag_run", "run_id", "dag_run", "execution_date", "execution_date", "execution_date"]], "tzinfo": [["tzinfo", "pendulum", "timezone"], ["execution_date", "timezone", "datetime", "tzinfo", "tzinfo"]], "xcom_push": [["task_instance", "xcom_push", "mock", "Mock"]]}, "name": "create_context", "params": {"dag": "", "task": ""}, "params_descr": {"dag": "", "task": ""}, "params_occur": {"dag": [["dag", "None"], ["dag", "DAG", "dag_id"], ["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "execution_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "execution_date"], ["dag", "execution_date", "isoformat", "task", "task_instance", "task_instance", "dag_run", "run_id", "dag_run", "execution_date", "execution_date", "execution_date"]], "task": [["task_instance", "TaskInstance", "task", "task"], ["dag", "execution_date", "isoformat", "task", "task_instance", "task_instance", "dag_run", "run_id", "dag_run", "execution_date", "execution_date", "execution_date"]]}, "params_p": {"args": [], "dag": [["core.models.User", 0.09505855770119749], ["dict", 0.09443353659046937]], "kwargs": [], "task": [["Dict[str, Any]", 0.10731785090950996], ["dict", 0.08306726852419884], ["models.Task", 0.08205356399440819]]}, "q_name": "create_context", "ret_exprs": ["return { \"dag\": dag, \"ts\": execution_date.isoformat(), \"task\": task, \"ti\": task_instance, \"task_instance\": task_instance, \"run_id\": dag_run.run_id, \"dag_run\": dag_run, \"execution_date\": execution_date, \"data_interval_end\": execution_date, \"logical_date\": execution_date,}"], "ret_type": "", "ret_type_p": [["int", 0.21043530006714545], ["Callable", 0.10310806680491644], ["float", 0.09931121621090325], ["Dict[int, dict]", 0.09753785541554616], ["cmk.utils.type_defs.HostName", 0.09722759981171762], ["cmk.utils.type_defs.ServiceName", 0.09722759981171762], ["str", 0.09681804949109173]], "variables": {"dag": "", "dag_run": "", "execution_date": "", "task_instance": "", "tzinfo": "", "xcom_push": ""}, "variables_p": {"dag": [["list", 0.18469147607575137], ["dict", 0.1433969031420679], ["str", 0.09975082567351394]], "dag_run": [["int", 0.5960945529994207], ["Dict[str, str]", 0.12489984180792207], ["List[str]", 0.09448879481006968], ["str", 0.09207078022414338]], "execution_date": [["int", 0.28722443073627313], ["Type[prm.journals.models.moods.Mood]", 0.11335597038810503], ["List[Union[Any, Any]]", 0.0953747325593698]], "task_instance": [["kippo.tasks.models.KippoTask", 0.1995324285302391], ["taskiapplication.models.task.Task", 0.1438213855938901]], "tzinfo": [["int", 0.1665122240604473]], "xcom_push": [["List[str]", 0.11539457579881093], ["mock.MagicMock", 0.10447608657228281], ["Dict[str, List[str]]", 0.09702262411955585], ["str", 0.09482244766417133], ["List[int]", 0.09467376249613606]]}}], "imports": ["__future__", "annotations", "unittest", "mock", "pendulum", "pytest", "airflow", "exceptions", "AirflowException", "TaskDeferred", "airflow", "models", "dag", "DAG", "airflow", "models", "dagrun", "DagRun", "airflow", "models", "taskinstance", "TaskInstance", "airflow", "providers", "snowflake", "operators", "snowflake", "SnowflakeCheckOperator", "SnowflakeIntervalCheckOperator", "SnowflakeOperator", "SnowflakeSqlApiOperator", "SnowflakeValueCheckOperator", "airflow", "providers", "snowflake", "triggers", "snowflake_trigger", "SnowflakeSqlApiTrigger", "airflow", "utils", "timezone", "airflow", "utils", "types", "DagRunType"], "mod_var_ln": {"CONN_ID": [[46, 0], [46, 7]], "DEFAULT_DATE": [[40, 0], [40, 12]], "DEFAULT_DATE_DS": [[42, 0], [42, 15]], "DEFAULT_DATE_ISO": [[41, 0], [41, 16]], "SINGLE_STMT": [[54, 0], [54, 11]], "SQL_MULTIPLE_STMTS": [[49, 0], [49, 18]], "TASK_ID": [[45, 0], [45, 7]], "TEST_DAG_ID": [[43, 0], [43, 11]], "TEST_SQL": [[47, 0], [47, 8]]}, "mod_var_occur": {"CONN_ID": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "mock_sql", "statement_count", "statement_count", "deferrable", "True"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"]], "DEFAULT_DATE": [["DEFAULT_DATE_ISO", "DEFAULT_DATE", "isoformat"], ["args", "DEFAULT_DATE"], ["operator", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "DEFAULT_DATE_DS": [], "DEFAULT_DATE_ISO": [["DEFAULT_DATE_DS", "DEFAULT_DATE_ISO"]], "SINGLE_STMT": [], "SQL_MULTIPLE_STMTS": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "do_xcom_push", "False"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "do_xcom_push", "False"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"]], "TASK_ID": [["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "do_xcom_push", "False"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "do_xcom_push", "False"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "mock_sql", "statement_count", "statement_count", "deferrable", "True"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"], ["operator", "SnowflakeSqlApiOperator", "task_id", "TASK_ID", "snowflake_conn_id", "CONN_ID", "sql", "SQL_MULTIPLE_STMTS", "statement_count", "deferrable", "True"], ["mock_log_info", "assert_called_with", "TASK_ID"]], "TEST_DAG_ID": [["dag", "DAG", "TEST_DAG_ID", "default_args", "args"]], "TEST_SQL": []}, "no_types_annot": {"D": 0, "I": 0, "U": 56}, "session_id": "b4MFWPw4Eb8-2bYlO2DYX1wNBrb810fggLGZLu7h_Oc", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CONN_ID": "", "DEFAULT_DATE": "", "DEFAULT_DATE_DS": "", "DEFAULT_DATE_ISO": "", "SINGLE_STMT": "", "SQL_MULTIPLE_STMTS": "", "TASK_ID": "", "TEST_DAG_ID": "", "TEST_SQL": ""}, "variables_p": {"CONN_ID": [["int", 0.35005275674705233], ["str", 0.16083567609199925], ["cmk.utils.type_defs.UserId", 0.09599412721209014]], "DEFAULT_DATE": [["Dict[str, bool]", 0.3077934671238764], ["Pattern[str]", 0.23117059591971248], ["str", 0.2002885500923785], ["Dict[str, Any]", 0.07156502696867276]], "DEFAULT_DATE_DS": [["str", 0.3059945994881268], ["bool", 0.130176423055987], ["Type[apps.registrations.models.registration_field_value.RegistrationFieldValue]", 0.12840709180797258], ["Optional[bool]", 0.0863799894115707], ["int", 0.0863799894115707], ["list", 0.06941968313314296]], "DEFAULT_DATE_ISO": [["int", 0.11824233664115807], ["Dict[Any, List[str]]", 0.11486735568385283]], "SINGLE_STMT": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "SQL_MULTIPLE_STMTS": [["int", 0.6093505066351572], ["bool", 0.09180800810831491], ["lists.models.Todo", 0.08874403040810674]], "TASK_ID": [["int", 0.4853387876735735], ["str", 0.21798724552845883]], "TEST_DAG_ID": [["str", 0.3783348212408371], ["List[str]", 0.11475084067820322]], "TEST_SQL": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]]}}}