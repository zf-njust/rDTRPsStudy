{"error": null, "response": {"classes": [{"cls_lc": [[55, 0], [253, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [63, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn_basic_auth", "params": {"mock_basic_auth": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_descr": {"mock_basic_auth": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_occur": {"mock_basic_auth": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_basic_auth"], ["mock_basic_auth", "assert_called_once_with"]], "mock_connect": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_basic_auth"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "password"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "password"], ["self", "assert_connection_called_with", "mock_connect", "auth", "mock_basic_auth"]]}, "params_p": {"args": [], "kwargs": [], "mock_basic_auth": [], "mock_connect": [["mock.Mock", 0.28230723580097167]], "mock_get_connection": [], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_basic_auth", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [98, 48]], "fn_var_ln": {"client": [[79, 8], [79, 14]], "conn": [[94, 8], [94, 12]], "http_headers": [[90, 8], [90, 20]], "return_value": [[92, 8], [92, 69]]}, "fn_var_occur": {"client": [["client", "json", "dumps", "sort_keys", "True"], ["http_headers", "client"]], "conn": [["conn", "TrinoHook", "get_conn"], ["mock_connect", "return_value", "conn"]], "http_headers": [["http_headers", "client"], ["mocked_generate_airflow_trino_client_info_header", "return_value", "http_headers"], ["self", "assert_connection_called_with", "mock_connect", "auth", "mock_basic_auth", "http_headers", "http_headers"]], "return_value": [["mock_get_connection", "return_value", "Connection", "login", "password", "host", "schema"], ["mocked_generate_airflow_trino_client_info_header", "return_value", "http_headers"], ["mock_connect", "return_value", "conn"]]}, "name": "test_http_headers", "params": {"mock_basic_auth": "", "mock_connect": "", "mock_get_connection": "", "mocked_generate_airflow_trino_client_info_header": "", "self": ""}, "params_descr": {"mock_basic_auth": "", "mock_connect": "", "mock_get_connection": "", "mocked_generate_airflow_trino_client_info_header": "", "self": ""}, "params_occur": {"mock_basic_auth": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_basic_auth", "http_headers", "http_headers"], ["mock_basic_auth", "assert_called_once_with"]], "mock_connect": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_basic_auth", "http_headers", "http_headers"], ["mock_connect", "return_value", "conn"]], "mock_get_connection": [["mock_get_connection", "return_value", "Connection", "login", "password", "host", "schema"]], "mocked_generate_airflow_trino_client_info_header": [["mocked_generate_airflow_trino_client_info_header", "return_value", "http_headers"]], "self": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_basic_auth", "http_headers", "http_headers"]]}, "params_p": {"args": [], "kwargs": [], "mock_basic_auth": [["mock.Mock", 0.21221859551904554]], "mock_connect": [["mock.Mock", 0.3034204587106224]], "mock_get_connection": [["mock.Mock", 0.23193750495145082]], "mocked_generate_airflow_trino_client_info_header": [["mock.Mock", 0.10141717796746813]], "self": []}, "q_name": "TestTrinoHookConn.test_http_headers", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "conn": "", "http_headers": "", "return_value": ""}, "variables_p": {"client": [["Dict[str, Any]", 0.28346471352943237], ["Dict[str, str]", 0.1888257486931022], ["dict", 0.11047166508811536], ["str", 0.10192699452539684], ["bytes", 0.09410687660832863]], "conn": [["list", 0.16841120136006413]], "http_headers": [["Dict[str, Union[Any, Any]]", 0.3111896231060555], ["str", 0.23573963368700213], ["Union[Literal, str]", 0.09316537371202711], ["Dict[str, Dict[str, Any]]", 0.08478643444751023]], "return_value": [["str", 0.7147706006541424], ["Dict[str, Union[Any, Any, Any]]", 0.116516318345892], ["Dict[str, Union[int, str]]", 0.07898640485217849]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [111, 34]], "fn_var_ln": {"extras": [[102, 8], [102, 14]]}, "fn_var_occur": {"extras": [["self", "set_get_connection_return_value", "mock_get_connection", "password", "extra", "json", "dumps", "extras"]]}, "name": "test_get_conn_invalid_auth", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "password", "extra", "json", "dumps", "extras"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "password", "extra", "json", "dumps", "extras"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_invalid_auth", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["str", 0.4167681376823167], ["int", 0.20021760656760973], ["bool", 0.09773165856778598], ["Dict[str, str]", 0.09491872690457835]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [126, 76]], "fn_var_ln": {"extras": [[117, 8], [117, 14]]}, "fn_var_occur": {"extras": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]]}, "name": "test_get_conn_jwt_auth", "params": {"mock_connect": "", "mock_get_connection": "", "mock_jwt_auth": "", "self": ""}, "params_descr": {"mock_connect": "", "mock_get_connection": "", "mock_jwt_auth": "", "self": ""}, "params_occur": {"mock_connect": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_jwt_auth"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]], "mock_jwt_auth": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_jwt_auth"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"], ["self", "assert_connection_called_with", "mock_connect", "auth", "mock_jwt_auth"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [["mock.Mock", 0.28230723580097167]], "mock_get_connection": [], "mock_jwt_auth": [["mock.Mock", 0.28230723580097167]], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_jwt_auth", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["str", 0.3970042532400808], ["Dict[str, str]", 0.10814304243212797], ["Dict[str, int]", 0.09961840811178878], ["Dict[str, Union[Any, Any]]", 0.09661682675357941]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[131, 4], [141, 76]], "fn_var_ln": {"extras": [[132, 8], [132, 14]]}, "fn_var_occur": {"extras": [["extras", "jwt_token_file"], ["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]]}, "name": "test_get_conn_jwt_file", "params": {"jwt_token_file": "", "mock_connect": "", "mock_get_connection": "", "mock_jwt_auth": "", "self": ""}, "params_descr": {"jwt_token_file": "", "mock_connect": "", "mock_get_connection": "", "mock_jwt_auth": "", "self": ""}, "params_occur": {"jwt_token_file": [["extras", "jwt_token_file"]], "mock_connect": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_jwt_auth"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]], "mock_jwt_auth": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_jwt_auth"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"], ["self", "assert_connection_called_with", "mock_connect", "auth", "mock_jwt_auth"]]}, "params_p": {"args": [], "jwt_token_file": [["mock.Mock", 0.40015990819671726], ["accounts.models.User", 0.0753148955617831]], "kwargs": [], "mock_connect": [["mock.Mock", 0.6025940312885845]], "mock_get_connection": [], "mock_jwt_auth": [["mock.Mock", 0.6025940312885845]], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_jwt_file", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["str", 0.6189113361945604], ["Callable(os.path.join)[..., Any][[[Named(a, Union[_PathLike[str], str]), Variable(Union[_PathLike[str], str])], str][Any, Any]]", 0.09633802606081444]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[146, 4], [158, 92]], "fn_var_ln": {"extras": [[147, 8], [147, 14]]}, "fn_var_occur": {"extras": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]]}, "name": "test_get_conn_cert_auth", "params": {"mock_cert_auth": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_descr": {"mock_cert_auth": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_occur": {"mock_cert_auth": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_cert_auth"], ["mock_cert_auth", "assert_called_once_with"]], "mock_connect": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_cert_auth"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"], ["self", "assert_connection_called_with", "mock_connect", "auth", "mock_cert_auth"]]}, "params_p": {"args": [], "kwargs": [], "mock_cert_auth": [], "mock_connect": [["mock.Mock", 0.28230723580097167]], "mock_get_connection": [], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_cert_auth", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["str", 0.3970042532400808], ["Dict[str, str]", 0.10814304243212797], ["Dict[str, int]", 0.09961840811178878], ["Dict[str, Union[Any, Any]]", 0.09661682675357941]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 4], [182, 72]], "fn_var_ln": {"extras": [[164, 8], [164, 14]]}, "fn_var_occur": {"extras": [["extras", "True", "True"], ["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]]}, "name": "test_get_conn_kerberos_auth", "params": {"mock_auth": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_descr": {"mock_auth": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_occur": {"mock_auth": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_auth"]], "mock_connect": [["self", "assert_connection_called_with", "mock_connect", "auth", "mock_auth"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"], ["self", "assert_connection_called_with", "mock_connect", "auth", "mock_auth"]]}, "params_p": {"args": [], "kwargs": [], "mock_auth": [["mock.Mock", 0.2876142318302477]], "mock_connect": [["mock.Mock", 0.2876142318302477]], "mock_get_connection": [], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_kerberos_auth", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["str", 0.4062966939739955], ["bool", 0.20186866348223026], ["Tuple[str, Any]", 0.1956285919571696], ["Dict[str, Any]", 0.09510256415518384]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[186, 4], [198, 105]], "fn_var_ln": {"extras": [[187, 8], [187, 14]]}, "fn_var_occur": {"extras": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "extras"], ["self", "assert_connection_called_with", "mock_connect", "session_properties", "extras"]]}, "name": "test_get_conn_session_properties", "params": {"mock_connect": "", "mock_get_connection": "", "self": ""}, "params_descr": {"mock_connect": "", "mock_get_connection": "", "self": ""}, "params_occur": {"mock_connect": [["self", "assert_connection_called_with", "mock_connect", "session_properties", "extras"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "extras"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "extras"], ["self", "assert_connection_called_with", "mock_connect", "session_properties", "extras"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "mock_get_connection": [], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_session_properties", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["list", 0.1968859588288992], ["str", 0.19628939802831016], ["int", 0.1330325833138654], ["Optional[Match[str]]", 0.09764220392410883], ["List[int]", 0.08684204730296648]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[202, 4], [208, 91]], "fn_var_ln": {"extras": [[203, 8], [203, 14]]}, "fn_var_occur": {"extras": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "extras"], ["self", "assert_connection_called_with", "mock_connect", "client_tags", "extras"]]}, "name": "test_get_conn_client_tags", "params": {"mock_connect": "", "mock_get_connection": "", "self": ""}, "params_descr": {"mock_connect": "", "mock_get_connection": "", "self": ""}, "params_occur": {"mock_connect": [["self", "assert_connection_called_with", "mock_connect", "client_tags", "extras"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "extras"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "extras"], ["self", "assert_connection_called_with", "mock_connect", "client_tags", "extras"]]}, "params_p": {"args": [], "kwargs": [], "mock_connect": [], "mock_get_connection": [], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_client_tags", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["str", 0.2981224187920546], ["Dict[str, str]", 0.18907712608551647], ["float", 0.11809699667132785], ["list", 0.10428566938861425], ["bytes", 0.09577158740646632]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[222, 4], [226, 80]], "fn_var_ln": {"extras": [[223, 8], [223, 14]]}, "fn_var_occur": {"extras": [["extras", "current_verify"], ["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]]}, "name": "test_get_conn_verify", "params": {"current_verify": "", "expected_verify": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_descr": {"current_verify": "", "expected_verify": "", "mock_connect": "", "mock_get_connection": "", "self": ""}, "params_occur": {"current_verify": [["extras", "current_verify"]], "expected_verify": [["self", "assert_connection_called_with", "mock_connect", "verify", "expected_verify"]], "mock_connect": [["self", "assert_connection_called_with", "mock_connect", "verify", "expected_verify"]], "mock_get_connection": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"]], "self": [["self", "set_get_connection_return_value", "mock_get_connection", "extra", "json", "dumps", "extras"], ["self", "assert_connection_called_with", "mock_connect", "verify", "expected_verify"]]}, "params_p": {"args": [], "current_verify": [["mock.Mock", 0.3086656644242329]], "expected_verify": [["mock.MagicMock", 0.09703771970562071]], "kwargs": [], "mock_connect": [["mock.MagicMock", 0.09703771970562071]], "mock_get_connection": [], "self": []}, "q_name": "TestTrinoHookConn.test_get_conn_verify", "ret_exprs": [], "ret_type": "", "variables": {"extras": ""}, "variables_p": {"extras": [["str", 0.2109978973417948], ["Dict[str, str]", 0.10478542427012034], ["list", 0.09677396439263788], ["Dict[str, Dict[str, str]]", 0.0936773836696031], ["Type[Pattern[str]]", 0.0811045473436067]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[229, 4], [233, 60]], "fn_var_ln": {"mocked_connection": [[230, 8], [230, 25]], "return_value": [[233, 8], [233, 40]]}, "fn_var_occur": {"mocked_connection": [["mocked_connection", "Connection", "login", "password", "password", "host", "schema", "extra", "extra"], ["mock_get_connection", "return_value", "mocked_connection"]], "return_value": [["mock_get_connection", "return_value", "mocked_connection"]]}, "name": "set_get_connection_return_value", "params": {"extra": "", "mock_get_connection": "", "password": ""}, "params_descr": {"extra": "", "mock_get_connection": "", "password": ""}, "params_occur": {"extra": [["mocked_connection", "Connection", "login", "password", "password", "host", "schema", "extra", "extra"]], "mock_get_connection": [["mock_get_connection", "return_value", "mocked_connection"]], "password": [["mocked_connection", "Connection", "login", "password", "password", "host", "schema", "extra", "extra"]]}, "params_p": {"args": [], "extra": [["str", 0.528428212482686], ["app.models.Game", 0.0948348562561605]], "kwargs": [], "mock_get_connection": [["str", 0.45992168486388785], ["List[bytes]", 0.14686157737736183], ["bool", 0.11137172251249426], ["dict", 0.09711591598084887]], "password": [["str", 0.528428212482686], ["app.models.Game", 0.0948348562561605]], "self": []}, "q_name": "TestTrinoHookConn.set_get_connection_return_value", "ret_exprs": [], "ret_type": "", "variables": {"mocked_connection": "", "return_value": ""}, "variables_p": {"mocked_connection": [["Dict[Any, Dict[str, Any]]", 0.15426172789610848], ["Dict[str, Dict[str, str]]", 0.07741061319077829], ["Dict[str, Dict[str, Any]]", 0.07713086394805424]], "return_value": [["str", 0.19474426328858763], ["List[Dict[str, Any]]", 0.09870671195761625], ["int", 0.09572398992599], ["list", 0.09393362239924888], ["Optional[bytes]", 0.08372472001262155]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[236, 4], [253, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_connection_called_with", "params": {"auth": "", "client_tags": "", "http_headers": "", "mock_connect": "", "session_properties": "", "verify": ""}, "params_descr": {"auth": "", "client_tags": "", "http_headers": "", "mock_connect": "", "session_properties": "", "verify": ""}, "params_occur": {"auth": [["mock_connect", "assert_called_once_with", "catalog", "host", "port", "None", "http_scheme", "http_headers", "http_headers", "schema", "source", "user", "isolation_level", "IsolationLevel", "AUTOCOMMIT", "auth", "None", "auth", "auth", "return_value", "verify", "verify", "session_properties", "session_properties", "client_tags", "client_tags"]], "client_tags": [["mock_connect", "assert_called_once_with", "catalog", "host", "port", "None", "http_scheme", "http_headers", "http_headers", "schema", "source", "user", "isolation_level", "IsolationLevel", "AUTOCOMMIT", "auth", "None", "auth", "auth", "return_value", "verify", "verify", "session_properties", "session_properties", "client_tags", "client_tags"]], "http_headers": [["mock_connect", "assert_called_once_with", "catalog", "host", "port", "None", "http_scheme", "http_headers", "http_headers", "schema", "source", "user", "isolation_level", "IsolationLevel", "AUTOCOMMIT", "auth", "None", "auth", "auth", "return_value", "verify", "verify", "session_properties", "session_properties", "client_tags", "client_tags"]], "mock_connect": [["mock_connect", "assert_called_once_with", "catalog", "host", "port", "None", "http_scheme", "http_headers", "http_headers", "schema", "source", "user", "isolation_level", "IsolationLevel", "AUTOCOMMIT", "auth", "None", "auth", "auth", "return_value", "verify", "verify", "session_properties", "session_properties", "client_tags", "client_tags"]], "session_properties": [["mock_connect", "assert_called_once_with", "catalog", "host", "port", "None", "http_scheme", "http_headers", "http_headers", "schema", "source", "user", "isolation_level", "IsolationLevel", "AUTOCOMMIT", "auth", "None", "auth", "auth", "return_value", "verify", "verify", "session_properties", "session_properties", "client_tags", "client_tags"]], "verify": [["mock_connect", "assert_called_once_with", "catalog", "host", "port", "None", "http_scheme", "http_headers", "http_headers", "schema", "source", "user", "isolation_level", "IsolationLevel", "AUTOCOMMIT", "auth", "None", "auth", "auth", "return_value", "verify", "verify", "session_properties", "session_properties", "client_tags", "client_tags"]]}, "params_p": {"args": [], "auth": [["str", 0.7089993038650078], ["int", 0.20236823933252973], ["Dict[int, str]", 0.08863245680246257]], "client_tags": [["str", 0.7089993038650078], ["int", 0.20236823933252973], ["Dict[int, str]", 0.08863245680246257]], "http_headers": [["str", 0.7089993038650078], ["int", 0.20236823933252973], ["Dict[int, str]", 0.08863245680246257]], "kwargs": [], "mock_connect": [["str", 0.7089993038650078], ["int", 0.20236823933252973], ["Dict[int, str]", 0.08863245680246257]], "self": [], "session_properties": [["str", 0.7089993038650078], ["int", 0.20236823933252973], ["Dict[int, str]", 0.08863245680246257]], "verify": [["str", 0.7089993038650078], ["int", 0.20236823933252973], ["Dict[int, str]", 0.08863245680246257]]}, "q_name": "TestTrinoHookConn.assert_connection_called_with", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestTrinoHookConn", "q_name": "TestTrinoHookConn", "variables": {}, "variables_p": {}}, {"cls_lc": [[263, 8], [270, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[266, 12], [267, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "mock", "MagicMock", "rowcount"], ["self", "conn", "mock", "MagicMock"], ["self", "conn", "cursor", "return_value", "self", "cur"], ["conn", "self", "conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.setup_method.<locals>.UnitTestTrinoHook.get_conn", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 12], [270, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_isolation_level", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.setup_method.<locals>.UnitTestTrinoHook.get_isolation_level", "ret_exprs": ["return IsolationLevel.READ_COMMITTED"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}], "name": "UnitTestTrinoHook", "q_name": "TestTrinoHook.setup_method.<locals>.UnitTestTrinoHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[256, 0], [343, 57]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[257, 4], [272, 42]], "fn_var_ln": {"conn": [[261, 8], [261, 12]], "conn_name_attr": [[264, 12], [264, 26]], "cur": [[258, 8], [258, 16]], "db_hook": [[272, 8], [272, 20]]}, "fn_var_occur": {"conn": [], "conn_name_attr": [], "cur": [], "db_hook": [["self", "db_hook", "UnitTestTrinoHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "UnitTestTrinoHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn_name_attr": "", "cur": "", "db_hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "cur": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["int", 0.5250353812261196], ["Optional[Callable[..., Any]]", 0.09447207897187364], ["Dict[str, List[float]]", 0.08997898109868518], ["str", 0.08702347876209815]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[275, 4], [282, 77]], "fn_var_ln": {"commit_every": [[279, 8], [279, 20]], "replace": [[280, 8], [280, 15]], "rows": [[277, 8], [277, 12]], "table": [[276, 8], [276, 13]], "target_fields": [[278, 8], [278, 21]]}, "fn_var_occur": {"commit_every": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every", "replace"]], "replace": [["replace", "True"], ["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every", "replace"]], "rows": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every", "replace"], ["mock_insert_rows", "assert_called_once_with", "table", "rows", "None", "True"]], "table": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every", "replace"], ["mock_insert_rows", "assert_called_once_with", "table", "rows", "None", "True"]], "target_fields": [["target_fields", "None"], ["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every", "replace"]]}, "name": "test_insert_rows", "params": {"mock_insert_rows": "", "self": ""}, "params_descr": {"mock_insert_rows": "", "self": ""}, "params_occur": {"mock_insert_rows": [["mock_insert_rows", "assert_called_once_with", "table", "rows", "None", "True"]], "self": [["self", "db_hook", "insert_rows", "table", "rows", "target_fields", "commit_every", "replace"]]}, "params_p": {"args": [], "kwargs": [], "mock_insert_rows": [["core_lib.core.models.Venue", 0.10717258429953277]], "self": []}, "q_name": "TestTrinoHook.test_insert_rows", "ret_exprs": [], "ret_type": "", "variables": {"commit_every": "", "replace": "", "rows": "", "table": "", "target_fields": ""}, "variables_p": {"commit_every": [["list", 0.3789697588727493], ["int", 0.213516070978301], ["Type[List[Any]]", 0.11123077137574296], ["float", 0.10300082336052879], ["str", 0.09503574562876857]], "replace": [["int", 0.2040848570830606], ["List[str]", 0.19814738803277865], ["float", 0.10221079553912006], ["set", 0.1020424285415303], ["str", 0.1020424285415303], ["Tuple[str, str, str, str, str, str, str, str]", 0.09610495949124834]], "rows": [["Tuple[int, int]", 0.11234120066703486], ["Tuple[str]", 0.09860077620070738], ["List[str]", 0.09860077620070738], ["set", 0.09860077620070738], ["Tuple[str, str]", 0.09860077620070738], ["str", 0.09860077620070738]], "table": [["str", 0.2062185082849466], ["List[List[str]]", 0.11701725343380014], ["dcpquery.db.models.Project", 0.11159355253744434], ["List[Dict[str, Any]]", 0.09457149809839506], ["dict", 0.09069769657874067], ["list", 0.08923520231395916]], "target_fields": [["list", 0.350340450488514], ["int", 0.25879399085969673], ["str", 0.1759796443130618], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10955585327315195], ["set", 0.1053300610655757]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[284, 4], [292, 59]], "fn_var_ln": {"result_sets": [[286, 8], [286, 19]], "statement": [[285, 8], [285, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_first", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_first_record", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchone", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_first", "statement"], ["self", "conn", "close", "assert_called_once_with"], ["self", "cur", "close", "assert_called_once_with"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.test_get_first_record", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.2772479655868859]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[294, 4], [302, 59]], "fn_var_ln": {"result_sets": [[296, 8], [296, 19]], "statement": [[295, 8], [295, 17]]}, "fn_var_occur": {"result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"]], "statement": [["result_sets", "self", "db_hook", "get_records", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "name": "test_get_records", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "self", "db_hook", "get_records", "statement"], ["self", "conn", "close", "assert_called_once_with"], ["self", "cur", "close", "assert_called_once_with"], ["self", "cur", "execute", "assert_called_once_with", "statement"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.test_get_records", "ret_exprs": [], "ret_type": "", "variables": {"result_sets": "", "statement": ""}, "variables_p": {"result_sets": [["str", 0.18960111918134703], ["int", 0.12219592332814264], ["bytes", 0.09447596867033083], ["Tuple[str, str]", 0.08758768911810298]], "statement": [["list", 0.2772479655868859]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[304, 4], [317, 65]], "fn_var_ln": {"column": [[306, 8], [306, 14]], "df": [[310, 8], [310, 10]], "result_sets": [[307, 8], [307, 19]], "statement": [[305, 8], [305, 17]]}, "fn_var_occur": {"column": [["self", "cur", "description", "column"], ["column", "df", "columns"]], "df": [["df", "self", "db_hook", "get_pandas_df", "statement"], ["column", "df", "columns"], ["result_sets", "df", "values", "tolist"], ["result_sets", "df", "values", "tolist"]], "result_sets": [["self", "cur", "fetchall", "return_value", "result_sets"], ["result_sets", "df", "values", "tolist"], ["result_sets", "df", "values", "tolist"]], "statement": [["df", "self", "db_hook", "get_pandas_df", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement", "None"]]}, "name": "test_get_pandas_df", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "description", "column"], ["self", "cur", "fetchall", "return_value", "result_sets"], ["df", "self", "db_hook", "get_pandas_df", "statement"], ["self", "cur", "execute", "assert_called_once_with", "statement", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.test_get_pandas_df", "ret_exprs": [], "ret_type": "", "variables": {"column": "", "df": "", "result_sets": "", "statement": ""}, "variables_p": {"column": [["str", 0.2514383088298724], ["int", 0.1922766414040206], ["dict", 0.12681732062703294], ["Dict[str, int]", 0.12477955940011504], ["List[str]", 0.11673232158052399], ["Optional[str]", 0.10414307854847757], ["bool", 0.08381276960995745]], "df": [["int", 0.19689727283848246], ["Set[str]", 0.11313426110300921], ["str", 0.10481779496011173], ["list", 0.09151588730990809], ["tuple", 0.08946390544928084]], "result_sets": [["float", 0.3965372394866048], ["int", 0.2171873572768021], ["List[int]", 0.10468087134504546], ["List[float]", 0.09418728208456263], ["Dict[str, str]", 0.09389481344978012], ["List[str]", 0.09351243635720498]], "statement": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[320, 4], [326, 78]], "fn_var_ln": {"autocommit": [[322, 8], [322, 18]], "handler": [[324, 8], [324, 15]], "parameters": [[323, 8], [323, 18]], "sql": [[321, 8], [321, 11]]}, "fn_var_occur": {"autocommit": [["autocommit", "False"], ["self", "db_hook", "run", "sql", "autocommit", "parameters", "list"], ["mock_run", "assert_called_once_with", "sql", "autocommit", "parameters", "handler"]], "handler": [["handler", "list"], ["mock_run", "assert_called_once_with", "sql", "autocommit", "parameters", "handler"]], "parameters": [["self", "db_hook", "run", "sql", "autocommit", "parameters", "list"], ["mock_run", "assert_called_once_with", "sql", "autocommit", "parameters", "handler"]], "sql": [["self", "db_hook", "run", "sql", "autocommit", "parameters", "list"], ["mock_run", "assert_called_once_with", "sql", "autocommit", "parameters", "handler"]]}, "name": "test_run", "params": {"mock_run": "", "self": ""}, "params_descr": {"mock_run": "", "self": ""}, "params_occur": {"mock_run": [["mock_run", "assert_called_once_with", "sql", "autocommit", "parameters", "handler"]], "self": [["self", "db_hook", "run", "sql", "autocommit", "parameters", "list"]]}, "params_p": {"args": [], "kwargs": [], "mock_run": [], "self": []}, "q_name": "TestTrinoHook.test_run", "ret_exprs": [], "ret_type": "", "variables": {"autocommit": "", "handler": "", "parameters": "", "sql": ""}, "variables_p": {"autocommit": [["str", 0.18540509171209896], ["Dict[str, Type[Any]]", 0.13504363559560284], ["list", 0.11084278043016363], ["Pattern[str]", 0.09975197634329566], ["Dict[str, Union[float, str]]", 0.0856222051107627]], "handler": [["str", 0.4606471525121715], ["Dict[str, Any]", 0.17212837919820542], ["Dict[str, Dict[str, str]]", 0.07998764067114399]], "parameters": [["List[Tuple[str, str, str, str]]", 0.26712950985802547], ["dict", 0.13202311137329556], ["list", 0.1050263641636664], ["List[Callable[[], None]]", 0.09653428700908397], ["str", 0.09493886565030445], ["Dict[str, Any]", 0.09321441925952803], ["List[str]", 0.09178121920873875]], "sql": [["List[str]", 0.29129096275184524], ["str", 0.26533506725827305], ["list", 0.14564548137592262], ["Optional[str]", 0.1428175548666213], ["dict", 0.08264993231293993], ["List[int]", 0.07226100143439788]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[328, 4], [331, 54]], "fn_var_ln": {"msg": [[329, 16], [329, 19]], "status": [[329, 8], [329, 14]]}, "fn_var_occur": {"msg": [["status", "msg", "self", "db_hook", "test_connection"]], "status": [["status", "msg", "self", "db_hook", "test_connection"], ["status", "True"]]}, "name": "test_connection_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["status", "msg", "self", "db_hook", "test_connection"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.test_connection_success", "ret_exprs": [], "ret_type": "", "variables": {"msg": "", "status": ""}, "variables_p": {"msg": [["str", 0.11830593044076172], ["Tuple[str, str, str, str, str, str]", 0.10835341637047771], ["int", 0.09738958902082476]], "status": [["str", 0.606146312200249], ["Set[str]", 0.11476551392882435], ["list", 0.09591130088818015], ["Type[django.applications.catmaid.models.ChangeRequest]", 0.09435562884640752], ["int", 0.08882124413633921]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[334, 4], [339, 28]], "fn_var_ln": {"msg": [[337, 16], [337, 19]], "side_effect": [[335, 8], [335, 29]], "status": [[337, 8], [337, 14]]}, "fn_var_occur": {"msg": [["status", "msg", "self", "db_hook", "test_connection"]], "side_effect": [["mock_conn", "side_effect", "Exception"]], "status": [["status", "msg", "self", "db_hook", "test_connection"], ["status", "False"]]}, "name": "test_connection_failure", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "side_effect", "Exception"], ["self", "db_hook", "get_conn", "mock_conn"]], "self": [["self", "db_hook", "get_conn", "mock_conn"], ["status", "msg", "self", "db_hook", "test_connection"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [], "self": []}, "q_name": "TestTrinoHook.test_connection_failure", "ret_exprs": [], "ret_type": "", "variables": {"msg": "", "side_effect": "", "status": ""}, "variables_p": {"msg": [["str", 0.11830593044076172], ["Tuple[str, str, str, str, str, str]", 0.10835341637047771], ["int", 0.09738958902082476]], "side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "status": [["int", 0.5835713319155027], ["Tuple[float]", 0.10238432857595367]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[341, 4], [343, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_serialize_cell", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "_serialize_cell", "None"], ["self", "db_hook", "_serialize_cell", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoHook.test_serialize_cell", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestTrinoHook", "q_name": "TestTrinoHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 0], [52, 26]], "fn_var_ln": {"tmp_jwt_file": [[47, 8], [47, 20]]}, "fn_var_occur": {"tmp_jwt_file": [["tmp_jwt_file", "os", "path", "join", "tmp_dir"], ["open", "tmp_jwt_file", "tmp_file"]]}, "name": "jwt_token_file", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "jwt_token_file", "ret_exprs": [], "ret_type": "", "variables": {"tmp_jwt_file": ""}, "variables_p": {"tmp_jwt_file": [["str", 0.9033677835833175], ["List[str]", 0.09663221641668257]]}}], "imports": ["__future__", "annotations", "json", "os", "re", "tempfile", "TemporaryDirectory", "unittest", "mock", "unittest", "mock", "patch", "pytest", "trino", "transaction", "IsolationLevel", "airflow", "AirflowException", "airflow", "models", "Connection", "airflow", "providers", "trino", "hooks", "trino", "TrinoHook"], "mod_var_ln": {"BASIC_AUTHENTICATION": [[35, 0], [35, 20]], "CERT_AUTHENTICATION": [[39, 0], [39, 19]], "HOOK_GET_CONNECTION": [[34, 0], [34, 19]], "JWT_AUTHENTICATION": [[38, 0], [38, 18]], "KERBEROS_AUTHENTICATION": [[36, 0], [36, 23]], "TRINO_DBAPI_CONNECT": [[37, 0], [37, 19]]}, "mod_var_occur": {"BASIC_AUTHENTICATION": [], "CERT_AUTHENTICATION": [], "HOOK_GET_CONNECTION": [], "JWT_AUTHENTICATION": [], "KERBEROS_AUTHENTICATION": [], "TRINO_DBAPI_CONNECT": []}, "no_types_annot": {"D": 0, "I": 0, "U": 112}, "session_id": "O6JlBppAMy2QUWEhvi0grk-21Ecz23R9JvYmVt0fAw0", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BASIC_AUTHENTICATION": "", "CERT_AUTHENTICATION": "", "HOOK_GET_CONNECTION": "", "JWT_AUTHENTICATION": "", "KERBEROS_AUTHENTICATION": "", "TRINO_DBAPI_CONNECT": ""}, "variables_p": {"BASIC_AUTHENTICATION": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "CERT_AUTHENTICATION": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "HOOK_GET_CONNECTION": [["List[str]", 0.39999999999999997], ["str", 0.19999999999999998], ["int", 0.19999999999999998]], "JWT_AUTHENTICATION": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "KERBEROS_AUTHENTICATION": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "TRINO_DBAPI_CONNECT": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}