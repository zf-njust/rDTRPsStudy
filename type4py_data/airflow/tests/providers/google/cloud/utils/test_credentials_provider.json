{"error": null, "response": {"classes": [{"cls_lc": [[58, 0], [72, 63]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [62, 63]], "fn_var_ln": {"conn": [[61, 8], [61, 12]], "value": [[60, 8], [60, 13]]}, "fn_var_occur": {"conn": [["conn", "build_gcp_conn", "key_file_path", "value"]], "value": [["conn", "build_gcp_conn", "key_file_path", "value"]]}, "name": "test_build_gcp_conn_path", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHelper.test_build_gcp_conn_path", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "value": ""}, "variables_p": {"conn": [["str", 0.6990470772561561], ["Union[Literal, Literal]", 0.11923916054911314], ["Dict[str, str]", 0.0919036490838355], ["List[str]", 0.0898101131108953]], "value": [["str", 0.6086505515570163], ["List[str]", 0.2835650564621618], ["bool", 0.10778439198082196]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [67, 68]], "fn_var_ln": {"conn": [[66, 8], [66, 12]], "value": [[65, 8], [65, 13]]}, "fn_var_occur": {"conn": [["conn", "build_gcp_conn", "scopes", "value"]], "value": [["conn", "build_gcp_conn", "scopes", "value"]]}, "name": "test_build_gcp_conn_scopes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHelper.test_build_gcp_conn_scopes", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "value": ""}, "variables_p": {"conn": [["str", 0.5172982922695779], ["int", 0.18887218594892177], ["Final", 0.09384783870729316], ["Union[Literal, Literal]", 0.09309666364368877]], "value": [["str", 0.7047626500696983], ["uuid.UUID", 0.20610458772435883], ["Dict[str, Type[Any]]", 0.08913276220594273]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [72, 63]], "fn_var_ln": {"conn": [[71, 8], [71, 12]], "value": [[70, 8], [70, 13]]}, "fn_var_occur": {"conn": [["conn", "build_gcp_conn", "project_id", "value"]], "value": [["conn", "build_gcp_conn", "project_id", "value"]]}, "name": "test_build_gcp_conn_project", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHelper.test_build_gcp_conn_project", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "value": ""}, "variables_p": {"conn": [["str", 0.2613769605813107], ["int", 0.22374477179769653], ["bool", 0.08186988176873788]], "value": [["int", 0.4791812081925125], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str]", 0.10263028843887718], ["Counter[int]", 0.10026594930538042]]}}], "name": "TestHelper", "q_name": "TestHelper", "variables": {}, "variables_p": {}}, {"cls_lc": [[75, 0], [97, 51]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [90, 51]], "fn_var_ln": {"file_content": [[81, 8], [81, 20]], "file_dict": [[79, 8], [79, 17]], "file_name": [[82, 8], [82, 17]], "mock_file_handler": [[83, 8], [83, 25]], "name": [[84, 8], [84, 30]], "string_file": [[80, 8], [80, 19]], "write": [[85, 8], [85, 31]]}, "fn_var_occur": {"file_content": [["file_content", "json", "dumps", "file_dict"], ["file_content", "string_file", "getvalue"]], "file_dict": [["file_content", "json", "dumps", "file_dict"], ["provide_gcp_credentials", "key_file_dict", "file_dict"]], "file_name": [["mock_file_handler", "name", "file_name"], ["os", "environ", "CREDENTIALS", "file_name"]], "mock_file_handler": [["mock_file_handler", "mock_file", "return_value", "__enter__", "return_value"], ["mock_file_handler", "name", "file_name"], ["mock_file_handler", "write", "string_file", "write"]], "name": [["mock_file_handler", "name", "file_name"]], "string_file": [["string_file", "StringIO"], ["mock_file_handler", "write", "string_file", "write"], ["file_content", "string_file", "getvalue"]], "write": [["mock_file_handler", "write", "string_file", "write"]]}, "name": "test_provide_gcp_credentials_key_content", "params": {"mock_file": "", "self": ""}, "params_descr": {"mock_file": "", "self": ""}, "params_occur": {"mock_file": [["mock_file_handler", "mock_file", "return_value", "__enter__", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_file": [], "self": []}, "q_name": "TestProvideGcpCredentials.test_provide_gcp_credentials_key_content", "ret_exprs": [], "ret_type": "", "variables": {"file_content": "", "file_dict": "", "file_name": "", "mock_file_handler": "", "name": "", "string_file": "", "write": ""}, "variables_p": {"file_content": [["str", 0.7080321504333458], ["io.BufferedWriter", 0.1016406942360633], ["Tuple[str, str, str]", 0.08961958359832849]], "file_dict": [["str", 0.40201407710270454], ["dict", 0.1779016323596048], ["Dict[str, Any]", 0.12560062874744557], ["list", 0.10969148666177157], ["Dict[str, List[Any]]", 0.09690589928231202], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0878862758461614]], "file_name": [["str", 1.0]], "mock_file_handler": [["str", 0.7830482288686671], ["dict", 0.09292768284248337]], "name": [["str", 0.9999999999999999]], "string_file": [["str", 0.8881683487557859], ["list", 0.11183165124421385]], "write": [["str", 0.26010197225308185], ["list", 0.20934554482799492], ["Dict[str, int]", 0.12115275145401345], ["Set[str]", 0.11839102342294891], ["IO[bytes]", 0.10299386840487652], ["bool", 0.09915274552880708], ["Union[Literal, Literal]", 0.08886209410827732]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [97, 51]], "fn_var_ln": {"key_path": [[94, 8], [94, 16]]}, "fn_var_occur": {"key_path": [["provide_gcp_credentials", "key_file_path", "key_path"], ["os", "environ", "CREDENTIALS", "key_path"]]}, "name": "test_provide_gcp_credentials_keep_environment", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentials.test_provide_gcp_credentials_keep_environment", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["str", 1.0]]}}], "name": "TestProvideGcpCredentials", "q_name": "TestProvideGcpCredentials", "variables": {}, "variables_p": {}}, {"cls_lc": [[100, 0], [111, 73]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [111, 73]], "fn_var_ln": {"path": [[105, 8], [105, 12]], "project_id": [[107, 8], [107, 18]], "return_value": [[104, 8], [104, 33]], "scopes": [[106, 8], [106, 14]]}, "fn_var_occur": {"path": [["provide_gcp_connection", "path", "scopes", "project_id"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"]], "project_id": [["provide_gcp_connection", "path", "scopes", "project_id"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"]], "return_value": [["mock_builder", "return_value", "TEMP_VARIABLE"]], "scopes": [["provide_gcp_connection", "path", "scopes", "project_id"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"]]}, "name": "test_provide_gcp_connection", "params": {"mock_builder": "", "self": ""}, "params_descr": {"mock_builder": "", "self": ""}, "params_occur": {"mock_builder": [["mock_builder", "return_value", "TEMP_VARIABLE"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_builder": [], "self": []}, "q_name": "TestProvideGcpConnection.test_provide_gcp_connection", "ret_exprs": [], "ret_type": "", "variables": {"path": "", "project_id": "", "return_value": "", "scopes": ""}, "variables_p": {"path": [["str", 0.9016410076610901]], "project_id": [["str", 0.6065724523865126], ["Dict[str, str]", 0.1866821167053276], ["int", 0.11247703775953985]], "return_value": [["int", 0.2854560711354669], ["str", 0.22297769573804777], ["Dict[str, Dict[str, Any]]", 0.09353613298236951], ["List[Dict[str, str]]", 0.07299156962240015]], "scopes": [["Dict[str, str]", 0.32087104469119926], ["str", 0.3019352694022153], ["bytes", 0.0986665359200453]]}}], "name": "TestProvideGcpConnection", "q_name": "TestProvideGcpConnection", "variables": {}, "variables_p": {}}, {"cls_lc": [[114, 0], [130, 51]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [130, 51]], "fn_var_ln": {"path": [[122, 8], [122, 12]], "project_id": [[124, 8], [124, 18]], "return_value": [[121, 8], [121, 33]], "scopes": [[123, 8], [123, 14]]}, "fn_var_occur": {"path": [["provide_gcp_conn_and_credentials", "path", "scopes", "project_id"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"], ["os", "environ", "CREDENTIALS", "path"]], "project_id": [["provide_gcp_conn_and_credentials", "path", "scopes", "project_id"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"]], "return_value": [["mock_builder", "return_value", "TEMP_VARIABLE"]], "scopes": [["provide_gcp_conn_and_credentials", "path", "scopes", "project_id"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"]]}, "name": "test_provide_gcp_conn_and_credentials", "params": {"mock_builder": "", "self": ""}, "params_descr": {"mock_builder": "", "self": ""}, "params_occur": {"mock_builder": [["mock_builder", "return_value", "TEMP_VARIABLE"], ["mock_builder", "assert_called_once_with", "key_file_path", "path", "scopes", "scopes", "project_id", "project_id"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_builder": [], "self": []}, "q_name": "TestProvideGcpConnAndCredentials.test_provide_gcp_conn_and_credentials", "ret_exprs": [], "ret_type": "", "variables": {"path": "", "project_id": "", "return_value": "", "scopes": ""}, "variables_p": {"path": [["str", 0.39227295999692335], ["List[str]", 0.10730551022016059], ["bytes", 0.09506945693005675]], "project_id": [["str", 1.0]], "return_value": [["int", 0.2854560711354669], ["str", 0.22297769573804777], ["Dict[str, Dict[str, Any]]", 0.09353613298236951], ["List[Dict[str, str]]", 0.07299156962240015]], "scopes": [["str", 0.5043161218956493], ["list", 0.19764119161811333], ["bytes", 0.10345566303920499]]}}], "name": "TestProvideGcpConnAndCredentials", "q_name": "TestProvideGcpConnAndCredentials", "variables": {}, "variables_p": {}}, {"cls_lc": [[133, 0], [391, 43]], "cls_var_ln": {"test_key_file": [[135, 4], [135, 17]], "test_project_id": [[136, 4], [136, 19]], "test_scopes": [[134, 4], [134, 15]]}, "cls_var_occur": {"test_key_file": [], "test_project_id": [], "test_scopes": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[139, 4], [147, 28]], "fn_var_ln": {"result": [[142, 12], [142, 18]]}, "fn_var_occur": {"result": [["result", "get_credentials_and_project_id"]]}, "name": "test_get_credentials_and_project_id_with_default_auth", "params": {"caplog": "", "mock_auth_default": "", "self": ""}, "params_descr": {"caplog": "", "mock_auth_default": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "INFO", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "messages"]], "mock_auth_default": [["mock_auth_default", "assert_called_once_with", "scopes", "None"]], "self": []}, "params_p": {"args": [], "caplog": [["str", 0.4546865667737863], ["Dict[str, Any]", 0.08884931278016471]], "kwargs": [], "mock_auth_default": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_default_auth", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["str", 0.9999999999999997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[150, 4], [157, 91]], "fn_var_ln": {"mock_credentials": [[151, 8], [151, 24]], "result": [[154, 8], [154, 14]], "return_value": [[152, 8], [152, 38]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_credentials", "with_subject", "assert_called_once_with"], ["mock_credentials", "with_subject", "return_value", "self", "test_project_id", "result"]], "result": [["result", "get_credentials_and_project_id", "delegate_to"], ["mock_credentials", "with_subject", "return_value", "self", "test_project_id", "result"]], "return_value": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_credentials", "with_subject", "return_value", "self", "test_project_id", "result"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_delegate", "params": {"mock_auth_default": "", "self": ""}, "params_descr": {"mock_auth_default": "", "self": ""}, "params_occur": {"mock_auth_default": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_auth_default", "assert_called_once_with", "scopes", "None"]], "self": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_credentials", "with_subject", "return_value", "self", "test_project_id", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_auth_default": [["mock.MagicMock", 0.08983302181242259]], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_default_auth_and_delegate", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [["mock.MagicMock", 0.28858420226813086]], "result": [["list", 0.3851345723391349], ["Tuple[int, int]", 0.15952874822698634], ["Dict[str, Union[Any, Any]]", 0.13280910097130502], ["tests.mock.zwave.MockNode", 0.0879529046359043], ["Dict[str, Any]", 0.08610371315785594], ["mock.Mock", 0.07359195381622367]], "return_value": [["str", 0.10020821771760037], ["int", 0.09750437443063845], ["Dict[str, Any]", 0.09124378720847855], ["Optional[bytes]", 0.08856350541319145]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[161, 4], [167, 55]], "fn_var_ln": {"mock_credentials": [[162, 8], [162, 24]], "result": [[165, 8], [165, 14]], "return_value": [[163, 8], [163, 38]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"]], "result": [["result", "get_credentials_and_project_id", "scopes", "scopes"], ["mock_auth_default", "return_value", "result"]], "return_value": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_auth_default", "return_value", "result"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_scopes", "params": {"mock_auth_default": "", "scopes": "", "self": ""}, "params_descr": {"mock_auth_default": "", "scopes": "", "self": ""}, "params_occur": {"mock_auth_default": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_auth_default", "assert_called_once_with", "scopes", "scopes"], ["mock_auth_default", "return_value", "result"]], "scopes": [["result", "get_credentials_and_project_id", "scopes", "scopes"], ["mock_auth_default", "assert_called_once_with", "scopes", "scopes"]], "self": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_auth_default": [], "scopes": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_default_auth_and_scopes", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [["mock.MagicMock", 0.6030216895107146], ["mock.Mock", 0.09106454944306246]], "result": [["dict", 0.201136294540524], ["str", 0.19991578325029613], ["Dict[str, Any]", 0.1129571633424003], ["List[str]", 0.0954641959094529], ["Tuple[str, str]", 0.09393880462623318], ["List[Tuple[Any, str]]", 0.0902208911247891], ["Dict[str, str]", 0.08456909128222977]], "return_value": [["str", 0.3199896755554199], ["List[Dict[str, str]]", 0.09358302020280877]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [189, 89]], "fn_var_ln": {"mock_credentials": [[176, 8], [176, 24]], "result": [[179, 8], [179, 14]], "return_value": [[177, 8], [177, 38]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "None", "target_scopes", "None"]], "result": [["result", "get_credentials_and_project_id", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT"], ["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"]], "return_value": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_target_principal", "params": {"mock_auth_default": "", "mock_impersonated_credentials": "", "self": ""}, "params_descr": {"mock_auth_default": "", "mock_impersonated_credentials": "", "self": ""}, "params_occur": {"mock_auth_default": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_auth_default", "assert_called_once_with", "scopes", "None"]], "mock_impersonated_credentials": [["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "None", "target_scopes", "None"], ["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"]], "self": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_auth_default": [["mock.MagicMock", 0.07787391020402396]], "mock_impersonated_credentials": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_default_auth_and_target_principal", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [["mock.MagicMock", 0.28858420226813086]], "result": [["str", 0.5521717086162159], ["Dict[str, Union[bool, str]]", 0.1491487918781605], ["list", 0.11462889702409755], ["Dict[str, Union[Any, Any]]", 0.09590929926100779]], "return_value": [["int", 0.12696446271766612], ["str", 0.1225222098715027], ["List[Dict[str, str]]", 0.08754135714111576], ["Optional[bytes]", 0.07779193058005726]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[195, 4], [212, 91]], "fn_var_ln": {"mock_credentials": [[198, 8], [198, 24]], "result": [[201, 8], [201, 14]], "return_value": [[199, 8], [199, 38]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_1_SAME_PROJECT", "delegates", "None", "target_scopes"]], "result": [["result", "get_credentials_and_project_id", "scopes", "target_principal", "ACCOUNT_1_SAME_PROJECT"], ["mock_impersonated_credentials", "return_value", "self", "test_project_id", "result"]], "return_value": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_impersonated_credentials", "return_value", "self", "test_project_id", "result"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_scopes_and_target_principal", "params": {"mock_auth_default": "", "mock_impersonated_credentials": "", "self": ""}, "params_descr": {"mock_auth_default": "", "mock_impersonated_credentials": "", "self": ""}, "params_occur": {"mock_auth_default": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_auth_default", "assert_called_once_with", "scopes"]], "mock_impersonated_credentials": [["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_1_SAME_PROJECT", "delegates", "None", "target_scopes"], ["mock_impersonated_credentials", "return_value", "self", "test_project_id", "result"]], "self": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_impersonated_credentials", "return_value", "self", "test_project_id", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_auth_default": [], "mock_impersonated_credentials": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_default_auth_and_scopes_and_target_principal", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [["mock.MagicMock", 0.28858420226813086]], "result": [["str", 0.7042783555293972], ["Dict[str, List[str]]", 0.18064187262654124], ["tuple", 0.11507977184406151]], "return_value": [["str", 0.10020821771760037], ["int", 0.09750437443063845], ["Dict[str, Any]", 0.09124378720847855], ["Optional[bytes]", 0.08856350541319145]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[218, 4], [235, 89]], "fn_var_ln": {"mock_credentials": [[221, 8], [221, 24]], "result": [[224, 8], [224, 14]], "return_value": [[222, 8], [222, 38]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT", "target_scopes", "None"]], "result": [["result", "get_credentials_and_project_id", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT"], ["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"]], "return_value": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_target_principal_and_delegates", "params": {"mock_auth_default": "", "mock_impersonated_credentials": "", "self": ""}, "params_descr": {"mock_auth_default": "", "mock_impersonated_credentials": "", "self": ""}, "params_occur": {"mock_auth_default": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"], ["mock_auth_default", "assert_called_once_with", "scopes", "None"]], "mock_impersonated_credentials": [["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT", "target_scopes", "None"], ["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"]], "self": [["mock_auth_default", "return_value", "mock_credentials", "self", "test_project_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_auth_default": [["mock.MagicMock", 0.07787391020402396]], "mock_impersonated_credentials": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_default_auth_and_target_principal_and_delegates", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [["mock.MagicMock", 0.28858420226813086]], "result": [["str", 0.7505488799589499], ["Dict[str, Union[bool, str]]", 0.16423148055829806], ["Pattern[str]", 0.08521963948275199]], "return_value": [["int", 0.12696446271766612], ["str", 0.1225222098715027], ["List[Dict[str, str]]", 0.08754135714111576], ["Optional[bytes]", 0.07779193058005726]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [249, 88]], "fn_var_ln": {"result": [[246, 12], [246, 18]]}, "fn_var_occur": {"result": [["result", "get_credentials_and_project_id", "key_path", "self", "test_key_file"], ["mock_from_service_account_file", "return_value", "self", "test_project_id", "result"]]}, "name": "test_get_credentials_and_project_id_with_service_account_file", "params": {"caplog": "", "mock_from_service_account_file": "", "self": ""}, "params_descr": {"caplog": "", "mock_from_service_account_file": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "messages"]], "mock_from_service_account_file": [["mock_from_service_account_file", "return_value", "project_id", "self", "test_project_id"], ["mock_from_service_account_file", "assert_called_once_with", "self", "test_key_file", "scopes", "None"], ["mock_from_service_account_file", "return_value", "self", "test_project_id", "result"]], "self": [["mock_from_service_account_file", "return_value", "project_id", "self", "test_project_id"], ["result", "get_credentials_and_project_id", "key_path", "self", "test_key_file"], ["mock_from_service_account_file", "assert_called_once_with", "self", "test_key_file", "scopes", "None"], ["mock_from_service_account_file", "return_value", "self", "test_project_id", "result"]]}, "params_p": {"args": [], "caplog": [["str", 0.19716062184093938], ["Dict[str, Any]", 0.09551062414020252]], "kwargs": [], "mock_from_service_account_file": [["str", 0.3753791014505853], ["mock.Mock", 0.09382731875067254]], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_service_account_file", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["str", 0.33260839788389723], ["Dict[str, Any]", 0.1158150978067079], ["List[Dict[str, Any]]", 0.11197258117710787], ["Counter[str]", 0.09177116147732238], ["dict", 0.0899513557879257], ["List[List[int]]", 0.08641502206169988], ["Optional[str]", 0.08505934509727077]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[254, 4], [256, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_service_account_file_and_non_valid_key", "params": {"file": "", "self": ""}, "params_descr": {"file": "", "self": ""}, "params_occur": {"file": [["get_credentials_and_project_id", "key_path", "file"]], "self": []}, "params_p": {"args": [], "file": [["str", 0.6241540949983541], ["Optional[str]", 0.17349614359556598], ["TextIO", 0.08750426579434784]], "kwargs": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_service_account_file_and_non_valid_key", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[261, 4], [271, 70]], "fn_var_ln": {"result": [[268, 12], [268, 18]], "service_account": [[265, 8], [265, 23]]}, "fn_var_occur": {"result": [["result", "get_credentials_and_project_id", "keyfile_dict", "service_account"], ["mock_from_service_account_info", "return_value", "self", "test_project_id", "result"]], "service_account": [["result", "get_credentials_and_project_id", "keyfile_dict", "service_account"], ["mock_from_service_account_info", "assert_called_once_with", "service_account", "scopes", "None"]]}, "name": "test_get_credentials_and_project_id_with_service_account_info", "params": {"caplog": "", "mock_from_service_account_info": "", "self": ""}, "params_descr": {"caplog": "", "mock_from_service_account_info": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "messages"]], "mock_from_service_account_info": [["mock_from_service_account_info", "return_value", "project_id", "self", "test_project_id"], ["mock_from_service_account_info", "assert_called_once_with", "service_account", "scopes", "None"], ["mock_from_service_account_info", "return_value", "self", "test_project_id", "result"]], "self": [["mock_from_service_account_info", "return_value", "project_id", "self", "test_project_id"], ["mock_from_service_account_info", "return_value", "self", "test_project_id", "result"]]}, "params_p": {"args": [], "caplog": [["str", 0.4128721299767463]], "kwargs": [], "mock_from_service_account_info": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_service_account_info", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "service_account": ""}, "variables_p": {"result": [["Dict[str, Any]", 0.1015354917110184], ["list", 0.09149536217019574]], "service_account": [["str", 0.08780530393021739], ["int", 0.08614616778843055]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[274, 4], [284, 9]], "fn_var_ln": {"result": [[279, 12], [279, 18]]}, "fn_var_occur": {"result": [["result", "get_credentials_and_project_id", "credential_config_file", "temp_file", "name"], ["mock_load_credentials_from_file", "return_value", "result"]]}, "name": "test_get_credentials_using_credential_config_file", "params": {"caplog": "", "mock_load_credentials_from_file": "", "self": ""}, "params_descr": {"caplog": "", "mock_load_credentials_from_file": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["temp_file", "name", "caplog", "messages"]], "mock_load_credentials_from_file": [["mock_load_credentials_from_file", "assert_called_once_with", "temp_file", "name", "scopes", "None"], ["mock_load_credentials_from_file", "return_value", "result"]], "self": []}, "params_p": {"args": [], "caplog": [["str", 0.12329848457856656], ["bool", 0.10230415940384188], ["uuid.UUID", 0.0944145894552763]], "kwargs": [], "mock_load_credentials_from_file": [["Optional[str]", 0.10533585356188607], ["mock.MagicMock", 0.09040289676330664]], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_using_credential_config_file", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["str", 0.5160639948983975], ["List[Dict[str, str]]", 0.29707305604998685], ["list", 0.09050594144991936]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[287, 4], [293, 91]], "fn_var_ln": {"result": [[290, 12], [290, 18]]}, "fn_var_occur": {"result": [["result", "get_credentials_and_project_id", "credential_config_file"], ["mock_load_credentials_from_file", "return_value", "result"]]}, "name": "test_get_credentials_using_credential_config_dict", "params": {"caplog": "", "mock_load_credentials_from_file": "", "self": ""}, "params_descr": {"caplog": "", "mock_load_credentials_from_file": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "messages"]], "mock_load_credentials_from_file": [["mock_load_credentials_from_file", "assert_called_once"], ["mock_load_credentials_from_file", "return_value", "result"]], "self": []}, "params_p": {"args": [], "caplog": [["str", 0.2871429358794342], ["bytes", 0.1868546733237803]], "kwargs": [], "mock_load_credentials_from_file": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_using_credential_config_dict", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["str", 0.8794254158571544], ["Dict[str, Union[bool, str]]", 0.12057458414284551]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[296, 4], [302, 93]], "fn_var_ln": {"result": [[299, 12], [299, 18]]}, "fn_var_occur": {"result": [["result", "get_credentials_and_project_id", "credential_config_file"], ["mock_load_credentials_from_file", "return_value", "result"]]}, "name": "test_get_credentials_using_credential_config_string", "params": {"caplog": "", "mock_load_credentials_from_file": "", "self": ""}, "params_descr": {"caplog": "", "mock_load_credentials_from_file": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "messages"]], "mock_load_credentials_from_file": [["mock_load_credentials_from_file", "assert_called_once"], ["mock_load_credentials_from_file", "return_value", "result"]], "self": []}, "params_p": {"args": [], "caplog": [["str", 0.588294709652954]], "kwargs": [], "mock_load_credentials_from_file": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_using_credential_config_string", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["str", 0.8794254158571544], ["Dict[str, Union[bool, str]]", 0.12057458414284551]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[304, 4], [310, 93]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_using_credential_config_invalid_string", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "clear"], ["caplog", "messages"]], "self": []}, "params_p": {"args": [], "caplog": [["str", 0.25191767674759324], ["int", 0.12615085125007977]], "kwargs": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_using_credential_config_invalid_string", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[315, 4], [334, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_key_secret_name", "params": {"mock_default": "", "mock_from_service_account_info": "", "mock_secret_manager_client": "", "self": ""}, "params_descr": {"mock_default": "", "mock_from_service_account_info": "", "mock_secret_manager_client": "", "self": ""}, "params_occur": {"mock_default": [], "mock_from_service_account_info": [["mock_from_service_account_info", "assert_called_once_with", "scopes", "ANY"]], "mock_secret_manager_client": [["mock_secret_manager_client", "return_value", "is_valid_secret_name", "return_value", "True"], ["mock_secret_manager_client", "return_value", "get_secret", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_default": [["mock.Mock", 0.18212281570023098], ["bool", 0.11930285077018385]], "mock_from_service_account_info": [], "mock_secret_manager_client": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_key_secret_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[338, 4], [348, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_key_secret_name_when_key_is_invalid", "params": {"mock_default": "", "mock_secret_manager_client": "", "self": ""}, "params_descr": {"mock_default": "", "mock_secret_manager_client": "", "self": ""}, "params_occur": {"mock_default": [], "mock_secret_manager_client": [["mock_secret_manager_client", "return_value", "is_valid_secret_name", "return_value", "True"], ["mock_secret_manager_client", "return_value", "get_secret", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_default": [["mock.Mock", 0.2271656040482617]], "mock_secret_manager_client": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_key_secret_name_when_key_is_invalid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[350, 4], [357, 108]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_mutually_exclusive_configuration", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_get_credentials_and_project_id_with_mutually_exclusive_configuration", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test disable logging in ``get_credentials_and_project_id``", "long_descr": null, "ret": null}, "fn_lc": [[366, 4], [391, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_disable_logging", "params": {"caplog": "", "mock_default": "", "mock_file": "", "mock_info": "", "self": ""}, "params_descr": {"caplog": "", "mock_default": "", "mock_file": "", "mock_info": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "record_tuples"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "record_tuples"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "clear"], ["caplog", "record_tuples"]], "mock_default": [], "mock_file": [], "mock_info": [], "self": []}, "params_p": {"args": [], "caplog": [["str", 0.39971383458335175], ["Dict[str, Sequence[str]]", 0.10331401638321334]], "kwargs": [], "mock_default": [["mock.Mock", 0.17346284233709403]], "mock_file": [["mock.Mock", 0.17346284233709403]], "mock_info": [["mock.Mock", 0.17346284233709403]], "self": []}, "q_name": "TestGetGcpCredentialsAndProjectId.test_disable_logging", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGetGcpCredentialsAndProjectId", "q_name": "TestGetGcpCredentialsAndProjectId", "variables": {"test_key_file": "", "test_project_id": "", "test_scopes": ""}, "variables_p": {"test_key_file": [["str", 0.45370489347950693], ["Dict[str, str]", 0.28094043425246795], ["List[Tuple[str, Any]]", 0.265354672268025]], "test_project_id": [["Optional[str]", 0.43464216304295755], ["int", 0.29290884255790284], ["str", 0.2724489943991395]], "test_scopes": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]]}}, {"cls_lc": [[394, 0], [406, 48]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[395, 4], [396, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_scopes_with_default", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetScopes.test_get_scopes_with_default", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[405, 4], [406, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_scopes_with_input", "params": {"scopes": "", "scopes_str": "", "self": ""}, "params_descr": {"scopes": "", "scopes_str": "", "self": ""}, "params_occur": {"scopes": [["_get_scopes", "scopes_str", "scopes"]], "scopes_str": [["_get_scopes", "scopes_str", "scopes"]], "self": []}, "params_p": {"args": [], "kwargs": [], "scopes": [["str", 1.0000000000000002]], "scopes_str": [["str", 1.0000000000000002]], "self": []}, "q_name": "TestGetScopes.test_get_scopes_with_input", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGetScopes", "q_name": "TestGetScopes", "variables": {}, "variables_p": {}}, {"cls_lc": [[409, 0], [429, 105]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[410, 4], [411, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_target_principal_and_delegates_no_argument", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetTargetPrincipalAndDelegates.test_get_target_principal_and_delegates_no_argument", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[426, 4], [429, 105]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_target_principal_and_delegates_with_input", "params": {"impersonation_chain": "", "self": "", "target_principal_and_delegates": ""}, "params_descr": {"impersonation_chain": "", "self": "", "target_principal_and_delegates": ""}, "params_occur": {"impersonation_chain": [["_get_target_principal_and_delegates", "impersonation_chain", "target_principal_and_delegates"]], "self": [], "target_principal_and_delegates": [["_get_target_principal_and_delegates", "impersonation_chain", "target_principal_and_delegates"]]}, "params_p": {"args": [], "impersonation_chain": [["bool", 0.08309303047309262]], "kwargs": [], "self": [], "target_principal_and_delegates": [["bool", 0.08309303047309262]]}, "q_name": "TestGetTargetPrincipalAndDelegates.test_get_target_principal_and_delegates_with_input", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGetTargetPrincipalAndDelegates", "q_name": "TestGetTargetPrincipalAndDelegates", "variables": {}, "variables_p": {}}, {"cls_lc": [[432, 0], [438, 67]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[433, 4], [434, 106]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_project_id_from_service_account_email", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetProjectIdFromServiceAccountEmail.test_get_project_id_from_service_account_email", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[436, 4], [438, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_project_id_from_service_account_email_wrong_input", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetProjectIdFromServiceAccountEmail.test_get_project_id_from_service_account_email_wrong_input", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGetProjectIdFromServiceAccountEmail", "q_name": "TestGetProjectIdFromServiceAccountEmail", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "logging", "os", "re", "io", "StringIO", "tempfile", "NamedTemporaryFile", "unittest", "mock", "unittest", "mock", "ANY", "uuid", "uuid4", "pytest", "google", "auth", "environment_vars", "CREDENTIALS", "google", "auth", "exceptions", "DefaultCredentialsError", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "utils", "credentials_provider", "_DEFAULT_SCOPES", "AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT", "_get_project_id_from_service_account_email", "_get_scopes", "_get_target_principal_and_delegates", "build_gcp_conn", "get_credentials_and_project_id", "provide_gcp_conn_and_credentials", "provide_gcp_connection", "provide_gcp_credentials"], "mod_var_ln": {"ACCOUNT_1_SAME_PROJECT": [[51, 0], [51, 22]], "ACCOUNT_2_SAME_PROJECT": [[52, 0], [52, 22]], "ACCOUNT_3_ANOTHER_PROJECT": [[53, 0], [53, 25]], "ANOTHER_PROJECT_ID": [[54, 0], [54, 18]], "CRED_PROVIDER_LOGGER_NAME": [[55, 0], [55, 25]], "ENV_CRED": [[50, 0], [50, 8]], "ENV_VALUE": [[47, 0], [47, 9]], "KEY": [[49, 0], [49, 3]], "TEMP_VARIABLE": [[48, 0], [48, 13]]}, "mod_var_occur": {"ACCOUNT_1_SAME_PROJECT": [["result", "get_credentials_and_project_id", "scopes", "target_principal", "ACCOUNT_1_SAME_PROJECT"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_1_SAME_PROJECT", "delegates", "None", "target_scopes"], ["result", "get_credentials_and_project_id", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT", "target_scopes", "None"]], "ACCOUNT_2_SAME_PROJECT": [["result", "get_credentials_and_project_id", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT", "target_scopes", "None"]], "ACCOUNT_3_ANOTHER_PROJECT": [["result", "get_credentials_and_project_id", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "None", "target_scopes", "None"], ["result", "get_credentials_and_project_id", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT"], ["mock_impersonated_credentials", "assert_called_once_with", "source_credentials", "mock_credentials", "target_principal", "ACCOUNT_3_ANOTHER_PROJECT", "delegates", "ACCOUNT_1_SAME_PROJECT", "ACCOUNT_2_SAME_PROJECT", "target_scopes", "None"], ["_get_project_id_from_service_account_email", "ACCOUNT_3_ANOTHER_PROJECT", "ANOTHER_PROJECT_ID"]], "ANOTHER_PROJECT_ID": [["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"], ["mock_impersonated_credentials", "return_value", "ANOTHER_PROJECT_ID", "result"], ["_get_project_id_from_service_account_email", "ACCOUNT_3_ANOTHER_PROJECT", "ANOTHER_PROJECT_ID"]], "CRED_PROVIDER_LOGGER_NAME": [["caplog", "at_level", "level", "logging", "INFO", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"], ["caplog", "at_level", "level", "logging", "DEBUG", "logger", "CRED_PROVIDER_LOGGER_NAME"]], "ENV_CRED": [], "ENV_VALUE": [["os", "environ", "CREDENTIALS", "ENV_VALUE"], ["os", "environ", "CREDENTIALS", "ENV_VALUE"], ["os", "environ", "AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT", "ENV_VALUE"], ["os", "environ", "AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT", "ENV_VALUE"], ["os", "environ", "CREDENTIALS", "ENV_VALUE"]], "KEY": [], "TEMP_VARIABLE": [["mock_builder", "return_value", "TEMP_VARIABLE"], ["os", "environ", "AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT", "TEMP_VARIABLE"], ["mock_builder", "return_value", "TEMP_VARIABLE"], ["os", "environ", "AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT", "TEMP_VARIABLE"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 125}, "session_id": "GTwONjvQ6r10eYKzGK6uHr05mVQ05k95bxDxikNmwnQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"ACCOUNT_1_SAME_PROJECT": "", "ACCOUNT_2_SAME_PROJECT": "", "ACCOUNT_3_ANOTHER_PROJECT": "", "ANOTHER_PROJECT_ID": "", "CRED_PROVIDER_LOGGER_NAME": "", "ENV_CRED": "", "ENV_VALUE": "", "KEY": "", "TEMP_VARIABLE": ""}, "variables_p": {"ACCOUNT_1_SAME_PROJECT": [["str", 0.9025587376288849]], "ACCOUNT_2_SAME_PROJECT": [["str", 0.901625375122161]], "ACCOUNT_3_ANOTHER_PROJECT": [["str", 1.0000000000000002]], "ANOTHER_PROJECT_ID": [["str", 1.0]], "CRED_PROVIDER_LOGGER_NAME": [["str", 1.0]], "ENV_CRED": [["str", 0.2], ["Type[Dict[str, Any]]", 0.1], ["myia.operations.utils.Operation", 0.1], ["Mapping[str, str]", 0.1], ["Dict[str, str]", 0.1]], "ENV_VALUE": [["str", 0.689977004293646], ["List[Tuple[str, str]]", 0.10884179601667969], ["Iterator[str]", 0.10554245500275887], ["List[str]", 0.09563874468691551]], "KEY": [["str", 0.5], ["int", 0.30000000000000004], ["Optional[str]", 0.1]], "TEMP_VARIABLE": [["str", 0.7543826498592618], ["Dict[str, Union[Any, Any]]", 0.0831831715572033], ["Dict[str, str]", 0.08169093167959036], ["Dict[str, int]", 0.08074324690394456]]}}}