{"error": null, "response": {"classes": [{"cls_lc": [[35, 0], [282, 95]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 4], [48, 23]], "fn_var_ln": {"raw": [[45, 8], [45, 14]], "ti": [[38, 18], [38, 20]], "try_number": [[44, 8], [44, 21]]}, "fn_var_occur": {"raw": [["ti", "raw", "False"]], "ti": [["self", "ti", "ti", "create_task_instance", "dag_id", "task_id", "execution_date", "datetime", "state", "TaskInstanceState", "RUNNING"], ["ti", "try_number"], ["ti", "raw", "False"]], "try_number": [["ti", "try_number"]]}, "name": "task_instance", "params": {"create_task_instance": "", "self": ""}, "params_descr": {"create_task_instance": "", "self": ""}, "params_occur": {"create_task_instance": [["self", "ti", "ti", "create_task_instance", "dag_id", "task_id", "execution_date", "datetime", "state", "TaskInstanceState", "RUNNING"]], "self": [["self", "ti", "ti", "create_task_instance", "dag_id", "task_id", "execution_date", "datetime", "state", "TaskInstanceState", "RUNNING"]]}, "params_p": {"args": [], "create_task_instance": [["Iterable[Callable]", 0.14457225837750806], ["str", 0.09011157012253485], ["Callable", 0.08805822592913083], ["Dict[str, Any]", 0.08601804915909649]], "kwargs": [], "self": []}, "q_name": "TestGCSTaskHandler.task_instance", "ret_exprs": [], "ret_type": "", "variables": {"raw": "", "ti": "", "try_number": ""}, "variables_p": {"raw": [["List[str]", 0.49999999997058747], ["str", 2.0149264789844944e-11], ["bool", 1.9339109735866804e-11], ["Dict[str, bool]", 9.880922464997032e-12], ["List[Tuple[Any, Any]]", 9.458187270869773e-12]], "ti": [["str", 0.4723057274956004], ["int", 0.3617199956966709], ["list", 0.08622483238603908]], "try_number": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [52, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "local_log_location", "params": {"self": "", "tmp_path_factory": ""}, "params_descr": {"self": "", "tmp_path_factory": ""}, "params_occur": {"self": [], "tmp_path_factory": [["str", "tmp_path_factory", "mktemp"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path_factory": [["str", 0.40161037174978503], ["bool", 0.12840581552411787]]}, "q_name": "TestGCSTaskHandler.local_log_location", "ret_exprs": ["return str(tmp_path_factory.mktemp(\"local-gcs-log-location\"))"], "ret_type": "", "ret_type_p": [["str", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [61, 35]], "fn_var_ln": {"gcs_task_handler": [[57, 8], [57, 29]]}, "fn_var_occur": {"gcs_task_handler": [["self", "gcs_task_handler", "GCSTaskHandler", "base_log_folder", "local_log_location", "gcs_log_folder"], ["self", "gcs_task_handler"]]}, "name": "gcs_task_handler", "params": {"create_log_template": "", "local_log_location": "", "self": ""}, "params_descr": {"create_log_template": "", "local_log_location": "", "self": ""}, "params_occur": {"create_log_template": [], "local_log_location": [["self", "gcs_task_handler", "GCSTaskHandler", "base_log_folder", "local_log_location", "gcs_log_folder"]], "self": [["self", "gcs_task_handler", "GCSTaskHandler", "base_log_folder", "local_log_location", "gcs_log_folder"], ["self", "gcs_task_handler"]]}, "params_p": {"args": [], "create_log_template": [["bool", 0.3344022726636928], ["Optional[Iterable[str]]", 0.18839143583856158], ["dict", 0.10765618744164825], ["int", 0.08608896514852389], ["List[Dict[str, str]]", 0.08293087329394273]], "kwargs": [], "local_log_location": [["Dict[str, Any]", 0.16751156494040076], ["Exception", 0.16011674959813632], ["dict", 0.09607396348952682], ["jumeaux.domain.config.vo.Config", 0.09481439150125964], ["Dict[str, str]", 0.09042171156655497], ["List[Tuple[str, str, str, str, str, str, str]]", 0.08634281343336771]], "self": []}, "q_name": "TestGCSTaskHandler.gcs_task_handler", "ret_exprs": [], "ret_type": "", "variables": {"gcs_task_handler": ""}, "variables_p": {"gcs_task_handler": []}}, {"docstring": {"func": "When remote log conn id configured, hook will be used", "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [83, 55]], "fn_var_ln": {"return_value": [[72, 12], [72, 24]]}, "fn_var_occur": {"return_value": [["mock_hook", "return_value", "get_credentials_and_project_id", "return_value"], ["mock_get_cred", "return_value"], ["return_value", "self", "gcs_task_handler", "client"], ["mock_client", "return_value", "return_value"]]}, "name": "test_client_conn_id_behavior", "params": {"conn_id": "", "mock_client": "", "mock_get_cred": "", "mock_hook": "", "self": ""}, "params_descr": {"conn_id": "", "mock_client": "", "mock_get_cred": "", "mock_hook": "", "self": ""}, "params_occur": {"conn_id": [["conf_vars", "conn_id"]], "mock_client": [["mock_client", "assert_called_once_with", "client_info", "mock", "ANY", "credentials", "project"], ["mock_client", "return_value", "return_value"]], "mock_get_cred": [["mock_get_cred", "return_value"], ["mock_get_cred", "assert_not_called"], ["mock_get_cred", "assert_called"]], "mock_hook": [["mock_hook", "return_value", "get_credentials_and_project_id", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id"], ["mock_hook", "assert_not_called"]], "self": [["return_value", "self", "gcs_task_handler", "client"]]}, "params_p": {"args": [], "conn_id": [["str", 0.20635180192801356], ["int", 0.10973123170486941]], "kwargs": [], "mock_client": [["unittesmock.MagicMock", 0.764459004045313]], "mock_get_cred": [["unittesmock.MagicMock", 0.1851777269157496]], "mock_hook": [["unittesmock.MagicMock", 0.423751225741031], ["mock.MagicMock", 0.08633680743949124]], "self": []}, "q_name": "TestGCSTaskHandler.test_client_conn_id_behavior", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.5161862463614554], ["List[Tuple[Any, Any, None]]", 0.19189916429140677], ["list", 0.09933563345412984], ["Dict[str, str]", 0.09652991847962616], ["Dict[str, Dict[str, Any]]", 0.09604903741338182]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [104, 61]], "fn_var_ln": {"logs": [[99, 8], [99, 12]], "metadata": [[99, 14], [99, 22]], "mock_obj": [[93, 8], [93, 16]], "name": [[94, 8], [94, 21]], "state": [[98, 8], [98, 16]], "ti": [[97, 8], [97, 10]]}, "fn_var_occur": {"logs": [["logs", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"]], "metadata": [["logs", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"], ["True", "metadata"]], "mock_obj": [["mock_obj", "MagicMock"], ["mock_obj", "name"], ["mock_client", "return_value", "list_blobs", "return_value", "mock_obj"]], "name": [["mock_obj", "name"]], "state": [["ti", "state", "TaskInstanceState", "SUCCESS"]], "ti": [["ti", "copy", "copy", "self", "ti"], ["ti", "state", "TaskInstanceState", "SUCCESS"], ["logs", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"]]}, "name": "test_should_read_logs_from_remote", "params": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_descr": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_occur": {"mock_blob": [["mock_blob", "from_string", "return_value", "download_as_bytes", "return_value"], ["mock_blob", "from_string", "assert_called_once_with", "mock_client", "return_value"]], "mock_client": [["mock_client", "return_value", "list_blobs", "return_value", "mock_obj"], ["mock_blob", "from_string", "assert_called_once_with", "mock_client", "return_value"]], "mock_creds": [], "self": [["ti", "copy", "copy", "self", "ti"], ["logs", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"]]}, "params_p": {"args": [], "kwargs": [], "mock_blob": [["unittesmock.MagicMock", 0.5004455483753617]], "mock_client": [["unittesmock.MagicMock", 0.10827978598966201]], "mock_creds": [["mock.Mock", 0.6110941027125313], ["unittesmock.MagicMock", 0.2995480738144293]], "self": []}, "q_name": "TestGCSTaskHandler.test_should_read_logs_from_remote", "ret_exprs": [], "ret_type": "", "variables": {"logs": "", "metadata": "", "mock_obj": "", "name": "", "state": "", "ti": ""}, "variables_p": {"logs": [["logging.Logger", 0.6293556865563014], ["bool", 0.1166786422728061], ["Dict[str, Union[Any, Any, Any]]", 0.09903983054847364], ["logging.LogRecord", 0.08971070833303622], ["str", 0.0652151322893827]], "metadata": [["str", 0.6112340447528908], ["bytes", 0.09845065462582625]], "mock_obj": [["mock.Mock", 0.2721850619359156], ["str", 0.21854453920090233], ["unittesmock.MagicMock", 0.12061331292028267]], "name": [["str", 0.6994101492596789], ["Dict[str, str]", 0.1112620213890281], ["cmk.gui.plugins.views.utils.Command", 0.09552302875709505]], "state": [["Dict[str, str]", 0.1019191404207408]], "ti": [["list", 0.41803766934582276], ["float", 0.1774949334246229], ["Any[Any]", 0.10727191979715642], ["str", 0.10309943562203326], ["dict", 0.08807003396130986]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [133, 9]], "fn_var_ln": {"log": [[121, 8], [121, 11]], "metadata": [[121, 13], [121, 21]], "mock_obj": [[113, 8], [113, 16]], "name": [[114, 8], [114, 21]], "state": [[120, 8], [120, 16]], "ti": [[119, 8], [119, 10]]}, "fn_var_occur": {"log": [["log", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"], ["log", "self", "gcs_task_handler", "local_base"]], "metadata": [["log", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"], ["metadata", "True"]], "mock_obj": [["mock_obj", "MagicMock"], ["mock_obj", "name"], ["mock_client", "return_value", "list_blobs", "return_value", "mock_obj"]], "name": [["mock_obj", "name"]], "state": [["ti", "state", "TaskInstanceState", "SUCCESS"]], "ti": [["self", "gcs_task_handler", "set_context", "self", "ti"], ["ti", "copy", "copy", "self", "ti"], ["ti", "state", "TaskInstanceState", "SUCCESS"], ["log", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"]]}, "name": "test_should_read_from_local_on_logs_read_error", "params": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_descr": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_occur": {"mock_blob": [["mock_blob", "from_string", "return_value", "download_as_bytes", "side_effect", "Exception"], ["mock_blob", "from_string", "assert_called_once_with", "mock_client", "return_value"]], "mock_client": [["mock_client", "return_value", "list_blobs", "return_value", "mock_obj"], ["mock_blob", "from_string", "assert_called_once_with", "mock_client", "return_value"]], "mock_creds": [], "self": [["self", "gcs_task_handler", "set_context", "self", "ti"], ["ti", "copy", "copy", "self", "ti"], ["log", "metadata", "self", "gcs_task_handler", "_read", "ti", "self", "ti", "try_number"], ["log", "self", "gcs_task_handler", "local_base"]]}, "params_p": {"args": [], "kwargs": [], "mock_blob": [["unittesmock.MagicMock", 0.2432216964123547]], "mock_client": [["unittesmock.MagicMock", 0.19737823822805586]], "mock_creds": [["mock.Mock", 0.4551955738558279], ["unittesmock.MagicMock", 0.2279677762212257]], "self": []}, "q_name": "TestGCSTaskHandler.test_should_read_from_local_on_logs_read_error", "ret_exprs": [], "ret_type": "", "variables": {"log": "", "metadata": "", "mock_obj": "", "name": "", "state": "", "ti": ""}, "variables_p": {"log": [["logging.Logger", 0.6882238306259489], ["bool", 0.09720821881611222], ["Dict[str, Union[Any, Any, Any]]", 0.08997191867430987], ["logging.LogRecord", 0.06927713055306517], ["str", 0.05531890133056367]], "metadata": [["str", 0.6074570517327901], ["bytes", 0.10600678072759553]], "mock_obj": [["mock.Mock", 0.2721850619359156], ["str", 0.21854453920090233], ["unittesmock.MagicMock", 0.12061331292028267]], "name": [["str", 0.6994101492596789], ["Dict[str, str]", 0.1112620213890281], ["cmk.gui.plugins.views.utils.Command", 0.09552302875709505]], "state": [["Dict[str, str]", 0.1019191404207408]], "ti": [["list", 0.7999999999999999], ["List[str]", 0.19999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[141, 4], [168, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_write_to_remote_on_close", "params": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_descr": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_occur": {"mock_blob": [["mock_blob", "from_string", "return_value", "download_as_bytes", "return_value"], ["mock_blob", "assert_has_calls", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "download_as_bytes", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "upload_from_string", "content_type", "any_order", "False"], ["mock_blob", "from_string", "return_value", "upload_from_string", "data"]], "mock_client": [["mock_blob", "assert_has_calls", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "download_as_bytes", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "upload_from_string", "content_type", "any_order", "False"]], "mock_creds": [], "self": [["self", "gcs_task_handler", "set_context", "self", "ti"], ["self", "gcs_task_handler", "emit", "logging", "LogRecord", "name", "level", "pathname", "None", "lineno", "None", "msg", "args", "None", "exc_info", "None"], ["self", "gcs_task_handler", "close"], ["self", "gcs_task_handler", "closed", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_blob": [["unittesmock.MagicMock", 0.5016547195463221]], "mock_client": [["unittesmock.MagicMock", 0.5746303684601087]], "mock_creds": [["mock.Mock", 0.5904251547659272], ["unittesmock.MagicMock", 0.27365350045910564]], "self": []}, "q_name": "TestGCSTaskHandler.test_write_to_remote_on_close", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [210, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_failed_write_to_remote_on_close", "params": {"caplog": "", "mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_descr": {"caplog": "", "mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "logging", "ERROR", "logger", "self", "gcs_task_handler", "log", "name"], ["caplog", "record_tuples", "logging", "ERROR"]], "mock_blob": [["mock_blob", "from_string", "return_value", "upload_from_string", "side_effect", "Exception"], ["mock_blob", "from_string", "return_value", "download_as_bytes", "return_value"], ["mock_blob", "assert_has_calls", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "download_as_bytes", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "upload_from_string", "content_type", "any_order", "False"]], "mock_client": [["mock_blob", "assert_has_calls", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "download_as_bytes", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "upload_from_string", "content_type", "any_order", "False"]], "mock_creds": [], "self": [["caplog", "at_level", "logging", "ERROR", "logger", "self", "gcs_task_handler", "log", "name"], ["self", "gcs_task_handler", "set_context", "self", "ti"], ["self", "gcs_task_handler", "emit", "logging", "LogRecord", "name", "level", "pathname", "None", "lineno", "None", "msg", "args", "None", "exc_info", "None"], ["self", "gcs_task_handler", "close"]]}, "params_p": {"args": [], "caplog": [["logging.Logger", 0.16230386805677083]], "kwargs": [], "mock_blob": [["unittesmock.MagicMock", 0.8979666083186746]], "mock_client": [["unittesmock.MagicMock", 0.48096302439885175]], "mock_creds": [["mock.Mock", 0.49236399816548865], ["unittesmock.MagicMock", 0.3280673079957237]], "self": []}, "q_name": "TestGCSTaskHandler.test_failed_write_to_remote_on_close", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[218, 4], [246, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_write_to_remote_on_close_failed_read_old_logs", "params": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_descr": {"mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_occur": {"mock_blob": [["mock_blob", "from_string", "return_value", "download_as_bytes", "side_effect", "Exception"], ["mock_blob", "assert_has_calls", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "download_as_bytes", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "upload_from_string", "content_type", "any_order", "False"]], "mock_client": [["mock_blob", "assert_has_calls", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "download_as_bytes", "mock", "call", "from_string", "mock_client", "return_value", "mock", "call", "from_string", "upload_from_string", "content_type", "any_order", "False"]], "mock_creds": [], "self": [["self", "gcs_task_handler", "set_context", "self", "ti"], ["self", "gcs_task_handler", "emit", "logging", "LogRecord", "name", "level", "pathname", "None", "lineno", "None", "msg", "args", "None", "exc_info", "None"], ["self", "gcs_task_handler", "close"]]}, "params_p": {"args": [], "kwargs": [], "mock_blob": [["unittesmock.MagicMock", 0.3028088121811224]], "mock_client": [["unittesmock.MagicMock", 0.6762603161496853]], "mock_creds": [["mock.Mock", 0.5069322944839484], ["unittesmock.MagicMock", 0.17559270965483198]], "self": []}, "q_name": "TestGCSTaskHandler.test_write_to_remote_on_close_failed_read_old_logs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[258, 4], [282, 95]], "fn_var_ln": {"handler": [[272, 12], [272, 19]]}, "fn_var_occur": {"handler": [["handler", "GCSTaskHandler", "base_log_folder", "local_log_location", "gcs_log_folder"], ["handler", "log", "info"], ["handler", "set_context", "self", "ti"], ["handler", "upload_on_close"], ["handler", "close"], ["os", "path", "exists", "handler", "handler", "baseFilename", "expected_existence_of_local_copy"]]}, "name": "test_close_with_delete_local_copy_conf", "params": {"airflow_version": "", "delete_local_copy": "", "expected_existence_of_local_copy": "", "local_log_location": "", "mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_descr": {"airflow_version": "", "delete_local_copy": "", "expected_existence_of_local_copy": "", "local_log_location": "", "mock_blob": "", "mock_client": "", "mock_creds": "", "self": ""}, "params_occur": {"airflow_version": [], "delete_local_copy": [["conf_vars", "str", "delete_local_copy"]], "expected_existence_of_local_copy": [["os", "path", "exists", "handler", "handler", "baseFilename", "expected_existence_of_local_copy"]], "local_log_location": [["handler", "GCSTaskHandler", "base_log_folder", "local_log_location", "gcs_log_folder"]], "mock_blob": [["mock_blob", "from_string", "return_value", "download_as_bytes", "return_value"]], "mock_client": [], "mock_creds": [], "self": [["handler", "set_context", "self", "ti"]]}, "params_p": {"airflow_version": [["mock.Mock", 0.5161138970716773], ["unittesmock.MagicMock", 0.26292201132816667]], "args": [], "delete_local_copy": [["tests.conftesStandaloneRedisServer", 0.19981818419076974], ["str", 0.08642231638771614], ["list", 0.0805496837858864]], "expected_existence_of_local_copy": [["str", 0.2968422393249687], ["unittesmock.MagicMock", 0.2943470209120662], ["Dict[str, Sequence[str]]", 0.0779325359467583]], "kwargs": [], "local_log_location": [["bool", 0.11931589422871394]], "mock_blob": [["unittesmock.MagicMock", 0.7918083688413132]], "mock_client": [["mock.Mock", 0.5161138970716773], ["unittesmock.MagicMock", 0.26292201132816667]], "mock_creds": [["mock.Mock", 0.5161138970716773], ["unittesmock.MagicMock", 0.26292201132816667]], "self": []}, "q_name": "TestGCSTaskHandler.test_close_with_delete_local_copy_conf", "ret_exprs": [], "ret_type": "", "variables": {"handler": ""}, "variables_p": {"handler": [["str", 0.18500529859181652], ["iris.utils.prom_helpers.PromFileWriter", 0.18049318672023604], ["logging.Logger", 0.12605483766091835], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.12043928144469862], ["Union[Literal, str]", 0.10462356407682324], ["Union[Literal[True], str]", 0.10462356407682324], ["list", 0.08993942366648584], ["int", 0.0888208437621982]]}}], "name": "TestGCSTaskHandler", "q_name": "TestGCSTaskHandler", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "copy", "logging", "os", "unittest", "mock", "unittest", "mock", "MagicMock", "pytest", "pytest", "param", "airflow", "providers", "google", "cloud", "log", "gcs_task_handler", "GCSTaskHandler", "airflow", "utils", "state", "TaskInstanceState", "airflow", "utils", "timezone", "datetime", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_dags", "clear_db_runs"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 59}, "session_id": "cSrbR51_IpqQ61nt4mg414aioI2UO0AeBmBMciAc8-w", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}