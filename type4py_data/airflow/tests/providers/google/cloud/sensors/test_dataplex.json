{"error": null, "response": {"classes": [{"cls_lc": [[41, 0], [101, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [45, 19]], "fn_var_ln": {"state": [[44, 8], [44, 18]], "task": [[43, 8], [43, 12]]}, "fn_var_occur": {"state": [["task", "state", "state"]], "task": [["task", "mock", "Mock"], ["task", "state", "state"]]}, "name": "create_task", "params": {"self": "", "state": "builtins.int"}, "params_descr": {"self": "", "state": ""}, "params_occur": {"self": [], "state": [["task", "state", "state"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "state": [["Optional[Tuple[int, ...]]", 0.1359453589124308], ["Tuple[List[int], List[int]]", 0.09755986149122009], ["int", 0.09335507596350669], ["Optional[str]", 0.09335507596350669], ["Sequence[Sequence[str]]", 0.09197611211498388], ["Sequence[str]", 0.09197611211498388], ["bool", 0.09138633191456788]]}, "q_name": "TestDataplexTaskStateSensor.create_task", "ret_exprs": ["return task"], "ret_type": "", "ret_type_p": [["str", 0.16607518103913096], ["Dict[str, Any]", 0.14712504717546207], ["int", 0.14630713156810918], ["List[str]", 0.12741668135422654], ["bytes", 0.10270159847953805]], "variables": {"state": "", "task": ""}, "variables_p": {"state": [["str", 0.6353740464882188], ["List[Tuple[int, int, int]]", 0.24487149202009006], ["Dict[str, str]", 0.11975446149169125]], "task": [["str", 0.10733543585043441]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [73, 21]], "fn_var_ln": {"result": [[62, 8], [62, 14]], "sensor": [[52, 8], [52, 14]], "task": [[49, 8], [49, 12]]}, "fn_var_occur": {"result": [["result", "sensor", "poke", "context"]], "sensor": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["result", "sensor", "poke", "context"]], "task": [["task", "self", "create_task", "TaskState", "ACTIVE"], ["mock_hook", "return_value", "get_task", "return_value", "task"]]}, "name": "test_done", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "get_task", "return_value", "task"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"]], "self": [["task", "self", "create_task", "TaskState", "ACTIVE"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["str", 0.9057438453600157], ["Dict[str, Union[Any, Any]]", 0.09425615463998414]], "self": []}, "q_name": "TestDataplexTaskStateSensor.test_done", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "sensor": "", "task": ""}, "variables_p": {"result": [["list", 0.7]], "sensor": [["str", 0.6938764958489796], ["float", 0.12540831787292747]], "task": [["Tuple[int, int]", 0.11159177090016704], ["List[Dict[str, Any]]", 0.10808480991573866], ["Callable", 0.09524609458850769], ["List[Tuple[Any, Any, Any]]", 0.09448336784807411], ["list", 0.08960280278740183], ["Dict[str, Union[int, str]]", 0.08897671074991569]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 4], [101, 9]], "fn_var_ln": {"sensor": [[80, 8], [80, 14]], "task": [[77, 8], [77, 12]]}, "fn_var_occur": {"sensor": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["sensor", "poke", "context"]], "task": [["task", "self", "create_task", "TaskState", "DELETING"], ["mock_hook", "return_value", "get_task", "return_value", "task"]]}, "name": "test_deleting", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "get_task", "return_value", "task"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"]], "self": [["task", "self", "create_task", "TaskState", "DELETING"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["str", 0.9058326710566724], ["Dict[str, Union[Any, Any]]", 0.09416732894332762]], "self": []}, "q_name": "TestDataplexTaskStateSensor.test_deleting", "ret_exprs": [], "ret_type": "", "variables": {"sensor": "", "task": ""}, "variables_p": {"sensor": [["str", 0.6938764958489796], ["float", 0.12540831787292747]], "task": [["Tuple[int, int]", 0.11159177090016704], ["List[Dict[str, Any]]", 0.10808480991573866], ["Callable", 0.09524609458850769], ["List[Tuple[Any, Any, Any]]", 0.09448336784807411], ["list", 0.08960280278740183], ["Dict[str, Union[int, str]]", 0.08897671074991569]]}}], "name": "TestDataplexTaskStateSensor", "q_name": "TestDataplexTaskStateSensor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "airflow", "AirflowException", "airflow", "providers", "google", "cloud", "sensors", "dataplex", "DataplexTaskStateSensor", "TaskState"], "mod_var_ln": {"API_VERSION": [[37, 0], [37, 11]], "BODY": [[33, 0], [33, 4]], "DATAPLEX_HOOK": [[27, 0], [27, 13]], "DATAPLEX_TASK_ID": [[34, 0], [34, 16]], "GCP_CONN_ID": [[36, 0], [36, 11]], "IMPERSONATION_CHAIN": [[38, 0], [38, 19]], "LAKE_ID": [[32, 0], [32, 7]], "PROJECT_ID": [[30, 0], [30, 10]], "REGION": [[31, 0], [31, 6]], "TASK_ID": [[29, 0], [29, 7]]}, "mod_var_occur": {"API_VERSION": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "BODY": [], "DATAPLEX_HOOK": [], "DATAPLEX_TASK_ID": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"]], "GCP_CONN_ID": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "IMPERSONATION_CHAIN": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "LAKE_ID": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"]], "PROJECT_ID": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"]], "REGION": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_task", "assert_called_once_with", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "retry", "DEFAULT", "metadata"]], "TASK_ID": [["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["sensor", "DataplexTaskStateSensor", "task_id", "TASK_ID", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID", "api_version", "API_VERSION", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 22}, "session_id": "lg_mEOTLgevpiyDiv3lMkONH9qK2mYLatXfuX1hNZ4A", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"API_VERSION": "", "BODY": "", "DATAPLEX_HOOK": "", "DATAPLEX_TASK_ID": "", "GCP_CONN_ID": "", "IMPERSONATION_CHAIN": "", "LAKE_ID": "", "PROJECT_ID": "", "REGION": "", "TASK_ID": ""}, "variables_p": {"API_VERSION": [["str", 0.7916778650008032], ["List[Tuple[str, str]]", 0.11881311508164237], ["int", 0.0895090199175543]], "BODY": [["str", 0.2], ["Dict[str, List[str]]", 0.1], ["bool", 0.1], ["Optional[Dict]", 0.1], ["bytes", 0.1], ["Union[None, str, bytes]", 0.1]], "DATAPLEX_HOOK": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "DATAPLEX_TASK_ID": [["str", 0.7806176199613674], ["int", 0.1342328183118057], ["Optional[str]", 0.08514956172682679]], "GCP_CONN_ID": [["str", 0.6197483189588655], ["Optional[str]", 0.09870813722607029], ["int", 0.09305626928860418]], "IMPERSONATION_CHAIN": [["str", 0.6938764958489796], ["float", 0.12540831787292747]], "LAKE_ID": [["str", 0.6302352056113706], ["int", 0.18067621029678085], ["Optional[str]", 0.10121048748748661]], "PROJECT_ID": [["str", 0.8807515694179392], ["int", 0.11924843058206075]], "REGION": [["str", 0.6938764958489796], ["float", 0.12540831787292747]], "TASK_ID": [["str", 0.7820454548436983], ["int", 0.12109057737833219], ["Optional[str]", 0.0968639677779694]]}}}