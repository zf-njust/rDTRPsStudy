{"error": null, "response": {"classes": [{"cls_lc": [[69, 0], [308, 52]], "cls_var_ln": {"BATCH_PREDICTION_DEFAULT_ARGS": [[87, 4], [87, 33]], "INPUT_MISSING_ORIGIN": [[70, 4], [70, 24]], "SUCCESS_MESSAGE_MISSING_INPUT": [[76, 4], [76, 33]]}, "cls_var_occur": {"BATCH_PREDICTION_DEFAULT_ARGS": [], "INPUT_MISSING_ORIGIN": [], "SUCCESS_MESSAGE_MISSING_INPUT": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [107, 9]], "fn_var_ln": {"dag": [[99, 8], [99, 16]]}, "fn_var_occur": {"dag": [["self", "dag", "DAG", "default_args", "DEFAULT_DATE", "DEFAULT_DATE", "schedule"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "DAG", "default_args", "DEFAULT_DATE", "DEFAULT_DATE", "schedule"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineBatchPredictionOperator.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dag": ""}, "variables_p": {"dag": [["datetime.datetime", 0.4062140065825682], ["Union[None, datetime.date, datetime.datetime, str]", 0.2913036397535546], ["datetime.timedelta", 0.09413034990021556]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [149, 71]], "fn_var_ln": {"hook_instance": [[116, 8], [116, 21]], "input_with_model": [[111, 8], [111, 24]], "prediction_output": [[134, 8], [134, 25]], "prediction_task": [[122, 8], [122, 23]], "success_message": [[113, 8], [113, 23]]}, "fn_var_occur": {"hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "get_job", "side_effect", "HttpError", "resp", "httplib2", "Response", "content"], ["hook_instance", "create_job", "return_value", "success_message"], ["hook_instance", "create_job", "assert_called_once_with", "project_id", "job", "input_with_model", "use_existing_job_fn", "ANY"]], "input_with_model": [["input_with_model", "self", "INPUT_MISSING_ORIGIN", "copy"], ["success_message", "input_with_model"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_model", "data_format", "input_with_model", "input_paths", "input_with_model", "output_path", "input_with_model", "model_name", "input_with_model", "split", "labels", "dag", "self", "dag", "task_id"], ["hook_instance", "create_job", "assert_called_once_with", "project_id", "job", "input_with_model", "use_existing_job_fn", "ANY"]], "prediction_output": [["prediction_output", "prediction_task", "execute", "None"], ["success_message", "prediction_output"]], "prediction_task": [["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_model", "data_format", "input_with_model", "input_paths", "input_with_model", "output_path", "input_with_model", "model_name", "input_with_model", "split", "labels", "dag", "self", "dag", "task_id"], ["prediction_output", "prediction_task", "execute", "None"]], "success_message": [["success_message", "self", "SUCCESS_MESSAGE_MISSING_INPUT", "copy"], ["success_message", "input_with_model"], ["hook_instance", "create_job", "return_value", "success_message"], ["success_message", "prediction_output"]]}, "name": "test_success_with_model", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["input_with_model", "self", "INPUT_MISSING_ORIGIN", "copy"], ["success_message", "self", "SUCCESS_MESSAGE_MISSING_INPUT", "copy"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_model", "data_format", "input_with_model", "input_paths", "input_with_model", "output_path", "input_with_model", "model_name", "input_with_model", "split", "labels", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.801301888845765]], "self": []}, "q_name": "TestMLEngineBatchPredictionOperator.test_success_with_model", "ret_exprs": [], "ret_type": "", "variables": {"hook_instance": "", "input_with_model": "", "prediction_output": "", "prediction_task": "", "success_message": ""}, "variables_p": {"hook_instance": [["str", 0.551745179369871], ["Union[Literal, str]", 0.15008567743955484], ["Dict[str, Union[Any, Any]]", 0.1333229384641314], ["Dict[str, Dict[str, Any]]", 0.08727608810009031], ["List[Dict[str, str]]", 0.07757011662635253]], "input_with_model": [["allennlp.models.model.Model", 0.15761574681261215], ["bool", 0.09859078412930031], ["str", 0.09597651218994803]], "prediction_output": [["list", 0.20356326680999734], ["str", 0.1952567342900008], ["Dict[Any, Dict[Any, str]]", 0.10312803606068706], ["int", 0.09757713247145756]], "prediction_task": [["int", 0.20574833589186492], ["Dict[str, str]", 0.12128874959086586], ["List[str]", 0.11857141933038742], ["legistar.models.MatterStatus", 0.09182319832047299], ["str", 0.08815352487259472], ["raiden.utils.PaymentAmount", 0.08643289761639511]], "success_message": [["list", 0.1849309905367813], ["int", 0.10651089043107664], ["str", 0.08935354487671938]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[152, 4], [187, 71]], "fn_var_ln": {"hook_instance": [[158, 8], [158, 21]], "input_with_version": [[153, 8], [153, 26]], "prediction_output": [[176, 8], [176, 25]], "prediction_task": [[164, 8], [164, 23]], "success_message": [[155, 8], [155, 23]]}, "fn_var_occur": {"hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "get_job", "side_effect", "HttpError", "resp", "httplib2", "Response", "content"], ["hook_instance", "create_job", "return_value", "success_message"], ["hook_instance", "create_job", "assert_called_once_with", "project_id", "job", "input_with_version", "use_existing_job_fn", "ANY"]], "input_with_version": [["input_with_version", "self", "INPUT_MISSING_ORIGIN", "copy"], ["success_message", "input_with_version"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_version", "data_format", "input_with_version", "input_paths", "input_with_version", "output_path", "input_with_version", "model_name", "input_with_version", "split", "version_name", "input_with_version", "split", "dag", "self", "dag", "task_id"], ["hook_instance", "create_job", "assert_called_once_with", "project_id", "job", "input_with_version", "use_existing_job_fn", "ANY"]], "prediction_output": [["prediction_output", "prediction_task", "execute", "None"], ["success_message", "prediction_output"]], "prediction_task": [["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_version", "data_format", "input_with_version", "input_paths", "input_with_version", "output_path", "input_with_version", "model_name", "input_with_version", "split", "version_name", "input_with_version", "split", "dag", "self", "dag", "task_id"], ["prediction_output", "prediction_task", "execute", "None"]], "success_message": [["success_message", "self", "SUCCESS_MESSAGE_MISSING_INPUT", "copy"], ["success_message", "input_with_version"], ["hook_instance", "create_job", "return_value", "success_message"], ["success_message", "prediction_output"]]}, "name": "test_success_with_version", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["input_with_version", "self", "INPUT_MISSING_ORIGIN", "copy"], ["success_message", "self", "SUCCESS_MESSAGE_MISSING_INPUT", "copy"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_version", "data_format", "input_with_version", "input_paths", "input_with_version", "output_path", "input_with_version", "model_name", "input_with_version", "split", "version_name", "input_with_version", "split", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8098309959835811]], "self": []}, "q_name": "TestMLEngineBatchPredictionOperator.test_success_with_version", "ret_exprs": [], "ret_type": "", "variables": {"hook_instance": "", "input_with_version": "", "prediction_output": "", "prediction_task": "", "success_message": ""}, "variables_p": {"hook_instance": [["str", 0.551745179369871], ["Union[Literal, str]", 0.15008567743955484], ["Dict[str, Union[Any, Any]]", 0.1333229384641314], ["Dict[str, Dict[str, Any]]", 0.08727608810009031], ["List[Dict[str, str]]", 0.07757011662635253]], "input_with_version": [["int", 0.4898118168914732], ["float", 0.10270944720792402], ["str", 0.08803625029175373]], "prediction_output": [["list", 0.20356326680999734], ["str", 0.1952567342900008], ["Dict[Any, Dict[Any, str]]", 0.10312803606068706], ["int", 0.09757713247145756]], "prediction_task": [["int", 0.20574833589186492], ["Dict[str, str]", 0.12128874959086586], ["List[str]", 0.11857141933038742], ["legistar.models.MatterStatus", 0.09182319832047299], ["str", 0.08815352487259472], ["raiden.utils.PaymentAmount", 0.08643289761639511]], "success_message": [["list", 0.1849309905367813], ["int", 0.10651089043107664], ["str", 0.08935354487671938]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [224, 71]], "fn_var_ln": {"hook_instance": [[196, 8], [196, 21]], "input_with_uri": [[191, 8], [191, 22]], "prediction_output": [[213, 8], [213, 25]], "prediction_task": [[202, 8], [202, 23]], "success_message": [[193, 8], [193, 23]]}, "fn_var_occur": {"hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "get_job", "side_effect", "HttpError", "resp", "httplib2", "Response", "content"], ["hook_instance", "create_job", "return_value", "success_message"], ["hook_instance", "create_job", "assert_called_once_with", "project_id", "job", "input_with_uri", "use_existing_job_fn", "ANY"]], "input_with_uri": [["input_with_uri", "self", "INPUT_MISSING_ORIGIN", "copy"], ["success_message", "input_with_uri"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_uri", "data_format", "input_with_uri", "input_paths", "input_with_uri", "output_path", "input_with_uri", "uri", "input_with_uri", "dag", "self", "dag", "task_id"], ["hook_instance", "create_job", "assert_called_once_with", "project_id", "job", "input_with_uri", "use_existing_job_fn", "ANY"]], "prediction_output": [["prediction_output", "prediction_task", "execute", "None"], ["success_message", "prediction_output"]], "prediction_task": [["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_uri", "data_format", "input_with_uri", "input_paths", "input_with_uri", "output_path", "input_with_uri", "uri", "input_with_uri", "dag", "self", "dag", "task_id"], ["prediction_output", "prediction_task", "execute", "None"]], "success_message": [["success_message", "self", "SUCCESS_MESSAGE_MISSING_INPUT", "copy"], ["success_message", "input_with_uri"], ["hook_instance", "create_job", "return_value", "success_message"], ["success_message", "prediction_output"]]}, "name": "test_success_with_uri", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["input_with_uri", "self", "INPUT_MISSING_ORIGIN", "copy"], ["success_message", "self", "SUCCESS_MESSAGE_MISSING_INPUT", "copy"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_uri", "data_format", "input_with_uri", "input_paths", "input_with_uri", "output_path", "input_with_uri", "uri", "input_with_uri", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8001951371331634]], "self": []}, "q_name": "TestMLEngineBatchPredictionOperator.test_success_with_uri", "ret_exprs": [], "ret_type": "", "variables": {"hook_instance": "", "input_with_uri": "", "prediction_output": "", "prediction_task": "", "success_message": ""}, "variables_p": {"hook_instance": [["str", 0.551745179369871], ["Union[Literal, str]", 0.15008567743955484], ["Dict[str, Union[Any, Any]]", 0.1333229384641314], ["Dict[str, Dict[str, Any]]", 0.08727608810009031], ["List[Dict[str, str]]", 0.07757011662635253]], "input_with_uri": [["int", 0.11385435204861785], ["str", 0.10247831042105116], ["Type[Dict[str, Any]]", 0.0882393018076146], ["Tuple[str, str, str, str]", 0.08122957896659257], ["List[int]", 0.08098482909281764]], "prediction_output": [["list", 0.20356326680999734], ["str", 0.1952567342900008], ["Dict[Any, Dict[Any, str]]", 0.10312803606068706], ["int", 0.09757713247145756]], "prediction_task": [["int", 0.20574833589186492], ["Dict[str, str]", 0.12128874959086586], ["List[str]", 0.11857141933038742], ["legistar.models.MatterStatus", 0.09182319832047299], ["str", 0.08815352487259472], ["raiden.utils.PaymentAmount", 0.08643289761639511]], "success_message": [["list", 0.1849309905367813], ["int", 0.10651089043107664], ["str", 0.08935354487671938]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[226, 4], [261, 9]], "fn_var_ln": {"task_args": [[255, 8], [255, 17]]}, "fn_var_occur": {"task_args": [["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["MLEngineStartBatchPredictionJobOperator", "task_args", "execute", "None"], ["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["MLEngineStartBatchPredictionJobOperator", "task_args", "execute", "None"], ["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["MLEngineStartBatchPredictionJobOperator", "task_args", "execute", "None"], ["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["MLEngineStartBatchPredictionJobOperator", "task_args", "execute", "None"]]}, "name": "test_invalid_model_origin", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineBatchPredictionOperator.test_invalid_model_origin", "ret_exprs": [], "ret_type": "", "variables": {"task_args": ""}, "variables_p": {"task_args": [["str", 0.4133497860164295], ["int", 0.20554505356410738], ["Dict[str, List[str]]", 0.10070356191907051], ["Dict[str, List[float]]", 0.09014133509705533]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[264, 4], [296, 55]], "fn_var_ln": {"hook_instance": [[269, 8], [269, 21]], "http_error_code": [[265, 8], [265, 23]], "input_with_model": [[266, 8], [266, 24]], "prediction_task": [[275, 12], [275, 27]]}, "fn_var_occur": {"hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "create_job", "side_effect", "HttpError", "resp", "httplib2", "Response", "http_error_code", "content"], ["hook_instance", "create_job", "assert_called_once_with", "input_with_model", "ANY"]], "http_error_code": [["hook_instance", "create_job", "side_effect", "HttpError", "resp", "httplib2", "Response", "http_error_code", "content"], ["http_error_code", "ctx", "value", "resp", "status"]], "input_with_model": [["input_with_model", "self", "INPUT_MISSING_ORIGIN", "copy"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_model", "data_format", "input_with_model", "input_paths", "input_with_model", "output_path", "input_with_model", "model_name", "input_with_model", "split", "dag", "self", "dag", "task_id"], ["hook_instance", "create_job", "assert_called_once_with", "input_with_model", "ANY"]], "prediction_task": [["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_model", "data_format", "input_with_model", "input_paths", "input_with_model", "output_path", "input_with_model", "model_name", "input_with_model", "split", "dag", "self", "dag", "task_id"], ["prediction_task", "execute", "None"]]}, "name": "test_http_error", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["input_with_model", "self", "INPUT_MISSING_ORIGIN", "copy"], ["prediction_task", "MLEngineStartBatchPredictionJobOperator", "job_id", "project_id", "region", "input_with_model", "data_format", "input_with_model", "input_paths", "input_with_model", "output_path", "input_with_model", "model_name", "input_with_model", "split", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7628864101439735]], "self": []}, "q_name": "TestMLEngineBatchPredictionOperator.test_http_error", "ret_exprs": [], "ret_type": "", "variables": {"hook_instance": "", "http_error_code": "", "input_with_model": "", "prediction_task": ""}, "variables_p": {"hook_instance": [["str", 0.5631080647327499], ["Dict[str, Union[Any, Any, Any]]", 0.11767461709204935], ["List[Dict[str, str]]", 0.0923941712643371], ["Dict[str, Union[Any, Any]]", 0.08030408726485887], ["property", 0.06676588089280559]], "http_error_code": [["Dict[str, str]", 0.503126882516916], ["Dict[Any, str]", 0.10799807772273197], ["Dict[str, Union[Any, Any]]", 0.10549202837725309], ["Dict[str, int]", 0.10297968598353618], ["OrderedDict[str, str]", 0.09153260884311933], ["Dict[str, Any]", 0.08887071655644355]], "input_with_model": [["str", 0.33609806893052036], ["bench.models.Onlogn", 0.18735190939332072], ["deeplearning.ml4pl.models.lstm.node_lstm.NodeLstm", 0.08923097351573378]], "prediction_task": [["int", 0.20574833589186492], ["Dict[str, str]", 0.12128874959086586], ["List[str]", 0.11857141933038742], ["legistar.models.MatterStatus", 0.09182319832047299], ["str", 0.08815352487259472], ["raiden.utils.PaymentAmount", 0.08643289761639511]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [308, 52]], "fn_var_ln": {"hook_instance": [[300, 8], [300, 21]], "task_args": [[302, 8], [302, 17]]}, "fn_var_occur": {"hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "create_job", "return_value"]], "task_args": [["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"], ["MLEngineStartBatchPredictionJobOperator", "task_args", "execute", "None"]]}, "name": "test_failed_job_error", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"]], "self": [["task_args", "self", "BATCH_PREDICTION_DEFAULT_ARGS", "copy"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.31453195144371965], ["mock.MagicMock", 0.11334818872664475]], "self": []}, "q_name": "TestMLEngineBatchPredictionOperator.test_failed_job_error", "ret_exprs": [], "ret_type": "", "variables": {"hook_instance": "", "task_args": ""}, "variables_p": {"hook_instance": [["str", 0.667652346385542], ["Dict[str, Union[Any, Any, Any]]", 0.12185471091002664], ["Dict[str, Union[Any, Any]]", 0.07417242465477868], ["List[Dict[str, str]]", 0.07037465396889361], ["Union[Literal, str]", 0.06594586408075903]], "task_args": [["str", 0.3778678100565639], ["datetime.datetime", 0.12286073764208194], ["Dict[str, List[float]]", 0.10688711055724832], ["Dict[str, str]", 0.09239800588493602], ["Dict[str, Union[int, str]]", 0.09225017760480377], ["Dict[str, List[str]]", 0.09108857974286622]]}}], "name": "TestMLEngineBatchPredictionOperator", "q_name": "TestMLEngineBatchPredictionOperator", "variables": {"BATCH_PREDICTION_DEFAULT_ARGS": "", "INPUT_MISSING_ORIGIN": "", "SUCCESS_MESSAGE_MISSING_INPUT": ""}, "variables_p": {"BATCH_PREDICTION_DEFAULT_ARGS": [["list", 0.30000000000000004], ["int", 0.30000000000000004], ["List[List[int]]", 0.1], ["property", 0.1], ["dict", 0.1], ["List[Dict[str, Any]]", 0.1]], "INPUT_MISSING_ORIGIN": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "SUCCESS_MESSAGE_MISSING_INPUT": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[311, 0], [359, 55]], "cls_var_ln": {"TRAINING_DEFAULT_ARGS": [[313, 4], [313, 25]]}, "cls_var_occur": {"TRAINING_DEFAULT_ARGS": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[320, 4], [336, 9]], "fn_var_ln": {"cancel_training_op": [[325, 8], [325, 26]], "hook_instance": [[322, 8], [322, 21]], "success_response": [[321, 8], [321, 24]]}, "fn_var_occur": {"cancel_training_op": [["cancel_training_op", "MLEngineTrainingCancelJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["cancel_training_op", "execute", "context", "MagicMock"]], "hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "cancel_job", "return_value", "success_response"], ["len", "hook_instance", "mock_calls"], ["hook_instance", "cancel_job", "assert_called_once_with", "project_id", "self", "TRAINING_DEFAULT_ARGS", "job_id", "self", "TRAINING_DEFAULT_ARGS"]], "success_response": [["hook_instance", "cancel_job", "return_value", "success_response"]]}, "name": "test_success_cancel_training_job", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["cancel_training_op", "MLEngineTrainingCancelJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["hook_instance", "cancel_job", "assert_called_once_with", "project_id", "self", "TRAINING_DEFAULT_ARGS", "job_id", "self", "TRAINING_DEFAULT_ARGS"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8001951371331634]], "self": []}, "q_name": "TestMLEngineTrainingCancelJobOperator.test_success_cancel_training_job", "ret_exprs": [], "ret_type": "", "variables": {"cancel_training_op": "", "hook_instance": "", "success_response": ""}, "variables_p": {"cancel_training_op": [["int", 0.3607858053068837], ["str", 0.22902361513959885], ["List[None]", 0.08686837926190526]], "hook_instance": [["str", 0.6073094965596613], ["Dict[str, Union[Any, Any]]", 0.08301190868977684], ["List[Dict[str, str]]", 0.08286281895891084], ["Dict[str, Dict[str, Any]]", 0.06975893229649312]], "success_response": [["str", 0.316363606100436], ["datetime.datetime", 0.17472002499322076], ["list", 0.1534647513219014], ["Optional[bytes]", 0.10170169064801379], ["Dict[str, Union[Any, Any, Any]]", 0.09373455028798608], ["int", 0.07553502999413583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[339, 4], [359, 55]], "fn_var_ln": {"cancel_training_op": [[347, 12], [347, 30]], "hook_instance": [[341, 8], [341, 21]], "http_error_code": [[340, 8], [340, 23]]}, "fn_var_occur": {"cancel_training_op": [["cancel_training_op", "MLEngineTrainingCancelJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["cancel_training_op", "execute", "context", "MagicMock"]], "hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "cancel_job", "side_effect", "HttpError", "resp", "httplib2", "Response", "http_error_code", "content"], ["len", "hook_instance", "mock_calls"], ["hook_instance", "cancel_job", "assert_called_once_with", "project_id", "self", "TRAINING_DEFAULT_ARGS", "job_id", "self", "TRAINING_DEFAULT_ARGS"]], "http_error_code": [["hook_instance", "cancel_job", "side_effect", "HttpError", "resp", "httplib2", "Response", "http_error_code", "content"], ["http_error_code", "ctx", "value", "resp", "status"]]}, "name": "test_http_error", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["cancel_training_op", "MLEngineTrainingCancelJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["hook_instance", "cancel_job", "assert_called_once_with", "project_id", "self", "TRAINING_DEFAULT_ARGS", "job_id", "self", "TRAINING_DEFAULT_ARGS"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7628864101439735]], "self": []}, "q_name": "TestMLEngineTrainingCancelJobOperator.test_http_error", "ret_exprs": [], "ret_type": "", "variables": {"cancel_training_op": "", "hook_instance": "", "http_error_code": ""}, "variables_p": {"cancel_training_op": [["int", 0.3607858053068837], ["str", 0.22902361513959885], ["List[None]", 0.08686837926190526]], "hook_instance": [["List[Dict[str, str]]", 0.19119595570157238], ["str", 0.17721261067222505], ["list", 0.15150563225079086], ["Dict[str, Union[Any, Any, Any, Any]]", 0.06745281830896381], ["List[Union[Any, Any, Any]]", 0.06745281830896381], ["tests.utils.MockCoroutine", 0.058780025881771426], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.05860240360397341]], "http_error_code": [["Dict[str, str]", 0.5017185691882806], ["dict", 0.21123094391296357], ["List[str]", 0.10022684508499445], ["Dict[str, Any]", 0.09442052358268627], ["Dict[str, List[str]]", 0.09240311823107504]]}}], "name": "TestMLEngineTrainingCancelJobOperator", "q_name": "TestMLEngineTrainingCancelJobOperator", "variables": {"TRAINING_DEFAULT_ARGS": ""}, "variables_p": {"TRAINING_DEFAULT_ARGS": [["Dict[str, Any]", 0.9999999996623427], ["str", 1.7102909010328152e-10], ["int", 8.331405948238127e-11]]}}, {"cls_lc": [[362, 0], [416, 30]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[364, 4], [382, 9]], "fn_var_ln": {"task": [[365, 8], [365, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "execute", "context", "MagicMock"]]}, "name": "test_success_create_model", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.5188427826445626], ["str", 0.3875215648298221]], "self": []}, "q_name": "TestMLEngineModelOperator.test_success_create_model", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["RuntimeError", 0.14457004374711252], ["List[str]", 0.11662722622787633], ["bytes", 0.10735589559625933], ["Tuple[int]", 0.0852717062739739]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[385, 4], [404, 70]], "fn_var_ln": {"result": [[395, 8], [395, 14]], "task": [[386, 8], [386, 12]]}, "fn_var_occur": {"result": [["result", "task", "execute", "context", "MagicMock"], ["mock_hook", "return_value", "get_model", "return_value", "result"]], "task": [["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["result", "task", "execute", "context", "MagicMock"]]}, "name": "test_success_get_model", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["mock_hook", "return_value", "get_model", "return_value", "result"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.1018547269680881]], "self": []}, "q_name": "TestMLEngineModelOperator.test_success_get_model", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "task": ""}, "variables_p": {"result": [["unittesmock.MagicMock", 0.10049327317313354]], "task": [["RuntimeError", 0.14457004374711252], ["List[str]", 0.11662722622787633], ["bytes", 0.10735589559625933], ["Tuple[int]", 0.0852717062739739]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[407, 4], [416, 30]], "fn_var_ln": {"task": [[408, 8], [408, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "execute", "None"]]}, "name": "test_fail", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.Mock", 0.7777777782457801]], "self": []}, "q_name": "TestMLEngineModelOperator.test_fail", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["RuntimeError", 0.14457004374711252], ["List[str]", 0.11662722622787633], ["bytes", 0.10735589559625933], ["Tuple[int]", 0.0852717062739739]]}}], "name": "TestMLEngineModelOperator", "q_name": "TestMLEngineModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[419, 0], [438, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[421, 4], [438, 9]], "fn_var_ln": {"task": [[422, 8], [422, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineCreateModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "execute", "context", "MagicMock"]]}, "name": "test_success_create_model", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.5188427826445626], ["str", 0.3875215648298221]], "self": []}, "q_name": "TestMLEngineCreateModelOperator.test_success_create_model", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["str", 0.13411089525296033], ["RuntimeError", 0.10825782291093033], ["Tuple[int]", 0.10424658245526443], ["kitovu.utils.JsonType", 0.09572602393114416], ["Dict[str, Any]", 0.09297306978553067], ["Dict[str, Union[int, str]]", 0.0874619733803455]]}}], "name": "TestMLEngineCreateModelOperator", "q_name": "TestMLEngineCreateModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[441, 0], [461, 70]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[443, 4], [461, 70]], "fn_var_ln": {"result": [[452, 8], [452, 14]], "task": [[444, 8], [444, 12]]}, "fn_var_occur": {"result": [["result", "task", "execute", "context", "MagicMock"], ["mock_hook", "return_value", "get_model", "return_value", "result"]], "task": [["task", "MLEngineGetModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["result", "task", "execute", "context", "MagicMock"]]}, "name": "test_success_get_model", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["mock_hook", "return_value", "get_model", "return_value", "result"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.1018547269680881]], "self": []}, "q_name": "TestMLEngineGetModelOperator.test_success_get_model", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "task": ""}, "variables_p": {"result": [["unittesmock.MagicMock", 0.10049327317313354]], "task": [["str", 0.307329217078424], ["List[str]", 0.12616310880494946], ["Optional[int]", 0.10053975634611118], ["bool", 0.09048471882769461]]}}], "name": "TestMLEngineGetModelOperator", "q_name": "TestMLEngineGetModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[464, 0], [484, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[466, 4], [484, 9]], "fn_var_ln": {"task": [[467, 8], [467, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineDeleteModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN", "delete_contents", "True"], ["task", "execute", "context", "MagicMock"]]}, "name": "test_success_delete_model", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "delete_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "delete_contents", "True"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.5128659760024192], ["str", 0.28919461403636376]], "self": []}, "q_name": "TestMLEngineDeleteModelOperator.test_success_delete_model", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["str", 0.38395783970343816], ["Dict[str, Any]", 0.1117263032035713], ["Optional[str]", 0.10647201942464272], ["Tuple[int]", 0.10578510457709289], ["ajapaik.ajapaik.models.Photo", 0.09503035995270398]]}}], "name": "TestMLEngineDeleteModelOperator", "q_name": "TestMLEngineDeleteModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[487, 0], [511, 9]], "cls_var_ln": {"VERSION_DEFAULT_ARGS": [[488, 4], [488, 24]]}, "cls_var_occur": {"VERSION_DEFAULT_ARGS": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[495, 4], [511, 9]], "fn_var_ln": {"hook_instance": [[497, 8], [497, 21]], "success_response": [[496, 8], [496, 24]], "training_op": [[500, 8], [500, 19]]}, "fn_var_occur": {"hook_instance": [["hook_instance", "mock_hook", "return_value"], ["hook_instance", "create_version", "return_value", "success_response"], ["len", "hook_instance", "mock_calls"], ["hook_instance", "create_version", "assert_called_once_with", "project_id", "model_name", "version_spec", "TEST_VERSION"]], "success_response": [["success_response", "True"], ["hook_instance", "create_version", "return_value", "success_response"]], "training_op": [["training_op", "MLEngineManageVersionOperator", "version", "TEST_VERSION", "self", "VERSION_DEFAULT_ARGS"], ["training_op", "execute", "None"]]}, "name": "test_success_create_version", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_instance", "mock_hook", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["training_op", "MLEngineManageVersionOperator", "version", "TEST_VERSION", "self", "VERSION_DEFAULT_ARGS"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.6920839257586486]], "self": []}, "q_name": "TestMLEngineVersionOperator.test_success_create_version", "ret_exprs": [], "ret_type": "", "variables": {"hook_instance": "", "success_response": "", "training_op": ""}, "variables_p": {"hook_instance": [["str", 0.5819128297565972], ["Dict[str, Union[Any, Any]]", 0.08986172593185615], ["Dict[str, Union[Any, Any, Any]]", 0.08926618811454336], ["int", 0.08477191501040163], ["mock.Mock", 0.07689164241406077]], "success_response": [["List[Tuple[str, Any]]", 0.297252989100812], ["Dict[str, str]", 0.20427037446276625], ["Set[int]", 0.11713805813771846], ["int", 0.09912668152365965], ["str", 0.09734867164589753], ["Tuple[Tuple[Literal, Literal, Literal]]", 0.09273167030197192], ["Tuple[Literal, Literal]", 0.09213155482717408]], "training_op": []}}], "name": "TestMLEngineVersionOperator", "q_name": "TestMLEngineVersionOperator", "variables": {"VERSION_DEFAULT_ARGS": ""}, "variables_p": {"VERSION_DEFAULT_ARGS": [["List[str]", 0.38175163489528835], ["List[Tuple[Any, int]]", 0.20799303960093288], ["Tuple[str, str, str, str, str]", 0.19087581744764417], ["int", 0.12394159933231265], ["Tuple[str, str, str, str]", 0.09543790872382209]]}}, {"cls_lc": [[514, 0], [554, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[516, 4], [534, 9]], "fn_var_ln": {"task": [[517, 8], [517, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "execute", "context", "MagicMock"]]}, "name": "test_success", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_spec", "TEST_VERSION"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.3932286469042774]], "self": []}, "q_name": "TestMLEngineCreateVersion.test_success", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["Dict[str, str]", 0.15823654510739213], ["str", 0.1164409754872178], ["kitovu.utils.JsonType", 0.0885198408651076], ["Dict[str, Union[Any, Any]]", 0.0875361239171219], ["Tuple[int]", 0.08582810351011223], ["Dict[str, Any]", 0.08177172087588504]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[536, 4], [544, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_model_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineCreateVersion.test_missing_model_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[546, 4], [554, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_version", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineCreateVersion.test_missing_version", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMLEngineCreateVersion", "q_name": "TestMLEngineCreateVersion", "variables": {}, "variables_p": {}}, {"cls_lc": [[557, 0], [597, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[559, 4], [577, 9]], "fn_var_ln": {"task": [[560, 8], [560, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "execute", "context", "MagicMock"]]}, "name": "test_success", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "set_default_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.511325332470196]], "self": []}, "q_name": "TestMLEngineSetDefaultVersion.test_success", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["str", 0.4201859646677278], ["Dict[str, str]", 0.1950233511197604], ["Dict[str, Any]", 0.18596162144213757], ["Dict[str, Union[Any, Any]]", 0.10070233177625734]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[579, 4], [587, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_model_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineSetDefaultVersion.test_missing_model_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[589, 4], [597, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_version_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineSetDefaultVersion.test_missing_version_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMLEngineSetDefaultVersion", "q_name": "TestMLEngineSetDefaultVersion", "variables": {}, "variables_p": {}}, {"cls_lc": [[600, 0], [629, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[602, 4], [620, 9]], "fn_var_ln": {"task": [[603, 8], [603, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineListVersionsOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "execute", "context", "MagicMock"]]}, "name": "test_success", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "list_versions", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.4971723445382414]], "self": []}, "q_name": "TestMLEngineListVersions.test_success", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["str", 0.4024878276084319], ["Dict[str, Any]", 0.20973426506190684], ["Dict[str, str]", 0.11022689526565056], ["Optional[str]", 0.09142246229154616]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[622, 4], [629, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_model_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineListVersions.test_missing_model_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMLEngineListVersions", "q_name": "TestMLEngineListVersions", "variables": {}, "variables_p": {}}, {"cls_lc": [[632, 0], [672, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[634, 4], [652, 9]], "fn_var_ln": {"task": [[635, 8], [635, 12]]}, "fn_var_occur": {"task": [["task", "MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "execute", "context", "MagicMock"]]}, "name": "test_success", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "delete_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.4971723445382414]], "self": []}, "q_name": "TestMLEngineDeleteVersion.test_success", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["Dict[str, Any]", 0.18768347556101783], ["str", 0.14127520427402396], ["Dict[str, str]", 0.12099059309104537], ["kitovu.utils.JsonType", 0.09757055726810966], ["Dict[str, Union[Any, Any]]", 0.08645255768130224], ["Tuple[int]", 0.084765722886872]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[654, 4], [662, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_version_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineDeleteVersion.test_missing_version_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[664, 4], [672, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_model_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMLEngineDeleteVersion.test_missing_model_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMLEngineDeleteVersion", "q_name": "TestMLEngineDeleteVersion", "variables": {}, "variables_p": {}}, {"cls_lc": [[675, 0], [931, 52]], "cls_var_ln": {"TRAINING_DEFAULT_ARGS": [[676, 4], [676, 25]], "TRAINING_INPUT": [[687, 4], [687, 18]]}, "cls_var_occur": {"TRAINING_DEFAULT_ARGS": [], "TRAINING_INPUT": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[701, 4], [714, 9]], "fn_var_ln": {"return_value": [[703, 8], [703, 38]], "training_op": [[705, 8], [705, 19]]}, "fn_var_occur": {"return_value": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value"], ["mock_wait_for_job", "return_value"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "self", "TRAINING_INPUT"]], "training_op": [["training_op", "MLEngineStartTrainingJobOperator", "deferrable", "False", "self", "TRAINING_DEFAULT_ARGS"], ["training_op", "execute", "MagicMock"]]}, "name": "test_create_training_job_should_execute_successfully", "params": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_descr": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "self", "TRAINING_INPUT"]], "mock_wait_for_job": [["mock_wait_for_job", "return_value"]], "self": [["training_op", "MLEngineStartTrainingJobOperator", "deferrable", "False", "self", "TRAINING_DEFAULT_ARGS"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "self", "TRAINING_INPUT"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7067435385967087]], "mock_wait_for_job": [["mock.Mock", 0.21738969195064056], ["unittesmock.MagicMock", 0.08895090417459217]], "self": []}, "q_name": "TestMLEngineStartTrainingJobOperator.test_create_training_job_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"return_value": "", "training_op": ""}, "variables_p": {"return_value": [["str", 0.731299832465494], ["int", 0.12144032178105277], ["unittesmock.MagicMock", 0.0764325973818443], ["Dict[str, str]", 0.07082724837160889]], "training_op": [["int", 0.210190825655187], ["oanda.models.Price", 0.10662170612717789], ["str", 0.09782071061283552]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[718, 4], [757, 9]], "fn_var_ln": {"custom_training_default_args": [[721, 8], [721, 36]], "return_value": [[735, 8], [735, 38]], "success_response": [[734, 8], [734, 24]], "training_input": [[724, 8], [724, 22]], "training_op": [[738, 8], [738, 19]]}, "fn_var_occur": {"custom_training_default_args": [["custom_training_default_args", "builtins", "dict", "copy", "deepcopy", "self", "TRAINING_DEFAULT_ARGS"], ["training_op", "MLEngineStartTrainingJobOperator", "runtime_version", "python_version", "job_dir", "master_type", "master_config", "deferrable", "False", "custom_training_default_args"]], "return_value": [["mock_wait_for_job", "return_value"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "success_response"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "training_input"]], "success_response": [["success_response", "training_input", "copy"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "success_response"]], "training_input": [["training_input", "copy", "deepcopy", "self", "TRAINING_INPUT"], ["success_response", "training_input", "copy"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "training_input"]], "training_op": [["training_op", "MLEngineStartTrainingJobOperator", "runtime_version", "python_version", "job_dir", "master_type", "master_config", "deferrable", "False", "custom_training_default_args"], ["training_op", "execute", "MagicMock"]]}, "name": "test_create_training_job_with_master_config_should_execute_successfully", "params": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_descr": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "success_response"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "training_input"]], "mock_wait_for_job": [["mock_wait_for_job", "return_value"]], "self": [["custom_training_default_args", "builtins", "dict", "copy", "deepcopy", "self", "TRAINING_DEFAULT_ARGS"], ["training_input", "copy", "deepcopy", "self", "TRAINING_INPUT"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7962167586446696]], "mock_wait_for_job": [["mock.Mock", 0.2773099663569999], ["unittesmock.MagicMock", 0.2539733817758124]], "self": []}, "q_name": "TestMLEngineStartTrainingJobOperator.test_create_training_job_with_master_config_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"custom_training_default_args": "builtins.dict", "return_value": "", "success_response": "", "training_input": "", "training_op": ""}, "variables_p": {"custom_training_default_args": [["dict", 1.0]], "return_value": [["str", 0.260547354123706], ["List[Dict[str, str]]", 0.17936482902391657], ["Optional[bytes]", 0.15038644208565163], ["List[str]", 0.13475562532579025], ["datetime.datetime", 0.09526033235885588], ["Dict[str, Union[Any, Any, Any]]", 0.08803716718016245]], "success_response": [["Dict[str, str]", 0.2991032765558416], ["str", 0.19825216629312037], ["Dict[str, Union[None, Any, int]]", 0.09442016727285933], ["Dict[str, Union[Any, Any, Any]]", 0.09252838641571898], ["Dict[str, List[str]]", 0.09132093915438703]], "training_input": [["Dict[str, List[int]]", 0.20061415447529357], ["cmk.gui.plugins.views.utils.PainterOptions", 0.18508937265495223], ["Dict[str, List[Any]]", 0.10012295854562225]], "training_op": [["int", 0.38134574155512047], ["str", 0.11600229037160256], ["Tuple[str, str]", 0.1101754096139679], ["raiden.utils.Any", 0.10371544649197341], ["datetime.date", 0.09981272349552689]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[761, 4], [803, 9]], "fn_var_ln": {"arguments": [[764, 8], [764, 17]], "request": [[777, 8], [777, 15]], "response": [[789, 8], [789, 16]], "return_value": [[790, 8], [790, 38]], "training_op": [[793, 8], [793, 19]]}, "fn_var_occur": {"arguments": [["arguments", "DEFAULT_DATE", "False"], ["training_op", "MLEngineStartTrainingJobOperator", "arguments"]], "request": [["response", "request", "copy"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "request"]], "response": [["response", "request", "copy"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "response"]], "return_value": [["mock_wait_for_job", "return_value"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "response"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "request"]], "training_op": [["training_op", "MLEngineStartTrainingJobOperator", "arguments"], ["training_op", "execute", "MagicMock"]]}, "name": "test_create_training_job_with_master_image_should_execute_successfully", "params": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_descr": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "response"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "request"]], "mock_wait_for_job": [["mock_wait_for_job", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8145425472538538]], "mock_wait_for_job": [["mock.Mock", 0.22911822181273536], ["unittesmock.MagicMock", 0.09561520400695742]], "self": []}, "q_name": "TestMLEngineStartTrainingJobOperator.test_create_training_job_with_master_image_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"arguments": "", "request": "", "response": "", "return_value": "", "training_op": ""}, "variables_p": {"arguments": [["datetime.timedelta", 0.20168271875672875]], "request": [["jj.mock._remote_mock.RemoteMock", 0.09621772016569319], ["Dict[str, Dict[str, Any]]", 0.08108044403393647], ["str", 0.07862822887423485]], "response": [["Dict[str, str]", 0.16292408795123126], ["rotkehlchen.tests.utils.mock.MockResponse", 0.1109018937955338], ["jj.mock._remote_mock.RemoteMock", 0.101892848798353], ["str", 0.08429828587529913]], "return_value": [["str", 0.2931044216077712], ["Optional[bytes]", 0.1382692760953562], ["List[str]", 0.09727665680459172], ["Dict[str, List[Any]]", 0.09487954460628184], ["datetime.datetime", 0.09210225855456526], ["int", 0.08972567319761288]], "training_op": [["float", 0.20055018860913437]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[807, 4], [876, 9]], "fn_var_ln": {"hyperparams": [[816, 8], [816, 19]], "return_value": [[856, 8], [856, 38]], "success_response": [[855, 8], [855, 24]], "training_input": [[810, 8], [810, 22]], "training_op": [[859, 8], [859, 19]]}, "fn_var_occur": {"hyperparams": [["hyperparams", "True"], ["hyperparams", "append"], ["hyperparams", "append"], ["hyperparams", "append"], ["training_input", "hyperparams"], ["training_op", "MLEngineStartTrainingJobOperator", "runtime_version", "python_version", "job_dir", "service_account", "self", "TRAINING_DEFAULT_ARGS", "hyperparameters", "hyperparams", "deferrable", "False"]], "return_value": [["mock_wait_for_job", "return_value"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "success_response"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "training_input"]], "success_response": [["success_response", "self", "TRAINING_INPUT", "copy"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "success_response"]], "training_input": [["training_input", "copy", "deepcopy", "self", "TRAINING_INPUT"], ["training_input", "hyperparams"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "training_input"]], "training_op": [["training_op", "MLEngineStartTrainingJobOperator", "runtime_version", "python_version", "job_dir", "service_account", "self", "TRAINING_DEFAULT_ARGS", "hyperparameters", "hyperparams", "deferrable", "False"], ["training_op", "execute", "MagicMock"]]}, "name": "test_create_training_job_with_optional_args_should_execute_successfully", "params": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_descr": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "success_response"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "training_input"]], "mock_wait_for_job": [["mock_wait_for_job", "return_value"]], "self": [["training_input", "copy", "deepcopy", "self", "TRAINING_INPUT"], ["success_response", "self", "TRAINING_INPUT", "copy"], ["training_op", "MLEngineStartTrainingJobOperator", "runtime_version", "python_version", "job_dir", "service_account", "self", "TRAINING_DEFAULT_ARGS", "hyperparameters", "hyperparams", "deferrable", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7963931985811902], ["mock.Mock", 0.0998757814079147]], "mock_wait_for_job": [["mock.Mock", 0.2345044650414635], ["unittesmock.MagicMock", 0.09218013916333119]], "self": []}, "q_name": "TestMLEngineStartTrainingJobOperator.test_create_training_job_with_optional_args_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"hyperparams": "", "return_value": "", "success_response": "", "training_input": "", "training_op": ""}, "variables_p": {"hyperparams": [["List[Tuple[bytes, int]]", 0.16884306572605254], ["list", 0.10530211999001039], ["int", 0.08420656250646487]], "return_value": [["str", 0.260547354123706], ["List[Dict[str, str]]", 0.17936482902391657], ["Optional[bytes]", 0.15038644208565163], ["List[str]", 0.13475562532579025], ["datetime.datetime", 0.09526033235885588], ["Dict[str, Union[Any, Any, Any]]", 0.08803716718016245]], "success_response": [["str", 0.22030622494167362], ["Dict[str, List[Any]]", 0.1266434642006239], ["datetime.datetime", 0.10915921164577903], ["list", 0.09484611667455599], ["Optional[bytes]", 0.09213689575092383], ["List[Tuple[str, Any]]", 0.09149843159522329], ["Dict[str, Union[Any, int, str]]", 0.08821739100226941], ["tests.utils.MockCoroutine", 0.08346350212791709]], "training_input": [], "training_op": [["int", 0.2204451518411149], ["str", 0.2020394447651278], ["float", 0.09727737505896385]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[880, 4], [895, 9]], "fn_var_ln": {"return_value": [[887, 8], [887, 38]], "training_op": [[889, 8], [889, 19]]}, "fn_var_occur": {"return_value": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "HttpError", "resp", "httplib2", "Response", "content"], ["mock_hook", "return_value", "get_job", "return_value"], ["mock_wait_for_job", "return_value"]], "training_op": [["training_op", "MLEngineStartTrainingJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["training_op", "execute", "MagicMock"]]}, "name": "test_create_training_job_when_http_error_409_should_execute_successfully", "params": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_descr": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "HttpError", "resp", "httplib2", "Response", "content"], ["mock_hook", "return_value", "get_job", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "mock_wait_for_job": [["mock_wait_for_job", "return_value"]], "self": [["training_op", "MLEngineStartTrainingJobOperator", "self", "TRAINING_DEFAULT_ARGS"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.713206346540281], ["mock.Mock", 0.09132118242036064]], "mock_wait_for_job": [["mock.Mock", 0.2260232684005219], ["unittesmock.MagicMock", 0.1552752945165909]], "self": []}, "q_name": "TestMLEngineStartTrainingJobOperator.test_create_training_job_when_http_error_409_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"return_value": "", "training_op": ""}, "variables_p": {"return_value": [["str", 0.7439191569907608], ["int", 0.09765899830590455], ["unittesmock.MagicMock", 0.08035764606732493], ["tests.utils.MockCoroutine", 0.07806419863600976]], "training_op": [["int", 0.5833586057591188], ["str", 0.09421259560075122]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[898, 4], [910, 9]], "fn_var_ln": {"training_op": [[904, 12], [904, 23]]}, "fn_var_occur": {"training_op": [["training_op", "MLEngineStartTrainingJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["training_op", "execute", "MagicMock"]]}, "name": "test_create_training_job_should_throw_exception_when_http_error_403", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "side_effect", "HttpError", "resp", "httplib2", "Response", "content"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"]], "self": [["training_op", "MLEngineStartTrainingJobOperator", "self", "TRAINING_DEFAULT_ARGS"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.544773555170704], ["mock.Mock", 0.07522246159709721]], "self": []}, "q_name": "TestMLEngineStartTrainingJobOperator.test_create_training_job_should_throw_exception_when_http_error_403", "ret_exprs": [], "ret_type": "", "variables": {"training_op": ""}, "variables_p": {"training_op": [["int", 0.5833586057591188], ["str", 0.09421259560075122]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[914, 4], [931, 52]], "fn_var_ln": {"failure_response": [[915, 8], [915, 24]], "return_value": [[917, 8], [917, 38]], "training_op": [[921, 12], [921, 23]]}, "fn_var_occur": {"failure_response": [["failure_response", "self", "TRAINING_INPUT", "copy"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "failure_response"]], "return_value": [["mock_wait_for_job", "return_value"], ["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "failure_response"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "self", "TRAINING_INPUT"]], "training_op": [["training_op", "MLEngineStartTrainingJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["training_op", "execute", "MagicMock"]]}, "name": "test_create_training_job_should_throw_exception_when_job_failed", "params": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_descr": {"mock_hook": "", "mock_wait_for_job": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "failure_response"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "self", "TRAINING_INPUT"]], "mock_wait_for_job": [["mock_wait_for_job", "return_value"]], "self": [["failure_response", "self", "TRAINING_INPUT", "copy"], ["training_op", "MLEngineStartTrainingJobOperator", "self", "TRAINING_DEFAULT_ARGS"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once_with", "project_id", "body", "self", "TRAINING_INPUT"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7995925630065984], ["mock.Mock", 0.0975692818729404]], "mock_wait_for_job": [["mock.Mock", 0.22404346904617317], ["unittesmock.MagicMock", 0.09180949492543966]], "self": []}, "q_name": "TestMLEngineStartTrainingJobOperator.test_create_training_job_should_throw_exception_when_job_failed", "ret_exprs": [], "ret_type": "", "variables": {"failure_response": "", "return_value": "", "training_op": ""}, "variables_p": {"failure_response": [["str", 0.22030622494167362], ["Dict[str, List[Any]]", 0.1266434642006239], ["datetime.datetime", 0.10915921164577903], ["list", 0.09484611667455599], ["Optional[bytes]", 0.09213689575092383], ["List[Tuple[str, Any]]", 0.09149843159522329], ["Dict[str, Union[Any, int, str]]", 0.08821739100226941], ["tests.utils.MockCoroutine", 0.08346350212791709]], "return_value": [["str", 0.260547354123706], ["List[Dict[str, str]]", 0.17936482902391657], ["Optional[bytes]", 0.15038644208565163], ["List[str]", 0.13475562532579025], ["datetime.datetime", 0.09526033235885588], ["Dict[str, Union[Any, Any, Any]]", 0.08803716718016245]], "training_op": [["int", 0.5833586057591188], ["str", 0.09421259560075122]]}}], "name": "TestMLEngineStartTrainingJobOperator", "q_name": "TestMLEngineStartTrainingJobOperator", "variables": {"TRAINING_DEFAULT_ARGS": "", "TRAINING_INPUT": ""}, "variables_p": {"TRAINING_DEFAULT_ARGS": [["Dict[str, Any]", 0.9999999996623427], ["str", 1.7102909010328152e-10], ["int", 8.331405948238127e-11]], "TRAINING_INPUT": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [{"docstring": {"func": "Asserts that a task is deferred and a MLEngineStartTrainingJobTrigger will be fired", "long_descr": "when the MLEngineStartTrainingJobOperator is executed in deferrable mode when deferrable=True.", "ret": null}, "fn_lc": [[948, 0], [975, 57]], "fn_var_ln": {"op": [[955, 4], [955, 6]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "execute", "create_context", "op"]]}, "name": "test_async_create_training_job_should_execute_successfully", "params": {"mock_hook": ""}, "params_descr": {"mock_hook": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.908070015445456]]}, "q_name": "test_async_create_training_job_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.46328570356472304], ["Dict[str, Union[Any, Any, Any, str]]", 0.12581398042677275], ["int", 0.08630783616601438]]}}, {"docstring": {"func": "Tests that an AirflowException is raised in case of error event", "long_descr": null, "ret": null}, "fn_lc": [[978, 0], [997, 103]], "fn_var_ln": {"op": [[981, 4], [981, 6]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "execute_complete", "context", "None", "event"]]}, "name": "test_async_create_training_job_should_throw_exception", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_async_create_training_job_should_throw_exception", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.46328570356472304], ["Dict[str, Union[Any, Any, Any, str]]", 0.12581398042677275], ["int", 0.08630783616601438]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1000, 0], [1019, 5]], "fn_var_ln": {"dag": [[1001, 4], [1001, 7]], "dag_id": [[1010, 4], [1010, 24]], "dag_run": [[1009, 4], [1009, 25]], "logical_date": [[1002, 4], [1002, 16]], "task_instance": [[1008, 4], [1008, 17]], "xcom_push": [[1011, 4], [1011, 27]]}, "fn_var_occur": {"dag": [["dag", "DAG", "dag_id"], ["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "logical_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "logical_date"], ["task_instance", "dag_id", "dag", "dag_id"], ["dag", "dag_run", "run_id", "task", "task_instance", "task_instance", "logical_date"]], "dag_id": [["dag", "DAG", "dag_id"], ["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "logical_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "logical_date"], ["task_instance", "dag_id", "dag", "dag_id"]], "dag_run": [["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "logical_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "logical_date"], ["task_instance", "dag_run", "dag_run"], ["dag", "dag_run", "run_id", "task", "task_instance", "task_instance", "logical_date"]], "logical_date": [["logical_date", "datetime"], ["dag_run", "DagRun", "dag_id", "dag", "dag_id", "execution_date", "logical_date", "run_id", "DagRun", "generate_run_id", "DagRunType", "MANUAL", "logical_date"], ["dag", "dag_run", "run_id", "task", "task_instance", "task_instance", "logical_date"]], "task_instance": [["task_instance", "TaskInstance", "task", "task"], ["task_instance", "dag_run", "dag_run"], ["task_instance", "dag_id", "dag", "dag_id"], ["task_instance", "xcom_push", "MagicMock"], ["dag", "dag_run", "run_id", "task", "task_instance", "task_instance", "logical_date"]], "xcom_push": [["task_instance", "xcom_push", "MagicMock"]]}, "name": "create_context", "params": {"task": ""}, "params_descr": {"task": ""}, "params_occur": {"task": [["task_instance", "TaskInstance", "task", "task"], ["dag", "dag_run", "run_id", "task", "task_instance", "task_instance", "logical_date"]]}, "params_p": {"args": [], "kwargs": [], "task": [["Dict[str, Any]", 0.08927175561728262], ["models.Task", 0.08812746776536977]]}, "q_name": "create_context", "ret_exprs": ["return { \"dag\": dag, \"run_id\": dag_run.run_id, \"task\": task, \"ti\": task_instance, \"task_instance\": task_instance, \"logical_date\": logical_date,}"], "ret_type": "", "ret_type_p": [["float", 0.1638082646530025], ["bool", 0.0810215861388196], ["str", 0.07979216445531484]], "variables": {"dag": "", "dag_id": "", "dag_run": "", "logical_date": "", "task_instance": "", "xcom_push": ""}, "variables_p": {"dag": [["str", 0.20919422940668192], ["dict", 0.12783124600849602], ["int", 0.0960211161480106]], "dag_id": [["str", 0.27041370261006625], ["int", 0.11050649930994375], ["models.File", 0.099166814554518], ["Type[projecbetting.models.Odd]", 0.0916853526907695]], "dag_run": [["int", 0.5960945529994207], ["Dict[str, str]", 0.12489984180792207], ["List[str]", 0.09448879481006968], ["str", 0.09207078022414338]], "logical_date": [["datetime.datetime", 0.7265078894811253], ["datetime.datetime.datetime", 0.09304647509826082], ["datetime.date", 0.090479046329219], ["datetime.date.time.datetime", 0.0899665890913948]], "task_instance": [["taskiapplication.models.task.Task", 0.1488402561021029], ["List[str]", 0.07949312649574362]], "xcom_push": [["list", 0.18955734054989948], ["List[int]", 0.11342687821111186], ["int", 0.1088562941086585], ["str", 0.10451704940249085]]}}, {"docstring": {"func": "Asserts that logging occurs as expected", "long_descr": null, "ret": null}, "fn_lc": [[1022, 0], [1044, 101]], "fn_var_ln": {"op": [[1025, 4], [1025, 6]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["mock", "patch", "object", "op", "log", "mock_log_info"], ["op", "execute_complete", "context", "create_context", "op", "event", "TEST_TASK_ID"]]}, "name": "test_async_create_training_job_logging_should_execute_successfully", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_async_create_training_job_logging_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.46328570356472304], ["Dict[str, Union[Any, Any, Any, str]]", 0.12581398042677275], ["int", 0.08630783616601438]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1048, 0], [1075, 81]], "fn_var_ln": {"op": [[1054, 4], [1054, 6]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "execute", "create_context", "op"]]}, "name": "test_async_create_training_job_with_conflict_should_execute_successfully", "params": {"mock_hook": ""}, "params_descr": {"mock_hook": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_job_without_waiting_result", "return_value", "HttpError", "resp", "httplib2", "Response", "content"], ["mock_hook", "return_value", "get_job", "return_value"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "impersonation_chain", "None"], ["mock_hook", "return_value", "create_job_without_waiting_result", "assert_called_once"]]}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.9999999999999999]]}, "q_name": "test_async_create_training_job_with_conflict_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.46328570356472304], ["Dict[str, Union[Any, Any, Any, str]]", 0.12581398042677275], ["int", 0.08630783616601438]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1078, 0], [1096, 38]], "fn_var_ln": {"op": [[1082, 8], [1082, 10]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "execute", "create_context", "op"]]}, "name": "test_async_create_training_job_should_throw_exception_if_job_id_none", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_async_create_training_job_should_throw_exception_if_job_id_none", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.46328570356472304], ["Dict[str, Union[Any, Any, Any, str]]", 0.12581398042677275], ["int", 0.08630783616601438]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1099, 0], [1115, 38]], "fn_var_ln": {"op": [[1101, 8], [1101, 10]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "execute", "create_context", "op"]]}, "name": "test_async_create_training_job_should_throw_exception_if_project_id_none", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_async_create_training_job_should_throw_exception_if_project_id_none", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.3073508063518123], ["Dict[str, List[str]]", 0.09781253489486687], ["Dict[str, Any]", 0.09035994948009869], ["int", 0.08562102883913959], ["dict", 0.08469944709484149]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1118, 0], [1136, 38]], "fn_var_ln": {"op": [[1120, 8], [1120, 10]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "execute", "create_context", "op"]]}, "name": "test_async_create_training_job_should_throw_exception_if_custom_none", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_async_create_training_job_should_throw_exception_if_custom_none", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.4584322419785171], ["Dict[str, Union[Any, Any, Any, str]]", 0.12433331396573036], ["magic.models.deck.Deck", 0.08404288227978264]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1139, 0], [1159, 38]], "fn_var_ln": {"op": [[1145, 8], [1145, 10]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "execute", "create_context", "op"]]}, "name": "test_async_create_training_job_should_throw_exception_if_package_none", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_async_create_training_job_should_throw_exception_if_package_none", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.4584322419785171], ["Dict[str, Union[Any, Any, Any, str]]", 0.12433331396573036], ["magic.models.deck.Deck", 0.08404288227978264]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1162, 0], [1184, 38]], "fn_var_ln": {"op": [[1168, 8], [1168, 10]]}, "fn_var_occur": {"op": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"], ["op", "execute", "create_context", "op"]]}, "name": "test_async_create_training_job_should_throw_exception_if_uris_none", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_async_create_training_job_should_throw_exception_if_uris_none", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.4584322419785171], ["Dict[str, Union[Any, Any, Any, str]]", 0.12433331396573036], ["magic.models.deck.Deck", 0.08404288227978264]]}}], "imports": ["__future__", "annotations", "copy", "unittest", "mock", "unittest", "mock", "ANY", "MagicMock", "patch", "httplib2", "pytest", "googleapiclient", "errors", "HttpError", "airflow", "exceptions", "AirflowException", "TaskDeferred", "airflow", "models", "dag", "DAG", "airflow", "models", "dagrun", "DagRun", "airflow", "models", "taskinstance", "TaskInstance", "airflow", "providers", "google", "cloud", "operators", "mlengine", "MLEngineCreateModelOperator", "MLEngineCreateVersionOperator", "MLEngineDeleteModelOperator", "MLEngineDeleteVersionOperator", "MLEngineGetModelOperator", "MLEngineListVersionsOperator", "MLEngineManageModelOperator", "MLEngineManageVersionOperator", "MLEngineSetDefaultVersionOperator", "MLEngineStartBatchPredictionJobOperator", "MLEngineStartTrainingJobOperator", "MLEngineTrainingCancelJobOperator", "airflow", "providers", "google", "cloud", "triggers", "mlengine", "MLEngineStartTrainingJobTrigger", "airflow", "utils", "timezone", "airflow", "utils", "timezone", "datetime", "airflow", "utils", "types", "DagRunType"], "mod_var_ln": {"DEFAULT_DATE": [[50, 0], [50, 12]], "MLENGINE_AI_PATH": [[66, 0], [66, 16]], "TEST_DAG_ID": [[52, 0], [52, 11]], "TEST_GCP_CONN_ID": [[56, 0], [56, 16]], "TEST_GCP_PROJECT_ID": [[936, 0], [936, 19]], "TEST_IMPERSONATION_CHAIN": [[57, 0], [57, 24]], "TEST_JOB_DIR": [[940, 0], [940, 12]], "TEST_JOB_ID": [[935, 0], [935, 11]], "TEST_LABELS": [[944, 0], [944, 11]], "TEST_MODEL": [[58, 0], [58, 10]], "TEST_MODEL_NAME": [[54, 0], [54, 15]], "TEST_PACKAGE_URIS": [[941, 0], [941, 17]], "TEST_PROJECT_ID": [[53, 0], [53, 15]], "TEST_PYTHON_VERSION": [[939, 0], [939, 19]], "TEST_REGION": [[937, 0], [937, 11]], "TEST_RUNTIME_VERSION": [[938, 0], [938, 20]], "TEST_TASK_ID": [[934, 0], [934, 12]], "TEST_TRAINING_ARGS": [[943, 0], [943, 18]], "TEST_TRAINING_PYTHON_MODULE": [[942, 0], [942, 27]], "TEST_VERSION": [[61, 0], [61, 12]], "TEST_VERSION_NAME": [[55, 0], [55, 17]]}, "mod_var_occur": {"DEFAULT_DATE": [["self", "dag", "DAG", "default_args", "DEFAULT_DATE", "DEFAULT_DATE", "schedule"], ["arguments", "DEFAULT_DATE", "False"]], "MLENGINE_AI_PATH": [], "TEST_DAG_ID": [], "TEST_GCP_CONN_ID": [["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineCreateModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineGetModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineDeleteModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN", "delete_contents", "True"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineListVersionsOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["MLEngineListVersionsOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID"]], "TEST_GCP_PROJECT_ID": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"]], "TEST_IMPERSONATION_CHAIN": [["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineCreateModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineGetModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineDeleteModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN", "delete_contents", "True"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineListVersionsOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "assert_called_once_with", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"]], "TEST_JOB_DIR": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_JOB_ID": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_LABELS": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_MODEL": [["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL"], ["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineCreateModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL"]], "TEST_MODEL_NAME": [["TEST_MODEL", "TEST_MODEL_NAME"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["task", "MLEngineGetModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["task", "MLEngineDeleteModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN", "delete_contents", "True"], ["mock_hook", "return_value", "delete_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "delete_contents", "True"], ["task", "MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_spec", "TEST_VERSION"], ["MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "set_default_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"], ["MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineListVersionsOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "list_versions", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["task", "MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "delete_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"], ["MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"]], "TEST_PACKAGE_URIS": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"]], "TEST_PROJECT_ID": [["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL"], ["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["task", "MLEngineManageModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "operation", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineCreateModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model", "TEST_MODEL"], ["task", "MLEngineGetModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["task", "MLEngineDeleteModelOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN", "delete_contents", "True"], ["mock_hook", "return_value", "delete_model", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "delete_contents", "True"], ["task", "MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_spec", "TEST_VERSION"], ["MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "set_default_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"], ["MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineListVersionsOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "list_versions", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME"], ["MLEngineListVersionsOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "delete_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"], ["MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "None", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_PYTHON_VERSION": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_REGION": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_RUNTIME_VERSION": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_TASK_ID": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "execute_complete", "context", "create_context", "op", "event", "TEST_TASK_ID"], ["mock_log_info", "assert_called_with", "TEST_TASK_ID"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_TRAINING_ARGS": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "None", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_TRAINING_PYTHON_MODULE": [["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "job_id", "None", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "None", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "None", "deferrable", "True"], ["op", "MLEngineStartTrainingJobOperator", "task_id", "TEST_TASK_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "job_id", "TEST_JOB_ID", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "None", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS", "master_config", "master_type", "deferrable", "True"]], "TEST_VERSION": [["training_op", "MLEngineManageVersionOperator", "version", "TEST_VERSION", "self", "VERSION_DEFAULT_ARGS"], ["hook_instance", "create_version", "assert_called_once_with", "project_id", "model_name", "version_spec", "TEST_VERSION"], ["task", "MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "create_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_spec", "TEST_VERSION"], ["MLEngineCreateVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version", "TEST_VERSION", "gcp_conn_id", "TEST_GCP_CONN_ID"]], "TEST_VERSION_NAME": [["task", "MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "set_default_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"], ["MLEngineSetDefaultVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["task", "MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "TEST_IMPERSONATION_CHAIN"], ["mock_hook", "return_value", "delete_version", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "model_name", "TEST_MODEL_NAME", "version_name", "TEST_VERSION_NAME"], ["MLEngineDeleteVersionOperator", "task_id", "project_id", "TEST_PROJECT_ID", "model_name", "None", "version_name", "TEST_VERSION_NAME", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 187}, "session_id": "C5cUnDxeomAJDVgjhK981d76El3STqsyWsn96XynT5o", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "MLENGINE_AI_PATH": "", "TEST_DAG_ID": "", "TEST_GCP_CONN_ID": "", "TEST_GCP_PROJECT_ID": "", "TEST_IMPERSONATION_CHAIN": "", "TEST_JOB_DIR": "", "TEST_JOB_ID": "", "TEST_LABELS": "", "TEST_MODEL": "", "TEST_MODEL_NAME": "", "TEST_PACKAGE_URIS": "", "TEST_PROJECT_ID": "", "TEST_PYTHON_VERSION": "", "TEST_REGION": "", "TEST_RUNTIME_VERSION": "", "TEST_TASK_ID": "", "TEST_TRAINING_ARGS": "", "TEST_TRAINING_PYTHON_MODULE": "", "TEST_VERSION": "", "TEST_VERSION_NAME": ""}, "variables_p": {"DEFAULT_DATE": [["datetime.datetime", 0.8934084489162594], ["Pattern[str]", 0.10659155108374048]], "MLENGINE_AI_PATH": [["List[str]", 0.7], ["str", 0.2], ["list", 0.1]], "TEST_DAG_ID": [["str", 0.9999999998655771], ["dict", 1.3442296793178256e-10]], "TEST_GCP_CONN_ID": [["str", 0.806351640830186], ["dict", 0.10363985449058802], ["Pattern[str]", 0.09000850467922601]], "TEST_GCP_PROJECT_ID": [["str", 0.9999999999999999]], "TEST_IMPERSONATION_CHAIN": [["int", 0.3806982068117072], ["dict", 0.11868451982494259], ["Dict[str, Dict[str, Any]]", 0.09782252759422073], ["Dict[Any, str]", 0.09782252759422073]], "TEST_JOB_DIR": [["str", 0.8054627327954702]], "TEST_JOB_ID": [["str", 0.9999999999999998]], "TEST_LABELS": [["str", 0.29457478988741514], ["Optional[str]", 0.1744965967239441], ["dict", 0.13291136588758978], ["Dict[str, Dict[str, str]]", 0.12896262127258998], ["int", 0.09471436410046663], ["Dict[str, str]", 0.09162100576242396], ["List[int]", 0.08271925636557027]], "TEST_MODEL": [["str", 0.1973120616285876], ["Dict[str, Dict[str, Any]]", 0.10973823194267353], ["Dict[Any, str]", 0.10973823194267353], ["List[str]", 0.09079351258649353], ["List[Tuple[str, bytes]]", 0.09035106183272797]], "TEST_MODEL_NAME": [["str", 0.9999999999999999]], "TEST_PACKAGE_URIS": [["str", 0.5950534322535896], ["Dict[str, Dict[str, str]]", 0.12216555734128688], ["dict", 0.10016807973195807], ["Callable[[], None]", 0.09214788334553715], ["Dict[str, str]", 0.09046504732762829]], "TEST_PROJECT_ID": [["str", 0.3219632729531997], ["int", 0.11255531716844955], ["Optional[str]", 0.10881801124461019], ["Dict[str, int]", 0.08952494849837363], ["raiden.utils.List[EventID]", 0.08526508739142953]], "TEST_PYTHON_VERSION": [["str", 0.4863191584303178], ["Dict[str, str]", 0.18952288510717955], ["int", 0.128714653081918], ["Dict[str, Dict[str, str]]", 0.10553209900139533], ["dict", 0.08991120437918926]], "TEST_REGION": [["str", 0.40627756679370475], ["int", 0.33766950794466266], ["dict", 0.08220054849754574], ["List[str]", 0.08037269857325359]], "TEST_RUNTIME_VERSION": [["str", 0.4863191584303178], ["Dict[str, str]", 0.18952288510717955], ["int", 0.128714653081918], ["Dict[str, Dict[str, str]]", 0.10553209900139533], ["dict", 0.08991120437918926]], "TEST_TASK_ID": [["str", 0.9158256045603919], ["bytes", 0.08417439543960828]], "TEST_TRAINING_ARGS": [["bool", 0.13443577239919424], ["list", 0.10050189474201186], ["str", 0.09247114021989654], ["Dict[str, str]", 0.0905621399144156], ["int", 0.0886161795737121], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.08043110836266974]], "TEST_TRAINING_PYTHON_MODULE": [["str", 0.38237101548169716], ["Optional[str]", 0.17557729063617783], ["dict", 0.1261355928182607], ["int", 0.11758176170844721], ["List[int]", 0.10171152562320622], ["Dict[str, Union[int, str]]", 0.0966228137322108]], "TEST_VERSION": [], "TEST_VERSION_NAME": [["str", 0.8063834976530972]]}}}