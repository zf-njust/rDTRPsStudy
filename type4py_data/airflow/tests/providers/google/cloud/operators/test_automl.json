{"error": null, "response": {"classes": [{"cls_lc": [[69, 0], [89, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [89, 9]], "fn_var_ln": {"op": [[75, 8], [75, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLTrainModelOperator", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_model", "return_value", "result", "return_value", "Model", "name", "MODEL_PATH"], ["mock_hook", "return_value", "extract_object_id", "extract_object_id"], ["mock_hook", "return_value", "wait_for_operation", "return_value", "Model"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.10642041817148801]], "self": []}, "q_name": "TestAutoMLTrainModelOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.18801864021277293], ["Pattern[Any]", 0.11290544512237705], ["dict", 0.10617827830307235], ["list", 0.10330959181591425], ["Union[bytes, str]", 0.09579330404454804]]}}], "name": "TestAutoMLTrainModelOperator", "q_name": "TestAutoMLTrainModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[92, 0], [119, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [119, 9]], "fn_var_ln": {"op": [[99, 8], [99, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLBatchPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "task_id", "TASK_ID", "prediction_params"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "batch_predict", "return_value", "result", "return_value", "BatchPredictResult"], ["mock_hook", "return_value", "extract_object_id", "extract_object_id"], ["mock_hook", "return_value", "wait_for_operation", "return_value", "BatchPredictResult"], ["mock_hook", "return_value", "batch_predict", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "output_config", "OUTPUT_CONFIG", "params", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLBatchPredictOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.3872135323693162], ["set", 0.10244941515997688], ["List[Tuple[Any, str]]", 0.0969104741750541]]}}], "name": "TestAutoMLBatchPredictOperator", "q_name": "TestAutoMLBatchPredictOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[122, 0], [145, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [145, 9]], "fn_var_ln": {"op": [[127, 8], [127, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD", "task_id", "TASK_ID", "operation_params"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "predict", "return_value", "PredictResponse"], ["mock_hook", "return_value", "predict", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "params", "payload", "PAYLOAD", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLPredictOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.18967506968845593], ["Dict[str, Union[int, str]]", 0.10220871126446568], ["List[Tuple[Any, str]]", 0.09878099421326426], ["Pattern[Any]", 0.08726640306314676], ["bytes", 0.08543762633517599]]}}], "name": "TestAutoMLPredictOperator", "q_name": "TestAutoMLPredictOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[148, 0], [168, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[150, 4], [168, 9]], "fn_var_ln": {"op": [[154, 8], [154, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLCreateDatasetOperator", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_dataset", "return_value", "Dataset", "name", "DATASET_PATH"], ["mock_hook", "return_value", "extract_object_id", "extract_object_id"], ["mock_hook", "return_value", "create_dataset", "assert_called_once_with", "dataset", "DATASET", "location", "GCP_LOCATION", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLCreateImportOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.24484057653936525], ["int", 0.09873349510263574]]}}], "name": "TestAutoMLCreateImportOperator", "q_name": "TestAutoMLCreateImportOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[171, 0], [200, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [200, 9]], "fn_var_ln": {"filter_": [[175, 8], [175, 15]], "op": [[178, 8], [178, 10]], "page_size": [[176, 8], [176, 17]], "table_spec": [[174, 8], [174, 18]]}, "fn_var_occur": {"filter_": [["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"]], "op": [["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]], "page_size": [["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"]], "table_spec": [["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLListColumnsSpecsOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"filter_": "", "op": "", "page_size": "", "table_spec": ""}, "variables_p": {"filter_": [["str", 0.39726876916076603], ["int", 0.09446219493827274]], "op": [["str", 0.506180113104963], ["Dict[str, Dict[str, Any]]", 0.08674476169014002]], "page_size": [["str", 0.28679714087820274], ["Tuple[str, str]", 0.22112946225439814], ["List[int]", 0.10653027393125052], ["int", 0.10408362040822038], ["Dict[str, Union[int, str]]", 0.08699667680861145]], "table_spec": [["str", 0.6687965886587336], ["Iterator[str]", 0.09317518546835649]]}}], "name": "TestAutoMLListColumnsSpecsOperator", "q_name": "TestAutoMLListColumnsSpecsOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[203, 0], [224, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[205, 4], [224, 9]], "fn_var_ln": {"dataset": [[208, 8], [208, 15]], "op": [[211, 8], [211, 10]]}, "fn_var_occur": {"dataset": [["dataset", "copy", "deepcopy", "DATASET"], ["dataset", "DATASET_ID"], ["op", "AutoMLTablesUpdateDatasetOperator", "dataset", "dataset", "update_mask", "MASK", "location", "GCP_LOCATION", "task_id", "TASK_ID"], ["mock_hook", "return_value", "update_dataset", "assert_called_once_with", "dataset", "dataset", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "MASK"]], "op": [["op", "AutoMLTablesUpdateDatasetOperator", "dataset", "dataset", "update_mask", "MASK", "location", "GCP_LOCATION", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "update_dataset", "return_value", "Dataset", "name", "DATASET_PATH"], ["mock_hook", "return_value", "update_dataset", "assert_called_once_with", "dataset", "dataset", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "MASK"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLUpdateDatasetOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"dataset": "", "op": ""}, "variables_p": {"dataset": [["int", 0.6894576049539374], ["str", 0.3105423950460626]], "op": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08895829807510112], ["int", 0.0813826425738264]]}}], "name": "TestAutoMLUpdateDatasetOperator", "q_name": "TestAutoMLUpdateDatasetOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[227, 0], [247, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[229, 4], [247, 9]], "fn_var_ln": {"op": [[233, 8], [233, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLGetModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "get_model", "return_value", "Model", "name", "MODEL_PATH"], ["mock_hook", "return_value", "extract_object_id", "extract_object_id"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLGetModelOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.39171055416201334], ["Dict[str, str]", 0.12648536133720426], ["List[str]", 0.10573834545228264]]}}], "name": "TestAutoMLGetModelOperator", "q_name": "TestAutoMLGetModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[250, 0], [267, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [267, 9]], "fn_var_ln": {"op": [[253, 8], [253, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLDeleteModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "execute", "context", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "delete_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.Mock", 0.2860417530265693]], "self": []}, "q_name": "TestAutoMLDeleteModelOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["list", 0.11775692890918454], ["Mapping[str, List[Any]]", 0.11052940091202275], ["List[List[Any]]", 0.107716361907899], ["Tuple[int, int]", 0.10709685446672954], ["List[Tuple[Any, str]]", 0.09664289849884321], ["int", 0.09440248287550705], ["Dict[str, str]", 0.09259280989929453], ["List[int]", 0.09099807207851951], ["str", 0.09089733399152217]]}}], "name": "TestAutoMLDeleteModelOperator", "q_name": "TestAutoMLDeleteModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[270, 0], [290, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[272, 4], [290, 9]], "fn_var_ln": {"image_detection_metadata": [[273, 8], [273, 32]], "op": [[274, 8], [274, 10]]}, "fn_var_occur": {"image_detection_metadata": [["op", "AutoMLDeployModelOperator", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "deploy_model", "assert_called_once_with", "image_detection_metadata", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "op": [["op", "AutoMLDeployModelOperator", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "execute", "context", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "deploy_model", "assert_called_once_with", "image_detection_metadata", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLDeployModelOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"image_detection_metadata": "", "op": ""}, "variables_p": {"image_detection_metadata": [["str", 0.3789681529727708], ["Dict[int, str]", 0.09565360298120473], ["list", 0.09070925173989203]], "op": [["int", 0.4103273310902307], ["list", 0.10012973311164322], ["str", 0.09806697826722827], ["Pattern[str]", 0.09720390429224686], ["List[float]", 0.09289161237074883]]}}], "name": "TestAutoMLDeployModelOperator", "q_name": "TestAutoMLDeployModelOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[293, 0], [312, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[295, 4], [312, 9]], "fn_var_ln": {"op": [[296, 8], [296, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLImportDataOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "import_data", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "dataset_id", "DATASET_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLDatasetImportOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["List[Union[Any, Any]]", 0.09520337767366298], ["dict", 0.09386523658959868], ["str", 0.09331963218903906], ["bytes", 0.09223835143949723], ["set", 0.09189253087759555]]}}], "name": "TestAutoMLDatasetImportOperator", "q_name": "TestAutoMLDatasetImportOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[315, 0], [339, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[317, 4], [339, 9]], "fn_var_ln": {"filter_": [[318, 8], [318, 15]], "op": [[321, 8], [321, 10]], "page_size": [[319, 8], [319, 17]]}, "fn_var_occur": {"filter_": [["op", "AutoMLTablesListTableSpecsOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_table_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "op": [["op", "AutoMLTablesListTableSpecsOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]], "page_size": [["op", "AutoMLTablesListTableSpecsOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_table_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "list_table_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLTablesListTableSpecsOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"filter_": "", "op": "", "page_size": ""}, "variables_p": {"filter_": [["str", 0.3940236838560182], ["Dict[Optional[str], str]", 0.11134129219546222], ["Dict[str, str]", 0.0967907999631232], ["dict", 0.09422765450939082]], "op": [["str", 0.710120555871325], ["Dict[str, Optional[int]]", 0.09770027578612042], ["Dict[str, List[str]]", 0.09198381669073853]], "page_size": [["str", 0.5096782241614956], ["int", 0.18129935185467924]]}}], "name": "TestAutoMLTablesListTableSpecsOperator", "q_name": "TestAutoMLTablesListTableSpecsOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[342, 0], [353, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[344, 4], [353, 9]], "fn_var_ln": {"op": [[345, 8], [345, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLListDatasetOperator", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "execute", "context", "mock", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "list_datasets", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestAutoMLDatasetListOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": []}}], "name": "TestAutoMLDatasetListOperator", "q_name": "TestAutoMLDatasetListOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[356, 0], [373, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[358, 4], [373, 9]], "fn_var_ln": {"op": [[359, 8], [359, 10]]}, "fn_var_occur": {"op": [["op", "AutoMLDeleteDatasetOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "execute", "context", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "location", "GCP_LOCATION", "dataset_id", "DATASET_ID", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.Mock", 0.31826328369712975]], "self": []}, "q_name": "TestAutoMLDatasetDeleteOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["List[List[Any]]", 0.11821492425667098], ["bytes", 0.10781151045160803], ["bool", 0.0963272882783776], ["int", 0.09439309429075413], ["Dict[str, Any]", 0.09439309429075413], ["str", 0.09439309429075413]]}}], "name": "TestAutoMLDatasetDeleteOperator", "q_name": "TestAutoMLDatasetDeleteOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "copy", "unittest", "mock", "google", "api_core", "gapic_v1", "method", "DEFAULT", "google", "cloud", "automl_v1beta1", "BatchPredictResult", "Dataset", "Model", "PredictResponse", "airflow", "providers", "google", "cloud", "hooks", "automl", "CloudAutoMLHook", "airflow", "providers", "google", "cloud", "operators", "automl", "AutoMLBatchPredictOperator", "AutoMLCreateDatasetOperator", "AutoMLDeleteDatasetOperator", "AutoMLDeleteModelOperator", "AutoMLDeployModelOperator", "AutoMLGetModelOperator", "AutoMLImportDataOperator", "AutoMLListDatasetOperator", "AutoMLPredictOperator", "AutoMLTablesListColumnSpecsOperator", "AutoMLTablesListTableSpecsOperator", "AutoMLTablesUpdateDatasetOperator", "AutoMLTrainModelOperator"], "mod_var_ln": {"CREDENTIALS": [[43, 0], [43, 11]], "DATASET": [[63, 0], [63, 7]], "DATASET_ID": [[49, 0], [49, 10]], "DATASET_PATH": [[58, 0], [58, 12]], "GCP_LOCATION": [[46, 0], [46, 12]], "GCP_PROJECT_ID": [[45, 0], [45, 14]], "INPUT_CONFIG": [[60, 0], [60, 12]], "LOCATION_PATH": [[56, 0], [56, 13]], "MASK": [[64, 0], [64, 4]], "MODEL": [[50, 0], [50, 5]], "MODEL_ID": [[48, 0], [48, 8]], "MODEL_NAME": [[47, 0], [47, 10]], "MODEL_PATH": [[57, 0], [57, 10]], "OUTPUT_CONFIG": [[61, 0], [61, 13]], "PAYLOAD": [[62, 0], [62, 7]], "TASK_ID": [[44, 0], [44, 7]], "extract_object_id": [[66, 0], [66, 17]]}, "mod_var_occur": {"CREDENTIALS": [], "DATASET": [["op", "AutoMLCreateDatasetOperator", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "create_dataset", "assert_called_once_with", "dataset", "DATASET", "location", "GCP_LOCATION", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["dataset", "copy", "deepcopy", "DATASET"]], "DATASET_ID": [["MODEL", "MODEL_NAME", "DATASET_ID"], ["DATASET_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID"], ["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"], ["dataset", "DATASET_ID"], ["op", "AutoMLImportDataOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "task_id", "TASK_ID"], ["mock_hook", "return_value", "import_data", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "dataset_id", "DATASET_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLTablesListTableSpecsOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_table_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeleteDatasetOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "location", "GCP_LOCATION", "dataset_id", "DATASET_ID", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "DATASET_PATH": [["mock_hook", "return_value", "create_dataset", "return_value", "Dataset", "name", "DATASET_PATH"], ["mock_hook", "return_value", "update_dataset", "return_value", "Dataset", "name", "DATASET_PATH"]], "GCP_LOCATION": [["LOCATION_PATH", "GCP_PROJECT_ID", "GCP_LOCATION"], ["MODEL_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "MODEL_ID"], ["DATASET_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID"], ["op", "AutoMLTrainModelOperator", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None", "metadata"], ["op", "AutoMLBatchPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "task_id", "TASK_ID", "prediction_params"], ["mock_hook", "return_value", "batch_predict", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "output_config", "OUTPUT_CONFIG", "params", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD", "task_id", "TASK_ID", "operation_params"], ["mock_hook", "return_value", "predict", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "params", "payload", "PAYLOAD", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLCreateDatasetOperator", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "create_dataset", "assert_called_once_with", "dataset", "DATASET", "location", "GCP_LOCATION", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"], ["op", "AutoMLTablesUpdateDatasetOperator", "dataset", "dataset", "update_mask", "MASK", "location", "GCP_LOCATION", "task_id", "TASK_ID"], ["op", "AutoMLGetModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeleteModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "delete_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeployModelOperator", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "deploy_model", "assert_called_once_with", "image_detection_metadata", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLImportDataOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "task_id", "TASK_ID"], ["mock_hook", "return_value", "import_data", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "dataset_id", "DATASET_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLTablesListTableSpecsOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_table_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLListDatasetOperator", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_datasets", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeleteDatasetOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "location", "GCP_LOCATION", "dataset_id", "DATASET_ID", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "GCP_PROJECT_ID": [["LOCATION_PATH", "GCP_PROJECT_ID", "GCP_LOCATION"], ["MODEL_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "MODEL_ID"], ["DATASET_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID"], ["op", "AutoMLTrainModelOperator", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None", "metadata"], ["op", "AutoMLBatchPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "task_id", "TASK_ID", "prediction_params"], ["mock_hook", "return_value", "batch_predict", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "output_config", "OUTPUT_CONFIG", "params", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD", "task_id", "TASK_ID", "operation_params"], ["mock_hook", "return_value", "predict", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "params", "payload", "PAYLOAD", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLCreateDatasetOperator", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "create_dataset", "assert_called_once_with", "dataset", "DATASET", "location", "GCP_LOCATION", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"], ["op", "AutoMLGetModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeleteModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "delete_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeployModelOperator", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "deploy_model", "assert_called_once_with", "image_detection_metadata", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLImportDataOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "task_id", "TASK_ID"], ["mock_hook", "return_value", "import_data", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "dataset_id", "DATASET_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLTablesListTableSpecsOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_table_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLListDatasetOperator", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_datasets", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeleteDatasetOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "location", "GCP_LOCATION", "dataset_id", "DATASET_ID", "metadata", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "INPUT_CONFIG": [["op", "AutoMLBatchPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "task_id", "TASK_ID", "prediction_params"], ["mock_hook", "return_value", "batch_predict", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "output_config", "OUTPUT_CONFIG", "params", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLImportDataOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "task_id", "TASK_ID"], ["mock_hook", "return_value", "import_data", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "dataset_id", "DATASET_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "LOCATION_PATH": [], "MASK": [["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["mock_hook", "return_value", "list_column_specs", "assert_called_once_with", "dataset_id", "DATASET_ID", "field_mask", "MASK", "filter_", "filter_", "location", "GCP_LOCATION", "metadata", "page_size", "page_size", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "table_spec_id", "table_spec", "timeout", "None"], ["op", "AutoMLTablesUpdateDatasetOperator", "dataset", "dataset", "update_mask", "MASK", "location", "GCP_LOCATION", "task_id", "TASK_ID"], ["mock_hook", "return_value", "update_dataset", "assert_called_once_with", "dataset", "dataset", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "MASK"]], "MODEL": [["op", "AutoMLTrainModelOperator", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "create_model", "assert_called_once_with", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None", "metadata"]], "MODEL_ID": [["MODEL_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "MODEL_ID"], ["op", "AutoMLBatchPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "task_id", "TASK_ID", "prediction_params"], ["mock_hook", "return_value", "batch_predict", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "output_config", "OUTPUT_CONFIG", "params", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD", "task_id", "TASK_ID", "operation_params"], ["mock_hook", "return_value", "predict", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "params", "payload", "PAYLOAD", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLGetModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "get_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeleteModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "delete_model", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"], ["op", "AutoMLDeployModelOperator", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["mock_hook", "return_value", "deploy_model", "assert_called_once_with", "image_detection_metadata", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "MODEL_NAME": [["MODEL", "MODEL_NAME", "DATASET_ID"]], "MODEL_PATH": [["mock_hook", "return_value", "create_model", "return_value", "result", "return_value", "Model", "name", "MODEL_PATH"], ["mock_hook", "return_value", "get_model", "return_value", "Model", "name", "MODEL_PATH"]], "OUTPUT_CONFIG": [["op", "AutoMLBatchPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "task_id", "TASK_ID", "prediction_params"], ["mock_hook", "return_value", "batch_predict", "assert_called_once_with", "input_config", "INPUT_CONFIG", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "output_config", "OUTPUT_CONFIG", "params", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "PAYLOAD": [["op", "AutoMLPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD", "task_id", "TASK_ID", "operation_params"], ["mock_hook", "return_value", "predict", "assert_called_once_with", "location", "GCP_LOCATION", "metadata", "model_id", "MODEL_ID", "params", "payload", "PAYLOAD", "project_id", "GCP_PROJECT_ID", "retry", "DEFAULT", "timeout", "None"]], "TASK_ID": [["op", "AutoMLTrainModelOperator", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "AutoMLBatchPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "task_id", "TASK_ID", "prediction_params"], ["op", "AutoMLPredictOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD", "task_id", "TASK_ID", "operation_params"], ["op", "AutoMLCreateDatasetOperator", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "AutoMLTablesListColumnSpecsOperator", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["op", "AutoMLTablesUpdateDatasetOperator", "dataset", "dataset", "update_mask", "MASK", "location", "GCP_LOCATION", "task_id", "TASK_ID"], ["op", "AutoMLGetModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "AutoMLDeleteModelOperator", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "AutoMLDeployModelOperator", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "AutoMLImportDataOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "task_id", "TASK_ID"], ["op", "AutoMLTablesListTableSpecsOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size", "task_id", "TASK_ID"], ["op", "AutoMLListDatasetOperator", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"], ["op", "AutoMLDeleteDatasetOperator", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "task_id", "TASK_ID"]], "extract_object_id": [["mock_hook", "return_value", "extract_object_id", "extract_object_id"], ["mock_hook", "return_value", "extract_object_id", "extract_object_id"], ["mock_hook", "return_value", "extract_object_id", "extract_object_id"], ["mock_hook", "return_value", "extract_object_id", "extract_object_id"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 63}, "session_id": "HGaJZH_ZuNt_SJF4MsZIj9oXyGwVUGNAEEYQNAhZjK8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CREDENTIALS": "", "DATASET": "", "DATASET_ID": "", "DATASET_PATH": "", "GCP_LOCATION": "", "GCP_PROJECT_ID": "", "INPUT_CONFIG": "", "LOCATION_PATH": "", "MASK": "", "MODEL": "", "MODEL_ID": "", "MODEL_NAME": "", "MODEL_PATH": "", "OUTPUT_CONFIG": "", "PAYLOAD": "", "TASK_ID": "", "extract_object_id": ""}, "variables_p": {"CREDENTIALS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "DATASET": [["int", 0.09537197709661183], ["list", 0.0951697349480784]], "DATASET_ID": [["str", 0.4157134586637756], ["int", 0.2942991226611534]], "DATASET_PATH": [["str", 1.0]], "GCP_LOCATION": [["List[str]", 0.18231726288096034], ["int", 0.13123897026081513], ["list", 0.11262917535333405], ["Dict[str, str]", 0.10260867439784917], ["bool", 0.09917308086574486]], "GCP_PROJECT_ID": [["Optional[str]", 0.41695261084707247], ["str", 0.29504904692525546], ["bytes", 0.10107963949683649], ["Optional[List[str]]", 0.09496298481781791], ["int", 0.09195571791301758]], "INPUT_CONFIG": [["str", 0.19607393375068533], ["ChainMap", 0.09353437862053267], ["bool", 0.09276673059671263]], "LOCATION_PATH": [["str", 0.8553062143689897], ["Optional[str]", 0.14469378563101035]], "MASK": [["str", 0.7126720983292807], ["dict", 0.09249594521968303], ["Dict[str, str]", 0.09170853316590326]], "MODEL": [["str", 0.19106621405630486]], "MODEL_ID": [["str", 0.6347858524991989], ["Optional[str]", 0.20982228568079236], ["int", 0.1553918618200087]], "MODEL_NAME": [["str", 0.9999999999999997]], "MODEL_PATH": [["str", 0.628208615186982], ["bool", 0.1109702257603016], ["Dict[str, str]", 0.06935116558537488]], "OUTPUT_CONFIG": [["Dict[str, dict]", 0.18944447129371234], ["Dict[str, str]", 0.18336655318199718], ["Dict[str, Dict[str, Any]]", 0.09496287824055967], ["int", 0.08401922598865895], ["dict", 0.08306721923128914]], "PAYLOAD": [["str", 0.22970941375575377]], "TASK_ID": [["str", 0.7854190163395736], ["int", 0.10891539521286722]], "extract_object_id": [["str", 0.7993560870305858], ["Callable(id)[[object], int]", 0.10422242227295543], ["Union[Literal, str]", 0.0964214906964589]]}}}