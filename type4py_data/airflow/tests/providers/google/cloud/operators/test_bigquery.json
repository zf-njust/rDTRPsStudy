{"error": null, "response": {"classes": [{"cls_lc": [[92, 0], [234, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [113, 9]], "fn_var_ln": {"operator": [[95, 8], [95, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.9999999999999998]], "self": []}, "q_name": "TestBigQueryCreateEmptyTableOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.17775645450120503], ["Dict[str, Any]", 0.12383764792829978], ["Set[str]", 0.10574246950201928], ["int", 0.100211081265347], ["dict", 0.09538928463857319]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [139, 9]], "fn_var_ln": {"operator": [[117, 8], [117, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_create_view", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "VIEW_DEFINITION", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.9035353318188841]], "self": []}, "q_name": "TestBigQueryCreateEmptyTableOperator.test_create_view", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.17775645450120503], ["Dict[str, Any]", 0.12383764792829978], ["Set[str]", 0.10574246950201928], ["int", 0.100211081265347], ["dict", 0.09538928463857319]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[142, 4], [165, 9]], "fn_var_ln": {"operator": [[143, 8], [143, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "materialized_view", "MATERIALIZED_VIEW_DEFINITION"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_create_materialized_view", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "MATERIALIZED_VIEW_DEFINITION", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.9035353318188841]], "self": []}, "q_name": "TestBigQueryCreateEmptyTableOperator.test_create_materialized_view", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.17775645450120503], ["Dict[str, Any]", 0.12383764792829978], ["Set[str]", 0.10574246950201928], ["int", 0.100211081265347], ["dict", 0.09538928463857319]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[168, 4], [200, 9]], "fn_var_ln": {"cluster_fields": [[175, 8], [175, 22]], "operator": [[176, 8], [176, 16]], "schema_fields": [[169, 8], [169, 21]], "time_partitioning": [[174, 8], [174, 25]]}, "fn_var_occur": {"cluster_fields": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]], "operator": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["operator", "execute", "context", "MagicMock"]], "schema_fields": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]], "time_partitioning": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]]}, "name": "test_create_clustered_empty_table", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8988770738782412]], "self": []}, "q_name": "TestBigQueryCreateEmptyTableOperator.test_create_clustered_empty_table", "ret_exprs": [], "ret_type": "", "variables": {"cluster_fields": "", "operator": "", "schema_fields": "", "time_partitioning": ""}, "variables_p": {"cluster_fields": [["str", 0.7608701688620204], ["List[str]", 0.16401277164902955], ["Dict[str, str]", 0.07511705948895]], "operator": [["str", 0.17775645450120503], ["Dict[str, Any]", 0.12383764792829978], ["Set[str]", 0.10574246950201928], ["int", 0.100211081265347], ["dict", 0.09538928463857319]], "schema_fields": [["str", 0.7608701688620204], ["List[str]", 0.16401277164902955], ["Dict[str, str]", 0.07511705948895]], "time_partitioning": [["str", 0.4894172634800463], ["list", 0.12966414086317407], ["Dict[str, Tuple[str, str]]", 0.09929489632792608], ["Type[bytes]", 0.09418852826037824], ["Type[Dict[str, int]]", 0.08985556105420121]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [234, 41]], "fn_var_ln": {"operator": [[216, 8], [216, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION", "if_exists", "if_exists"], ["operator", "execute", "context", "MagicMock"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_create_existing_table", "params": {"caplog": "", "expected_error": "", "if_exists": "", "is_conflict": "", "log_msg": "", "mock_hook": "", "self": ""}, "params_descr": {"caplog": "", "expected_error": "", "if_exists": "", "is_conflict": "", "log_msg": "", "mock_hook": "", "self": ""}, "params_occur": {"caplog": [["log_msg", "caplog", "text"]], "expected_error": [["expected_error", "None"], ["pytest", "raises", "expected_error"]], "if_exists": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION", "if_exists", "if_exists"]], "is_conflict": [], "log_msg": [["log_msg", "None"], ["log_msg", "caplog", "text"]], "mock_hook": [["mock_hook", "return_value", "create_empty_table", "side_effect", "Conflict"], ["mock_hook", "return_value", "create_empty_table", "side_effect", "None"]], "self": []}, "params_p": {"args": [], "caplog": [["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.19380359030487182], ["str", 0.10295051731385477]], "expected_error": [["tests.basilisp.helpers.CompileFn", 0.25365017530919703], ["Sequence[str]", 0.08183515764805081]], "if_exists": [["str", 0.07989332108484705]], "is_conflict": [["dict", 0.09430015060638344], ["Callable[..., None]", 0.09430015060638344], ["str", 0.09430015060638344]], "kwargs": [], "log_msg": [["tests.basilisp.helpers.CompileFn", 0.3199093980902214], ["str", 0.09626153253046364], ["Optional[\"Game\"]", 0.09535769101776063], ["Optional[Dict[str, Any]]", 0.08966809087028559], ["Optional[List]", 0.08837572029392898]], "mock_hook": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.1969477685534013], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.17628323888005398]], "self": []}, "q_name": "TestBigQueryCreateEmptyTableOperator.test_create_existing_table", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.17775645450120503], ["Dict[str, Any]", 0.12383764792829978], ["Set[str]", 0.10574246950201928], ["int", 0.100211081265347], ["dict", 0.09538928463857319]]}}], "name": "TestBigQueryCreateEmptyTableOperator", "q_name": "TestBigQueryCreateEmptyTableOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[237, 0], [286, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[239, 4], [286, 9]], "fn_var_ln": {"operator": [[240, 8], [240, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "split_tablename", "return_value", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "table_resource", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "None", "TEST_GCS_BUCKET", "source_object", "source_object", "TEST_GCS_DATA", "TEST_SOURCE_FORMAT", "True", "None", "False", "False", "None", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.9089026828885951]], "self": []}, "q_name": "TestBigQueryCreateExternalTableOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["pandas.DataFrame", 0.18873829079094293], ["str", 0.176387742311585], ["Dict[str, Any]", 0.15569524945816926], ["dict", 0.15041417539304588], ["int", 0.08059167244505194]]}}], "name": "TestBigQueryCreateExternalTableOperator", "q_name": "TestBigQueryCreateExternalTableOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[289, 0], [302, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 4], [302, 9]], "fn_var_ln": {"operator": [[292, 8], [292, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryDeleteDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"], ["operator", "execute", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.825824519562894], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.08646692490212018]], "self": []}, "q_name": "TestBigQueryDeleteDatasetOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.3087565104564381], ["Dict[str, str]", 0.18143921809411598], ["dict", 0.10222599025391989], ["Dict[str, int]", 0.09949498843397268], ["List[str]", 0.09261890161439046]]}}], "name": "TestBigQueryDeleteDatasetOperator", "q_name": "TestBigQueryDeleteDatasetOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[305, 0], [355, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[307, 4], [322, 9]], "fn_var_ln": {"operator": [[308, 8], [308, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "create_empty_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "dataset_reference", "exists_ok", "False"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7142006371143819], ["mock.Mock", 0.17381020664344046]], "self": []}, "q_name": "TestBigQueryCreateEmptyDatasetOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.4540910777790059], ["dict", 0.14368954408128756], ["list", 0.1006552623664435], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08931160737703987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[337, 4], [355, 41]], "fn_var_ln": {"operator": [[338, 8], [338, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "if_exists", "if_exists"], ["operator", "execute", "context", "MagicMock"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_create_empty_dataset", "params": {"caplog": "", "expected_error": "", "if_exists": "", "is_conflict": "", "log_msg": "", "mock_hook": "", "self": ""}, "params_descr": {"caplog": "", "expected_error": "", "if_exists": "", "is_conflict": "", "log_msg": "", "mock_hook": "", "self": ""}, "params_occur": {"caplog": [["log_msg", "caplog", "text"]], "expected_error": [["expected_error", "None"], ["pytest", "raises", "expected_error"]], "if_exists": [["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "if_exists", "if_exists"]], "is_conflict": [], "log_msg": [["log_msg", "None"], ["log_msg", "caplog", "text"]], "mock_hook": [["mock_hook", "return_value", "create_empty_dataset", "side_effect", "Conflict"], ["mock_hook", "return_value", "create_empty_dataset", "side_effect", "None"]], "self": []}, "params_p": {"args": [], "caplog": [["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.19907733226138066]], "expected_error": [["tests.basilisp.helpers.CompileFn", 0.2831037836814755], ["Sequence[str]", 0.09487340405538291]], "if_exists": [["Dict[str, Any]", 0.1995207717975257], ["Callable[[List, bool], None]", 0.11217143543982983], ["str", 0.09915694686393943]], "is_conflict": [["dict", 0.1017364998809115], ["Callable[..., None]", 0.1017364998809115], ["str", 0.1017364998809115]], "kwargs": [], "log_msg": [["tests.basilisp.helpers.CompileFn", 0.31499336651748455], ["str", 0.09376699389018923], ["Optional[List]", 0.09264650063969387], ["Optional[\"Game\"]", 0.09212432446023797], ["Optional[Dict[str, Any]]", 0.0902893744685872]], "mock_hook": [["unittesmock.MagicMock", 0.4918996075511086], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09512278375138382]], "self": []}, "q_name": "TestBigQueryCreateEmptyDatasetOperator.test_create_empty_dataset", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.4540910777790059], ["dict", 0.14368954408128756], ["list", 0.1006552623664435], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08931160737703987]]}}], "name": "TestBigQueryCreateEmptyDatasetOperator", "q_name": "TestBigQueryCreateEmptyDatasetOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[358, 0], [368, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[360, 4], [368, 9]], "fn_var_ln": {"operator": [[361, 8], [361, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryGetDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "get_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7848573821816205]], "self": []}, "q_name": "TestBigQueryGetDatasetOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.26227060016447373], ["int", 0.18283192604109355], ["List[str]", 0.10330590214122222], ["Dict[str, Any]", 0.09577946192312849]]}}], "name": "TestBigQueryGetDatasetOperator", "q_name": "TestBigQueryGetDatasetOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[371, 0], [390, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[373, 4], [390, 9]], "fn_var_ln": {"operator": [[375, 8], [375, 16]], "table_resource": [[374, 8], [374, 22]]}, "fn_var_occur": {"operator": [["operator", "BigQueryUpdateTableOperator", "table_resource", "table_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "execute", "context", "MagicMock"]], "table_resource": [["operator", "BigQueryUpdateTableOperator", "table_resource", "table_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table", "assert_called_once_with", "table_resource", "table_resource", "fields", "None", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "update_table", "assert_called_once_with", "table_resource", "table_resource", "fields", "None", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.43663467520023747], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.18488131339313227]], "self": []}, "q_name": "TestBigQueryUpdateTableOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "table_resource": ""}, "variables_p": {"operator": [["str", 0.3392742987434329], ["int", 0.17663367772714406], ["Dict[str, int]", 0.11160502271829606], ["Dict[Any, Tuple[Any, Any]]", 0.0815001753578786]], "table_resource": [["dict", 0.10441343606530296], ["str", 0.09346013584022039]]}}], "name": "TestBigQueryUpdateTableOperator", "q_name": "TestBigQueryUpdateTableOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[393, 0], [419, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[395, 4], [419, 9]], "fn_var_ln": {"operator": [[403, 8], [403, 16]], "schema_field_updates": [[396, 8], [396, 28]]}, "fn_var_occur": {"operator": [["operator", "BigQueryUpdateTableSchemaOperator", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "execute", "context", "MagicMock"]], "schema_field_updates": [["operator", "BigQueryUpdateTableSchemaOperator", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table_schema", "assert_called_once_with", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "update_table_schema", "assert_called_once_with", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 1.0]], "self": []}, "q_name": "TestBigQueryUpdateTableSchemaOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "schema_field_updates": ""}, "variables_p": {"operator": [["tests.models.test_base.DummyModel", 0.176177702468723], ["Union[Literal, str]", 0.09777667204656836], ["dict", 0.09342471095656135], ["int", 0.08551666534332314]], "schema_field_updates": [["Dict[str, str]", 0.14993657204117758], ["datetime.timedelta", 0.09853623400972543], ["List[str]", 0.09179529522462712]]}}], "name": "TestBigQueryUpdateTableSchemaOperator", "q_name": "TestBigQueryUpdateTableSchemaOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[422, 0], [436, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[424, 4], [436, 9]], "fn_var_ln": {"dataset_resource": [[425, 8], [425, 24]], "operator": [[426, 8], [426, 16]]}, "fn_var_occur": {"dataset_resource": [["operator", "BigQueryPatchDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "patch_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"]], "operator": [["operator", "BigQueryPatchDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "execute", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "patch_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8054791072117087]], "self": []}, "q_name": "TestBigQueryPatchDatasetOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"dataset_resource": "", "operator": ""}, "variables_p": {"dataset_resource": [["str", 0.0979614597795137]], "operator": [["str", 0.0979614597795137]]}}], "name": "TestBigQueryPatchDatasetOperator", "q_name": "TestBigQueryPatchDatasetOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[439, 0], [456, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[441, 4], [456, 9]], "fn_var_ln": {"dataset_resource": [[442, 8], [442, 24]], "operator": [[443, 8], [443, 16]]}, "fn_var_occur": {"dataset_resource": [["operator", "BigQueryUpdateDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "fields", "list", "dataset_resource", "keys"]], "operator": [["operator", "BigQueryUpdateDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "update_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "fields", "list", "dataset_resource", "keys"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7789944800406443]], "self": []}, "q_name": "TestBigQueryUpdateDatasetOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"dataset_resource": "", "operator": ""}, "variables_p": {"dataset_resource": [["int", 0.1785868472726077], ["dict", 0.10456128095847067]], "operator": [["int", 0.1785868472726077], ["dict", 0.10456128095847067]]}}], "name": "TestBigQueryUpdateDatasetOperator", "q_name": "TestBigQueryUpdateDatasetOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[459, 0], [793, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[460, 4], [464, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryOperator.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[467, 4], [512, 9]], "fn_var_ln": {"encryption_configuration": [[468, 8], [468, 32]], "operator": [[470, 8], [470, 16]]}, "fn_var_occur": {"encryption_configuration": [["operator", "BigQueryExecuteQueryOperator", "task_id", "TASK_ID", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "gcp_conn_id", "udf_config", "None", "use_legacy_sql", "True", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "encryption_configuration"], ["mock_hook", "return_value", "run_query", "assert_called_once_with", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "udf_config", "None", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "encryption_configuration"]], "operator": [["operator", "BigQueryExecuteQueryOperator", "task_id", "TASK_ID", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "gcp_conn_id", "udf_config", "None", "use_legacy_sql", "True", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "encryption_configuration"], ["operator", "execute", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "run_query", "assert_called_once_with", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "udf_config", "None", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "encryption_configuration"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8030160660060488]], "self": []}, "q_name": "TestBigQueryOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"encryption_configuration": "", "operator": ""}, "variables_p": {"encryption_configuration": [["tuple", 0.12899192958092126], ["Dict[str, dict]", 0.08127373906058503], ["list", 0.07312831013690903]], "operator": [["tuple", 0.12899192958092126], ["Dict[str, dict]", 0.08127373906058503], ["list", 0.07312831013690903]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[515, 4], [584, 9]], "fn_var_ln": {"operator": [[516, 8], [516, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryExecuteQueryOperator", "task_id", "TASK_ID", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "gcp_conn_id", "udf_config", "None", "use_legacy_sql", "True", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "None"], ["operator", "execute", "MagicMock"]]}, "name": "test_execute_list", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "run_query", "assert_has_calls", "mock", "call", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "udf_config", "None", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "None", "mock", "call", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "udf_config", "None", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7843627274080662]], "self": []}, "q_name": "TestBigQueryOperator.test_execute_list", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["tuple", 0.12899192958092126], ["Dict[str, dict]", 0.08127373906058503], ["list", 0.07312831013690903]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[587, 4], [611, 41]], "fn_var_ln": {"operator": [[588, 8], [588, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryExecuteQueryOperator", "task_id", "TASK_ID", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "gcp_conn_id", "udf_config", "None", "use_legacy_sql", "True", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None"], ["operator", "execute", "MagicMock"]]}, "name": "test_execute_bad_type", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.Mock", 1.0]], "self": []}, "q_name": "TestBigQueryOperator.test_execute_bad_type", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["tuple", 0.12899192958092126], ["Dict[str, dict]", 0.08127373906058503], ["list", 0.07312831013690903]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[614, 4], [646, 43]], "fn_var_ln": {"operator": [[622, 8], [622, 16]], "ti": [[615, 8], [615, 10]]}, "fn_var_occur": {"operator": [["operator", "ti", "task"], ["operator", "execute", "MagicMock"], ["isinstance", "operator", "sql", "str"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql", "schema_update_options", "None"], ["operator", "ti", "task"], ["ti", "render_templates"], ["isinstance", "ti", "task", "sql", "str"]]}, "name": "test_bigquery_operator_defaults", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql", "schema_update_options", "None"]], "mock_hook": [["mock_hook", "return_value", "run_query", "assert_called_once_with", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "udf_config", "None", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "None", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "None"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["tests.async_mock.Mock", 0.8767991539877708]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.6295440299201548]], "self": []}, "q_name": "TestBigQueryOperator.test_bigquery_operator_defaults", "ret_exprs": [], "ret_type": "", "variables": {"operator": "", "ti": ""}, "variables_p": {"operator": [["DefaultDict[Any, List[Any]]", 0.10538520286252157]], "ti": [["str", 0.20509505299053438], ["list", 0.09724265591361339], ["int", 0.09437144201763371], ["dict", 0.0940294089607566], ["Dict[str, Any]", 0.09383871448938444], ["bool", 0.09373966484527176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[649, 4], [683, 87]], "fn_var_ln": {"dag": [[664, 8], [664, 11]], "serialized_dag": [[661, 8], [661, 22]], "simple_task": [[665, 8], [665, 19]], "ti": [[654, 8], [654, 10]], "url": [[682, 8], [682, 11]]}, "fn_var_occur": {"dag": [["dag", "SerializedDAG", "from_dict", "serialized_dag"], ["simple_task", "dag", "task_dict", "TASK_ID"]], "serialized_dag": [["serialized_dag", "dag_maker", "get_serialized_data"], ["dag", "SerializedDAG", "from_dict", "serialized_dag"]], "simple_task": [["simple_task", "dag", "task_dict", "TASK_ID"], ["getattr", "simple_task"], ["isinstance", "list", "simple_task", "operator_extra_links", "BigQueryConsoleLink"], ["url", "simple_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "xcom_push", "TEST_FULL_JOB_ID"], ["url", "simple_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"]], "url": [["url", "simple_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"], ["url", "TEST_FULL_JOB_ID"]]}, "name": "test_bigquery_operator_extra_serialized_field_when_single_query", "params": {"create_task_instance_of_operator": "", "dag_maker": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "dag_maker": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"]], "dag_maker": [["serialized_dag", "dag_maker", "get_serialized_data"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [], "dag_maker": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryOperator.test_bigquery_operator_extra_serialized_field_when_single_query", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "serialized_dag": "", "simple_task": "", "ti": "", "url": ""}, "variables_p": {"dag": [["int", 0.4166572258166352], ["str", 0.3719018865824968]], "serialized_dag": [["int", 0.1880630245178962], ["raiden.utils.Any", 0.08691495892513802]], "simple_task": [["Dict[Any, str]", 0.2756819854488174], ["dict", 0.0918939951496058], ["Dict[str, Dict[str, int]]", 0.09169031276333524]], "ti": [["str", 0.20677528243823], ["int", 0.18924727461466828], ["bool", 0.09323850636493818]], "url": [["str", 0.9203072515012585]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[686, 4], [730, 9]], "fn_var_ln": {"dag": [[701, 8], [701, 11]], "serialized_dag": [[698, 8], [698, 22]], "simple_task": [[702, 8], [702, 19]], "ti": [[691, 8], [691, 10]]}, "fn_var_occur": {"dag": [["dag", "SerializedDAG", "from_dict", "serialized_dag"], ["simple_task", "dag", "task_dict", "TASK_ID"]], "serialized_dag": [["serialized_dag", "dag_maker", "get_serialized_data"], ["dag", "SerializedDAG", "from_dict", "serialized_dag"]], "simple_task": [["simple_task", "dag", "task_dict", "TASK_ID"], ["getattr", "simple_task"], ["isinstance", "list", "simple_task", "operator_extra_links", "BigQueryConsoleIndexableLink"], ["simple_task", "operator_extra_link_dict", "keys"], ["TEST_FULL_JOB_ID", "simple_task", "get_extra_links", "ti"], ["TEST_FULL_JOB_ID_2", "simple_task", "get_extra_links", "ti"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID", "TEST_FULL_JOB_ID_2"], ["TEST_FULL_JOB_ID", "simple_task", "get_extra_links", "ti"], ["TEST_FULL_JOB_ID_2", "simple_task", "get_extra_links", "ti"]]}, "name": "test_bigquery_operator_extra_serialized_field_when_multiple_queries", "params": {"create_task_instance_of_operator": "", "dag_maker": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "dag_maker": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"]], "dag_maker": [["serialized_dag", "dag_maker", "get_serialized_data"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [], "dag_maker": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryOperator.test_bigquery_operator_extra_serialized_field_when_multiple_queries", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "serialized_dag": "", "simple_task": "", "ti": ""}, "variables_p": {"dag": [["int", 0.4166572258166352], ["str", 0.3719018865824968]], "serialized_dag": [["int", 0.1880630245178962], ["raiden.utils.Any", 0.08691495892513802]], "simple_task": [["Dict[Any, str]", 0.28179908715138996], ["Dict[str, Dict[str, int]]", 0.10548453589510838], ["dict", 0.09393302905046332]], "ti": [["str", 0.20677528243823], ["int", 0.18924727461466828], ["bool", 0.09323850636493818]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[733, 4], [744, 80]], "fn_var_ln": {"bigquery_task": [[742, 8], [742, 21]], "ti": [[736, 8], [736, 10]]}, "fn_var_occur": {"bigquery_task": [["bigquery_task", "ti", "task"], ["bigquery_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql"], ["bigquery_task", "ti", "task"], ["bigquery_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"]]}, "name": "test_bigquery_operator_extra_link_when_missing_job_id", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql"]], "mock_hook": [], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["aiohttp.test_utils.TestServer", 0.09213271711558949]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.36031724720216435], ["mock.Mock", 0.09448556161672526]], "self": []}, "q_name": "TestBigQueryOperator.test_bigquery_operator_extra_link_when_missing_job_id", "ret_exprs": [], "ret_type": "", "variables": {"bigquery_task": "", "ti": ""}, "variables_p": {"bigquery_task": [["list", 0.08321574621536555]], "ti": [["str", 0.20509505299053438], ["list", 0.09724265591361339], ["int", 0.09437144201763371], ["dict", 0.0940294089607566], ["Dict[str, Any]", 0.09383871448938444], ["bool", 0.09373966484527176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[747, 4], [766, 9]], "fn_var_ln": {"bigquery_task": [[759, 8], [759, 21]], "ti": [[752, 8], [752, 10]]}, "fn_var_occur": {"bigquery_task": [["bigquery_task", "ti", "task"], ["TEST_FULL_JOB_ID", "bigquery_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["bigquery_task", "ti", "task"], ["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID"], ["TEST_FULL_JOB_ID", "bigquery_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"]]}, "name": "test_bigquery_operator_extra_link_when_single_query", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"]], "mock_hook": [], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.10496324853274229], ["unittesmock.MagicMock", 0.08779557601824406]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.4099144239067601], ["mock.MagicMock", 0.2571235806198214], ["mock.Mock", 0.19904860887418457]], "self": []}, "q_name": "TestBigQueryOperator.test_bigquery_operator_extra_link_when_single_query", "ret_exprs": [], "ret_type": "", "variables": {"bigquery_task": "", "ti": ""}, "variables_p": {"bigquery_task": [["tests.components.withings.common.WebhookResponse", 0.19017283651043024], ["str", 0.11432901967601555], ["Dict[str, Any]", 0.11238024205688503], ["Dict[str, dict]", 0.10402615532954586], ["DefaultDict[Any, None]", 0.09784427996198856]], "ti": [["str", 0.20677528243823], ["int", 0.18924727461466828], ["bool", 0.09323850636493818]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[769, 4], [793, 9]], "fn_var_ln": {"bigquery_task": [[779, 8], [779, 21]], "ti": [[772, 8], [772, 10]]}, "fn_var_occur": {"bigquery_task": [["bigquery_task", "ti", "task"], ["bigquery_task", "operator_extra_link_dict", "keys"], ["TEST_FULL_JOB_ID", "bigquery_task", "get_extra_links", "ti"], ["TEST_FULL_JOB_ID_2", "bigquery_task", "get_extra_links", "ti"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["bigquery_task", "ti", "task"], ["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID", "TEST_FULL_JOB_ID_2"], ["TEST_FULL_JOB_ID", "bigquery_task", "get_extra_links", "ti"], ["TEST_FULL_JOB_ID_2", "bigquery_task", "get_extra_links", "ti"]]}, "name": "test_bigquery_operator_extra_link_when_multiple_query", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"]], "mock_hook": [], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.10496324853274229], ["unittesmock.MagicMock", 0.08779557601824406]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.4099144239067601], ["mock.MagicMock", 0.2571235806198214], ["mock.Mock", 0.19904860887418457]], "self": []}, "q_name": "TestBigQueryOperator.test_bigquery_operator_extra_link_when_multiple_query", "ret_exprs": [], "ret_type": "", "variables": {"bigquery_task": "", "ti": ""}, "variables_p": {"bigquery_task": [["raiden.utils.list", 0.08742852774931294]], "ti": [["str", 0.20677528243823], ["int", 0.18924727461466828], ["bool", 0.09323850636493818]]}}], "name": "TestBigQueryOperator", "q_name": "TestBigQueryOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[796, 0], [947, 71]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[799, 4], [823, 9]], "fn_var_ln": {"max_results": [[800, 8], [800, 19]], "operator": [[802, 8], [802, 16]], "selected_fields": [[801, 8], [801, 23]]}, "fn_var_occur": {"max_results": [["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock_hook", "return_value", "list_rows", "assert_called_once_with", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION"]], "operator": [["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["operator", "execute", "None"]], "selected_fields": [["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock_hook", "return_value", "list_rows", "assert_called_once_with", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION"]]}, "name": "test_execute", "params": {"as_dict": "", "mock_hook": "", "self": ""}, "params_descr": {"as_dict": "", "mock_hook": "", "self": ""}, "params_occur": {"as_dict": [["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"]], "mock_hook": [["mock_hook", "assert_called_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "None", "use_legacy_sql", "False"], ["mock_hook", "return_value", "list_rows", "assert_called_once_with", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION"]], "self": []}, "params_p": {"args": [], "as_dict": [], "kwargs": [], "mock_hook": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.587821449905434], ["unittesmock.MagicMock", 0.10838075250180466]], "self": []}, "q_name": "TestBigQueryGetDataOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"max_results": "", "operator": "", "selected_fields": ""}, "variables_p": {"max_results": [["list", 0.11194511780810029], ["Dict[str, Any]", 0.10127800881427677], ["dict", 0.099433669606932], ["str", 0.09759165473518763], ["raiden.utils.Dict[raiden.utils.TokenAddress, raiden.utils.ProportionalFeeAmount]", 0.09492445085610227]], "operator": [["Dict[str, Any]", 0.2354667516358671], ["Dict[str, str]", 0.10072231618108762], ["str", 0.08933070186590622]], "selected_fields": [["str", 0.3078619198165942], ["Dict[str, str]", 0.2933125853721321], ["bool", 0.09995090757491372], ["List[str]", 0.09589424704604493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[826, 4], [839, 9]], "fn_var_ln": {"operator": [[827, 8], [827, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "use_legacy_sql", "False"], ["operator", "generate_query", "hook", "mock_hook", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"]]}, "name": "test_generate_query__with_project_id", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["operator", "generate_query", "hook", "mock_hook", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.9019570638214862], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09804293617851387]], "self": []}, "q_name": "TestBigQueryGetDataOperator.test_generate_query__with_project_id", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["Dict[str, Any]", 0.2354667516358671], ["Dict[str, str]", 0.10072231618108762], ["str", 0.08933070186590622]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[842, 4], [855, 9]], "fn_var_ln": {"hook_project_id": [[843, 8], [843, 23]], "operator": [[844, 8], [844, 16]]}, "fn_var_occur": {"hook_project_id": [["hook_project_id", "mock_hook", "project_id"], ["operator", "generate_query", "hook", "mock_hook", "hook_project_id", "TEST_DATASET", "TEST_TABLE_ID"]], "operator": [["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "use_legacy_sql", "False"], ["operator", "generate_query", "hook", "mock_hook", "hook_project_id", "TEST_DATASET", "TEST_TABLE_ID"]]}, "name": "test_generate_query__without_project_id", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["hook_project_id", "mock_hook", "project_id"], ["operator", "generate_query", "hook", "mock_hook", "hook_project_id", "TEST_DATASET", "TEST_TABLE_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7686862696258738]], "self": []}, "q_name": "TestBigQueryGetDataOperator.test_generate_query__without_project_id", "ret_exprs": [], "ret_type": "", "variables": {"hook_project_id": "", "operator": ""}, "variables_p": {"hook_project_id": [["str", 0.8985038767519075], ["int", 0.10149612324809254]], "operator": [["Dict[str, Any]", 0.2354667516358671], ["Dict[str, str]", 0.10072231618108762], ["str", 0.08933070186590622]]}}, {"docstring": {"func": "Asserts that a task is deferred and a BigQuerygetDataTrigger will be fired", "long_descr": "when the BigQueryGetDataOperator is executed with deferrable=True.", "ret": null}, "fn_lc": [[858, 4], [882, 52]], "fn_var_ln": {"ti": [[865, 8], [865, 10]]}, "fn_var_occur": {"ti": [["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "selected_fields", "deferrable", "True", "use_legacy_sql", "False"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_get_data_operator_async_with_selected_fields", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "selected_fields", "deferrable", "True", "use_legacy_sql", "False"]], "mock_hook": [], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.4207867718958454], ["mock.Mock", 0.08956502061088775]], "self": []}, "q_name": "TestBigQueryGetDataOperator.test_bigquery_get_data_operator_async_with_selected_fields", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["str", 0.4113751154777556], ["List[str]", 0.11677853537530333], ["Dict[str, Callable]", 0.10424692861393671], ["datetime.date", 0.09397909250908051], ["raiden.utils.Any", 0.0846566036242322]]}}, {"docstring": {"func": "Asserts that a task is deferred and a BigQueryGetDataTrigger will be fired", "long_descr": "when the BigQueryGetDataOperator is executed with deferrable=True.", "ret": null}, "fn_lc": [[886, 4], [910, 52]], "fn_var_ln": {"ti": [[893, 8], [893, 10]]}, "fn_var_occur": {"ti": [["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_get_data_operator_async_without_selected_fields", "params": {"as_dict": "", "create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"as_dict": "", "create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"as_dict": [["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"]], "create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"]], "mock_hook": [], "self": []}, "params_p": {"args": [], "as_dict": [], "create_task_instance_of_operator": [], "kwargs": [], "mock_hook": [["Callable", 0.21978775585263882]], "self": []}, "q_name": "TestBigQueryGetDataOperator.test_bigquery_get_data_operator_async_without_selected_fields", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["str", 0.4113751154777556], ["List[str]", 0.11677853537530333], ["Dict[str, Callable]", 0.10424692861393671], ["datetime.date", 0.09397909250908051], ["raiden.utils.Any", 0.0846566036242322]]}}, {"docstring": {"func": "Tests that an AirflowException is raised in case of error event", "long_descr": null, "ret": null}, "fn_lc": [[913, 4], [929, 13]], "fn_var_ln": {"operator": [[916, 8], [916, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryGetDataOperator", "task_id", "dataset_id", "TEST_DATASET", "table_id", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_get_data_operator_execute_failure", "params": {"as_dict": "", "self": ""}, "params_descr": {"as_dict": "", "self": ""}, "params_occur": {"as_dict": [["operator", "BigQueryGetDataOperator", "task_id", "dataset_id", "TEST_DATASET", "table_id", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"]], "self": []}, "params_p": {"args": [], "as_dict": [["str", 0.19392766603612255], ["Callable", 0.1827278610136301], ["Iterable[str]", 0.09109905992241157]], "kwargs": [], "self": []}, "q_name": "TestBigQueryGetDataOperator.test_bigquery_get_data_operator_execute_failure", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.4130245174833678], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10054005788143155], ["Dict[str, Union[Any, Any, Any]]", 0.0954206759669706], ["Dict[str, str]", 0.09353910367606315], ["int", 0.08954945771136735]]}}, {"docstring": {"func": "Asserts that exception is raised with correct expected exception message", "long_descr": null, "ret": null}, "fn_lc": [[932, 4], [947, 71]], "fn_var_ln": {"operator": [[935, 8], [935, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryGetDataOperator", "task_id", "dataset_id", "TEST_DATASET", "table_id", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock", "patch", "object", "operator", "log", "mock_log_info"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_get_data_op_execute_complete_with_records", "params": {"as_dict": "", "self": ""}, "params_descr": {"as_dict": "", "self": ""}, "params_occur": {"as_dict": [["operator", "BigQueryGetDataOperator", "task_id", "dataset_id", "TEST_DATASET", "table_id", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"]], "self": []}, "params_p": {"args": [], "as_dict": [["str", 0.174887381902942], ["mock.Mock", 0.11245877429450968]], "kwargs": [], "self": []}, "q_name": "TestBigQueryGetDataOperator.test_bigquery_get_data_op_execute_complete_with_records", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.4130245174833678], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10054005788143155], ["Dict[str, Union[Any, Any, Any]]", 0.0954206759669706], ["Dict[str, str]", 0.09353910367606315], ["int", 0.08954945771136735]]}}], "name": "TestBigQueryGetDataOperator", "q_name": "TestBigQueryGetDataOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[950, 0], [965, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[952, 4], [965, 9]], "fn_var_ln": {"deletion_dataset_table": [[954, 8], [954, 30]], "ignore_if_missing": [[953, 8], [953, 25]], "operator": [[956, 8], [956, 16]]}, "fn_var_occur": {"deletion_dataset_table": [["deletion_dataset_table", "TEST_DATASET", "TEST_TABLE_ID"], ["operator", "BigQueryDeleteTableOperator", "task_id", "TASK_ID", "deletion_dataset_table", "deletion_dataset_table", "ignore_if_missing", "ignore_if_missing"], ["mock_hook", "return_value", "delete_table", "assert_called_once_with", "table_id", "deletion_dataset_table", "not_found_ok", "ignore_if_missing"]], "ignore_if_missing": [["ignore_if_missing", "True"], ["operator", "BigQueryDeleteTableOperator", "task_id", "TASK_ID", "deletion_dataset_table", "deletion_dataset_table", "ignore_if_missing", "ignore_if_missing"], ["mock_hook", "return_value", "delete_table", "assert_called_once_with", "table_id", "deletion_dataset_table", "not_found_ok", "ignore_if_missing"]], "operator": [["operator", "BigQueryDeleteTableOperator", "task_id", "TASK_ID", "deletion_dataset_table", "deletion_dataset_table", "ignore_if_missing", "ignore_if_missing"], ["operator", "execute", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "delete_table", "assert_called_once_with", "table_id", "deletion_dataset_table", "not_found_ok", "ignore_if_missing"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.8994950093555123]], "self": []}, "q_name": "TestBigQueryTableDeleteOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"deletion_dataset_table": "", "ignore_if_missing": "", "operator": ""}, "variables_p": {"deletion_dataset_table": [["str", 0.30343271227312363], ["Dict[str, Tuple]", 0.12760893391146141], ["Dict[int, str]", 0.1097573372884649], ["Dict[str, str]", 0.10915988081190546], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09193130184044798], ["google.protobuf.descriptor.FieldDescriptor", 0.09099906727905419], ["set", 0.08757693715861772], ["Dict[Type[Any], Any]", 0.0795338294369248]], "ignore_if_missing": [["str", 0.198679493273887], ["int", 0.11383678305162]], "operator": [["int", 0.36331083872506575], ["Dict[str, Any]", 0.1077848835800747], ["str", 0.08873591153694958]]}}], "name": "TestBigQueryTableDeleteOperator", "q_name": "TestBigQueryTableDeleteOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[968, 0], [980, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[970, 4], [980, 9]], "fn_var_ln": {"operator": [[971, 8], [971, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryGetDatasetTablesOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "max_results"], ["operator", "execute", "None"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "get_dataset_tables", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "max_results"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.9999999999999998]], "self": []}, "q_name": "TestBigQueryGetDatasetTablesOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.28581392721716803], ["int", 0.21382582291698185], ["List[str]", 0.21340749853630114], ["Dict[str, Any]", 0.09799887068859776]]}}], "name": "TestBigQueryGetDatasetTablesOperator", "q_name": "TestBigQueryGetDatasetTablesOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[991, 0], [1001, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[993, 4], [1001, 45]], "fn_var_ln": {"operator": [[999, 8], [999, 16]]}, "fn_var_occur": {"operator": [["operator", "operator_class", "task_id", "TASK_ID", "gcp_conn_id", "kwargs"], ["operator", "get_db_hook"]]}, "name": "test_get_db_hook", "params": {"kwargs": "", "mock_get_db_hook": "", "operator_class": "", "self": ""}, "params_descr": {"kwargs": "", "mock_get_db_hook": "", "operator_class": "", "self": ""}, "params_occur": {"kwargs": [["operator", "operator_class", "task_id", "TASK_ID", "gcp_conn_id", "kwargs"]], "mock_get_db_hook": [["mock_get_db_hook", "assert_called_once"]], "operator_class": [["operator", "operator_class", "task_id", "TASK_ID", "gcp_conn_id", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_db_hook": [["str", 0.09718849315302712]], "operator_class": [["dict", 0.109022073903753], ["bool", 0.10470961881715125], ["int", 0.10470961881715125], ["Dict[str, Any]", 0.09397127038071405]], "self": []}, "q_name": "TestBigQueryCheckOperators.test_get_db_hook", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.52107917108264], ["int", 0.10214644531503995], ["Dict[str, Any]", 0.09648259258174], ["bool", 0.09296008322967177], ["dict", 0.09090575157694496]]}}], "name": "TestBigQueryCheckOperators", "q_name": "TestBigQueryCheckOperators", "variables": {}, "variables_p": {}}, {"cls_lc": [[1004, 0], [1017, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1006, 4], [1017, 9]], "fn_var_ln": {"operator": [[1007, 8], [1007, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryUpsertTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_resource", "TEST_TABLE_RESOURCES", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "execute", "context", "MagicMock"]]}, "name": "test_execute", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "run_table_upsert", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_resource", "TEST_TABLE_RESOURCES"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.885772501244066]], "self": []}, "q_name": "TestBigQueryUpsertTableOperator.test_execute", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.19801146421744453], ["dict", 0.10660812921343908], ["Dict[str, str]", 0.10357712033016872], ["Dict[str, Union[Any, str]]", 0.10056604347621859], ["Union[Literal[False], Literal[True]]", 0.09760092591200428], ["Dict[str, List[str]]", 0.09626090048153108], ["str", 0.09016897534030066]]}}], "name": "TestBigQueryUpsertTableOperator", "q_name": "TestBigQueryUpsertTableOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[1020, 0], [1568, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1022, 4], [1055, 36]], "fn_var_ln": {"configuration": [[1027, 8], [1027, 21]], "hash_": [[1024, 8], [1024, 13]], "job_id": [[1023, 8], [1023, 14]], "op": [[1036, 8], [1036, 10]], "real_job_id": [[1025, 8], [1025, 19]], "result": [[1043, 8], [1043, 14]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["result", "op", "execute", "context", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["result", "real_job_id"]], "result": [["result", "op", "execute", "context", "MagicMock"], ["result", "real_job_id"]]}, "name": "test_execute_query_success", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.3914528665596774]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_execute_query_success", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job_id": "", "op": "", "real_job_id": "", "result": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "result": [["mock._Call", 0.24334902896684993], ["Dict[str, str]", 0.1813641629511209], ["Dict[str, List[Any]]", 0.12155250900084393], ["Dict[str, Any]", 0.09683924173316856], ["Optional[bytes]", 0.09218704797384869], ["Dict[Any, Dict[str, str]]", 0.08767840329186037], ["list", 0.084200975353009]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1058, 4], [1096, 36]], "fn_var_ln": {"configuration": [[1063, 8], [1063, 21]], "hash_": [[1060, 8], [1060, 13]], "job_id": [[1059, 8], [1059, 14]], "mock_configuration": [[1069, 8], [1069, 26]], "op": [[1077, 8], [1077, 10]], "real_job_id": [[1061, 8], [1061, 19]], "result": [[1084, 8], [1084, 14]]}, "fn_var_occur": {"configuration": [["mock_configuration", "configuration"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "mock_configuration": [["mock_configuration", "configuration"], ["mock_hook", "return_value", "insert_job", "return_value", "to_api_repr", "return_value", "mock_configuration"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["result", "op", "execute", "context", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["result", "real_job_id"]], "result": [["result", "op", "execute", "context", "MagicMock"], ["result", "real_job_id"]]}, "name": "test_execute_copy_success", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "insert_job", "return_value", "to_api_repr", "return_value", "mock_configuration"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7012779668913469]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_execute_copy_success", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job_id": "", "mock_configuration": "", "op": "", "real_job_id": "", "result": ""}, "variables_p": {"configuration": [["List[Dict[str, str]]", 0.1605998832986402], ["int", 0.09761210209334853], ["Dict[str, Any]", 0.09117700295885818]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "mock_configuration": [["list", 0.19061318424206264], ["List[Dict[str, str]]", 0.18596644437231635], ["Optional[bytes]", 0.1477975236941308], ["Dict[str, int]", 0.11354425492709058], ["List[str]", 0.10648581977078223], ["Tuple[int, int]", 0.10108304809637947], ["Dict[str, Union[float, str]]", 0.07961406962200147]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "result": [["mock._Call", 0.24334902896684993], ["Dict[str, str]", 0.1813641629511209], ["Dict[str, List[Any]]", 0.12155250900084393], ["Dict[str, Any]", 0.09683924173316856], ["Optional[bytes]", 0.09218704797384869], ["Dict[Any, Dict[str, str]]", 0.08767840329186037], ["list", 0.084200975353009]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1099, 4], [1132, 9]], "fn_var_ln": {"cancel_on_kill": [[1126, 8], [1126, 25]], "configuration": [[1104, 8], [1104, 21]], "hash_": [[1101, 8], [1101, 13]], "job_id": [[1100, 8], [1100, 14]], "op": [[1113, 8], [1113, 10]], "real_job_id": [[1102, 8], [1102, 19]]}, "fn_var_occur": {"cancel_on_kill": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "False"], ["op", "cancel_on_kill", "True"]], "configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "False"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "False"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "False"], ["op", "execute", "context", "MagicMock"], ["op", "on_kill"], ["op", "cancel_on_kill", "True"], ["op", "on_kill"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"]]}, "name": "test_on_kill", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "cancel_job", "assert_not_called"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7012779668913469]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_on_kill", "ret_exprs": [], "ret_type": "", "variables": {"cancel_on_kill": "", "configuration": "", "hash_": "", "job_id": "", "op": "", "real_job_id": ""}, "variables_p": {"cancel_on_kill": [["str", 0.5085989658796977], ["dict", 0.1949797244327715], ["float", 0.10898792874743608], ["bool", 0.09464158712756318]], "configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1136, 4], [1171, 9]], "fn_var_ln": {"configuration": [[1141, 8], [1141, 21]], "error_result": [[1149, 8], [1149, 29]], "hash_": [[1138, 8], [1138, 13]], "job_id": [[1148, 8], [1148, 23]], "op": [[1155, 8], [1155, 10]], "real_job_id": [[1139, 8], [1139, 19]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "True"]], "error_result": [["mock_job", "error_result", "False"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_job", "job_id", "real_job_id"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "True"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "True"], ["op", "execute", "context", "MagicMock"], ["op", "on_kill"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_job", "job_id", "real_job_id"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"]]}, "name": "test_on_kill_after_execution_timeout", "params": {"mock_hook": "", "mock_job": "", "self": ""}, "params_descr": {"mock_hook": "", "mock_job": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "mock_job"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"]], "mock_job": [["mock_job", "job_id", "real_job_id"], ["mock_job", "error_result", "False"], ["mock_job", "result", "side_effect", "AirflowTaskTimeout"], ["mock_hook", "return_value", "insert_job", "return_value", "mock_job"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.09246280156432782]], "mock_job": [["unittesmock.MagicMock", 0.6010044738371036], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09626881173581862]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_on_kill_after_execution_timeout", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "error_result": "", "hash_": "", "job_id": "", "op": "", "real_job_id": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "error_result": [["List[str]", 0.19613939764746782], ["Dict[str, Union[Any, Any]]", 0.11877470307583146], ["Pattern[bytes]", 0.10751451098212891], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.10488623491435964], ["Dict[str, str]", 0.09857845859095285], ["Set[str]", 0.09313369470277734], ["str", 0.092444344896949], ["int", 0.09085171359763265]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["str", 0.5609157728011116], ["taxonomy.db.models.base.EnumField", 0.09678088314902275], ["Pattern[str]", 0.08672191929881964]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["str", 0.49423914536235547], ["ClassVar[str]", 0.10838851434809507], ["cmk.utils.type_defs.UserId", 0.10702976045309222], ["int", 0.10241651594413809], ["bool", 0.09631429887860714]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1174, 4], [1196, 43]], "fn_var_ln": {"configuration": [[1179, 8], [1179, 21]], "hash_": [[1176, 8], [1176, 13]], "job_id": [[1175, 8], [1175, 14]], "op": [[1188, 8], [1188, 10]], "real_job_id": [[1177, 8], [1177, 19]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "True"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "execute", "context", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "True"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"]]}, "name": "test_execute_failure", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "True"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.6147153454614909]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_execute_failure", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job_id": "", "op": "", "real_job_id": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1199, 4], [1242, 36]], "fn_var_ln": {"configuration": [[1204, 8], [1204, 21]], "hash_": [[1201, 8], [1201, 13]], "job": [[1212, 8], [1212, 11]], "job_id": [[1200, 8], [1200, 14]], "op": [[1221, 8], [1221, 10]], "real_job_id": [[1202, 8], [1202, 19]], "result": [[1229, 8], [1229, 14]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job": [["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["mock_hook", "return_value", "get_job", "return_value", "job"], ["job", "result", "assert_called_once_with", "retry", "DEFAULT_RETRY", "timeout", "None"]], "job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"], ["result", "op", "execute", "context", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["result", "real_job_id"]], "result": [["result", "op", "execute", "context", "MagicMock"], ["job", "result", "assert_called_once_with", "retry", "DEFAULT_RETRY", "timeout", "None"], ["result", "real_job_id"]]}, "name": "test_execute_reattach", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "side_effect", "Conflict"], ["mock_hook", "return_value", "get_job", "return_value", "job"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7951381265165735], ["mock.Mock", 0.10234098668157872]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_execute_reattach", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job": "", "job_id": "", "op": "", "real_job_id": "", "result": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job": [["mock.Mock", 0.3435082994601418], ["unittesmock.MagicMock", 0.1588778021574357], ["str", 0.11063168385352662], ["Dict[str, str]", 0.08667824321845694], ["mode.utils.mocks.Mock", 0.08367195234554516]], "job_id": [["str", 0.3663874059686049], ["list", 0.2535120568714292], ["idom.utils.Ref[None]", 0.11168667054913603], ["List[int]", 0.10001091999594203]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["int", 0.3582475655639169], ["List[int]", 0.18334942368082324], ["idom.utils.Ref[None]", 0.0968827632682843], ["str", 0.09366725588701912], ["list", 0.0911105877819829], ["Pattern[str]", 0.08800717319404444]], "result": [["mock._Call", 0.21039670256052231], ["Dict[str, Union[int, str]]", 0.09955968942448669], ["Dict[str, Any]", 0.09895276252783256], ["jj.mock._remote_mock.RemoteMock", 0.09149730270638504]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1245, 4], [1284, 36]], "fn_var_ln": {"configuration": [[1250, 8], [1250, 21]], "hash_": [[1247, 8], [1247, 13]], "job": [[1257, 8], [1257, 11]], "job_id": [[1246, 8], [1246, 14]], "op": [[1264, 8], [1264, 10]], "real_job_id": [[1248, 8], [1248, 19]], "result": [[1272, 8], [1272, 14]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "force_rerun", "True"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job": [["job", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "insert_job", "return_value", "job"]], "job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "force_rerun", "True"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "force_rerun", "True"], ["result", "op", "execute", "context", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["result", "real_job_id"]], "result": [["result", "op", "execute", "context", "MagicMock"], ["result", "real_job_id"]]}, "name": "test_execute_force_rerun", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "job"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.09393026032452462]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_execute_force_rerun", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job": "", "job_id": "", "op": "", "real_job_id": "", "result": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job": [["bytes", 0.31642610535519156], ["mock.Mock", 0.28701029629824637], ["str", 0.07908853662695714], ["Dict[str, str]", 0.06820052953800648], ["mode.utils.mocks.Mock", 0.0643862558176283]], "job_id": [["str", 0.4965862431309519], ["int", 0.1651539454083764], ["dict", 0.09463727680412713], ["list", 0.09343907786359287], ["bytes", 0.07620105520933387]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["str", 0.4170206563670631], ["int", 0.4066371238427106]], "result": [["mock._Call", 0.24334902896684993], ["Dict[str, str]", 0.1813641629511209], ["Dict[str, List[Any]]", 0.12155250900084393], ["Dict[str, Any]", 0.09683924173316856], ["Optional[bytes]", 0.09218704797384869], ["Dict[Any, Dict[str, str]]", 0.08767840329186037], ["list", 0.084200975353009]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1287, 4], [1319, 43]], "fn_var_ln": {"configuration": [[1292, 8], [1292, 21]], "hash_": [[1289, 8], [1289, 13]], "job": [[1301, 8], [1301, 11]], "job_id": [[1288, 8], [1288, 14]], "op": [[1309, 8], [1309, 10]], "real_job_id": [[1290, 8], [1290, 19]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job": [["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "True"], ["mock_hook", "return_value", "get_job", "return_value", "job"]], "job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "True"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"], ["op", "execute", "context", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "True"]]}, "name": "test_execute_no_force_rerun", "params": {"mock_hook": "", "self": ""}, "params_descr": {"mock_hook": "", "self": ""}, "params_occur": {"mock_hook": [["mock_hook", "return_value", "insert_job", "side_effect", "Conflict"], ["mock_hook", "return_value", "generate_job_id", "return_value", "real_job_id"], ["mock_hook", "return_value", "get_job", "return_value", "job"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.7532970049244277]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_execute_no_force_rerun", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job": "", "job_id": "", "op": "", "real_job_id": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job": [["mock.Mock", 0.34340031564608847], ["unittesmock.MagicMock", 0.15599290017731254], ["str", 0.11316811279341195], ["Dict[str, str]", 0.08550069590941795], ["mode.utils.mocks.Mock", 0.08255508094798608]], "job_id": [["str", 0.36297155186392566], ["list", 0.3452145128339623], ["idom.utils.Ref[None]", 0.11104366133977389], ["List[int]", 0.09786728822527921], ["set", 0.082902985737059]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["str", 0.734483192093032], ["idom.utils.Ref[None]", 0.09485365502769401], ["List[Tuple[Any, Any, Any]]", 0.0859543624782886], ["List[int]", 0.08470879040098538]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1323, 4], [1348, 52]], "fn_var_ln": {"configuration": [[1328, 8], [1328, 21]], "hash_": [[1325, 8], [1325, 13]], "job_id": [[1324, 8], [1324, 14]], "op": [[1337, 8], [1337, 10]], "real_job_id": [[1326, 8], [1326, 19]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["op", "execute", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]]}, "name": "test_bigquery_insert_job_operator_async_finish_before_deferred", "params": {"caplog": "", "mock_defer": "", "mock_hook": "", "self": ""}, "params_descr": {"caplog": "", "mock_defer": "", "mock_hook": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text"]], "mock_defer": [["mock_defer", "called"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "insert_job", "return_value", "running", "return_value", "False"]], "self": []}, "params_p": {"args": [], "caplog": [["unittesmock.MagicMock", 0.6843141578066556], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.20055877887427004]], "kwargs": [], "mock_defer": [["unittesmock.MagicMock", 0.6929139980189422], ["mock.Mock", 0.11171395832916362], ["mock.MagicMock", 0.05917791428557309]], "mock_hook": [["unittesmock.MagicMock", 0.1998499323885642]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_bigquery_insert_job_operator_async_finish_before_deferred", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job_id": "", "op": "", "real_job_id": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1352, 4], [1378, 75]], "fn_var_ln": {"configuration": [[1357, 8], [1357, 21]], "hash_": [[1354, 8], [1354, 13]], "job_id": [[1353, 8], [1353, 14]], "op": [[1366, 8], [1366, 10]], "real_job_id": [[1355, 8], [1355, 19]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "True"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "op": [["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["op", "execute", "MagicMock"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "True"], ["str", "exc", "value", "real_job_id"]]}, "name": "test_bigquery_insert_job_operator_async_error_before_deferred", "params": {"caplog": "", "mock_defer": "", "mock_hook": "", "self": ""}, "params_descr": {"caplog": "", "mock_defer": "", "mock_hook": "", "self": ""}, "params_occur": {"caplog": [], "mock_defer": [], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "True"], ["mock_hook", "return_value", "insert_job", "return_value", "running", "return_value", "False"]], "self": []}, "params_p": {"args": [], "caplog": [["unittesmock.MagicMock", 0.35183029193809034], ["mock.MagicMock", 0.10054414964310812]], "kwargs": [], "mock_defer": [["unittesmock.MagicMock", 0.35183029193809034], ["mock.MagicMock", 0.10054414964310812]], "mock_hook": [["unittesmock.MagicMock", 0.11817104256656374]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_bigquery_insert_job_operator_async_error_before_deferred", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job_id": "", "op": "", "real_job_id": ""}, "variables_p": {"configuration": [["str", 0.11316648472039442], ["List[Dict[str, Any]]", 0.10539173246887554], ["List[str]", 0.09783146406131418], ["int", 0.0903577743868623], ["List[int]", 0.09001619935166383]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "op": [["int", 0.7070985404351972], ["Dict[str, Any]", 0.1996613871342228], ["Type[List[Any]]", 0.09324007243058004]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]]}}, {"docstring": {"func": "Asserts that a task is deferred and a BigQueryInsertJobTrigger will be fired", "long_descr": "when the BigQueryInsertJobOperator is executed with deferrable=True.", "ret": null}, "fn_lc": [[1381, 4], [1414, 54]], "fn_var_ln": {"configuration": [[1390, 8], [1390, 21]], "hash_": [[1387, 8], [1387, 13]], "job_id": [[1386, 8], [1386, 14]], "real_job_id": [[1388, 8], [1388, 19]], "ti": [[1398, 8], [1398, 10]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_insert_job_operator_async", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.09757007925136897]], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.11318577189974925], ["unittesmock.MagicMock", 0.09017625098645636]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_bigquery_insert_job_operator_async", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"configuration": [["str", 0.4546771051735372], ["int", 0.10043292650315702], ["cirq.google.engine.engine_job.EngineJob", 0.08622686957505342]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "ti": [["int", 0.2517523873146704], ["pandas.DataFrame", 0.23762004211926388], ["bytearray", 0.1224599926449695], ["str", 0.10704851669284719], ["Dict[str, Callable]", 0.09718534598319775]]}}, {"docstring": {"func": "Tests that an AirflowException is raised in case of error event", "long_descr": null, "ret": null}, "fn_lc": [[1416, 4], [1438, 13]], "fn_var_ln": {"configuration": [[1418, 8], [1418, 21]], "job_id": [[1424, 8], [1424, 14]], "operator": [[1426, 8], [1426, 16]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["operator", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "job_id": [["operator", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "operator": [["operator", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_insert_job_operator_execute_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_bigquery_insert_job_operator_execute_failure", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "job_id": "", "operator": ""}, "variables_p": {"configuration": [["str", 0.8805808229893296], ["int", 0.11941917701067031]], "job_id": [["str", 0.5859435086512258], ["int", 0.20975477700845632], ["bool", 0.11267835506956266], ["dict", 0.09162335927075511]], "operator": [["str", 0.5085989658796977], ["dict", 0.1949797244327715], ["float", 0.10898792874743608], ["bool", 0.09464158712756318]]}}, {"docstring": {"func": "Asserts that logging occurs as expected", "long_descr": null, "ret": null}, "fn_lc": [[1440, 4], [1468, 9]], "fn_var_ln": {"configuration": [[1442, 8], [1442, 21]], "job_id": [[1448, 8], [1448, 14]], "operator": [[1460, 8], [1460, 16]], "ti": [[1450, 8], [1450, 10]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "job_id": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["operator", "execute_complete", "context", "MagicMock", "event", "job_id"]], "operator": [["operator", "ti", "task"], ["mock", "patch", "object", "operator", "log", "mock_log_info"], ["operator", "execute_complete", "context", "MagicMock", "event", "job_id"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["operator", "ti", "task"]]}, "name": "test_bigquery_insert_job_operator_execute_complete", "params": {"create_task_instance_of_operator": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_bigquery_insert_job_operator_execute_complete", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "job_id": "", "operator": "", "ti": ""}, "variables_p": {"configuration": [["str", 0.4546771051735372], ["int", 0.10043292650315702], ["cirq.google.engine.engine_job.EngineJob", 0.08622686957505342]], "job_id": [["int", 0.28978243168901785], ["str", 0.19119207157853638], ["raiden.utils.MessageID", 0.11443794975030148]], "operator": [["raiden.tests.utils.mocks.MockRaidenService", 0.4844691667356602], ["guillotina.tests.mocks.MockTransactionManager", 0.31482685486142137]], "ti": [["int", 0.2517523873146704], ["pandas.DataFrame", 0.23762004211926388], ["bytearray", 0.1224599926449695], ["str", 0.10704851669284719], ["Dict[str, Callable]", 0.09718534598319775]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1471, 4], [1516, 9]], "fn_var_ln": {"configuration": [[1478, 8], [1478, 21]], "hash_": [[1475, 8], [1475, 13]], "job": [[1486, 8], [1486, 11]], "job_id": [[1474, 8], [1474, 14]], "real_job_id": [[1476, 8], [1476, 19]], "ti": [[1494, 8], [1494, 10]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["mock_hook", "return_value", "generate_job_id", "assert_called_once_with", "job_id", "job_id", "dag_id", "task_id", "logical_date", "ANY", "configuration", "configuration", "force_rerun", "True"]], "hash_": [["real_job_id", "job_id", "hash_"]], "job": [["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["mock_hook", "return_value", "get_job", "return_value", "job"]], "job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["mock_hook", "return_value", "generate_job_id", "assert_called_once_with", "job_id", "job_id", "dag_id", "task_id", "logical_date", "ANY", "configuration", "configuration", "force_rerun", "True"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_insert_job_operator_with_job_id_generate", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "side_effect", "Conflict"], ["mock_hook", "return_value", "get_job", "return_value", "job"], ["mock_hook", "return_value", "generate_job_id", "assert_called_once_with", "job_id", "job_id", "dag_id", "task_id", "logical_date", "ANY", "configuration", "configuration", "force_rerun", "True"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["aiohttp.test_utils.TestServer", 0.08079430403499703]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.6844537160116844]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_bigquery_insert_job_operator_with_job_id_generate", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "hash_": "", "job": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"configuration": [["str", 0.4546771051735372], ["int", 0.10043292650315702], ["cirq.google.engine.engine_job.EngineJob", 0.08622686957505342]], "hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job": [["mock.Mock", 0.3435082994601418], ["unittesmock.MagicMock", 0.1588778021574357], ["str", 0.11063168385352662], ["Dict[str, str]", 0.08667824321845694], ["mode.utils.mocks.Mock", 0.08367195234554516]], "job_id": [["str", 0.34045813104765604], ["List[str]", 0.28754433203551033], ["list", 0.262173864417708], ["idom.utils.Ref[None]", 0.10982367249912568]], "real_job_id": [["int", 0.38987247092385646], ["str", 0.320641688784601]], "ti": [["int", 0.2517523873146704], ["pandas.DataFrame", 0.23762004211926388], ["bytearray", 0.1224599926449695], ["str", 0.10704851669284719], ["Dict[str, Callable]", 0.09718534598319775]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1519, 4], [1568, 9]], "fn_var_ln": {"configuration": [[1525, 8], [1525, 21]], "expected_exception_msg": [[1556, 8], [1556, 30]], "hash_": [[1521, 8], [1521, 13]], "job": [[1533, 8], [1533, 11]], "job_id": [[1520, 8], [1520, 14]], "real_job_id": [[1522, 8], [1522, 19]], "ti": [[1541, 8], [1541, 10]]}, "fn_var_occur": {"configuration": [["configuration", "False"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"]], "expected_exception_msg": [["expected_exception_msg", "real_job_id", "job", "state", "job", "state"], ["str", "exc", "value", "expected_exception_msg"]], "hash_": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "generate_job_id", "return_value", "job_id", "hash_"]], "job": [["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["mock_hook", "return_value", "get_job", "return_value", "job"], ["expected_exception_msg", "real_job_id", "job", "state", "job", "state"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "generate_job_id", "return_value", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["job", "MagicMock", "job_id", "real_job_id", "error_result", "False", "state", "done", "False"], ["expected_exception_msg", "real_job_id", "job", "state", "job", "state"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_execute_force_rerun_async", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"]], "mock_hook": [["mock_hook", "return_value", "generate_job_id", "return_value", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "side_effect", "Conflict"], ["mock_hook", "return_value", "get_job", "return_value", "job"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.09757007925136897]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.910795024955884]], "self": []}, "q_name": "TestBigQueryInsertJobOperator.test_execute_force_rerun_async", "ret_exprs": [], "ret_type": "", "variables": {"configuration": "", "expected_exception_msg": "", "hash_": "", "job": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"configuration": [["str", 0.4546771051735372], ["int", 0.10043292650315702], ["cirq.google.engine.engine_job.EngineJob", 0.08622686957505342]], "expected_exception_msg": [["str", 0.551450093993741], ["List[Tuple[str, str]]", 0.1497932615840359], ["dict", 0.10385308260739719]], "hash_": [["Type[Iterator[Any]]", 0.19193931158316854], ["OrderedDict[str, Any]", 0.11324473264210881], ["str", 0.1052040861034744], ["list", 0.09239724961809243]], "job": [["mock.Mock", 0.3435082994601418], ["unittesmock.MagicMock", 0.1588778021574357], ["str", 0.11063168385352662], ["Dict[str, str]", 0.08667824321845694], ["mode.utils.mocks.Mock", 0.08367195234554516]], "job_id": [["str", 0.7272936720489199], ["idom.utils.Ref[None]", 0.0948378101027273], ["List[Tuple[Any, Any, Any]]", 0.08867044924481766]], "real_job_id": [["str", 0.38715923500021904], ["List[str]", 0.35259688429046976], ["int", 0.07651387944509541]], "ti": [["int", 0.2517523873146704], ["pandas.DataFrame", 0.23762004211926388], ["bytearray", 0.1224599926449695], ["str", 0.10704851669284719], ["Dict[str, Callable]", 0.09718534598319775]]}}], "name": "TestBigQueryInsertJobOperator", "q_name": "TestBigQueryInsertJobOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[1571, 0], [1632, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Asserts that logging occurs as expected", "long_descr": null, "ret": null}, "fn_lc": [[1572, 4], [1587, 9]], "fn_var_ln": {"operator": [[1575, 8], [1575, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryIntervalCheckOperator", "task_id", "table", "metrics_thresholds", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["mock", "patch", "object", "operator", "log", "mock_log_info"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_interval_check_operator_execute_complete", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryIntervalCheckOperator.test_bigquery_interval_check_operator_execute_complete", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["Type[List[Any]]", 0.1205207860855573], ["Dict[Any, str]", 0.11192146717920042], ["str", 0.09377793045933144], ["Dict[str, dict]", 0.09286798056421132], ["Optional[List[Any]]", 0.0907238749841281]]}}, {"docstring": {"func": "Tests that an AirflowException is raised in case of error event", "long_descr": null, "ret": null}, "fn_lc": [[1589, 4], [1603, 13]], "fn_var_ln": {"operator": [[1592, 8], [1592, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryIntervalCheckOperator", "task_id", "table", "metrics_thresholds", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_interval_check_operator_execute_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryIntervalCheckOperator.test_bigquery_interval_check_operator_execute_failure", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["list", 0.1895409721007944], ["str", 0.17628248628293577], ["Type[List[Any]]", 0.12178799205155283], ["dict", 0.08575680231242568], ["Dict[Any, str]", 0.08282928002285339], ["Dict[str, dict]", 0.08153053465802805], ["List[Tuple[int, str]]", 0.08141610329237449]]}}, {"docstring": {"func": "Asserts that a task is deferred and a BigQueryIntervalCheckTrigger will be fired", "long_descr": "when the BigQueryIntervalCheckOperator is executed with deferrable=True.", "ret": null}, "fn_lc": [[1606, 4], [1632, 58]], "fn_var_ln": {"hash_": [[1612, 8], [1612, 13]], "job_id": [[1611, 8], [1611, 14]], "real_job_id": [[1613, 8], [1613, 19]], "ti": [[1617, 8], [1617, 10]]}, "fn_var_occur": {"hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryIntervalCheckOperator", "dag_id", "task_id", "table", "metrics_thresholds", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_interval_check_operator_async", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryIntervalCheckOperator", "dag_id", "task_id", "table", "metrics_thresholds", "location", "TEST_DATASET_LOCATION", "deferrable", "True"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.09904653718249816]], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.11318577189974925], ["unittesmock.MagicMock", 0.09017625098645636]], "self": []}, "q_name": "TestBigQueryIntervalCheckOperator.test_bigquery_interval_check_operator_async", "ret_exprs": [], "ret_type": "", "variables": {"hash_": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "ti": [["int", 0.2595210356504363], ["pandas.DataFrame", 0.22360653609387932], ["bytearray", 0.11296791705873797], ["str", 0.10718805961969614], ["Dict[str, Union[Any, Any]]", 0.08779260414019285]]}}], "name": "TestBigQueryIntervalCheckOperator", "q_name": "TestBigQueryIntervalCheckOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[1635, 0], [1751, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1639, 4], [1660, 34]], "fn_var_ln": {"hash_": [[1643, 8], [1643, 13]], "job_id": [[1642, 8], [1642, 14]], "real_job_id": [[1644, 8], [1644, 19]], "ti": [[1649, 8], [1649, 10]]}, "fn_var_occur": {"hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryCheckOperator", "dag_id", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_check_operator_async_finish_before_deferred", "params": {"create_task_instance_of_operator": "", "mock_defer": "", "mock_execute": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_defer": "", "mock_execute": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryCheckOperator", "dag_id", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"]], "mock_defer": [["mock_defer", "called"]], "mock_execute": [["mock_execute", "called"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "insert_job", "return_value", "running", "return_value", "False"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.21547744939790928], ["int", 0.11074161195950097]], "kwargs": [], "mock_defer": [["mock.Mock", 0.28737078240093517], ["unittesmock.MagicMock", 0.18232736165275426]], "mock_execute": [["mock.Mock", 0.28737078240093517], ["unittesmock.MagicMock", 0.18232736165275426]], "mock_hook": [["unittesmock.MagicMock", 0.10265998600316739], ["mock.MagicMock", 0.09367040029351459]], "self": []}, "q_name": "TestBigQueryCheckOperator.test_bigquery_check_operator_async_finish_before_deferred", "ret_exprs": [], "ret_type": "", "variables": {"hash_": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "ti": [["pandas.DataFrame", 0.4529022612199875], ["str", 0.11393717709601943], ["cnaas_nms.db.device.Device", 0.09470602167023798], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.08374587443216996], ["int", 0.0776828116692261]]}}, {"docstring": {"func": "Asserts that a task is deferred and a BigQueryCheckTrigger will be fired", "long_descr": "when the BigQueryCheckOperator is executed with deferrable=True.", "ret": null}, "fn_lc": [[1663, 4], [1686, 107]], "fn_var_ln": {"hash_": [[1669, 8], [1669, 13]], "job_id": [[1668, 8], [1668, 14]], "real_job_id": [[1670, 8], [1670, 19]], "ti": [[1674, 8], [1674, 10]]}, "fn_var_occur": {"hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryCheckOperator", "dag_id", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_check_operator_async", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryCheckOperator", "dag_id", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.19887211857737716]], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.11318577189974925], ["unittesmock.MagicMock", 0.09017625098645636]], "self": []}, "q_name": "TestBigQueryCheckOperator.test_bigquery_check_operator_async", "ret_exprs": [], "ret_type": "", "variables": {"hash_": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "ti": [["pandas.DataFrame", 0.4529022612199875], ["str", 0.11393717709601943], ["cnaas_nms.db.device.Device", 0.09470602167023798], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.08374587443216996], ["int", 0.0776828116692261]]}}, {"docstring": {"func": "Tests that an AirflowException is raised in case of error event", "long_descr": null, "ret": null}, "fn_lc": [[1688, 4], [1701, 13]], "fn_var_ln": {"operator": [[1691, 8], [1691, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCheckOperator", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_check_operator_execute_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryCheckOperator.test_bigquery_check_operator_execute_failure", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.1804167279137182], ["list", 0.1300907083383252], ["Dict[str, Any]", 0.10040100032201299], ["Type[List[Any]]", 0.09380257082442998], ["bool", 0.08938091663919981]]}}, {"docstring": {"func": "Asserts that exception is raised with correct expected exception message", "long_descr": null, "ret": null}, "fn_lc": [[1703, 4], [1718, 55]], "fn_var_ln": {"expected_exception_msg": [[1716, 8], [1716, 30]], "operator": [[1706, 8], [1706, 16]]}, "fn_var_occur": {"expected_exception_msg": [["str", "exc", "value", "expected_exception_msg"]], "operator": [["operator", "BigQueryCheckOperator", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event", "None"]]}, "name": "test_bigquery_check_op_execute_complete_with_no_records", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryCheckOperator.test_bigquery_check_op_execute_complete_with_no_records", "ret_exprs": [], "ret_type": "", "variables": {"expected_exception_msg": "", "operator": ""}, "variables_p": {"expected_exception_msg": [["list", 0.2197381304939122], ["str", 0.20758640659970867], ["dict", 0.19230638791821986], ["List[str]", 0.09770157221623589], ["Dict[str, dict]", 0.09645755769656289], ["Dict[Any, Union[Any, Any]]", 0.09645755769656289], ["List[int]", 0.08975238737879754]], "operator": [["str", 0.21226148310435006], ["int", 0.11806028096951529], ["list", 0.11278848707530532], ["List[str]", 0.10613074155217503], ["Type[List[Any]]", 0.09303812487514342], ["Dict[str, Any]", 0.08661256989132982]]}}, {"docstring": {"func": "Executing a sql which returns a non-boolean value should raise exception", "long_descr": null, "ret": null}, "fn_lc": [[1720, 4], [1737, 55]], "fn_var_ln": {"expected_exception_msg": [[1732, 8], [1732, 30]], "operator": [[1725, 8], [1725, 16]], "test_sql": [[1723, 8], [1723, 16]]}, "fn_var_occur": {"expected_exception_msg": [["expected_exception_msg", "test_sql", "False"], ["str", "exc", "value", "expected_exception_msg"]], "operator": [["operator", "BigQueryCheckOperator", "task_id", "sql", "test_sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event", "False"]], "test_sql": [["operator", "BigQueryCheckOperator", "task_id", "sql", "test_sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["expected_exception_msg", "test_sql", "False"]]}, "name": "test_bigquery_check_op_execute_complete_with_non_boolean_records", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryCheckOperator.test_bigquery_check_op_execute_complete_with_non_boolean_records", "ret_exprs": [], "ret_type": "", "variables": {"expected_exception_msg": "", "operator": "", "test_sql": ""}, "variables_p": {"expected_exception_msg": [["str", 0.1993746184283165], ["dict", 0.19741706929703037], ["List[str]", 0.10584070744083923], ["Dict[str, Any]", 0.1027768572573428], ["List[bool]", 0.09637384267293393], ["Set[str]", 0.09132537189574685], ["MutableMapping[str, Any]", 0.09095208820805184]], "operator": [["list", 0.15067859009691656], ["Dict[str, dict]", 0.13197943077788069], ["List[unittesmock.MagicMock]", 0.08677217163754988], ["unittesmock.MagicMock", 0.08648915997219823], ["Dict[str, Callable]", 0.08215330676088442]], "test_sql": [["str", 0.23661451511584955], ["Dict[str, Dict[str, Any]]", 0.1780528176222933], ["Dict[str, str]", 0.1013613387038589], ["Dict[str, Tuple[str, str]]", 0.09551555148104979]]}}, {"docstring": {"func": "Asserts that logging occurs as expected", "long_descr": null, "ret": null}, "fn_lc": [[1739, 4], [1751, 52]], "fn_var_ln": {"operator": [[1742, 8], [1742, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryCheckOperator", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["mock", "patch", "object", "operator", "log", "mock_log_info"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_check_operator_execute_complete", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryCheckOperator.test_bigquery_check_operator_execute_complete", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["str", 0.2447738454010736], ["Type[List[Any]]", 0.10960958933474786], ["list", 0.0974649497252179], ["int", 0.07616662473055492]]}}], "name": "TestBigQueryCheckOperator", "q_name": "TestBigQueryCheckOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[1754, 0], [1859, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Asserts that a task is deferred and a BigQueryValueCheckTrigger will be fired", "long_descr": "when the BigQueryValueCheckOperatorAsync is executed.", "ret": null}, "fn_lc": [[1756, 4], [1779, 55]], "fn_var_ln": {"hash_": [[1771, 8], [1771, 13]], "job_id": [[1770, 8], [1770, 14]], "real_job_id": [[1772, 8], [1772, 19]], "ti": [[1761, 8], [1761, 10]]}, "fn_var_occur": {"hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryValueCheckOperator", "dag_id", "task_id", "sql", "pass_value", "use_legacy_sql", "True", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_value_check_async", "params": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryValueCheckOperator", "dag_id", "task_id", "sql", "pass_value", "use_legacy_sql", "True", "deferrable", "True"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["aiohttp.test_utils.TestServer", 0.0948712052476373], ["tests.async_mock.MagicMock", 0.09479147124143911], ["mock.Mock", 0.0930318112164235]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.2669057750849158], ["mock.MagicMock", 0.13430487305641428]], "self": []}, "q_name": "TestBigQueryValueCheckOperator.test_bigquery_value_check_async", "ret_exprs": [], "ret_type": "", "variables": {"hash_": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "ti": [["str", 0.21652522233572363], ["List[str]", 0.10674384156702031], ["raiden.utils.Any", 0.08881100045142128]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1784, 4], [1806, 34]], "fn_var_ln": {"hash_": [[1788, 8], [1788, 13]], "job_id": [[1787, 8], [1787, 14]], "real_job_id": [[1789, 8], [1789, 19]], "ti": [[1794, 8], [1794, 10]]}, "fn_var_occur": {"hash_": [["real_job_id", "job_id", "hash_"]], "job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "real_job_id": [["real_job_id", "job_id", "hash_"], ["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"]], "ti": [["ti", "create_task_instance_of_operator", "BigQueryValueCheckOperator", "dag_id", "task_id", "sql", "pass_value", "use_legacy_sql", "True", "deferrable", "True"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_value_check_operator_async_finish_before_deferred", "params": {"create_task_instance_of_operator": "", "mock_defer": "", "mock_execute": "", "mock_hook": "", "self": ""}, "params_descr": {"create_task_instance_of_operator": "", "mock_defer": "", "mock_execute": "", "mock_hook": "", "self": ""}, "params_occur": {"create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryValueCheckOperator", "dag_id", "task_id", "sql", "pass_value", "use_legacy_sql", "True", "deferrable", "True"]], "mock_defer": [["mock_defer", "called"]], "mock_execute": [["mock_execute", "called"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "MagicMock", "job_id", "real_job_id", "error_result", "False"], ["mock_hook", "return_value", "insert_job", "return_value", "running", "return_value", "False"]], "self": []}, "params_p": {"args": [], "create_task_instance_of_operator": [["mock.Mock", 0.19330457526972844], ["Optional[Exception]", 0.09586880995023331], ["tests.async_mock.MagicMock", 0.0924808781506888]], "kwargs": [], "mock_defer": [["mock.Mock", 0.23483895024548138], ["unittesmock.MagicMock", 0.17451139127676774]], "mock_execute": [["mock.Mock", 0.23483895024548138], ["unittesmock.MagicMock", 0.17451139127676774]], "mock_hook": [["unittesmock.MagicMock", 0.19549081080970737], ["mock.MagicMock", 0.09993453508309957]], "self": []}, "q_name": "TestBigQueryValueCheckOperator.test_bigquery_value_check_operator_async_finish_before_deferred", "ret_exprs": [], "ret_type": "", "variables": {"hash_": "", "job_id": "", "real_job_id": "", "ti": ""}, "variables_p": {"hash_": [["int", 0.28753633637418796], ["str", 0.1991189228306553], ["set", 0.10218471227205818], ["tuple", 0.09307959161642074]], "job_id": [["int", 0.28966529746614733], ["str", 0.27918975446829536], ["idom.utils.Ref[None]", 0.1164398131155966], ["ClassVar[str]", 0.09929915353583285], ["List[Tuple[Any, Any, Any]]", 0.0992301411729174]], "real_job_id": [["int", 0.203656211758397], ["str", 0.19122121720575866], ["idom.utils.Ref[None]", 0.11439112541111444], ["ClassVar[str]", 0.09881345762154353], ["List[Tuple[Any, Any, Any]]", 0.0920366738557333], ["List[str]", 0.09069610740180979]], "ti": [["str", 0.21652522233572363], ["List[str]", 0.10674384156702031], ["raiden.utils.Any", 0.08881100045142128]]}}, {"docstring": {"func": "Assert the exception if require param not pass to BigQueryValueCheckOperatorAsync operator", "long_descr": null, "ret": null}, "fn_lc": [[1815, 4], [1819, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_bigquery_value_check_missing_param", "params": {"expected": "", "kwargs": "", "self": ""}, "params_descr": {"expected": "", "kwargs": "", "self": ""}, "params_occur": {"expected": [["missing_param", "value", "args", "expected"]], "kwargs": [["BigQueryValueCheckOperator", "deferrable", "True", "kwargs"]], "self": []}, "params_p": {"args": [], "expected": [["utils.parser.BinaryParser", 0.09640887680888939]], "kwargs": [], "self": []}, "q_name": "TestBigQueryValueCheckOperator.test_bigquery_value_check_missing_param", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Assert the exception if require param not pass to BigQueryValueCheckOperatorAsync operator", "long_descr": null, "ret": null}, "fn_lc": [[1821, 4], [1829, 102]], "fn_var_ln": {"expected": [[1823, 8], [1823, 16]], "expected1": [[1823, 18], [1823, 27]]}, "fn_var_occur": {"expected": [["expected", "expected1"], ["missing_param", "value", "args", "expected", "missing_param", "value", "args", "expected1"]], "expected1": [["expected", "expected1"], ["missing_param", "value", "args", "expected", "missing_param", "value", "args", "expected1"]]}, "name": "test_bigquery_value_check_empty", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryValueCheckOperator.test_bigquery_value_check_empty", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "expected1": ""}, "variables_p": {"expected": [["str", 0.22663807789534487], ["Tuple[Any, Any]", 0.11281490609769489], ["Tuple[Literal, Literal, Literal]", 0.1021896968660124], ["tuple", 0.0907332090706205], ["dict", 0.08691631685040525]], "expected1": [["str", 0.22663807789534487], ["Tuple[Any, Any]", 0.11281490609769489], ["Tuple[Literal, Literal, Literal]", 0.1021896968660124], ["tuple", 0.0907332090706205], ["dict", 0.08691631685040525]]}}, {"docstring": {"func": "Tests response message in case of success event", "long_descr": null, "ret": null}, "fn_lc": [[1831, 4], [1844, 9]], "fn_var_ln": {"operator": [[1833, 8], [1833, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryValueCheckOperator", "task_id", "sql", "pass_value", "use_legacy_sql", "False", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event", "None"]]}, "name": "test_bigquery_value_check_operator_execute_complete_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryValueCheckOperator.test_bigquery_value_check_operator_execute_complete_success", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.7153510463108653], ["datetime.timedelta", 0.09107779796117894]]}}, {"docstring": {"func": "Tests that an AirflowException is raised in case of error event", "long_descr": null, "ret": null}, "fn_lc": [[1846, 4], [1859, 13]], "fn_var_ln": {"operator": [[1848, 8], [1848, 16]]}, "fn_var_occur": {"operator": [["operator", "BigQueryValueCheckOperator", "task_id", "sql", "pass_value", "use_legacy_sql", "False", "deferrable", "True"], ["operator", "execute_complete", "context", "None", "event"]]}, "name": "test_bigquery_value_check_operator_execute_complete_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryValueCheckOperator.test_bigquery_value_check_operator_execute_complete_failure", "ret_exprs": [], "ret_type": "", "variables": {"operator": ""}, "variables_p": {"operator": [["int", 0.7153510463108653], ["datetime.timedelta", 0.09107779796117894]]}}], "name": "TestBigQueryValueCheckOperator", "q_name": "TestBigQueryValueCheckOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[1862, 0], [1928, 40]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1877, 4], [1895, 36]], "fn_var_ln": {"ti": [[1885, 8], [1885, 10]]}, "fn_var_occur": {"ti": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_column_check_operator_succeeds", "params": {"check_result": "", "check_type": "", "check_value": "", "create_task_instance_of_operator": "", "mock_hook": "", "mock_job": "", "self": ""}, "params_descr": {"check_result": "", "check_type": "", "check_value": "", "create_task_instance_of_operator": "", "mock_hook": "", "mock_job": "", "self": ""}, "params_occur": {"check_result": [["mock_job", "result", "return_value", "to_dataframe", "return_value", "pd", "DataFrame", "check_result"]], "check_type": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"]], "check_value": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"]], "create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "mock_job"]], "mock_job": [["mock_job", "result", "return_value", "to_dataframe", "return_value", "pd", "DataFrame", "check_result"], ["mock_hook", "return_value", "insert_job", "return_value", "mock_job"]], "self": []}, "params_p": {"args": [], "check_result": [["int", 0.27512350006651737], ["str", 0.14150671196345216], ["bool", 0.14150671196345216], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.07075335598172608]], "check_type": [["int", 0.29934343715555384], ["raiden.utils.TokenAmount", 0.21969961391637008], ["Callable", 0.1035039919775235]], "check_value": [["int", 0.29934343715555384], ["raiden.utils.TokenAmount", 0.21969961391637008], ["Callable", 0.1035039919775235]], "create_task_instance_of_operator": [["int", 0.29934343715555384], ["raiden.utils.TokenAmount", 0.21969961391637008], ["Callable", 0.1035039919775235]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.39229230112996183]], "mock_job": [["str", 0.30231725776774065], ["datetime.datetime", 0.10785842995073203], ["unittesmock.MagicMock", 0.10605437328943174]], "self": []}, "q_name": "TestBigQueryColumnCheckOperator.test_bigquery_column_check_operator_succeeds", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["pandas.DataFrame", 0.4446385405684898], ["cnaas_nms.db.device.Device", 0.1301203451020405], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.09040623653898762], ["str", 0.07658268048267726]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1909, 4], [1928, 40]], "fn_var_ln": {"ti": [[1917, 8], [1917, 10]]}, "fn_var_occur": {"ti": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"], ["ti", "task", "execute", "MagicMock"]]}, "name": "test_bigquery_column_check_operator_fails", "params": {"check_result": "", "check_type": "", "check_value": "", "create_task_instance_of_operator": "", "mock_hook": "", "mock_job": "", "self": ""}, "params_descr": {"check_result": "", "check_type": "", "check_value": "", "create_task_instance_of_operator": "", "mock_hook": "", "mock_job": "", "self": ""}, "params_occur": {"check_result": [["mock_job", "result", "return_value", "to_dataframe", "return_value", "pd", "DataFrame", "check_result"]], "check_type": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"]], "check_value": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"]], "create_task_instance_of_operator": [["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"]], "mock_hook": [["mock_hook", "return_value", "insert_job", "return_value", "mock_job"]], "mock_job": [["mock_job", "result", "return_value", "to_dataframe", "return_value", "pd", "DataFrame", "check_result"], ["mock_hook", "return_value", "insert_job", "return_value", "mock_job"]], "self": []}, "params_p": {"args": [], "check_result": [["int", 0.27512350006651737], ["str", 0.14150671196345216], ["bool", 0.14150671196345216], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.07075335598172608]], "check_type": [["int", 0.29934343715555384], ["raiden.utils.TokenAmount", 0.21969961391637008], ["Callable", 0.1035039919775235]], "check_value": [["int", 0.29934343715555384], ["raiden.utils.TokenAmount", 0.21969961391637008], ["Callable", 0.1035039919775235]], "create_task_instance_of_operator": [["int", 0.29934343715555384], ["raiden.utils.TokenAmount", 0.21969961391637008], ["Callable", 0.1035039919775235]], "kwargs": [], "mock_hook": [["unittesmock.MagicMock", 0.39229230112996183]], "mock_job": [["str", 0.30231725776774065], ["datetime.datetime", 0.10785842995073203], ["unittesmock.MagicMock", 0.10605437328943174]], "self": []}, "q_name": "TestBigQueryColumnCheckOperator.test_bigquery_column_check_operator_fails", "ret_exprs": [], "ret_type": "", "variables": {"ti": ""}, "variables_p": {"ti": [["pandas.DataFrame", 0.4446385405684898], ["cnaas_nms.db.device.Device", 0.1301203451020405], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.09040623653898762], ["str", 0.07658268048267726]]}}], "name": "TestBigQueryColumnCheckOperator", "q_name": "TestBigQueryColumnCheckOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "ANY", "MagicMock", "pandas", "pd", "pytest", "google", "cloud", "bigquery", "DEFAULT_RETRY", "google", "cloud", "exceptions", "Conflict", "airflow", "exceptions", "AirflowException", "AirflowSkipException", "AirflowTaskTimeout", "TaskDeferred", "airflow", "providers", "google", "cloud", "operators", "bigquery", "BigQueryCheckOperator", "BigQueryColumnCheckOperator", "BigQueryConsoleIndexableLink", "BigQueryConsoleLink", "BigQueryCreateEmptyDatasetOperator", "BigQueryCreateEmptyTableOperator", "BigQueryCreateExternalTableOperator", "BigQueryDeleteDatasetOperator", "BigQueryDeleteTableOperator", "BigQueryExecuteQueryOperator", "BigQueryGetDataOperator", "BigQueryGetDatasetOperator", "BigQueryGetDatasetTablesOperator", "BigQueryInsertJobOperator", "BigQueryIntervalCheckOperator", "BigQueryPatchDatasetOperator", "BigQueryUpdateDatasetOperator", "BigQueryUpdateTableOperator", "BigQueryUpdateTableSchemaOperator", "BigQueryUpsertTableOperator", "BigQueryValueCheckOperator", "airflow", "providers", "google", "cloud", "triggers", "bigquery", "BigQueryCheckTrigger", "BigQueryGetDataTrigger", "BigQueryInsertJobTrigger", "BigQueryIntervalCheckTrigger", "BigQueryValueCheckTrigger", "airflow", "serialization", "serialized_objects", "SerializedDAG", "airflow", "utils", "timezone", "datetime", "tests", "test_utils", "db", "clear_db_dags", "clear_db_runs", "clear_db_serialized_dags", "clear_db_xcom"], "mod_var_ln": {"DEFAULT_DATE": [[72, 0], [72, 12]], "GCP_CONN_ID": [[85, 0], [85, 11]], "MATERIALIZED_VIEW_DEFINITION": [[79, 0], [79, 28]], "TASK_ID": [[63, 0], [63, 7]], "TEST_DAG_ID": [[73, 0], [73, 11]], "TEST_DATASET": [[64, 0], [64, 12]], "TEST_DATASET_LOCATION": [[65, 0], [65, 21]], "TEST_DELETE_CONTENTS": [[67, 0], [67, 20]], "TEST_FULL_JOB_ID": [[88, 0], [88, 16]], "TEST_FULL_JOB_ID_2": [[89, 0], [89, 18]], "TEST_GCP_PROJECT_ID": [[66, 0], [66, 19]], "TEST_GCS_BUCKET": [[69, 0], [69, 15]], "TEST_GCS_DATA": [[70, 0], [70, 13]], "TEST_JOB_ID_1": [[86, 0], [86, 13]], "TEST_JOB_ID_2": [[87, 0], [87, 13]], "TEST_SOURCE_FORMAT": [[71, 0], [71, 18]], "TEST_TABLE": [[84, 0], [84, 10]], "TEST_TABLE_ID": [[68, 0], [68, 13]], "TEST_TABLE_RESOURCES": [[74, 0], [74, 20]], "VIEW_DEFINITION": [[75, 0], [75, 15]]}, "mod_var_occur": {"DEFAULT_DATE": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"]], "GCP_CONN_ID": [["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock_hook", "assert_called_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "None", "use_legacy_sql", "False"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "use_legacy_sql", "False"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "use_legacy_sql", "False"]], "MATERIALIZED_VIEW_DEFINITION": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "materialized_view", "MATERIALIZED_VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "MATERIALIZED_VIEW_DEFINITION", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"]], "TASK_ID": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "materialized_view", "MATERIALIZED_VIEW_DEFINITION"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION", "if_exists", "if_exists"], ["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["operator", "BigQueryDeleteDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "if_exists", "if_exists"], ["operator", "BigQueryGetDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateTableOperator", "table_resource", "table_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateTableSchemaOperator", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryPatchDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryExecuteQueryOperator", "task_id", "TASK_ID", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "gcp_conn_id", "udf_config", "None", "use_legacy_sql", "True", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "encryption_configuration"], ["operator", "BigQueryExecuteQueryOperator", "task_id", "TASK_ID", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "gcp_conn_id", "udf_config", "None", "use_legacy_sql", "True", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None", "encryption_configuration", "None"], ["operator", "BigQueryExecuteQueryOperator", "task_id", "TASK_ID", "sql", "destination_dataset_table", "None", "write_disposition", "allow_large_results", "False", "flatten_results", "None", "gcp_conn_id", "udf_config", "None", "use_legacy_sql", "True", "maximum_billing_tier", "None", "maximum_bytes_billed", "None", "create_disposition", "schema_update_options", "query_params", "None", "labels", "None", "priority", "time_partitioning", "None", "api_resource_configs", "None", "cluster_fields", "None"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql", "schema_update_options", "None"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["simple_task", "dag", "task_dict", "TASK_ID"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["simple_task", "dag", "task_dict", "TASK_ID"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "use_legacy_sql", "False"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "use_legacy_sql", "False"], ["operator", "BigQueryDeleteTableOperator", "task_id", "TASK_ID", "deletion_dataset_table", "deletion_dataset_table", "ignore_if_missing", "ignore_if_missing"], ["operator", "BigQueryGetDatasetTablesOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "max_results"], ["operator", "operator_class", "task_id", "TASK_ID", "gcp_conn_id", "kwargs"], ["operator", "BigQueryUpsertTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_resource", "TEST_TABLE_RESOURCES", "project_id", "TEST_GCP_PROJECT_ID"]], "TEST_DAG_ID": [["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql", "schema_update_options", "None"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"], ["ti", "create_task_instance_of_operator", "BigQueryExecuteQueryOperator", "dag_id", "TEST_DAG_ID", "execution_date", "DEFAULT_DATE", "task_id", "TASK_ID", "sql"]], "TEST_DATASET": [["VIEW_DEFINITION", "TEST_DATASET", "TEST_TABLE_ID", "False"], ["MATERIALIZED_VIEW_DEFINITION", "TEST_DATASET", "TEST_TABLE_ID", "True"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "VIEW_DEFINITION", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "materialized_view", "MATERIALIZED_VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "MATERIALIZED_VIEW_DEFINITION", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION", "if_exists", "if_exists"], ["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["mock_hook", "return_value", "split_tablename", "return_value", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "table_resource", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "None", "TEST_GCS_BUCKET", "source_object", "source_object", "TEST_GCS_DATA", "TEST_SOURCE_FORMAT", "True", "None", "False", "False", "None", "None"], ["operator", "BigQueryDeleteDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"], ["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION"], ["mock_hook", "return_value", "create_empty_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "dataset_reference", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "if_exists", "if_exists"], ["operator", "BigQueryGetDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "get_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateTableOperator", "table_resource", "table_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table", "assert_called_once_with", "table_resource", "table_resource", "fields", "None", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateTableSchemaOperator", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table_schema", "assert_called_once_with", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryPatchDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "patch_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "fields", "list", "dataset_resource", "keys"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock_hook", "return_value", "list_rows", "assert_called_once_with", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "use_legacy_sql", "False"], ["operator", "generate_query", "hook", "mock_hook", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "use_legacy_sql", "False"], ["operator", "generate_query", "hook", "mock_hook", "hook_project_id", "TEST_DATASET", "TEST_TABLE_ID"], ["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "selected_fields", "deferrable", "True", "use_legacy_sql", "False"], ["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"], ["operator", "BigQueryGetDataOperator", "task_id", "dataset_id", "TEST_DATASET", "table_id", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"], ["operator", "BigQueryGetDataOperator", "task_id", "dataset_id", "TEST_DATASET", "table_id", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"], ["deletion_dataset_table", "TEST_DATASET", "TEST_TABLE_ID"], ["operator", "BigQueryGetDatasetTablesOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "max_results"], ["mock_hook", "return_value", "get_dataset_tables", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "max_results"], ["operator", "BigQueryUpsertTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_resource", "TEST_TABLE_RESOURCES", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "run_table_upsert", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_resource", "TEST_TABLE_RESOURCES"]], "TEST_DATASET_LOCATION": [["TEST_FULL_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_DATASET_LOCATION", "TEST_JOB_ID_1"], ["TEST_FULL_JOB_ID_2", "TEST_GCP_PROJECT_ID", "TEST_DATASET_LOCATION", "TEST_JOB_ID_2"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION"], ["mock_hook", "return_value", "create_empty_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "dataset_reference", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "if_exists", "if_exists"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock_hook", "return_value", "list_rows", "assert_called_once_with", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "False"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "True"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "force_rerun", "True"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["operator", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryIntervalCheckOperator", "task_id", "table", "metrics_thresholds", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "BigQueryIntervalCheckOperator", "task_id", "table", "metrics_thresholds", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryIntervalCheckOperator", "dag_id", "task_id", "table", "metrics_thresholds", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryCheckOperator", "dag_id", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryCheckOperator", "dag_id", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "BigQueryCheckOperator", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "BigQueryCheckOperator", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "BigQueryCheckOperator", "task_id", "sql", "test_sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"], ["operator", "BigQueryCheckOperator", "task_id", "sql", "location", "TEST_DATASET_LOCATION", "deferrable", "True"]], "TEST_DELETE_CONTENTS": [["operator", "BigQueryDeleteDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"], ["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"]], "TEST_FULL_JOB_ID": [["ti", "xcom_push", "TEST_FULL_JOB_ID"], ["url", "TEST_FULL_JOB_ID"], ["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID", "TEST_FULL_JOB_ID_2"], ["TEST_FULL_JOB_ID", "simple_task", "get_extra_links", "ti"], ["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID"], ["TEST_FULL_JOB_ID", "bigquery_task", "get_extra_links", "ti", "BigQueryConsoleLink", "name"], ["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID", "TEST_FULL_JOB_ID_2"], ["TEST_FULL_JOB_ID", "bigquery_task", "get_extra_links", "ti"]], "TEST_FULL_JOB_ID_2": [["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID", "TEST_FULL_JOB_ID_2"], ["TEST_FULL_JOB_ID_2", "simple_task", "get_extra_links", "ti"], ["ti", "xcom_push", "key", "value", "TEST_FULL_JOB_ID", "TEST_FULL_JOB_ID_2"], ["TEST_FULL_JOB_ID_2", "bigquery_task", "get_extra_links", "ti"]], "TEST_GCP_PROJECT_ID": [["TEST_FULL_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_DATASET_LOCATION", "TEST_JOB_ID_1"], ["TEST_FULL_JOB_ID_2", "TEST_GCP_PROJECT_ID", "TEST_DATASET_LOCATION", "TEST_JOB_ID_2"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "VIEW_DEFINITION", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "materialized_view", "MATERIALIZED_VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "MATERIALIZED_VIEW_DEFINITION", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION", "if_exists", "if_exists"], ["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["mock_hook", "return_value", "split_tablename", "return_value", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "table_resource", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "None", "TEST_GCS_BUCKET", "source_object", "source_object", "TEST_GCS_DATA", "TEST_SOURCE_FORMAT", "True", "None", "False", "False", "None", "None"], ["operator", "BigQueryDeleteDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"], ["mock_hook", "return_value", "delete_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "delete_contents", "TEST_DELETE_CONTENTS"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION"], ["mock_hook", "return_value", "create_empty_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "dataset_reference", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "location", "TEST_DATASET_LOCATION", "if_exists", "if_exists"], ["operator", "BigQueryGetDatasetOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "get_dataset", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateTableOperator", "table_resource", "table_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table", "assert_called_once_with", "table_resource", "table_resource", "fields", "None", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateTableSchemaOperator", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table_schema", "assert_called_once_with", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryPatchDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "patch_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateDatasetOperator", "dataset_resource", "dataset_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_dataset", "assert_called_once_with", "dataset_resource", "dataset_resource", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "fields", "list", "dataset_resource", "keys"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock_hook", "return_value", "list_rows", "assert_called_once_with", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "use_legacy_sql", "False"], ["operator", "generate_query", "hook", "mock_hook", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"], ["operator", "BigQueryGetDatasetTablesOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "max_results"], ["mock_hook", "return_value", "get_dataset_tables", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "max_results"], ["operator", "BigQueryUpsertTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_resource", "TEST_TABLE_RESOURCES", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "run_table_upsert", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_resource", "TEST_TABLE_RESOURCES"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "False"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "cancel_on_kill", "True"], ["mock_hook", "return_value", "cancel_job", "assert_called_once_with", "job_id", "real_job_id", "location", "TEST_DATASET_LOCATION", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "force_rerun", "True"], ["mock_hook", "return_value", "insert_job", "assert_called_once_with", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "nowait", "True", "project_id", "TEST_GCP_PROJECT_ID", "retry", "DEFAULT_RETRY", "timeout", "None"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["op", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["operator", "BigQueryInsertJobOperator", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["ti", "create_task_instance_of_operator", "BigQueryInsertJobOperator", "dag_id", "task_id", "configuration", "configuration", "location", "TEST_DATASET_LOCATION", "job_id", "job_id", "project_id", "TEST_GCP_PROJECT_ID", "reattach_states", "deferrable", "True"], ["mock_hook", "return_value", "get_job", "assert_called_once_with", "location", "TEST_DATASET_LOCATION", "job_id", "real_job_id", "project_id", "TEST_GCP_PROJECT_ID"]], "TEST_GCS_BUCKET": [["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "table_resource", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "None", "TEST_GCS_BUCKET", "source_object", "source_object", "TEST_GCS_DATA", "TEST_SOURCE_FORMAT", "True", "None", "False", "False", "None", "None"]], "TEST_GCS_DATA": [["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "table_resource", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "None", "TEST_GCS_BUCKET", "source_object", "source_object", "TEST_GCS_DATA", "TEST_SOURCE_FORMAT", "True", "None", "False", "False", "None", "None"]], "TEST_JOB_ID_1": [["TEST_FULL_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_DATASET_LOCATION", "TEST_JOB_ID_1"]], "TEST_JOB_ID_2": [["TEST_FULL_JOB_ID_2", "TEST_GCP_PROJECT_ID", "TEST_DATASET_LOCATION", "TEST_JOB_ID_2"]], "TEST_SOURCE_FORMAT": [["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "table_resource", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "None", "TEST_GCS_BUCKET", "source_object", "source_object", "TEST_GCS_DATA", "TEST_SOURCE_FORMAT", "True", "None", "False", "False", "None", "None"]], "TEST_TABLE": [], "TEST_TABLE_ID": [["TEST_TABLE_RESOURCES", "TEST_TABLE_ID"], ["VIEW_DEFINITION", "TEST_DATASET", "TEST_TABLE_ID", "False"], ["MATERIALIZED_VIEW_DEFINITION", "TEST_DATASET", "TEST_TABLE_ID", "True"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "VIEW_DEFINITION", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "materialized_view", "MATERIALIZED_VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "None", "materialized_view", "MATERIALIZED_VIEW_DEFINITION", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "schema_fields", "time_partitioning", "time_partitioning", "cluster_fields", "cluster_fields", "labels", "None", "view", "None", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION", "if_exists", "if_exists"], ["operator", "BigQueryCreateExternalTableOperator", "task_id", "TASK_ID", "destination_project_dataset_table", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "schema_fields", "bucket", "TEST_GCS_BUCKET", "gcs_schema_bucket", "TEST_GCS_BUCKET", "source_objects", "TEST_GCS_DATA", "source_format", "TEST_SOURCE_FORMAT", "autodetect", "True"], ["mock_hook", "return_value", "split_tablename", "return_value", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "table_resource", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID", "None", "TEST_GCS_BUCKET", "source_object", "source_object", "TEST_GCS_DATA", "TEST_SOURCE_FORMAT", "True", "None", "False", "False", "None", "None"], ["operator", "BigQueryUpdateTableOperator", "table_resource", "table_resource", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table", "assert_called_once_with", "table_resource", "table_resource", "fields", "None", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryUpdateTableSchemaOperator", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "update_table_schema", "assert_called_once_with", "schema_fields_updates", "schema_field_updates", "include_policy_tags", "False", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION", "as_dict", "as_dict", "use_legacy_sql", "False"], ["mock_hook", "return_value", "list_rows", "assert_called_once_with", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "max_results", "selected_fields", "selected_fields", "location", "TEST_DATASET_LOCATION"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "project_id", "TEST_GCP_PROJECT_ID", "max_results", "use_legacy_sql", "False"], ["operator", "generate_query", "hook", "mock_hook", "TEST_GCP_PROJECT_ID", "TEST_DATASET", "TEST_TABLE_ID"], ["operator", "BigQueryGetDataOperator", "gcp_conn_id", "GCP_CONN_ID", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "use_legacy_sql", "False"], ["operator", "generate_query", "hook", "mock_hook", "hook_project_id", "TEST_DATASET", "TEST_TABLE_ID"], ["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "selected_fields", "deferrable", "True", "use_legacy_sql", "False"], ["ti", "create_task_instance_of_operator", "BigQueryGetDataOperator", "dag_id", "task_id", "dataset_id", "TEST_DATASET", "table_id", "TEST_TABLE_ID", "max_results", "deferrable", "True", "as_dict", "as_dict", "use_legacy_sql", "False"], ["deletion_dataset_table", "TEST_DATASET", "TEST_TABLE_ID"], ["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"], ["ti", "create_task_instance_of_operator", "BigQueryColumnCheckOperator", "dag_id", "task_id", "table", "TEST_TABLE_ID", "use_legacy_sql", "False", "column_mapping", "check_type", "check_value"]], "TEST_TABLE_RESOURCES": [["operator", "BigQueryUpsertTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "table_resource", "TEST_TABLE_RESOURCES", "project_id", "TEST_GCP_PROJECT_ID"], ["mock_hook", "return_value", "run_table_upsert", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_resource", "TEST_TABLE_RESOURCES"]], "VIEW_DEFINITION": [["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION"], ["mock_hook", "return_value", "create_empty_table", "assert_called_once_with", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "schema_fields", "None", "time_partitioning", "cluster_fields", "None", "labels", "None", "view", "VIEW_DEFINITION", "materialized_view", "None", "encryption_configuration", "None", "table_resource", "None", "exists_ok", "False"], ["operator", "BigQueryCreateEmptyTableOperator", "task_id", "TASK_ID", "dataset_id", "TEST_DATASET", "project_id", "TEST_GCP_PROJECT_ID", "table_id", "TEST_TABLE_ID", "view", "VIEW_DEFINITION", "if_exists", "if_exists"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 371}, "session_id": "cY5YxPQyOBtlG419OUXBxgMKKVcJrByd6NkyP_satI8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "GCP_CONN_ID": "", "MATERIALIZED_VIEW_DEFINITION": "", "TASK_ID": "", "TEST_DAG_ID": "", "TEST_DATASET": "", "TEST_DATASET_LOCATION": "", "TEST_DELETE_CONTENTS": "", "TEST_FULL_JOB_ID": "", "TEST_FULL_JOB_ID_2": "", "TEST_GCP_PROJECT_ID": "", "TEST_GCS_BUCKET": "", "TEST_GCS_DATA": "", "TEST_JOB_ID_1": "", "TEST_JOB_ID_2": "", "TEST_SOURCE_FORMAT": "", "TEST_TABLE": "", "TEST_TABLE_ID": "", "TEST_TABLE_RESOURCES": "", "VIEW_DEFINITION": ""}, "variables_p": {"DEFAULT_DATE": [["datetime.datetime.datetime", 0.3765103406656571], ["str", 0.2388209075470073], ["int", 0.11894001140280062], ["Type[Dict[str, int]]", 0.09008510323913971], ["datetime.datetime", 0.08815256960460063], ["Dict[str, bool]", 0.08749106754079457]], "GCP_CONN_ID": [["str", 0.6594562461723599], ["dict", 0.08276503069309771]], "MATERIALIZED_VIEW_DEFINITION": [["str", 0.17775645450120503], ["Dict[str, Any]", 0.12383764792829978], ["Set[str]", 0.10574246950201928], ["int", 0.100211081265347], ["dict", 0.09538928463857319]], "TASK_ID": [["str", 0.9009002689829895], ["Pattern[str]", 0.09909973101701056]], "TEST_DAG_ID": [["int", 0.29466094179593283], ["Type[Tuple[str, Any]]", 0.2026534553765421], ["Dict[str, str]", 0.20247869214302466], ["list", 0.09565477848955886]], "TEST_DATASET": [["str", 0.20102813142810033], ["List[str]", 0.13878369360708764], ["list", 0.11672493183839953], ["Dict[str, Union[None, Any, Any, int, str]]", 0.10876845130032324], ["Dict[Any, Union[Any, Any, Any, Any]]", 0.0845199963108907]], "TEST_DATASET_LOCATION": [["str", 0.8976049332878803], ["List[str]", 0.10239506671211979]], "TEST_DELETE_CONTENTS": [["str", 0.9999999999999998]], "TEST_FULL_JOB_ID": [["str", 0.8893158907088707], ["Dict[int, None]", 0.11068410929112935]], "TEST_FULL_JOB_ID_2": [["str", 0.6425209728535347], ["Dict[str, str]", 0.1392408727767596], ["Pattern[str]", 0.11554159415479008], ["Dict[Any, str]", 0.10269656021491563]], "TEST_GCP_PROJECT_ID": [["str", 0.801245692190825], ["Dict[str, str]", 0.10719537217232375], ["list", 0.09155893563685137]], "TEST_GCS_BUCKET": [["str", 0.6500480332757579], ["Dict[Any, Dict[str, Any]]", 0.11238310391759443], ["Optional[str]", 0.0913672831947634]], "TEST_GCS_DATA": [["str", 0.5762679615423245], ["Dict[str, str]", 0.18419494130142497], ["Dict[str, Union[Any, str]]", 0.1358662605150559], ["List[Dict[str, str]]", 0.10367083664119474]], "TEST_JOB_ID_1": [["str", 0.5344324922488588], ["Dict[int, str]", 0.19267533433799333], ["List[str]", 0.09366974000518209]], "TEST_JOB_ID_2": [["str", 0.5344324922488588], ["Dict[int, str]", 0.19267533433799333], ["List[str]", 0.09366974000518209]], "TEST_SOURCE_FORMAT": [["str", 0.8035489711894206], ["Dict[str, Union[int, str]]", 0.1099853895175224], ["Pattern[str]", 0.08646563929305712]], "TEST_TABLE": [["str", 0.9999999996387029], ["bool", 3.6129710167273786e-10]], "TEST_TABLE_ID": [["str", 0.7928424373209575], ["ClassVar[str]", 0.12325231013965895], ["bool", 0.08390525253938334]], "TEST_TABLE_RESOURCES": [["str", 0.29247655900003333], ["int", 0.18264498437998894], ["List[Dict[str, Any]]", 0.13327372514761826], ["List[str]", 0.09495055558174888], ["Dict[str, Dict[str, Any]]", 0.08538710746717809]], "VIEW_DEFINITION": [["str", 0.17775645450120503], ["Dict[str, Any]", 0.12383764792829978], ["Set[str]", 0.10574246950201928], ["int", 0.100211081265347], ["dict", 0.09538928463857319]]}}}