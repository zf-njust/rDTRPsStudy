{"error": null, "response": {"classes": [{"cls_lc": [[59, 0], [142, 87]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Asserts that the MLEngineStartTrainingJobTrigger correctly serializes its arguments", "long_descr": "and classpath.", "ret": null}, "fn_lc": [[60, 4], [81, 9]], "fn_var_ln": {"classpath": [[66, 8], [66, 17]], "kwargs": [[66, 19], [66, 25]]}, "fn_var_occur": {"classpath": [["classpath", "kwargs", "trigger", "serialize"]], "kwargs": [["classpath", "kwargs", "trigger", "serialize"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]]}, "name": "test_serialize", "params": {"self": "", "trigger": ""}, "params_descr": {"self": "", "trigger": ""}, "params_occur": {"self": [], "trigger": [["classpath", "kwargs", "trigger", "serialize"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "trigger": [["antidote.providers.tag.TagProvider", 0.21603869508253054], ["str", 0.16352105402406064], ["Callable", 0.10688414078483373]]}, "q_name": "TestMLEngineStartTrainingJobTrigger.test_serialize", "ret_exprs": [], "ret_type": "", "variables": {"classpath": "", "kwargs": ""}, "variables_p": {"classpath": [["Set[str]", 0.4999999999750701], ["int", 0.49999999996228883], ["Dict[str, Union[int, str]]", 1.582796261262258e-11], ["List[str]", 1.3730011143514454e-11], ["str", 1.0971499556494418e-11], ["bool", 1.0865339793385232e-11]], "kwargs": [["List[Tuple[str, int]]", 0.2860773055661452], ["Dict[str, List[Any]]", 0.11563225037024322], ["Tuple[Tuple[str, Any]]", 0.09205280146255218], ["Dict[str, str]", 0.09128431005310465], ["list", 0.09042886332469678]]}}, {"docstring": {"func": "Tests the MLEngineStartTrainingJobTrigger only fires once the job execution reaches a successful state", "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [95, 9]], "fn_var_ln": {"actual": [[92, 8], [92, 14]], "generator": [[91, 8], [91, 17]], "return_value": [[89, 8], [89, 36]]}, "fn_var_occur": {"actual": [["actual", "generator", "asend", "None"], ["TriggerEvent", "TEST_JOB_ID", "actual"]], "generator": [["generator", "trigger", "run"], ["actual", "generator", "asend", "None"]], "return_value": [["mock_job_status", "return_value"]]}, "name": "test_trigger_on_success_yield_successfully", "params": {"mock_job_status": "", "self": "", "trigger": ""}, "params_descr": {"mock_job_status": "", "self": "", "trigger": ""}, "params_occur": {"mock_job_status": [["mock_job_status", "return_value"]], "self": [], "trigger": [["generator", "trigger", "run"]]}, "params_p": {"args": [], "kwargs": [], "mock_job_status": [], "self": [], "trigger": [["str", 0.11363691859769125]]}, "q_name": "TestMLEngineStartTrainingJobTrigger.test_trigger_on_success_yield_successfully", "ret_exprs": [], "ret_type": "", "variables": {"actual": "", "generator": "", "return_value": ""}, "variables_p": {"actual": [["str", 0.26194570437589926], ["int", 0.2508230291637528]], "generator": [["kornia.augmentation.base._BasicAugmentationBase", 0.16174662751959534], ["Union[Literal, Literal]", 0.12016314415089882]], "return_value": [["int", 0.2019394697254881], ["str", 0.19308589920525446], ["List[Dict[str, Any]]", 0.14243513930147336], ["Dict[str, Dict[str, Any]]", 0.11827891728138035], ["Dict[str, Union[Any, Any, Any]]", 0.08293675731555421], ["bytes", 0.07921306490725989], ["Dict[str, int]", 0.07324341594128495]]}}, {"docstring": {"func": "Test that MLEngineStartTrainingJobTrigger does not fire while a job is still running.", "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [117, 39]], "fn_var_ln": {"side_effect": [[104, 8], [104, 30]], "task": [[107, 8], [107, 12]]}, "fn_var_occur": {"side_effect": [["mocked_get", "side_effect", "OSError"]], "task": [["task", "asyncio", "create_task", "trigger", "run", "__anext__"], ["task", "done", "False"]]}, "name": "test_trigger_on_running_wait_successfully", "params": {"caplog": "", "mocked_get": "", "self": "", "trigger": ""}, "params_descr": {"caplog": "", "mocked_get": "", "self": "", "trigger": ""}, "params_occur": {"caplog": [["caplog", "set_level", "logging", "INFO"], ["caplog", "text"], ["TEST_POLL_INTERVAL", "caplog", "text"]], "mocked_get": [["mocked_get", "side_effect", "OSError"]], "self": [], "trigger": [["task", "asyncio", "create_task", "trigger", "run", "__anext__"]]}, "params_p": {"args": [], "caplog": [["logging.Logger", 0.5338501648524328]], "kwargs": [], "mocked_get": [["mock.Mock", 0.06245085248425936], ["mock.MagicMock", 0.030490095295892184]], "self": [], "trigger": [["bool", 0.08907351485966451]]}, "q_name": "TestMLEngineStartTrainingJobTrigger.test_trigger_on_running_wait_successfully", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": "", "task": ""}, "variables_p": {"side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "task": [["asyncio.tasks.Task[None]", 0.19643276539820578], ["List[str]", 0.11367958078351113], ["Dict[str, int]", 0.09946648513600341], ["asyncio.tasks.Task[Any]", 0.0829218957480618]]}}, {"docstring": {"func": "Test that MLEngineStartTrainingJobTrigger fires the correct event in case of an error.", "long_descr": null, "ret": null}, "fn_lc": [[121, 4], [130, 78]], "fn_var_ln": {"actual": [[129, 8], [129, 14]], "generator": [[128, 8], [128, 17]], "return_value": [[126, 8], [126, 36]]}, "fn_var_occur": {"actual": [["actual", "generator", "asend", "None"], ["TriggerEvent", "actual"]], "generator": [["generator", "trigger", "run"], ["actual", "generator", "asend", "None"]], "return_value": [["mock_job_status", "return_value"]]}, "name": "test_trigger_on_error_yield_successfully", "params": {"mock_job_status": "", "self": "", "trigger": ""}, "params_descr": {"mock_job_status": "", "self": "", "trigger": ""}, "params_occur": {"mock_job_status": [["mock_job_status", "return_value"]], "self": [], "trigger": [["generator", "trigger", "run"]]}, "params_p": {"args": [], "kwargs": [], "mock_job_status": [], "self": [], "trigger": [["str", 0.11175324004637531]]}, "q_name": "TestMLEngineStartTrainingJobTrigger.test_trigger_on_error_yield_successfully", "ret_exprs": [], "ret_type": "", "variables": {"actual": "", "generator": "", "return_value": ""}, "variables_p": {"actual": [["int", 0.19412407945911686], ["Tuple[Any, Any, Any, Any, Any, Any, Any]", 0.09850073403783119], ["Dict[str, float]", 0.08348205718629689], ["List[int]", 0.08277127376192583], ["Optional[str]", 0.07748136730496737]], "generator": [["kornia.augmentation.base._BasicAugmentationBase", 0.16174662751959534], ["Union[Literal, Literal]", 0.12016314415089882]], "return_value": [["int", 0.2019394697254881], ["str", 0.19308589920525446], ["List[Dict[str, Any]]", 0.14243513930147336], ["Dict[str, Dict[str, Any]]", 0.11827891728138035], ["Dict[str, Union[Any, Any, Any]]", 0.08293675731555421], ["bytes", 0.07921306490725989], ["Dict[str, int]", 0.07324341594128495]]}}, {"docstring": {"func": "Test that MLEngineStartTrainingJobTrigger fires the correct event in case of an error.", "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [142, 87]], "fn_var_ln": {"actual": [[141, 8], [141, 14]], "generator": [[140, 8], [140, 17]], "side_effect": [[138, 8], [138, 35]]}, "fn_var_occur": {"actual": [["actual", "generator", "asend", "None"], ["TriggerEvent", "actual"]], "generator": [["generator", "trigger", "run"], ["actual", "generator", "asend", "None"]], "side_effect": [["mock_job_status", "side_effect", "Exception"]]}, "name": "test_trigger_exec_yield_successfully", "params": {"mock_job_status": "", "self": "", "trigger": ""}, "params_descr": {"mock_job_status": "", "self": "", "trigger": ""}, "params_occur": {"mock_job_status": [["mock_job_status", "side_effect", "Exception"]], "self": [], "trigger": [["generator", "trigger", "run"]]}, "params_p": {"args": [], "kwargs": [], "mock_job_status": [["str", 0.08551712706992161]], "self": [], "trigger": [["str", 0.11363691859769125]]}, "q_name": "TestMLEngineStartTrainingJobTrigger.test_trigger_exec_yield_successfully", "ret_exprs": [], "ret_type": "", "variables": {"actual": "", "generator": "", "side_effect": ""}, "variables_p": {"actual": [["int", 0.19412407945911686], ["Tuple[Any, Any, Any, Any, Any, Any, Any]", 0.09850073403783119], ["Dict[str, float]", 0.08348205718629689], ["List[int]", 0.08277127376192583], ["Optional[str]", 0.07748136730496737]], "generator": [["kornia.augmentation.base._BasicAugmentationBase", 0.16174662751959534], ["Union[Literal, Literal]", 0.12016314415089882]], "side_effect": [["str", 0.2763625119115123], ["List[str]", 0.11604543685408512]]}}], "name": "TestMLEngineStartTrainingJobTrigger", "q_name": "TestMLEngineStartTrainingJobTrigger", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 0], [56, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "trigger", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "trigger", "ret_exprs": ["return MLEngineStartTrainingJobTrigger( conn_id=TEST_CONN_ID, job_id=TEST_JOB_ID, project_id=TEST_GCP_PROJECT_ID, region=TEST_REGION, runtime_version=TEST_RUNTIME_VERSION, python_version=TEST_PYTHON_VERSION, job_dir=TEST_JOB_DIR, package_uris=TEST_PACKAGE_URIS, training_python_module=TEST_TRAINING_PYTHON_MODULE, training_args=TEST_TRAINING_ARGS, labels=TEST_LABELS,)"], "ret_type": "", "ret_type_p": [["str", 0.17009615814968287], ["Dict[str, Any]", 0.09614572436479199], ["int", 0.0874901069250735], ["Optional[str]", 0.07834969055208728]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "asyncio", "logging", "unittest", "mock", "pytest", "airflow", "providers", "google", "cloud", "triggers", "mlengine", "MLEngineStartTrainingJobTrigger", "airflow", "triggers", "base", "TriggerEvent"], "mod_var_ln": {"TEST_CONN_ID": [[28, 0], [28, 12]], "TEST_GCP_PROJECT_ID": [[30, 0], [30, 19]], "TEST_JOB_DIR": [[34, 0], [34, 12]], "TEST_JOB_ID": [[29, 0], [29, 11]], "TEST_LABELS": [[38, 0], [38, 11]], "TEST_PACKAGE_URIS": [[35, 0], [35, 17]], "TEST_POLL_INTERVAL": [[39, 0], [39, 18]], "TEST_PYTHON_VERSION": [[33, 0], [33, 19]], "TEST_REGION": [[31, 0], [31, 11]], "TEST_RUNTIME_VERSION": [[32, 0], [32, 20]], "TEST_TRAINING_ARGS": [[37, 0], [37, 18]], "TEST_TRAINING_PYTHON_MODULE": [[36, 0], [36, 27]]}, "mod_var_occur": {"TEST_CONN_ID": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_GCP_PROJECT_ID": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_JOB_DIR": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_JOB_ID": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"], ["TriggerEvent", "TEST_JOB_ID", "actual"]], "TEST_LABELS": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_PACKAGE_URIS": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_POLL_INTERVAL": [["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"], ["TEST_POLL_INTERVAL", "caplog", "text"]], "TEST_PYTHON_VERSION": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_REGION": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_RUNTIME_VERSION": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_TRAINING_ARGS": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]], "TEST_TRAINING_PYTHON_MODULE": [["MLEngineStartTrainingJobTrigger", "conn_id", "TEST_CONN_ID", "job_id", "TEST_JOB_ID", "project_id", "TEST_GCP_PROJECT_ID", "region", "TEST_REGION", "runtime_version", "TEST_RUNTIME_VERSION", "python_version", "TEST_PYTHON_VERSION", "job_dir", "TEST_JOB_DIR", "package_uris", "TEST_PACKAGE_URIS", "training_python_module", "TEST_TRAINING_PYTHON_MODULE", "training_args", "TEST_TRAINING_ARGS", "labels", "TEST_LABELS"], ["kwargs", "TEST_CONN_ID", "TEST_JOB_ID", "TEST_GCP_PROJECT_ID", "TEST_REGION", "TEST_RUNTIME_VERSION", "TEST_PYTHON_VERSION", "TEST_JOB_DIR", "TEST_POLL_INTERVAL", "TEST_PACKAGE_URIS", "TEST_TRAINING_PYTHON_MODULE", "TEST_TRAINING_ARGS", "TEST_LABELS"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 41}, "session_id": "tow9vdOzK6_fNsAfLVmCqI7TRcVdw_9QMAPap9C9N_U", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_CONN_ID": "", "TEST_GCP_PROJECT_ID": "", "TEST_JOB_DIR": "", "TEST_JOB_ID": "", "TEST_LABELS": "", "TEST_PACKAGE_URIS": "", "TEST_POLL_INTERVAL": "", "TEST_PYTHON_VERSION": "", "TEST_REGION": "", "TEST_RUNTIME_VERSION": "", "TEST_TRAINING_ARGS": "", "TEST_TRAINING_PYTHON_MODULE": ""}, "variables_p": {"TEST_CONN_ID": [["str", 0.7981132242088329], ["int", 0.09103705307701808]], "TEST_GCP_PROJECT_ID": [["str", 0.7997514226761153], ["Pattern[str]", 0.09990280073154072]], "TEST_JOB_DIR": [["str", 0.7040988186250036]], "TEST_JOB_ID": [["str", 0.7981132242088329], ["int", 0.09103705307701808]], "TEST_LABELS": [["str", 0.30913519511982523], ["Dict[int, str]", 0.115983242511944], ["dict", 0.11265365258916918], ["List[Tuple[Any, Any, Any]]", 0.0959284154770849], ["List[str]", 0.09359594504293678], ["Dict[str, Any]", 0.09228436258164302], ["Dict[str, Union[Any, Any, Any, str]]", 0.09123191374197648], ["Dict[str, str]", 0.08918727293542027]], "TEST_PACKAGE_URIS": [["str", 0.6775774657972455], ["dict", 0.09469402894450925], ["list", 0.08654290032109552]], "TEST_POLL_INTERVAL": [], "TEST_PYTHON_VERSION": [["str", 0.38481988881124274], ["dict", 0.2327319047462117], ["int", 0.17957965762250525], ["Dict[str, str]", 0.09373449977958091]], "TEST_REGION": [["str", 0.2970013961485851], ["int", 0.1434289055863496], ["List[str]", 0.08961032940575797], ["List[Tuple[str, str, str, str]]", 0.08354177960973017], ["Dict[str, str]", 0.07811714603389393]], "TEST_RUNTIME_VERSION": [["str", 0.38481988881124274], ["dict", 0.2327319047462117], ["int", 0.17957965762250525], ["Dict[str, str]", 0.09373449977958091]], "TEST_TRAINING_ARGS": [["str", 0.2637771933427053], ["dict", 0.11280499567289141], ["List[Tuple[Any, str]]", 0.08808157138062297], ["List[str]", 0.08278479226864684]], "TEST_TRAINING_PYTHON_MODULE": [["str", 0.6231456375446599], ["List[str]", 0.09469388338784404], ["Dict[str, Any]", 0.09303641801655108], ["int", 0.09227187307765138]]}}}