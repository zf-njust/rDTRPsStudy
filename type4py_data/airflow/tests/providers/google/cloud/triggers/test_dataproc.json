{"error": null, "response": {"classes": [{"cls_lc": [[123, 0], [203, 60]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [134, 9]], "fn_var_ln": {"classpath": [[125, 8], [125, 17]], "kwargs": [[125, 19], [125, 25]]}, "fn_var_occur": {"classpath": [["classpath", "kwargs", "cluster_trigger", "serialize"]], "kwargs": [["classpath", "kwargs", "cluster_trigger", "serialize"], ["kwargs", "TEST_CLUSTER_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"]]}, "name": "test_async_cluster_trigger_serialization_should_execute_successfully", "params": {"cluster_trigger": "", "self": ""}, "params_descr": {"cluster_trigger": "", "self": ""}, "params_occur": {"cluster_trigger": [["classpath", "kwargs", "cluster_trigger", "serialize"]], "self": []}, "params_p": {"args": [], "cluster_trigger": [["antidote.providers.tag.TagProvider", 0.21603869508253054], ["str", 0.16352105402406064], ["Callable", 0.10688414078483373]], "kwargs": [], "self": []}, "q_name": "TestDataprocClusterTrigger.test_async_cluster_trigger_serialization_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"classpath": "", "kwargs": ""}, "variables_p": {"classpath": [["Set[str]", 0.4999999999750701], ["int", 0.49999999996228883], ["Dict[str, Union[int, str]]", 1.582796261262258e-11], ["List[str]", 1.3730011143514454e-11], ["str", 1.0971499556494418e-11], ["bool", 1.0865339793385232e-11]], "kwargs": [["bool", 0.1054324526630534], ["Dict[str, Union[int, str]]", 0.1033997055057322], ["int", 0.09612401233615107], ["List[Tuple[None, Any, str]]", 0.09091495561317028], ["Dict[str, str]", 0.08568387611472239]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [158, 45]], "fn_var_ln": {"actual_event": [[149, 8], [149, 20]], "expected_event": [[151, 8], [151, 22]], "generator": [[148, 8], [148, 17]], "return_value": [[141, 8], [141, 30]]}, "fn_var_occur": {"actual_event": [["actual_event", "generator", "asend", "None"], ["expected_event", "TriggerEvent", "TEST_CLUSTER_NAME", "ClusterStatus", "State", "RUNNING", "actual_event", "payload"], ["expected_event", "actual_event"]], "expected_event": [["expected_event", "TriggerEvent", "TEST_CLUSTER_NAME", "ClusterStatus", "State", "RUNNING", "actual_event", "payload"], ["expected_event", "actual_event"]], "generator": [["generator", "cluster_trigger", "run"], ["actual_event", "generator", "asend", "None"]], "return_value": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "RUNNING"]]}, "name": "test_async_cluster_triggers_on_success_should_execute_successfully", "params": {"async_get_cluster": "", "cluster_trigger": "", "mock_hook": "", "self": ""}, "params_descr": {"async_get_cluster": "", "cluster_trigger": "", "mock_hook": "", "self": ""}, "params_occur": {"async_get_cluster": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "RUNNING"]], "cluster_trigger": [["generator", "cluster_trigger", "run"]], "mock_hook": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "RUNNING"]], "self": []}, "params_p": {"args": [], "async_get_cluster": [["str", 0.08731851766108258]], "cluster_trigger": [["asyncio.StreamWriter", 0.5139236521650136], ["asyncio.StreamReader", 0.4005045778896057]], "kwargs": [], "mock_hook": [["str", 0.08731851766108258]], "self": []}, "q_name": "TestDataprocClusterTrigger.test_async_cluster_triggers_on_success_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"actual_event": "", "expected_event": "", "generator": "", "return_value": ""}, "variables_p": {"actual_event": [["asyncio.locks.Event", 0.3082056898456361], ["list", 0.16996360230699215], ["Set[str]", 0.1658264270424037], ["dict", 0.1037376414741417], ["Dict[str, Any]", 0.0827611579104926], ["Dict[str, Union[int, str]]", 0.07743561879538248]], "expected_event": [["list", 0.35829299320418534], ["str", 0.10540336197851399], ["Dict[str, str]", 0.08949408050997537]], "generator": [["List[Tuple[str, bool]]", 0.15291605311505801], ["kornia.augmentation.base._BasicAugmentationBase", 0.08725800131533011]], "return_value": [["str", 0.5206333596289574], ["bytes", 0.2716667226979091], ["Dict[int, List[str]]", 0.09100622205705314]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[162, 4], [182, 45]], "fn_var_ln": {"actual_event": [[172, 8], [172, 20]], "expected_event": [[175, 8], [175, 22]], "return_value": [[165, 8], [165, 30]]}, "fn_var_occur": {"actual_event": [["actual_event", "cluster_trigger", "run", "asend", "None"], ["expected_event", "TriggerEvent", "TEST_CLUSTER_NAME", "ClusterStatus", "State", "ERROR", "actual_event", "payload"], ["expected_event", "actual_event"]], "expected_event": [["expected_event", "TriggerEvent", "TEST_CLUSTER_NAME", "ClusterStatus", "State", "ERROR", "actual_event", "payload"], ["expected_event", "actual_event"]], "return_value": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "ERROR"]]}, "name": "test_async_cluster_trigger_run_returns_error_event", "params": {"async_get_cluster": "", "cluster_trigger": "", "mock_hook": "", "self": ""}, "params_descr": {"async_get_cluster": "", "cluster_trigger": "", "mock_hook": "", "self": ""}, "params_occur": {"async_get_cluster": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "ERROR"]], "cluster_trigger": [["actual_event", "cluster_trigger", "run", "asend", "None"]], "mock_hook": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "ERROR"]], "self": []}, "params_p": {"args": [], "async_get_cluster": [], "cluster_trigger": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestDataprocClusterTrigger.test_async_cluster_trigger_run_returns_error_event", "ret_exprs": [], "ret_type": "", "variables": {"actual_event": "", "expected_event": "", "return_value": ""}, "variables_p": {"actual_event": [["asyncio.locks.Event", 0.3236439038337644], ["Set[str]", 0.14971587153590252], ["dict", 0.10353084311666794], ["Optional[Dict[str, Any]]", 0.08655876674187891]], "expected_event": [["list", 0.4181098079382795], ["Dict[str, str]", 0.09656097638735037], ["str", 0.09011522976016331]], "return_value": [["str", 0.5206333596289574], ["bytes", 0.2716667226979091], ["Dict[int, List[str]]", 0.09100622205705314]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[186, 4], [203, 60]], "fn_var_ln": {"return_value": [[189, 8], [189, 30]], "task": [[198, 8], [198, 12]]}, "fn_var_occur": {"return_value": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "CREATING"]], "task": [["task", "asyncio", "create_task", "cluster_trigger", "run", "__anext__"], ["task", "done"]]}, "name": "test_cluster_run_loop_is_still_running", "params": {"async_get_cluster": "", "caplog": "", "cluster_trigger": "", "mock_hook": "", "self": ""}, "params_descr": {"async_get_cluster": "", "caplog": "", "cluster_trigger": "", "mock_hook": "", "self": ""}, "params_occur": {"async_get_cluster": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "CREATING"]], "caplog": [["caplog", "set_level", "logging", "INFO"]], "cluster_trigger": [["task", "asyncio", "create_task", "cluster_trigger", "run", "__anext__"]], "mock_hook": [["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "CREATING"]], "self": []}, "params_p": {"args": [], "async_get_cluster": [], "caplog": [["logging.Logger", 0.7006705816158395]], "cluster_trigger": [], "kwargs": [], "mock_hook": [], "self": []}, "q_name": "TestDataprocClusterTrigger.test_cluster_run_loop_is_still_running", "ret_exprs": [], "ret_type": "", "variables": {"return_value": "", "task": ""}, "variables_p": {"return_value": [["str", 0.5206333596289574], ["bytes", 0.2716667226979091], ["Dict[int, List[str]]", 0.09100622205705314]], "task": [["asyncio.tasks.Task[Any]", 0.7522359052284914], ["List[Union[Any, Any, Any, Any]]", 0.08165261900483353], ["asyncio.futures.Future[None]", 0.08149442733257524]]}}], "name": "TestDataprocClusterTrigger", "q_name": "TestDataprocClusterTrigger", "variables": {}, "variables_p": {}}, {"cls_lc": [[206, 0], [284, 60]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Asserts that the DataprocBatchTrigger correctly serializes its arguments", "long_descr": "and classpath.", "ret": null}, "fn_lc": [[207, 4], [222, 9]], "fn_var_ln": {"classpath": [[213, 8], [213, 17]], "kwargs": [[213, 19], [213, 25]]}, "fn_var_occur": {"classpath": [["classpath", "kwargs", "batch_trigger", "serialize"]], "kwargs": [["classpath", "kwargs", "batch_trigger", "serialize"], ["kwargs", "TEST_BATCH_ID", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"]]}, "name": "test_async_create_batch_trigger_serialization_should_execute_successfully", "params": {"batch_trigger": "", "self": ""}, "params_descr": {"batch_trigger": "", "self": ""}, "params_occur": {"batch_trigger": [["classpath", "kwargs", "batch_trigger", "serialize"]], "self": []}, "params_p": {"args": [], "batch_trigger": [["antidote.providers.tag.TagProvider", 0.19614976561970407], ["bool", 0.08135841364422837]], "kwargs": [], "self": []}, "q_name": "TestDataprocBatchTrigger.test_async_create_batch_trigger_serialization_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"classpath": "", "kwargs": ""}, "variables_p": {"classpath": [["Set[str]", 0.4999999999750701], ["int", 0.49999999996228883], ["Dict[str, Union[int, str]]", 1.582796261262258e-11], ["List[str]", 1.3730011143514454e-11], ["str", 1.0971499556494418e-11], ["bool", 1.0865339793385232e-11]], "kwargs": [["Set[str]", 0.10609399140129842], ["RuntimeError", 0.10393625610301353], ["Dict[str, Union[int, str]]", 0.09999163741361605], ["int", 0.0932593888940702], ["bool", 0.0918402940493745], ["bytes", 0.09031234286808774], ["str", 0.08741737531169179]]}}, {"docstring": {"func": "Tests the DataprocBatchTrigger only fires once the batch execution reaches a successful state.", "long_descr": null, "ret": null}, "fn_lc": [[226, 4], [244, 45]], "fn_var_ln": {"actual_event": [[242, 8], [242, 20]], "expected_event": [[235, 8], [235, 22]], "return_value": [[233, 8], [233, 30]]}, "fn_var_occur": {"actual_event": [["actual_event", "batch_trigger", "run", "asend", "None"], ["expected_event", "actual_event"]], "expected_event": [["expected_event", "TriggerEvent", "TEST_BATCH_ID", "Batch", "State", "SUCCEEDED"], ["expected_event", "actual_event"]], "return_value": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "SUCCEEDED", "batch_id", "TEST_BATCH_ID"]]}, "name": "test_async_create_batch_trigger_triggers_on_success_should_execute_successfully", "params": {"async_get_batch": "", "batch_trigger": "", "mock_hook": "", "self": ""}, "params_descr": {"async_get_batch": "", "batch_trigger": "", "mock_hook": "", "self": ""}, "params_occur": {"async_get_batch": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "SUCCEEDED", "batch_id", "TEST_BATCH_ID"]], "batch_trigger": [["actual_event", "batch_trigger", "run", "asend", "None"]], "mock_hook": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "SUCCEEDED", "batch_id", "TEST_BATCH_ID"]], "self": []}, "params_p": {"args": [], "async_get_batch": [["mock.MagicMock", 0.24169919911190765]], "batch_trigger": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.24169919911190765]], "self": []}, "q_name": "TestDataprocBatchTrigger.test_async_create_batch_trigger_triggers_on_success_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"actual_event": "", "expected_event": "", "return_value": ""}, "variables_p": {"actual_event": [["str", 0.30975852467774245], ["asyncio.locks.Event", 0.20469748201442886], ["list", 0.1907975956519214], ["int", 0.09969975369524685], ["bool", 0.09363086177278636]], "expected_event": [["list", 0.10528043030502668], ["dict", 0.09064397149561404], ["Dict[str, object]", 0.0876988880849038], ["Dict[str, str]", 0.08690642974709499]], "return_value": [["str", 0.26107375243563397], ["Dict[str, Any]", 0.18956494675342284], ["int", 0.112250992899907], ["List[Tuple[str, str]]", 0.07769291155641427], ["Dict[Any, Union[int, str]]", 0.077640899647493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[248, 4], [257, 45]], "fn_var_ln": {"actual_event": [[255, 8], [255, 20]], "expected_event": [[253, 8], [253, 22]], "return_value": [[251, 8], [251, 30]]}, "fn_var_occur": {"actual_event": [["actual_event", "batch_trigger", "run", "asend", "None"], ["expected_event", "actual_event"]], "expected_event": [["expected_event", "TriggerEvent", "TEST_BATCH_ID", "Batch", "State", "FAILED"], ["expected_event", "actual_event"]], "return_value": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "FAILED", "batch_id", "TEST_BATCH_ID"]]}, "name": "test_async_create_batch_trigger_run_returns_failed_event", "params": {"async_get_batch": "", "batch_trigger": "", "mock_hook": "", "self": ""}, "params_descr": {"async_get_batch": "", "batch_trigger": "", "mock_hook": "", "self": ""}, "params_occur": {"async_get_batch": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "FAILED", "batch_id", "TEST_BATCH_ID"]], "batch_trigger": [["actual_event", "batch_trigger", "run", "asend", "None"]], "mock_hook": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "FAILED", "batch_id", "TEST_BATCH_ID"]], "self": []}, "params_p": {"args": [], "async_get_batch": [["mock.MagicMock", 0.19601172285059873]], "batch_trigger": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.19601172285059873]], "self": []}, "q_name": "TestDataprocBatchTrigger.test_async_create_batch_trigger_run_returns_failed_event", "ret_exprs": [], "ret_type": "", "variables": {"actual_event": "", "expected_event": "", "return_value": ""}, "variables_p": {"actual_event": [["str", 0.30975852467774245], ["asyncio.locks.Event", 0.20469748201442886], ["list", 0.1907975956519214], ["int", 0.09969975369524685], ["bool", 0.09363086177278636]], "expected_event": [["int", 0.36154158220706417], ["str", 0.1796286144489947], ["bytes", 0.09530276046127688], ["Dict[str, Optional[str]]", 0.09382542410845199], ["asyncio.locks.Event", 0.0917388734420666], ["dict", 0.08922357020264626], ["Dict[str, object]", 0.08873917512949941]], "return_value": [["Set[str]", 0.3492769752187952], ["str", 0.26805457329587784], ["Optional[str]", 0.0940926415955239], ["List[Tuple[Any, str]]", 0.08065923283761006]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[261, 4], [268, 45]], "fn_var_ln": {"actual_event": [[266, 8], [266, 20]], "expected_event": [[264, 8], [264, 22]], "return_value": [[262, 8], [262, 30]]}, "fn_var_occur": {"actual_event": [["actual_event", "batch_trigger", "run", "asend", "None"], ["expected_event", "actual_event"]], "expected_event": [["expected_event", "TriggerEvent", "TEST_BATCH_ID", "Batch", "State", "CANCELLED"], ["expected_event", "actual_event"]], "return_value": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "CANCELLED", "batch_id", "TEST_BATCH_ID"]]}, "name": "test_create_batch_run_returns_cancelled_event", "params": {"async_get_batch": "", "batch_trigger": "", "mock_hook": "", "self": ""}, "params_descr": {"async_get_batch": "", "batch_trigger": "", "mock_hook": "", "self": ""}, "params_occur": {"async_get_batch": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "CANCELLED", "batch_id", "TEST_BATCH_ID"]], "batch_trigger": [["actual_event", "batch_trigger", "run", "asend", "None"]], "mock_hook": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "CANCELLED", "batch_id", "TEST_BATCH_ID"]], "self": []}, "params_p": {"args": [], "async_get_batch": [["mock.MagicMock", 0.2293617685706879]], "batch_trigger": [], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.2293617685706879]], "self": []}, "q_name": "TestDataprocBatchTrigger.test_create_batch_run_returns_cancelled_event", "ret_exprs": [], "ret_type": "", "variables": {"actual_event": "", "expected_event": "", "return_value": ""}, "variables_p": {"actual_event": [["str", 0.30975852467774245], ["asyncio.locks.Event", 0.20469748201442886], ["list", 0.1907975956519214], ["int", 0.09969975369524685], ["bool", 0.09363086177278636]], "expected_event": [["list", 0.10528043030502668], ["dict", 0.09064397149561404], ["Dict[str, object]", 0.0876988880849038], ["Dict[str, str]", 0.08690642974709499]], "return_value": [["str", 0.26107375243563397], ["Dict[str, Any]", 0.18956494675342284], ["int", 0.112250992899907], ["List[Tuple[str, str]]", 0.07769291155641427], ["Dict[Any, Union[int, str]]", 0.077640899647493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[272, 4], [284, 60]], "fn_var_ln": {"return_value": [[275, 8], [275, 30]], "task": [[279, 8], [279, 12]]}, "fn_var_occur": {"return_value": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "RUNNING"]], "task": [["task", "asyncio", "create_task", "batch_trigger", "run", "__anext__"], ["task", "done"]]}, "name": "test_create_batch_run_loop_is_still_running", "params": {"async_get_batch": "", "batch_trigger": "", "caplog": "", "mock_hook": "", "self": ""}, "params_descr": {"async_get_batch": "", "batch_trigger": "", "caplog": "", "mock_hook": "", "self": ""}, "params_occur": {"async_get_batch": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "RUNNING"]], "batch_trigger": [["task", "asyncio", "create_task", "batch_trigger", "run", "__anext__"]], "caplog": [["caplog", "set_level", "logging", "INFO"]], "mock_hook": [["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "RUNNING"]], "self": []}, "params_p": {"args": [], "async_get_batch": [["mock.MagicMock", 0.33584107808876307]], "batch_trigger": [], "caplog": [["logging.Logger", 0.7]], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.33584107808876307]], "self": []}, "q_name": "TestDataprocBatchTrigger.test_create_batch_run_loop_is_still_running", "ret_exprs": [], "ret_type": "", "variables": {"return_value": "", "task": ""}, "variables_p": {"return_value": [["str", 0.3799221123960321], ["Dict[str, Any]", 0.19407620867873027], ["int", 0.11689019106672248], ["list", 0.0910135665297898]], "task": [["asyncio.tasks.Task[Any]", 0.7522359052284914], ["List[Union[Any, Any, Any, Any]]", 0.08165261900483353], ["asyncio.futures.Future[None]", 0.08149442733257524]]}}], "name": "TestDataprocBatchTrigger", "q_name": "TestDataprocBatchTrigger", "variables": {}, "variables_p": {}}, {"cls_lc": [[287, 0], [336, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[288, 4], [298, 9]], "fn_var_ln": {"classpath": [[289, 8], [289, 17]], "kwargs": [[289, 19], [289, 25]]}, "fn_var_occur": {"classpath": [["classpath", "kwargs", "workflow_trigger", "serialize"]], "kwargs": [["classpath", "kwargs", "workflow_trigger", "serialize"], ["kwargs", "TEST_OPERATION_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"]]}, "name": "test_async_cluster_trigger_serialization_should_execute_successfully", "params": {"self": "", "workflow_trigger": ""}, "params_descr": {"self": "", "workflow_trigger": ""}, "params_occur": {"self": [], "workflow_trigger": [["classpath", "kwargs", "workflow_trigger", "serialize"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "workflow_trigger": [["antidote.providers.tag.TagProvider", 0.21603869508253054], ["str", 0.16352105402406064], ["Callable", 0.10688414078483373]]}, "q_name": "TestDataprocWorkflowTrigger.test_async_cluster_trigger_serialization_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"classpath": "", "kwargs": ""}, "variables_p": {"classpath": [["Set[str]", 0.4999999999750701], ["int", 0.49999999996228883], ["Dict[str, Union[int, str]]", 1.582796261262258e-11], ["List[str]", 1.3730011143514454e-11], ["str", 1.0971499556494418e-11], ["bool", 1.0865339793385232e-11]], "kwargs": [["bool", 0.1054324526630534], ["Dict[str, Union[int, str]]", 0.1033997055057322], ["int", 0.09612401233615107], ["List[Tuple[None, Any, str]]", 0.09091495561317028], ["Dict[str, str]", 0.08568387611472239]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[302, 4], [318, 45]], "fn_var_ln": {"actual_event": [[317, 8], [317, 20]], "expected_event": [[309, 8], [309, 22]]}, "fn_var_occur": {"actual_event": [["actual_event", "workflow_trigger", "run", "asend", "None"], ["expected_event", "actual_event"]], "expected_event": [["expected_event", "TriggerEvent", "TEST_OPERATION_NAME", "True"], ["expected_event", "actual_event"]]}, "name": "test_async_workflow_triggers_on_success_should_execute_successfully", "params": {"async_get_operation": "", "mock_hook": "", "self": "", "workflow_trigger": ""}, "params_descr": {"async_get_operation": "", "mock_hook": "", "self": "", "workflow_trigger": ""}, "params_occur": {"async_get_operation": [["mock_hook", "return_value", "get_operation", "return_value", "async_get_operation", "name", "TEST_OPERATION_NAME", "done", "True", "response", "error", "Status", "message"]], "mock_hook": [["mock_hook", "return_value", "get_operation", "return_value", "async_get_operation", "name", "TEST_OPERATION_NAME", "done", "True", "response", "error", "Status", "message"]], "self": [], "workflow_trigger": [["actual_event", "workflow_trigger", "run", "asend", "None"]]}, "params_p": {"args": [], "async_get_operation": [], "kwargs": [], "mock_hook": [], "self": [], "workflow_trigger": []}, "q_name": "TestDataprocWorkflowTrigger.test_async_workflow_triggers_on_success_should_execute_successfully", "ret_exprs": [], "ret_type": "", "variables": {"actual_event": "", "expected_event": ""}, "variables_p": {"actual_event": [["str", 0.30975852467774245], ["asyncio.locks.Event", 0.20469748201442886], ["list", 0.1907975956519214], ["int", 0.09969975369524685], ["bool", 0.09363086177278636]], "expected_event": [["str", 0.45912869539096846], ["asyncio.locks.Event", 0.12359508410183791], ["Dict[str, str]", 0.08572136255709023]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[322, 4], [336, 45]], "fn_var_ln": {"actual_event": [[335, 8], [335, 20]], "expected_event": [[327, 8], [327, 22]]}, "fn_var_occur": {"actual_event": [["actual_event", "workflow_trigger", "run", "asend", "None"], ["expected_event", "actual_event"]], "expected_event": [["expected_event", "TriggerEvent", "TEST_OPERATION_NAME", "True"], ["expected_event", "actual_event"]]}, "name": "test_async_workflow_triggers_on_error", "params": {"async_get_operation": "", "mock_hook": "", "self": "", "workflow_trigger": ""}, "params_descr": {"async_get_operation": "", "mock_hook": "", "self": "", "workflow_trigger": ""}, "params_occur": {"async_get_operation": [["mock_hook", "return_value", "get_operation", "return_value", "async_get_operation", "name", "TEST_OPERATION_NAME", "done", "True", "response", "error", "Status", "message"]], "mock_hook": [["mock_hook", "return_value", "get_operation", "return_value", "async_get_operation", "name", "TEST_OPERATION_NAME", "done", "True", "response", "error", "Status", "message"]], "self": [], "workflow_trigger": [["actual_event", "workflow_trigger", "run", "asend", "None"]]}, "params_p": {"args": [], "async_get_operation": [["mock.MagicMock", 0.18902661235389034]], "kwargs": [], "mock_hook": [["mock.MagicMock", 0.18902661235389034]], "self": [], "workflow_trigger": []}, "q_name": "TestDataprocWorkflowTrigger.test_async_workflow_triggers_on_error", "ret_exprs": [], "ret_type": "", "variables": {"actual_event": "", "expected_event": ""}, "variables_p": {"actual_event": [["str", 0.30975852467774245], ["asyncio.locks.Event", 0.20469748201442886], ["list", 0.1907975956519214], ["int", 0.09969975369524685], ["bool", 0.09363086177278636]], "expected_event": [["str", 0.45912869539096846], ["asyncio.locks.Event", 0.12359508410183791], ["Dict[str, str]", 0.08572136255709023]]}}], "name": "TestDataprocWorkflowTrigger", "q_name": "TestDataprocWorkflowTrigger", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 0], [59, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "cluster_trigger", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "cluster_trigger", "ret_exprs": ["return DataprocClusterTrigger( cluster_name=TEST_CLUSTER_NAME, project_id=TEST_PROJECT_ID, region=TEST_REGION, gcp_conn_id=TEST_GCP_CONN_ID, impersonation_chain=None, polling_interval_seconds=TEST_POLL_INTERVAL,)"], "ret_type": "", "ret_type_p": [["str", 0.5148476722439703], ["Optional[str]", 0.10686657391355038], ["List[str]", 0.09113997469849339]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 0], [72, 18]], "fn_var_ln": {"trigger": [[64, 4], [64, 11]]}, "fn_var_occur": {"trigger": [["trigger", "DataprocBatchTrigger", "batch_id", "TEST_BATCH_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"]]}, "name": "batch_trigger", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "batch_trigger", "ret_exprs": ["return trigger"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"trigger": ""}, "variables_p": {"trigger": [["str", 0.31365329161142974], ["asyncio.futures.Future[Any]", 0.10050042197939907], ["Dict[str, str]", 0.08890571629836272]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 0], [84, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "workflow_trigger", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "workflow_trigger", "ret_exprs": ["return DataprocWorkflowTrigger( name=TEST_OPERATION_NAME, project_id=TEST_PROJECT_ID, region=TEST_REGION, gcp_conn_id=TEST_GCP_CONN_ID, impersonation_chain=None, polling_interval_seconds=TEST_POLL_INTERVAL,)"], "ret_type": "", "ret_type_p": [["List[int]", 0.09446042323837145]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [94, 16]], "fn_var_ln": {"f": [[92, 8], [92, 9]], "m": [[90, 8], [90, 9]]}, "fn_var_occur": {"f": [["f", "asyncio", "Future"], ["f", "set_result", "m"]], "m": [["m", "mock", "MagicMock"], ["m", "configure_mock", "kwargs"], ["f", "set_result", "m"]]}, "name": "func", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": [["m", "configure_mock", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "async_get_cluster.<locals>.func", "ret_exprs": ["return f"], "ret_type": "", "ret_type_p": [["str", 0.7974341793170379], ["Optional[str]", 0.10081823000430966]], "variables": {"f": "", "m": ""}, "variables_p": {"f": [["dict", 0.1293878342185055], ["str", 0.11192601201185885], ["Pattern[str]", 0.08534582117522528]], "m": [["mock.Mock", 0.21269708186415098], ["mock.MagicMock", 0.12280603254237693]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[88, 0], [96, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "async_get_cluster", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "async_get_cluster", "ret_exprs": ["return func"], "ret_type": "", "ret_type_p": [["str", 0.2572320225570754], ["Tuple[str, str]", 0.0820777526553576], ["Callable[[KT], VT]", 0.08051563888012596], ["bool", 0.08006479735250865]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [106, 16]], "fn_var_ln": {"f": [[104, 8], [104, 9]], "m": [[102, 8], [102, 9]]}, "fn_var_occur": {"f": [["f", "Future"], ["f", "set_result", "m"]], "m": [["m", "mock", "MagicMock"], ["m", "configure_mock", "kwargs"], ["f", "set_result", "m"]]}, "name": "func", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": [["m", "configure_mock", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "async_get_batch.<locals>.func", "ret_exprs": ["return f"], "ret_type": "", "ret_type_p": [["str", 0.7974341793170379], ["Optional[str]", 0.10081823000430966]], "variables": {"f": "", "m": ""}, "variables_p": {"f": [["str", 0.832323955861026], ["Dict[str, str]", 0.0881793182682658], ["Tuple[str, str]", 0.07949672587070804]], "m": [["mock.Mock", 0.21269708186415098], ["mock.MagicMock", 0.12280603254237693]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 0], [108, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "async_get_batch", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "async_get_batch", "ret_exprs": ["return func"], "ret_type": "", "ret_type_p": [["str", 0.2572320225570754], ["Tuple[str, str]", 0.0820777526553576], ["Callable[[KT], VT]", 0.08051563888012596], ["bool", 0.08006479735250865]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [118, 16]], "fn_var_ln": {"f": [[116, 8], [116, 9]], "m": [[114, 8], [114, 9]]}, "fn_var_occur": {"f": [["f", "Future"], ["f", "set_result", "m"]], "m": [["m", "mock", "MagicMock"], ["m", "configure_mock", "kwargs"], ["f", "set_result", "m"]]}, "name": "func", "params": {"kwargs": ""}, "params_descr": {"kwargs": ""}, "params_occur": {"kwargs": [["m", "configure_mock", "kwargs"]]}, "params_p": {"args": [], "kwargs": []}, "q_name": "async_get_operation.<locals>.func", "ret_exprs": ["return f"], "ret_type": "", "ret_type_p": [["str", 0.7974341793170379], ["Optional[str]", 0.10081823000430966]], "variables": {"f": "", "m": ""}, "variables_p": {"f": [["str", 0.832323955861026], ["Dict[str, str]", 0.0881793182682658], ["Tuple[str, str]", 0.07949672587070804]], "m": [["mock.Mock", 0.21269708186415098], ["mock.MagicMock", 0.12280603254237693]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 0], [120, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "async_get_operation", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "async_get_operation", "ret_exprs": ["return func"], "ret_type": "", "ret_type_p": [["str", 0.2572320225570754], ["Tuple[str, str]", 0.0820777526553576], ["Callable[[KT], VT]", 0.08051563888012596], ["bool", 0.08006479735250865]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "asyncio", "logging", "asyncio", "Future", "unittest", "mock", "pytest", "google", "cloud", "dataproc_v1", "Batch", "ClusterStatus", "google", "rpc", "status_pb2", "Status", "airflow", "providers", "google", "cloud", "triggers", "dataproc", "DataprocBatchTrigger", "DataprocClusterTrigger", "DataprocWorkflowTrigger", "airflow", "triggers", "base", "TriggerEvent"], "mod_var_ln": {"BATCH_CONFIG": [[38, 0], [38, 12]], "TEST_BATCH_ID": [[37, 0], [37, 13]], "TEST_CLUSTER_NAME": [[44, 0], [44, 17]], "TEST_GCP_CONN_ID": [[46, 0], [46, 16]], "TEST_OPERATION_NAME": [[47, 0], [47, 19]], "TEST_POLL_INTERVAL": [[45, 0], [45, 18]], "TEST_PROJECT_ID": [[35, 0], [35, 15]], "TEST_REGION": [[36, 0], [36, 11]]}, "mod_var_occur": {"BATCH_CONFIG": [], "TEST_BATCH_ID": [["trigger", "DataprocBatchTrigger", "batch_id", "TEST_BATCH_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_BATCH_ID", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "SUCCEEDED", "batch_id", "TEST_BATCH_ID"], ["expected_event", "TriggerEvent", "TEST_BATCH_ID", "Batch", "State", "SUCCEEDED"], ["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "FAILED", "batch_id", "TEST_BATCH_ID"], ["expected_event", "TriggerEvent", "TEST_BATCH_ID", "Batch", "State", "FAILED"], ["mock_hook", "return_value", "async_get_batch", "state", "Batch", "State", "CANCELLED", "batch_id", "TEST_BATCH_ID"], ["expected_event", "TriggerEvent", "TEST_BATCH_ID", "Batch", "State", "CANCELLED"]], "TEST_CLUSTER_NAME": [["DataprocClusterTrigger", "cluster_name", "TEST_CLUSTER_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_CLUSTER_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "RUNNING"], ["expected_event", "TriggerEvent", "TEST_CLUSTER_NAME", "ClusterStatus", "State", "RUNNING", "actual_event", "payload"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "ERROR"], ["expected_event", "TriggerEvent", "TEST_CLUSTER_NAME", "ClusterStatus", "State", "ERROR", "actual_event", "payload"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "CREATING"]], "TEST_GCP_CONN_ID": [["DataprocClusterTrigger", "cluster_name", "TEST_CLUSTER_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["trigger", "DataprocBatchTrigger", "batch_id", "TEST_BATCH_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["DataprocWorkflowTrigger", "name", "TEST_OPERATION_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_CLUSTER_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_BATCH_ID", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_OPERATION_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"]], "TEST_OPERATION_NAME": [["DataprocWorkflowTrigger", "name", "TEST_OPERATION_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_OPERATION_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["mock_hook", "return_value", "get_operation", "return_value", "async_get_operation", "name", "TEST_OPERATION_NAME", "done", "True", "response", "error", "Status", "message"], ["expected_event", "TriggerEvent", "TEST_OPERATION_NAME", "True"], ["mock_hook", "return_value", "get_operation", "return_value", "async_get_operation", "name", "TEST_OPERATION_NAME", "done", "True", "response", "error", "Status", "message"], ["expected_event", "TriggerEvent", "TEST_OPERATION_NAME", "True"]], "TEST_POLL_INTERVAL": [["DataprocClusterTrigger", "cluster_name", "TEST_CLUSTER_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["trigger", "DataprocBatchTrigger", "batch_id", "TEST_BATCH_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["DataprocWorkflowTrigger", "name", "TEST_OPERATION_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_CLUSTER_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["TEST_POLL_INTERVAL"], ["kwargs", "TEST_BATCH_ID", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["TEST_POLL_INTERVAL"], ["kwargs", "TEST_OPERATION_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"]], "TEST_PROJECT_ID": [["DataprocClusterTrigger", "cluster_name", "TEST_CLUSTER_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["trigger", "DataprocBatchTrigger", "batch_id", "TEST_BATCH_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["DataprocWorkflowTrigger", "name", "TEST_OPERATION_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_CLUSTER_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "RUNNING"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "ERROR"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "CREATING"], ["kwargs", "TEST_BATCH_ID", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_OPERATION_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"]], "TEST_REGION": [["DataprocClusterTrigger", "cluster_name", "TEST_CLUSTER_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["trigger", "DataprocBatchTrigger", "batch_id", "TEST_BATCH_ID", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["DataprocWorkflowTrigger", "name", "TEST_OPERATION_NAME", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "gcp_conn_id", "TEST_GCP_CONN_ID", "impersonation_chain", "None", "polling_interval_seconds", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_CLUSTER_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "RUNNING"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "ERROR"], ["mock_hook", "return_value", "async_get_cluster", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "cluster_name", "TEST_CLUSTER_NAME", "status", "ClusterStatus", "state", "ClusterStatus", "State", "CREATING"], ["kwargs", "TEST_BATCH_ID", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"], ["kwargs", "TEST_OPERATION_NAME", "TEST_PROJECT_ID", "TEST_REGION", "TEST_GCP_CONN_ID", "None", "TEST_POLL_INTERVAL"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 93}, "session_id": "_zF6NjpSGAfO7Dmapvhkrn8k3MpbZmaWVGRLkTmdnGk", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BATCH_CONFIG": "", "TEST_BATCH_ID": "", "TEST_CLUSTER_NAME": "", "TEST_GCP_CONN_ID": "", "TEST_OPERATION_NAME": "", "TEST_POLL_INTERVAL": "", "TEST_PROJECT_ID": "", "TEST_REGION": ""}, "variables_p": {"BATCH_CONFIG": [["bool", 0.30000000000000004], ["Dict[str, Union[Any, int, str]]", 0.1], ["str", 0.1], ["Dict[str, Union[Any, Any, Any]]", 0.1], ["Dict[str, Union[int, str]]", 0.1], ["Dict[str, Union[None, float, str]]", 0.1], ["Dict[str, Dict[str, Any]]", 0.1]], "TEST_BATCH_ID": [["str", 0.6199739497606221], ["int", 0.18832138923788738], ["dict", 0.09610711216754886]], "TEST_CLUSTER_NAME": [["str", 0.6173232961020817], ["Optional[str]", 0.1917533090469476], ["Callable", 0.08453651878750083]], "TEST_GCP_CONN_ID": [["str", 0.798546591594044], ["Set[str]", 0.08399161803717409]], "TEST_OPERATION_NAME": [["str", 0.784616153483423], ["Optional[str]", 0.1076919232582885]], "TEST_POLL_INTERVAL": [["str", 0.5793900725141619], ["Dict[str, Union[Any, str]]", 0.09034838284753208], ["int", 0.08329467004315272], ["Optional[Literal]", 0.08063128542581689], ["Dict[str, List[str]]", 0.08031502738787978]], "TEST_PROJECT_ID": [["str", 0.9999999999999998]], "TEST_REGION": [["str", 0.5793900725141619], ["Dict[str, Union[Any, str]]", 0.09034838284753208], ["int", 0.08329467004315272], ["Optional[Literal]", 0.08063128542581689], ["Dict[str, List[str]]", 0.08031502738787978]]}}}