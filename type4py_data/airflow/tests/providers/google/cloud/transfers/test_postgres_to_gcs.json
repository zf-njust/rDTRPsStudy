{"error": null, "response": {"classes": [{"cls_lc": [[51, 0], [200, 51]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[53, 4], [77, 17]], "fn_var_ln": {"postgres": [[54, 8], [54, 16]]}, "fn_var_occur": {"postgres": [["postgres", "PostgresHook"], ["postgres", "get_conn", "conn"]]}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestPostgresToGoogleCloudStorageOperator.setup_class", "ret_exprs": [], "ret_type": "", "variables": {"postgres": ""}, "variables_p": {"postgres": [["str", 0.4999999999845869], ["int", 0.49999999996751665]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [85, 73]], "fn_var_ln": {"postgres": [[81, 8], [81, 16]]}, "fn_var_occur": {"postgres": [["postgres", "PostgresHook"], ["postgres", "get_conn", "conn"]]}, "name": "teardown_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestPostgresToGoogleCloudStorageOperator.teardown_class", "ret_exprs": [], "ret_type": "", "variables": {"postgres": ""}, "variables_p": {"postgres": [["str", 0.4999999999845869], ["int", 0.49999999996751665]]}}, {"docstring": {"func": "Test PostgresToGoogleCloudStorageOperator instance is properly initialized.", "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [93, 38]], "fn_var_ln": {"op": [[89, 8], [89, 10]]}, "fn_var_occur": {"op": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "task_id", "TASK_ID"], ["op", "sql", "SQL"], ["op", "bucket", "BUCKET"], ["op", "filename", "FILENAME"]]}, "name": "test_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_init", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.2277441438081069], ["Dict[str, Optional[str]]", 0.06416955548789062]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [101, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_uploaded_file_content", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "self": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "self": "", "tmp_filename": ""}, "params_occur": {"bucket": [["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["FILENAME", "format", "obj"]], "self": [], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.3287428232982076], ["Optional[str]", 0.2167449108874563], ["int", 0.2063861887682688], ["bool", 0.1696182221155482], ["Sequence[int]", 0.07850785493051918]], "gzip": [["bool", 0.4703847736528261], ["str", 0.3087967059513048], ["int", 0.11630542732804759], ["IO", 0.10451309306782153]], "kwargs": [], "metadata": [["bool", 0.4703847736528261], ["str", 0.3087967059513048], ["int", 0.11630542732804759], ["IO", 0.10451309306782153]], "mime_type": [["bool", 0.4703847736528261], ["str", 0.3087967059513048], ["int", 0.11630542732804759], ["IO", 0.10451309306782153]], "obj": [["str", 0.9999999999999998]], "self": [], "tmp_filename": [["str", 0.9070256199289382], ["Optional[str]", 0.09297438007106193]]}, "q_name": "TestPostgresToGoogleCloudStorageOperator._assert_uploaded_file_content", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [124, 55]], "fn_var_ln": {"op": [[121, 8], [121, 10]]}, "fn_var_occur": {"op": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "convert_type", "value", "None", "expected"]]}, "name": "test_convert_type", "params": {"expected": "", "self": "", "value": ""}, "params_descr": {"expected": "", "self": "", "value": ""}, "params_occur": {"expected": [["op", "convert_type", "value", "None", "expected"]], "self": [], "value": [["op", "convert_type", "value", "None", "expected"]]}, "params_p": {"args": [], "expected": [["dict", 0.203211096192832], ["str", 0.1908788086189445], ["Optional[str]", 0.10778523915515818], ["Callable", 0.10000504993634114], ["Optional[Dict[str, Any]]", 0.09903389884776474], ["Optional[Dict]", 0.09576401913091971]], "kwargs": [], "self": [], "value": [["dict", 0.203211096192832], ["str", 0.1908788086189445], ["Optional[str]", 0.10778523915515818], ["Callable", 0.10000504993634114], ["Optional[Dict[str, Any]]", 0.09903389884776474], ["Optional[Dict]", 0.09576401913091971]]}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_convert_type", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.20912682713215697], ["str", 0.07002800089346174], ["Dict[str, Optional[str]]", 0.06955723572130473], ["Dict[str, Union[int, str]]", 0.06728353129153936]]}}, {"docstring": {"func": "Test the execute function in case where the run is successful.", "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [135, 24]], "fn_var_ln": {"gcs_hook_mock": [[133, 8], [133, 21]], "op": [[129, 8], [129, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "gcs_hook_mock_class", "return_value"], ["gcs_hook_mock", "upload", "side_effect", "self", "_assert_uploaded_file_content"]], "op": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "execute", "None"]]}, "name": "test_exec_success", "params": {"gcs_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [["gcs_hook_mock", "gcs_hook_mock_class", "return_value"]], "self": [["gcs_hook_mock", "upload", "side_effect", "self", "_assert_uploaded_file_content"]]}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "self": []}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_exec_success", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "op": [["Dict[str, Union[Any, bool, str]]", 0.20912682713215697], ["str", 0.07002800089346174], ["Dict[str, Optional[str]]", 0.06955723572130473], ["Dict[str, Union[int, str]]", 0.06728353129153936]]}}, {"docstring": {"func": "Test the execute in case where the run is successful while using server side cursor.", "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [151, 24]], "fn_var_ln": {"gcs_hook_mock": [[149, 8], [149, 21]], "op": [[140, 8], [140, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "gcs_hook_mock_class", "return_value"], ["gcs_hook_mock", "upload", "side_effect", "self", "_assert_uploaded_file_content"]], "op": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "use_server_side_cursor", "True", "cursor_itersize"], ["op", "execute", "None"]]}, "name": "test_exec_success_server_side_cursor", "params": {"gcs_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [["gcs_hook_mock", "gcs_hook_mock_class", "return_value"]], "self": [["gcs_hook_mock", "upload", "side_effect", "self", "_assert_uploaded_file_content"]]}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "self": []}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_exec_success_server_side_cursor", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "op": [["Dict[str, Union[Any, bool, str]]", 0.21536383119049335], ["str", 0.0764713357861161], ["Dict[str, Optional[str]]", 0.06941580988642891]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 8], [168, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["expected_upload", "obj", "file", "read"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.5662193080867797], ["Optional[str]", 0.13741048348053062], ["bool", 0.09447498720480671]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_file_splitting.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that ndjson is split by approx_max_file_size_bytes param.", "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [179, 24]], "fn_var_ln": {"expected_upload": [[158, 8], [158, 23]], "gcs_hook_mock": [[157, 8], [157, 21]], "op": [[172, 8], [172, 10]]}, "fn_var_occur": {"expected_upload": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"]], "gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"]], "op": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "execute", "None"]]}, "name": "test_file_splitting", "params": {"gcs_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [["mock.MagicMock", 0.08705769519065248]], "kwargs": [], "self": []}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_file_splitting", "ret_exprs": [], "ret_type": "", "variables": {"expected_upload": "", "gcs_hook_mock": "", "op": ""}, "variables_p": {"expected_upload": [["str", 0.5096167315544864], ["Dict[str, str]", 0.10973691577608621], ["List[str]", 0.10791667088393013], ["Dict[str, Union[Any, Any]]", 0.09347309469967165], ["Dict[str, Any]", 0.09337891967913568]], "gcs_hook_mock": [], "op": [["Dict[str, Union[Any, bool, str]]", 0.22033640795347423], ["Dict[str, Union[Any, Any, str]]", 0.15713536146998314], ["int", 0.07083541986424507]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 8], [190, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [], "gzip": [], "metadata": [], "mime_type": [], "obj": [["obj", "SCHEMA_FILENAME"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_schema_file.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test writing schema files.", "long_descr": null, "ret": null}, "fn_lc": [[182, 4], [200, 51]], "fn_var_ln": {"gcs_hook_mock": [[185, 8], [185, 21]], "op": [[194, 8], [194, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"], ["gcs_hook_mock", "upload", "call_count"]], "op": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "execute", "None"]]}, "name": "test_schema_file", "params": {"gcs_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "self": []}, "q_name": "TestPostgresToGoogleCloudStorageOperator.test_schema_file", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "op": [["str", 0.14546551543496505], ["Dict[str, str]", 0.09089959259198988], ["Dict[str, Dict[str, Any]]", 0.07882390257484749]]}}], "name": "TestPostgresToGoogleCloudStorageOperator", "q_name": "TestPostgresToGoogleCloudStorageOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "unittest", "mock", "patch", "pytest", "pytz", "airflow", "providers", "google", "cloud", "transfers", "postgres_to_gcs", "PostgresToGCSOperator", "airflow", "providers", "postgres", "hooks", "postgres", "PostgresHook"], "mod_var_ln": {"BUCKET": [[34, 0], [34, 6]], "FILENAME": [[35, 0], [35, 8]], "NDJSON_LINES": [[37, 0], [37, 12]], "POSTGRES_CONN_ID": [[32, 0], [32, 16]], "SCHEMA_FILENAME": [[42, 0], [42, 15]], "SCHEMA_JSON": [[43, 0], [43, 11]], "SQL": [[33, 0], [33, 3]], "TABLES": [[29, 0], [29, 6]], "TASK_ID": [[31, 0], [31, 7]]}, "mod_var_occur": {"BUCKET": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "bucket", "BUCKET"], ["BUCKET", "bucket"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "use_server_side_cursor", "True", "cursor_itersize"], ["BUCKET", "bucket"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "FILENAME": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "filename", "FILENAME"], ["FILENAME", "format", "obj"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "use_server_side_cursor", "True", "cursor_itersize"], ["expected_upload", "FILENAME", "format", "join", "NDJSON_LINES", "FILENAME", "format", "NDJSON_LINES"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "NDJSON_LINES": [["join", "NDJSON_LINES", "file", "read"], ["expected_upload", "FILENAME", "format", "join", "NDJSON_LINES", "FILENAME", "format", "NDJSON_LINES"]], "POSTGRES_CONN_ID": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "use_server_side_cursor", "True", "cursor_itersize"]], "SCHEMA_FILENAME": [["obj", "SCHEMA_FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "SCHEMA_JSON": [["SCHEMA_JSON", "file", "read"]], "SQL": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "sql", "SQL"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "use_server_side_cursor", "True", "cursor_itersize"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "TABLES": [["TABLES"], ["TABLES"]], "TASK_ID": [["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "task_id", "TASK_ID"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "postgres_conn_id", "POSTGRES_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "use_server_side_cursor", "True", "cursor_itersize"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "PostgresToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 52}, "session_id": "bgMuxXMNTRGu6VxrxgT3purUyFgjAABGoNlxuQ2wKqA", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BUCKET": "", "FILENAME": "", "NDJSON_LINES": "", "POSTGRES_CONN_ID": "", "SCHEMA_FILENAME": "", "SCHEMA_JSON": "", "SQL": "", "TABLES": "", "TASK_ID": ""}, "variables_p": {"BUCKET": [["str", 0.19523191093972347], ["busboy.util.Maybe[datetime.datetime]", 0.09807437841642827], ["list", 0.09095060984116714], ["int", 0.08814255569550648]], "FILENAME": [["List[str]", 0.40752314540078083], ["Optional[str]", 0.18298875399664027], ["str", 0.11284715160877373], ["Type[Dict[str, Any]]", 0.11184741637507872], ["list", 0.0927559620289927], ["dict", 0.09203757058973383]], "NDJSON_LINES": [["str", 0.6019146720360374], ["List[Dict[str, Any]]", 0.10687473193968905], ["List[str]", 0.09113319100868299], ["list", 0.0892432433966443]], "POSTGRES_CONN_ID": [["str", 0.18415571705265923], ["int", 0.09011046823547265], ["tools.bots.cloud.status.Status", 0.0825011081811456]], "SCHEMA_FILENAME": [["str", 0.7693055622671696], ["List[str]", 0.12222570830778824], ["list", 0.10846872942504214]], "SCHEMA_JSON": [["bytes", 0.3026067298303556], ["Tuple[int, int, int]", 0.15713779770399025], ["list", 0.10182531971974894], ["str", 0.09002303576195791]], "SQL": [["int", 0.5271649511097327], ["Dict[str, Any]", 0.08424323428686478]], "TABLES": [["dict", 0.3], ["list", 0.3], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.09999999999999999], ["List[Type[Any]]", 0.09999999999999999]], "TASK_ID": [["str", 0.3928078150532605], ["int", 0.08278961414379926]]}}}