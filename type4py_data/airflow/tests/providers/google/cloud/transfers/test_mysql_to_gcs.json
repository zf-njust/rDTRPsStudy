{"error": null, "response": {"classes": [{"cls_lc": [[76, 0], [362, 28]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test MySqlToGoogleCloudStorageOperator instance is properly initialized.", "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [92, 40]], "fn_var_ln": {"op": [[79, 8], [79, 10]]}, "fn_var_occur": {"op": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "export_format", "field_delimiter"], ["op", "task_id", "TASK_ID"], ["op", "sql", "SQL"], ["op", "bucket", "BUCKET"], ["op", "filename", "JSON_FILENAME"], ["op", "export_format"], ["op", "field_delimiter"]]}, "name": "test_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_init", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.2749872687454295], ["str", 0.09320248879027583], ["Dict[str, Union[int, str]]", 0.08433050067999079], ["int", 0.07848894255897146], ["Dict[str, Dict[str, Any]]", 0.07397844956060438]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [116, 62]], "fn_var_ln": {"op": [[113, 8], [113, 10]]}, "fn_var_occur": {"op": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["op", "convert_type", "value", "schema_type", "expected"]]}, "name": "test_convert_type", "params": {"expected": "", "schema_type": "", "self": "", "value": ""}, "params_descr": {"expected": "", "schema_type": "", "self": "", "value": ""}, "params_occur": {"expected": [["op", "convert_type", "value", "schema_type", "expected"]], "schema_type": [["op", "convert_type", "value", "schema_type", "expected"]], "self": [], "value": [["op", "convert_type", "value", "schema_type", "expected"]]}, "params_p": {"args": [], "expected": [["Type", 0.21999783599754708], ["str", 0.200112081312322], ["Optional[str]", 0.18186684718731347], ["bool", 0.10772184371210544]], "kwargs": [], "schema_type": [["Type", 0.21999783599754708], ["str", 0.200112081312322], ["Optional[str]", 0.18186684718731347], ["bool", 0.10772184371210544]], "self": [], "value": [["Type", 0.21999783599754708], ["str", 0.200112081312322], ["Optional[str]", 0.18186684718731347], ["bool", 0.10772184371210544]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_convert_type", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.21916889644172613], ["Dict[str, Optional[str]]", 0.07685872563412209], ["Dict[str, Union[int, str]]", 0.06474521042074527]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[132, 8], [138, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["JSON_FILENAME", "format", "obj"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.20983431230075147], ["int", 0.20983431230075147], ["Optional[bytes]", 0.17803672171136464], ["Mapping[str, Any]", 0.1121289659878839]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.7994248742445959], ["bool", 0.10200390613697426], ["int", 0.09857121961842974]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_json.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test successful run of execute function for JSON", "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [145, 80]], "fn_var_ln": {"gcs_hook_mock": [[130, 8], [130, 21]], "mysql_hook_mock": [[126, 8], [126, 23]], "op": [[122, 8], [122, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"]], "mysql_hook_mock": [["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_called_once_with", "SQL"]], "op": [["op", "execute", "None"]]}, "name": "test_exec_success_json", "params": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "mysql_hook_mock_class": [["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"]], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "mysql_hook_mock_class": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_json", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "mysql_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "mysql_hook_mock": [["bool", 0.3542827001583012], ["mock.Mock", 0.1642273866973677], ["str", 0.08485697688658964]], "op": [["Dict[str, str]", 0.13247281322225193], ["List[str]", 0.09148843208565034], ["int", 0.08917907452731462], ["list", 0.0879936029972686], ["dict", 0.08518551098738916], ["Dict[str, Dict[str, str]]", 0.08196872927604497]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 8], [172, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["CSV_FILENAME", "format", "obj"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.1975960501433862], ["Optional[int]", 0.10176040275016628], ["Optional[str]", 0.10176040275016628], ["Mapping[str, Any]", 0.09583564739321991], ["int", 0.09583564739321991]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.7994248742445959], ["bool", 0.10200390613697426], ["int", 0.09857121961842974]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_csv.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test successful run of execute function for CSV", "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [179, 80]], "fn_var_ln": {"gcs_hook_mock": [[164, 8], [164, 21]], "mysql_hook_mock": [[160, 8], [160, 23]], "op": [[151, 8], [151, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"]], "mysql_hook_mock": [["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_called_once_with", "SQL"]], "op": [["op", "execute", "None"]]}, "name": "test_exec_success_csv", "params": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "mysql_hook_mock_class": [["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"]], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "mysql_hook_mock_class": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_csv", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "mysql_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "mysql_hook_mock": [["bool", 0.3542827001583012], ["mock.Mock", 0.1642273866973677], ["str", 0.08485697688658964]], "op": [["Dict[str, str]", 0.13247281322225193], ["List[str]", 0.09148843208565034], ["int", 0.08917907452731462], ["list", 0.0879936029972686], ["dict", 0.08518551098738916], ["Dict[str, Dict[str, str]]", 0.08196872927604497]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[201, 8], [207, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME", "ensure_utc", "True"], ["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["CSV_FILENAME", "format", "obj"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.1975960501433862], ["Optional[int]", 0.10176040275016628], ["Optional[str]", 0.10176040275016628], ["Mapping[str, Any]", 0.09583564739321991], ["int", 0.09583564739321991]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.7994248742445959], ["bool", 0.10200390613697426], ["int", 0.09857121961842974]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_csv_ensure_utc.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test successful run of execute function for CSV", "long_descr": null, "ret": null}, "fn_lc": [[183, 4], [214, 107]], "fn_var_ln": {"gcs_hook_mock": [[199, 8], [199, 21]], "mysql_hook_mock": [[195, 8], [195, 23]], "op": [[185, 8], [185, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"]], "mysql_hook_mock": [["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_has_calls", "mock", "call", "TZ_QUERY", "mock", "call", "SQL"]], "op": [["op", "execute", "None"]]}, "name": "test_exec_success_csv_ensure_utc", "params": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "mysql_hook_mock_class": [["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"]], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "mysql_hook_mock_class": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_csv_ensure_utc", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "mysql_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "mysql_hook_mock": [], "op": [["Dict[str, str]", 0.13247281322225193], ["List[str]", 0.09148843208565034], ["int", 0.08917907452731462], ["list", 0.0879936029972686], ["dict", 0.08518551098738916], ["Dict[str, Dict[str, str]]", 0.08196872927604497]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[236, 8], [242, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "field_delimiter", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["CSV_FILENAME", "format", "obj"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.29691934321816915], ["int", 0.29691934321816915], ["Mapping[str, Any]", 0.10566976053970895], ["Optional[bytes]", 0.08697925868646648]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.7994248742445959], ["bool", 0.10200390613697426], ["int", 0.09857121961842974]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_csv_with_delimiter.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test successful run of execute function for CSV with a field delimiter", "long_descr": null, "ret": null}, "fn_lc": [[218, 4], [249, 80]], "fn_var_ln": {"gcs_hook_mock": [[234, 8], [234, 21]], "mysql_hook_mock": [[230, 8], [230, 23]], "op": [[220, 8], [220, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"]], "mysql_hook_mock": [["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_called_once_with", "SQL"]], "op": [["op", "execute", "None"]]}, "name": "test_exec_success_csv_with_delimiter", "params": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "mysql_hook_mock_class": [["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"]], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "mysql_hook_mock_class": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_exec_success_csv_with_delimiter", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "mysql_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "mysql_hook_mock": [["bool", 0.3542827001583012], ["mock.Mock", 0.1642273866973677], ["str", 0.08485697688658964]], "op": [["Dict[str, str]", 0.13247281322225193], ["List[str]", 0.09148843208565034], ["int", 0.08917907452731462], ["list", 0.0879936029972686], ["dict", 0.08518551098738916], ["Dict[str, Dict[str, str]]", 0.08196872927604497]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[265, 8], [270, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["expected_upload", "obj", "file", "read"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.5662193080867797], ["Optional[str]", 0.13741048348053062], ["bool", 0.09447498720480671]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_file_splitting.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that ndjson is split by approx_max_file_size_bytes param.", "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [281, 24]], "fn_var_ln": {"expected_upload": [[260, 8], [260, 23]], "gcs_hook_mock": [[259, 8], [259, 21]], "mysql_hook_mock": [[255, 8], [255, 23]], "op": [[274, 8], [274, 10]]}, "fn_var_occur": {"expected_upload": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "JSON_FILENAME", "format"]], "gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"]], "mysql_hook_mock": [], "op": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "JSON_FILENAME", "format"], ["op", "execute", "None"]]}, "name": "test_file_splitting", "params": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "mysql_hook_mock_class": [], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [], "kwargs": [], "mysql_hook_mock_class": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_file_splitting", "ret_exprs": [], "ret_type": "", "variables": {"expected_upload": "", "gcs_hook_mock": "", "mysql_hook_mock": "", "op": ""}, "variables_p": {"expected_upload": [["str", 0.1828790462398836], ["Dict[int, str]", 0.1227430575934041], ["list", 0.10857770606978595], ["Dict[str, int]", 0.10228196960670322], ["List[Union[Any, Any]]", 0.10150093887616413], ["List[Dict[str, Any]]", 0.09015338087718262]], "gcs_hook_mock": [], "mysql_hook_mock": [["str", 0.49999999999739186], ["bool", 3.12867318493596e-11], ["list", 2.261134476370882e-11]], "op": [["Dict[str, Union[Any, bool, str]]", 0.2303854412919776], ["Dict[str, Optional[str]]", 0.08859644982809059], ["Dict[str, Union[int, str]]", 0.0866224684466865], ["Dict[int, Union[Any, Any]]", 0.07691352224108133], ["Dict[str, int]", 0.075201103014182], ["Dict[Any, str]", 0.07506846750675326]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[293, 8], [297, 63]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [], "gzip": [], "metadata": [], "mime_type": [], "obj": [["obj", "SCHEMA_FILENAME"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_schema_file.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test writing schema files.", "long_descr": null, "ret": null}, "fn_lc": [[285, 4], [307, 51]], "fn_var_ln": {"gcs_hook_mock": [[291, 8], [291, 21]], "mysql_hook_mock": [[287, 8], [287, 23]], "op": [[301, 8], [301, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"], ["gcs_hook_mock", "upload", "call_count"]], "mysql_hook_mock": [], "op": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "execute", "None"]]}, "name": "test_schema_file", "params": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "mysql_hook_mock_class": [], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [["Generator[None, Any, None]", 0.24655283943647327], ["mock.Mock", 0.16836933784717373]], "kwargs": [], "mysql_hook_mock_class": [["Generator[None, Any, None]", 0.24655283943647327], ["mock.Mock", 0.16836933784717373]], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_schema_file", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "mysql_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "mysql_hook_mock": [["str", 0.49999999999739186], ["bool", 3.12867318493596e-11], ["list", 2.261134476370882e-11]], "op": [["Dict[str, Union[Any, bool, str]]", 0.18448911547108343], ["Dict[str, Union[int, str]]", 0.06701333182701834], ["str", 0.06685704373451257]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[319, 8], [323, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [], "gzip": [], "metadata": [], "mime_type": [], "obj": [["obj", "SCHEMA_FILENAME"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_schema_file_with_custom_schema.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test writing schema files with customized schema", "long_descr": null, "ret": null}, "fn_lc": [[311, 4], [338, 51]], "fn_var_ln": {"gcs_hook_mock": [[317, 8], [317, 21]], "mysql_hook_mock": [[313, 8], [313, 23]], "op": [[327, 8], [327, 10]]}, "fn_var_occur": {"gcs_hook_mock": [["gcs_hook_mock", "upload", "side_effect", "_assert_upload"], ["gcs_hook_mock", "upload", "call_count"]], "mysql_hook_mock": [], "op": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME", "schema", "SCHEMA"], ["op", "execute", "None"]]}, "name": "test_schema_file_with_custom_schema", "params": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_descr": {"gcs_hook_mock_class": "", "mysql_hook_mock_class": "", "self": ""}, "params_occur": {"gcs_hook_mock_class": [], "mysql_hook_mock_class": [], "self": []}, "params_p": {"args": [], "gcs_hook_mock_class": [["Generator[None, Any, None]", 0.24655283943647327], ["mock.Mock", 0.16836933784717373]], "kwargs": [], "mysql_hook_mock_class": [["Generator[None, Any, None]", 0.24655283943647327], ["mock.Mock", 0.16836933784717373]], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_schema_file_with_custom_schema", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook_mock": "", "mysql_hook_mock": "", "op": ""}, "variables_p": {"gcs_hook_mock": [], "mysql_hook_mock": [["str", 0.49999999999739186], ["bool", 3.12867318493596e-11], ["list", 2.261134476370882e-11]], "op": [["Dict[str, Union[Any, bool, str]]", 0.17906216471220215], ["str", 0.06873480289568176], ["Dict[str, Union[int, str]]", 0.0680707036368043]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[342, 4], [350, 22]], "fn_var_ln": {"op": [[346, 8], [346, 10]]}, "fn_var_occur": {"op": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "query"]]}, "name": "test_query_with_error", "params": {"mock_gcs_hook": "", "mock_mysql_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_mysql_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [], "mock_mysql_hook": [["mock_mysql_hook", "return_value", "get_conn", "return_value", "cursor", "return_value", "execute", "side_effect", "ProgrammingError"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [["mock.Mock", 0.4306877373308261], ["mock.MagicMock", 0.05169263732760035]], "mock_mysql_hook": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_query_with_error", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.18448911547108343], ["Dict[str, Union[int, str]]", 0.06701333182701834], ["str", 0.06685704373451257]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[354, 4], [362, 28]], "fn_var_ln": {"op": [[358, 8], [358, 10]]}, "fn_var_occur": {"op": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "execute", "None"]]}, "name": "test_execute_with_query_error", "params": {"mock_gcs_hook": "", "mock_mysql_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_mysql_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [], "mock_mysql_hook": [["mock_mysql_hook", "return_value", "get_conn", "return_value", "cursor", "return_value", "execute", "side_effect", "ProgrammingError"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [["mock.MagicMock", 0.21517996507665177], ["mock.Mock", 0.11154049452052857]], "mock_mysql_hook": [], "self": []}, "q_name": "TestMySqlToGoogleCloudStorageOperator.test_execute_with_query_error", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.18448911547108343], ["Dict[str, Union[int, str]]", 0.06701333182701834], ["str", 0.06685704373451257]]}}], "name": "TestMySqlToGoogleCloudStorageOperator", "q_name": "TestMySqlToGoogleCloudStorageOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "decimal", "unittest", "mock", "pytest", "MySQLdb", "ProgrammingError", "airflow", "providers", "google", "cloud", "transfers", "mysql_to_gcs", "MySQLToGCSOperator"], "mod_var_ln": {"BUCKET": [[30, 0], [30, 6]], "CSV_FILENAME": [[32, 0], [32, 12]], "CSV_LINES": [[45, 0], [45, 9]], "CSV_LINES_PIPE_DELIMITED": [[51, 0], [51, 24]], "CURSOR_DESCRIPTION": [[39, 0], [39, 18]], "CUSTOM_SCHEMA_JSON": [[62, 0], [62, 18]], "JSON_FILENAME": [[31, 0], [31, 13]], "MYSQL_CONN_ID": [[27, 0], [27, 13]], "NDJSON_LINES": [[40, 0], [40, 12]], "ROWS": [[38, 0], [38, 4]], "SCHEMA": [[33, 0], [33, 6]], "SCHEMA_FILENAME": [[57, 0], [57, 15]], "SCHEMA_JSON": [[58, 0], [58, 11]], "SQL": [[29, 0], [29, 3]], "TASK_ID": [[26, 0], [26, 7]], "TZ_QUERY": [[28, 0], [28, 8]]}, "mod_var_occur": {"BUCKET": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "export_format", "field_delimiter"], ["op", "bucket", "BUCKET"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["BUCKET", "bucket"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["BUCKET", "bucket"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME", "ensure_utc", "True"], ["BUCKET", "bucket"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "field_delimiter", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["BUCKET", "bucket"], ["BUCKET", "bucket"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "JSON_FILENAME", "format"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME", "schema", "SCHEMA"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "CSV_FILENAME": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["CSV_FILENAME", "format", "obj"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME", "ensure_utc", "True"], ["CSV_FILENAME", "format", "obj"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "field_delimiter", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["CSV_FILENAME", "format", "obj"]], "CSV_LINES": [["join", "CSV_LINES", "file", "read"], ["join", "CSV_LINES", "file", "read"]], "CSV_LINES_PIPE_DELIMITED": [["join", "CSV_LINES_PIPE_DELIMITED", "file", "read"]], "CURSOR_DESCRIPTION": [["mysql_hook_mock", "get_conn", "cursor", "description", "CURSOR_DESCRIPTION"], ["mysql_hook_mock", "get_conn", "cursor", "description", "CURSOR_DESCRIPTION"], ["mysql_hook_mock", "get_conn", "cursor", "description", "CURSOR_DESCRIPTION"], ["mysql_hook_mock", "get_conn", "cursor", "description", "CURSOR_DESCRIPTION"], ["mysql_hook_mock", "get_conn", "cursor", "description", "CURSOR_DESCRIPTION"], ["mysql_hook_mock", "get_conn", "cursor", "description", "CURSOR_DESCRIPTION"], ["mysql_hook_mock", "get_conn", "cursor", "description", "CURSOR_DESCRIPTION"]], "CUSTOM_SCHEMA_JSON": [["join", "CUSTOM_SCHEMA_JSON", "file", "read"]], "JSON_FILENAME": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "export_format", "field_delimiter"], ["op", "filename", "JSON_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["JSON_FILENAME", "format", "obj"], ["expected_upload", "JSON_FILENAME", "format", "join", "NDJSON_LINES", "JSON_FILENAME", "format", "NDJSON_LINES"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "JSON_FILENAME", "format"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME", "schema", "SCHEMA"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "MYSQL_CONN_ID": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME", "ensure_utc", "True"], ["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "field_delimiter", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["mysql_hook_mock_class", "assert_called_once_with", "mysql_conn_id", "MYSQL_CONN_ID"]], "NDJSON_LINES": [["join", "NDJSON_LINES", "file", "read"], ["expected_upload", "JSON_FILENAME", "format", "join", "NDJSON_LINES", "JSON_FILENAME", "format", "NDJSON_LINES"]], "ROWS": [["mysql_hook_mock", "get_conn", "cursor", "__iter__", "return_value", "iter", "ROWS"], ["mysql_hook_mock", "get_conn", "cursor", "__iter__", "return_value", "iter", "ROWS"], ["mysql_hook_mock", "get_conn", "cursor", "__iter__", "return_value", "iter", "ROWS"], ["mysql_hook_mock", "get_conn", "cursor", "__iter__", "return_value", "iter", "ROWS"], ["mysql_hook_mock", "get_conn", "cursor", "__iter__", "return_value", "iter", "ROWS"], ["mysql_hook_mock", "get_conn", "cursor", "__iter__", "return_value", "iter", "ROWS"], ["mysql_hook_mock", "get_conn", "cursor", "__iter__", "return_value", "iter", "ROWS"]], "SCHEMA": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME", "schema", "SCHEMA"]], "SCHEMA_FILENAME": [["obj", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["obj", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME", "schema", "SCHEMA"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "SCHEMA_JSON": [["join", "SCHEMA_JSON", "file", "read"]], "SQL": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "export_format", "field_delimiter"], ["op", "sql", "SQL"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_called_once_with", "SQL"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_called_once_with", "SQL"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME", "ensure_utc", "True"], ["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_has_calls", "mock", "call", "TZ_QUERY", "mock", "call", "SQL"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "field_delimiter", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_called_once_with", "SQL"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "JSON_FILENAME", "format"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME", "schema", "SCHEMA"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "TASK_ID": [["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "export_format", "field_delimiter"], ["op", "task_id", "TASK_ID"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "bucket", "BUCKET", "filename", "CSV_FILENAME", "ensure_utc", "True"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "mysql_conn_id", "MYSQL_CONN_ID", "sql", "SQL", "export_format", "field_delimiter", "bucket", "BUCKET", "filename", "CSV_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "JSON_FILENAME", "format"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME", "schema", "SCHEMA"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"], ["op", "MySQLToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "JSON_FILENAME", "schema_filename", "SCHEMA_FILENAME"]], "TZ_QUERY": [["mysql_hook_mock", "get_conn", "cursor", "execute", "assert_has_calls", "mock", "call", "TZ_QUERY", "mock", "call", "SQL"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 81}, "session_id": "P1QPPXhB4bPALWRAxBGincuzWebhB2moThA5jRPEqYI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BUCKET": "", "CSV_FILENAME": "", "CSV_LINES": "", "CSV_LINES_PIPE_DELIMITED": "", "CURSOR_DESCRIPTION": "", "CUSTOM_SCHEMA_JSON": "", "JSON_FILENAME": "", "MYSQL_CONN_ID": "", "NDJSON_LINES": "", "ROWS": "", "SCHEMA": "", "SCHEMA_FILENAME": "", "SCHEMA_JSON": "", "SQL": "", "TASK_ID": "", "TZ_QUERY": ""}, "variables_p": {"BUCKET": [["str", 0.29199371913353556], ["busboy.util.Maybe[datetime.datetime]", 0.09328658202154352], ["int", 0.08855703219685596]], "CSV_FILENAME": [["str", 0.2068672501110822], ["List[Tuple[str, int]]", 0.19200672755575862], ["Dict[str, Any]", 0.10485154192986697], ["List[str]", 0.10485154192986697], ["frozenset[str]", 0.08677265598576642]], "CSV_LINES": [["str", 0.37447563339616075], ["Union[Literal[False], str]", 0.104477370611139], ["List[str]", 0.09600109735429019], ["Dict[str, str]", 0.08565272440582525], ["list", 0.08512820615192966]], "CSV_LINES_PIPE_DELIMITED": [["str", 0.4049339909637939], ["Dict[int, bool]", 0.10664615855110478], ["int", 0.10136635551203578], ["List[str]", 0.10093182549425755], ["List[int]", 0.09724204442964467], ["Dict[str, Any]", 0.09518371451109625]], "CURSOR_DESCRIPTION": [["str", 0.39545343670703337], ["int", 0.09324296159272745], ["Optional[str]", 0.08958682935268827], ["bool", 0.08958682935268827]], "CUSTOM_SCHEMA_JSON": [["str", 0.3722969074555638], ["int", 0.15412967700512464], ["Dict[str, str]", 0.12118033853679264], ["Optional[str]", 0.09178870178893442]], "JSON_FILENAME": [["str", 0.49614814720149164], ["Dict[str, Any]", 0.1029317637387236], ["List[Dict[str, str]]", 0.1024926925889451], ["frozenset[str]", 0.09688757817214574]], "MYSQL_CONN_ID": [["str", 0.14827174444215266], ["int", 0.0850499472574298], ["tools.bots.cloud.status.Status", 0.07569119178413014]], "NDJSON_LINES": [["str", 0.4307164569648601], ["List[str]", 0.1761099235663407], ["List[Dict[str, Any]]", 0.09881063384635284], ["list", 0.09057011321778971], ["Dict[str, int]", 0.0826175648461466]], "ROWS": [["int", 0.14268118892097462], ["float", 0.11189920648159299], ["Dict[str, Union[Any, Any, Any]]", 0.11098362973917103], ["Optional[bytes]", 0.10881314760141314], ["str", 0.10331747945519011]], "SCHEMA": [["int", 0.5759342967707662], ["str", 0.0894004960473204]], "SCHEMA_FILENAME": [["str", 0.7825083962647988], ["List[str]", 0.1139191668735218], ["list", 0.10357243686167951]], "SCHEMA_JSON": [["bytes", 0.21797395039484285], ["list", 0.10723445256515501], ["Pattern[str]", 0.09438711775901486], ["str", 0.0922114938885735]], "SQL": [["int", 0.5507987374017864], ["str", 0.0962334212803801]], "TASK_ID": [["str", 0.3882349255233107], ["int", 0.11439064663717172]], "TZ_QUERY": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.2092111081336592], ["mock.Mock", 0.1025545620891491], ["str", 0.09210746477276403]]}}}