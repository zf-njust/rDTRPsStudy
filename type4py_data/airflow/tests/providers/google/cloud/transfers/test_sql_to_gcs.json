{"error": null, "response": {"classes": [{"cls_lc": [[72, 0], [84, 12]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [78, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "field_to_bigquery", "params": {"field": "", "self": ""}, "params_descr": {"field": "", "self": ""}, "params_occur": {"field": [], "self": []}, "params_p": {"args": [], "field": [["str", 0.38574475174555156], ["List[str]", 0.21971267114895765], ["bool", 0.17944954669001567]], "kwargs": [], "self": []}, "q_name": "DummySQLToGCSOperator.field_to_bigquery", "ret_exprs": ["return { \"name\": field[0], \"type\": \"STRING\", \"mode\": \"NULLABLE\",}"], "ret_type": "builtins.dict[builtins.str, builtins.str]", "ret_type_p": [["str", 0.3614276002840828], ["Union[type, Tuple[type, ...]]", 0.13294923009206047], ["Mapping[str, Any]", 0.09581565880510091], ["Dict[str, Any]", 0.08951608637534592]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [81, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "convert_type", "params": {"schema_type": "", "self": "", "stringify_dict": "", "value": ""}, "params_descr": {"schema_type": "", "self": "", "stringify_dict": "", "value": ""}, "params_occur": {"schema_type": [], "self": [], "stringify_dict": [], "value": []}, "params_p": {"args": [], "kwargs": [], "schema_type": [["Union[bool, Iterable[str]]", 0.30000000000000004], ["Iterable[str]", 0.2], ["bool", 0.1]], "self": [], "stringify_dict": [["Union[bool, Iterable[str]]", 0.30000000000000004], ["Iterable[str]", 0.2], ["bool", 0.1]], "value": [["Union[bool, Iterable[str]]", 0.30000000000000004], ["Iterable[str]", 0.2], ["bool", 0.1]]}, "q_name": "DummySQLToGCSOperator.convert_type", "ret_exprs": ["return \"convert_type_return_value\""], "ret_type": "", "ret_type_p": [["bool", 0.7056521201392887], ["str", 0.2002801198739575]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [84, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "query", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DummySQLToGCSOperator.query", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "DummySQLToGCSOperator", "q_name": "DummySQLToGCSOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[87, 0], [584, 33]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [384, 9]], "fn_var_ln": {"__iter__": [[357, 8], [357, 28]], "csv_calls": [[142, 8], [142, 17]], "cursor_mock": [[94, 8], [94, 19]], "description": [[95, 8], [95, 31]], "json_call": [[154, 8], [154, 17]], "mock_file": [[100, 8], [100, 17]], "name": [[102, 8], [102, 22]], "operator": [[360, 8], [360, 16]], "result": [[368, 8], [368, 14]], "return_value": [[358, 8], [358, 38]], "upload_calls": [[157, 8], [157, 20]]}, "fn_var_occur": {"__iter__": [["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"]], "csv_calls": [["csv_calls", "append", "mock", "call", "BUCKET", "FILENAME", "format", "i", "TMP_FILE_NAME", "mime_type", "gzip", "True", "metadata"], ["upload_calls", "json_call", "csv_calls", "csv_calls", "csv_calls"]], "cursor_mock": [["cursor_mock", "Mock"], ["cursor_mock", "description", "CURSOR_DESCRIPTION"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["mock_query", "return_value", "cursor_mock"], ["cursor_mock", "reset_mock"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "reset_mock"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "reset_mock"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "reset_mock"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "reset_mock"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"]], "description": [["cursor_mock", "description", "CURSOR_DESCRIPTION"]], "json_call": [["json_call", "mock", "call", "BUCKET", "SCHEMA_FILE", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["upload_calls", "json_call", "csv_calls", "csv_calls", "csv_calls"]], "mock_file": [["mock_file", "mock_tempfile", "return_value"], ["mock_file", "tell", "return_value"], ["mock_file", "name", "TMP_FILE_NAME"], ["mock_file", "flush", "assert_has_calls", "mock", "call", "mock", "call", "mock", "call", "mock", "call"], ["mock_file", "close", "assert_has_calls", "mock", "call", "mock", "call", "mock", "call", "mock", "call"], ["mock_file", "flush", "reset_mock"], ["mock_file", "close", "reset_mock"], ["mock_file", "write", "call_args_list", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call"], ["mock_file", "close", "assert_called_once"], ["mock_file", "flush", "reset_mock"], ["mock_file", "close", "reset_mock"], ["mock_file", "write", "reset_mock"], ["mock_file", "write", "call_args_list", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call"], ["mock_file", "flush", "assert_called_once"], ["mock_file", "close", "assert_called_once"], ["mock_file", "flush", "reset_mock"], ["mock_file", "close", "reset_mock"], ["mock_file", "flush", "assert_called_once"], ["mock_file", "close", "assert_called_once"], ["mock_file", "flush", "reset_mock"], ["mock_file", "close", "reset_mock"], ["mock_file", "flush", "call_count"], ["mock_file", "close", "call_count"], ["mock_file", "flush", "reset_mock"], ["mock_file", "close", "reset_mock"]], "name": [["mock_file", "name", "TMP_FILE_NAME"]], "operator": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "approx_max_file_size_bytes", "export_format", "gzip", "True", "schema", "SCHEMA", "gcp_conn_id", "upload_metadata", "True"], ["result", "operator", "execute", "context", "dict"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["result", "operator", "execute", "context", "dict"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "upload_metadata", "True"], ["result", "operator", "execute", "context", "dict"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["result", "operator", "execute", "context", "dict"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "partition_columns", "PARTITION_COLUMNS"], ["result", "operator", "execute", "context", "dict"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "null_marker"], ["result", "operator", "execute", "context", "dict"]], "result": [["result", "operator", "execute", "context", "dict"], ["result", "operator", "execute", "context", "dict"], ["result", "operator", "execute", "context", "dict"], ["result", "operator", "execute", "context", "dict"], ["result", "operator", "execute", "context", "dict"], ["result", "operator", "execute", "context", "dict"]], "return_value": [["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["mock_query", "return_value", "cursor_mock"], ["mock_convert_type", "return_value"], ["mock_file", "mock_tempfile", "return_value"], ["mock_file", "tell", "return_value"], ["mock_writer", "return_value", "writerow", "call_args_list", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["mock_convert_type", "return_value", "None"], ["mock_writer", "return_value", "writerow", "assert_has_calls", "mock", "call", "COLUMNS", "mock", "call", "mock", "call", "mock", "call"]], "upload_calls": [["upload_calls", "json_call", "csv_calls", "csv_calls", "csv_calls"], ["mock_upload", "assert_has_calls", "upload_calls"]]}, "name": "test_exec", "params": {"mock_convert_type": "", "mock_query": "", "mock_tempfile": "", "mock_upload": "", "mock_writer": "", "self": ""}, "params_descr": {"mock_convert_type": "", "mock_query": "", "mock_tempfile": "", "mock_upload": "", "mock_writer": "", "self": ""}, "params_occur": {"mock_convert_type": [["mock_convert_type", "return_value"], ["mock_convert_type", "return_value", "None"]], "mock_query": [["mock_query", "return_value", "cursor_mock"], ["mock_query", "assert_called_once"], ["mock_query", "reset_mock"], ["mock_query", "assert_called_once"], ["mock_query", "reset_mock"], ["mock_query", "assert_called_once"], ["mock_query", "reset_mock"], ["mock_query", "assert_called_once"], ["mock_query", "reset_mock"], ["mock_query", "assert_called_once"], ["mock_query", "reset_mock"]], "mock_tempfile": [["mock_file", "mock_tempfile", "return_value"]], "mock_upload": [["mock_upload", "assert_has_calls", "upload_calls"], ["mock_upload", "reset_mock"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["mock_upload", "reset_mock"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata"], ["mock_upload", "reset_mock"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None"], ["mock_upload", "reset_mock"], ["mock_upload", "assert_has_calls", "mock", "call", "BUCKET", "row", "row", "i", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None", "i", "row", "enumerate", "INPUT_DATA"], ["mock_upload", "reset_mock"]], "mock_writer": [["mock_writer", "return_value", "writerow", "call_args_list", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS"], ["mock_writer", "return_value", "writerow", "assert_has_calls", "mock", "call", "COLUMNS", "mock", "call", "mock", "call", "mock", "call"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_convert_type": [["unittesmock.Mock", 0.4527758484694249], ["unittesmock.MagicMock", 0.25815222338990035], ["mock.Mock", 0.1856402054996869]], "mock_query": [["unittesmock.Mock", 0.7384140210791241], ["mock.Mock", 0.2615859789208757]], "mock_tempfile": [["mock.Mock", 0.5973926431713382], ["unittesmock.Mock", 0.4026073568286619]], "mock_upload": [["unittesmock.Mock", 0.7261428400837313], ["mock.Mock", 0.2738571599162685]], "mock_writer": [["unittesmock.Mock", 0.688742067767671], ["mock.Mock", 0.31125793223232906]], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test_exec", "ret_exprs": [], "ret_type": "", "variables": {"__iter__": "", "csv_calls": "", "cursor_mock": "", "description": "", "json_call": "", "mock_file": "", "name": "", "operator": "", "result": "", "return_value": "", "upload_calls": ""}, "variables_p": {"__iter__": [["cirq.google.engine.engine.EngineContext", 0.1874591050934032], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.18286883100706272], ["list", 0.13769207786498833], ["List[str]", 0.10026519446761191], ["unittesmock.MagicMock", 0.09767854792890664]], "csv_calls": [["list", 0.3299632657485122], ["List[str]", 0.17549038555410454], ["tuple", 0.11189303184000693], ["dict", 0.09238098813816881], ["str", 0.08823110599319071]], "cursor_mock": [["unittesmock.MagicMock", 0.5911944829068045], ["unittesmock.Mock", 0.2938568713677733], ["mock.Mock", 0.11494864572542207]], "description": [["str", 0.5484165538108772], ["List[str]", 0.19529511280854514], ["Optional[str]", 0.17065154972843236], ["tuple", 0.08563678365214547]], "json_call": [["list", 0.0949666714919049], ["Tuple[Any, Any, Any, Any]", 0.09488032194492567], ["Set[str]", 0.09395185346542465], ["str", 0.08889554571844727], ["List[List[str]]", 0.08471212599249908], ["Dict[str, Union[Any, Any]]", 0.0773481094030663]], "mock_file": [["str", 0.40001635774441485], ["dict", 0.09215070966258873], ["List[str]", 0.09164623810018788]], "name": [["str", 1.0]], "operator": [["List[str]", 0.09966825798276585]], "result": [["Dict[str, Any]", 0.294972694704037], ["dict", 0.2278520530761211], ["List[int]", 0.07889120467289895]], "return_value": [["str", 0.2240302270541902], ["Dict[str, int]", 0.09894376103735321], ["Dict[str, List[str]]", 0.09184294065260061], ["unittesmock.MagicMock", 0.09103160022114194]], "upload_calls": [["str", 0.10457826705461605]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[386, 4], [406, 35]], "fn_var_ln": {"cursor": [[398, 8], [398, 14]], "description": [[400, 8], [400, 26]], "df": [[405, 8], [405, 10]], "file": [[403, 8], [403, 12]], "files": [[402, 8], [402, 13]], "op": [[387, 8], [387, 10]]}, "fn_var_occur": {"cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "df": [["df", "pd", "read_csv", "file", "name"], ["df", "equals", "OUTPUT_DF"]], "file": [["file", "next", "files"], ["file", "flush"], ["df", "pd", "read_csv", "file", "name"]], "files": [["files", "op", "_write_local_data_files", "cursor"], ["file", "next", "files"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["files", "op", "_write_local_data_files", "cursor"]]}, "name": "test__write_local_data_files_csv", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_csv", "ret_exprs": [], "ret_type": "", "variables": {"cursor": "", "description": "", "df": "", "file": "", "files": "", "op": ""}, "variables_p": {"cursor": [["Dict[int, Dict[str, Any]]", 0.21457173074765337], ["mock.MagicMock", 0.11746846984433236], ["app.providers.Provider", 0.10870477935362358], ["str", 0.09692567789661197], ["List[mock.Mock]", 0.08729877765518737]], "description": [["str", 0.9121836693060863]], "df": [["str", 0.28974618713944067], ["dict", 0.21462374523846156], ["list", 0.20174536684429462], ["List[str]", 0.19730263839798953], ["Dict[str, List[str]]", 0.09658206237981355]], "file": [["str", 0.26290564262735644]], "files": [["List[str]", 0.09842344818997542], ["str", 0.091632617548014]], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[408, 4], [428, 35]], "fn_var_ln": {"cursor": [[420, 8], [420, 14]], "description": [[422, 8], [422, 26]], "df": [[427, 8], [427, 10]], "file": [[425, 8], [425, 12]], "files": [[424, 8], [424, 13]], "op": [[409, 8], [409, 10]]}, "fn_var_occur": {"cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "df": [["df", "pd", "read_json", "file", "name", "orient", "lines", "True"], ["df", "equals", "OUTPUT_DF"]], "file": [["file", "next", "files"], ["file", "flush"], ["df", "pd", "read_json", "file", "name", "orient", "lines", "True"]], "files": [["files", "op", "_write_local_data_files", "cursor"], ["file", "next", "files"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["files", "op", "_write_local_data_files", "cursor"]]}, "name": "test__write_local_data_files_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_json", "ret_exprs": [], "ret_type": "", "variables": {"cursor": "", "description": "", "df": "", "file": "", "files": "", "op": ""}, "variables_p": {"cursor": [["Dict[int, Dict[str, Any]]", 0.21457173074765337], ["mock.MagicMock", 0.11746846984433236], ["app.providers.Provider", 0.10870477935362358], ["str", 0.09692567789661197], ["List[mock.Mock]", 0.08729877765518737]], "description": [["str", 0.9121836693060863]], "df": [["str", 0.8249107416962779], ["List[str]", 0.09122092295055917]], "file": [["str", 0.20957878416164294], ["List[str]", 0.12634297230457378], ["int", 0.0993057077348886]], "files": [["List[str]", 0.09842344818997542], ["str", 0.091632617548014]], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[430, 4], [450, 35]], "fn_var_ln": {"cursor": [[442, 8], [442, 14]], "description": [[444, 8], [444, 26]], "df": [[449, 8], [449, 10]], "file": [[447, 8], [447, 12]], "files": [[446, 8], [446, 13]], "op": [[431, 8], [431, 10]]}, "fn_var_occur": {"cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "df": [["df", "pd", "read_parquet", "file", "name"], ["df", "equals", "OUTPUT_DF"]], "file": [["file", "next", "files"], ["file", "flush"], ["df", "pd", "read_parquet", "file", "name"]], "files": [["files", "op", "_write_local_data_files", "cursor"], ["file", "next", "files"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["files", "op", "_write_local_data_files", "cursor"]]}, "name": "test__write_local_data_files_parquet", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_parquet", "ret_exprs": [], "ret_type": "", "variables": {"cursor": "", "description": "", "df": "", "file": "", "files": "", "op": ""}, "variables_p": {"cursor": [["Dict[int, Dict[str, Any]]", 0.21457173074765337], ["mock.MagicMock", 0.11746846984433236], ["app.providers.Provider", 0.10870477935362358], ["str", 0.09692567789661197], ["List[mock.Mock]", 0.08729877765518737]], "description": [["str", 0.9121836693060863]], "df": [["str", 0.28974618713944067], ["dict", 0.21462374523846156], ["list", 0.20174536684429462], ["List[str]", 0.19730263839798953], ["Dict[str, List[str]]", 0.09658206237981355]], "file": [["str", 0.26290564262735644]], "files": [["List[str]", 0.09842344818997542], ["str", 0.091632617548014]], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[452, 4], [486, 99]], "fn_var_ln": {"cursor": [[472, 8], [472, 14]], "description": [[474, 8], [474, 26]], "df": [[479, 8], [479, 10]], "file": [[477, 8], [477, 12]], "files": [[476, 8], [476, 13]], "input_data": [[469, 8], [469, 18]], "op": [[457, 8], [457, 10]], "output_df": [[470, 8], [470, 17]], "parquet_file": [[481, 8], [481, 20]], "row_group_size": [[485, 12], [485, 26]], "tolerance": [[483, 8], [483, 17]]}, "fn_var_occur": {"cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "input_data"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "df": [["df", "pd", "read_parquet", "file", "name"], ["df", "equals", "output_df"]], "file": [["file", "next", "files"], ["file", "flush"], ["df", "pd", "read_parquet", "file", "name"], ["parquet_file", "pq", "ParquetFile", "file", "name"]], "files": [["files", "op", "_write_local_data_files", "cursor"], ["file", "next", "files"]], "input_data": [["input_data", "INPUT_DATA"], ["cursor", "__iter__", "return_value", "input_data"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "parquet_row_group_size"], ["files", "op", "_write_local_data_files", "cursor"], ["parquet_file", "num_row_groups", "math", "ceil", "len", "INPUT_DATA", "op", "parquet_row_group_size"], ["row_group_size", "op", "parquet_row_group_size", "tolerance", "tolerance"]], "output_df": [["output_df", "pd", "DataFrame", "columns", "COLUMNS"], ["df", "equals", "output_df"]], "parquet_file": [["parquet_file", "pq", "ParquetFile", "file", "name"], ["parquet_file", "num_row_groups", "math", "ceil", "len", "INPUT_DATA", "op", "parquet_row_group_size"], ["range", "parquet_file", "num_row_groups"], ["row_group_size", "parquet_file", "metadata", "row_group", "i", "num_rows"]], "row_group_size": [["row_group_size", "parquet_file", "metadata", "row_group", "i", "num_rows"], ["row_group_size", "op", "parquet_row_group_size", "tolerance", "tolerance"]], "tolerance": [["row_group_size", "op", "parquet_row_group_size", "tolerance", "tolerance"]]}, "name": "test__write_local_data_files_parquet_with_row_size", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_parquet_with_row_size", "ret_exprs": [], "ret_type": "", "variables": {"cursor": "", "description": "", "df": "", "file": "", "files": "", "input_data": "", "op": "", "output_df": "", "parquet_file": "", "row_group_size": "", "tolerance": ""}, "variables_p": {"cursor": [["Dict[int, Dict[str, Any]]", 0.21457173074765337], ["mock.MagicMock", 0.11746846984433236], ["app.providers.Provider", 0.10870477935362358], ["str", 0.09692567789661197], ["List[mock.Mock]", 0.08729877765518737]], "description": [["str", 0.9121836693060863]], "df": [["str", 0.28974618713944067], ["dict", 0.21462374523846156], ["list", 0.20174536684429462], ["List[str]", 0.19730263839798953], ["Dict[str, List[str]]", 0.09658206237981355]], "file": [["str", 0.2131476400740337]], "files": [["List[str]", 0.09842344818997542], ["str", 0.091632617548014]], "input_data": [["str", 0.19539183815264813], ["Optional[bytes]", 0.12001349321606056], ["Dict[str, str]", 0.11478146718707306], ["list", 0.1050067616858474], ["List[Tuple[str, Any]]", 0.09529382544143303], ["Dict[str, int]", 0.09230086076311765], ["Dict[str, Union[None, Any, int]]", 0.0850971058541227]], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]], "output_df": [["list", 0.5231702128758389], ["int", 0.2662431020001942], ["Tuple[int, int, Any, Any]", 0.11695694835605422], ["List[str]", 0.09362973676791243]], "parquet_file": [["str", 0.09325762147825417], ["List[str]", 0.08764489312369815]], "row_group_size": [["int", 0.5757816818445495], ["Tuple[bool]", 0.12092697454009849], ["List[Tuple[Any]]", 0.1079937456506751], ["bytes", 0.10746124889804141], ["str", 0.08783634906663562]], "tolerance": [["int", 0.555700710929351], ["Pattern[str]", 0.10413053656650433], ["Dict[int, bytes]", 0.09633205934522383], ["str", 0.06458893157289486], ["List[float]", 0.05710325273950945], ["list", 0.0568389267193846]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[488, 4], [509, 56]], "fn_var_ln": {"cursor": [[501, 8], [501, 14]], "description": [[503, 8], [503, 26]], "df": [[508, 8], [508, 10]], "file": [[506, 8], [506, 12]], "files": [[505, 8], [505, 13]], "op": [[489, 8], [489, 10]]}, "fn_var_occur": {"cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "df": [["df", "pd", "read_json", "file", "name", "orient", "lines", "True"], ["df", "equals", "OUTPUT_DF_WITH_EXCLUDE_COLUMNS"]], "file": [["file", "next", "files"], ["file", "flush"], ["df", "pd", "read_json", "file", "name", "orient", "lines", "True"]], "files": [["files", "op", "_write_local_data_files", "cursor"], ["file", "next", "files"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"], ["files", "op", "_write_local_data_files", "cursor"]]}, "name": "test__write_local_data_files_json_with_exclude_columns", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_json_with_exclude_columns", "ret_exprs": [], "ret_type": "", "variables": {"cursor": "", "description": "", "df": "", "file": "", "files": "", "op": ""}, "variables_p": {"cursor": [["Dict[int, Dict[str, Any]]", 0.21457173074765337], ["mock.MagicMock", 0.11746846984433236], ["app.providers.Provider", 0.10870477935362358], ["str", 0.09692567789661197], ["List[mock.Mock]", 0.08729877765518737]], "description": [["str", 0.9121836693060863]], "df": [["str", 0.8249107416962779], ["List[str]", 0.09122092295055917]], "file": [["str", 0.20957878416164294], ["List[str]", 0.12634297230457378], ["int", 0.0993057077348886]], "files": [["List[str]", 0.09842344818997542], ["str", 0.091632617548014]], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[511, 4], [537, 42]], "fn_var_ln": {"concat_df": [[536, 8], [536, 17]], "concat_dfs": [[529, 8], [529, 18]], "cursor": [[524, 8], [524, 14]], "description": [[526, 8], [526, 26]], "df": [[533, 12], [533, 14]], "file": [[531, 12], [531, 16]], "local_data_files": [[528, 8], [528, 24]], "op": [[512, 8], [512, 10]]}, "fn_var_occur": {"concat_df": [["concat_df", "pd", "concat", "concat_dfs", "ignore_index", "True"], ["concat_df", "equals", "OUTPUT_DF"]], "concat_dfs": [["concat_dfs", "append", "df"], ["concat_df", "pd", "concat", "concat_dfs", "ignore_index", "True"]], "cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["local_data_files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "df": [["df", "pd", "read_parquet", "file", "name"], ["concat_dfs", "append", "df"]], "file": [["file", "local_data_file"], ["file", "flush"], ["df", "pd", "read_parquet", "file", "name"]], "local_data_files": [["local_data_files", "op", "_write_local_data_files", "cursor"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"], ["local_data_files", "op", "_write_local_data_files", "cursor"]]}, "name": "test__write_local_data_files_parquet_with_partition_columns", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_parquet_with_partition_columns", "ret_exprs": [], "ret_type": "", "variables": {"concat_df": "", "concat_dfs": "", "cursor": "", "description": "", "df": "", "file": "", "local_data_files": "", "op": ""}, "variables_p": {"concat_df": [["List[str]", 0.13027983427095366], ["List[Tuple[int, int]]", 0.10016579710345354]], "concat_dfs": [["str", 0.4413366715226636], ["list", 0.306028938584408], ["int", 0.06062131701140546]], "cursor": [["Dict[str, Dict[str, Any]]", 0.28319121122804347], ["Dict[int, Dict[str, Any]]", 0.1945510555551116], ["mock.MagicMock", 0.1351320141835638], ["unittesmock.Mock", 0.11207413083438186], ["unittesmock.MagicMock", 0.09783857883174492], ["str", 0.08904455749501965]], "description": [["str", 0.9121836693060863]], "df": [["list", 0.29673259628766613], ["dict", 0.1853804165006585], ["Dict[str, Type[Any]]", 0.1125099617109824], ["List[Tuple[Any, Any]]", 0.10069318011893684], ["TextIO", 0.09937139990622079]], "file": [["str", 0.09175438262105998]], "local_data_files": [["str", 0.7247162116920891], ["List[str]", 0.087365075158365]], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[539, 4], [560, 43]], "fn_var_ln": {"cursor": [[551, 8], [551, 14]], "description": [[553, 8], [553, 26]], "files": [[555, 8], [555, 13]], "op": [[540, 8], [540, 10]]}, "fn_var_occur": {"cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "EMPTY_INPUT_DATA"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "files": [["files", "op", "_write_local_data_files", "cursor"], ["next", "files"], ["len", "f", "f", "files"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["files", "op", "_write_local_data_files", "cursor"]]}, "name": "test__write_local_data_files_csv_does_not_write_on_empty_rows", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_csv_does_not_write_on_empty_rows", "ret_exprs": [], "ret_type": "", "variables": {"cursor": "", "description": "", "files": "", "op": ""}, "variables_p": {"cursor": [["Dict[int, Dict[str, Any]]", 0.222975906218425], ["mock.MagicMock", 0.1262130152817278], ["app.providers.Provider", 0.11008798687272352], ["str", 0.10797664934255304], ["unittesmock.MagicMock", 0.09750039183223395], ["List[mock.Mock]", 0.08760277496840588]], "description": [["str", 0.9121836693060863]], "files": [], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[562, 4], [584, 33]], "fn_var_ln": {"cursor": [[575, 8], [575, 14]], "description": [[577, 8], [577, 26]], "df": [[583, 8], [583, 10]], "file": [[580, 8], [580, 12]], "files": [[579, 8], [579, 13]], "op": [[563, 8], [563, 10]]}, "fn_var_occur": {"cursor": [["cursor", "MagicMock"], ["cursor", "__iter__", "return_value", "EMPTY_INPUT_DATA"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["files", "op", "_write_local_data_files", "cursor"]], "description": [["cursor", "description", "CURSOR_DESCRIPTION"]], "df": [["df", "pd", "read_csv", "file", "name"], ["len", "df", "index"]], "file": [["file", "next", "files"], ["file", "flush"], ["df", "pd", "read_csv", "file", "name"]], "files": [["files", "op", "_write_local_data_files", "cursor"], ["file", "next", "files"]], "op": [["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "write_on_empty", "True"], ["files", "op", "_write_local_data_files", "cursor"]]}, "name": "test__write_local_data_files_csv_writes_empty_file_with_write_on_empty", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseSQLToGCSOperator.test__write_local_data_files_csv_writes_empty_file_with_write_on_empty", "ret_exprs": [], "ret_type": "", "variables": {"cursor": "", "description": "", "df": "", "file": "", "files": "", "op": ""}, "variables_p": {"cursor": [["Dict[int, Dict[str, Any]]", 0.222975906218425], ["mock.MagicMock", 0.1262130152817278], ["app.providers.Provider", 0.11008798687272352], ["str", 0.10797664934255304], ["unittesmock.MagicMock", 0.09750039183223395], ["List[mock.Mock]", 0.08760277496840588]], "description": [["str", 0.9121836693060863]], "df": [["str", 0.5468109365813456], ["list", 0.10790596724480223], ["List[str]", 0.08897805873232496], ["float", 0.08700568673152916]], "file": [["str", 0.26290564262735644]], "files": [["List[str]", 0.09842344818997542], ["str", 0.091632617548014]], "op": [["str", 0.6856481170100089], ["OrderedDict[str, Any]", 0.1095438044652123]]}}], "name": "TestBaseSQLToGCSOperator", "q_name": "TestBaseSQLToGCSOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "unittest", "mock", "MagicMock", "Mock", "pandas", "pd", "pytest", "airflow", "providers", "google", "cloud", "hooks", "gcs", "GCSHook", "airflow", "providers", "google", "cloud", "transfers", "sql_to_gcs", "BaseSQLToGCSOperator", "math", "pyarrow.parquet", "pq"], "mod_var_ln": {"APP_JSON": [[60, 0], [60, 8]], "BUCKET": [[30, 0], [30, 6]], "COLUMNS": [[38, 0], [38, 7]], "CURSOR_DESCRIPTION": [[40, 0], [40, 18]], "EMPTY_INPUT_DATA": [[46, 0], [46, 16]], "EXCLUDE_COLUMNS": [[64, 0], [64, 15]], "FILENAME": [[31, 0], [31, 8]], "INPUT_DATA": [[47, 0], [47, 10]], "NEW_COLUMNS": [[66, 0], [66, 11]], "OUTPUT_DATA": [[52, 0], [52, 11]], "OUTPUT_DF": [[62, 0], [62, 9]], "OUTPUT_DF_WITH_EXCLUDE_COLUMNS": [[67, 0], [67, 30]], "PARTITION_COLUMNS": [[65, 0], [65, 17]], "ROW": [[39, 0], [39, 3]], "SCHEMA": [[33, 0], [33, 6]], "SCHEMA_FILE": [[59, 0], [59, 11]], "SQL": [[29, 0], [29, 3]], "TASK_ID": [[32, 0], [32, 7]], "TMP_FILE_NAME": [[45, 0], [45, 13]]}, "mod_var_occur": {"APP_JSON": [["json_call", "mock", "call", "BUCKET", "SCHEMA_FILE", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata"]], "BUCKET": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "approx_max_file_size_bytes", "export_format", "gzip", "True", "schema", "SCHEMA", "gcp_conn_id", "upload_metadata", "True"], ["csv_calls", "append", "mock", "call", "BUCKET", "FILENAME", "format", "i", "TMP_FILE_NAME", "mime_type", "gzip", "True", "metadata"], ["json_call", "mock", "call", "BUCKET", "SCHEMA_FILE", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "upload_metadata", "True"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "partition_columns", "PARTITION_COLUMNS"], ["mock_upload", "assert_has_calls", "mock", "call", "BUCKET", "row", "row", "i", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None", "i", "row", "enumerate", "INPUT_DATA"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "null_marker"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "parquet_row_group_size"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "write_on_empty", "True"]], "COLUMNS": [["OUTPUT_DF", "pd", "DataFrame", "columns", "COLUMNS"], ["NEW_COLUMNS", "c", "c", "COLUMNS", "c", "EXCLUDE_COLUMNS"], ["mock_writer", "return_value", "writerow", "call_args_list", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS"], ["mock_writer", "return_value", "writerow", "assert_has_calls", "mock", "call", "COLUMNS", "mock", "call", "mock", "call", "mock", "call"], ["output_df", "pd", "DataFrame", "columns", "COLUMNS"]], "CURSOR_DESCRIPTION": [["cursor_mock", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"], ["cursor", "description", "CURSOR_DESCRIPTION"]], "EMPTY_INPUT_DATA": [["cursor", "__iter__", "return_value", "EMPTY_INPUT_DATA"], ["cursor", "__iter__", "return_value", "EMPTY_INPUT_DATA"]], "EXCLUDE_COLUMNS": [["NEW_COLUMNS", "c", "c", "COLUMNS", "c", "EXCLUDE_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"]], "FILENAME": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "approx_max_file_size_bytes", "export_format", "gzip", "True", "schema", "SCHEMA", "gcp_conn_id", "upload_metadata", "True"], ["csv_calls", "append", "mock", "call", "BUCKET", "FILENAME", "format", "i", "TMP_FILE_NAME", "mime_type", "gzip", "True", "metadata"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "upload_metadata", "True"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "partition_columns", "PARTITION_COLUMNS"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "null_marker"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "parquet_row_group_size"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "write_on_empty", "True"]], "INPUT_DATA": [["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["mock_upload", "assert_has_calls", "mock", "call", "BUCKET", "row", "row", "i", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None", "i", "row", "enumerate", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor_mock", "__iter__", "Mock", "return_value", "iter", "INPUT_DATA"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["input_data", "INPUT_DATA"], ["parquet_file", "num_row_groups", "math", "ceil", "len", "INPUT_DATA", "op", "parquet_row_group_size"], ["cursor", "__iter__", "return_value", "INPUT_DATA"], ["cursor", "__iter__", "return_value", "INPUT_DATA"]], "NEW_COLUMNS": [["OUTPUT_DF_WITH_EXCLUDE_COLUMNS", "pd", "DataFrame", "len", "NEW_COLUMNS", "columns", "NEW_COLUMNS"]], "OUTPUT_DATA": [["mock_file", "write", "call_args_list", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call"], ["mock_file", "write", "call_args_list", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call", "mock", "call", "OUTPUT_DATA", "mock", "call"]], "OUTPUT_DF": [["df", "equals", "OUTPUT_DF"], ["df", "equals", "OUTPUT_DF"], ["df", "equals", "OUTPUT_DF"], ["concat_df", "equals", "OUTPUT_DF"]], "OUTPUT_DF_WITH_EXCLUDE_COLUMNS": [["df", "equals", "OUTPUT_DF_WITH_EXCLUDE_COLUMNS"]], "PARTITION_COLUMNS": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"]], "ROW": [["mock_writer", "return_value", "writerow", "call_args_list", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS", "mock", "call", "ROW", "mock", "call", "COLUMNS"]], "SCHEMA": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "approx_max_file_size_bytes", "export_format", "gzip", "True", "schema", "SCHEMA", "gcp_conn_id", "upload_metadata", "True"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "upload_metadata", "True"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "parquet_row_group_size"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "write_on_empty", "True"]], "SCHEMA_FILE": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "approx_max_file_size_bytes", "export_format", "gzip", "True", "schema", "SCHEMA", "gcp_conn_id", "upload_metadata", "True"], ["json_call", "mock", "call", "BUCKET", "SCHEMA_FILE", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "parquet_row_group_size"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "write_on_empty", "True"]], "SQL": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "approx_max_file_size_bytes", "export_format", "gzip", "True", "schema", "SCHEMA", "gcp_conn_id", "upload_metadata", "True"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "upload_metadata", "True"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "partition_columns", "PARTITION_COLUMNS"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "null_marker"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "parquet_row_group_size"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "write_on_empty", "True"]], "TASK_ID": [["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "approx_max_file_size_bytes", "export_format", "gzip", "True", "schema", "SCHEMA", "gcp_conn_id", "upload_metadata", "True"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "upload_metadata", "True"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "schema", "SCHEMA", "partition_columns", "PARTITION_COLUMNS"], ["operator", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "export_format", "null_marker"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "parquet_row_group_size"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "exclude_columns", "EXCLUDE_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "partition_columns", "PARTITION_COLUMNS"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id"], ["op", "DummySQLToGCSOperator", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "task_id", "TASK_ID", "schema_filename", "SCHEMA_FILE", "export_format", "gzip", "False", "schema", "SCHEMA", "gcp_conn_id", "write_on_empty", "True"]], "TMP_FILE_NAME": [["mock_file", "name", "TMP_FILE_NAME"], ["csv_calls", "append", "mock", "call", "BUCKET", "FILENAME", "format", "i", "TMP_FILE_NAME", "mime_type", "gzip", "True", "metadata"], ["json_call", "mock", "call", "BUCKET", "SCHEMA_FILE", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata", "None"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "APP_JSON", "gzip", "False", "metadata"], ["mock_upload", "assert_called_once_with", "BUCKET", "FILENAME", "format", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None"], ["mock_upload", "assert_has_calls", "mock", "call", "BUCKET", "row", "row", "i", "TMP_FILE_NAME", "mime_type", "gzip", "False", "metadata", "None", "i", "row", "enumerate", "INPUT_DATA"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 103}, "session_id": "nR_w6DURFO5OXlNbsuJgzJWn_FTWdAUq_m2R11CakJg", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {"APP_JSON": "", "BUCKET": "", "COLUMNS": "", "CURSOR_DESCRIPTION": "", "EMPTY_INPUT_DATA": "", "EXCLUDE_COLUMNS": "", "FILENAME": "", "INPUT_DATA": "", "NEW_COLUMNS": "", "OUTPUT_DATA": "", "OUTPUT_DF": "", "OUTPUT_DF_WITH_EXCLUDE_COLUMNS": "", "PARTITION_COLUMNS": "", "ROW": "", "SCHEMA": "", "SCHEMA_FILE": "", "SQL": "", "TASK_ID": "", "TMP_FILE_NAME": ""}, "variables_p": {"APP_JSON": [], "BUCKET": [["str", 0.751992101061423], ["OrderedDict[str, str]", 0.09219458096844828]], "COLUMNS": [["pandas.core.indexes.datetimes.DatetimeIndex", 0.11430773850944248], ["List[int]", 0.1102603895031033], ["int", 0.09345086661285938], ["list", 0.08627571480239711]], "CURSOR_DESCRIPTION": [["int", 0.22390693710503612], ["Tuple[str, str]", 0.09431190400643542], ["set", 0.08890262431121325]], "EMPTY_INPUT_DATA": [["Dict[str, Union[Any, Any]]", 0.278091752369349], ["Dict[str, int]", 0.1911079290105312], ["List[Union[None, float, str]]", 0.09863096390118604], ["List[Dict[str, Any]]", 0.09727420046776603], ["Dict[str, Union[Any, Any, Any]]", 0.08809883564711184], ["int", 0.084175376053197], ["List[str]", 0.08167538217491903], ["Dict[str, Union[int, str]]", 0.08094556037593957]], "EXCLUDE_COLUMNS": [["str", 0.25145813589727617], ["Dict[str, str]", 0.21570559052333144], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0975480768946827], ["List[str]", 0.09094046968141908], ["int", 0.08642202327250316]], "FILENAME": [["str", 0.5985128256871552], ["list", 0.0888543908406955]], "INPUT_DATA": [["unittesmock.Mock", 0.2623344696693777], ["List[Dict[str, str]]", 0.22206434357991334], ["Union[mock.AsyncMock, mock.MagicMock]", 0.1870125833504983], ["mock.Mock", 0.09362086304531927], ["Dict[str, Union[Any, Any, Any]]", 0.07539445249942991]], "NEW_COLUMNS": [["List[str]", 0.36802121466527765], ["list", 0.1883403575815195], ["bytes", 0.10359376840913573], ["bool", 0.07602880640759735]], "OUTPUT_DATA": [["Dict[str, Union[Any, Any, Any]]", 0.20567205453572687], ["list", 0.1206015213751477], ["Dict[str, Union[float, str]]", 0.10358296748776565], ["Dict[str, Union[Any, bool, str]]", 0.10283602726786344], ["pandas.DataFrame", 0.08932181601167094], ["DefaultDict[Any, List[Any]]", 0.08863765335811033], ["mock._Call", 0.08726596304052982]], "OUTPUT_DF": [["list", 0.27376780815307233], ["str", 0.10336349657203779], ["Dict[str, str]", 0.09044665346228996], ["Counter[Any]", 0.08887713014703638]], "OUTPUT_DF_WITH_EXCLUDE_COLUMNS": [["int", 0.8837952175563403], ["str", 0.11620478244365974]], "PARTITION_COLUMNS": [["str", 0.4951763395412231], ["IO[bytes]", 0.18196765314536933], ["Union[Literal, str]", 0.10764802050838637], ["Dict[str, str]", 0.10112941566589881]], "ROW": [["Dict[str, Union[Any, Any, str]]", 0.19590952223351749], ["Dict[str, List[Any]]", 0.11317278807894429], ["str", 0.1007595933472301], ["unittesmock.Mock", 0.09997492680437921], ["unittesmock.MagicMock", 0.09974851130889573], ["Dict[str, int]", 0.09590565133548924]], "SCHEMA": [["List[str]", 0.09966825798276585]], "SCHEMA_FILE": [["str", 0.30385496772179554], ["tuple", 0.09415238261811588], ["Counter[str]", 0.0922657400241295]], "SQL": [["List[str]", 0.09966825798276585]], "TASK_ID": [["str", 0.9069459754481315], ["Type[str]", 0.0930540245518686]], "TMP_FILE_NAME": [["str", 0.8966016820183406], ["dict", 0.10339831798165965]]}}}