{"error": null, "response": {"classes": [{"cls_lc": [[38, 0], [103, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [41, 102]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFunctionHookNoDefaultProjectId.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [48, 107]], "fn_var_ln": {"gcf_function_hook_no_project_id": [[48, 12], [48, 48]]}, "fn_var_occur": {"gcf_function_hook_no_project_id": [["self", "gcf_function_hook_no_project_id", "CloudFunctionsHook", "gcp_conn_id", "api_version"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcf_function_hook_no_project_id", "CloudFunctionsHook", "gcp_conn_id", "api_version"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFunctionHookNoDefaultProjectId.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gcf_function_hook_no_project_id": ""}, "variables_p": {"gcf_function_hook_no_project_id": [["str", 0.8013326365307439], ["List[str]", 0.10403046026980936], ["list", 0.09463690319944659]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [58, 67]], "fn_var_ln": {"result": [[53, 8], [53, 14]]}, "fn_var_occur": {"result": [["result", "self", "gcf_function_hook_no_project_id", "get_conn"], ["mock_build", "return_value", "result"], ["self", "gcf_function_hook_no_project_id", "_conn", "result"]]}, "name": "test_gcf_client_creation", "params": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_descr": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_occur": {"mock_authorize": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"]], "mock_build": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"], ["mock_build", "return_value", "result"]], "self": [["result", "self", "gcf_function_hook_no_project_id", "get_conn"], ["self", "gcf_function_hook_no_project_id", "_conn", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_authorize": [], "mock_build": [], "self": []}, "q_name": "TestFunctionHookNoDefaultProjectId.test_gcf_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["list", 0.3747949189919458], ["Dict[str, Union[Any, Any, str]]", 0.08953523739275056], ["DefaultDict[Any, List[Any]]", 0.08821197556432306]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [77, 93]], "fn_var_ln": {"create_method": [[65, 8], [65, 21]], "execute_method": [[68, 8], [68, 22]], "res": [[71, 8], [71, 11]], "return_value": [[70, 8], [70, 51]]}, "fn_var_occur": {"create_method": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"], ["execute_method", "create_method", "return_value", "execute"], ["create_method", "assert_called_once_with", "body", "location"]], "execute_method": [["execute_method", "create_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "res": [["res", "self", "gcf_function_hook_no_project_id", "create_new_function", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "location", "GCF_LOCATION", "body"], ["res", "None"]], "return_value": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"], ["execute_method", "create_method", "return_value", "execute"], ["execute_method", "return_value"], ["wait_for_operation_to_complete", "return_value", "None"]]}, "name": "test_create_new_function_overridden_project_id", "params": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_descr": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_occur": {"get_conn": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"]], "self": [["res", "self", "gcf_function_hook_no_project_id", "create_new_function", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "location", "GCF_LOCATION", "body"]], "wait_for_operation_to_complete": [["wait_for_operation_to_complete", "return_value", "None"], ["wait_for_operation_to_complete", "assert_called_once_with", "operation_name"]]}, "params_p": {"args": [], "get_conn": [["raiden.utils.Address", 0.10667916184166337], ["str", 0.09768223940867554], ["raiden.utils.List[raiden.utils.TokenAddress]", 0.09170114919041314], ["Callable[..., None]", 0.08901149881579624]], "kwargs": [], "self": [], "wait_for_operation_to_complete": [["Optional[bool]", 0.12638187208361862], ["mode.utils.types.trees.NodeT", 0.10632873503947089], ["IO", 0.10370043576513685], ["Optional[int]", 0.08687752596906041]]}, "q_name": "TestFunctionHookNoDefaultProjectId.test_create_new_function_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"create_method": "", "execute_method": "", "res": "", "return_value": ""}, "variables_p": {"create_method": [["int", 0.4130675262844317], ["Dict[str, Union[float, str]]", 0.2005101430608236], ["Dict[Union[int, str], int]", 0.10206561218105598], ["set", 0.09517405354587044]], "execute_method": [["Dict[str, int]", 0.45214736163662905], ["str", 0.3357868524229438], ["int", 0.12070617087050864], ["list", 0.09135961506991837]], "res": [["str", 0.6098225936396824], ["List[google.cloud.bigquery.ScalarQueryParameter]", 0.11373803910350348], ["int", 0.10611585211776975], ["float", 0.08916089117246938]], "return_value": [["int", 0.4954327739376163], ["str", 0.10177346869900486], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.08958709761872252]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [103, 13]], "fn_var_ln": {"execute_method": [[88, 12], [88, 26]], "generate_upload_url_method": [[85, 12], [85, 38]], "mck": [[82, 8], [82, 11]], "open_module": [[82, 13], [82, 24]], "res": [[91, 12], [91, 15]], "return_value": [[90, 12], [90, 37]]}, "fn_var_occur": {"execute_method": [["execute_method", "generate_upload_url_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "generate_upload_url_method": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"], ["execute_method", "generate_upload_url_method", "return_value", "execute"], ["generate_upload_url_method", "assert_called_once_with", "parent"]], "mck": [["mck", "open_module", "get_open_mock"], ["mock", "patch", "open_module", "mck"]], "open_module": [["mck", "open_module", "get_open_mock"], ["mock", "patch", "open_module", "mck"]], "res": [["res", "self", "gcf_function_hook_no_project_id", "upload_function_zip", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "location", "GCF_LOCATION", "zip_path"]], "return_value": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"], ["execute_method", "generate_upload_url_method", "return_value", "execute"], ["execute_method", "return_value"], ["requests_put", "return_value", "None"]]}, "name": "test_upload_function_zip_overridden_project_id", "params": {"get_conn": "", "requests_put": "", "self": ""}, "params_descr": {"get_conn": "", "requests_put": "", "self": ""}, "params_occur": {"get_conn": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"]], "requests_put": [["requests_put", "return_value", "None"], ["requests_put", "assert_called_once_with", "data", "mock", "ANY", "headers", "url"]], "self": [["res", "self", "gcf_function_hook_no_project_id", "upload_function_zip", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "location", "GCF_LOCATION", "zip_path"]]}, "params_p": {"args": [], "get_conn": [["dict", 0.0955210315204133]], "kwargs": [], "requests_put": [["str", 0.26652705787655856]], "self": []}, "q_name": "TestFunctionHookNoDefaultProjectId.test_upload_function_zip_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"execute_method": "", "generate_upload_url_method": "", "mck": "", "open_module": "", "res": "", "return_value": ""}, "variables_p": {"execute_method": [["list", 0.21330612866675336], ["str", 0.193632408628516], ["Dict[str, int]", 0.10821688976832608], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.09720064561441272], ["List[Tuple[str, str, str, str]]", 0.09719531437921791], ["frozenset[Union[bytes, str]]", 0.096816204314258], ["List[str]", 0.096816204314258], ["Set[str]", 0.096816204314258]], "generate_upload_url_method": [["str", 0.5932078110371835], ["List[Tuple[Any, Any, None]]", 0.18799480531099838], ["Dict[Any, Union[int, str]]", 0.11325117500447811], ["list", 0.10554620864734009]], "mck": [["int", 0.20418297701242882], ["app.providers.Provider", 0.17934245960212075], ["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.12224462672010275], ["mock.MagicMock", 0.09547286012010504]], "open_module": [], "res": [["str", 0.6629159875659311], ["List[google.cloud.bigquery.ScalarQueryParameter]", 0.14146105771253017], ["List[str]", 0.10137862225958534], ["FrozenSet", 0.09424433246195345]], "return_value": [["Dict[str, List[Any]]", 0.29980148288916225], ["Dict[str, Union[int, str]]", 0.09657121809399494], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09137708578801511], ["Dict[str, Any]", 0.08167310955856324], ["list", 0.08076708412979099]]}}], "name": "TestFunctionHookNoDefaultProjectId", "q_name": "TestFunctionHookNoDefaultProjectId", "variables": {}, "variables_p": {}}, {"cls_lc": [[106, 0], [314, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [112, 93]], "fn_var_ln": {"gcf_function_hook": [[112, 12], [112, 34]]}, "fn_var_occur": {"gcf_function_hook": [["self", "gcf_function_hook", "CloudFunctionsHook", "gcp_conn_id", "api_version"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcf_function_hook", "CloudFunctionsHook", "gcp_conn_id", "api_version"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFunctionHookDefaultProjectId.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gcf_function_hook": ""}, "variables_p": {"gcf_function_hook": [["str", 0.36302352667124727], ["List[str]", 0.138975021899928], ["Dict[Any, Tuple[Any, Any]]", 0.0942202976608814], ["Dict[str, str]", 0.09406152847522199], ["Dict[str, Any]", 0.0854479857618685]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [122, 53]], "fn_var_ln": {"result": [[117, 8], [117, 14]]}, "fn_var_occur": {"result": [["result", "self", "gcf_function_hook", "get_conn"], ["mock_build", "return_value", "result"], ["self", "gcf_function_hook", "_conn", "result"]]}, "name": "test_gcf_client_creation", "params": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_descr": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_occur": {"mock_authorize": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"]], "mock_build": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"], ["mock_build", "return_value", "result"]], "self": [["result", "self", "gcf_function_hook", "get_conn"], ["self", "gcf_function_hook", "_conn", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_authorize": [], "mock_build": [], "self": []}, "q_name": "TestFunctionHookDefaultProjectId.test_gcf_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["list", 0.3772407060897082]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [148, 93]], "fn_var_ln": {"create_method": [[134, 8], [134, 21]], "execute_method": [[137, 8], [137, 22]], "res": [[140, 8], [140, 11]], "return_value": [[139, 8], [139, 51]]}, "fn_var_occur": {"create_method": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"], ["execute_method", "create_method", "return_value", "execute"], ["create_method", "assert_called_once_with", "body", "location"]], "execute_method": [["execute_method", "create_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "res": [["res", "self", "gcf_function_hook", "create_new_function", "location", "GCF_LOCATION", "body", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"], ["execute_method", "create_method", "return_value", "execute"], ["execute_method", "return_value"], ["wait_for_operation_to_complete", "return_value", "None"]]}, "name": "test_create_new_function", "params": {"get_conn": "", "mock_project_id": "", "self": "", "wait_for_operation_to_complete": ""}, "params_descr": {"get_conn": "", "mock_project_id": "", "self": "", "wait_for_operation_to_complete": ""}, "params_occur": {"get_conn": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"]], "mock_project_id": [], "self": [["res", "self", "gcf_function_hook", "create_new_function", "location", "GCF_LOCATION", "body", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]], "wait_for_operation_to_complete": [["wait_for_operation_to_complete", "return_value", "None"], ["wait_for_operation_to_complete", "assert_called_once_with", "operation_name"]]}, "params_p": {"args": [], "get_conn": [["bytes", 0.14986737922564888], ["mock.MagicMock", 0.0815827722153907]], "kwargs": [], "mock_project_id": [["List[str]", 0.0931121220443869]], "self": [], "wait_for_operation_to_complete": [["Optional[Tuple[float, float]]", 0.11367742835061265], ["str", 0.10674082535004845]]}, "q_name": "TestFunctionHookDefaultProjectId.test_create_new_function", "ret_exprs": [], "ret_type": "", "variables": {"create_method": "", "execute_method": "", "res": "", "return_value": ""}, "variables_p": {"create_method": [["int", 0.4130675262844317], ["Dict[str, Union[float, str]]", 0.2005101430608236], ["Dict[Union[int, str], int]", 0.10206561218105598], ["set", 0.09517405354587044]], "execute_method": [["Dict[str, int]", 0.45214736163662905], ["str", 0.3357868524229438], ["int", 0.12070617087050864], ["list", 0.09135961506991837]], "res": [["str", 0.3107471441624303], ["list", 0.11884988783130107], ["Dict[str, str]", 0.10761477125460638], ["Optional[bool]", 0.08664211336218527], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.0822538564936686]], "return_value": [["int", 0.4954327739376163], ["str", 0.10177346869900486], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.08958709761872252]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [167, 93]], "fn_var_ln": {"create_method": [[155, 8], [155, 21]], "execute_method": [[158, 8], [158, 22]], "res": [[161, 8], [161, 11]], "return_value": [[160, 8], [160, 51]]}, "fn_var_occur": {"create_method": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"], ["execute_method", "create_method", "return_value", "execute"], ["create_method", "assert_called_once_with", "body", "location"]], "execute_method": [["execute_method", "create_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "res": [["res", "self", "gcf_function_hook", "create_new_function", "project_id", "location", "GCF_LOCATION", "body"], ["res", "None"]], "return_value": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"], ["execute_method", "create_method", "return_value", "execute"], ["execute_method", "return_value"], ["wait_for_operation_to_complete", "return_value", "None"]]}, "name": "test_create_new_function_override_project_id", "params": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_descr": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_occur": {"get_conn": [["create_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "create"]], "self": [["res", "self", "gcf_function_hook", "create_new_function", "project_id", "location", "GCF_LOCATION", "body"]], "wait_for_operation_to_complete": [["wait_for_operation_to_complete", "return_value", "None"], ["wait_for_operation_to_complete", "assert_called_once_with", "operation_name"]]}, "params_p": {"args": [], "get_conn": [["raiden.utils.Address", 0.10667916184166337], ["str", 0.09768223940867554], ["raiden.utils.List[raiden.utils.TokenAddress]", 0.09170114919041314], ["Callable[..., None]", 0.08901149881579624]], "kwargs": [], "self": [], "wait_for_operation_to_complete": [["Optional[bool]", 0.12638187208361862], ["mode.utils.types.trees.NodeT", 0.10632873503947089], ["IO", 0.10370043576513685], ["Optional[int]", 0.08687752596906041]]}, "q_name": "TestFunctionHookDefaultProjectId.test_create_new_function_override_project_id", "ret_exprs": [], "ret_type": "", "variables": {"create_method": "", "execute_method": "", "res": "", "return_value": ""}, "variables_p": {"create_method": [["int", 0.4130675262844317], ["Dict[str, Union[float, str]]", 0.2005101430608236], ["Dict[Union[int, str], int]", 0.10206561218105598], ["set", 0.09517405354587044]], "execute_method": [["Dict[str, int]", 0.45214736163662905], ["str", 0.3357868524229438], ["int", 0.12070617087050864], ["list", 0.09135961506991837]], "res": [["list", 0.15558906411907686], ["dict", 0.09793815055387177], ["str", 0.07929635030100694]], "return_value": [["int", 0.4954327739376163], ["str", 0.10177346869900486], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.08958709761872252]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [180, 61]], "fn_var_ln": {"execute_method": [[174, 8], [174, 22]], "get_method": [[171, 8], [171, 18]], "res": [[176, 8], [176, 11]], "return_value": [[175, 8], [175, 35]]}, "fn_var_occur": {"execute_method": [["execute_method", "get_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "get_method": [["get_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "get"], ["execute_method", "get_method", "return_value", "execute"], ["get_method", "assert_called_once_with", "name"]], "res": [["res", "self", "gcf_function_hook", "get_function", "name", "GCF_FUNCTION"], ["res", "None"]], "return_value": [["get_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "get"], ["execute_method", "get_method", "return_value", "execute"], ["execute_method", "return_value"]]}, "name": "test_get_function", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["get_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "get"]], "self": [["res", "self", "gcf_function_hook", "get_function", "name", "GCF_FUNCTION"]]}, "params_p": {"args": [], "get_conn": [["bool", 0.10323124770112323], ["raiden.utils.TokenAmount", 0.09645584737061712]], "kwargs": [], "self": []}, "q_name": "TestFunctionHookDefaultProjectId.test_get_function", "ret_exprs": [], "ret_type": "", "variables": {"execute_method": "", "get_method": "", "res": "", "return_value": ""}, "variables_p": {"execute_method": [["dict", 0.1995326455114157], ["Dict[str, Dict[str, str]]", 0.1212721809394819], ["List[int]", 0.11052189677125111], ["Dict[str, Dict[str, Any]]", 0.10144504401881271], ["Dict[str, Optional[str]]", 0.09167581711721254], ["Dict[str, str]", 0.09167581711721254], ["str", 0.08936900330715818]], "get_method": [["raiden.utils.List[raiden.transfer.architecture.Event]", 0.18380523713432856], ["int", 0.10914719575137012], ["List[Dict[str, Any]]", 0.10723820166234266]], "res": [["Tuple[Literal, Literal]", 0.30500775654663914], ["int", 0.0951718983958487]], "return_value": [["int", 0.46934279960174696], ["str", 0.10795105847349194]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[186, 4], [196, 61]], "fn_var_ln": {"delete_method": [[187, 8], [187, 21]], "execute_method": [[190, 8], [190, 22]], "res": [[193, 8], [193, 11]], "return_value": [[192, 8], [192, 35]]}, "fn_var_occur": {"delete_method": [["delete_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "delete"], ["execute_method", "delete_method", "return_value", "execute"], ["delete_method", "assert_called_once_with", "name"]], "execute_method": [["execute_method", "delete_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "res": [["res", "self", "gcf_function_hook", "delete_function", "name", "GCF_FUNCTION"], ["res", "None"]], "return_value": [["delete_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "delete"], ["execute_method", "delete_method", "return_value", "execute"], ["wait_for_operation_to_complete", "return_value", "None"], ["execute_method", "return_value"]]}, "name": "test_delete_function", "params": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_descr": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_occur": {"get_conn": [["delete_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "delete"]], "self": [["res", "self", "gcf_function_hook", "delete_function", "name", "GCF_FUNCTION"]], "wait_for_operation_to_complete": [["wait_for_operation_to_complete", "return_value", "None"]]}, "params_p": {"args": [], "get_conn": [["str", 0.10575943560022494], ["raiden.utils.Address", 0.10371718200892943], ["bool", 0.08945094195628835], ["raiden.utils.List[raiden.utils.TokenAddress]", 0.08886914703581714], ["Callable[..., None]", 0.08802833622062518]], "kwargs": [], "self": [], "wait_for_operation_to_complete": [["str", 0.13035946611371435], ["Dict[str, Any]", 0.10829457545705963], ["bool", 0.0876043737860641]]}, "q_name": "TestFunctionHookDefaultProjectId.test_delete_function", "ret_exprs": [], "ret_type": "", "variables": {"delete_method": "", "execute_method": "", "res": "", "return_value": ""}, "variables_p": {"delete_method": [["int", 0.42035902686024684], ["Dict[str, Union[float, str]]", 0.196372908078132], ["DefaultDict[Any, int]", 0.09613450457048034], ["str", 0.09581046533185815], ["list", 0.09283222358336848]], "execute_method": [["List[str]", 0.2784630419681322], ["list", 0.20443096465389984], ["str", 0.18547155939865845], ["List[Tuple[str, str, str, str]]", 0.12429224758289892], ["Dict[str, int]", 0.11619546471508072], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.09114672168132987]], "res": [["str", 0.12030192121935081], ["Dict[str, int]", 0.10000167806768132]], "return_value": [["int", 0.5006976244484725], ["str", 0.10539645038255974], ["list", 0.09064070819386157]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[202, 4], [213, 93]], "fn_var_ln": {"execute_method": [[206, 8], [206, 22]], "patch_method": [[203, 8], [203, 20]], "res": [[209, 8], [209, 11]], "return_value": [[208, 8], [208, 51]]}, "fn_var_occur": {"execute_method": [["execute_method", "patch_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "patch_method": [["patch_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "patch"], ["execute_method", "patch_method", "return_value", "execute"], ["patch_method", "assert_called_once_with", "body", "name", "updateMask"]], "res": [["res", "self", "gcf_function_hook", "update_function", "update_mask", "name", "GCF_FUNCTION", "body"], ["res", "None"]], "return_value": [["patch_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "patch"], ["execute_method", "patch_method", "return_value", "execute"], ["execute_method", "return_value"], ["wait_for_operation_to_complete", "return_value", "None"]]}, "name": "test_update_function", "params": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_descr": {"get_conn": "", "self": "", "wait_for_operation_to_complete": ""}, "params_occur": {"get_conn": [["patch_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "patch"]], "self": [["res", "self", "gcf_function_hook", "update_function", "update_mask", "name", "GCF_FUNCTION", "body"]], "wait_for_operation_to_complete": [["wait_for_operation_to_complete", "return_value", "None"], ["wait_for_operation_to_complete", "assert_called_once_with", "operation_name"]]}, "params_p": {"args": [], "get_conn": [["str", 0.11428715192781955], ["raiden.utils.Address", 0.09625754291446337], ["bool", 0.09531743632373206], ["raiden.utils.TokenAmount", 0.09234121193531035], ["raiden.utils.List[raiden.utils.TokenAddress]", 0.09224753021485138]], "kwargs": [], "self": [], "wait_for_operation_to_complete": [["Dict[str, Any]", 0.09747850789815143], ["mode.utils.types.trees.NodeT", 0.09520055936852347], ["dict", 0.09427475461477804], ["str", 0.0935175267419464], ["int", 0.09326920269469428]]}, "q_name": "TestFunctionHookDefaultProjectId.test_update_function", "ret_exprs": [], "ret_type": "", "variables": {"execute_method": "", "patch_method": "", "res": "", "return_value": ""}, "variables_p": {"execute_method": [["List[str]", 0.2784630419681322], ["list", 0.20443096465389984], ["str", 0.18547155939865845], ["List[Tuple[str, str, str, str]]", 0.12429224758289892], ["Dict[str, int]", 0.11619546471508072], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.09114672168132987]], "patch_method": [["int", 0.29595808534411794], ["cirq.google.engine.engine.EngineContext", 0.19187563876960118], ["Dict[str, Union[None, Any, Any]]", 0.10829811209879563], ["Dict[str, Dict[str, Any]]", 0.08833980984062728], ["Dict[str, Union[Any, Any]]", 0.08268515970443739]], "res": [["Pattern[str]", 0.11503422630492327], ["list", 0.11007937615631433], ["List[str]", 0.0900016050967442]], "return_value": [["int", 0.5006976244484725], ["str", 0.10539645038255974], ["list", 0.09064070819386157]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[222, 4], [246, 13]], "fn_var_ln": {"execute_method": [[229, 12], [229, 26]], "generate_upload_url_method": [[226, 12], [226, 38]], "mck": [[223, 8], [223, 11]], "open_module": [[223, 13], [223, 24]], "res": [[232, 12], [232, 15]], "return_value": [[231, 12], [231, 37]]}, "fn_var_occur": {"execute_method": [["execute_method", "generate_upload_url_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "generate_upload_url_method": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"], ["execute_method", "generate_upload_url_method", "return_value", "execute"], ["generate_upload_url_method", "assert_called_once_with", "parent"]], "mck": [["mck", "open_module", "get_open_mock"], ["mock", "patch", "open_module", "mck"]], "open_module": [["mck", "open_module", "get_open_mock"], ["mock", "patch", "open_module", "mck"]], "res": [["res", "self", "gcf_function_hook", "upload_function_zip", "location", "GCF_LOCATION", "zip_path", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]], "return_value": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"], ["execute_method", "generate_upload_url_method", "return_value", "execute"], ["execute_method", "return_value"], ["requests_put", "return_value", "None"]]}, "name": "test_upload_function_zip", "params": {"get_conn": "", "mock_project_id": "", "requests_put": "", "self": ""}, "params_descr": {"get_conn": "", "mock_project_id": "", "requests_put": "", "self": ""}, "params_occur": {"get_conn": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"]], "mock_project_id": [], "requests_put": [["requests_put", "return_value", "None"], ["requests_put", "assert_called_once_with", "data", "mock", "ANY", "headers", "url"]], "self": [["res", "self", "gcf_function_hook", "upload_function_zip", "location", "GCF_LOCATION", "zip_path", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_conn": [], "kwargs": [], "mock_project_id": [["bool", 0.17795564070795644], ["str", 0.09753738544764515]], "requests_put": [["str", 0.21121668999177584]], "self": []}, "q_name": "TestFunctionHookDefaultProjectId.test_upload_function_zip", "ret_exprs": [], "ret_type": "", "variables": {"execute_method": "", "generate_upload_url_method": "", "mck": "", "open_module": "", "res": "", "return_value": ""}, "variables_p": {"execute_method": [["list", 0.21330612866675336], ["str", 0.193632408628516], ["Dict[str, int]", 0.10821688976832608], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.09720064561441272], ["List[Tuple[str, str, str, str]]", 0.09719531437921791], ["frozenset[Union[bytes, str]]", 0.096816204314258], ["List[str]", 0.096816204314258], ["Set[str]", 0.096816204314258]], "generate_upload_url_method": [["str", 0.5932078110371835], ["List[Tuple[Any, Any, None]]", 0.18799480531099838], ["Dict[Any, Union[int, str]]", 0.11325117500447811], ["list", 0.10554620864734009]], "mck": [["int", 0.20418297701242882], ["app.providers.Provider", 0.17934245960212075], ["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.12224462672010275], ["mock.MagicMock", 0.09547286012010504]], "open_module": [], "res": [["str", 0.3750424881647867], ["Pattern[str]", 0.2418212447723273], ["List[str]", 0.10383138934780561], ["Union[Literal, Literal]", 0.08990498658800693]], "return_value": [["Dict[str, List[Any]]", 0.29980148288916225], ["Dict[str, Union[int, str]]", 0.09657121809399494], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09137708578801511], ["Dict[str, Any]", 0.08167310955856324], ["list", 0.08076708412979099]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[250, 4], [272, 13]], "fn_var_ln": {"execute_method": [[257, 12], [257, 26]], "generate_upload_url_method": [[254, 12], [254, 38]], "mck": [[251, 8], [251, 11]], "open_module": [[251, 13], [251, 24]], "res": [[260, 12], [260, 15]], "return_value": [[259, 12], [259, 37]]}, "fn_var_occur": {"execute_method": [["execute_method", "generate_upload_url_method", "return_value", "execute"], ["execute_method", "return_value"], ["execute_method", "assert_called_once_with", "num_retries"]], "generate_upload_url_method": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"], ["execute_method", "generate_upload_url_method", "return_value", "execute"], ["generate_upload_url_method", "assert_called_once_with", "parent"]], "mck": [["mck", "open_module", "get_open_mock"], ["mock", "patch", "open_module", "mck"]], "open_module": [["mck", "open_module", "get_open_mock"], ["mock", "patch", "open_module", "mck"]], "res": [["res", "self", "gcf_function_hook", "upload_function_zip", "project_id", "location", "GCF_LOCATION", "zip_path"]], "return_value": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"], ["execute_method", "generate_upload_url_method", "return_value", "execute"], ["execute_method", "return_value"], ["requests_put", "return_value", "None"]]}, "name": "test_upload_function_zip_overridden_project_id", "params": {"get_conn": "", "requests_put": "", "self": ""}, "params_descr": {"get_conn": "", "requests_put": "", "self": ""}, "params_occur": {"get_conn": [["generate_upload_url_method", "get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "generateUploadUrl"]], "requests_put": [["requests_put", "return_value", "None"], ["requests_put", "assert_called_once_with", "data", "mock", "ANY", "headers", "url"]], "self": [["res", "self", "gcf_function_hook", "upload_function_zip", "project_id", "location", "GCF_LOCATION", "zip_path"]]}, "params_p": {"args": [], "get_conn": [["dict", 0.0955210315204133]], "kwargs": [], "requests_put": [["str", 0.26652705787655856]], "self": []}, "q_name": "TestFunctionHookDefaultProjectId.test_upload_function_zip_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"execute_method": "", "generate_upload_url_method": "", "mck": "", "open_module": "", "res": "", "return_value": ""}, "variables_p": {"execute_method": [["list", 0.21330612866675336], ["str", 0.193632408628516], ["Dict[str, int]", 0.10821688976832608], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.09720064561441272], ["List[Tuple[str, str, str, str]]", 0.09719531437921791], ["frozenset[Union[bytes, str]]", 0.096816204314258], ["List[str]", 0.096816204314258], ["Set[str]", 0.096816204314258]], "generate_upload_url_method": [["str", 0.5932078110371835], ["List[Tuple[Any, Any, None]]", 0.18799480531099838], ["Dict[Any, Union[int, str]]", 0.11325117500447811], ["list", 0.10554620864734009]], "mck": [["int", 0.20418297701242882], ["app.providers.Provider", 0.17934245960212075], ["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.12224462672010275], ["mock.MagicMock", 0.09547286012010504]], "open_module": [], "res": [["str", 0.41268913980986766], ["dict", 0.11361872866668656], ["list", 0.09990909843712638], ["Dict[str, str]", 0.09728376102801232], ["List[str]", 0.0923514579501227], ["Optional[str]", 0.09116457775595002]], "return_value": [["Dict[str, List[Any]]", 0.29980148288916225], ["Dict[str, Union[int, str]]", 0.09657121809399494], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09137708578801511], ["Dict[str, Any]", 0.08167310955856324], ["list", 0.08076708412979099]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[275, 4], [295, 32]], "fn_var_ln": {"call": [[278, 8], [278, 12]], "function_id": [[283, 8], [283, 19]], "input_data": [[284, 8], [284, 18]], "name": [[285, 8], [285, 12]], "payload": [[276, 8], [276, 15]], "result": [[287, 8], [287, 14]]}, "fn_var_occur": {"call": [["call", "mock_get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "call"], ["call", "return_value", "execute", "return_value", "payload"], ["call", "assert_called_once_with", "body", "input_data", "name", "name"]], "function_id": [["name", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "GCF_LOCATION", "function_id"], ["result", "self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]], "input_data": [["result", "self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["call", "assert_called_once_with", "body", "input_data", "name", "name"]], "name": [["name", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "GCF_LOCATION", "function_id"], ["call", "assert_called_once_with", "body", "input_data", "name", "name"]], "payload": [["call", "return_value", "execute", "return_value", "payload"], ["result", "payload"]], "result": [["result", "self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["result", "payload"]]}, "name": "test_call_function", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["call", "mock_get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "call"]], "self": [["result", "self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["Dict[str, Any]", 0.0847740274717051]], "self": []}, "q_name": "TestFunctionHookDefaultProjectId.test_call_function", "ret_exprs": [], "ret_type": "", "variables": {"call": "", "function_id": "", "input_data": "", "name": "", "payload": "", "result": ""}, "variables_p": {"call": [["List[int]", 0.19872421553497385], ["list", 0.1763490798072474], ["int", 0.09773492674364734], ["dict", 0.09353491795749018], ["str", 0.09177636779289518], ["Dict[str, int]", 0.0900530656047093], ["List[str]", 0.08657352345841199]], "function_id": [["int", 0.1841074601221001]], "input_data": [["Dict[str, int]", 0.16300306574973064], ["int", 0.15521160774596238], ["List[str]", 0.110809512470033], ["List[int]", 0.08033307347027024], ["str", 0.07784426118995187]], "name": [["str", 0.7118778718510432], ["Type[str]", 0.11346948557745615], ["dict", 0.08453730965590533]], "payload": [["str", 0.2180222374678943], ["Dict[str, Union[Any, Any, Any, Any]]", 0.18416906340053055], ["List[Union[Any, Any, Any]]", 0.18416906340053055], ["Dict[str, Dict[str, Any]]", 0.06496813153192714], ["set", 0.049455535758013744], ["List[Dict[str, Any]]", 0.04673455715190902]], "result": [["raiden.utils.Any", 0.4134503928056347], ["Dict[str, int]", 0.19138644699100554], ["List[float]", 0.10318686384464541], ["int", 0.09674476157692863]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[298, 4], [314, 13]], "fn_var_ln": {"call": [[301, 8], [301, 12]], "function_id": [[306, 8], [306, 19]], "input_data": [[307, 8], [307, 18]], "payload": [[299, 8], [299, 15]]}, "fn_var_occur": {"call": [["call", "mock_get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "call"], ["call", "return_value", "execute", "return_value", "payload"]], "function_id": [["self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]], "input_data": [["self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]], "payload": [["call", "return_value", "execute", "return_value", "payload"]]}, "name": "test_call_function_error", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["call", "mock_get_conn", "return_value", "projects", "return_value", "locations", "return_value", "functions", "return_value", "call"]], "self": [["self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestFunctionHookDefaultProjectId.test_call_function_error", "ret_exprs": [], "ret_type": "", "variables": {"call": "", "function_id": "", "input_data": "", "payload": ""}, "variables_p": {"call": [["List[int]", 0.19872421553497385], ["list", 0.1763490798072474], ["int", 0.09773492674364734], ["dict", 0.09353491795749018], ["str", 0.09177636779289518], ["Dict[str, int]", 0.0900530656047093], ["List[str]", 0.08657352345841199]], "function_id": [["int", 0.8143454875359217], ["List[int]", 0.10400158393943665], ["frozenset[int]", 0.08165292852464177]], "input_data": [["int", 0.5639721555588866], ["List[str]", 0.12191548296870384], ["Dict[str, int]", 0.0896957667460971], ["Dict[str, str]", 0.08048192369901841]], "payload": [["List[str]", 0.19534918377448396], ["List[Dict[str, str]]", 0.18035966282302535], ["Dict[str, Union[Any, Any, Any]]", 0.1615036819746564], ["Dict[str, Dict[str, Any]]", 0.13268849171787767], ["List[Dict[str, Any]]", 0.13268849171787767], ["list", 0.13268849171787767], ["str", 0.03043049589288822]]}}], "name": "TestFunctionHookDefaultProjectId", "q_name": "TestFunctionHookDefaultProjectId", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "PropertyMock", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "functions", "CloudFunctionsHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "get_open_mock", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"GCF_FUNCTION": [[35, 0], [35, 12]], "GCF_LOCATION": [[34, 0], [34, 12]]}, "mod_var_occur": {"GCF_FUNCTION": [["res", "self", "gcf_function_hook", "get_function", "name", "GCF_FUNCTION"], ["res", "self", "gcf_function_hook", "delete_function", "name", "GCF_FUNCTION"], ["res", "self", "gcf_function_hook", "update_function", "update_mask", "name", "GCF_FUNCTION", "body"]], "GCF_LOCATION": [["res", "self", "gcf_function_hook_no_project_id", "create_new_function", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "location", "GCF_LOCATION", "body"], ["res", "self", "gcf_function_hook_no_project_id", "upload_function_zip", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "location", "GCF_LOCATION", "zip_path"], ["res", "self", "gcf_function_hook", "create_new_function", "location", "GCF_LOCATION", "body", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "gcf_function_hook", "create_new_function", "project_id", "location", "GCF_LOCATION", "body"], ["res", "self", "gcf_function_hook", "upload_function_zip", "location", "GCF_LOCATION", "zip_path", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "gcf_function_hook", "upload_function_zip", "project_id", "location", "GCF_LOCATION", "zip_path"], ["name", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "GCF_LOCATION", "function_id"], ["result", "self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["self", "gcf_function_hook", "call_function", "function_id", "function_id", "location", "GCF_LOCATION", "input_data", "input_data", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 99}, "session_id": "Q-NXzH3V3h41cz9XXhyuJ-QsE06TJuXb4ChUsZNHFTE", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"GCF_FUNCTION": "", "GCF_LOCATION": ""}, "variables_p": {"GCF_FUNCTION": [["Set[str]", 0.23351248118963058], ["list", 0.11778691272848986], ["Dict[str, List[str]]", 0.10291835349201187], ["Dict[str, list]", 0.10291835349201187], ["dict", 0.10137560844729723]], "GCF_LOCATION": [["str", 0.4050391147387317], ["List[List[Any]]", 0.10933259791805065], ["float", 0.0974083480574145], ["Dict[str, Dict[str, Any]]", 0.09115826769444504]]}}}