{"error": null, "response": {"classes": [{"cls_lc": [[53, 0], [68, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [56, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHookClient.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [59, 50]], "fn_var_ln": {"gke_hook": [[59, 8], [59, 21]]}, "fn_var_occur": {"gke_hook": [["self", "gke_hook", "GKEHook", "location", "GKE_ZONE"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "GKEHook", "location", "GKE_ZONE"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHookClient.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gke_hook": ""}, "variables_p": {"gke_hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [68, 46]], "fn_var_ln": {"result": [[65, 8], [65, 14]]}, "fn_var_occur": {"result": [["result", "self", "gke_hook", "get_conn"], ["mock_client", "return_value", "result"], ["self", "gke_hook", "_client", "result"]]}, "name": "test_gke_cluster_client_creation", "params": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"], ["mock_client", "return_value", "result"]], "mock_get_creds": [["mock_client", "assert_called_once_with", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"]], "self": [["result", "self", "gke_hook", "get_conn"], ["self", "gke_hook", "_client", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_creds": [], "self": []}, "q_name": "TestGKEHookClient.test_gke_cluster_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["Type[Callable[..., Any]]", 0.1977110829294143], ["Dict[str, str]", 0.18986996015765753], ["Dict[str, Any]", 0.12040361248874532], ["tests.core.data.json.test_json_repository.DummyEntity", 0.1064139028368202], ["list", 0.10257328084243915]]}}], "name": "TestGKEHookClient", "q_name": "TestGKEHookClient", "variables": {}, "variables_p": {}}, {"cls_lc": [[71, 0], [121, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [77, 43]], "fn_var_ln": {"gke_hook": [[76, 12], [76, 25]]}, "fn_var_occur": {"gke_hook": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHookDelete.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gke_hook": ""}, "variables_p": {"gke_hook": [["str", 0.4757647783763475], ["bool", 0.22203294166719167], ["Dict[str, Any]", 0.10901850232752855], ["dict", 0.09868247732033804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [94, 90]], "fn_var_ln": {"client_delete": [[83, 8], [83, 21]], "retry_mock": [[81, 8], [81, 18]], "timeout_mock": [[81, 20], [81, 32]]}, "fn_var_occur": {"client_delete": [["client_delete", "self", "gke_hook", "_client", "delete_cluster", "mock", "Mock"], ["client_delete", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"], ["wait_mock", "assert_called_once_with", "client_delete", "return_value", "TEST_GCP_PROJECT_ID"]], "retry_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "delete_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_delete", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"]], "timeout_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "delete_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_delete", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"]]}, "name": "test_delete_cluster", "params": {"self": "", "wait_mock": ""}, "params_descr": {"self": "", "wait_mock": ""}, "params_occur": {"self": [["client_delete", "self", "gke_hook", "_client", "delete_cluster", "mock", "Mock"], ["self", "gke_hook", "delete_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"]], "wait_mock": [["wait_mock", "assert_called_once_with", "client_delete", "return_value", "TEST_GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "wait_mock": []}, "q_name": "TestGKEHookDelete.test_delete_cluster", "ret_exprs": [], "ret_type": "", "variables": {"client_delete": "", "retry_mock": "", "timeout_mock": ""}, "variables_p": {"client_delete": [["tests.utils.PicklableMock", 0.11270899571074855], ["mode.utils.mocks.Mock", 0.1034586989895289]], "retry_mock": [], "timeout_mock": [["mock.Mock", 0.09090370737227145]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [107, 70]], "fn_var_ln": {"message": [[102, 8], [102, 15]]}, "fn_var_occur": {"message": [["self", "gke_hook", "_client", "delete_cluster", "side_effect", "NotFound", "message", "message"], ["log_mock", "info", "assert_any_call", "message"]]}, "name": "test_delete_cluster_not_found", "params": {"log_mock": "", "self": "", "wait_mock": ""}, "params_descr": {"log_mock": "", "self": "", "wait_mock": ""}, "params_occur": {"log_mock": [["log_mock", "info", "assert_any_call", "message"]], "self": [["self", "gke_hook", "_client", "delete_cluster", "side_effect", "NotFound", "message", "message"], ["self", "gke_hook", "delete_cluster", "name", "project_id", "TEST_GCP_PROJECT_ID"]], "wait_mock": [["wait_mock", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "log_mock": [], "self": [], "wait_mock": []}, "q_name": "TestGKEHookDelete.test_delete_cluster_not_found", "ret_exprs": [], "ret_type": "", "variables": {"message": ""}, "variables_p": {"message": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [121, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_cluster_error", "params": {"mock_project_id": "", "self": "", "wait_mock": ""}, "params_descr": {"mock_project_id": "", "self": "", "wait_mock": ""}, "params_occur": {"mock_project_id": [], "self": [["self", "gke_hook", "_client", "delete_cluster", "side_effect", "AirflowException"], ["self", "gke_hook", "delete_cluster", "name"]], "wait_mock": [["wait_mock", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "mock_project_id": [["mock.Mock", 0.11037595801255384]], "self": [], "wait_mock": []}, "q_name": "TestGKEHookDelete.test_delete_cluster_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGKEHookDelete", "q_name": "TestGKEHookDelete", "variables": {}, "variables_p": {}}, {"cls_lc": [[124, 0], [194, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[125, 4], [130, 43]], "fn_var_ln": {"gke_hook": [[129, 12], [129, 25]]}, "fn_var_occur": {"gke_hook": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHookCreate.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gke_hook": ""}, "variables_p": {"gke_hook": [["str", 0.4757647783763475], ["bool", 0.22203294166719167], ["Dict[str, Any]", 0.10901850232752855], ["dict", 0.09868247732033804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [151, 90]], "fn_var_ln": {"client_create": [[139, 8], [139, 21]], "mock_cluster_proto": [[134, 8], [134, 26]], "name": [[135, 8], [135, 31]], "retry_mock": [[137, 8], [137, 18]], "timeout_mock": [[137, 20], [137, 32]]}, "fn_var_occur": {"client_create": [["client_create", "self", "gke_hook", "_client", "create_cluster", "mock", "Mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "mock_cluster_proto", "retry", "retry_mock", "timeout", "timeout_mock"], ["wait_mock", "assert_called_once_with", "client_create", "return_value", "TEST_GCP_PROJECT_ID"]], "mock_cluster_proto": [["mock_cluster_proto", "Cluster"], ["mock_cluster_proto", "name", "CLUSTER_NAME"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_proto", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "mock_cluster_proto", "retry", "retry_mock", "timeout", "timeout_mock"]], "name": [["mock_cluster_proto", "name", "CLUSTER_NAME"]], "retry_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_proto", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "mock_cluster_proto", "retry", "retry_mock", "timeout", "timeout_mock"]], "timeout_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_proto", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "mock_cluster_proto", "retry", "retry_mock", "timeout", "timeout_mock"]]}, "name": "test_create_cluster_proto", "params": {"self": "", "wait_mock": ""}, "params_descr": {"self": "", "wait_mock": ""}, "params_occur": {"self": [["client_create", "self", "gke_hook", "_client", "create_cluster", "mock", "Mock"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_proto", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"]], "wait_mock": [["wait_mock", "assert_called_once_with", "client_create", "return_value", "TEST_GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "wait_mock": []}, "q_name": "TestGKEHookCreate.test_create_cluster_proto", "ret_exprs": [], "ret_type": "", "variables": {"client_create": "", "mock_cluster_proto": "", "name": "", "retry_mock": "", "timeout_mock": ""}, "variables_p": {"client_create": [["tests.utils.PicklableMock", 0.10213739051079636]], "mock_cluster_proto": [["Dict[str, Union[Any, Any]]", 0.16709510404009703], ["Dict[str, str]", 0.08443205618662498]], "name": [["str", 0.8083885768872148], ["Dict[str, Union[Any, str]]", 0.09641593598580904]], "retry_mock": [], "timeout_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[155, 4], [172, 90]], "fn_var_ln": {"client_create": [[159, 8], [159, 21]], "mock_cluster_dict": [[156, 8], [156, 25]], "proto_mock": [[160, 8], [160, 18]], "retry_mock": [[157, 8], [157, 18]], "return_value": [[160, 21], [160, 46]], "timeout_mock": [[157, 20], [157, 32]]}, "fn_var_occur": {"client_create": [["client_create", "self", "gke_hook", "_client", "create_cluster", "mock", "Mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "proto_mock", "retry", "retry_mock", "timeout", "timeout_mock"], ["wait_mock", "assert_called_once_with", "client_create", "return_value", "TEST_GCP_PROJECT_ID"]], "mock_cluster_dict": [["mock_cluster_dict", "CLUSTER_NAME"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_dict", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"]], "proto_mock": [["proto_mock", "convert_mock", "return_value", "mock", "Mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "proto_mock", "retry", "retry_mock", "timeout", "timeout_mock"]], "retry_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_dict", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "proto_mock", "retry", "retry_mock", "timeout", "timeout_mock"]], "return_value": [["proto_mock", "convert_mock", "return_value", "mock", "Mock"], ["wait_mock", "assert_called_once_with", "client_create", "return_value", "TEST_GCP_PROJECT_ID"]], "timeout_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_dict", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "proto_mock", "retry", "retry_mock", "timeout", "timeout_mock"]]}, "name": "test_create_cluster_dict", "params": {"convert_mock": "", "self": "", "wait_mock": ""}, "params_descr": {"convert_mock": "", "self": "", "wait_mock": ""}, "params_occur": {"convert_mock": [["proto_mock", "convert_mock", "return_value", "mock", "Mock"]], "self": [["client_create", "self", "gke_hook", "_client", "create_cluster", "mock", "Mock"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_dict", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"]], "wait_mock": [["wait_mock", "assert_called_once_with", "client_create", "return_value", "TEST_GCP_PROJECT_ID"]]}, "params_p": {"args": [], "convert_mock": [], "kwargs": [], "self": [], "wait_mock": [["mock.Mock", 0.09898429592630302]]}, "q_name": "TestGKEHookCreate.test_create_cluster_dict", "ret_exprs": [], "ret_type": "", "variables": {"client_create": "", "mock_cluster_dict": "", "proto_mock": "", "retry_mock": "", "return_value": "", "timeout_mock": ""}, "variables_p": {"client_create": [["tests.utils.PicklableMock", 0.10213739051079636]], "mock_cluster_dict": [["Dict[str, str]", 0.36576477047383604], ["List[Optional[Any]]", 0.1437410223129303], ["Dict[Any, str]", 0.08613256780723204], ["Mapping[str, Mapping[str, Any]]", 0.08245656182461976], ["Dict[str, Union[Any, Any, Any, Any]]", 0.07995082023628865]], "proto_mock": [["jj.mock._remote_mock.RemoteMock", 0.5233834742336654], ["tests.test_protocols.TransportMock", 0.07917823325216312]], "retry_mock": [], "return_value": [["tests.mock.zwave.MockValue", 0.18728036427766384], ["mode.utils.mocks.Mock", 0.09763023932248159]], "timeout_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[175, 4], [181, 41]], "fn_var_ln": {"mock_cluster_proto": [[177, 8], [177, 26]]}, "fn_var_occur": {"mock_cluster_proto": [["mock_cluster_proto", "None"], ["self", "gke_hook", "create_cluster", "mock_cluster_proto"]]}, "name": "test_create_cluster_error", "params": {"self": "", "wait_mock": ""}, "params_descr": {"self": "", "wait_mock": ""}, "params_occur": {"self": [["self", "gke_hook", "create_cluster", "mock_cluster_proto"]], "wait_mock": [["wait_mock", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "wait_mock": []}, "q_name": "TestGKEHookCreate.test_create_cluster_error", "ret_exprs": [], "ret_type": "", "variables": {"mock_cluster_proto": ""}, "variables_p": {"mock_cluster_proto": [["Dict[str, Dict[str, Any]]", 0.3227841719380541], ["list", 0.12314248233568162], ["Dict[str, str]", 0.1003298014032699], ["dict", 0.09900394588903255]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 4], [194, 41]], "fn_var_ln": {"message": [[189, 8], [189, 15]]}, "fn_var_occur": {"message": [["self", "gke_hook", "_client", "create_cluster", "side_effect", "AlreadyExists", "message", "message"]]}, "name": "test_create_cluster_already_exists", "params": {"log_mock": "", "self": "", "wait_mock": ""}, "params_descr": {"log_mock": "", "self": "", "wait_mock": ""}, "params_occur": {"log_mock": [], "self": [["self", "gke_hook", "_client", "create_cluster", "side_effect", "AlreadyExists", "message", "message"], ["self", "gke_hook", "create_cluster", "cluster", "project_id", "TEST_GCP_PROJECT_ID"]], "wait_mock": [["wait_mock", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "log_mock": [], "self": [], "wait_mock": []}, "q_name": "TestGKEHookCreate.test_create_cluster_already_exists", "ret_exprs": [], "ret_type": "", "variables": {"message": ""}, "variables_p": {"message": [["dict", 0.3704801147146379], ["str", 0.2071845764608632], ["raiden.utils.notifying_queue.NotifyingQueue", 0.11831727013308874], ["Optional[str]", 0.09246132456579034]]}}], "name": "TestGKEHookCreate", "q_name": "TestGKEHookCreate", "variables": {}, "variables_p": {}}, {"cls_lc": [[197, 0], [218, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[198, 4], [203, 43]], "fn_var_ln": {"gke_hook": [[202, 12], [202, 25]]}, "fn_var_occur": {"gke_hook": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHookGet.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gke_hook": ""}, "variables_p": {"gke_hook": [["str", 0.4757647783763475], ["bool", 0.22203294166719167], ["Dict[str, Any]", 0.10901850232752855], ["dict", 0.09868247732033804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[205, 4], [218, 9]], "fn_var_ln": {"client_get": [[208, 8], [208, 18]], "retry_mock": [[206, 8], [206, 18]], "timeout_mock": [[206, 20], [206, 32]]}, "fn_var_occur": {"client_get": [["client_get", "self", "gke_hook", "_client", "get_cluster", "mock", "Mock"], ["client_get", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"]], "retry_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "get_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_get", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"]], "timeout_mock": [["retry_mock", "timeout_mock", "mock", "Mock", "mock", "Mock"], ["self", "gke_hook", "get_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_get", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"]]}, "name": "test_get_cluster", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["client_get", "self", "gke_hook", "_client", "get_cluster", "mock", "Mock"], ["self", "gke_hook", "get_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHookGet.test_get_cluster", "ret_exprs": [], "ret_type": "", "variables": {"client_get": "", "retry_mock": "", "timeout_mock": ""}, "variables_p": {"client_get": [["str", 0.43512736534499263], ["Dict[str, Union[Any, Any]]", 0.1695257152494813], ["Dict[str, str]", 0.0712349858849552]], "retry_mock": [], "timeout_mock": [["Dict[str, str]", 0.0926351757971376], ["mock.Mock", 0.09218422164630627]]}}], "name": "TestGKEHookGet", "q_name": "TestGKEHookGet", "variables": {}, "variables_p": {}}, {"cls_lc": [[221, 0], [298, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[222, 4], [227, 43]], "fn_var_ln": {"gke_hook": [[226, 12], [226, 25]]}, "fn_var_occur": {"gke_hook": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "mock", "Mock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gke_hook": ""}, "variables_p": {"gke_hook": [["str", 0.4757647783763475], ["bool", 0.22203294166719167], ["Dict[str, Any]", 0.10901850232752855], ["dict", 0.09868247732033804]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [237, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_client", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO"]], "mock_get_credentials": [["mock_get_credentials", "called"], ["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO"]], "self": [["self", "gke_hook", "_client", "None"], ["self", "gke_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.2908705290313506], ["mock.MagicMock", 0.09283903227276012]], "mock_get_credentials": [], "self": []}, "q_name": "TestGKEHook.test_get_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[239, 4], [244, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_operation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "_client", "get_operation", "mock", "Mock"], ["self", "gke_hook", "get_operation", "project_id", "TEST_GCP_PROJECT_ID"], ["self", "gke_hook", "_client", "get_operation", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHook.test_get_operation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[246, 4], [251, 77]], "fn_var_ln": {"key": [[247, 8], [247, 11]], "mock_proto": [[249, 8], [249, 18]], "val": [[248, 8], [248, 11]]}, "fn_var_occur": {"key": [["self", "gke_hook", "_append_label", "mock_proto", "key", "val"], ["mock_proto", "resource_labels", "update", "assert_called_once_with", "key", "val"]], "mock_proto": [["mock_proto", "mock", "Mock"], ["self", "gke_hook", "_append_label", "mock_proto", "key", "val"], ["mock_proto", "resource_labels", "update", "assert_called_once_with", "key", "val"]], "val": [["self", "gke_hook", "_append_label", "mock_proto", "key", "val"], ["mock_proto", "resource_labels", "update", "assert_called_once_with", "key", "val"]]}, "name": "test_append_label", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "_append_label", "mock_proto", "key", "val"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHook.test_append_label", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "mock_proto": "", "val": ""}, "variables_p": {"key": [["str", 0.8411820740619751], ["int", 0.1588179259380248]], "mock_proto": [["homeassistancomponents.withings.common.ConfigEntryWithingsApi", 0.08330916616451749], ["mock.Mock", 0.08214525745199018], ["mock.MagicMock", 0.076336909654093]], "val": [["str", 0.3366277836020592], ["Dict[str, str]", 0.17843497407665893], ["int", 0.1060029428930688], ["IO[bytes]", 0.09836069078547029], ["list", 0.09588484072377362], ["Dict[str, Union[Any, Any]]", 0.09118382969517799]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [258, 89]], "fn_var_ln": {"key": [[254, 8], [254, 11]], "mock_proto": [[256, 8], [256, 18]], "val": [[255, 8], [255, 11]]}, "fn_var_occur": {"key": [["self", "gke_hook", "_append_label", "mock_proto", "key", "val"], ["mock_proto", "resource_labels", "update", "assert_called_once_with", "key"]], "mock_proto": [["mock_proto", "mock", "Mock"], ["self", "gke_hook", "_append_label", "mock_proto", "key", "val"], ["mock_proto", "resource_labels", "update", "assert_called_once_with", "key"]], "val": [["self", "gke_hook", "_append_label", "mock_proto", "key", "val"]]}, "name": "test_append_label_replace", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gke_hook", "_append_label", "mock_proto", "key", "val"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEHook.test_append_label_replace", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "mock_proto": "", "val": ""}, "variables_p": {"key": [["str", 0.7494139523257192], ["Dict[int, Any]", 0.0885698824429288], ["Tuple[str, str, str]", 0.08452020712952293], ["int", 0.0774959581018291]], "mock_proto": [["str", 0.09129810319799421]], "val": [["dict", 0.28882822142619224], ["str", 0.1914412394862003], ["Dict[str, str]", 0.11498039261333542], ["Set[str]", 0.11292447514027397], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.1020228348048485], ["DefaultDict[Any, List[Any]]", 0.09718036210063115], ["List[str]", 0.09262247442851837]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[261, 4], [267, 40]], "fn_var_ln": {"mock_op": [[264, 8], [264, 15]], "status": [[265, 8], [265, 22]]}, "fn_var_occur": {"mock_op": [["mock_op", "mock", "Mock"], ["mock_op", "status", "Operation", "Status", "DONE"], ["self", "gke_hook", "wait_for_operation", "mock_op"]], "status": [["mock_op", "status", "Operation", "Status", "DONE"]]}, "name": "test_wait_for_response_done", "params": {"self": "", "time_mock": ""}, "params_descr": {"self": "", "time_mock": ""}, "params_occur": {"self": [["self", "gke_hook", "wait_for_operation", "mock_op"]], "time_mock": [["time_mock", "call_count"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "time_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.3939173916202287], ["mock.Mock", 0.08580665414374786]]}, "q_name": "TestGKEHook.test_wait_for_response_done", "ret_exprs": [], "ret_type": "", "variables": {"mock_op": "", "status": ""}, "variables_p": {"mock_op": [["str", 0.31032205797152435]], "status": [["int", 0.29748816657108007], ["str", 0.2801978403415604], ["Callable[[], str]", 0.12735882043929284], ["Dict[str, str]", 0.10408261499568493], ["List[str]", 0.10266910111192784], ["Pattern[str]", 0.0882034565404538]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[270, 4], [279, 44]], "fn_var_ln": {"mock_op": [[274, 8], [274, 15]], "status": [[275, 8], [275, 22]]}, "fn_var_occur": {"mock_op": [["mock_op", "mock", "Mock"], ["mock_op", "status", "Operation", "Status", "ABORTING"], ["self", "gke_hook", "wait_for_operation", "mock_op"]], "status": [["mock_op", "status", "Operation", "Status", "ABORTING"]]}, "name": "test_wait_for_response_exception", "params": {"self": "", "time_mock": ""}, "params_descr": {"self": "", "time_mock": ""}, "params_occur": {"self": [["self", "gke_hook", "wait_for_operation", "mock_op"]], "time_mock": [["time_mock", "call_count"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "time_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.469800398694116]]}, "q_name": "TestGKEHook.test_wait_for_response_exception", "ret_exprs": [], "ret_type": "", "variables": {"mock_op": "", "status": ""}, "variables_p": {"mock_op": [["str", 0.2792549325752499]], "status": [["int", 0.3787973228705891], ["List[str]", 0.2192443043461879], ["set", 0.12342576462318854], ["str", 0.10822840808484663], ["Pattern[Any]", 0.08542500862901958]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[283, 4], [298, 45]], "fn_var_ln": {"done_op": [[286, 20], [286, 27]], "pending_op": [[286, 29], [286, 39]], "running_op": [[286, 8], [286, 18]], "side_effect": [[292, 8], [292, 34]], "status": [[289, 8], [289, 25]]}, "fn_var_occur": {"done_op": [["running_op", "done_op", "pending_op", "mock", "Mock", "mock", "Mock", "mock", "Mock"], ["done_op", "status", "Operation", "Status", "DONE"], ["operation_mock", "side_effect", "pending_op", "done_op"]], "pending_op": [["running_op", "done_op", "pending_op", "mock", "Mock", "mock", "Mock", "mock", "Mock"], ["pending_op", "status", "Operation", "Status", "PENDING"], ["operation_mock", "side_effect", "pending_op", "done_op"], ["operation_mock", "assert_any_call", "pending_op", "name", "project_id", "TEST_GCP_PROJECT_ID"]], "running_op": [["running_op", "done_op", "pending_op", "mock", "Mock", "mock", "Mock", "mock", "Mock"], ["running_op", "status", "Operation", "Status", "RUNNING"], ["self", "gke_hook", "wait_for_operation", "running_op", "project_id", "TEST_GCP_PROJECT_ID"], ["operation_mock", "assert_any_call", "running_op", "name", "project_id", "TEST_GCP_PROJECT_ID"]], "side_effect": [["operation_mock", "side_effect", "pending_op", "done_op"]], "status": [["running_op", "status", "Operation", "Status", "RUNNING"], ["done_op", "status", "Operation", "Status", "DONE"], ["pending_op", "status", "Operation", "Status", "PENDING"]]}, "name": "test_wait_for_response_running", "params": {"operation_mock": "", "self": "", "time_mock": ""}, "params_descr": {"operation_mock": "", "self": "", "time_mock": ""}, "params_occur": {"operation_mock": [["operation_mock", "side_effect", "pending_op", "done_op"], ["operation_mock", "assert_any_call", "running_op", "name", "project_id", "TEST_GCP_PROJECT_ID"], ["operation_mock", "assert_any_call", "pending_op", "name", "project_id", "TEST_GCP_PROJECT_ID"], ["operation_mock", "call_count"]], "self": [["self", "gke_hook", "wait_for_operation", "running_op", "project_id", "TEST_GCP_PROJECT_ID"]], "time_mock": [["time_mock", "call_count"]]}, "params_p": {"args": [], "kwargs": [], "operation_mock": [], "self": [], "time_mock": []}, "q_name": "TestGKEHook.test_wait_for_response_running", "ret_exprs": [], "ret_type": "", "variables": {"done_op": "", "pending_op": "", "running_op": "", "side_effect": "", "status": ""}, "variables_p": {"done_op": [["mock.Mock", 0.09979892905407163], ["mock.MagicMock", 0.09175665230784792]], "pending_op": [["int", 0.08972003042284186]], "running_op": [["mock.MagicMock", 0.20931248795334562]], "side_effect": [["Dict[int, Dict[str, Any]]", 0.22534638571475643], ["Tuple[Literal, Literal, Literal]", 0.20935800768538151], ["str", 0.19752931247054933], ["List[str]", 0.16641002232610663], ["property", 0.07148526777121711]], "status": [["str", 0.4101389744916149], ["tools.bots.cloud.status.Status", 0.12292782358983864], ["List[Dict[str, str]]", 0.08220613433734941]]}}], "name": "TestGKEHook", "q_name": "TestGKEHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[301, 0], [364, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[303, 4], [307, 33]], "fn_var_ln": {"f": [[304, 8], [304, 9]], "return_value": [[307, 8], [307, 29]]}, "fn_var_occur": {"f": [["f", "Future"], ["f", "set_result", "result"], ["mock_obj", "return_value", "f"]], "return_value": [["mock_obj", "return_value", "f"]]}, "name": "make_mock_awaitable", "params": {"mock_obj": "", "result": ""}, "params_descr": {"mock_obj": "", "result": ""}, "params_occur": {"mock_obj": [["mock_obj", "return_value", "f"]], "result": [["f", "set_result", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_obj": [["str", 0.1785190837997982], ["List[str]", 0.134140921902016], ["bool", 0.09064202763881726], ["Optional[str]", 0.08549682603378439]], "result": [["str", 0.5060511103697456], ["bytes", 0.09913922996488574], ["Optional[Any]", 0.0989125822417961], ["Optional[str]", 0.09239571729534711], ["app.utils.types.JSON", 0.09153330797634086]], "self": []}, "q_name": "TestGKEPodAsyncHook.make_mock_awaitable", "ret_exprs": [], "ret_type": "", "variables": {"f": "", "return_value": ""}, "variables_p": {"f": [["str", 0.15525262593939318], ["Dict[str, Any]", 0.07466232826202747], ["Tuple[Literal, Literal]", 0.056815747060088774]], "return_value": [["str", 0.2380665226727361], ["list", 0.106850295817011], ["Optional[bytes]", 0.10029803803103673], ["int", 0.09092283821935038], ["List[Dict[str, Any]]", 0.07993436951634508], ["Dict[str, Any]", 0.07534653923840136]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[310, 4], [314, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "async_hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGKEPodAsyncHook.async_hook", "ret_exprs": ["return GKEPodAsyncHook( cluster_url=CLUSTER_URL, ssl_ca_cert=SSL_CA_CERT,)"], "ret_type": "", "ret_type_p": [["trezor.utils.Writer", 0.1759141164186516], ["str", 0.14868903887370716], ["Dict[str, Any]", 0.07594748128756704]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[320, 4], [329, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_pod", "params": {"async_hook": "", "get_conn_mock": "", "read_namespace_pod_mock": "", "self": ""}, "params_descr": {"async_hook": "", "get_conn_mock": "", "read_namespace_pod_mock": "", "self": ""}, "params_occur": {"async_hook": [["async_hook", "get_pod", "name", "POD_NAME", "namespace", "POD_NAMESPACE"]], "get_conn_mock": [["get_conn_mock", "assert_called_once"]], "read_namespace_pod_mock": [["self", "make_mock_awaitable", "read_namespace_pod_mock"], ["read_namespace_pod_mock", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE"]], "self": [["self", "make_mock_awaitable", "read_namespace_pod_mock"]]}, "params_p": {"args": [], "async_hook": [["str", 0.13279262487169988], ["bool", 0.08334429077557388]], "get_conn_mock": [], "kwargs": [], "read_namespace_pod_mock": [], "self": []}, "q_name": "TestGKEPodAsyncHook.test_get_pod", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[335, 4], [345, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_pod", "params": {"async_hook": "", "delete_namespaced_pod": "", "get_conn_mock": "", "self": ""}, "params_descr": {"async_hook": "", "delete_namespaced_pod": "", "get_conn_mock": "", "self": ""}, "params_occur": {"async_hook": [["async_hook", "delete_pod", "name", "POD_NAME", "namespace", "POD_NAMESPACE"]], "delete_namespaced_pod": [["self", "make_mock_awaitable", "delete_namespaced_pod"], ["delete_namespaced_pod", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE", "body", "kubernetes", "client", "V1DeleteOptions"]], "get_conn_mock": [["get_conn_mock", "assert_called_once"]], "self": [["self", "make_mock_awaitable", "delete_namespaced_pod"]]}, "params_p": {"args": [], "async_hook": [["bool", 0.4387671524494564], ["Dict[str, Any]", 0.09045974564407143]], "delete_namespaced_pod": [["tests.setup.SetupTest", 0.474145325118206], ["raiden.utils.List[raiden.raiden_service.RaidenService]", 0.1886002753830372]], "get_conn_mock": [], "kwargs": [], "self": []}, "q_name": "TestGKEPodAsyncHook.test_delete_pod", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[351, 4], [364, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_read_logs", "params": {"async_hook": "", "caplog": "", "get_conn_mock": "", "read_namespaced_pod_log": "", "self": ""}, "params_descr": {"async_hook": "", "caplog": "", "get_conn_mock": "", "read_namespaced_pod_log": "", "self": ""}, "params_occur": {"async_hook": [["async_hook", "read_logs", "name", "POD_NAME", "namespace", "POD_NAMESPACE"]], "caplog": [["caplog", "text"], ["caplog", "text"]], "get_conn_mock": [["get_conn_mock", "assert_called_once"]], "read_namespaced_pod_log": [["self", "make_mock_awaitable", "read_namespaced_pod_log", "result"], ["read_namespaced_pod_log", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE", "follow", "False", "timestamps", "True"]], "self": [["self", "make_mock_awaitable", "read_namespaced_pod_log", "result"]]}, "params_p": {"args": [], "async_hook": [["str", 0.17082805194546108]], "caplog": [], "get_conn_mock": [], "kwargs": [], "read_namespaced_pod_log": [], "self": []}, "q_name": "TestGKEPodAsyncHook.test_read_logs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGKEPodAsyncHook", "q_name": "TestGKEPodAsyncHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[385, 0], [399, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[388, 4], [399, 9]], "fn_var_ln": {"operation_path": [[396, 8], [396, 22]], "return_value": [[389, 8], [389, 36]]}, "fn_var_occur": {"operation_path": [["operation_path", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "OPERATION_NAME"], ["mock_async_gke_cluster_client", "get_operation", "assert_called_once_with", "name", "operation_path"]], "return_value": [["mock_get_client", "return_value", "mock_async_gke_cluster_client"]]}, "name": "test_get_operation", "params": {"async_gke_hook": "", "mock_async_gke_cluster_client": "", "mock_get_client": "", "self": ""}, "params_descr": {"async_gke_hook": "", "mock_async_gke_cluster_client": "", "mock_get_client": "", "self": ""}, "params_occur": {"async_gke_hook": [["async_gke_hook", "get_operation", "operation_name", "OPERATION_NAME", "project_id", "TEST_GCP_PROJECT_ID"]], "mock_async_gke_cluster_client": [["mock_get_client", "return_value", "mock_async_gke_cluster_client"], ["mock_async_gke_cluster_client", "get_operation", "assert_called_once_with", "name", "operation_path"]], "mock_get_client": [["mock_get_client", "return_value", "mock_async_gke_cluster_client"]], "self": []}, "params_p": {"args": [], "async_gke_hook": [], "kwargs": [], "mock_async_gke_cluster_client": [], "mock_get_client": [], "self": []}, "q_name": "TestGKEAsyncHook.test_get_operation", "ret_exprs": [], "ret_type": "", "variables": {"operation_path": "", "return_value": ""}, "variables_p": {"operation_path": [["str", 0.68707537031026], ["list", 0.08991119739791888]], "return_value": [["str", 0.23164541040345515], ["list", 0.12726754856699918], ["Optional[bytes]", 0.11124929092566548], ["Dict[Any, Union[int, str]]", 0.08983065185234569], ["tests.utils.MockCoroutine", 0.08675836260008181], ["List[Tuple[str, str]]", 0.07864065685995775]]}}], "name": "TestGKEAsyncHook", "q_name": "TestGKEAsyncHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[368, 0], [373, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "async_gke_hook", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "async_gke_hook", "ret_exprs": ["return GKEAsyncHook( gcp_conn_id=GCP_CONN_ID, location=GKE_ZONE, impersonation_chain=IMPERSONATE_CHAIN,)"], "ret_type": "", "ret_type_p": [["str", 0.18610433295779552], ["raiden.utils.TokenAmount", 0.09349334243516165]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[377, 0], [382, 17]], "fn_var_ln": {"client": [[380, 4], [380, 10]], "f": [[378, 4], [378, 5]]}, "fn_var_occur": {"client": [["client", "mock", "MagicMock", "spec", "ClusterManagerAsyncClient"], ["client", "get_operation", "return_value", "f"]], "f": [["f", "Future"], ["f", "set_result", "None"], ["client", "get_operation", "return_value", "f"]]}, "name": "mock_async_gke_cluster_client", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_async_gke_cluster_client", "ret_exprs": ["return client"], "ret_type": "", "ret_type_p": [["Callable", 0.08864860954186066], ["app.utils.models.ModelManager", 0.0868194426003007]], "variables": {"client": "", "f": ""}, "variables_p": {"client": [["mock.Mock", 0.11784671698245582]], "f": [["str", 0.21493007659788582], ["dict", 0.1787262513726468], ["List[int]", 0.1545522076619204], ["Set[str]", 0.10807256632377656], ["Generator[str, None, None]", 0.08793375535942413], ["List[str]", 0.08612576135290669], ["Dict[str, str]", 0.08418902635630765]]}}], "imports": ["__future__", "annotations", "asyncio", "Future", "unittest", "mock", "kubernetes.client", "pytest", "google", "cloud", "container_v1", "ClusterManagerAsyncClient", "google", "cloud", "container_v1", "types", "Cluster", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "kubernetes_engine", "GKEAsyncHook", "GKEHook", "GKEPodAsyncHook", "airflow", "providers", "google", "common", "consts", "CLIENT_INFO", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id", "google", "api_core", "exceptions", "NotFound", "google", "api_core", "exceptions", "AlreadyExists", "google", "cloud", "container_v1", "types", "Operation", "google", "cloud", "container_v1", "types", "Operation", "google", "cloud", "exceptions", "GoogleCloudError", "google", "cloud", "container_v1", "types", "Operation"], "mod_var_ln": {"ASYNC_HOOK_STRING": [[47, 0], [47, 17]], "BASE_STRING": [[41, 0], [41, 11]], "CLUSTER_NAME": [[38, 0], [38, 12]], "CLUSTER_URL": [[43, 0], [43, 11]], "GCP_CONN_ID": [[48, 0], [48, 11]], "GKE_STRING": [[42, 0], [42, 10]], "GKE_ZONE": [[40, 0], [40, 8]], "IMPERSONATE_CHAIN": [[49, 0], [49, 17]], "OPERATION_NAME": [[50, 0], [50, 14]], "POD_NAME": [[45, 0], [45, 8]], "POD_NAMESPACE": [[46, 0], [46, 13]], "SSL_CA_CERT": [[44, 0], [44, 11]], "TASK_ID": [[37, 0], [37, 7]], "TEST_GCP_PROJECT_ID": [[39, 0], [39, 19]]}, "mod_var_occur": {"ASYNC_HOOK_STRING": [], "BASE_STRING": [["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"]], "CLUSTER_NAME": [["self", "gke_hook", "delete_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_delete", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"], ["mock_cluster_proto", "name", "CLUSTER_NAME"], ["mock_cluster_dict", "CLUSTER_NAME"], ["self", "gke_hook", "get_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_get", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"]], "CLUSTER_URL": [["GKEPodAsyncHook", "cluster_url", "CLUSTER_URL", "ssl_ca_cert", "SSL_CA_CERT"]], "GCP_CONN_ID": [["GKEAsyncHook", "gcp_conn_id", "GCP_CONN_ID", "location", "GKE_ZONE", "impersonation_chain", "IMPERSONATE_CHAIN"]], "GKE_STRING": [["ASYNC_HOOK_STRING", "GKE_STRING", "format"]], "GKE_ZONE": [["self", "gke_hook", "GKEHook", "location", "GKE_ZONE"], ["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["client_delete", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"], ["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "mock_cluster_proto", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "proto_mock", "retry", "retry_mock", "timeout", "timeout_mock"], ["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["client_get", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"], ["self", "gke_hook", "GKEHook", "gcp_conn_id", "location", "GKE_ZONE"], ["self", "gke_hook", "_client", "get_operation", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE"], ["GKEAsyncHook", "gcp_conn_id", "GCP_CONN_ID", "location", "GKE_ZONE", "impersonation_chain", "IMPERSONATE_CHAIN"], ["operation_path", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "OPERATION_NAME"]], "IMPERSONATE_CHAIN": [["GKEAsyncHook", "gcp_conn_id", "GCP_CONN_ID", "location", "GKE_ZONE", "impersonation_chain", "IMPERSONATE_CHAIN"]], "OPERATION_NAME": [["async_gke_hook", "get_operation", "operation_name", "OPERATION_NAME", "project_id", "TEST_GCP_PROJECT_ID"], ["operation_path", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "OPERATION_NAME"]], "POD_NAME": [["async_hook", "get_pod", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["read_namespace_pod_mock", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["async_hook", "delete_pod", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["delete_namespaced_pod", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE", "body", "kubernetes", "client", "V1DeleteOptions"], ["async_hook", "read_logs", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["read_namespaced_pod_log", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE", "follow", "False", "timestamps", "True"]], "POD_NAMESPACE": [["async_hook", "get_pod", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["read_namespace_pod_mock", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["async_hook", "delete_pod", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["delete_namespaced_pod", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE", "body", "kubernetes", "client", "V1DeleteOptions"], ["async_hook", "read_logs", "name", "POD_NAME", "namespace", "POD_NAMESPACE"], ["read_namespaced_pod_log", "assert_called_with", "name", "POD_NAME", "namespace", "POD_NAMESPACE", "follow", "False", "timestamps", "True"]], "SSL_CA_CERT": [["GKEPodAsyncHook", "cluster_url", "CLUSTER_URL", "ssl_ca_cert", "SSL_CA_CERT"]], "TASK_ID": [], "TEST_GCP_PROJECT_ID": [["self", "gke_hook", "delete_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_delete", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"], ["wait_mock", "assert_called_once_with", "client_delete", "return_value", "TEST_GCP_PROJECT_ID"], ["self", "gke_hook", "delete_cluster", "name", "project_id", "TEST_GCP_PROJECT_ID"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_proto", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "mock_cluster_proto", "retry", "retry_mock", "timeout", "timeout_mock"], ["wait_mock", "assert_called_once_with", "client_create", "return_value", "TEST_GCP_PROJECT_ID"], ["self", "gke_hook", "create_cluster", "cluster", "mock_cluster_dict", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_create", "assert_called_once_with", "parent", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "cluster", "proto_mock", "retry", "retry_mock", "timeout", "timeout_mock"], ["wait_mock", "assert_called_once_with", "client_create", "return_value", "TEST_GCP_PROJECT_ID"], ["self", "gke_hook", "create_cluster", "cluster", "project_id", "TEST_GCP_PROJECT_ID"], ["self", "gke_hook", "get_cluster", "name", "CLUSTER_NAME", "project_id", "TEST_GCP_PROJECT_ID", "retry", "retry_mock", "timeout", "timeout_mock"], ["client_get", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "CLUSTER_NAME", "retry", "retry_mock", "timeout", "timeout_mock"], ["self", "gke_hook", "get_operation", "project_id", "TEST_GCP_PROJECT_ID"], ["self", "gke_hook", "_client", "get_operation", "assert_called_once_with", "name", "TEST_GCP_PROJECT_ID", "GKE_ZONE"], ["self", "gke_hook", "wait_for_operation", "running_op", "project_id", "TEST_GCP_PROJECT_ID"], ["operation_mock", "assert_any_call", "running_op", "name", "project_id", "TEST_GCP_PROJECT_ID"], ["operation_mock", "assert_any_call", "pending_op", "name", "project_id", "TEST_GCP_PROJECT_ID"], ["async_gke_hook", "get_operation", "operation_name", "OPERATION_NAME", "project_id", "TEST_GCP_PROJECT_ID"], ["operation_path", "TEST_GCP_PROJECT_ID", "GKE_ZONE", "OPERATION_NAME"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 125}, "session_id": "5OZrbDy1edweRbh25TdWakRdBnTh6POoH_ZPAM3DqDQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"ASYNC_HOOK_STRING": "", "BASE_STRING": "", "CLUSTER_NAME": "", "CLUSTER_URL": "", "GCP_CONN_ID": "", "GKE_STRING": "", "GKE_ZONE": "", "IMPERSONATE_CHAIN": "", "OPERATION_NAME": "", "POD_NAME": "", "POD_NAMESPACE": "", "SSL_CA_CERT": "", "TASK_ID": "", "TEST_GCP_PROJECT_ID": ""}, "variables_p": {"ASYNC_HOOK_STRING": [["int", 0.6], ["str", 0.30000000000000004], ["Dict[str, int]", 0.1]], "BASE_STRING": [["list", 0.2106209150826826], ["str", 0.18276628639361064], ["List[Tuple[str, str]]", 0.10758986291579262], ["List[dict]", 0.09659664232339189], ["List[str]", 0.08795139996388007]], "CLUSTER_NAME": [["str", 0.7866942218577662], ["Dict[str, Union[float, str]]", 0.109709901258074], ["Dict[Any, Dict[str, Any]]", 0.10359587688415973]], "CLUSTER_URL": [["str", 0.9094760099249564], ["Dict[str, str]", 0.0905239900750436]], "GCP_CONN_ID": [["int", 0.6438678480392535], ["list", 0.09894561176311908]], "GKE_STRING": [["str", 0.9999999999854895], ["Tuple[Type[str], Type[bytes]]", 1.4510546376943805e-11]], "GKE_ZONE": [["List[str]", 0.5145848522542051], ["int", 0.23145334195322645], ["str", 0.1627197858690812], ["raiden.utils.Any", 0.09124201992348714]], "IMPERSONATE_CHAIN": [["int", 0.3571942519539135], ["asyncio.locks.Lock", 0.12124456135589119], ["list", 0.11686994854272281], ["str", 0.10206408946281308], ["Dict[str, Any]", 0.09974329048057816], ["dict", 0.0886048743931566]], "OPERATION_NAME": [["str", 0.5268094024764608], ["Optional[str]", 0.4731905975235393]], "POD_NAME": [["str", 0.9071013328262595], ["Any[Any]", 0.09289866717374065]], "POD_NAMESPACE": [["str", 0.29891695446460725], ["Optional[str]", 0.28342156968122], ["Dict[str, Union[Any, Any, Any]]", 0.11986352698020937], ["int", 0.10288974317228645], ["Dict[str, List[str]]", 0.10128586005380398]], "SSL_CA_CERT": [["str", 0.703319045794438], ["list", 0.12383899106783669], ["List[str]", 0.08387034265141995]], "TASK_ID": [["str", 0.4], ["medtagger.types.TaskID", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "TEST_GCP_PROJECT_ID": [["str", 0.9124178371523192]]}}}