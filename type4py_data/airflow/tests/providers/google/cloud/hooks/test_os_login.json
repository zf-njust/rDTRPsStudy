{"error": null, "response": {"classes": [{"cls_lc": [[47, 0], [82, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 4], [50, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSLoginHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [57, 55]], "fn_var_ln": {"hook": [[57, 12], [57, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSLoginHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [82, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_import_ssh_public_key", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.39490140435973164]], "self": []}, "q_name": "TestOSLoginHook.test_import_ssh_public_key", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestOSLoginHook", "q_name": "TestOSLoginHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[85, 0], [116, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [91, 55]], "fn_var_ln": {"hook": [[91, 12], [91, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSLoginHookWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [116, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_import_ssh_public_key", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.39490140435973164]], "self": []}, "q_name": "TestOSLoginHookWithDefaultProjectIdHook.test_import_ssh_public_key", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestOSLoginHookWithDefaultProjectIdHook", "q_name": "TestOSLoginHookWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[119, 0], [146, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [125, 55]], "fn_var_ln": {"hook": [[125, 12], [125, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSLoginHookWithoutDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[132, 4], [146, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_import_ssh_public_key", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.39490140435973164]], "self": []}, "q_name": "TestOSLoginHookWithoutDefaultProjectIdHook.test_import_ssh_public_key", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestOSLoginHookWithoutDefaultProjectIdHook", "q_name": "TestOSLoginHookWithoutDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[155, 0], [177, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[156, 4], [161, 55]], "fn_var_ln": {"hook": [[161, 12], [161, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "OSLoginHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOSLoginHookMissingProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[168, 4], [177, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_import_ssh_public_key", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.39490140435973164]], "mock_get_creds_and_project_id": [["mock.Mock", 0.39490140435973164]], "self": []}, "q_name": "TestOSLoginHookMissingProjectIdHook.test_import_ssh_public_key", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestOSLoginHookMissingProjectIdHook", "q_name": "TestOSLoginHookMissingProjectIdHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "re", "typing", "Sequence", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "_MethodDefault", "google", "api_core", "retry", "Retry", "airflow", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "os_login", "OSLoginHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"TEST_BODY": [[40, 0], [40, 9]], "TEST_CREDENTIALS": [[39, 0], [39, 16]], "TEST_GCP_CONN_ID": [[34, 0], [34, 16]], "TEST_MESSAGE": [[149, 0], [149, 12]], "TEST_METADATA": [[43, 0], [43, 13]], "TEST_PARENT": [[44, 0], [44, 11]], "TEST_PROJECT_ID": [[35, 0], [35, 15]], "TEST_PROJECT_ID_2": [[36, 0], [36, 17]], "TEST_RETRY": [[41, 0], [41, 10]], "TEST_TIMEOUT": [[42, 0], [42, 12]], "TEST_USER": [[38, 0], [38, 9]]}, "mod_var_occur": {"TEST_BODY": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_CREDENTIALS": [], "TEST_GCP_CONN_ID": [], "TEST_MESSAGE": [["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"]], "TEST_METADATA": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PARENT": [["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PROJECT_ID": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PROJECT_ID_2": [["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_RETRY": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TIMEOUT": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "import_ssh_public_key", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_USER": [["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "import_ssh_public_key", "user", "TEST_USER", "ssh_public_key", "TEST_BODY", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "no_types_annot": {"D": 13, "I": 0, "U": 19}, "session_id": "BCD7xv24beTSvJ-PgKVARH9wFJvr5vnA9WRHs5OLhi4", "set": null, "tc": [false, null], "type_annot_cove": 0.41, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_BODY": "builtins.dict", "TEST_CREDENTIALS": "", "TEST_GCP_CONN_ID": "builtins.str", "TEST_MESSAGE": "", "TEST_METADATA": "typing.Sequence[builtins.tuple[builtins.str, builtins.str]]", "TEST_PARENT": "builtins.str", "TEST_PROJECT_ID": "builtins.str", "TEST_PROJECT_ID_2": "builtins.str", "TEST_RETRY": "Retry | _MethodDefault", "TEST_TIMEOUT": "builtins.float", "TEST_USER": "builtins.str"}, "variables_p": {"TEST_BODY": [["str", 0.7068500334943005], ["IO[bytes]", 0.099592535142732], ["bytes", 0.09832225759762046], ["dict", 0.09523517376534692]], "TEST_CREDENTIALS": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_GCP_CONN_ID": [["str", 0.6916622581692238], ["Optional[str]", 0.10947808602664154], ["bool", 0.08516566607705627]], "TEST_MESSAGE": [["str", 0.3340920707595084], ["Dict[str, Union[Any, Any]]", 0.2768530569439035], ["Dict[str, str]", 0.11356577982430209], ["List[str]", 0.0924372045009307]], "TEST_METADATA": [["Dict[str, Dict[str, Any]]", 0.21469876755028056], ["str", 0.12241094787511929], ["int", 0.11829202556637405], ["cmk.gui.utils.html.HTML", 0.09771652145509721], ["list", 0.08716006221320016]], "TEST_PARENT": [["str", 0.6602655409741248], ["Dict[str, List[Any]]", 0.08791035729536635], ["List[Dict[str, str]]", 0.08464181819326336]], "TEST_PROJECT_ID": [["str", 0.7063387688106337], ["Optional[str]", 0.206576450120087], ["raiden.utils.BlockIdentifier", 0.08708478106927936]], "TEST_PROJECT_ID_2": [["str", 0.5924275528227178], ["List[str]", 0.16752363211790502], ["List[bytes]", 0.08826289120876532]], "TEST_RETRY": [["Dict[str, Dict[str, Any]]", 0.21469876755028056], ["str", 0.12241094787511929], ["int", 0.11829202556637405], ["cmk.gui.utils.html.HTML", 0.09771652145509721], ["list", 0.08716006221320016]], "TEST_TIMEOUT": [["int", 0.314234465281643], ["bytes", 0.2083923610856536], ["str", 0.17473466451352915], ["List[List[Any]]", 0.10534385770892063], ["myia.utils.env.SymbolicKeyInstance", 0.08809360195195111]], "TEST_USER": [["str", 0.600593906487296], ["set", 0.11204156659505998], ["Type[str]", 0.08889768393076435]]}}}