{"error": null, "response": {"classes": [{"cls_lc": [[129, 8], [132, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[131, 12], [132, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_fn", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["mock_instance", "args", "kwargs"]], "kwargs": [["mock_instance", "args", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_support_project_id_parameter.<locals>.FixtureFallback.test_fn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "FixtureFallback", "q_name": "TestFallbackToVariables.test_support_project_id_parameter.<locals>.FixtureFallback", "variables": {}, "variables_p": {}}, {"cls_lc": [[141, 8], [144, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[143, 12], [144, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_fn", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["mock_instance", "args", "kwargs"]], "kwargs": [["mock_instance", "args", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_support_project_id_from_variable_parameter.<locals>.FixtureFallback.test_fn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "FixtureFallback", "q_name": "TestFallbackToVariables.test_support_project_id_from_variable_parameter.<locals>.FixtureFallback", "variables": {}, "variables_p": {}}, {"cls_lc": [[153, 8], [156, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[155, 12], [156, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_fn", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["mock_instance", "args", "kwargs"]], "kwargs": [["mock_instance", "args", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_raise_exception_on_conflict.<locals>.FixtureFallback.test_fn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "FixtureFallback", "q_name": "TestFallbackToVariables.test_raise_exception_on_conflict.<locals>.FixtureFallback", "variables": {}, "variables_p": {}}, {"cls_lc": [[168, 8], [171, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 12], [171, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_fn", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["mock_instance", "args", "kwargs"]], "kwargs": [["mock_instance", "args", "kwargs"]], "self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_raise_exception_on_positional_argument.<locals>.FixtureFallback.test_fn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "FixtureFallback", "q_name": "TestFallbackToVariables.test_raise_exception_on_positional_argument.<locals>.FixtureFallback", "variables": {}, "variables_p": {}}, {"cls_lc": [[125, 0], [176, 67]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[126, 4], [136, 64]], "fn_var_ln": {"mock_instance": [[127, 8], [127, 21]]}, "fn_var_occur": {"mock_instance": [["mock_instance", "assert_called_once_with", "project_id"]]}, "name": "test_support_project_id_parameter", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_support_project_id_parameter", "ret_exprs": [], "ret_type": "", "variables": {"mock_instance": ""}, "variables_p": {"mock_instance": [["int", 0.22042149486296714], ["str", 0.19985562354012726], ["unittesmock.MagicMock", 0.13811429681527057], ["Dict[str, Dict[Any, Any]]", 0.08418201807493296], ["Dict[str, Any]", 0.08239837866751336], ["Dict[str, Dict[str, Any]]", 0.07806878806603562]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [148, 78]], "fn_var_ln": {"mock_instance": [[139, 8], [139, 21]]}, "fn_var_occur": {"mock_instance": [["mock_instance", "assert_called_once_with", "project_id", "variables"]]}, "name": "test_support_project_id_from_variable_parameter", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_support_project_id_from_variable_parameter", "ret_exprs": [], "ret_type": "", "variables": {"mock_instance": ""}, "variables_p": {"mock_instance": [["str", 0.5881249276160241], ["unittesmock.MagicMock", 0.13445108407723755], ["int", 0.10702942676899996], ["Dict[str, Union[Any, Any]]", 0.08853787730488821]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[150, 4], [163, 88]], "fn_var_ln": {"mock_instance": [[151, 8], [151, 21]]}, "fn_var_occur": {"mock_instance": []}, "name": "test_raise_exception_on_conflict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_raise_exception_on_conflict", "ret_exprs": [], "ret_type": "", "variables": {"mock_instance": ""}, "variables_p": {"mock_instance": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [176, 67]], "fn_var_ln": {"mock_instance": [[166, 8], [166, 21]]}, "fn_var_occur": {"mock_instance": []}, "name": "test_raise_exception_on_positional_argument", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToVariables.test_raise_exception_on_positional_argument", "ret_exprs": [], "ret_type": "", "variables": {"mock_instance": ""}, "variables_p": {"mock_instance": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]]}}], "name": "TestFallbackToVariables", "q_name": "TestFallbackToVariables", "variables": {}, "variables_p": {}}, {"cls_lc": [[179, 0], [819, 54]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[180, 4], [182, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [186, 50]], "fn_var_ln": {"dataflow_hook": [[185, 8], [185, 26]]}, "fn_var_occur": {"dataflow_hook": [["self", "dataflow_hook", "DataflowHook", "gcp_conn_id"], ["self", "dataflow_hook", "beam_hook", "MagicMock"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dataflow_hook", "DataflowHook", "gcp_conn_id"], ["self", "dataflow_hook", "beam_hook", "MagicMock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_hook": ""}, "variables_p": {"dataflow_hook": [["int", 0.3115630084001155], ["dict", 0.1250218266085996], ["Dict[str, str]", 0.10988650522614983], ["str", 0.09727952888239325], ["DefaultDict[Any, List[Any]]", 0.0883548483047726]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [195, 48]], "fn_var_ln": {"result": [[191, 8], [191, 14]]}, "fn_var_occur": {"result": [["result", "self", "dataflow_hook", "get_conn"], ["mock_build", "return_value", "result"]]}, "name": "test_dataflow_client_creation", "params": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_descr": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_occur": {"mock_authorize": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"]], "mock_build": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"], ["mock_build", "return_value", "result"]], "self": [["result", "self", "dataflow_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_authorize": [["unittesmock.MagicMock", 0.7125450733214305]], "mock_build": [["unittesmock.MagicMock", 0.8121880767664634]], "self": []}, "q_name": "TestDataflowHook.test_dataflow_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["list", 0.8557949569299631]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[200, 4], [235, 9]], "fn_var_ln": {"expected_variables": [[218, 8], [218, 26]], "job_name": [[205, 8], [205, 16]], "mock_beam_start_python_pipeline": [[201, 8], [201, 39]], "on_new_job_id_callback": [[203, 8], [203, 30]], "py_requirements": [[204, 8], [204, 23]], "return_value": [[202, 8], [202, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "job_name"], ["expected_variables", "DEFAULT_DATAFLOW_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_beam_start_python_pipeline": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "py_requirements": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_python_dataflow", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.47673338372161017], ["Callable", 0.12559261271918082], ["str", 0.09777658782544826]], "mock_dataflow_wait_for_done": [["str", 0.49668537590888556]], "mock_uuid": [["str", 0.32739378192801283], ["int", 0.3235483606376535], ["bytes", 0.0883175980910935]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_python_pipeline": "", "on_new_job_id_callback": "", "py_requirements": "", "return_value": ""}, "variables_p": {"expected_variables": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09732959649553853], ["str", 0.09204638018928242], ["int", 0.07285053747615727]], "job_name": [["str", 0.9077368631904014], ["List[str]", 0.09226313680959883]], "mock_beam_start_python_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.6303284284693021], ["mock.Mock", 0.10001977960945345], ["unittesmock.MagicMock", 0.09424771617074429], ["int", 0.08676797868712931]], "py_requirements": [["dict", 0.19643863137362153], ["Dict[str, Tuple[str, str]]", 0.11603186440313709], ["Dict[str, Any]", 0.0984648723954806], ["Dict[str, list]", 0.09461742690614533], ["List[Tuple[str, str, str]]", 0.09246006171940384]], "return_value": [["str", 0.6262699934232399], ["int", 0.1050379543652214], ["unittesmock.MagicMock", 0.09227049262274106], ["Dict[Any, Union[int, str]]", 0.09128873691308553], ["list", 0.08513282267571215]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [280, 9]], "fn_var_ln": {"expected_variables": [[263, 8], [263, 26]], "job_name": [[247, 8], [247, 16]], "mock_beam_start_python_pipeline": [[243, 8], [243, 39]], "on_new_job_id_callback": [[245, 8], [245, 30]], "passed_variables": [[249, 8], [249, 24]], "py_requirements": [[246, 8], [246, 23]], "return_value": [[244, 8], [244, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "job_name"], ["expected_variables", "TEST_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION"]], "mock_beam_start_python_pipeline": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "passed_variables": [["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["passed_variables", "TEST_LOCATION"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "py_requirements": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_python_dataflow_with_custom_region_as_variable", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.5216803525965277], ["mock.Mock", 0.09122312199499386]], "mock_dataflow_wait_for_done": [["str", 0.37636820239156954], ["Optional[str]", 0.12827908756796338]], "mock_uuid": [["str", 0.34048593838727736], ["int", 0.3240205188470795], ["bytes", 0.08444789035592742]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow_with_custom_region_as_variable", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_python_pipeline": "", "on_new_job_id_callback": "", "passed_variables": "", "py_requirements": "", "return_value": ""}, "variables_p": {"expected_variables": [["dict", 0.0879117434436656]], "job_name": [["str", 0.8147702531159122], ["List[str]", 0.18522974688408778]], "mock_beam_start_python_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.31215285010209703], ["int", 0.3017341714063685], ["Optional[int]", 0.10402158247695205], ["unittesmock.MagicMock", 0.10199930651734894], ["Sequence[Dict[str, str]]", 0.09127097588941122]], "passed_variables": [["Optional[Dict[str, Any]]", 0.14250045509463188], ["DefaultDict[Any, DefaultDict[Any, Any]]", 0.1175236172144937], ["Dict[str, Union[Any, Any]]", 0.10421559116996762], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.09659943167903581], ["str", 0.07578892778510087]], "py_requirements": [["Dict[str, Tuple[str, str]]", 0.2223087421729384], ["Dict[str, list]", 0.12331451024821548], ["Dict[str, Any]", 0.09661389697756156], ["str", 0.09194113684421087], ["Pattern[str]", 0.08609259684086037]], "return_value": [["str", 0.6262699934232399], ["int", 0.1050379543652214], ["unittesmock.MagicMock", 0.09227049262274106], ["Dict[Any, Union[int, str]]", 0.09128873691308553], ["list", 0.08513282267571215]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[285, 4], [325, 9]], "fn_var_ln": {"expected_variables": [[308, 8], [308, 26]], "job_name": [[292, 8], [292, 16]], "mock_beam_start_python_pipeline": [[288, 8], [288, 39]], "on_new_job_id_callback": [[290, 8], [290, 30]], "passed_variables": [[294, 8], [294, 24]], "py_requirements": [[291, 8], [291, 23]], "return_value": [[289, 8], [289, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "job_name"], ["expected_variables", "TEST_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION"]], "mock_beam_start_python_pipeline": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "passed_variables": [["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"]], "py_requirements": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_python_dataflow_with_custom_region_as_parameter", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.2810641736361313], ["Callable", 0.1339357763897372], ["str", 0.10333333605102572]], "mock_dataflow_wait_for_done": [["str", 0.373390153618576], ["Optional[str]", 0.12849681143558833], ["List[Dict[str, Any]]", 0.08851554044820048]], "mock_uuid": [["str", 0.34364780654812066], ["int", 0.32285605513764554], ["bytes", 0.08505912870404396], ["unittesmock.MagicMock", 0.06945130661508414]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow_with_custom_region_as_parameter", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_python_pipeline": "", "on_new_job_id_callback": "", "passed_variables": "", "py_requirements": "", "return_value": ""}, "variables_p": {"expected_variables": [["dict", 0.0879117434436656]], "job_name": [["str", 0.8147702531159122], ["List[str]", 0.18522974688408778]], "mock_beam_start_python_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.31215285010209703], ["int", 0.3017341714063685], ["Optional[int]", 0.10402158247695205], ["unittesmock.MagicMock", 0.10199930651734894], ["Sequence[Dict[str, str]]", 0.09127097588941122]], "passed_variables": [["Dict[str, Any]", 0.20502159807850273], ["dict", 0.11308063848528298], ["Set[str]", 0.10590314475924613], ["Dict[Any, int]", 0.10396530088397292], ["Dict[str, Union[Any, Any]]", 0.1025038052260016], ["Dict[str, str]", 0.09679402671437533], ["DefaultDict[Any, DefaultDict[Any, Any]]", 0.09656556451615056], ["Optional[Dict[str, Any]]", 0.0870757663614815]], "py_requirements": [["Dict[str, Tuple[str, str]]", 0.2223087421729384], ["Dict[str, list]", 0.12331451024821548], ["Dict[str, Any]", 0.09661389697756156], ["str", 0.09194113684421087], ["Pattern[str]", 0.08609259684086037]], "return_value": [["str", 0.6262699934232399], ["int", 0.1050379543652214], ["unittesmock.MagicMock", 0.09227049262274106], ["Dict[Any, Union[int, str]]", 0.09128873691308553], ["list", 0.08513282267571215]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[330, 4], [369, 9]], "fn_var_ln": {"expected_variables": [[352, 8], [352, 26]], "job_name": [[337, 8], [337, 16]], "mock_beam_start_python_pipeline": [[333, 8], [333, 39]], "on_new_job_id_callback": [[335, 8], [335, 30]], "passed_variables": [[339, 8], [339, 24]], "py_requirements": [[336, 8], [336, 23]], "return_value": [[334, 8], [334, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "job_name"], ["expected_variables", "DEFAULT_DATAFLOW_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_beam_start_python_pipeline": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "passed_variables": [["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "py_requirements": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_python_dataflow_with_no_custom_region_or_region", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.3847596399579025], ["Callable", 0.12023337760534893], ["str", 0.09775865535947911]], "mock_dataflow_wait_for_done": [["str", 0.49055829033812637], ["Optional[str]", 0.11296551383462831]], "mock_uuid": [["str", 0.3609248806989289], ["int", 0.31954289683076614], ["bytes", 0.07955758978725073], ["unittesmock.MagicMock", 0.07709919605711114]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow_with_no_custom_region_or_region", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_python_pipeline": "", "on_new_job_id_callback": "", "passed_variables": "", "py_requirements": "", "return_value": ""}, "variables_p": {"expected_variables": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09732959649553853], ["str", 0.09204638018928242], ["int", 0.07285053747615727]], "job_name": [["str", 0.8147702531159122], ["List[str]", 0.18522974688408778]], "mock_beam_start_python_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.31215285010209703], ["int", 0.3017341714063685], ["Optional[int]", 0.10402158247695205], ["unittesmock.MagicMock", 0.10199930651734894], ["Sequence[Dict[str, str]]", 0.09127097588941122]], "passed_variables": [["Dict[str, Any]", 0.20502159807850273], ["dict", 0.11308063848528298], ["Set[str]", 0.10590314475924613], ["Dict[Any, int]", 0.10396530088397292], ["Dict[str, Union[Any, Any]]", 0.1025038052260016], ["Dict[str, str]", 0.09679402671437533], ["DefaultDict[Any, DefaultDict[Any, Any]]", 0.09656556451615056], ["Optional[Dict[str, Any]]", 0.0870757663614815]], "py_requirements": [["Dict[str, Tuple[str, str]]", 0.2223087421729384], ["Dict[str, list]", 0.12331451024821548], ["Dict[str, Any]", 0.09661389697756156], ["str", 0.09194113684421087], ["Pattern[str]", 0.08609259684086037]], "return_value": [["str", 0.6262699934232399], ["int", 0.1050379543652214], ["unittesmock.MagicMock", 0.09227049262274106], ["Dict[Any, Union[int, str]]", 0.09128873691308553], ["list", 0.08513282267571215]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[374, 4], [415, 9]], "fn_var_ln": {"expected_variables": [[397, 8], [397, 26]], "job_name": [[381, 8], [381, 16]], "mock_beam_start_python_pipeline": [[377, 8], [377, 39]], "on_new_job_id_callback": [[379, 8], [379, 30]], "passed_variables": [[383, 8], [383, 24]], "py_requirements": [[380, 8], [380, 23]], "return_value": [[378, 8], [378, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "job_name"], ["expected_variables", "DEFAULT_DATAFLOW_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_beam_start_python_pipeline": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "passed_variables": [["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "py_requirements": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_python_dataflow_with_multiple_extra_packages", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.4841980260280262], ["Callable", 0.11812941151285423], ["str", 0.09812451041795053]], "mock_dataflow_wait_for_done": [["str", 0.49894873653610783]], "mock_uuid": [["int", 0.3204364227710862], ["str", 0.3042444799685991], ["bytes", 0.09644295849901838]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow_with_multiple_extra_packages", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_python_pipeline": "", "on_new_job_id_callback": "", "passed_variables": "", "py_requirements": "", "return_value": ""}, "variables_p": {"expected_variables": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09732959649553853], ["str", 0.09204638018928242], ["int", 0.07285053747615727]], "job_name": [["str", 0.8147702531159122], ["List[str]", 0.18522974688408778]], "mock_beam_start_python_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.31215285010209703], ["int", 0.3017341714063685], ["Optional[int]", 0.10402158247695205], ["unittesmock.MagicMock", 0.10199930651734894], ["Sequence[Dict[str, str]]", 0.09127097588941122]], "passed_variables": [["Dict[str, Any]", 0.20502159807850273], ["dict", 0.11308063848528298], ["Set[str]", 0.10590314475924613], ["Dict[Any, int]", 0.10396530088397292], ["Dict[str, Union[Any, Any]]", 0.1025038052260016], ["Dict[str, str]", 0.09679402671437533], ["DefaultDict[Any, DefaultDict[Any, Any]]", 0.09656556451615056], ["Optional[Dict[str, Any]]", 0.0870757663614815]], "py_requirements": [["Dict[str, Tuple[str, str]]", 0.2223087421729384], ["Dict[str, list]", 0.12331451024821548], ["Dict[str, Any]", 0.09661389697756156], ["str", 0.09194113684421087], ["Pattern[str]", 0.08609259684086037]], "return_value": [["str", 0.6262699934232399], ["int", 0.1050379543652214], ["unittesmock.MagicMock", 0.09227049262274106], ["Dict[Any, Union[int, str]]", 0.09128873691308553], ["list", 0.08513282267571215]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[421, 4], [457, 9]], "fn_var_ln": {"expected_variables": [[440, 8], [440, 26]], "job_name": [[427, 8], [427, 16]], "mock_beam_start_python_pipeline": [[424, 8], [424, 39]], "on_new_job_id_callback": [[426, 8], [426, 30]], "return_value": [[425, 8], [425, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "job_name"], ["expected_variables", "DEFAULT_DATAFLOW_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "py_interpreter", "py_options", "PY_OPTIONS", "py_requirements", "None", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_beam_start_python_pipeline": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "py_interpreter", "py_options", "PY_OPTIONS", "py_requirements", "None", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "py_interpreter", "py_options", "PY_OPTIONS", "py_requirements", "None", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_python_dataflow_with_custom_interpreter", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "py_interpreter": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "py_interpreter": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "py_interpreter", "py_options", "PY_OPTIONS", "py_requirements", "None", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "py_interpreter": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "py_interpreter", "py_options", "PY_OPTIONS", "py_requirements", "None", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "self": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.47673338372161017], ["Callable", 0.12559261271918082], ["str", 0.09777658782544826]], "mock_dataflow_wait_for_done": [["str", 0.49668537590888556]], "mock_uuid": [["str", 0.32739378192801283], ["int", 0.3235483606376535], ["bytes", 0.0883175980910935]], "py_interpreter": [["bool", 0.19497834981017598], ["Optional[str]", 0.10548901839791905], ["Dict[str, str]", 0.10444825240305636]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow_with_custom_interpreter", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_python_pipeline": "", "on_new_job_id_callback": "", "return_value": ""}, "variables_p": {"expected_variables": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09732959649553853], ["str", 0.09204638018928242], ["int", 0.07285053747615727]], "job_name": [["str", 0.9077368631904014], ["List[str]", 0.09226313680959883]], "mock_beam_start_python_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.6303284284693021], ["mock.Mock", 0.10001977960945345], ["unittesmock.MagicMock", 0.09424771617074429], ["int", 0.08676797868712931]], "return_value": [["str", 0.6262699934232399], ["int", 0.1050379543652214], ["unittesmock.MagicMock", 0.09227049262274106], ["Dict[Any, Union[int, str]]", 0.09128873691308553], ["list", 0.08513282267571215]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[470, 4], [512, 9]], "fn_var_ln": {"expected_variables": [[495, 8], [495, 26]], "job_name": [[481, 8], [481, 16]], "mock_beam_start_python_pipeline": [[478, 8], [478, 39]], "on_new_job_id_callback": [[480, 8], [480, 30]], "return_value": [[479, 8], [479, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "job_name"], ["expected_variables", "DEFAULT_DATAFLOW_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_beam_start_python_pipeline": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_python_dataflow_with_non_empty_py_requirements_and_without_system_packages", "params": {"current_py_requirements": "", "current_py_system_site_packages": "", "mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"current_py_requirements": "", "current_py_system_site_packages": "", "mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"current_py_requirements": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "current_py_system_site_packages": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_python_pipeline", "self", "dataflow_hook", "beam_hook", "start_python_pipeline"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "current_py_requirements": [["bool", 0.20065142507407474], ["Dict[str, str]", 0.11019494807725295], ["Optional[str]", 0.10834435111150846], ["list", 0.0923070739625663]], "current_py_system_site_packages": [["bool", 0.20065142507407474], ["Dict[str, str]", 0.11019494807725295], ["Optional[str]", 0.10834435111150846], ["list", 0.0923070739625663]], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.38427508195515614], ["Callable", 0.12239530346193478], ["str", 0.09783245934688889]], "mock_dataflow_wait_for_done": [["str", 0.3915274022013262], ["Optional[str]", 0.10883751902503633], ["unittesmock.MagicMock", 0.10045458914270339]], "mock_uuid": [["str", 0.3320659769294456], ["int", 0.3220838797177716], ["bytes", 0.08884079729955772]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow_with_non_empty_py_requirements_and_without_system_packages", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_python_pipeline": "", "on_new_job_id_callback": "", "return_value": ""}, "variables_p": {"expected_variables": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09732959649553853], ["str", 0.09204638018928242], ["int", 0.07285053747615727]], "job_name": [["str", 0.9077368631904014], ["List[str]", 0.09226313680959883]], "mock_beam_start_python_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.6303284284693021], ["mock.Mock", 0.10001977960945345], ["unittesmock.MagicMock", 0.09424771617074429], ["int", 0.08676797868712931]], "return_value": [["str", 0.6262699934232399], ["int", 0.1050379543652214], ["unittesmock.MagicMock", 0.09227049262274106], ["Dict[Any, Union[int, str]]", 0.09128873691308553], ["list", 0.08513282267571215]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[516, 4], [534, 55]], "fn_var_ln": {"on_new_job_id_callback": [[521, 8], [521, 30]], "return_value": [[520, 8], [520, 30]]}, "fn_var_occur": {"on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"]]}, "name": "test_start_python_dataflow_with_empty_py_requirements_and_without_system_packages", "params": {"mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_not_called"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["self", "dataflow_hook", "beam_hook", "BeamHook", "runner"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_dataflow_wait_for_done": [["unittesmock.MagicMock", 0.7250762729253617], ["mock.MagicMock", 0.07984401298051337]], "mock_uuid": [["unittesmock.MagicMock", 0.8093570044584438]], "self": []}, "q_name": "TestDataflowHook.test_start_python_dataflow_with_empty_py_requirements_and_without_system_packages", "ret_exprs": [], "ret_type": "", "variables": {"on_new_job_id_callback": "", "return_value": ""}, "variables_p": {"on_new_job_id_callback": [["str", 0.6303284284693021], ["mock.Mock", 0.10001977960945345], ["unittesmock.MagicMock", 0.09424771617074429], ["int", 0.08676797868712931]], "return_value": [["Dict[str, Union[Any, Any, Any]]", 0.24288234023165273], ["List[Dict[str, Any]]", 0.22161788226835147], ["Dict[str, Union[int, str]]", 0.08079737450427014], ["str", 0.08045449071444205], ["List[Dict[str, str]]", 0.07234729391255862], ["Dict[str, Dict[str, Any]]", 0.06494699692806652], ["list", 0.06494699692806652]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[539, 4], [569, 9]], "fn_var_ln": {"expected_variables": [[554, 8], [554, 26]], "job_name": [[543, 8], [543, 16]], "mock_beam_start_java_pipeline": [[540, 8], [540, 37]], "on_new_job_id_callback": [[542, 8], [542, 30]], "return_value": [[541, 8], [541, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["expected_variables", "job_name"], ["expected_variables", "DEFAULT_DATAFLOW_LOCATION"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION", "multiple_jobs", "False"]], "mock_beam_start_java_pipeline": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_java_dataflow", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION", "multiple_jobs", "False"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.47673338372161017], ["Callable", 0.12559261271918082], ["str", 0.09777658782544826]], "mock_dataflow_wait_for_done": [["str", 0.40455003907172515]], "mock_uuid": [["str", 0.32739378192801283], ["int", 0.3235483606376535], ["bytes", 0.0883175980910935]], "self": []}, "q_name": "TestDataflowHook.test_start_java_dataflow", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_java_pipeline": "", "on_new_job_id_callback": "", "return_value": ""}, "variables_p": {"expected_variables": [["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09732959649553853], ["str", 0.09204638018928242], ["int", 0.07285053747615727]], "job_name": [["str", 0.9077368631904014], ["List[str]", 0.09226313680959883]], "mock_beam_start_java_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.6303284284693021], ["mock.Mock", 0.10001977960945345], ["unittesmock.MagicMock", 0.09424771617074429], ["int", 0.08676797868712931]], "return_value": [["str", 0.49033951184599855], ["Dict[str, str]", 0.12412326625577139], ["Dict[str, List[Any]]", 0.11000637712579275], ["List[Dict[str, str]]", 0.09201506274825806]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[574, 4], [609, 9]], "fn_var_ln": {"expected_variables": [[594, 8], [594, 26]], "job_name": [[580, 8], [580, 16]], "mock_beam_start_java_pipeline": [[577, 8], [577, 37]], "on_new_job_id_callback": [[579, 8], [579, 30]], "passed_variables": [[582, 8], [582, 24]], "return_value": [[578, 8], [578, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "passed_variables"], ["expected_variables", "job_name"], ["expected_variables", "DEFAULT_DATAFLOW_LOCATION"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION", "multiple_jobs", "False"]], "mock_beam_start_java_pipeline": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "passed_variables": [["passed_variables", "builtins", "dict", "builtins", "str", "typing", "Any", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "copy", "deepcopy", "passed_variables"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_java_dataflow_with_multiple_values_in_variables", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "DEFAULT_DATAFLOW_LOCATION", "multiple_jobs", "False"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.47919049732901053], ["Callable", 0.11992400524639531], ["str", 0.09883323452183457]], "mock_dataflow_wait_for_done": [["str", 0.40608725209324115], ["bool", 0.09391274790675885]], "mock_uuid": [["int", 0.2442484047983158], ["bool", 0.18685969809311684], ["unittesmock.MagicMock", 0.09005386331431856], ["mock.MagicMock", 0.09005386331431856]], "self": []}, "q_name": "TestDataflowHook.test_start_java_dataflow_with_multiple_values_in_variables", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_java_pipeline": "", "on_new_job_id_callback": "", "passed_variables": "builtins.dict[builtins.str, typing.Any]", "return_value": ""}, "variables_p": {"expected_variables": [["dict", 0.4863796658070621], ["Dict[str, Any]", 0.11513844557366358], ["List[None]", 0.0922074614962264], ["List[str]", 0.09191254891143362]], "job_name": [["str", 0.8147702531159122], ["List[str]", 0.18522974688408778]], "mock_beam_start_java_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.31215285010209703], ["int", 0.3017341714063685], ["Optional[int]", 0.10402158247695205], ["unittesmock.MagicMock", 0.10199930651734894], ["Sequence[Dict[str, str]]", 0.09127097588941122]], "passed_variables": [["Dict[str, Optional[str]]", 0.29556124240235887], ["dict", 0.163756701196509], ["Dict[str, Any]", 0.10495949378152006], ["Dict[str, Union[int, str]]", 0.09645482258093817], ["KeysView[str]", 0.09110527739301032], ["Dict[int, str]", 0.08473581907094688], ["Dict[str, Callable[..., Any]]", 0.08278362428837756], ["List[str]", 0.0806430192863392]], "return_value": [["str", 0.49033951184599855], ["Dict[str, str]", 0.12412326625577139], ["Dict[str, List[Any]]", 0.11000637712579275], ["List[Dict[str, str]]", 0.09201506274825806]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[614, 4], [649, 9]], "fn_var_ln": {"expected_variables": [[634, 8], [634, 26]], "job_name": [[620, 8], [620, 16]], "mock_beam_start_java_pipeline": [[617, 8], [617, 37]], "on_new_job_id_callback": [[619, 8], [619, 30]], "passed_variables": [[622, 8], [622, 24]], "return_value": [[618, 8], [618, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["expected_variables", "job_name"], ["expected_variables", "TEST_LOCATION"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION", "multiple_jobs", "False"]], "mock_beam_start_java_pipeline": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "passed_variables": [["passed_variables", "builtins", "dict", "builtins", "str", "typing", "Any", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["passed_variables", "TEST_LOCATION"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_java_dataflow_with_custom_region_as_variable", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION", "multiple_jobs", "False"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.5216803525965277], ["mock.Mock", 0.09122312199499386]], "mock_dataflow_wait_for_done": [["str", 0.37585127586260103], ["Optional[str]", 0.12715241340742722]], "mock_uuid": [["str", 0.34048593838727736], ["int", 0.3240205188470795], ["bytes", 0.08444789035592742]], "self": []}, "q_name": "TestDataflowHook.test_start_java_dataflow_with_custom_region_as_variable", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_java_pipeline": "", "on_new_job_id_callback": "", "passed_variables": "builtins.dict[builtins.str, typing.Any]", "return_value": ""}, "variables_p": {"expected_variables": [["dict", 0.0879117434436656]], "job_name": [["str", 0.8147702531159122], ["List[str]", 0.18522974688408778]], "mock_beam_start_java_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.31215285010209703], ["int", 0.3017341714063685], ["Optional[int]", 0.10402158247695205], ["unittesmock.MagicMock", 0.10199930651734894], ["Sequence[Dict[str, str]]", 0.09127097588941122]], "passed_variables": [["Dict[str, Optional[str]]", 0.22338002884678776], ["Dict[str, str]", 0.19234669629718337], ["dict", 0.1844243181857665], ["Dict[str, Callable[..., Any]]", 0.112905941188264], ["Dict[str, Any]", 0.09834740095846203]], "return_value": [["str", 0.49033951184599855], ["Dict[str, str]", 0.12412326625577139], ["Dict[str, List[Any]]", 0.11000637712579275], ["List[Dict[str, str]]", 0.09201506274825806]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[654, 4], [687, 9]], "fn_var_ln": {"expected_variables": [[672, 8], [672, 26]], "job_name": [[660, 8], [660, 16]], "mock_beam_start_java_pipeline": [[657, 8], [657, 37]], "on_new_job_id_callback": [[659, 8], [659, 30]], "return_value": [[658, 8], [658, 30]]}, "fn_var_occur": {"expected_variables": [["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["expected_variables", "job_name"], ["expected_variables", "TEST_LOCATION"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "job_name": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["expected_variables", "job_name"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION", "multiple_jobs", "False"]], "mock_beam_start_java_pipeline": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "on_new_job_id_callback": [["on_new_job_id_callback", "MagicMock"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"]], "return_value": [["mock_uuid", "return_value", "MOCK_UUID"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]]}, "name": "test_start_java_dataflow_with_custom_region_as_parameter", "params": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_callback_on_job_id": "", "mock_dataflow_wait_for_done": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_callback_on_job_id": [["mock_callback_on_job_id", "assert_called_once_with", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "mock_dataflow_wait_for_done": [["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION", "multiple_jobs", "False"]], "mock_uuid": [["mock_uuid", "return_value", "MOCK_UUID"]], "self": [["mock_beam_start_java_pipeline", "self", "dataflow_hook", "beam_hook", "start_java_pipeline"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_callback_on_job_id": [["unittesmock.MagicMock", 0.2810641736361313], ["Callable", 0.1339357763897372], ["str", 0.10333333605102572]], "mock_dataflow_wait_for_done": [["str", 0.37173609032157556], ["Optional[str]", 0.12798804581012077]], "mock_uuid": [["str", 0.34364780654812066], ["int", 0.32285605513764554], ["bytes", 0.08505912870404396], ["unittesmock.MagicMock", 0.06945130661508414]], "self": []}, "q_name": "TestDataflowHook.test_start_java_dataflow_with_custom_region_as_parameter", "ret_exprs": [], "ret_type": "", "variables": {"expected_variables": "", "job_name": "", "mock_beam_start_java_pipeline": "", "on_new_job_id_callback": "", "return_value": ""}, "variables_p": {"expected_variables": [["dict", 0.0879117434436656]], "job_name": [["str", 0.9077368631904014], ["List[str]", 0.09226313680959883]], "mock_beam_start_java_pipeline": [["str", 0.6331870727156401], ["int", 0.26791586650148774], ["Union[Literal, Literal]", 0.09889706078287204]], "on_new_job_id_callback": [["str", 0.6303284284693021], ["mock.Mock", 0.10001977960945345], ["unittesmock.MagicMock", 0.09424771617074429], ["int", 0.08676797868712931]], "return_value": [["str", 0.49033951184599855], ["Dict[str, str]", 0.12412326625577139], ["Dict[str, List[Any]]", 0.11000637712579275], ["List[Dict[str, str]]", 0.09201506274825806]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[703, 4], [707, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_valid_dataflow_job_name", "params": {"_": "", "append_job_name": "", "expected_result": "", "job_name": "", "self": ""}, "params_descr": {"_": "", "append_job_name": "", "expected_result": "", "job_name": "", "self": ""}, "params_occur": {"_": [], "append_job_name": [["self", "dataflow_hook", "build_dataflow_job_name", "job_name", "job_name", "append_job_name", "append_job_name", "expected_result"]], "expected_result": [["self", "dataflow_hook", "build_dataflow_job_name", "job_name", "job_name", "append_job_name", "append_job_name", "expected_result"]], "job_name": [["self", "dataflow_hook", "build_dataflow_job_name", "job_name", "job_name", "append_job_name", "append_job_name", "expected_result"]], "self": [["self", "dataflow_hook", "build_dataflow_job_name", "job_name", "job_name", "append_job_name", "append_job_name", "expected_result"]]}, "params_p": {"_": [["str", 0.6644001796996066], ["Set[str]", 0.14824333936432182], ["bool", 0.09951460889351559], ["uuid.UUID", 0.087841872042556]], "append_job_name": [["str", 0.8065068117965463], ["int", 0.09872293618457005]], "args": [], "expected_result": [["str", 0.8065068117965463], ["int", 0.09872293618457005]], "job_name": [["str", 0.8065068117965463], ["int", 0.09872293618457005]], "kwargs": [], "self": []}, "q_name": "TestDataflowHook.test_valid_dataflow_job_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[710, 4], [712, 96]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_build_dataflow_job_name_with_invalid_value", "params": {"job_name": "", "self": ""}, "params_descr": {"job_name": "", "self": ""}, "params_occur": {"job_name": [["pytest", "raises", "ValueError", "match", "re", "escape", "job_name"], ["self", "dataflow_hook", "build_dataflow_job_name", "job_name", "job_name", "append_job_name", "False"]], "self": [["self", "dataflow_hook", "build_dataflow_job_name", "job_name", "job_name", "append_job_name", "False"]]}, "params_p": {"args": [], "job_name": [["str", 0.7867343233034875]], "kwargs": [], "self": []}, "q_name": "TestDataflowHook.test_build_dataflow_job_name_with_invalid_value", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[716, 4], [726, 67]], "fn_var_ln": {"method_fetch_job_by_id": [[717, 8], [717, 30]]}, "fn_var_occur": {"method_fetch_job_by_id": [["method_fetch_job_by_id", "mock_dataflowjob", "return_value", "fetch_job_by_id"], ["method_fetch_job_by_id", "assert_called_once_with", "TEST_JOB_ID"]]}, "name": "test_get_job", "params": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_called_once"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "mock_dataflowjob": [["method_fetch_job_by_id", "mock_dataflowjob", "return_value", "fetch_job_by_id"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "self": [["self", "dataflow_hook", "get_job", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.6418976325314001]], "mock_dataflowjob": [["unittesmock.MagicMock", 0.77972063447374]], "self": []}, "q_name": "TestDataflowHook.test_get_job", "ret_exprs": [], "ret_type": "", "variables": {"method_fetch_job_by_id": ""}, "variables_p": {"method_fetch_job_by_id": [["str", 0.5745217356491388], ["int", 0.21952221347154982]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[730, 4], [742, 75]], "fn_var_ln": {"method_fetch_job_metrics_by_id": [[731, 8], [731, 38]]}, "fn_var_occur": {"method_fetch_job_metrics_by_id": [["method_fetch_job_metrics_by_id", "mock_dataflowjob", "return_value", "fetch_job_metrics_by_id"], ["method_fetch_job_metrics_by_id", "assert_called_once_with", "TEST_JOB_ID"]]}, "name": "test_fetch_job_metrics_by_id", "params": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_called_once"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "mock_dataflowjob": [["method_fetch_job_metrics_by_id", "mock_dataflowjob", "return_value", "fetch_job_metrics_by_id"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "self": [["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.6183915812015444]], "mock_dataflowjob": [["unittesmock.MagicMock", 0.512741351609518]], "self": []}, "q_name": "TestDataflowHook.test_fetch_job_metrics_by_id", "ret_exprs": [], "ret_type": "", "variables": {"method_fetch_job_metrics_by_id": ""}, "variables_p": {"method_fetch_job_metrics_by_id": [["str", 0.6836450746408188], ["bytes", 0.122252684432547], ["Pattern[str]", 0.10193238825432]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[745, 4], [757, 9]], "fn_var_ln": {"method_get_metrics": [[746, 8], [746, 26]]}, "fn_var_occur": {"method_get_metrics": [["method_get_metrics", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "getMetrics"], ["method_get_metrics", "return_value", "execute", "assert_called_once_with", "num_retries"], ["method_get_metrics", "assert_called_once_with", "jobId", "TEST_JOB_ID", "projectId", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "name": "test_fetch_job_metrics_by_id_controller", "params": {"mock_conn": "", "self": ""}, "params_descr": {"mock_conn": "", "self": ""}, "params_occur": {"mock_conn": [["method_get_metrics", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "getMetrics"], ["mock_conn", "assert_called_once"]], "self": [["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.4748164262464075], ["Tuple[str, mock.Mock]", 0.12794447453820507], ["mock.MagicMock", 0.11179811644587236]], "self": []}, "q_name": "TestDataflowHook.test_fetch_job_metrics_by_id_controller", "ret_exprs": [], "ret_type": "", "variables": {"method_get_metrics": ""}, "variables_p": {"method_get_metrics": [["str", 0.1871643025516704], ["List[Union[Any, Any]]", 0.17179688690534348], ["list", 0.15054537778240382], ["List[str]", 0.12808886452468726], ["Dict[str, Union[int, str]]", 0.09479244388816817], ["unittesmock.MagicMock", 0.09181007172211435], ["Optional[bytes]", 0.08342190477691507]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[761, 4], [773, 76]], "fn_var_ln": {"method_fetch_job_messages_by_id": [[762, 8], [762, 39]]}, "fn_var_occur": {"method_fetch_job_messages_by_id": [["method_fetch_job_messages_by_id", "mock_dataflowjob", "return_value", "fetch_job_messages_by_id"], ["method_fetch_job_messages_by_id", "assert_called_once_with", "TEST_JOB_ID"]]}, "name": "test_fetch_job_messages_by_id", "params": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_called_once"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "mock_dataflowjob": [["method_fetch_job_messages_by_id", "mock_dataflowjob", "return_value", "fetch_job_messages_by_id"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "self": [["self", "dataflow_hook", "fetch_job_messages_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.6183915812015444]], "mock_dataflowjob": [["unittesmock.MagicMock", 0.512741351609518]], "self": []}, "q_name": "TestDataflowHook.test_fetch_job_messages_by_id", "ret_exprs": [], "ret_type": "", "variables": {"method_fetch_job_messages_by_id": ""}, "variables_p": {"method_fetch_job_messages_by_id": [["str", 0.6836450746408188], ["bytes", 0.122252684432547], ["Pattern[str]", 0.10193238825432]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[777, 4], [791, 86]], "fn_var_ln": {"method_fetch_job_autoscaling_events_by_id": [[778, 8], [778, 49]]}, "fn_var_occur": {"method_fetch_job_autoscaling_events_by_id": [["method_fetch_job_autoscaling_events_by_id", "mock_dataflowjob", "return_value", "fetch_job_autoscaling_events_by_id"], ["method_fetch_job_autoscaling_events_by_id", "assert_called_once_with", "TEST_JOB_ID"]]}, "name": "test_fetch_job_autoscaling_events_by_id", "params": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_called_once"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "mock_dataflowjob": [["method_fetch_job_autoscaling_events_by_id", "mock_dataflowjob", "return_value", "fetch_job_autoscaling_events_by_id"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "self": [["self", "dataflow_hook", "fetch_job_autoscaling_events_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.6375538943769032]], "mock_dataflowjob": [["unittesmock.MagicMock", 0.6968950478358266]], "self": []}, "q_name": "TestDataflowHook.test_fetch_job_autoscaling_events_by_id", "ret_exprs": [], "ret_type": "", "variables": {"method_fetch_job_autoscaling_events_by_id": ""}, "variables_p": {"method_fetch_job_autoscaling_events_by_id": [["str", 0.6079549815354475], ["int", 0.10330118805768504], ["bytes", 0.09955404142667289], ["Pattern[str]", 0.09471136726161605], ["Dict[str, int]", 0.0944784217185785]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[795, 4], [819, 54]], "fn_var_ln": {"method_wait_for_done": [[796, 8], [796, 28]]}, "fn_var_occur": {"method_wait_for_done": [["method_wait_for_done", "mock_dataflowjob", "return_value", "wait_for_done"], ["method_wait_for_done", "assert_called_once_with"]]}, "name": "test_wait_for_done", "params": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_dataflowjob": "", "self": ""}, "params_occur": {"mock_conn": [["mock_conn", "assert_called_once"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "name", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "self", "dataflow_hook", "num_retries", "multiple_jobs", "False", "drain_pipeline", "self", "dataflow_hook", "drain_pipeline", "cancel_timeout", "self", "dataflow_hook", "cancel_timeout", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"]], "mock_dataflowjob": [["method_wait_for_done", "mock_dataflowjob", "return_value", "wait_for_done"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "name", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "self", "dataflow_hook", "num_retries", "multiple_jobs", "False", "drain_pipeline", "self", "dataflow_hook", "drain_pipeline", "cancel_timeout", "self", "dataflow_hook", "cancel_timeout", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"]], "self": [["self", "dataflow_hook", "wait_for_done", "job_name", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "multiple_jobs", "False"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "name", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "self", "dataflow_hook", "num_retries", "multiple_jobs", "False", "drain_pipeline", "self", "dataflow_hook", "drain_pipeline", "cancel_timeout", "self", "dataflow_hook", "cancel_timeout", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.894948341392879]], "mock_dataflowjob": [["unittesmock.MagicMock", 0.9154909874376813]], "self": []}, "q_name": "TestDataflowHook.test_wait_for_done", "ret_exprs": [], "ret_type": "", "variables": {"method_wait_for_done": ""}, "variables_p": {"method_wait_for_done": [["int", 0.22017562194728874], ["Dict[str, Union[Any, Any]]", 0.21159950675146283], ["Dict[str, Union[int, str]]", 0.10014874503042778], ["List[Dict[str, str]]", 0.0824079458749624], ["str", 0.08030584963999222], ["Dict[str, Dict[str, Any]]", 0.08011393080100376], ["list", 0.07511383216160687]]}}], "name": "TestDataflowHook", "q_name": "TestDataflowHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[822, 0], [1166, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[823, 4], [824, 77]], "fn_var_ln": {"dataflow_hook": [[824, 8], [824, 26]]}, "fn_var_occur": {"dataflow_hook": [["self", "dataflow_hook", "DataflowHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dataflow_hook", "DataflowHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowTemplateHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_hook": ""}, "variables_p": {"dataflow_hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[829, 4], [867, 71]], "fn_var_ln": {"launch_method": [[831, 8], [831, 21]], "variables": [[835, 8], [835, 17]]}, "fn_var_occur": {"launch_method": [["launch_method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["launch_method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["launch_method", "assert_called_once_with", "body", "MOCK_UUID_PREFIX", "PARAMETERS", "variables", "gcsPath", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION"]], "variables": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "copy", "deepcopy", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "body", "MOCK_UUID_PREFIX", "PARAMETERS", "variables", "gcsPath", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION"]]}, "name": "test_start_template_dataflow", "params": {"mock_conn": "", "mock_controller": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_controller": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_conn": [["launch_method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "mock_controller": [["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_controller", "return_value", "wait_for_done", "assert_called_once"]], "mock_uuid": [], "self": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "copy", "deepcopy", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.30184394103471934]], "mock_controller": [["unittesmock.MagicMock", 0.5482399734008192]], "mock_uuid": [["mock.Mock", 0.37066394861288465], ["unittesmock.MagicMock", 0.14220736437631365]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_template_dataflow", "ret_exprs": [], "ret_type": "", "variables": {"launch_method": "", "variables": ""}, "variables_p": {"launch_method": [["unittesmock.MagicMock", 0.119540172192713], ["Dict[str, Union[None, Any, Any]]", 0.11712650591283659], ["List[Dict[str, Any]]", 0.10714451063840959], ["int", 0.09149129364999219], ["tests.mock.zwave.MockValue", 0.09094628542520386], ["Dict[Any, List[Any]]", 0.08888997680785779]], "variables": [["Dict[str, List[Any]]", 0.24469254666596585], ["str", 0.17519790583600017], ["Dict[str, int]", 0.10395542829142329], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.0949309747017816], ["Type[List[Any]]", 0.09342375868958412], ["Dict[str, str]", 0.09297686541895178], ["list", 0.09224879613851732]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[872, 4], [906, 71]], "fn_var_ln": {"launch_method": [[875, 8], [875, 21]]}, "fn_var_occur": {"launch_method": [["launch_method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["launch_method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["launch_method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "mock", "ANY"]]}, "name": "test_start_template_dataflow_with_custom_region_as_variable", "params": {"mock_conn": "", "mock_controller": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_controller": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_conn": [["launch_method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "mock_controller": [["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_controller", "return_value", "wait_for_done", "assert_called_once"]], "mock_uuid": [], "self": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "TEST_LOCATION", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.30920114474959876]], "mock_controller": [["unittesmock.MagicMock", 0.6735415656371427]], "mock_uuid": [["mock.Mock", 0.36056287071145465], ["unittesmock.MagicMock", 0.32549618152716303]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_template_dataflow_with_custom_region_as_variable", "ret_exprs": [], "ret_type": "", "variables": {"launch_method": ""}, "variables_p": {"launch_method": [["unittesmock.MagicMock", 0.119540172192713], ["Dict[str, Union[None, Any, Any]]", 0.11712650591283659], ["List[Dict[str, Any]]", 0.10714451063840959], ["int", 0.09149129364999219], ["tests.mock.zwave.MockValue", 0.09094628542520386], ["Dict[Any, List[Any]]", 0.08888997680785779]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[911, 4], [947, 71]], "fn_var_ln": {"launch_method": [[914, 8], [914, 21]]}, "fn_var_occur": {"launch_method": [["launch_method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["launch_method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["launch_method", "assert_called_once_with", "body", "UNIQUE_JOB_NAME", "PARAMETERS", "gcsPath", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"]]}, "name": "test_start_template_dataflow_with_custom_region_as_parameter", "params": {"mock_conn": "", "mock_controller": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_controller": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_conn": [["launch_method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "mock_controller": [["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_controller", "return_value", "wait_for_done", "assert_called_once"]], "mock_uuid": [], "self": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.30498316493388894]], "mock_controller": [["unittesmock.MagicMock", 0.49176288115979805]], "mock_uuid": [["unittesmock.MagicMock", 0.3305902255849462], ["mock.Mock", 0.30250029472580364]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_template_dataflow_with_custom_region_as_parameter", "ret_exprs": [], "ret_type": "", "variables": {"launch_method": ""}, "variables_p": {"launch_method": [["unittesmock.MagicMock", 0.119540172192713], ["Dict[str, Union[None, Any, Any]]", 0.11712650591283659], ["List[Dict[str, Any]]", 0.10714451063840959], ["int", 0.09149129364999219], ["tests.mock.zwave.MockValue", 0.09094628542520386], ["Dict[Any, List[Any]]", 0.08888997680785779]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[952, 4], [992, 43]], "fn_var_ln": {"body": [[973, 8], [973, 12]], "dataflowjob_instance": [[955, 8], [955, 28]], "method": [[958, 8], [958, 14]], "options_with_runtime_env": [[953, 8], [953, 32]]}, "fn_var_occur": {"body": [["body", "mock", "ANY", "PARAMETERS", "RUNTIME_ENV"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"]], "dataflowjob_instance": [["dataflowjob_instance", "mock_dataflowjob", "return_value"], ["dataflowjob_instance", "wait_for_done", "return_value", "None"]], "method": [["method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"]], "options_with_runtime_env": [["options_with_runtime_env", "copy", "deepcopy", "RUNTIME_ENV"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment"]]}, "name": "test_start_template_dataflow_with_runtime_env", "params": {"mock_conn": "", "mock_dataflowjob": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_dataflowjob": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_conn": [["method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "mock_dataflowjob": [["dataflowjob_instance", "mock_dataflowjob", "return_value"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "mock_uuid": [["mock_uuid", "assert_called_once_with"]], "self": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.43986464250743995]], "mock_dataflowjob": [["unittesmock.MagicMock", 1.0]], "mock_uuid": [["unittesmock.MagicMock", 0.09251775042790551]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_template_dataflow_with_runtime_env", "ret_exprs": [], "ret_type": "", "variables": {"body": "", "dataflowjob_instance": "", "method": "", "options_with_runtime_env": ""}, "variables_p": {"body": [["list", 0.29298884545259607], ["List[float]", 0.11066568616734569], ["str", 0.08364420019401883]], "dataflowjob_instance": [["str", 0.6573984063936088], ["List[Dict[str, str]]", 0.133594185603528], ["list", 0.13267458458018752]], "method": [["str", 0.4431916740454977], ["Dict[str, Union[Any, Any, str]]", 0.19454096559546794], ["Dict[str, Any]", 0.09254204475280234], ["list", 0.08743153180745494]], "options_with_runtime_env": [["dict", 0.09726442744792968], ["list", 0.09344933094313265]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[997, 4], [1041, 43]], "fn_var_ln": {"body": [[1022, 8], [1022, 12]], "dataflowjob_instance": [[1004, 8], [1004, 28]], "expected_runtime_env": [[1001, 8], [1001, 28]], "method": [[1007, 8], [1007, 14]], "options_with_runtime_env": [[998, 8], [998, 32]], "runtime_env": [[1000, 8], [1000, 19]]}, "fn_var_occur": {"body": [["body", "mock", "ANY", "PARAMETERS", "expected_runtime_env"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"]], "dataflowjob_instance": [["dataflowjob_instance", "mock_dataflowjob", "return_value"], ["dataflowjob_instance", "wait_for_done", "return_value", "None"]], "expected_runtime_env": [["expected_runtime_env", "copy", "deepcopy", "RUNTIME_ENV"], ["expected_runtime_env", "update", "runtime_env"], ["body", "mock", "ANY", "PARAMETERS", "expected_runtime_env"]], "method": [["method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"]], "options_with_runtime_env": [["options_with_runtime_env", "copy", "deepcopy", "RUNTIME_ENV"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment", "runtime_env"]], "runtime_env": [["expected_runtime_env", "update", "runtime_env"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment", "runtime_env"]]}, "name": "test_start_template_dataflow_update_runtime_env", "params": {"mock_conn": "", "mock_dataflowjob": "", "mock_uuid": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_dataflowjob": "", "mock_uuid": "", "self": ""}, "params_occur": {"mock_conn": [["method", "mock_conn", "return_value", "projects", "return_value", "locations", "return_value", "templates", "return_value", "launch"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "mock_dataflowjob": [["dataflowjob_instance", "mock_dataflowjob", "return_value"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "mock_uuid": [["mock_uuid", "assert_called_once_with"]], "self": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment", "runtime_env"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.44058283764492884]], "mock_dataflowjob": [["unittesmock.MagicMock", 0.9085751004317997]], "mock_uuid": [["unittesmock.MagicMock", 0.09255634293201902]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_template_dataflow_update_runtime_env", "ret_exprs": [], "ret_type": "", "variables": {"body": "", "dataflowjob_instance": "", "expected_runtime_env": "", "method": "", "options_with_runtime_env": "", "runtime_env": ""}, "variables_p": {"body": [["str", 0.3965434618507146], ["Dict[str, Optional[int]]", 0.11058026180710256], ["List[float]", 0.10981467349649661], ["Set[str]", 0.09734394403467984], ["list", 0.09324085607631022]], "dataflowjob_instance": [["str", 0.6573984063936088], ["List[Dict[str, str]]", 0.133594185603528], ["list", 0.13267458458018752]], "expected_runtime_env": [["Dict[str, Union[int, str]]", 0.2871569796074049], ["Dict[str, str]", 0.1914379864049366]], "method": [["str", 0.4431916740454977], ["Dict[str, Union[Any, Any, str]]", 0.19454096559546794], ["Dict[str, Any]", 0.09254204475280234], ["list", 0.08743153180745494]], "options_with_runtime_env": [["dict", 0.09726442744792968], ["list", 0.09344933094313265]], "runtime_env": [["Dict[Any, dict]", 0.10291599510675617]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1045, 4], [1077, 44]], "fn_var_ln": {"expected_job": [[1046, 8], [1046, 20]], "launch_method": [[1049, 8], [1049, 21]], "mock_locations": [[1048, 8], [1048, 22]], "on_new_job_callback": [[1053, 8], [1053, 27]], "result": [[1054, 8], [1054, 14]]}, "fn_var_occur": {"expected_job": [["expected_job", "TEST_JOB_ID"], ["launch_method", "return_value", "execute", "return_value", "expected_job"], ["on_new_job_callback", "assert_called_once_with", "expected_job"]], "launch_method": [["launch_method", "mock_locations", "return_value", "flexTemplates", "return_value", "launch"], ["launch_method", "return_value", "execute", "return_value", "expected_job"], ["launch_method", "assert_called_once_with", "projectId", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION"]], "mock_locations": [["mock_locations", "mock_conn", "return_value", "projects", "return_value", "locations"], ["launch_method", "mock_locations", "return_value", "flexTemplates", "return_value", "launch"]], "on_new_job_callback": [["on_new_job_callback", "mock", "MagicMock"], ["result", "self", "dataflow_hook", "start_flex_template", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID", "on_new_job_callback", "on_new_job_callback"], ["on_new_job_callback", "assert_called_once_with", "expected_job"]], "result": [["result", "self", "dataflow_hook", "start_flex_template", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID", "on_new_job_callback", "on_new_job_callback"], ["result", "TEST_JOB_ID"]]}, "name": "test_start_flex_template", "params": {"mock_conn": "", "mock_controller": "", "self": ""}, "params_descr": {"mock_conn": "", "mock_controller": "", "self": ""}, "params_occur": {"mock_conn": [["mock_locations", "mock_conn", "return_value", "projects", "return_value", "locations"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "num_retries", "self", "dataflow_hook", "num_retries", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"]], "mock_controller": [["mock_controller", "return_value", "get_jobs", "return_value", "TEST_JOB_ID"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "num_retries", "self", "dataflow_hook", "num_retries", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["mock_controller", "return_value", "get_jobs", "assert_called_once_with", "refresh", "True"]], "self": [["result", "self", "dataflow_hook", "start_flex_template", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID", "on_new_job_callback", "on_new_job_callback"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "num_retries", "self", "dataflow_hook", "num_retries", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"]]}, "params_p": {"args": [], "kwargs": [], "mock_conn": [["unittesmock.MagicMock", 0.2526024795827416]], "mock_controller": [["unittesmock.MagicMock", 0.2162376697745923]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_flex_template", "ret_exprs": [], "ret_type": "", "variables": {"expected_job": "", "launch_method": "", "mock_locations": "", "on_new_job_callback": "", "result": ""}, "variables_p": {"expected_job": [["Dict[str, Union[int, str]]", 0.10843731206426586], ["List[Tuple[Any, Any, Any]]", 0.10762261713199503], ["str", 0.10050822471458758], ["List[Dict[str, Any]]", 0.0974503445782831], ["List[List[Any]]", 0.09379211209611008], ["Dict[str, str]", 0.09360228183500428], ["int", 0.09000238520084153], ["bool", 0.08456977503963457]], "launch_method": [["Dict[str, Union[Any, Any]]", 0.3956090105376852], ["Dict[str, Union[Any, Any, int, str]]", 0.39153562572770934], ["Dict[str, Union[dict, str]]", 0.21285536373460548]], "mock_locations": [["Dict[str, Union[Any, Any]]", 0.3906526819808934], ["Dict[str, Union[Any, Any, int, str]]", 0.21410935718942192], ["Dict[str, Union[Any, Any, str]]", 0.10684664864257644], ["Dict[str, Union[Any, Any, Any]]", 0.09651922097032203], ["Dict[str, Union[dict, Any]]", 0.09630583718336724], ["str", 0.0955662540334188]], "on_new_job_callback": [["unittesmock.MagicMock", 0.40934745486383833], ["List[unittesmock.MagicMock]", 0.18528623339372516], ["ValueError", 0.09873195958364006]], "result": [["Dict[str, Any]", 0.10549073877059825], ["list", 0.10143003006183803], ["OrderedDict", 0.1008522673056719], ["asyncio.tasks.Task[Any]", 0.09886678038281417]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1081, 4], [1096, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cancel_job", "params": {"jobs_controller": "", "mock_get_conn": "", "self": ""}, "params_descr": {"jobs_controller": "", "mock_get_conn": "", "self": ""}, "params_occur": {"jobs_controller": [["jobs_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "name", "UNIQUE_JOB_NAME", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT"], ["jobs_controller", "cancel"]], "mock_get_conn": [["jobs_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "name", "UNIQUE_JOB_NAME", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT"]], "self": [["self", "dataflow_hook", "cancel_job", "job_name", "UNIQUE_JOB_NAME", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "jobs_controller": [["unittesmock.MagicMock", 0.20188101716532203]], "kwargs": [], "mock_get_conn": [["unittesmock.MagicMock", 0.20188101716532203]], "self": []}, "q_name": "TestDataflowTemplateHook.test_cancel_job", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1102, 4], [1149, 33]], "fn_var_ln": {"on_new_job_callback": [[1110, 8], [1110, 27]], "result": [[1112, 8], [1112, 14]], "return_value": [[1107, 8], [1107, 29]], "test_job": [[1105, 8], [1105, 16]]}, "fn_var_occur": {"on_new_job_callback": [["on_new_job_callback", "mock", "MagicMock"], ["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"]], "result": [["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"], ["result", "test_job"]], "return_value": [["mock_controller", "return_value", "get_jobs", "return_value", "test_job"], ["mock_run", "return_value", "mock", "MagicMock", "stdout", "TEST_JOB_ID", "encode", "stderr", "TEST_JOB_ID", "encode", "returncode"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "wait_until_finished", "None"], ["mock_controller", "return_value", "wait_for_done", "assert_called_once"]], "test_job": [["mock_controller", "return_value", "get_jobs", "return_value", "test_job"], ["result", "test_job"]]}, "name": "test_start_sql_job_failed_to_run", "params": {"mock_controller": "", "mock_get_conn": "", "mock_provide_authorized_gcloud": "", "mock_run": "", "self": ""}, "params_descr": {"mock_controller": "", "mock_get_conn": "", "mock_provide_authorized_gcloud": "", "mock_run": "", "self": ""}, "params_occur": {"mock_controller": [["mock_controller", "return_value", "get_jobs", "return_value", "test_job"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "wait_until_finished", "None"], ["mock_controller", "return_value", "wait_for_done", "assert_called_once"]], "mock_get_conn": [["mock_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "wait_until_finished", "None"]], "mock_provide_authorized_gcloud": [], "mock_run": [["mock_run", "return_value", "mock", "MagicMock", "stdout", "TEST_JOB_ID", "encode", "stderr", "TEST_JOB_ID", "encode", "returncode"], ["mock_run", "assert_called_once_with", "TEST_SQL_QUERY", "capture_output", "True"]], "self": [["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"]]}, "params_p": {"args": [], "kwargs": [], "mock_controller": [["unittesmock.MagicMock", 0.09284796384055038]], "mock_get_conn": [["unittesmock.MagicMock", 0.2830393788181534]], "mock_provide_authorized_gcloud": [], "mock_run": [["Dict[str, Any]", 0.28615893250990365], ["unittesmock.MagicMock", 0.1962612492605937]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_sql_job_failed_to_run", "ret_exprs": [], "ret_type": "", "variables": {"on_new_job_callback": "", "result": "", "return_value": "", "test_job": ""}, "variables_p": {"on_new_job_callback": [["unittesmock.MagicMock", 0.1943781383470839], ["List[unittesmock.MagicMock]", 0.188816100530396]], "result": [["str", 0.30093511563159814], ["List[Tuple[str, ...]]", 0.2975093479616293], ["dict", 0.11001170169914105], ["Dict[str, Tuple]", 0.10389310920508343]], "return_value": [["str", 0.2793274071484329], ["Dict[str, Any]", 0.10445300129377233], ["Optional[bytes]", 0.09339839702426643], ["float", 0.09172954607818574], ["int", 0.09015312294954894]], "test_job": [["list", 0.16447556293903684], ["str", 0.15624428957159547], ["Dict[str, Union[Any, str]]", 0.11826397815334679], ["List[unittesmock.MagicMock]", 0.09450920702058031], ["Dict[str, Any]", 0.07026260576922726], ["Dict[str, str]", 0.0691470558487748]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1154, 4], [1166, 13]], "fn_var_ln": {"return_value": [[1155, 8], [1155, 29]]}, "fn_var_occur": {"return_value": [["mock_run", "return_value", "mock", "MagicMock", "stdout", "TEST_JOB_ID", "encode", "stderr", "TEST_JOB_ID", "encode", "returncode"]]}, "name": "test_start_sql_job", "params": {"mock_get_conn": "", "mock_provide_authorized_gcloud": "", "mock_run": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_provide_authorized_gcloud": "", "mock_run": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_provide_authorized_gcloud": [], "mock_run": [["mock_run", "return_value", "mock", "MagicMock", "stdout", "TEST_JOB_ID", "encode", "stderr", "TEST_JOB_ID", "encode", "returncode"]], "self": [["self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "mock", "MagicMock"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.31407698586579763], ["mock.Mock", 0.28320838278081695], ["tests.async_mock.MagicMock", 0.12969970004655473]], "mock_provide_authorized_gcloud": [["mock.MagicMock", 0.31407698586579763], ["mock.Mock", 0.28320838278081695], ["tests.async_mock.MagicMock", 0.12969970004655473]], "mock_run": [["Dict[str, Any]", 0.3519226000218195], ["unittesmock.MagicMock", 0.10228384159096782]], "self": []}, "q_name": "TestDataflowTemplateHook.test_start_sql_job", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["unittesmock.MagicMock", 0.3657941679645193]]}}], "name": "TestDataflowTemplateHook", "q_name": "TestDataflowTemplateHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[1169, 0], [1806, 47]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1170, 4], [1171, 40]], "fn_var_ln": {"mock_dataflow": [[1171, 8], [1171, 26]]}, "fn_var_occur": {"mock_dataflow": [["self", "mock_dataflow", "MagicMock"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_dataflow", "MagicMock"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"mock_dataflow": ""}, "variables_p": {"mock_dataflow": [["mock._Call", 0.22475701789243305], ["Dict[str, Tuple[str, Any]]", 0.1739654541302318], ["Union[unittesmock.AsyncMock, unittesmock.MagicMock]", 0.09477119251809588], ["unittesmock.MagicMock", 0.07739249829294043]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1173, 4], [1181, 9]], "fn_var_ln": {"mock_jobs": [[1174, 8], [1174, 17]]}, "fn_var_occur": {"mock_jobs": [["mock_jobs", "MagicMock"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "mock_jobs"], ["mock_jobs", "get", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"]]}, "name": "test_dataflow_job_init_with_job_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "mock_jobs"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "TEST_JOB_ID", "get_jobs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_init_with_job_id", "ret_exprs": [], "ret_type": "", "variables": {"mock_jobs": ""}, "variables_p": {"mock_jobs": [["unittesmock.MagicMock", 0.3134364971252783], ["str", 0.10868569129014152], ["mock.Mock", 0.08719203474616477]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1183, 4], [1200, 89]], "fn_var_ln": {"job": [[1184, 8], [1184, 11]], "mock_list": [[1186, 8], [1186, 17]]}, "fn_var_occur": {"job": [["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobStatus", "JOB_STATE_DONE"], ["mock_list", "return_value", "execute", "return_value", "job"]], "mock_list": [["mock_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list"], ["mock_list", "return_value", "execute", "return_value", "job"], ["mock_list", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"]]}, "name": "test_dataflow_job_init_without_job_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next", "return_value", "None"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "get_jobs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_init_without_job_id", "ret_exprs": [], "ret_type": "", "variables": {"job": "", "mock_list": ""}, "variables_p": {"job": [["str", 0.7556789348865682], ["Dict[str, Dict[str, Any]]", 0.13292542677406693], ["Dict[str, List[Any]]", 0.11139563833936487]], "mock_list": [["list", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1202, 4], [1246, 52]], "fn_var_ln": {"dataflow_job": [[1226, 8], [1226, 20]], "job": [[1203, 8], [1203, 11]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "wait_for_done"], ["dataflow_job", "get_jobs", "job", "job"]], "job": [["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "return_value", "execute", "return_value", "job", "job"], ["dataflow_job", "get_jobs", "job", "job"]]}, "name": "test_dataflow_job_wait_for_multiple_jobs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "return_value", "execute", "return_value", "job", "job"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next", "return_value", "None"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "True"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "assert_called_once_with", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "return_value", "execute", "assert_called_once_with", "num_retries"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_wait_for_multiple_jobs", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "job": ""}, "variables_p": {"dataflow_job": [], "job": [["str", 0.20100989755271542], ["List[str]", 0.19829635042944008], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.12321986252912068], ["Pattern[str]", 0.10167952796746237], ["Dict[str, list]", 0.09632721498629226], ["dict", 0.09412776285168824], ["google.protobuf.descriptor.Descriptor", 0.0916877874492374]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1261, 4], [1301, 40]], "fn_var_ln": {"dataflow_job": [[1290, 8], [1290, 20]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "wait_for_done"]]}, "name": "test_dataflow_job_wait_for_multiple_jobs_and_one_in_terminal_state", "params": {"exception_regex": "", "self": "", "state": ""}, "params_descr": {"exception_regex": "", "self": "", "state": ""}, "params_occur": {"exception_regex": [["pytest", "raises", "Exception", "match", "exception_regex"]], "self": [["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "return_value", "execute", "return_value", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE", "DataflowJobType", "JOB_TYPE_BATCH", "state"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next", "return_value", "None"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"]], "state": [["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "return_value", "execute", "return_value", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE", "DataflowJobType", "JOB_TYPE_BATCH", "state"]]}, "params_p": {"args": [], "exception_regex": [["str", 0.12111885663289693], ["int", 0.10949544162803267]], "kwargs": [], "self": [], "state": [["dict", 0.08394446124707106]]}, "q_name": "TestDataflowJob.test_dataflow_job_wait_for_multiple_jobs_and_one_in_terminal_state", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": ""}, "variables_p": {"dataflow_job": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1303, 4], [1340, 45]], "fn_var_ln": {"dataflow_job": [[1328, 8], [1328, 20]], "mock_jobs_list": [[1305, 8], [1305, 22]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "wait_for_done"]], "mock_jobs_list": [["mock_jobs_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list"], ["mock_jobs_list", "return_value", "execute", "return_value", "DataflowJobStatus", "JOB_STATE_RUNNING", "DataflowJobType", "JOB_TYPE_STREAMING"], ["mock_jobs_list", "call_count"]]}, "name": "test_dataflow_job_wait_for_multiple_jobs_and_streaming_jobs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock_jobs_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next", "return_value", "None"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_wait_for_multiple_jobs_and_streaming_jobs", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "mock_jobs_list": ""}, "variables_p": {"dataflow_job": [], "mock_jobs_list": [["Dict[str, Dict[Any, Any]]", 0.15820128309299283], ["Dict[Any, Union[int, str]]", 0.12014025594440055], ["Dict[str, bool]", 0.09332662832889912], ["Dict[str, Dict[str, Any]]", 0.09153666382679293], ["Dict[str, Union[Any, Any]]", 0.09109309638538157], ["List[Dict[str, Any]]", 0.09065791007675747], ["list", 0.08968640783057383]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1342, 4], [1382, 47]], "fn_var_ln": {"dataflow_job": [[1360, 8], [1360, 20]], "job": [[1343, 8], [1343, 11]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["dataflow_job", "wait_for_done"], ["dataflow_job", "get_jobs", "job"]], "job": [["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get", "return_value", "execute", "return_value", "job"], ["dataflow_job", "get_jobs", "job"]]}, "name": "test_dataflow_job_wait_for_single_jobs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get", "return_value", "execute", "return_value", "job"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next", "return_value", "None"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get", "return_value", "execute", "assert_called_once_with", "num_retries"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_wait_for_single_jobs", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "job": ""}, "variables_p": {"dataflow_job": [], "job": [["str", 0.20100989755271542], ["List[str]", 0.19829635042944008], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.12321986252912068], ["Pattern[str]", 0.10167952796746237], ["Dict[str, list]", 0.09632721498629226], ["dict", 0.09412776285168824], ["google.protobuf.descriptor.Descriptor", 0.0916877874492374]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1384, 4], [1414, 30]], "fn_var_ln": {"dataflow_job": [[1402, 8], [1402, 20]], "mock_jobs_list": [[1386, 8], [1386, 22]], "result": [[1412, 8], [1412, 14]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["result", "dataflow_job", "is_job_running"]], "mock_jobs_list": [["mock_jobs_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list"], ["mock_jobs_list", "return_value", "execute", "return_value"]], "result": [["result", "dataflow_job", "is_job_running"], ["result", "False"]]}, "name": "test_dataflow_job_is_job_running_with_no_job", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock_jobs_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next", "return_value", "None"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_is_job_running_with_no_job", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "mock_jobs_list": "", "result": ""}, "variables_p": {"dataflow_job": [], "mock_jobs_list": [["Dict[str, Dict[Any, Any]]", 0.15820128309299283], ["Dict[Any, Union[int, str]]", 0.12014025594440055], ["Dict[str, bool]", 0.09332662832889912], ["Dict[str, Dict[str, Any]]", 0.09153666382679293], ["Dict[str, Union[Any, Any]]", 0.09109309638538157], ["List[Dict[str, Any]]", 0.09065791007675747], ["list", 0.08968640783057383]], "result": [["Dict[str, Any]", 0.16670712085464315], ["List[Tuple[int, float]]", 0.16062339250621777], ["List[Dict[str, str]]", 0.11055882034821535], ["List[str]", 0.11055882034821535], ["bool", 0.10629977158553877], ["google.protobuf.Any_pb2.Any", 0.08174619028827297]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1435, 4], [1451, 40]], "fn_var_ln": {"dataflow_job": [[1439, 8], [1439, 20]], "job": [[1438, 8], [1438, 11]], "result": [[1450, 8], [1450, 14]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"], ["result", "dataflow_job", "_check_dataflow_job_state", "job"]], "job": [["job", "job_type", "job_state"], ["result", "dataflow_job", "_check_dataflow_job_state", "job"]], "result": [["result", "dataflow_job", "_check_dataflow_job_state", "job"], ["result", "expected_result"]]}, "name": "test_check_dataflow_job_state_wait_until_finished", "params": {"expected_result": "", "job_state": "", "job_type": "", "self": "", "wait_until_finished": ""}, "params_descr": {"expected_result": "", "job_state": "", "job_type": "", "self": "", "wait_until_finished": ""}, "params_occur": {"expected_result": [["result", "expected_result"]], "job_state": [["job", "job_type", "job_state"]], "job_type": [["job", "job_type", "job_state"]], "self": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"]], "wait_until_finished": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"]]}, "params_p": {"args": [], "expected_result": [["dict", 0.2787196056237302], ["Optional[Dict[str, Any]]", 0.1229905984476169], ["List[Dict[str, Any]]", 0.10253911302819729], ["bool", 0.09933214682075608], ["Dict[str, Type[Any]]", 0.07863361235406939]], "job_state": [["Any", 0.10559138275332787], ["Sequence", 0.0994789174055357]], "job_type": [["Any", 0.10559138275332787], ["Sequence", 0.0994789174055357]], "kwargs": [], "self": [], "wait_until_finished": [["Dict[str, Any]", 0.24243979678288408], ["str", 0.08972008454116792], ["dict", 0.08972008454116792]]}, "q_name": "TestDataflowJob.test_check_dataflow_job_state_wait_until_finished", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "job": "", "result": ""}, "variables_p": {"dataflow_job": [], "job": [["int", 0.29969910171731795], ["Dict[int, Any]", 0.18950683099438942], ["dict", 0.10131768192885121]], "result": [["list", 0.19193366456634003], ["Dict[int, str]", 0.11932103969416516]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1466, 4], [1480, 40]], "fn_var_ln": {"dataflow_job": [[1468, 8], [1468, 20]], "job": [[1467, 8], [1467, 11]], "result": [[1479, 8], [1479, 14]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"], ["result", "dataflow_job", "_check_dataflow_job_state", "job"]], "job": [["job", "job_state"], ["result", "dataflow_job", "_check_dataflow_job_state", "job"]], "result": [["result", "dataflow_job", "_check_dataflow_job_state", "job"], ["result", "expected_result"]]}, "name": "test_check_dataflow_job_state_without_job_type", "params": {"expected_result": "", "job_state": "", "self": "", "wait_until_finished": ""}, "params_descr": {"expected_result": "", "job_state": "", "self": "", "wait_until_finished": ""}, "params_occur": {"expected_result": [["result", "expected_result"]], "job_state": [["job", "job_state"]], "self": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"]], "wait_until_finished": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"]]}, "params_p": {"args": [], "expected_result": [["bool", 0.11968333187974811], ["int", 0.07791363800964943]], "job_state": [["bool", 0.20541545720353574], ["str", 0.10270772860176787], ["int", 0.10270772860176787], ["List[str]", 0.09691780277087592]], "kwargs": [], "self": [], "wait_until_finished": [["dict", 0.0844905986703468]]}, "q_name": "TestDataflowJob.test_check_dataflow_job_state_without_job_type", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "job": "", "result": ""}, "variables_p": {"dataflow_job": [], "job": [["int", 0.44910590381455723], ["dict", 0.11754656771540134], ["str", 0.09958175758993837], ["Dict[str, int]", 0.0961681943052248]], "result": [["list", 0.19193366456634003], ["Dict[int, str]", 0.11932103969416516]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1537, 4], [1550, 55]], "fn_var_ln": {"dataflow_job": [[1539, 8], [1539, 20]], "job": [[1538, 8], [1538, 11]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_check_dataflow_job_state", "job"]], "job": [["job", "job_type", "job_state"], ["dataflow_job", "_check_dataflow_job_state", "job"]]}, "name": "test_check_dataflow_job_state_terminal_state", "params": {"exception_regex": "", "job_state": "", "job_type": "", "self": ""}, "params_descr": {"exception_regex": "", "job_state": "", "job_type": "", "self": ""}, "params_occur": {"exception_regex": [["pytest", "raises", "Exception", "match", "exception_regex"]], "job_state": [["job", "job_type", "job_state"]], "job_type": [["job", "job_type", "job_state"]], "self": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"]]}, "params_p": {"args": [], "exception_regex": [["str", 1.0]], "job_state": [["bool", 0.18717498858941134], ["str", 0.17892246356948768], ["Optional[str]", 0.12284326321015514], ["type", 0.11316876390176561], ["Dict[str, Any]", 0.08937430086392052]], "job_type": [["bool", 0.18717498858941134], ["str", 0.17892246356948768], ["Optional[str]", 0.12284326321015514], ["type", 0.11316876390176561], ["Dict[str, Any]", 0.08937430086392052]], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_check_dataflow_job_state_terminal_state", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "job": ""}, "variables_p": {"dataflow_job": [], "job": [["int", 0.7187959238378752], ["List[int]", 0.09256797317687988]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1552, 4], [1588, 80]], "fn_var_ln": {"dataflow_job": [[1566, 8], [1566, 20]], "get_method": [[1554, 8], [1554, 18]], "mock_jobs": [[1553, 8], [1553, 17]], "mock_update": [[1581, 8], [1581, 19]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["dataflow_job", "cancel"]], "get_method": [["get_method", "mock_jobs", "return_value", "get"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_RUNNING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_PENDING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_QUEUED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DRAINING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_STOPPED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["get_method", "return_value", "execute", "assert_called_with", "num_retries"]], "mock_jobs": [["mock_jobs", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs"], ["get_method", "mock_jobs", "return_value", "get"], ["mock_jobs", "return_value", "list_next", "return_value", "None"], ["mock_update", "mock_jobs", "return_value", "update"]], "mock_update": [["mock_update", "mock_jobs", "return_value", "update"], ["mock_update", "assert_called_once_with", "body", "jobId", "location", "TEST_LOCATION", "projectId"], ["mock_update", "return_value", "execute", "assert_called_once_with", "num_retries"]]}, "name": "test_dataflow_job_cancel_job", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock_jobs", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_cancel_job", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "get_method": "", "mock_jobs": "", "mock_update": ""}, "variables_p": {"dataflow_job": [], "get_method": [], "mock_jobs": [["str", 0.3740251451730614], ["Dict[str, Union[Any, Any, str]]", 0.28947615750825106], ["Dict[str, List[Any]]", 0.1127732700963455], ["list", 0.07382453128227666], ["Dict[str, Union[Any, Any]]", 0.07245782090695234]], "mock_update": [["Dict[str, Dict[str, Any]]", 0.19985512221032345], ["str", 0.17249360479472917], ["Dict[str, List[Any]]", 0.1370535580823025], ["Dict[str, Any]", 0.12308310812749557], ["list", 0.09839908890893144], ["Dict[str, Union[Any, Any]]", 0.0926487036674267], ["List[Tuple[str, Any]]", 0.08820520921922897]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1592, 4], [1632, 9]], "fn_var_ln": {"dataflow_job": [[1604, 8], [1604, 20]], "get_method": [[1594, 8], [1594, 18]], "mock_jobs": [[1593, 8], [1593, 17]], "mock_update": [[1620, 8], [1620, 19]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "cancel_timeout"], ["dataflow_job", "cancel"]], "get_method": [["get_method", "mock_jobs", "return_value", "get"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["get_method", "return_value", "execute", "assert_called_with", "num_retries"]], "mock_jobs": [["mock_jobs", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs"], ["get_method", "mock_jobs", "return_value", "get"], ["mock_jobs", "return_value", "list_next", "return_value", "None"], ["mock_update", "mock_jobs", "return_value", "update"]], "mock_update": [["mock_update", "mock_jobs", "return_value", "update"], ["mock_update", "assert_called_once_with", "body", "jobId", "location", "TEST_LOCATION", "projectId"], ["mock_update", "return_value", "execute", "assert_called_once_with", "num_retries"]]}, "name": "test_dataflow_job_cancel_job_cancel_timeout", "params": {"mock_sleep": "", "mock_timeout": "", "self": ""}, "params_descr": {"mock_sleep": "", "mock_timeout": "", "self": ""}, "params_occur": {"mock_sleep": [["mock_sleep", "assert_has_calls", "mock", "call", "mock", "call", "mock", "call"]], "mock_timeout": [["mock_timeout", "assert_called_once_with", "seconds", "error_message"]], "self": [["mock_jobs", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "cancel_timeout"]]}, "params_p": {"args": [], "kwargs": [], "mock_sleep": [["unittesmock.MagicMock", 0.5278746284424299]], "mock_timeout": [["unittesmock.MagicMock", 0.19404242690058118], ["mock.MagicMock", 0.11727737703326166], ["mock.Mock", 0.0840222162143706]], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_cancel_job_cancel_timeout", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "get_method": "", "mock_jobs": "", "mock_update": ""}, "variables_p": {"dataflow_job": [], "get_method": [], "mock_jobs": [["str", 0.3740251451730614], ["Dict[str, Union[Any, Any, str]]", 0.28947615750825106], ["Dict[str, List[Any]]", 0.1127732700963455], ["list", 0.07382453128227666], ["Dict[str, Union[Any, Any]]", 0.07245782090695234]], "mock_update": [["Dict[str, Dict[str, Any]]", 0.19985512221032345], ["str", 0.17249360479472917], ["Dict[str, List[Any]]", 0.1370535580823025], ["Dict[str, Any]", 0.12308310812749557], ["list", 0.09839908890893144], ["Dict[str, Union[Any, Any]]", 0.0926487036674267], ["List[Tuple[str, Any]]", 0.08820520921922897]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1643, 4], [1684, 80]], "fn_var_ln": {"dataflow_job": [[1659, 8], [1659, 20]], "get_method": [[1650, 8], [1650, 18]], "job": [[1644, 8], [1644, 11]], "job_list_nest_method": [[1653, 8], [1653, 28]], "mock_update": [[1677, 8], [1677, 19]], "return_value": [[1657, 8], [1657, 41]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "drain_pipeline", "drain_pipeline", "cancel_timeout", "None"], ["dataflow_job", "cancel"]], "get_method": [["get_method", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get"], ["get_method", "return_value", "execute", "return_value", "job"], ["get_method", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["get_method", "return_value", "execute", "assert_called_once_with", "num_retries"]], "job": [["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobStatus", "JOB_STATE_RUNNING", "job_type"], ["get_method", "return_value", "execute", "return_value", "job"]], "job_list_nest_method": [["job_list_nest_method", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next"], ["job_list_nest_method", "return_value", "None"]], "mock_update": [["mock_update", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "update"], ["mock_update", "assert_called_once_with", "body", "requested_state", "jobId", "location", "TEST_LOCATION", "projectId"], ["mock_update", "return_value", "execute", "assert_called_once_with", "num_retries"]], "return_value": [["get_method", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get"], ["get_method", "return_value", "execute", "return_value", "job"], ["job_list_nest_method", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next"], ["job_list_nest_method", "return_value", "None"], ["get_method", "return_value", "execute", "assert_called_once_with", "num_retries"], ["mock_update", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "update"], ["mock_update", "return_value", "execute", "assert_called_once_with", "num_retries"]]}, "name": "test_dataflow_job_cancel_or_drain_job", "params": {"drain_pipeline": "", "job_type": "", "requested_state": "", "self": ""}, "params_descr": {"drain_pipeline": "", "job_type": "", "requested_state": "", "self": ""}, "params_occur": {"drain_pipeline": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "drain_pipeline", "drain_pipeline", "cancel_timeout", "None"]], "job_type": [["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobStatus", "JOB_STATE_RUNNING", "job_type"]], "requested_state": [["mock_update", "assert_called_once_with", "body", "requested_state", "jobId", "location", "TEST_LOCATION", "projectId"]], "self": [["get_method", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get"], ["job_list_nest_method", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list_next"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "drain_pipeline", "drain_pipeline", "cancel_timeout", "None"], ["mock_update", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "update"]]}, "params_p": {"args": [], "drain_pipeline": [["Dict[str, Any]", 0.2103473191069082]], "job_type": [["str", 0.5938716650934904], ["Optional[str]", 0.10308305057946712]], "kwargs": [], "requested_state": [["str", 0.9088791612538201], ["List[str]", 0.09112083874617974]], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_cancel_or_drain_job", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "get_method": "", "job": "", "job_list_nest_method": "", "mock_update": "", "return_value": ""}, "variables_p": {"dataflow_job": [], "get_method": [["dict", 0.19463107615317915], ["Optional[Any]", 0.10153640924997992], ["bool", 0.09885792900017176]], "job": [["Dict[str, Union[float, str]]", 0.42909025736464307], ["list", 0.1744001003297041], ["Dict[str, Union[Any, Any, Any, Any]]", 0.12064999080971545], ["Dict[str, List[str]]", 0.10220886088137414], ["str", 0.08869167552972379], ["bool", 0.08495911508483944]], "job_list_nest_method": [["str", 0.2264377151446161], ["list", 0.1950950094218789], ["Final", 0.11247211066316264], ["List[Tuple[str, Any, Any]]", 0.10822888912270283], ["dict", 0.10451558678640131], ["Dict[str, str]", 0.08687088380317821], ["List[Tuple[str, str, str, str]]", 0.07903164969162303]], "mock_update": [["Dict[str, Union[Any, Any, str]]", 0.21285981249225647], ["Dict[str, Dict[Any, Any]]", 0.13938399205354352], ["Dict[str, List[Any]]", 0.11938973984311235], ["str", 0.10229226015093139], ["Dict[str, Any]", 0.09141561304773163], ["Dict[str, Union[Any, str]]", 0.09076589299128858], ["list", 0.07988128476892785], ["Dict[str, Union[Any, Any]]", 0.07967800756781271]], "return_value": [["str", 0.8076757537589202], ["Dict[str, Union[Any, str]]", 0.09830469158746954], ["Dict[str, str]", 0.09401955465361031]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1686, 4], [1713, 57]], "fn_var_ln": {"dataflow_job": [[1698, 8], [1698, 20]], "get_method": [[1688, 8], [1688, 18]], "mock_jobs": [[1687, 8], [1687, 17]]}, "fn_var_occur": {"dataflow_job": [["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["dataflow_job", "cancel"]], "get_method": [["get_method", "mock_jobs", "return_value", "get"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DONE", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_UPDATED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DRAINED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_FAILED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["get_method", "return_value", "execute", "assert_called_with", "num_retries"]], "mock_jobs": [["mock_jobs", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs"], ["get_method", "mock_jobs", "return_value", "get"], ["mock_jobs", "return_value", "list_next", "return_value", "None"], ["mock_jobs", "return_value", "update", "assert_not_called"]]}, "name": "test_dataflow_job_cancel_job_no_running_jobs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock_jobs", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_dataflow_job_cancel_job_no_running_jobs", "ret_exprs": [], "ret_type": "", "variables": {"dataflow_job": "", "get_method": "", "mock_jobs": ""}, "variables_p": {"dataflow_job": [], "get_method": [], "mock_jobs": [["str", 0.3740251451730614], ["Dict[str, Union[Any, Any, str]]", 0.28947615750825106], ["Dict[str, List[Any]]", 0.1127732700963455], ["list", 0.07382453128227666], ["Dict[str, Union[Any, Any]]", 0.07245782090695234]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1715, 4], [1749, 39]], "fn_var_ln": {"jobs_controller": [[1737, 8], [1737, 23]], "mock_list": [[1717, 8], [1717, 17]], "mock_list_next": [[1725, 8], [1725, 22]], "result": [[1743, 8], [1743, 14]], "return_value": [[1735, 8], [1735, 35]]}, "fn_var_occur": {"jobs_controller": [["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["result", "list", "jobs_controller", "_fetch_list_job_messages_responses", "TEST_JOB_ID"]], "mock_list": [["mock_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "messages", "return_value", "list"], ["mock_list", "return_value", "execute", "return_value"], ["mock_list", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"], ["mock_list_next", "assert_called_once_with", "previous_request", "mock_list", "return_value", "previous_response"]], "mock_list_next": [["mock_list_next", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "messages", "return_value", "list_next"], ["mock_list_next", "return_value", "None"], ["mock_list_next", "assert_called_once_with", "previous_request", "mock_list", "return_value", "previous_response"]], "result": [["result", "list", "jobs_controller", "_fetch_list_job_messages_responses", "TEST_JOB_ID"]], "return_value": [["mock_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "messages", "return_value", "list"], ["mock_list_next", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "messages", "return_value", "list_next"], ["mock_list", "return_value", "execute", "return_value"], ["mock_list_next", "return_value", "None"], ["mock_list_next", "assert_called_once_with", "previous_request", "mock_list", "return_value", "previous_response"]]}, "name": "test_fetch_list_job_messages_responses", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["mock_list", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "messages", "return_value", "list"], ["mock_list_next", "self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "messages", "return_value", "list_next"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_fetch_list_job_messages_responses", "ret_exprs": [], "ret_type": "", "variables": {"jobs_controller": "", "mock_list": "", "mock_list_next": "", "result": "", "return_value": ""}, "variables_p": {"jobs_controller": [], "mock_list": [["list", 0.8153335399945312], ["List[str]", 0.09523307822704666], ["List[Dict[str, Any]]", 0.08943338177842235]], "mock_list_next": [["Dict[str, str]", 0.3027039280172393], ["Dict[str, List[Any]]", 0.219290423971994], ["Dict[str, Dict[str, str]]", 0.10603878410159581], ["Dict[str, Any]", 0.1028103925343371], ["List[Dict[str, str]]", 0.09203853807223232], ["str", 0.0899734930435686], ["dict", 0.08714444025903288]], "result": [["list", 0.3110658643282238], ["str", 0.294609494299893], ["List[Dict[str, str]]", 0.10374800205780295], ["Iterator[None]", 0.09871431200744439]], "return_value": [["list", 0.7161924763819788], ["Dict[str, Any]", 0.19051054598581568]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1751, 4], [1770, 27]], "fn_var_ln": {"jobs_controller": [[1763, 8], [1763, 23]], "result": [[1769, 8], [1769, 14]]}, "fn_var_occur": {"jobs_controller": [["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["result", "jobs_controller", "_fetch_all_jobs"]], "result": [["result", "jobs_controller", "_fetch_all_jobs"]]}, "name": "test_fetch_all_jobs_when_no_jobs_returned", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "return_value", "execute", "return_value"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflowJob.test_fetch_all_jobs_when_no_jobs_returned", "ret_exprs": [], "ret_type": "", "variables": {"jobs_controller": "", "result": ""}, "variables_p": {"jobs_controller": [], "result": [["List[str]", 0.3996372310086056], ["List[Tuple[str, int]]", 0.30922965919560735], ["dict", 0.10711427345578199], ["Type[Callable[..., Any]]", 0.09596529426872404], ["list", 0.08805354207128095]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1773, 4], [1788, 51]], "fn_var_ln": {"jobs_controller": [[1780, 8], [1780, 23]], "result": [[1786, 8], [1786, 14]], "return_value": [[1774, 8], [1774, 41]]}, "fn_var_occur": {"jobs_controller": [["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["result", "jobs_controller", "fetch_job_messages_by_id", "TEST_JOB_ID"]], "result": [["result", "jobs_controller", "fetch_job_messages_by_id", "TEST_JOB_ID"]], "return_value": [["mock_fetch_responses", "return_value", "iter"]]}, "name": "test_fetch_job_messages_by_id", "params": {"mock_fetch_responses": "", "self": ""}, "params_descr": {"mock_fetch_responses": "", "self": ""}, "params_occur": {"mock_fetch_responses": [["mock_fetch_responses", "return_value", "iter"], ["mock_fetch_responses", "assert_called_once_with", "job_id", "TEST_JOB_ID"]], "self": [["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_fetch_responses": [["unittesmock.MagicMock", 0.810354919526737]], "self": []}, "q_name": "TestDataflowJob.test_fetch_job_messages_by_id", "ret_exprs": [], "ret_type": "", "variables": {"jobs_controller": "", "result": "", "return_value": ""}, "variables_p": {"jobs_controller": [], "result": [["int", 0.21977152053266166], ["str", 0.19521808741934016], ["uuid.UUID", 0.09511015078075159]], "return_value": [["Dict[str, Union[Any, Any, Any]]", 0.19719084437828763], ["Dict[str, Dict[str, Any]]", 0.1688542905593718], ["List[Dict[str, Any]]", 0.16633223408439313], ["str", 0.09066329919542032], ["List[Dict[str, str]]", 0.08315558468255171], ["Dict[str, Union[int, str]]", 0.07847727377992302], ["Dict[str, int]", 0.07797503341674109]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1791, 4], [1806, 47]], "fn_var_ln": {"jobs_controller": [[1798, 8], [1798, 23]], "result": [[1804, 8], [1804, 14]], "return_value": [[1792, 8], [1792, 41]]}, "fn_var_occur": {"jobs_controller": [["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["result", "jobs_controller", "fetch_job_autoscaling_events_by_id", "TEST_JOB_ID"]], "result": [["result", "jobs_controller", "fetch_job_autoscaling_events_by_id", "TEST_JOB_ID"]], "return_value": [["mock_fetch_responses", "return_value", "iter"]]}, "name": "test_fetch_job_autoscaling_events_by_id", "params": {"mock_fetch_responses": "", "self": ""}, "params_descr": {"mock_fetch_responses": "", "self": ""}, "params_occur": {"mock_fetch_responses": [["mock_fetch_responses", "return_value", "iter"], ["mock_fetch_responses", "assert_called_once_with", "job_id", "TEST_JOB_ID"]], "self": [["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_fetch_responses": [["unittesmock.MagicMock", 0.7979519362874196]], "self": []}, "q_name": "TestDataflowJob.test_fetch_job_autoscaling_events_by_id", "ret_exprs": [], "ret_type": "", "variables": {"jobs_controller": "", "result": "", "return_value": ""}, "variables_p": {"jobs_controller": [], "result": [["int", 0.17749397482661194], ["bytes", 0.1409952133556752], ["list", 0.12178892750645648], ["Dict[str, Tuple[Any, Any]]", 0.113183160108793], ["Dict[str, Any]", 0.09237486931796983], ["Dict[str, Union[int, str]]", 0.08970458574887659], ["List[str]", 0.08204563809533362], ["Dict[str, str]", 0.0783034383249555]], "return_value": [["Dict[str, Union[Any, Any, Any]]", 0.19719084437828763], ["Dict[str, Dict[str, Any]]", 0.1688542905593718], ["List[Dict[str, Any]]", 0.16633223408439313], ["str", 0.09066329919542032], ["List[Dict[str, str]]", 0.08315558468255171], ["Dict[str, Union[int, str]]", 0.07847727377992302], ["Dict[str, int]", 0.07797503341674109]]}}], "name": "TestDataflowJob", "q_name": "TestDataflowJob", "variables": {}, "variables_p": {}}, {"cls_lc": [[1875, 0], [1941, 88]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1890, 8], [1892, 33]], "fn_var_ln": {"found_job_id": [[1892, 12], [1892, 24]]}, "fn_var_occur": {"found_job_id": [["found_job_id", "None"], ["found_job_id", "job_id"]]}, "name": "callback", "params": {"job_id": ""}, "params_descr": {"job_id": ""}, "params_occur": {"job_id": [["found_job_id", "job_id"]]}, "params_p": {"args": [], "job_id": [["str", 0.8168395842820341]], "kwargs": [], "self": []}, "q_name": "TestDataflow.test_data_flow_valid_job_id.<locals>.callback", "ret_exprs": [], "ret_type": "", "variables": {"found_job_id": ""}, "variables_p": {"found_job_id": [["Optional[str]", 0.43580604658974226], ["str", 0.37406873532652624], ["ImportError", 0.10081655778412343], ["int", 0.08930866029960802]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1885, 4], [1900, 42]], "fn_var_ln": {"cmd": [[1887, 8], [1887, 11]], "echos": [[1886, 8], [1886, 13]], "found_job_id": [[1888, 8], [1888, 20]], "mock_log": [[1894, 8], [1894, 16]]}, "fn_var_occur": {"cmd": [["run_beam_command", "cmd", "cmd", "process_line_callback", "process_line_and_extract_dataflow_job_id_callback", "callback", "log", "mock_log"]], "echos": [], "found_job_id": [["found_job_id", "TEST_JOB_ID"]], "mock_log": [["mock_log", "MagicMock"], ["run_beam_command", "cmd", "cmd", "process_line_callback", "process_line_and_extract_dataflow_job_id_callback", "callback", "log", "mock_log"]]}, "name": "test_data_flow_valid_job_id", "params": {"log": "", "self": ""}, "params_descr": {"log": "", "self": ""}, "params_occur": {"log": [["run_beam_command", "cmd", "cmd", "process_line_callback", "process_line_and_extract_dataflow_job_id_callback", "callback", "log", "mock_log"]], "self": []}, "params_p": {"args": [], "kwargs": [], "log": [["int", 0.10442301348123231], ["tuple", 0.09950303917302288], ["Optional[Exception]", 0.0975112767201332]], "self": []}, "q_name": "TestDataflow.test_data_flow_valid_job_id", "ret_exprs": [], "ret_type": "", "variables": {"cmd": "", "echos": "", "found_job_id": "", "mock_log": ""}, "variables_p": {"cmd": [["dict", 0.08909345971995553], ["list", 0.08310469885907522]], "echos": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "found_job_id": [["str", 0.4126246703068145], ["Dict[str, int]", 0.3829214804030714], ["int", 0.10301357355925855], ["Dict[int, Tuple[str, str]]", 0.1014402757308555]], "mock_log": [["mock.MagicMock", 0.08405495454239363]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1906, 8], [1908, 33]], "fn_var_ln": {"found_job_id": [[1908, 12], [1908, 24]]}, "fn_var_occur": {"found_job_id": [["found_job_id", "None"], ["found_job_id", "job_id"]]}, "name": "callback", "params": {"job_id": ""}, "params_descr": {"job_id": ""}, "params_occur": {"job_id": [["found_job_id", "job_id"]]}, "params_p": {"args": [], "job_id": [["str", 0.8168395842820341]], "kwargs": [], "self": []}, "q_name": "TestDataflow.test_data_flow_missing_job_id.<locals>.callback", "ret_exprs": [], "ret_type": "", "variables": {"found_job_id": ""}, "variables_p": {"found_job_id": [["Optional[str]", 0.43580604658974226], ["str", 0.37406873532652624], ["ImportError", 0.10081655778412343], ["int", 0.08930866029960802]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1902, 4], [1916, 35]], "fn_var_ln": {"cmd": [[1903, 8], [1903, 11]], "found_job_id": [[1904, 8], [1904, 20]], "log": [[1910, 8], [1910, 11]]}, "fn_var_occur": {"cmd": [["run_beam_command", "cmd", "cmd", "process_line_callback", "process_line_and_extract_dataflow_job_id_callback", "callback", "log", "log"]], "found_job_id": [["found_job_id", "None"]], "log": [["log", "MagicMock"], ["run_beam_command", "cmd", "cmd", "process_line_callback", "process_line_and_extract_dataflow_job_id_callback", "callback", "log", "log"]]}, "name": "test_data_flow_missing_job_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflow.test_data_flow_missing_job_id", "ret_exprs": [], "ret_type": "", "variables": {"cmd": "", "found_job_id": "", "log": ""}, "variables_p": {"cmd": [["int", 0.08321847413032242], ["str", 0.08321847413032242], ["bool", 0.08144188355293334], ["Pattern[str]", 0.07460861192562991]], "found_job_id": [["str", 0.43595136802506584], ["Dict[str, int]", 0.25589998976870815], ["Pattern[str]", 0.1112478496010488], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.10326337750386888]], "log": [["unittesmock.MagicMock", 0.25717918949002855], ["mock.Mock", 0.09721281256048095]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1932, 8], [1934, 23]], "fn_var_ln": {"return_code": [[1933, 12], [1933, 33]]}, "fn_var_occur": {"return_code": [["mock_proc", "return_code"]]}, "name": "poll_resp_error", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataflow.test_dataflow_wait_for_done_logging.<locals>.poll_resp_error", "ret_exprs": ["return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"return_code": ""}, "variables_p": {"return_code": [["str", 0.6283784616689563], ["int", 0.29048974269188477], ["frozenset[bytes]", 0.08113179563915898]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1920, 4], [1941, 88]], "fn_var_ln": {"info": [[1922, 8], [1922, 25]], "mock_logging": [[1921, 8], [1921, 20]], "mock_proc": [[1924, 8], [1924, 17]], "mock_proc_poll": [[1929, 8], [1929, 22]], "mock_stderr_fd": [[1927, 8], [1927, 22]], "poll": [[1937, 8], [1937, 22]], "return_value": [[1938, 8], [1938, 31]], "side_effect": [[1936, 8], [1936, 34]], "stderr": [[1925, 8], [1925, 24]], "warning": [[1923, 8], [1923, 28]]}, "fn_var_occur": {"info": [["mock_logging", "info", "assert_called_once_with"]], "mock_logging": [["run_beam_command", "cmd", "log", "mock_logging"], ["mock_logging", "info", "assert_called_once_with"]], "mock_proc": [["mock_proc", "poll", "mock_proc_poll"], ["mock_popen", "return_value", "mock_proc"]], "mock_proc_poll": [["mock_proc_poll", "side_effect", "None", "poll_resp_error"], ["mock_proc", "poll", "mock_proc_poll"]], "mock_stderr_fd": [], "poll": [["mock_proc", "poll", "mock_proc_poll"]], "return_value": [["mock_popen", "return_value", "mock_proc"]], "side_effect": [["mock_proc_poll", "side_effect", "None", "poll_resp_error"]], "stderr": [], "warning": []}, "name": "test_dataflow_wait_for_done_logging", "params": {"mock_popen": "", "mock_select": "", "self": ""}, "params_descr": {"mock_popen": "", "mock_select": "", "self": ""}, "params_occur": {"mock_popen": [["mock_popen", "return_value", "mock_proc"]], "mock_select": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_popen": [["unittesmock.MagicMock", 0.669006335732448]], "mock_select": [["unittesmock.MagicMock", 0.39796326489184825], ["mock.MagicMock", 0.09752080516659024], ["mock.Mock", 0.045315171022461825]], "self": []}, "q_name": "TestDataflow.test_dataflow_wait_for_done_logging", "ret_exprs": [], "ret_type": "", "variables": {"info": "", "mock_logging": "", "mock_proc": "", "mock_proc_poll": "", "mock_stderr_fd": "", "poll": "", "return_value": "", "side_effect": "", "stderr": "", "warning": ""}, "variables_p": {"info": [["str", 0.2100890887005189], ["Dict[str, Union[Any, Any, str]]", 0.20414743601519916], ["Dict[str, List[Any]]", 0.10708465743434673], ["list", 0.10274800727607404], ["List[Tuple[str, Any]]", 0.10120540825444312], ["Dict[str, str]", 0.0927333879086918], ["Optional[bytes]", 0.08676999595918441]], "mock_logging": [["unittesmock.MagicMock", 0.18822239091085435], ["mock.Mock", 0.11489178903587284], ["list", 0.11027467007293675], ["Dict[str, Any]", 0.08853546435792506]], "mock_proc": [["unittesmock.MagicMock", 0.1569732943614891], ["Dict[str, int]", 0.07533330201595537]], "mock_proc_poll": [["Dict[str, Union[int, str]]", 0.11227811409827089], ["unittesmock.MagicMock", 0.09252552697057281]], "mock_stderr_fd": [["Dict[str, Any]", 0.19999999999999996], ["str", 0.19999999999999996], ["Dict[str, Union[Any, str]]", 0.09999999999999998], ["Dict[str, Dict[str, str]]", 0.09999999999999998], ["dict", 0.09999999999999998], ["Dict[str, Union[Any, Any]]", 0.09999999999999998], ["Dict[str, Dict[str, Any]]", 0.09999999999999998]], "poll": [["str", 0.4486985846107901], ["property", 0.14874501005132026], ["list", 0.08387036581138226], ["List[Dict[str, str]]", 0.05030744996949173]], "return_value": [["List[Dict[str, Any]]", 0.2090878190984516], ["Dict[str, Union[Any, Any]]", 0.16535474014528323], ["Dict[str, Union[Any, Any, Any]]", 0.12442092888495747], ["int", 0.08725076544364417], ["str", 0.08278297953672678], ["unittesmock.MagicMock", 0.07479431670285544], ["Dict[str, Union[int, str]]", 0.07185041432581647], ["Dict[str, int]", 0.07083345910551045]], "side_effect": [["int", 0.25197670643907877], ["Tuple[Any, Any]", 0.10247111207062942], ["List['Book']", 0.09595889107958061], ["float", 0.09079036468044911], ["bool", 0.09079036468044911], ["List[str]", 0.08299817380578052]], "stderr": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "warning": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "name": "TestDataflow", "q_name": "TestDataflow", "variables": {}, "variables_p": {}}, {"cls_lc": [[1954, 0], [1988, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1955, 4], [1957, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAsyncHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1960, 4], [1963, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAsyncHook.hook", "ret_exprs": ["return AsyncDataflowHook( gcp_conn_id=TEST_PROJECT_ID,)"], "ret_type": "", "ret_type_p": [["str", 0.31361326793844463], ["bool", 0.11677528834793585]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1967, 4], [1988, 9]], "fn_var_ln": {"client": [[1968, 8], [1968, 14]], "request": [[1976, 8], [1976, 15]]}, "fn_var_occur": {"client": [["client", "initialize_client_mock", "return_value"], ["make_mock_awaitable", "client", "get_job", "None"], ["client", "get_job", "assert_called_once_with", "request", "request"]], "request": [["request", "GetJobRequest", "dict", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "view", "JobView", "JOB_VIEW_SUMMARY"], ["client", "get_job", "assert_called_once_with", "request", "request"]]}, "name": "test_get_job", "params": {"hook": "", "initialize_client_mock": "", "make_mock_awaitable": "", "self": ""}, "params_descr": {"hook": "", "initialize_client_mock": "", "make_mock_awaitable": "", "self": ""}, "params_occur": {"hook": [["hook", "get_job", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION"]], "initialize_client_mock": [["client", "initialize_client_mock", "return_value"], ["initialize_client_mock", "assert_called_once"]], "make_mock_awaitable": [["make_mock_awaitable", "client", "get_job", "None"]], "self": []}, "params_p": {"args": [], "hook": [["Callable", 0.08892101645972611]], "initialize_client_mock": [["unittesmock.MagicMock", 0.2958224355019868]], "kwargs": [], "make_mock_awaitable": [["unittesmock.MagicMock", 0.12424268232686207], ["mock.MagicMock", 0.06255214110949439]], "self": []}, "q_name": "TestAsyncHook.test_get_job", "ret_exprs": [], "ret_type": "", "variables": {"client": "", "request": ""}, "variables_p": {"client": [["unittesmock.MagicMock", 0.19580751135117835]], "request": [["Optional[str]", 0.1749895017320343], ["Dict[str, int]", 0.0930404705276519]]}}], "name": "TestAsyncHook", "q_name": "TestAsyncHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1946, 4], [1949, 33]], "fn_var_ln": {"f": [[1947, 8], [1947, 9]], "return_value": [[1949, 8], [1949, 29]]}, "fn_var_occur": {"f": [["f", "Future"], ["f", "set_result", "return_value"], ["mock_obj", "return_value", "f"]], "return_value": [["f", "set_result", "return_value"], ["mock_obj", "return_value", "f"]]}, "name": "func", "params": {"mock_obj": "", "return_value": ""}, "params_descr": {"mock_obj": "", "return_value": ""}, "params_occur": {"mock_obj": [["mock_obj", "return_value", "f"]], "return_value": [["f", "set_result", "return_value"], ["mock_obj", "return_value", "f"]]}, "params_p": {"args": [], "kwargs": [], "mock_obj": [["str", 0.29561259518630567], ["unittesmock.MagicMock", 0.24324778700395266], ["bool", 0.20018041122249944]], "return_value": [["str", 0.3189051130640347], ["unittesmock.MagicMock", 0.22718413327175677], ["List[Tuple[bytes, bytes]]", 0.21833924426882131], ["int", 0.08478336571555975], ["List[str]", 0.07710177254480231], ["dict", 0.07368637113502503]]}, "q_name": "make_mock_awaitable.<locals>.func", "ret_exprs": [], "ret_type": "", "variables": {"f": "", "return_value": ""}, "variables_p": {"f": [["Dict[str, Union[Any, Any, Any]]", 0.24427348640473953], ["unittesmock.MagicMock", 0.23952214616087875], ["str", 0.17817021002110603], ["List[Dict[str, str]]", 0.08810368550608058], ["Dict[str, Union[int, str]]", 0.0849970386784241], ["Dict[str, Union[Any, Any]]", 0.08241758364049176]], "return_value": [["Dict[str, Dict[str, Any]]", 0.21547456034142143], ["Dict[str, Union[Any, Any]]", 0.19343505856573864], ["Dict[str, int]", 0.08398674874678135], ["Dict[str, Union[Any, Any, Any]]", 0.07778552909780187], ["unittesmock.MagicMock", 0.07581034879643893]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1945, 0], [1951, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "make_mock_awaitable", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "make_mock_awaitable", "ret_exprs": ["return func"], "ret_type": "", "ret_type_p": [["int", 0.30177476890325305], ["str", 0.20463033767148875], ["List[str]", 0.10110244784642601]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "copy", "re", "shlex", "asyncio", "Future", "typing", "Any", "unittest", "mock", "unittest", "mock", "MagicMock", "uuid", "UUID", "pytest", "google", "cloud", "dataflow_v1beta3", "GetJobRequest", "JobView", "airflow", "exceptions", "AirflowException", "AirflowProviderDeprecationWarning", "airflow", "providers", "apache", "beam", "hooks", "beam", "BeamHook", "run_beam_command", "airflow", "providers", "google", "cloud", "hooks", "dataflow", "DEFAULT_DATAFLOW_LOCATION", "AsyncDataflowHook", "DataflowHook", "DataflowJobStatus", "DataflowJobType", "_DataflowJobsController", "_fallback_to_project_id_from_variables", "process_line_and_extract_dataflow_job_id_callback"], "mod_var_ln": {"APACHE_BEAM_V_2_14_0_JAVA_SDK_LOG": [[1809, 0], [1809, 33]], "APACHE_BEAM_V_2_14_0_PYTHON_SDK_LOG": [[1832, 0], [1832, 35]], "APACHE_BEAM_V_2_22_0_JAVA_SDK_LOG": [[1820, 0], [1820, 33]], "APACHE_BEAM_V_2_22_0_PYTHON_SDK_LOG": [[1852, 0], [1852, 35]], "BASE_STRING": [[88, 0], [88, 11]], "BEAM_STRING": [[46, 0], [46, 11]], "DATAFLOW_STRING": [[89, 0], [89, 15]], "DATAFLOW_VARIABLES_JAVA": [[64, 0], [64, 23]], "DATAFLOW_VARIABLES_PY": [[63, 0], [63, 21]], "DEFAULT_CANCEL_TIMEOUT": [[122, 0], [122, 22]], "DEFAULT_PY_INTERPRETER": [[93, 0], [93, 22]], "DEFAULT_RUNNER": [[45, 0], [45, 14]], "JAR_FILE": [[60, 0], [60, 8]], "JOB_CLASS": [[61, 0], [61, 9]], "JOB_NAME": [[49, 0], [49, 8]], "MOCK_UUID": [[50, 0], [50, 9]], "MOCK_UUID_PREFIX": [[51, 0], [51, 16]], "PARAMETERS": [[54, 0], [54, 10]], "PY_FILE": [[59, 0], [59, 7]], "PY_OPTIONS": [[62, 0], [62, 10]], "RUNTIME_ENV": [[69, 0], [69, 11]], "TASK_ID": [[48, 0], [48, 7]], "TEST_DATASET": [[105, 0], [105, 12]], "TEST_ENVIRONMENT": [[58, 0], [58, 16]], "TEST_FLEX_PARAMETERS": [[94, 0], [94, 20]], "TEST_JOB_ID": [[91, 0], [91, 11]], "TEST_LOCATION": [[92, 0], [92, 13]], "TEST_PROJECT": [[90, 0], [90, 12]], "TEST_PROJECT_ID": [[102, 0], [102, 15]], "TEST_SQL_JOB_ID": [[120, 0], [120, 15]], "TEST_SQL_JOB_NAME": [[104, 0], [104, 17]], "TEST_SQL_OPTIONS": [[106, 0], [106, 16]], "TEST_SQL_QUERY": [[112, 0], [112, 14]], "TEST_TEMPLATE": [[53, 0], [53, 13]], "UNIQUE_JOB_NAME": [[52, 0], [52, 15]]}, "mod_var_occur": {"APACHE_BEAM_V_2_14_0_JAVA_SDK_LOG": [], "APACHE_BEAM_V_2_14_0_PYTHON_SDK_LOG": [], "APACHE_BEAM_V_2_22_0_JAVA_SDK_LOG": [], "APACHE_BEAM_V_2_22_0_PYTHON_SDK_LOG": [], "BASE_STRING": [], "BEAM_STRING": [], "DATAFLOW_STRING": [], "DATAFLOW_VARIABLES_JAVA": [["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["passed_variables", "builtins", "dict", "builtins", "str", "typing", "Any", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["passed_variables", "builtins", "dict", "builtins", "str", "typing", "Any", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_JAVA"]], "DATAFLOW_VARIABLES_PY": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["passed_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["expected_variables", "copy", "deepcopy", "DATAFLOW_VARIABLES_PY"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "DEFAULT_CANCEL_TIMEOUT": [["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "num_retries", "self", "dataflow_hook", "num_retries", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["jobs_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "name", "UNIQUE_JOB_NAME", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT"]], "DEFAULT_PY_INTERPRETER": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "DEFAULT_RUNNER": [], "JAR_FILE": [["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "JOB_CLASS": [["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_beam_start_java_pipeline", "assert_called_once_with", "variables", "expected_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "process_line_callback", "mock_callback_on_job_id", "return_value"]], "JOB_NAME": [["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "copy", "deepcopy", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "TEST_LOCATION", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment", "runtime_env"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_RUNNING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_PENDING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_QUEUED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DRAINING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_STOPPED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DONE", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_UPDATED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DRAINED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_FAILED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"]], "MOCK_UUID": [["MOCK_UUID_PREFIX", "str", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"], ["mock_uuid", "return_value", "MOCK_UUID"]], "MOCK_UUID_PREFIX": [["UNIQUE_JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["job_name", "JOB_NAME", "MOCK_UUID_PREFIX"], ["launch_method", "assert_called_once_with", "body", "MOCK_UUID_PREFIX", "PARAMETERS", "variables", "gcsPath", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"]], "PARAMETERS": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "copy", "deepcopy", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "body", "MOCK_UUID_PREFIX", "PARAMETERS", "variables", "gcsPath", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "TEST_LOCATION", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "body", "UNIQUE_JOB_NAME", "PARAMETERS", "gcsPath", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment"], ["body", "mock", "ANY", "PARAMETERS", "RUNTIME_ENV"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment", "runtime_env"], ["body", "mock", "ANY", "PARAMETERS", "expected_runtime_env"]], "PY_FILE": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "py_interpreter", "py_options", "PY_OPTIONS", "py_requirements", "None", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "PY_OPTIONS": [["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "py_requirements", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "py_interpreter", "py_requirements", "None", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "py_interpreter", "py_options", "PY_OPTIONS", "py_requirements", "None", "py_system_site_packages", "False", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "on_new_job_id_callback", "on_new_job_id_callback"], ["mock_beam_start_python_pipeline", "assert_called_once_with", "variables", "expected_variables", "py_file", "PY_FILE", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_options", "PY_OPTIONS", "py_requirements", "current_py_requirements", "py_system_site_packages", "current_py_system_site_packages", "process_line_callback", "mock_callback_on_job_id", "return_value"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_PY", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback"]], "RUNTIME_ENV": [["options_with_runtime_env", "copy", "deepcopy", "RUNTIME_ENV"], ["body", "mock", "ANY", "PARAMETERS", "RUNTIME_ENV"], ["options_with_runtime_env", "copy", "deepcopy", "RUNTIME_ENV"], ["expected_runtime_env", "copy", "deepcopy", "RUNTIME_ENV"]], "TASK_ID": [], "TEST_DATASET": [["TEST_SQL_OPTIONS", "TEST_PROJECT", "TEST_DATASET"]], "TEST_ENVIRONMENT": [], "TEST_FLEX_PARAMETERS": [["result", "self", "dataflow_hook", "start_flex_template", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID", "on_new_job_callback", "on_new_job_callback"], ["launch_method", "assert_called_once_with", "projectId", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION"]], "TEST_JOB_ID": [["self", "dataflow_hook", "get_job", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["method_fetch_job_by_id", "assert_called_once_with", "TEST_JOB_ID"], ["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["method_fetch_job_metrics_by_id", "assert_called_once_with", "TEST_JOB_ID"], ["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["method_get_metrics", "assert_called_once_with", "jobId", "TEST_JOB_ID", "projectId", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_messages_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["method_fetch_job_messages_by_id", "assert_called_once_with", "TEST_JOB_ID"], ["self", "dataflow_hook", "fetch_job_autoscaling_events_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["method_fetch_job_autoscaling_events_by_id", "assert_called_once_with", "TEST_JOB_ID"], ["self", "dataflow_hook", "wait_for_done", "job_name", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "multiple_jobs", "False"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "name", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "self", "dataflow_hook", "num_retries", "multiple_jobs", "False", "drain_pipeline", "self", "dataflow_hook", "drain_pipeline", "cancel_timeout", "self", "dataflow_hook", "cancel_timeout", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["launch_method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["launch_method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["launch_method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["method", "return_value", "execute", "return_value", "TEST_JOB_ID"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["expected_job", "TEST_JOB_ID"], ["mock_controller", "return_value", "get_jobs", "return_value", "TEST_JOB_ID"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "num_retries", "self", "dataflow_hook", "num_retries", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["result", "TEST_JOB_ID"], ["self", "dataflow_hook", "cancel_job", "job_name", "UNIQUE_JOB_NAME", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT", "location", "TEST_LOCATION"], ["jobs_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "name", "UNIQUE_JOB_NAME", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT"], ["mock_run", "return_value", "mock", "MagicMock", "stdout", "TEST_JOB_ID", "encode", "stderr", "TEST_JOB_ID", "encode", "returncode"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "wait_until_finished", "None"], ["mock_run", "return_value", "mock", "MagicMock", "stdout", "TEST_JOB_ID", "encode", "stderr", "TEST_JOB_ID", "encode", "returncode"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "TEST_JOB_ID", "get_jobs"], ["mock_jobs", "get", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobStatus", "JOB_STATE_DONE"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "True"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_RUNNING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_PENDING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_QUEUED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DRAINING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_STOPPED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLING", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "cancel_timeout"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobStatus", "JOB_STATE_RUNNING", "job_type"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "drain_pipeline", "drain_pipeline", "cancel_timeout", "None"], ["get_method", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["get_method", "return_value", "execute", "side_effect", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DONE", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_UPDATED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_DRAINED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_FAILED", "TEST_JOB_ID", "JOB_NAME", "DataflowJobStatus", "JOB_STATE_CANCELLED"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["result", "list", "jobs_controller", "_fetch_list_job_messages_responses", "TEST_JOB_ID"], ["mock_list", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["result", "jobs_controller", "fetch_job_messages_by_id", "TEST_JOB_ID"], ["mock_fetch_responses", "assert_called_once_with", "job_id", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["result", "jobs_controller", "fetch_job_autoscaling_events_by_id", "TEST_JOB_ID"], ["mock_fetch_responses", "assert_called_once_with", "job_id", "TEST_JOB_ID"], ["APACHE_BEAM_V_2_14_0_JAVA_SDK_LOG", "TEST_JOB_ID", "TEST_JOB_ID", "TEST_JOB_ID"], ["APACHE_BEAM_V_2_22_0_JAVA_SDK_LOG", "TEST_JOB_ID", "TEST_JOB_ID", "TEST_JOB_ID"], ["APACHE_BEAM_V_2_14_0_PYTHON_SDK_LOG", "TEST_JOB_ID", "TEST_JOB_ID", "TEST_JOB_ID"], ["APACHE_BEAM_V_2_22_0_PYTHON_SDK_LOG", "TEST_JOB_ID", "TEST_JOB_ID", "TEST_JOB_ID", "TEST_JOB_ID"], ["found_job_id", "TEST_JOB_ID"], ["hook", "get_job", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION"], ["request", "GetJobRequest", "dict", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "view", "JobView", "JOB_VIEW_SUMMARY"]], "TEST_LOCATION": [["passed_variables", "TEST_LOCATION"], ["expected_variables", "TEST_LOCATION"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "start_python_dataflow", "job_name", "JOB_NAME", "variables", "passed_variables", "dataflow", "PY_FILE", "py_options", "PY_OPTIONS", "py_interpreter", "DEFAULT_PY_INTERPRETER", "py_requirements", "py_requirements", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["expected_variables", "TEST_LOCATION"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION"], ["passed_variables", "TEST_LOCATION"], ["expected_variables", "TEST_LOCATION"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION", "multiple_jobs", "False"], ["self", "dataflow_hook", "start_java_dataflow", "job_name", "JOB_NAME", "variables", "DATAFLOW_VARIABLES_JAVA", "jar", "JAR_FILE", "job_class", "JOB_CLASS", "on_new_job_id_callback", "on_new_job_id_callback", "location", "TEST_LOCATION"], ["expected_variables", "TEST_LOCATION"], ["mock_dataflow_wait_for_done", "assert_called_once_with", "job_id", "mock", "ANY", "job_name", "job_name", "location", "TEST_LOCATION", "multiple_jobs", "False"], ["self", "dataflow_hook", "get_job", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["method_get_metrics", "assert_called_once_with", "jobId", "TEST_JOB_ID", "projectId", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_messages_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_autoscaling_events_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "wait_for_done", "job_name", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "multiple_jobs", "False"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "name", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "self", "dataflow_hook", "num_retries", "multiple_jobs", "False", "drain_pipeline", "self", "dataflow_hook", "drain_pipeline", "cancel_timeout", "self", "dataflow_hook", "cancel_timeout", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "TEST_LOCATION", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "mock", "ANY"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "body", "UNIQUE_JOB_NAME", "PARAMETERS", "gcsPath", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["result", "self", "dataflow_hook", "start_flex_template", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID", "on_new_job_callback", "on_new_job_callback"], ["launch_method", "assert_called_once_with", "projectId", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "num_retries", "self", "dataflow_hook", "num_retries", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["self", "dataflow_hook", "cancel_job", "job_name", "UNIQUE_JOB_NAME", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT", "location", "TEST_LOCATION"], ["jobs_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "name", "UNIQUE_JOB_NAME", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT"], ["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "wait_until_finished", "None"], ["self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "mock", "MagicMock"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "TEST_JOB_ID", "get_jobs"], ["mock_jobs", "get", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "get_jobs"], ["mock_list", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "True"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "assert_called_once_with", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["mock_update", "assert_called_once_with", "body", "jobId", "location", "TEST_LOCATION", "projectId"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "cancel_timeout"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["mock_update", "assert_called_once_with", "body", "jobId", "location", "TEST_LOCATION", "projectId"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "drain_pipeline", "drain_pipeline", "cancel_timeout", "None"], ["get_method", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["mock_update", "assert_called_once_with", "body", "requested_state", "jobId", "location", "TEST_LOCATION", "projectId"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["mock_list", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["hook", "get_job", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION"], ["request", "GetJobRequest", "dict", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "view", "JobView", "JOB_VIEW_SUMMARY"]], "TEST_PROJECT": [["TEST_SQL_OPTIONS", "TEST_PROJECT", "TEST_DATASET"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "copy", "deepcopy", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "body", "MOCK_UUID_PREFIX", "PARAMETERS", "variables", "gcsPath", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "TEST_LOCATION", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "mock", "ANY"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "body", "UNIQUE_JOB_NAME", "PARAMETERS", "gcsPath", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment", "runtime_env"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "DEFAULT_DATAFLOW_LOCATION", "name", "MOCK_UUID_PREFIX", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["self", "dataflow_hook", "cancel_job", "job_name", "UNIQUE_JOB_NAME", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT", "location", "TEST_LOCATION"], ["jobs_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "name", "UNIQUE_JOB_NAME", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT"], ["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "wait_until_finished", "None"], ["self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "mock", "MagicMock"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "TEST_JOB_ID", "get_jobs"], ["mock_jobs", "get", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "get_jobs"], ["mock_list", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "True"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "list", "assert_called_once_with", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["self", "mock_dataflow", "projects", "return_value", "locations", "return_value", "jobs", "return_value", "get", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True", "wait_until_finished", "wait_until_finished"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "location", "TEST_LOCATION", "poll_sleep", "job_id", "None", "num_retries", "multiple_jobs", "True"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "cancel_timeout"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "drain_pipeline", "drain_pipeline", "cancel_timeout", "None"], ["get_method", "assert_called_once_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["get_method", "assert_called_with", "jobId", "TEST_JOB_ID", "location", "TEST_LOCATION", "projectId", "TEST_PROJECT"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["mock_list", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "jobId", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"], ["jobs_controller", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "job_id", "TEST_JOB_ID"]], "TEST_PROJECT_ID": [["self", "dataflow_hook", "get_job", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_metrics_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["method_get_metrics", "assert_called_once_with", "jobId", "TEST_JOB_ID", "projectId", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_messages_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "fetch_job_autoscaling_events_by_id", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["self", "dataflow_hook", "wait_for_done", "job_name", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "multiple_jobs", "False"], ["mock_dataflowjob", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "name", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "self", "dataflow_hook", "num_retries", "multiple_jobs", "False", "drain_pipeline", "self", "dataflow_hook", "drain_pipeline", "cancel_timeout", "self", "dataflow_hook", "cancel_timeout", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["result", "self", "dataflow_hook", "start_flex_template", "body", "TEST_FLEX_PARAMETERS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID", "on_new_job_callback", "on_new_job_callback"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "project_number", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "poll_sleep", "self", "dataflow_hook", "poll_sleep", "num_retries", "self", "dataflow_hook", "num_retries", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "self", "dataflow_hook", "wait_until_finished"], ["AsyncDataflowHook", "gcp_conn_id", "TEST_PROJECT_ID"], ["hook", "get_job", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION"], ["request", "GetJobRequest", "dict", "project_id", "TEST_PROJECT_ID", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "view", "JobView", "JOB_VIEW_SUMMARY"]], "TEST_SQL_JOB_ID": [], "TEST_SQL_JOB_NAME": [["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"], ["self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "mock", "MagicMock"]], "TEST_SQL_OPTIONS": [["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"], ["self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "mock", "MagicMock"]], "TEST_SQL_QUERY": [["result", "self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "on_new_job_callback"], ["mock_run", "assert_called_once_with", "TEST_SQL_QUERY", "capture_output", "True"], ["self", "dataflow_hook", "start_sql_job", "job_name", "TEST_SQL_JOB_NAME", "query", "TEST_SQL_QUERY", "options", "TEST_SQL_OPTIONS", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT", "on_new_job_callback", "mock", "MagicMock"]], "TEST_TEMPLATE": [["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "copy", "deepcopy", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "TEST_LOCATION", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT"], ["launch_method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "mock", "ANY"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"], ["self", "dataflow_hook", "start_template_dataflow", "job_name", "JOB_NAME", "variables", "options_with_runtime_env", "parameters", "PARAMETERS", "dataflow_template", "TEST_TEMPLATE", "project_id", "TEST_PROJECT", "environment", "runtime_env"], ["method", "assert_called_once_with", "projectId", "TEST_PROJECT", "location", "DEFAULT_DATAFLOW_LOCATION", "gcsPath", "TEST_TEMPLATE", "body", "body"]], "UNIQUE_JOB_NAME": [["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["launch_method", "assert_called_once_with", "body", "UNIQUE_JOB_NAME", "PARAMETERS", "gcsPath", "projectId", "TEST_PROJECT", "location", "TEST_LOCATION"], ["mock_controller", "assert_called_once_with", "dataflow", "mock_conn", "return_value", "job_id", "TEST_JOB_ID", "name", "UNIQUE_JOB_NAME", "num_retries", "poll_sleep", "project_number", "TEST_PROJECT", "location", "TEST_LOCATION", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT", "wait_until_finished", "None"], ["self", "dataflow_hook", "cancel_job", "job_name", "UNIQUE_JOB_NAME", "job_id", "TEST_JOB_ID", "project_id", "TEST_PROJECT", "location", "TEST_LOCATION"], ["jobs_controller", "assert_called_once_with", "dataflow", "mock_get_conn", "return_value", "job_id", "TEST_JOB_ID", "location", "TEST_LOCATION", "name", "UNIQUE_JOB_NAME", "poll_sleep", "project_number", "TEST_PROJECT", "num_retries", "drain_pipeline", "False", "cancel_timeout", "DEFAULT_CANCEL_TIMEOUT"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "TEST_JOB_ID", "get_jobs"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobStatus", "JOB_STATE_DONE"], ["_DataflowJobsController", "self", "mock_dataflow", "TEST_PROJECT", "TEST_LOCATION", "UNIQUE_JOB_NAME", "get_jobs"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "True"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobType", "JOB_TYPE_BATCH", "DataflowJobStatus", "JOB_STATE_DONE"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "cancel_timeout"], ["job", "TEST_JOB_ID", "UNIQUE_JOB_NAME", "DataflowJobStatus", "JOB_STATE_RUNNING", "job_type"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False", "drain_pipeline", "drain_pipeline", "cancel_timeout", "None"], ["dataflow_job", "_DataflowJobsController", "dataflow", "self", "mock_dataflow", "project_number", "TEST_PROJECT", "name", "UNIQUE_JOB_NAME", "location", "TEST_LOCATION", "poll_sleep", "job_id", "TEST_JOB_ID", "num_retries", "multiple_jobs", "False"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 391}, "session_id": "XKcxEEPzvaul1sIl_hbxk-gNDshnQZuEo-dT1fm9PeU", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {"APACHE_BEAM_V_2_14_0_JAVA_SDK_LOG": "", "APACHE_BEAM_V_2_14_0_PYTHON_SDK_LOG": "", "APACHE_BEAM_V_2_22_0_JAVA_SDK_LOG": "", "APACHE_BEAM_V_2_22_0_PYTHON_SDK_LOG": "", "BASE_STRING": "", "BEAM_STRING": "", "DATAFLOW_STRING": "", "DATAFLOW_VARIABLES_JAVA": "", "DATAFLOW_VARIABLES_PY": "", "DEFAULT_CANCEL_TIMEOUT": "", "DEFAULT_PY_INTERPRETER": "", "DEFAULT_RUNNER": "", "JAR_FILE": "", "JOB_CLASS": "", "JOB_NAME": "", "MOCK_UUID": "", "MOCK_UUID_PREFIX": "", "PARAMETERS": "", "PY_FILE": "", "PY_OPTIONS": "", "RUNTIME_ENV": "", "TASK_ID": "", "TEST_DATASET": "", "TEST_ENVIRONMENT": "", "TEST_FLEX_PARAMETERS": "", "TEST_JOB_ID": "", "TEST_LOCATION": "", "TEST_PROJECT": "", "TEST_PROJECT_ID": "", "TEST_SQL_JOB_ID": "", "TEST_SQL_JOB_NAME": "", "TEST_SQL_OPTIONS": "", "TEST_SQL_QUERY": "", "TEST_TEMPLATE": "", "UNIQUE_JOB_NAME": ""}, "variables_p": {"APACHE_BEAM_V_2_14_0_JAVA_SDK_LOG": [["Dict[str, bool]", 0.6707920563995068], ["int", 0.2174092675339087], ["str", 0.11179867606658446]], "APACHE_BEAM_V_2_14_0_PYTHON_SDK_LOG": [["Dict[str, bool]", 0.6707920563995068], ["int", 0.2174092675339087], ["str", 0.11179867606658446]], "APACHE_BEAM_V_2_22_0_JAVA_SDK_LOG": [["Dict[str, bool]", 0.6707920563995068], ["int", 0.2174092675339087], ["str", 0.11179867606658446]], "APACHE_BEAM_V_2_22_0_PYTHON_SDK_LOG": [["Dict[str, bool]", 0.6707920563995068], ["int", 0.2174092675339087], ["str", 0.11179867606658446]], "BASE_STRING": [["str", 0.8609625617166027], ["int", 0.13903743828339754]], "BEAM_STRING": [["str", 0.7], ["int", 0.2]], "DATAFLOW_STRING": [["str", 0.7], ["int", 0.2]], "DATAFLOW_VARIABLES_JAVA": [["dict", 0.4622011204779806], ["Type[Generator[Any, Any, Any]]", 0.12137007597326317], ["Dict[str, Dict[str, Any]]", 0.12133287500008963], ["set", 0.09770078802274862], ["OrderedDict[Any, Dict[str, Any]]", 0.09534596485290212]], "DATAFLOW_VARIABLES_PY": [["dict", 0.4613652385066318], ["Type[Generator[Any, Any, Any]]", 0.13037135223041027], ["Dict[str, Dict[str, Any]]", 0.11152440808150944]], "DEFAULT_CANCEL_TIMEOUT": [["int", 0.7970950528738727], ["unittesmock.MagicMock", 0.09302809894111795]], "DEFAULT_PY_INTERPRETER": [["Dict[str, Any]", 0.11046417140335416], ["Dict[str, Dict[str, Any]]", 0.11044027639612247], ["dict", 0.09976958677629728], ["complex", 0.09710164599546006], ["Dict[str, Tuple[str, Any]]", 0.09570681892613336], ["str", 0.09476034226061386], ["Counter[Any]", 0.09117298144407147], ["Dict[int, str]", 0.08999457310958346]], "DEFAULT_RUNNER": [["str", 0.4], ["int", 0.30000000000000004], ["List[Tuple[str, int]]", 0.1]], "JAR_FILE": [["str", 0.301047029031539], ["dict", 0.29247634101072334]], "JOB_CLASS": [["Dict[str, Union[Any, Any]]", 0.5369290772830924], ["Dict[str, Union[Any, None, Any, Any, bool]]", 0.15474432774673585], ["Dict[str, Any]", 0.11273646348265326], ["dict", 0.10454270289325863]], "JOB_NAME": [["str", 0.9077368631904014], ["List[str]", 0.09226313680959883]], "MOCK_UUID": [["str", 0.2904286895682389], ["unittesmock.MagicMock", 0.17607424980661246], ["Dict[str, Union[Any, Any]]", 0.1728251245737916], ["Dict[str, int]", 0.08597336744390496], ["mock.Mock", 0.08424497611250316]], "MOCK_UUID_PREFIX": [["str", 0.41900056954167814], ["Dict[str, str]", 0.20447003779894596], ["Dict[str, Any]", 0.20176167544859133], ["Dict[str, dict]", 0.09542839061719333], ["Dict[str, Union[Any, Any]]", 0.07933932659359116]], "PARAMETERS": [["Dict[str, float]", 0.3203898372772708], ["list", 0.1236155158698035], ["Dict[str, Dict[str, Any]]", 0.09992932598348739], ["Type[Generator[Any, Any, Any]]", 0.09101209822403475]], "PY_FILE": [["str", 0.41388745282829265], ["Dict[str, Set[str]]", 0.12011365759860826], ["dict", 0.09154521657660082]], "PY_OPTIONS": [["Dict[str, Dict[str, Any]]", 0.1266540966603842], ["Set[str]", 0.1098872047597632], ["List[Tuple[str, int]]", 0.09403986813454478], ["Dict[str, bool]", 0.0934768519745886], ["OrderedDict[Any, Dict[str, Any]]", 0.09182885268914899], ["Type[Generator[Any, Any, Any]]", 0.08566058422808102]], "RUNTIME_ENV": [["str", 0.09569387882089157]], "TASK_ID": [["str", 0.4], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "TEST_DATASET": [["str", 0.7296921836489688], ["TextIO", 0.12569211461323312], ["list", 0.059126857437975806]], "TEST_ENVIRONMENT": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_FLEX_PARAMETERS": [["list", 0.19936598496115648], ["Dict[str, str]", 0.11186008910337478], ["Tuple[str, str]", 0.0949757876886628], ["Dict[str, Union[int, str]]", 0.09373577348826143]], "TEST_JOB_ID": [["str", 0.5062417294409263], ["IO[bytes]", 0.19055999060193798], ["Optional[str]", 0.10438838050214559], ["int", 0.10310584813402579]], "TEST_LOCATION": [["str", 0.27388022868575473], ["List[str]", 0.19466313870617188], ["Dict[str, str]", 0.11467451891322972], ["Dict[str, Union[Any, Any]]", 0.10351381664598779], ["Dict[str, Union[Any, str]]", 0.10235859089746661]], "TEST_PROJECT": [], "TEST_PROJECT_ID": [["str", 0.6988432000767892], ["int", 0.30115679992321054]], "TEST_SQL_JOB_ID": [["str", 0.6916622581692238], ["Optional[str]", 0.10947808602664154], ["bool", 0.08516566607705627]], "TEST_SQL_JOB_NAME": [["str", 0.9999999999999999]], "TEST_SQL_OPTIONS": [["str", 0.7869796058930953], ["Dict[str, Any]", 0.21302039410690454]], "TEST_SQL_QUERY": [["str", 0.6161649143735453], ["Dict[str, str]", 0.27100665785764483], ["Dict[str, Any]", 0.11282842776880982]], "TEST_TEMPLATE": [["dict", 0.5192290134857165], ["str", 0.27118590108873797]], "UNIQUE_JOB_NAME": [["str", 1.0]]}}}