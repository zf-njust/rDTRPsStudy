{"error": null, "response": {"classes": [{"cls_lc": [[84, 0], [418, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [87, 93]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStackdriverHookMethods.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [106, 9]], "fn_var_ln": {"hook": [[96, 8], [96, 12]], "method": [[95, 8], [95, 14]]}, "fn_var_occur": {"hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "list_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"]], "method": [["method", "mock_policy_client", "return_value", "list_alert_policies"], ["method", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_stackdriver_list_alert_policies", "params": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_descr": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_occur": {"mock_get_creds_and_project_id": [], "mock_policy_client": [["method", "mock_policy_client", "return_value", "list_alert_policies"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.19531623226030198]], "mock_policy_client": [], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_list_alert_policies", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "method": ""}, "variables_p": {"hook": [["Dict[str, Dict[str, str]]", 0.10623947822065014], ["list", 0.09625048945689722], ["int", 0.09546276103404111]], "method": [["str", 0.3068369615851915], ["Dict[str, Union[Any, Any]]", 0.2659632820762107]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [139, 9]], "fn_var_ln": {"alert_policies": [[119, 8], [119, 22]], "alert_policy_disabled": [[117, 8], [117, 29]], "alert_policy_enabled": [[116, 8], [116, 28]], "enabled": [[133, 8], [133, 37]], "hook": [[114, 8], [114, 12]], "mask": [[132, 8], [132, 12]]}, "fn_var_occur": {"alert_policies": [["alert_policies", "alert_policy_enabled", "alert_policy_disabled"], ["mock_policy_client", "return_value", "list_alert_policies", "return_value", "alert_policies"]], "alert_policy_disabled": [["alert_policy_disabled", "AlertPolicy", "TEST_ALERT_POLICY_2"], ["alert_policies", "alert_policy_enabled", "alert_policy_disabled"], ["alert_policy_disabled", "enabled", "True"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "alert_policy_disabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "alert_policy_enabled": [["alert_policy_enabled", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["alert_policies", "alert_policy_enabled", "alert_policy_disabled"]], "enabled": [["alert_policy_disabled", "enabled", "True"]], "hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "enable_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"]], "mask": [["mask", "FieldMask", "paths"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "alert_policy_disabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_stackdriver_enable_alert_policy", "params": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_descr": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_occur": {"mock_get_creds_and_project_id": [], "mock_policy_client": [["mock_policy_client", "return_value", "list_alert_policies", "return_value", "alert_policies"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "alert_policy_disabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.49355496701033297]], "mock_policy_client": [["mock.Mock", 0.35525406647091534]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_enable_alert_policy", "ret_exprs": [], "ret_type": "", "variables": {"alert_policies": "", "alert_policy_disabled": "", "alert_policy_enabled": "", "enabled": "", "hook": "", "mask": ""}, "variables_p": {"alert_policies": [], "alert_policy_disabled": [], "alert_policy_enabled": [["str", 0.9999999998643357], ["enumerate[Any]", 4.4786598170541e-11], ["List[int]", 2.953838697329626e-11], ["list", 2.953838697329626e-11], ["Dict[str, Union[Any, Any, Any, Any, str]]", 1.0810681167279593e-11]], "enabled": [["float", 0.24999999998765618], ["List[str]", 0.24999999998765618], ["str", 4.114606809674833e-11], ["bool", 8.229213619349666e-12]], "hook": [["Dict[str, Dict[str, str]]", 0.10623947822065014], ["list", 0.09625048945689722], ["int", 0.09546276103404111]], "mask": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[146, 4], [172, 9]], "fn_var_ln": {"alert_policy_disabled": [[149, 8], [149, 29]], "alert_policy_enabled": [[148, 8], [148, 28]], "enabled": [[166, 8], [166, 36]], "hook": [[147, 8], [147, 12]], "mask": [[165, 8], [165, 12]]}, "fn_var_occur": {"alert_policy_disabled": [["alert_policy_disabled", "AlertPolicy", "TEST_ALERT_POLICY_2"], ["mock_policy_client", "return_value", "list_alert_policies", "return_value", "alert_policy_enabled", "alert_policy_disabled"]], "alert_policy_enabled": [["alert_policy_enabled", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["mock_policy_client", "return_value", "list_alert_policies", "return_value", "alert_policy_enabled", "alert_policy_disabled"], ["alert_policy_enabled", "enabled", "False"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "alert_policy_enabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "enabled": [["alert_policy_enabled", "enabled", "False"]], "hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "disable_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"]], "mask": [["mask", "FieldMask", "paths"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "alert_policy_enabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_stackdriver_disable_alert_policy", "params": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_descr": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_occur": {"mock_get_creds_and_project_id": [], "mock_policy_client": [["mock_policy_client", "return_value", "list_alert_policies", "return_value", "alert_policy_enabled", "alert_policy_disabled"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "alert_policy_enabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.49355496701033297]], "mock_policy_client": [["mock.Mock", 0.1204914559119381]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_disable_alert_policy", "ret_exprs": [], "ret_type": "", "variables": {"alert_policy_disabled": "", "alert_policy_enabled": "", "enabled": "", "hook": "", "mask": ""}, "variables_p": {"alert_policy_disabled": [["Dict[str, Any]", 0.09837792220831874]], "alert_policy_enabled": [["Dict[str, Any]", 0.09837792220831874]], "enabled": [["float", 0.33333333331328874], ["bool", 0.33333333331328874], ["dict", 1.425524602308751e-11], ["Type[Dict[Any, Any]]", 1.2404887260056748e-11], ["str", 7.237119791854926e-12]], "hook": [["Dict[str, Dict[str, str]]", 0.10623947822065014], ["list", 0.09625048945689722], ["int", 0.09546276103404111]], "mask": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[180, 4], [229, 9]], "fn_var_ln": {"alert_policy_to_create": [[185, 8], [185, 30]], "creation_record": [[225, 8], [225, 45]], "existing_alert_policy": [[184, 8], [184, 29]], "hook": [[183, 8], [183, 12]], "mutation_record": [[226, 8], [226, 45]], "name": [[211, 8], [211, 35]]}, "fn_var_occur": {"alert_policy_to_create": [["alert_policy_to_create", "AlertPolicy", "TEST_ALERT_POLICY_2"], ["alert_policy_to_create", "name", "None"], ["alert_policy_to_create", "creation_record", "None"], ["alert_policy_to_create", "mutation_record", "None"], ["alert_policy_to_create", "conditions", "name", "None"], ["mock_policy_client", "return_value", "create_alert_policy", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "alert_policy", "alert_policy_to_create", "retry", "DEFAULT", "timeout", "None", "metadata"]], "creation_record": [["alert_policy_to_create", "creation_record", "None"], ["existing_alert_policy", "creation_record", "None"]], "existing_alert_policy": [["existing_alert_policy", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["mock_policy_client", "return_value", "list_alert_policies", "return_value", "existing_alert_policy"], ["existing_alert_policy", "creation_record", "None"], ["existing_alert_policy", "mutation_record", "None"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "existing_alert_policy", "retry", "DEFAULT", "timeout", "None", "metadata"]], "hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"]], "mutation_record": [["alert_policy_to_create", "mutation_record", "None"], ["existing_alert_policy", "mutation_record", "None"]], "name": [["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["alert_policy_to_create", "name", "None"], ["alert_policy_to_create", "conditions", "name", "None"], ["mock_policy_client", "return_value", "create_alert_policy", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "alert_policy", "alert_policy_to_create", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_stackdriver_upsert_alert_policy", "params": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_descr": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_occur": {"mock_channel_client": [["mock_channel_client", "return_value", "list_notification_channels", "return_value"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "mock_get_creds_and_project_id": [], "mock_policy_client": [["mock_policy_client", "return_value", "list_alert_policies", "return_value", "existing_alert_policy"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "create_alert_policy", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "alert_policy", "alert_policy_to_create", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "existing_alert_policy", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_channel_client": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.24767009365424314]], "mock_policy_client": [["mock.Mock", 0.28375885774491105]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_upsert_alert_policy", "ret_exprs": [], "ret_type": "", "variables": {"alert_policy_to_create": "", "creation_record": "", "existing_alert_policy": "", "hook": "", "mutation_record": "", "name": ""}, "variables_p": {"alert_policy_to_create": [["List[str]", 0.10384843255034613]], "creation_record": [["bool", 0.999999999652322], ["Type[List[Any]]", 3.8511786264733664e-11]], "existing_alert_policy": [["Dict[str, Any]", 0.09837792220831874]], "hook": [["cirq.google.engine.engine_job.EngineJob", 0.21485198844380055], ["dict", 0.11616690895998592]], "mutation_record": [["bool", 0.999999999652322], ["Type[List[Any]]", 3.8511786264733664e-11]], "name": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[237, 4], [267, 9]], "fn_var_ln": {"creation_record": [[263, 8], [263, 45]], "existing_alert_policy": [[241, 8], [241, 29]], "hook": [[240, 8], [240, 12]], "mutation_record": [[264, 8], [264, 45]]}, "fn_var_occur": {"creation_record": [["existing_alert_policy", "creation_record", "None"]], "existing_alert_policy": [["existing_alert_policy", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["mock_policy_client", "return_value", "list_alert_policies", "return_value", "existing_alert_policy"], ["existing_alert_policy", "creation_record", "None"], ["existing_alert_policy", "mutation_record", "None"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "existing_alert_policy", "retry", "DEFAULT", "timeout", "None", "metadata"]], "hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"]], "mutation_record": [["existing_alert_policy", "mutation_record", "None"]]}, "name": "test_stackdriver_upsert_alert_policy_without_channel", "params": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_descr": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_occur": {"mock_channel_client": [["mock_channel_client", "return_value", "list_notification_channels", "return_value"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "mock_get_creds_and_project_id": [], "mock_policy_client": [["mock_policy_client", "return_value", "list_alert_policies", "return_value", "existing_alert_policy"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "update_alert_policy", "assert_called_once_with", "request", "dict", "alert_policy", "existing_alert_policy", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_channel_client": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.154233510447112]], "mock_policy_client": [["mock.Mock", 0.10320257199193245]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_upsert_alert_policy_without_channel", "ret_exprs": [], "ret_type": "", "variables": {"creation_record": "", "existing_alert_policy": "", "hook": "", "mutation_record": ""}, "variables_p": {"creation_record": [["str", 0.5], ["Type[List[int]]", 0.1], ["bool", 0.1]], "existing_alert_policy": [["Dict[str, Any]", 0.09837792220831874]], "hook": [["cirq.google.engine.engine_job.EngineJob", 0.21485198844380055], ["dict", 0.11616690895998592]], "mutation_record": [["str", 0.5], ["Type[List[int]]", 0.1], ["bool", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[274, 4], [284, 9]], "fn_var_ln": {"hook": [[275, 8], [275, 12]]}, "fn_var_occur": {"hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "delete_alert_policy", "name"]]}, "name": "test_stackdriver_delete_alert_policy", "params": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_descr": {"mock_get_creds_and_project_id": "", "mock_policy_client": "", "self": ""}, "params_occur": {"mock_get_creds_and_project_id": [], "mock_policy_client": [["mock_policy_client", "return_value", "delete_alert_policy", "assert_called_once_with", "request", "dict", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.19616001500666366]], "mock_policy_client": [], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_delete_alert_policy", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["Dict[str, str]", 0.4999999997959508], ["Tuple[str]", 0.49999999975925064], ["List[str]", 4.1741730294305776e-11], ["bool", 3.6876518098446596e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 4], [302, 9]], "fn_var_ln": {"hook": [[292, 8], [292, 12]]}, "fn_var_occur": {"hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "list_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"]]}, "name": "test_stackdriver_list_notification_channel", "params": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_channel_client": [["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "mock_get_creds_and_project_id": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_channel_client": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.10322132976651575], ["bool", 0.10059943254263139]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_list_notification_channel", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["Dict[str, Dict[str, str]]", 0.10623947822065014], ["list", 0.09625048945689722], ["int", 0.09546276103404111]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[309, 4], [333, 9]], "fn_var_ln": {"enabled": [[326, 8], [326, 45]], "hook": [[312, 8], [312, 12]], "mask": [[327, 8], [327, 12]], "notification_channel_disabled": [[314, 8], [314, 37]], "notification_channel_enabled": [[313, 8], [313, 36]]}, "fn_var_occur": {"enabled": [["notification_channel_disabled", "enabled", "True"]], "hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "enable_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"]], "mask": [["mask", "FieldMask", "paths"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "notification_channel_disabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "notification_channel_disabled": [["notification_channel_disabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_2"], ["mock_channel_client", "return_value", "list_notification_channels", "return_value", "notification_channel_enabled", "notification_channel_disabled"], ["notification_channel_disabled", "enabled", "True"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "notification_channel_disabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "notification_channel_enabled": [["notification_channel_enabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_1"], ["mock_channel_client", "return_value", "list_notification_channels", "return_value", "notification_channel_enabled", "notification_channel_disabled"]]}, "name": "test_stackdriver_enable_notification_channel", "params": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_channel_client": [["mock_channel_client", "return_value", "list_notification_channels", "return_value", "notification_channel_enabled", "notification_channel_disabled"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "notification_channel_disabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "mock_get_creds_and_project_id": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_channel_client": [["mock.MagicMock", 0.09833701559046036]], "mock_get_creds_and_project_id": [["bool", 0.10265379063093354], ["mock.MagicMock", 0.09898097640963774]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_enable_notification_channel", "ret_exprs": [], "ret_type": "", "variables": {"enabled": "", "hook": "", "mask": "", "notification_channel_disabled": "", "notification_channel_enabled": ""}, "variables_p": {"enabled": [["str", 0.782919357221351], ["Optional[str]", 0.11559872016410104], ["Dict[str, Union[float, str]]", 0.10148192261454794]], "hook": [["Dict[str, Dict[str, str]]", 0.10623947822065014], ["list", 0.09625048945689722], ["int", 0.09546276103404111]], "mask": [["list", 0.1906865490224357], ["int", 0.12805053748230252], ["Dict[str, Union[Any, Any]]", 0.11098375606382667]], "notification_channel_disabled": [["Dict[str, Union[int, str]]", 0.18745480137416526], ["list", 0.09050729250473691]], "notification_channel_enabled": [["Dict[str, Union[int, str]]", 0.18745480137416526], ["list", 0.09050729250473691]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[340, 4], [363, 9]], "fn_var_ln": {"enabled": [[356, 8], [356, 44]], "hook": [[343, 8], [343, 12]], "mask": [[357, 8], [357, 12]], "notification_channel_disabled": [[345, 8], [345, 37]], "notification_channel_enabled": [[344, 8], [344, 36]]}, "fn_var_occur": {"enabled": [["notification_channel_enabled", "enabled", "False"]], "hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "disable_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"]], "mask": [["mask", "FieldMask", "paths"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "notification_channel_enabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "notification_channel_disabled": [["notification_channel_disabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_2"], ["mock_channel_client", "return_value", "list_notification_channels", "return_value", "notification_channel_enabled", "notification_channel_disabled"]], "notification_channel_enabled": [["notification_channel_enabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_1"], ["mock_channel_client", "return_value", "list_notification_channels", "return_value", "notification_channel_enabled", "notification_channel_disabled"], ["notification_channel_enabled", "enabled", "False"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "notification_channel_enabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_stackdriver_disable_notification_channel", "params": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_channel_client": [["mock_channel_client", "return_value", "list_notification_channels", "return_value", "notification_channel_enabled", "notification_channel_disabled"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "notification_channel_enabled", "update_mask", "mask", "retry", "DEFAULT", "timeout", "None", "metadata"]], "mock_get_creds_and_project_id": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_channel_client": [["mock.MagicMock", 0.09833701559046036]], "mock_get_creds_and_project_id": [["bool", 0.10265379063093354], ["mock.MagicMock", 0.09898097640963774]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_disable_notification_channel", "ret_exprs": [], "ret_type": "", "variables": {"enabled": "", "hook": "", "mask": "", "notification_channel_disabled": "", "notification_channel_enabled": ""}, "variables_p": {"enabled": [["str", 0.6113924312879636], ["list", 0.09748487342926387], ["Dict[str, str]", 0.06580114670297038]], "hook": [["Dict[str, Dict[str, str]]", 0.10623947822065014], ["list", 0.09625048945689722], ["int", 0.09546276103404111]], "mask": [["list", 0.1906865490224357], ["int", 0.12805053748230252], ["Dict[str, Union[Any, Any]]", 0.11098375606382667]], "notification_channel_disabled": [["Dict[str, Union[int, str]]", 0.18745480137416526], ["list", 0.09050729250473691]], "notification_channel_enabled": [["Dict[str, Union[int, str]]", 0.18745480137416526], ["list", 0.09050729250473691]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[370, 4], [402, 9]], "fn_var_ln": {"existing_notification_channel": [[372, 8], [372, 37]], "hook": [[371, 8], [371, 12]], "name": [[394, 8], [394, 47]], "notification_channel_to_be_created": [[373, 8], [373, 42]]}, "fn_var_occur": {"existing_notification_channel": [["existing_notification_channel", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_1"], ["mock_channel_client", "return_value", "list_notification_channels", "return_value", "existing_notification_channel"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "existing_notification_channel", "retry", "DEFAULT", "timeout", "None", "metadata"]], "hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "upsert_channel", "channels", "json", "dumps", "TEST_NOTIFICATION_CHANNEL_1", "TEST_NOTIFICATION_CHANNEL_2", "project_id", "PROJECT_ID"]], "name": [["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["notification_channel_to_be_created", "name", "None"], ["mock_channel_client", "return_value", "create_notification_channel", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "notification_channel", "notification_channel_to_be_created", "retry", "DEFAULT", "timeout", "None", "metadata"]], "notification_channel_to_be_created": [["notification_channel_to_be_created", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_2"], ["notification_channel_to_be_created", "name", "None"], ["mock_channel_client", "return_value", "create_notification_channel", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "notification_channel", "notification_channel_to_be_created", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_stackdriver_upsert_channel", "params": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_channel_client": [["mock_channel_client", "return_value", "list_notification_channels", "return_value", "existing_notification_channel"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_channel_client", "return_value", "update_notification_channel", "assert_called_once_with", "request", "dict", "notification_channel", "existing_notification_channel", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_channel_client", "return_value", "create_notification_channel", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "notification_channel", "notification_channel_to_be_created", "retry", "DEFAULT", "timeout", "None", "metadata"]], "mock_get_creds_and_project_id": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_channel_client": [], "mock_get_creds_and_project_id": [["bool", 0.09942101848741387], ["mock.MagicMock", 0.09778587773985861]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_upsert_channel", "ret_exprs": [], "ret_type": "", "variables": {"existing_notification_channel": "", "hook": "", "name": "", "notification_channel_to_be_created": ""}, "variables_p": {"existing_notification_channel": [], "hook": [["cirq.google.engine.engine_job.EngineJob", 0.21485198844380055], ["dict", 0.11616690895998592]], "name": [["str", 1.0]], "notification_channel_to_be_created": [["list", 0.10443807656299679], ["Dict[str, Union[dict, Any]]", 0.10281400858683891], ["Dict[str, Optional[str]]", 0.0959103727589626]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[409, 4], [418, 9]], "fn_var_ln": {"hook": [[412, 8], [412, 12]]}, "fn_var_occur": {"hook": [["hook", "stackdriver", "StackdriverHook"], ["hook", "delete_notification_channel", "name"]]}, "name": "test_stackdriver_delete_notification_channel", "params": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_channel_client": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_channel_client": [["mock_channel_client", "return_value", "delete_notification_channel", "assert_called_once_with", "request", "dict", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "mock_get_creds_and_project_id": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_channel_client": [], "mock_get_creds_and_project_id": [["bool", 0.10543780829675613], ["mock.MagicMock", 0.09650492263545778], ["mock.Mock", 0.09578901126172432]], "self": []}, "q_name": "TestStackdriverHookMethods.test_stackdriver_delete_notification_channel", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["Dict[str, str]", 0.4999999997959508], ["Tuple[str]", 0.49999999975925064], ["List[str]", 4.1741730294305776e-11], ["bool", 3.6876518098446596e-11]]}}], "name": "TestStackdriverHookMethods", "q_name": "TestStackdriverHookMethods", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "google", "cloud", "monitoring_v3", "AlertPolicy", "NotificationChannel", "google", "protobuf", "field_mask_pb2", "FieldMask", "airflow", "providers", "google", "cloud", "hooks", "stackdriver"], "mod_var_ln": {"CREDENTIALS": [[31, 0], [31, 11]], "PROJECT_ID": [[30, 0], [30, 10]], "TEST_ALERT_POLICY_1": [[33, 0], [33, 19]], "TEST_ALERT_POLICY_2": [[50, 0], [50, 19]], "TEST_FILTER": [[32, 0], [32, 11]], "TEST_NOTIFICATION_CHANNEL_1": [[67, 0], [67, 27]], "TEST_NOTIFICATION_CHANNEL_2": [[75, 0], [75, 27]]}, "mod_var_occur": {"CREDENTIALS": [], "PROJECT_ID": [["hook", "list_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["method", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "enable_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "disable_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_policy_client", "return_value", "create_alert_policy", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "alert_policy", "alert_policy_to_create", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "list_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "enable_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["hook", "disable_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["hook", "upsert_channel", "channels", "json", "dumps", "TEST_NOTIFICATION_CHANNEL_1", "TEST_NOTIFICATION_CHANNEL_2", "project_id", "PROJECT_ID"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "None", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_channel_client", "return_value", "create_notification_channel", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "notification_channel", "notification_channel_to_be_created", "retry", "DEFAULT", "timeout", "None", "metadata"]], "TEST_ALERT_POLICY_1": [["alert_policy_enabled", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["alert_policy_enabled", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["existing_alert_policy", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"], ["existing_alert_policy", "AlertPolicy", "TEST_ALERT_POLICY_1"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"]], "TEST_ALERT_POLICY_2": [["alert_policy_disabled", "AlertPolicy", "TEST_ALERT_POLICY_2"], ["alert_policy_disabled", "AlertPolicy", "TEST_ALERT_POLICY_2"], ["alert_policy_to_create", "AlertPolicy", "TEST_ALERT_POLICY_2"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"], ["hook", "upsert_alert", "alerts", "json", "dumps", "TEST_ALERT_POLICY_1", "TEST_ALERT_POLICY_2", "project_id", "PROJECT_ID"]], "TEST_FILTER": [["hook", "list_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["method", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "enable_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "disable_alert_policies", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["mock_policy_client", "return_value", "list_alert_policies", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "list_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["mock_channel_client", "return_value", "list_notification_channels", "assert_called_once_with", "request", "dict", "name", "PROJECT_ID", "filter", "TEST_FILTER", "order_by", "None", "page_size", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["hook", "enable_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"], ["hook", "disable_notification_channels", "filter_", "TEST_FILTER", "project_id", "PROJECT_ID"]], "TEST_NOTIFICATION_CHANNEL_1": [["notification_channel_enabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_1"], ["notification_channel_enabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_1"], ["existing_notification_channel", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_1"], ["hook", "upsert_channel", "channels", "json", "dumps", "TEST_NOTIFICATION_CHANNEL_1", "TEST_NOTIFICATION_CHANNEL_2", "project_id", "PROJECT_ID"]], "TEST_NOTIFICATION_CHANNEL_2": [["notification_channel_disabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_2"], ["notification_channel_disabled", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_2"], ["notification_channel_to_be_created", "NotificationChannel", "TEST_NOTIFICATION_CHANNEL_2"], ["hook", "upsert_channel", "channels", "json", "dumps", "TEST_NOTIFICATION_CHANNEL_1", "TEST_NOTIFICATION_CHANNEL_2", "project_id", "PROJECT_ID"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 83}, "session_id": "zzQo6P0jehNzWCjuTmPzzemKOa69qDIe8Oo9xSQ2S9o", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CREDENTIALS": "", "PROJECT_ID": "", "TEST_ALERT_POLICY_1": "", "TEST_ALERT_POLICY_2": "", "TEST_FILTER": "", "TEST_NOTIFICATION_CHANNEL_1": "", "TEST_NOTIFICATION_CHANNEL_2": ""}, "variables_p": {"CREDENTIALS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "PROJECT_ID": [["str", 0.7292510412727757], ["Dict[str, str]", 0.08817991130649576]], "TEST_ALERT_POLICY_1": [["Tuple[Literal, Literal]", 0.4108980114075299], ["str", 0.38433040781553673]], "TEST_ALERT_POLICY_2": [["Tuple[Literal, Literal]", 0.4108980114075299], ["str", 0.38433040781553673]], "TEST_FILTER": [["str", 0.435564294914108], ["Dict[str, str]", 0.17342485876170982], ["List[Dict[str, str]]", 0.08542203207381155]], "TEST_NOTIFICATION_CHANNEL_1": [["str", 0.1932095542535645], ["Dict[str, Dict[str, Any]]", 0.1673757545712383]], "TEST_NOTIFICATION_CHANNEL_2": [["Dict[str, Dict[str, Any]]", 0.19330757139292948], ["str", 0.09530071720978027]]}}}