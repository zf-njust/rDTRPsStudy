{"error": null, "response": {"classes": [{"cls_lc": [[30, 0], [56, 47]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [32, 43]], "fn_var_ln": {"instance": [[32, 8], [32, 21]]}, "fn_var_occur": {"instance": [["self", "instance", "hook", "BigQueryHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "hook", "BigQueryHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryDataframeResultsSystem.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["bool", 0.4395676724141364], ["str", 0.16204360057657363], ["int", 0.09473808104695265], ["float", 0.07902753623302612]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [38, 43]], "fn_var_ln": {"df": [[37, 8], [37, 10]]}, "fn_var_occur": {"df": [["df", "self", "instance", "get_pandas_df"], ["isinstance", "df", "pd", "DataFrame"]]}, "name": "test_output_is_dataframe_with_valid_query", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["df", "self", "instance", "get_pandas_df"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryDataframeResultsSystem.test_output_is_dataframe_with_valid_query", "ret_exprs": [], "ret_type": "", "variables": {"df": ""}, "variables_p": {"df": [["int", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [43, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_throws_exception_with_invalid_query", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "get_pandas_df"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryDataframeResultsSystem.test_throws_exception_with_invalid_query", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [47, 36]], "fn_var_ln": {"df": [[46, 8], [46, 10]]}, "fn_var_occur": {"df": [["df", "self", "instance", "get_pandas_df", "dialect"], ["df", "iloc"]]}, "name": "test_succeeds_with_explicit_legacy_query", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["df", "self", "instance", "get_pandas_df", "dialect"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryDataframeResultsSystem.test_succeeds_with_explicit_legacy_query", "ret_exprs": [], "ret_type": "", "variables": {"df": ""}, "variables_p": {"df": [["int", 0.40557692904744524], ["float", 0.09923482497366876], ["list", 0.09923482497366876], ["List[Callable[[], bool]]", 0.09923482497366876], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0989061986771829], ["bool", 0.0989061986771829], ["Type[str]", 0.0989061986771829]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [51, 36]], "fn_var_ln": {"df": [[50, 8], [50, 10]]}, "fn_var_occur": {"df": [["df", "self", "instance", "get_pandas_df", "dialect"], ["df", "iloc"]]}, "name": "test_succeeds_with_explicit_std_query", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["df", "self", "instance", "get_pandas_df", "dialect"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryDataframeResultsSystem.test_succeeds_with_explicit_std_query", "ret_exprs": [], "ret_type": "", "variables": {"df": ""}, "variables_p": {"df": [["int", 0.40557692904744524], ["float", 0.09923482497366876], ["list", 0.09923482497366876], ["List[Callable[[], bool]]", 0.09923482497366876], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.0989061986771829], ["bool", 0.0989061986771829], ["Type[str]", 0.0989061986771829]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[53, 4], [56, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_throws_exception_with_incompatible_syntax", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "get_pandas_df", "dialect"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBigQueryDataframeResultsSystem.test_throws_exception_with_incompatible_syntax", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestBigQueryDataframeResultsSystem", "q_name": "TestBigQueryDataframeResultsSystem", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "pytest", "airflow", "providers", "google", "cloud", "hooks", "bigquery", "hook", "tests", "providers", "google", "cloud", "utils", "gcp_authenticator", "GCP_BIGQUERY_KEY", "tests", "test_utils", "gcp_system_helpers", "GoogleSystemTest", "pandas", "pd"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 10}, "session_id": "Vg9eXJsK-S6WIPxvSimhCEqt--gMs47X8y9RQay8Nlo", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}