{"error": null, "response": {"classes": [{"cls_lc": [[288, 8], [289, 16]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "CustomException", "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_retry_on_connection_error.<locals>.CustomException", "variables": {}, "variables_p": {}}, {"cls_lc": [[37, 0], [349, 48]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[38, 4], [40, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [102, 80]], "fn_var_ln": {"SSHException": [[49, 8], [49, 34]], "hook": [[61, 8], [61, 12]], "result": [[62, 8], [62, 14]]}, "fn_var_occur": {"SSHException": [["mock_paramiko", "SSHException", "Exception"]], "hook": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["result", "hook", "get_conn"]], "result": [["result", "hook", "get_conn"], ["mock_ssh_client", "return_value", "result"]]}, "name": "test_get_conn_default_configuration", "params": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_descr": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_occur": {"mock_compute_hook": [["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "return_value", "get_instance_address", "return_value", "EXTERNAL_IP"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"], ["mock_compute_hook", "return_value", "set_instance_metadata", "assert_not_called"]], "mock_os_login_hook": [["mock_os_login_hook", "return_value", "_get_credentials_email", "return_value"], ["mock_os_login_hook", "return_value", "import_ssh_public_key", "return_value", "login_profile", "posix_accounts", "mock", "MagicMock", "username"], ["mock_os_login_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "_get_credentials_email", "mock", "call", "import_ssh_public_key", "ssh_public_key", "mock", "ANY", "project_id", "user", "mock_os_login_hook", "return_value", "_get_credentials_email", "return_value"]], "mock_paramiko": [["mock_paramiko", "SSHException", "Exception"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_name", "return_value"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_base64", "return_value"], ["mock_paramiko", "RSAKey", "generate", "assert_called_once_with"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"]], "mock_ssh_client": [["mock_ssh_client", "return_value", "result"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_compute_hook": [], "mock_os_login_hook": [], "mock_paramiko": [["mock.Mock", 0.08504313744946637]], "mock_ssh_client": [["mock.Mock", 0.11215471066098619]], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_default_configuration", "ret_exprs": [], "ret_type": "", "variables": {"SSHException": "", "hook": "", "result": ""}, "variables_p": {"SSHException": [["Dict[str, str]", 0.2547177432590759], ["str", 0.16175077331543308], ["Dict[str, Union[Any, str]]", 0.13858926124922594], ["int", 0.09728502831982312], ["Type[List[Any]]", 0.08633727201930468], ["Tuple[Tuple[Any, Any]]", 0.0822084575180559]], "hook": [["str", 0.2396715260760663], ["Tuple[Literal, Literal]", 0.08421411037525679]], "result": [["mock._Call", 0.17396611338054618], ["list", 0.12971198978832563], ["Dict[str, Any]", 0.11766464923200048], ["Dict[str, List[Any]]", 0.10432520560604593], ["float", 0.09478399399418576], ["dict", 0.08782158861235928], ["Optional[bytes]", 0.0842838168605793]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[108, 4], [160, 81]], "fn_var_ln": {"SSHException": [[111, 8], [111, 34]], "hook": [[120, 8], [120, 12]], "result": [[121, 8], [121, 14]]}, "fn_var_occur": {"SSHException": [["mock_paramiko", "SSHException", "Exception"]], "hook": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False"], ["result", "hook", "get_conn"]], "result": [["result", "hook", "get_conn"], ["mock_ssh_client", "return_value", "result"]]}, "name": "test_get_conn_authorize_using_instance_metadata", "params": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_descr": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_occur": {"mock_compute_hook": [["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "return_value", "get_instance_address", "return_value", "EXTERNAL_IP"], ["mock_compute_hook", "return_value", "get_instance_info", "return_value"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE", "mock", "call", "get_instance_info", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "mock", "call", "set_instance_metadata", "metadata", "TEST_PUB_KEY", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"]], "mock_os_login_hook": [["mock_os_login_hook", "return_value", "import_ssh_public_key", "assert_not_called"]], "mock_paramiko": [["mock_paramiko", "SSHException", "Exception"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_name", "return_value"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_base64", "return_value"], ["mock_paramiko", "RSAKey", "generate", "assert_called_once_with"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"]], "mock_ssh_client": [["mock_ssh_client", "return_value", "result"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_compute_hook": [], "mock_os_login_hook": [], "mock_paramiko": [["mock.Mock", 0.08060840034714609]], "mock_ssh_client": [["mock.Mock", 0.10994384571157821]], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_authorize_using_instance_metadata", "ret_exprs": [], "ret_type": "", "variables": {"SSHException": "", "hook": "", "result": ""}, "variables_p": {"SSHException": [["Dict[str, str]", 0.2547177432590759], ["str", 0.16175077331543308], ["Dict[str, Union[Any, str]]", 0.13858926124922594], ["int", 0.09728502831982312], ["Type[List[Any]]", 0.08633727201930468], ["Tuple[Tuple[Any, Any]]", 0.0822084575180559]], "hook": [["str", 0.10796702117125744], ["Tuple[Literal, Literal]", 0.10796702117125744], ["int", 0.09538889877667306], ["tbump.hooks.Hook", 0.08840655446850867]], "result": [["mock._Call", 0.17396611338054618], ["list", 0.12971198978832563], ["Dict[str, Any]", 0.11766464923200048], ["Dict[str, List[Any]]", 0.10432520560604593], ["float", 0.09478399399418576], ["dict", 0.08782158861235928], ["Optional[bytes]", 0.0842838168605793]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 4], [190, 9]], "fn_var_ln": {"SSHException": [[170, 8], [170, 34]], "hook": [[181, 8], [181, 12]], "result": [[182, 8], [182, 14]]}, "fn_var_occur": {"SSHException": [["mock_paramiko", "SSHException", "Exception"]], "hook": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False"], ["result", "hook", "get_conn"]], "result": [["result", "hook", "get_conn"], ["mock_ssh_client", "return_value", "result"]]}, "name": "test_get_conn_authorize_using_instance_metadata_append_ssh_keys", "params": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_descr": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_occur": {"mock_compute_hook": [["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "return_value", "get_instance_address", "return_value", "EXTERNAL_IP"], ["mock_compute_hook", "return_value", "get_instance_info", "return_value", "TEST_PUB_KEY2"], ["mock_compute_hook", "return_value", "set_instance_metadata", "assert_called_once_with", "metadata", "TEST_PUB_KEY", "TEST_PUB_KEY2", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"]], "mock_os_login_hook": [], "mock_paramiko": [["mock_paramiko", "SSHException", "Exception"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_name", "return_value"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_base64", "return_value"]], "mock_ssh_client": [["mock_ssh_client", "return_value", "result"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_compute_hook": [], "mock_os_login_hook": [["mock.Mock", 0.7037346506319894]], "mock_paramiko": [["mock.Mock", 0.09525713279994363]], "mock_ssh_client": [["mock.Mock", 0.09216920087777711]], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_authorize_using_instance_metadata_append_ssh_keys", "ret_exprs": [], "ret_type": "", "variables": {"SSHException": "", "hook": "", "result": ""}, "variables_p": {"SSHException": [["Dict[str, str]", 0.2547177432590759], ["str", 0.16175077331543308], ["Dict[str, Union[Any, str]]", 0.13858926124922594], ["int", 0.09728502831982312], ["Type[List[Any]]", 0.08633727201930468], ["Tuple[Tuple[Any, Any]]", 0.0822084575180559]], "hook": [["str", 0.10796702117125744], ["Tuple[Literal, Literal]", 0.10796702117125744], ["int", 0.09538889877667306], ["tbump.hooks.Hook", 0.08840655446850867]], "result": [["mock._Call", 0.17396611338054618], ["list", 0.12971198978832563], ["Dict[str, Any]", 0.11766464923200048], ["Dict[str, List[Any]]", 0.10432520560604593], ["float", 0.09478399399418576], ["dict", 0.08782158861235928], ["Optional[bytes]", 0.0842838168605793]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[196, 4], [218, 9]], "fn_var_ln": {"SSHException": [[198, 8], [198, 34]], "hook": [[207, 8], [207, 12]], "result": [[210, 8], [210, 14]]}, "fn_var_occur": {"SSHException": [["mock_paramiko", "SSHException", "Exception"]], "hook": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "use_internal_ip", "True"], ["result", "hook", "get_conn"]], "result": [["result", "hook", "get_conn"], ["mock_ssh_client", "return_value", "result"]]}, "name": "test_get_conn_private_ip", "params": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_descr": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_occur": {"mock_compute_hook": [["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "return_value", "get_instance_address", "return_value", "INTERNAL_IP"], ["mock_compute_hook", "return_value", "get_instance_info", "return_value"], ["mock_compute_hook", "return_value", "get_instance_address", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "True", "zone", "TEST_ZONE"]], "mock_os_login_hook": [], "mock_paramiko": [["mock_paramiko", "SSHException", "Exception"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_name", "return_value"], ["mock_paramiko", "RSAKey", "generate", "return_value", "get_base64", "return_value"]], "mock_ssh_client": [["mock_ssh_client", "return_value", "result"], ["mock_ssh_client", "return_value", "connect", "assert_called_once_with", "hostname", "INTERNAL_IP", "look_for_keys", "mock", "ANY", "pkey", "mock", "ANY", "sock", "mock", "ANY", "username", "mock", "ANY"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_compute_hook": [], "mock_os_login_hook": [["mock.Mock", 0.7777145119928709]], "mock_paramiko": [], "mock_ssh_client": [], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_private_ip", "ret_exprs": [], "ret_type": "", "variables": {"SSHException": "", "hook": "", "result": ""}, "variables_p": {"SSHException": [["Dict[str, str]", 0.2547177432590759], ["str", 0.16175077331543308], ["Dict[str, Union[Any, str]]", 0.13858926124922594], ["int", 0.09728502831982312], ["Type[List[Any]]", 0.08633727201930468], ["Tuple[Tuple[Any, Any]]", 0.0822084575180559]], "hook": [["List[Dict[str, Any]]", 0.17850968419561974], ["str", 0.10932437857239624], ["Tuple[Literal, Literal]", 0.10932437857239624]], "result": [["mock._Call", 0.17396611338054618], ["list", 0.12971198978832563], ["Dict[str, Any]", 0.11766464923200048], ["Dict[str, List[Any]]", 0.10432520560604593], ["float", 0.09478399399418576], ["dict", 0.08782158861235928], ["Optional[bytes]", 0.0842838168605793]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[224, 4], [246, 9]], "fn_var_ln": {"SSHException": [[228, 8], [228, 34]], "hook": [[230, 8], [230, 12]], "result": [[236, 8], [236, 14]]}, "fn_var_occur": {"SSHException": [["mock_paramiko", "SSHException", "Exception"]], "hook": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "hostname"], ["result", "hook", "get_conn"]], "result": [["result", "hook", "get_conn"], ["mock_ssh_client", "return_value", "result"]]}, "name": "test_get_conn_custom_hostname", "params": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_descr": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_occur": {"mock_compute_hook": [["mock_compute_hook", "return_value", "get_instance_address", "assert_not_called"]], "mock_os_login_hook": [], "mock_paramiko": [["mock_paramiko", "SSHException", "Exception"]], "mock_ssh_client": [["mock_ssh_client", "return_value", "result"], ["mock_ssh_client", "return_value", "connect", "assert_called_once_with", "hostname", "look_for_keys", "mock", "ANY", "pkey", "mock", "ANY", "sock", "mock", "ANY", "username", "mock", "ANY"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_compute_hook": [["mock.Mock", 0.11099867694097909]], "mock_os_login_hook": [["mock.Mock", 0.7777145119928709]], "mock_paramiko": [["mock.Mock", 0.19937972104882487], ["mock.MagicMock", 0.09992895732593189]], "mock_ssh_client": [["mock.Mock", 0.09797616985342018]], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_custom_hostname", "ret_exprs": [], "ret_type": "", "variables": {"SSHException": "", "hook": "", "result": ""}, "variables_p": {"SSHException": [["Dict[str, str]", 0.2547177432590759], ["str", 0.16175077331543308], ["Dict[str, Union[Any, str]]", 0.13858926124922594], ["int", 0.09728502831982312], ["Type[List[Any]]", 0.08633727201930468], ["Tuple[Tuple[Any, Any]]", 0.0822084575180559]], "hook": [["int", 0.11091763778682988], ["str", 0.09841134417197436], ["Tuple[Literal, Literal]", 0.09841134417197436]], "result": [["mock._Call", 0.17396611338054618], ["list", 0.12971198978832563], ["Dict[str, Any]", 0.11766464923200048], ["Dict[str, List[Any]]", 0.10432520560604593], ["float", 0.09478399399418576], ["dict", 0.08782158861235928], ["Optional[bytes]", 0.0842838168605793]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [275, 9]], "fn_var_ln": {"SSHException": [[254, 8], [254, 34]], "hook": [[258, 8], [258, 12]], "result": [[261, 8], [261, 14]]}, "fn_var_occur": {"SSHException": [["mock_paramiko", "SSHException", "Exception"]], "hook": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "use_iap_tunnel", "True"], ["result", "hook", "get_conn"]], "result": [["result", "hook", "get_conn"], ["mock_ssh_client", "return_value", "result"]]}, "name": "test_get_conn_iap_tunnel", "params": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_descr": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "self": ""}, "params_occur": {"mock_compute_hook": [["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"]], "mock_os_login_hook": [], "mock_paramiko": [["mock_paramiko", "SSHException", "Exception"], ["mock_ssh_client", "return_value", "connect", "assert_called_once_with", "hostname", "mock", "ANY", "look_for_keys", "mock", "ANY", "pkey", "mock", "ANY", "sock", "mock_paramiko", "ProxyCommand", "return_value", "username", "mock", "ANY"], ["mock_paramiko", "ProxyCommand", "assert_called_once_with", "TEST_INSTANCE_NAME", "TEST_PROJECT_ID", "TEST_ZONE"]], "mock_ssh_client": [["mock_ssh_client", "return_value", "result"], ["mock_ssh_client", "return_value", "connect", "assert_called_once_with", "hostname", "mock", "ANY", "look_for_keys", "mock", "ANY", "pkey", "mock", "ANY", "sock", "mock_paramiko", "ProxyCommand", "return_value", "username", "mock", "ANY"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_compute_hook": [["mock.Mock", 0.2000855245924329]], "mock_os_login_hook": [["mock.Mock", 0.7777145119928709]], "mock_paramiko": [], "mock_ssh_client": [], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_iap_tunnel", "ret_exprs": [], "ret_type": "", "variables": {"SSHException": "", "hook": "", "result": ""}, "variables_p": {"SSHException": [["Dict[str, str]", 0.2547177432590759], ["str", 0.16175077331543308], ["Dict[str, Union[Any, str]]", 0.13858926124922594], ["int", 0.09728502831982312], ["Type[List[Any]]", 0.08633727201930468], ["Tuple[Tuple[Any, Any]]", 0.0822084575180559]], "hook": [["List[Dict[str, Any]]", 0.17850968419561974], ["str", 0.10932437857239624], ["Tuple[Literal, Literal]", 0.10932437857239624]], "result": [["mock._Call", 0.17396611338054618], ["list", 0.12971198978832563], ["Dict[str, Any]", 0.11766464923200048], ["Dict[str, List[Any]]", 0.10432520560604593], ["float", 0.09478399399418576], ["dict", 0.08782158861235928], ["Optional[bytes]", 0.0842838168605793]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[282, 4], [296, 67]], "fn_var_ln": {"SSHException": [[291, 8], [291, 34]], "hook": [[293, 8], [293, 12]]}, "fn_var_occur": {"SSHException": [["mock_paramiko", "SSHException", "CustomException"]], "hook": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["hook", "get_conn"]]}, "name": "test_get_conn_retry_on_connection_error", "params": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "mock_time": "", "self": ""}, "params_descr": {"mock_compute_hook": "", "mock_os_login_hook": "", "mock_paramiko": "", "mock_ssh_client": "", "mock_time": "", "self": ""}, "params_occur": {"mock_compute_hook": [], "mock_os_login_hook": [], "mock_paramiko": [["mock_paramiko", "SSHException", "CustomException"]], "mock_ssh_client": [["mock_ssh_client", "return_value", "connect", "side_effect", "CustomException", "CustomException", "True"], ["mock_ssh_client", "return_value", "connect", "call_count"]], "mock_time": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_compute_hook": [["mock.Mock", 0.6482530592819019]], "mock_os_login_hook": [["mock.Mock", 0.6482530592819019]], "mock_paramiko": [["mock.Mock", 0.5521724168846884]], "mock_ssh_client": [["mock.Mock", 0.35309582754602875]], "mock_time": [["mock.Mock", 0.6482530592819019]], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_get_conn_retry_on_connection_error", "ret_exprs": [], "ret_type": "", "variables": {"SSHException": "", "hook": ""}, "variables_p": {"SSHException": [["str", 0.5395051484415567], ["Set[str]", 0.17241869066152324], ["int", 0.12835213250792255], ["Dict[str, str]", 0.08514446716428732], ["Callable(json.loads)[[Named(s, Union[bytes, str]), KeywordOnly(cls, Optional[Any], default), KeywordOnly(object_hook, Optional[Any], default), KeywordOnly(parse_float, Optional[Any], default), KeywordOnly(parse_int, Optional[Any], default), KeywordOnly(parse_constant, Optional[Any], default), KeywordOnly(object_pairs_hook, Optional[Any], default), Keywords(Any)], Any]", 0.07457956122471011]], "hook": [["str", 0.30031252881857917]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[298, 4], [328, 48]], "fn_var_ln": {"conn": [[299, 8], [299, 12]], "conn_uri": [[314, 8], [314, 16]], "hook": [[316, 12], [316, 16]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_type", "login", "host", "extra", "json", "dumps", "True", "True", "False"], ["conn_uri", "conn", "get_uri"]], "conn_uri": [["conn_uri", "conn", "get_uri"], ["mock", "patch", "dict", "AIRFLOW_CONN_GCPSSH", "conn_uri"]], "hook": [["hook", "ComputeEngineSSHHook", "gcp_conn_id"], ["hook", "_load_connection_config"], ["hook", "instance_name"], ["hook", "hostname"], ["hook", "user"], ["hook", "use_internal_ip", "True"], ["isinstance", "hook", "use_internal_ip", "bool"], ["hook", "use_iap_tunnel", "True"], ["isinstance", "hook", "use_iap_tunnel", "bool"], ["hook", "use_oslogin", "False"], ["isinstance", "hook", "use_oslogin", "bool"], ["hook", "expire_time"], ["isinstance", "hook", "expire_time", "int"]]}, "name": "test_read_configuration_from_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_read_configuration_from_connection", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn_uri": "", "hook": ""}, "variables_p": {"conn": [["Dict[str, str]", 0.28271103084265503], ["str", 0.11166484810021673], ["Dict[str, Union[Any, Any]]", 0.111644440556337], ["Dict[str, Any]", 0.09177483230349778]], "conn_uri": [["Anaconda3.Lib.site-packages.conda.models.match_spec.MatchSpec", 0.09869864546140097]], "hook": [["str", 0.0962658497999424], ["int", 0.0947344720163509], ["Dict[str, str]", 0.09229721997632796]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[330, 4], [349, 48]], "fn_var_ln": {"conn": [[331, 8], [331, 12]], "conn_uri": [[335, 8], [335, 16]], "hook": [[337, 12], [337, 16]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_type", "extra", "json", "dumps"], ["conn_uri", "conn", "get_uri"]], "conn_uri": [["conn_uri", "conn", "get_uri"], ["mock", "patch", "dict", "AIRFLOW_CONN_GCPSSH", "conn_uri"]], "hook": [["hook", "ComputeEngineSSHHook", "gcp_conn_id"], ["hook", "_load_connection_config"], ["None", "hook", "instance_name"], ["None", "hook", "hostname"], ["hook", "user"], ["False", "hook", "use_internal_ip"], ["isinstance", "hook", "use_internal_ip", "bool"], ["False", "hook", "use_iap_tunnel"], ["isinstance", "hook", "use_iap_tunnel", "bool"], ["False", "hook", "use_oslogin"], ["isinstance", "hook", "use_oslogin", "bool"], ["hook", "expire_time"], ["isinstance", "hook", "expire_time", "int"]]}, "name": "test_read_configuration_from_connection_empty_config", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestComputeEngineHookWithPassedProjectId.test_read_configuration_from_connection_empty_config", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn_uri": "", "hook": ""}, "variables_p": {"conn": [["Dict[str, str]", 0.5965312885719823], ["str", 0.40346871142801766]], "conn_uri": [["Anaconda3.Lib.site-packages.conda.models.match_spec.MatchSpec", 0.09869864546140097]], "hook": [["Dict[str, str]", 0.09283304416193412], ["List[Optional[Any]]", 0.08847978982159456]]}}], "name": "TestComputeEngineHookWithPassedProjectId", "q_name": "TestComputeEngineHookWithPassedProjectId", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "pytest", "airflow", "models", "Connection", "airflow", "providers", "google", "cloud", "hooks", "compute_ssh", "ComputeEngineSSHHook"], "mod_var_ln": {"EXTERNAL_IP": [[32, 0], [32, 11]], "INTERNAL_IP": [[31, 0], [31, 11]], "TEST_INSTANCE_NAME": [[29, 0], [29, 18]], "TEST_PROJECT_ID": [[27, 0], [27, 15]], "TEST_PUB_KEY": [[33, 0], [33, 12]], "TEST_PUB_KEY2": [[34, 0], [34, 13]], "TEST_ZONE": [[30, 0], [30, 9]]}, "mod_var_occur": {"EXTERNAL_IP": [["mock_compute_hook", "return_value", "get_instance_address", "return_value", "EXTERNAL_IP"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"], ["mock_compute_hook", "return_value", "get_instance_address", "return_value", "EXTERNAL_IP"], ["mock_ssh_client", "assert_has_calls", "mock", "call", "mock_compute_hook", "return_value", "mock", "call", "set_missing_host_key_policy", "mock_paramiko", "AutoAddPolicy", "return_value", "mock", "call", "connect", "hostname", "EXTERNAL_IP", "look_for_keys", "False", "pkey", "mock_paramiko", "RSAKey", "generate", "return_value", "sock", "None", "username"], ["mock_compute_hook", "return_value", "get_instance_address", "return_value", "EXTERNAL_IP"]], "INTERNAL_IP": [["mock_compute_hook", "return_value", "get_instance_address", "return_value", "INTERNAL_IP"], ["mock_ssh_client", "return_value", "connect", "assert_called_once_with", "hostname", "INTERNAL_IP", "look_for_keys", "mock", "ANY", "pkey", "mock", "ANY", "sock", "mock", "ANY", "username", "mock", "ANY"]], "TEST_INSTANCE_NAME": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE", "mock", "call", "get_instance_info", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "mock", "call", "set_instance_metadata", "metadata", "TEST_PUB_KEY", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False"], ["mock_compute_hook", "return_value", "set_instance_metadata", "assert_called_once_with", "metadata", "TEST_PUB_KEY", "TEST_PUB_KEY2", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "use_internal_ip", "True"], ["mock_compute_hook", "return_value", "get_instance_address", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "True", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "hostname"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "use_iap_tunnel", "True"], ["mock_paramiko", "ProxyCommand", "assert_called_once_with", "TEST_INSTANCE_NAME", "TEST_PROJECT_ID", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"]], "TEST_PROJECT_ID": [["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE"], ["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE", "mock", "call", "get_instance_info", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "mock", "call", "set_instance_metadata", "metadata", "TEST_PUB_KEY", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "return_value", "set_instance_metadata", "assert_called_once_with", "metadata", "TEST_PUB_KEY", "TEST_PUB_KEY2", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_compute_hook", "return_value", "get_instance_address", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "True", "zone", "TEST_ZONE"], ["mock_compute_hook", "return_value", "project_id", "TEST_PROJECT_ID"], ["mock_paramiko", "ProxyCommand", "assert_called_once_with", "TEST_INSTANCE_NAME", "TEST_PROJECT_ID", "TEST_ZONE"]], "TEST_PUB_KEY": [["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE", "mock", "call", "get_instance_info", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "mock", "call", "set_instance_metadata", "metadata", "TEST_PUB_KEY", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["mock_compute_hook", "return_value", "set_instance_metadata", "assert_called_once_with", "metadata", "TEST_PUB_KEY", "TEST_PUB_KEY2", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"]], "TEST_PUB_KEY2": [["mock_compute_hook", "return_value", "get_instance_info", "return_value", "TEST_PUB_KEY2"], ["mock_compute_hook", "return_value", "set_instance_metadata", "assert_called_once_with", "metadata", "TEST_PUB_KEY", "TEST_PUB_KEY2", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"]], "TEST_ZONE": [["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False"], ["mock_compute_hook", "assert_has_calls", "mock", "call", "gcp_conn_id", "mock", "call", "get_instance_address", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "False", "zone", "TEST_ZONE", "mock", "call", "get_instance_info", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "mock", "call", "set_instance_metadata", "metadata", "TEST_PUB_KEY", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False"], ["mock_compute_hook", "return_value", "set_instance_metadata", "assert_called_once_with", "metadata", "TEST_PUB_KEY", "TEST_PUB_KEY2", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "use_internal_ip", "True"], ["mock_compute_hook", "return_value", "get_instance_address", "assert_called_once_with", "project_id", "TEST_PROJECT_ID", "resource_id", "TEST_INSTANCE_NAME", "use_internal_ip", "True", "zone", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "hostname"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE", "use_oslogin", "False", "use_iap_tunnel", "True"], ["mock_paramiko", "ProxyCommand", "assert_called_once_with", "TEST_INSTANCE_NAME", "TEST_PROJECT_ID", "TEST_ZONE"], ["hook", "ComputeEngineSSHHook", "instance_name", "TEST_INSTANCE_NAME", "zone", "TEST_ZONE"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 72}, "session_id": "yHr31m071KqMzIuytc9gDM7fpBNl3nl6NAjVNthrVwA", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"EXTERNAL_IP": "", "INTERNAL_IP": "", "TEST_INSTANCE_NAME": "", "TEST_PROJECT_ID": "", "TEST_PUB_KEY": "", "TEST_PUB_KEY2": "", "TEST_ZONE": ""}, "variables_p": {"EXTERNAL_IP": [["str", 0.6227275428384257], ["List[Dict[str, str]]", 0.10332575647993443], ["List[Dict[str, Any]]", 0.06605615401025873], ["Dict[str, Union[Any, Any, Any]]", 0.06517737299408771], ["Dict[str, Union[Any, Any]]", 0.061673944642615434]], "INTERNAL_IP": [["str", 0.6331085269453371], ["List[Dict[str, str]]", 0.0917651318991301], ["Dict[str, Union[Any, Any]]", 0.06606774794915812], ["Dict[str, Dict[str, Any]]", 0.06476592122207724], ["Dict[str, Union[Any, Any, Any]]", 0.0613982907013658]], "TEST_INSTANCE_NAME": [["str", 0.5559388788526619], ["Dict[str, str]", 0.08839918926805969], ["dict", 0.0788975096715368]], "TEST_PROJECT_ID": [["str", 0.3075712234775503], ["Dict[str, str]", 0.10136365303158444], ["int", 0.09463106833636882], ["List[Tuple[bytes, bytes]]", 0.08970681620631787], ["list", 0.08849715112749686], ["List[str]", 0.08647931314259362], ["List[bytes]", 0.08604200673473979]], "TEST_PUB_KEY": [["str", 1.0]], "TEST_PUB_KEY2": [["str", 0.7954019893040268], ["int", 0.11340127326154029], ["Dict[str, Dict[str, Any]]", 0.09119673743443293]], "TEST_ZONE": [["Dict[str, str]", 0.09226588914237252], ["str", 0.08983871059164888], ["Dict[str, Any]", 0.08762113732448376]]}}}