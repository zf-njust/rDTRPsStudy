{"error": null, "response": {"classes": [{"cls_lc": [[38, 0], [432, 26]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [41, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [48, 82]], "fn_var_ln": {"spanner_hook_default_project_id": [[48, 12], [48, 48]]}, "fn_var_occur": {"spanner_hook_default_project_id": [["self", "spanner_hook_default_project_id", "SpannerHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "spanner_hook_default_project_id", "SpannerHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"spanner_hook_default_project_id": ""}, "variables_p": {"spanner_hook_default_project_id": [["int", 0.7932876971257085], ["str", 0.0869452564849444]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [60, 69]], "fn_var_ln": {"result": [[53, 8], [53, 14]]}, "fn_var_occur": {"result": [["result", "self", "spanner_hook_default_project_id", "_get_client", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["mock_client", "return_value", "result"], ["self", "spanner_hook_default_project_id", "_client", "result"]]}, "name": "test_spanner_client_creation", "params": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "project", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"], ["mock_client", "return_value", "result"]], "mock_get_creds": [["mock_client", "assert_called_once_with", "project", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"]], "self": [["result", "self", "spanner_hook_default_project_id", "_get_client", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["self", "spanner_hook_default_project_id", "_client", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_creds": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_spanner_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["List[Tuple[int, float]]", 0.10472776829490044], ["str", 0.09517650219395044]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [72, 30]], "fn_var_ln": {"instance_exists_method": [[65, 8], [65, 30]], "instance_method": [[64, 8], [64, 23]], "res": [[67, 8], [67, 11]], "return_value": [[66, 8], [66, 43]]}, "fn_var_occur": {"instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]]}, "name": "test_get_existing_instance", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.21540510811023517], ["List[str]", 0.08675590454077461]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_get_existing_instance", "ret_exprs": [], "ret_type": "", "variables": {"instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.8863348827939831], ["Union[Literal, str]", 0.11366511720601696]], "res": [["str", 0.9999999999999999]], "return_value": [["str", 0.9014603046577461], ["Optional[str]", 0.09853969534225392]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [84, 30]], "fn_var_ln": {"instance_exists_method": [[77, 8], [77, 30]], "instance_method": [[76, 8], [76, 23]], "res": [[79, 8], [79, 11]], "return_value": [[78, 8], [78, 43]]}, "fn_var_occur": {"instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]]}, "name": "test_get_existing_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id"]]}, "params_p": {"args": [], "get_client": [["str", 0.2137895049726978]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_get_existing_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.8863348827939831], ["Union[Literal, str]", 0.11366511720601696]], "res": [["str", 0.6422417164586697], ["int", 0.11547936791079427], ["Pattern[str]", 0.09262949723674888]], "return_value": [["str", 0.9014603046577461], ["Optional[str]", 0.09853969534225392]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [110, 26]], "fn_var_ln": {"create_method": [[94, 8], [94, 21]], "instance_method": [[93, 8], [93, 23]], "res": [[96, 8], [96, 11]], "return_value": [[95, 8], [95, 34]]}, "fn_var_occur": {"create_method": [["create_method", "instance_method", "return_value", "create"], ["create_method", "return_value", "False"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["create_method", "instance_method", "return_value", "create"], ["instance_method", "assert_called_once_with", "instance_id", "configuration_name", "display_name", "node_count"]], "res": [["res", "self", "spanner_hook_default_project_id", "create_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["create_method", "instance_method", "return_value", "create"], ["create_method", "return_value", "False"]]}, "name": "test_create_instance", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "create_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.5904528414786854]], "kwargs": [], "mock_project_id": [["str", 0.28047810962472], ["bool", 0.27449057916130093], ["Optional[bool]", 0.10186125477126486], ["Iterable[Tuple[str, int]]", 0.08227566008823552], ["int", 0.08089728802006087]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_create_instance", "ret_exprs": [], "ret_type": "", "variables": {"create_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"create_method": [["Dict[str, List[int]]", 0.1902164745320132], ["Dict[str, bool]", 0.16229311255064965], ["Dict[Any, str]", 0.10557788019928607], ["Dict[Any, Union[int, str]]", 0.09601142029054137], ["OrderedDict[Any, str]", 0.09469311686315783], ["List[str]", 0.09162937157673591], ["Dict[str, Union[Any, Any]]", 0.0877890503280659], ["Dict[Optional[str], str]", 0.08640692854424625], ["Dict[int, Optional[str]]", 0.08538264511530387]], "instance_method": [["str", 0.2987449909137462], ["dict", 0.18937872963944224], ["Dict[str, str]", 0.1200521432128049], ["bytes", 0.10522127070159101], ["Iterator[str]", 0.10409710990279963], ["Type[str]", 0.08927343145315506]], "res": [["int", 0.592820156757677], ["Dict[int, Union[Any, Any]]", 0.11016838732142263], ["str", 0.10319940818841915], ["Pattern[str]", 0.09248418510863651]], "return_value": [["str", 0.6248772981466143], ["Dict[str, Union[int, str]]", 0.10363643950406544], ["dict", 0.09030635597247196], ["Dict[str, int]", 0.08696326169441301]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [131, 26]], "fn_var_ln": {"create_method": [[115, 8], [115, 21]], "instance_method": [[114, 8], [114, 23]], "res": [[117, 8], [117, 11]], "return_value": [[116, 8], [116, 34]]}, "fn_var_occur": {"create_method": [["create_method", "instance_method", "return_value", "create"], ["create_method", "return_value", "False"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["create_method", "instance_method", "return_value", "create"], ["instance_method", "assert_called_once_with", "instance_id", "configuration_name", "display_name", "node_count"]], "res": [["res", "self", "spanner_hook_default_project_id", "create_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["create_method", "instance_method", "return_value", "create"], ["create_method", "return_value", "False"]]}, "name": "test_create_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "create_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19066578723233135]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_create_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"create_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"create_method": [["Dict[str, List[int]]", 0.1902164745320132], ["Dict[str, bool]", 0.16229311255064965], ["Dict[Any, str]", 0.10557788019928607], ["Dict[Any, Union[int, str]]", 0.09601142029054137], ["OrderedDict[Any, str]", 0.09469311686315783], ["List[str]", 0.09162937157673591], ["Dict[str, Union[Any, Any]]", 0.0877890503280659], ["Dict[Optional[str], str]", 0.08640692854424625], ["Dict[int, Optional[str]]", 0.08538264511530387]], "instance_method": [["str", 0.2987449909137462], ["dict", 0.18937872963944224], ["Dict[str, str]", 0.1200521432128049], ["bytes", 0.10522127070159101], ["Iterator[str]", 0.10409710990279963], ["Type[str]", 0.08927343145315506]], "res": [["Set[str]", 0.2946108107661449], ["str", 0.20752203318234416], ["IO[bytes]", 0.1965149434875315], ["List[google.cloud.bigquery.ScalarQueryParameter]", 0.10682837279306386], ["bool", 0.09986728955186307], ["float", 0.09465655021905256]], "return_value": [["str", 0.6248772981466143], ["Dict[str, Union[int, str]]", 0.10363643950406544], ["dict", 0.09030635597247196], ["Dict[str, int]", 0.08696326169441301]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[139, 4], [160, 26]], "fn_var_ln": {"instance_exists_method": [[141, 8], [141, 30]], "instance_method": [[140, 8], [140, 23]], "res": [[145, 8], [145, 11]], "return_value": [[144, 8], [144, 34]], "update_method": [[143, 8], [143, 21]]}, "fn_var_occur": {"instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["update_method", "instance_method", "return_value", "update"], ["instance_method", "assert_called_once_with", "instance_id", "configuration_name", "display_name", "node_count"]], "res": [["res", "self", "spanner_hook_default_project_id", "update_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["update_method", "instance_method", "return_value", "update"], ["update_method", "return_value", "False"]], "update_method": [["update_method", "instance_method", "return_value", "update"], ["update_method", "return_value", "False"], ["update_method", "assert_called_once_with"]]}, "name": "test_update_instance", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "update_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.5901752086561932]], "kwargs": [], "mock_project_id": [["bool", 0.22701847195627273], ["str", 0.19420408388353128], ["Optional[str]", 0.16949573471821483], ["Iterable[Tuple[str, int]]", 0.09619596801650007], ["Optional[bool]", 0.09613441522702555]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_update_instance", "ret_exprs": [], "ret_type": "", "variables": {"instance_exists_method": "", "instance_method": "", "res": "", "return_value": "", "update_method": ""}, "variables_p": {"instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7289910161231491], ["Dict[int, str]", 0.17943643002602042], ["Dict[str, str]", 0.09157255385083045]], "res": [["str", 0.31367995796778125], ["Dict[str, str]", 0.2868070739865134], ["int", 0.20430173010637145], ["Pattern[str]", 0.0990279376494842], ["bytes", 0.09618330028984964]], "return_value": [["str", 1.0]], "update_method": [["str", 0.5421433667819544], ["Dict[str, str]", 0.17447239774267537], ["Dict[str, Union[int, str]]", 0.11148082696794774], ["Pattern[str]", 0.08668294118814818], ["Dict[str, int]", 0.08522046731927414]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 4], [184, 26]], "fn_var_ln": {"instance_exists_method": [[165, 8], [165, 30]], "instance_method": [[164, 8], [164, 23]], "res": [[169, 8], [169, 11]], "return_value": [[168, 8], [168, 34]], "update_method": [[167, 8], [167, 21]]}, "fn_var_occur": {"instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["update_method", "instance_method", "return_value", "update"], ["instance_method", "assert_called_once_with", "instance_id", "configuration_name", "display_name", "node_count"]], "res": [["res", "self", "spanner_hook_default_project_id", "update_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["update_method", "instance_method", "return_value", "update"], ["update_method", "return_value", "False"]], "update_method": [["update_method", "instance_method", "return_value", "update"], ["update_method", "return_value", "False"], ["update_method", "assert_called_once_with"]]}, "name": "test_update_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "update_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19205151462024186]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_update_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"instance_exists_method": "", "instance_method": "", "res": "", "return_value": "", "update_method": ""}, "variables_p": {"instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7289910161231491], ["Dict[int, str]", 0.17943643002602042], ["Dict[str, str]", 0.09157255385083045]], "res": [["str", 0.5207311718354006], ["Dict[str, Dict[str, float]]", 0.11610645866909214], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09529741997390796], ["Pattern[str]", 0.0948328711097341], ["List[str]", 0.08718358801646925], ["Dict[str, str]", 0.085848490395396]], "return_value": [["str", 1.0]], "update_method": [["str", 0.5421433667819544], ["Dict[str, str]", 0.17447239774267537], ["Dict[str, Union[int, str]]", 0.11148082696794774], ["Pattern[str]", 0.08668294118814818], ["Dict[str, int]", 0.08522046731927414]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[192, 4], [205, 26]], "fn_var_ln": {"delete_method": [[196, 8], [196, 21]], "instance_exists_method": [[194, 8], [194, 30]], "instance_method": [[193, 8], [193, 23]], "res": [[198, 8], [198, 11]], "return_value": [[197, 8], [197, 34]]}, "fn_var_occur": {"delete_method": [["delete_method", "instance_method", "return_value", "delete"], ["delete_method", "return_value", "False"], ["delete_method", "assert_called_once_with"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["delete_method", "instance_method", "return_value", "delete"], ["instance_method", "assert_called_once_with"]], "res": [["res", "self", "spanner_hook_default_project_id", "delete_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["delete_method", "instance_method", "return_value", "delete"], ["delete_method", "return_value", "False"]]}, "name": "test_delete_instance", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "delete_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.5075531567692831]], "kwargs": [], "mock_project_id": [["bool", 0.2667934883516104], ["str", 0.19829842119083613], ["Optional[bool]", 0.1071724040621936], ["int", 0.08480185987143228]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_delete_instance", "ret_exprs": [], "ret_type": "", "variables": {"delete_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"delete_method": [["Dict[str, Dict[str, Any]]", 0.15316058520646444], ["Dict[str, Set[str]]", 0.10001389026555439], ["int", 0.09512938572329444], ["bytes", 0.09281233612362924], ["Dict[Union[int, str], int]", 0.08586564965346433], ["str", 0.08550428244237351]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.6961399309518049], ["int", 0.10969551144232513], ["Dict[str, Dict[str, float]]", 0.099047605268739], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09511695233713104]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[208, 4], [220, 26]], "fn_var_ln": {"delete_method": [[212, 8], [212, 21]], "instance_exists_method": [[210, 8], [210, 30]], "instance_method": [[209, 8], [209, 23]], "res": [[214, 8], [214, 11]], "return_value": [[213, 8], [213, 34]]}, "fn_var_occur": {"delete_method": [["delete_method", "instance_method", "return_value", "delete"], ["delete_method", "return_value", "False"], ["delete_method", "assert_called_once_with"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["delete_method", "instance_method", "return_value", "delete"], ["instance_method", "assert_called_once_with"]], "res": [["res", "self", "spanner_hook_default_project_id", "delete_instance", "project_id", "instance_id", "SPANNER_INSTANCE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["delete_method", "instance_method", "return_value", "delete"], ["delete_method", "return_value", "False"]]}, "name": "test_delete_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "delete_instance", "project_id", "instance_id", "SPANNER_INSTANCE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19183651272039057]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_delete_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"delete_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"delete_method": [["Dict[str, Dict[str, Any]]", 0.15316058520646444], ["Dict[str, Set[str]]", 0.10001389026555439], ["int", 0.09512938572329444], ["bytes", 0.09281233612362924], ["Dict[Union[int, str], int]", 0.08586564965346433], ["str", 0.08550428244237351]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.6969935899000682], ["Dict[str, Dict[str, float]]", 0.1070513448721085], ["Dict[str, str]", 0.09940162877900964], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09655343644881376]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[228, 4], [244, 30]], "fn_var_ln": {"database_exists_method": [[233, 8], [233, 30]], "database_method": [[232, 8], [232, 23]], "instance_exists_method": [[230, 8], [230, 30]], "instance_method": [[229, 8], [229, 23]], "res": [[235, 8], [235, 11]], "return_value": [[234, 8], [234, 43]]}, "fn_var_occur": {"database_exists_method": [["database_exists_method", "instance_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"], ["database_exists_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["database_exists_method", "instance_method", "return_value", "exists"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "get_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_exists_method", "instance_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"]]}, "name": "test_get_database", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "get_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.40673726397192417], ["raiden.utils.AddressHex", 0.10331707204919445]], "kwargs": [], "mock_project_id": [["bool", 0.22931581609081625], ["str", 0.20183213184464965], ["Optional[str]", 0.17139607955614097], ["Optional[bool]", 0.09358461811747669], ["Iterable[Tuple[str, int]]", 0.08502259803074656]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_get_database", "ret_exprs": [], "ret_type": "", "variables": {"database_exists_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_exists_method": [["List[str]", 0.2464318894442184], ["Dict[int, int]", 0.11554563631738637], ["dict", 0.10637957759402263], ["Dict[str, Dict[str, Any]]", 0.10619073449168143], ["str", 0.08697609342381915], ["int", 0.08181245086829314], ["Type[Dict[Any, Any]]", 0.08051655814781317]], "database_method": [["str", 0.5172979711346464], ["Dict[str, str]", 0.09736749359535622], ["Pattern[str]", 0.09567660853834078], ["Dict[str, Tuple[str, str]]", 0.09223997843040663], ["Dict[str, Set[str]]", 0.09052821676297965]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["Dict[str, int]", 0.39728089527600047], ["int", 0.20828105913126282], ["str", 0.09181173494391404], ["bytes", 0.08424229949033049]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[247, 4], [261, 30]], "fn_var_ln": {"database_exists_method": [[252, 8], [252, 30]], "database_method": [[251, 8], [251, 23]], "instance_exists_method": [[249, 8], [249, 30]], "instance_method": [[248, 8], [248, 23]], "res": [[254, 8], [254, 11]], "return_value": [[253, 8], [253, 43]]}, "fn_var_occur": {"database_exists_method": [["database_exists_method", "instance_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"], ["database_exists_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["database_exists_method", "instance_method", "return_value", "exists"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "get_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_exists_method", "instance_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"]]}, "name": "test_get_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "get_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19988411662548855]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_get_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_exists_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_exists_method": [["List[str]", 0.2464318894442184], ["Dict[int, int]", 0.11554563631738637], ["dict", 0.10637957759402263], ["Dict[str, Dict[str, Any]]", 0.10619073449168143], ["str", 0.08697609342381915], ["int", 0.08181245086829314], ["Type[Dict[Any, Any]]", 0.08051655814781317]], "database_method": [["str", 0.5172979711346464], ["Dict[str, str]", 0.09736749359535622], ["Pattern[str]", 0.09567660853834078], ["Dict[str, Tuple[str, str]]", 0.09223997843040663], ["Dict[str, Set[str]]", 0.09052821676297965]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 1.0]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 4], [285, 26]], "fn_var_ln": {"database_create_method": [[274, 8], [274, 30]], "database_method": [[273, 8], [273, 23]], "instance_exists_method": [[271, 8], [271, 30]], "instance_method": [[270, 8], [270, 23]], "res": [[275, 8], [275, 11]], "return_value": [[272, 8], [272, 43]]}, "fn_var_occur": {"database_create_method": [["database_create_method", "database_method", "return_value", "create"], ["database_create_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_create_method", "database_method", "return_value", "create"], ["database_method", "assert_called_once_with", "database_id", "ddl_statements"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "create_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_create_method", "database_method", "return_value", "create"]]}, "name": "test_create_database", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "create_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.5904528414786854]], "kwargs": [], "mock_project_id": [["str", 0.28047810962472], ["bool", 0.27449057916130093], ["Optional[bool]", 0.10186125477126486], ["Iterable[Tuple[str, int]]", 0.08227566008823552], ["int", 0.08089728802006087]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_create_database", "ret_exprs": [], "ret_type": "", "variables": {"database_create_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_create_method": [["str", 0.743061770355444]], "database_method": [["str", 0.13730864912995344], ["Set[str]", 0.11041179924327701], ["Dict[str, Optional[Any]]", 0.11031237276347651], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.1061060891465981], ["list", 0.09305376170930404], ["List[str]", 0.09125125532623221], ["set", 0.08998122369423608], ["Dict[str, Optional[str]]", 0.08709653670856586], ["Dict[Optional[str], Any]", 0.08509214218034715]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["int", 0.599404685803941], ["float", 0.10714016747809434], ["Pattern[str]", 0.10649868236492505], ["Dict[int, Union[Any, Any]]", 0.09532988653852256], ["List[str]", 0.09162657781451698]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[288, 4], [304, 26]], "fn_var_ln": {"database_create_method": [[293, 8], [293, 30]], "database_method": [[292, 8], [292, 23]], "instance_exists_method": [[290, 8], [290, 30]], "instance_method": [[289, 8], [289, 23]], "res": [[294, 8], [294, 11]], "return_value": [[291, 8], [291, 43]]}, "fn_var_occur": {"database_create_method": [["database_create_method", "database_method", "return_value", "create"], ["database_create_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_create_method", "database_method", "return_value", "create"], ["database_method", "assert_called_once_with", "database_id", "ddl_statements"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "create_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_create_method", "database_method", "return_value", "create"]]}, "name": "test_create_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "create_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"]]}, "params_p": {"args": [], "get_client": [["str", 0.19066578723233135]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_create_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_create_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_create_method": [["str", 0.743061770355444]], "database_method": [["str", 0.13730864912995344], ["Set[str]", 0.11041179924327701], ["Dict[str, Optional[Any]]", 0.11031237276347651], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.1061060891465981], ["list", 0.09305376170930404], ["List[str]", 0.09125125532623221], ["set", 0.08998122369423608], ["Dict[str, Optional[str]]", 0.08709653670856586], ["Dict[Optional[str], Any]", 0.08509214218034715]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["int", 0.4185635244349314], ["Dict[str, int]", 0.3834721981900751], ["str", 0.10692861027847957], ["Dict[str, str]", 0.09103566709651394]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[312, 4], [328, 26]], "fn_var_ln": {"database_method": [[316, 8], [316, 23]], "database_update_ddl_method": [[317, 8], [317, 34]], "instance_exists_method": [[314, 8], [314, 30]], "instance_method": [[313, 8], [313, 23]], "res": [[318, 8], [318, 11]], "return_value": [[315, 8], [315, 43]]}, "fn_var_occur": {"database_method": [["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_method", "assert_called_once_with", "database_id"]], "database_update_ddl_method": [["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_update_ddl_method", "assert_called_once_with", "ddl_statements", "operation_id", "None"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "update_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"]]}, "name": "test_update_database", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "update_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.5901752086561932]], "kwargs": [], "mock_project_id": [["bool", 0.22701847195627273], ["str", 0.19420408388353128], ["Optional[str]", 0.16949573471821483], ["Iterable[Tuple[str, int]]", 0.09619596801650007], ["Optional[bool]", 0.09613441522702555]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_update_database", "ret_exprs": [], "ret_type": "", "variables": {"database_method": "", "database_update_ddl_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_method": [["str", 0.6192975143103021], ["dict", 0.18503835828579773], ["Type[Callable[Any, Any]]", 0.10242085303491712]], "database_update_ddl_method": [["str", 0.7052628488126372], ["bool", 0.10629058902661258], ["int", 0.09454675939945897]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["int", 0.393631812325534], ["Union[Literal, Literal]", 0.19756238352275268], ["List[str]", 0.11047241063594294], ["Pattern[str]", 0.10378758791895998], ["str", 0.10285153341531021], ["myia.operations.utils.Operation", 0.09169427218149996]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[331, 4], [347, 26]], "fn_var_ln": {"database_method": [[335, 8], [335, 23]], "database_update_ddl_method": [[336, 8], [336, 34]], "instance_exists_method": [[333, 8], [333, 30]], "instance_method": [[332, 8], [332, 23]], "res": [[337, 8], [337, 11]], "return_value": [[334, 8], [334, 43]]}, "fn_var_occur": {"database_method": [["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_method", "assert_called_once_with", "database_id"]], "database_update_ddl_method": [["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_update_ddl_method", "assert_called_once_with", "ddl_statements", "operation_id", "None"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "update_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"]]}, "name": "test_update_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "update_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"]]}, "params_p": {"args": [], "get_client": [["str", 0.19205151462024186]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_update_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_method": "", "database_update_ddl_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_method": [["str", 0.6192975143103021], ["dict", 0.18503835828579773], ["Type[Callable[Any, Any]]", 0.10242085303491712]], "database_update_ddl_method": [["str", 0.7052628488126372], ["bool", 0.10629058902661258], ["int", 0.09454675939945897]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.5245708390199217], ["Dict[str, List[str]]", 0.17948124087436848], ["Dict[str, Dict[str, float]]", 0.10811163653998422], ["list", 0.09287131974868318]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[355, 4], [373, 18]], "fn_var_ln": {"database_drop_method": [[360, 8], [360, 28]], "database_exists_method": [[361, 8], [361, 30]], "database_method": [[359, 8], [359, 23]], "instance_exists_method": [[357, 8], [357, 30]], "instance_method": [[356, 8], [356, 23]], "res": [[363, 8], [363, 11]], "return_value": [[362, 8], [362, 43]]}, "fn_var_occur": {"database_drop_method": [["database_drop_method", "database_method", "return_value", "drop"], ["database_drop_method", "assert_called_once_with"]], "database_exists_method": [["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"], ["database_exists_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "delete_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"]]}, "name": "test_delete_database", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "delete_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.5075531567692831]], "kwargs": [], "mock_project_id": [["bool", 0.2667934883516104], ["str", 0.19829842119083613], ["Optional[bool]", 0.1071724040621936], ["int", 0.08480185987143228]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_delete_database", "ret_exprs": [], "ret_type": "", "variables": {"database_drop_method": "", "database_exists_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_drop_method": [["List[str]", 0.1486643129707966], ["frozenset[bytes]", 0.10188291732485716], ["str", 0.09347408909512606], ["Dict[str, Dict[str, Any]]", 0.09207112747486035], ["int", 0.0904877335514581], ["Tuple[Any, Any, Any]", 0.08860746159972123], ["Dict[Tuple[str, str], Dict[str, int]]", 0.08551366702821289]], "database_exists_method": [["List[str]", 0.2464318894442184], ["Dict[int, int]", 0.11554563631738637], ["dict", 0.10637957759402263], ["Dict[str, Dict[str, Any]]", 0.10619073449168143], ["str", 0.08697609342381915], ["int", 0.08181245086829314], ["Type[Dict[Any, Any]]", 0.08051655814781317]], "database_method": [["str", 0.18491082529321262], ["Dict[str, str]", 0.17936045096941008], ["Dict[str, Union[int, str]]", 0.12437880949933812], ["dict", 0.1239487571697896], ["List[Dict[str, str]]", 0.10819297342030448], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.09054703494399718], ["Dict[str, Literal]", 0.08661450199089703]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["Set[str]", 0.266905356039414], ["dict", 0.21535900918129733], ["str", 0.18382791959772335], ["List[Tuple[str, str]]", 0.12919464411394235], ["List[google.cloud.bigquery.ScalarQueryParameter]", 0.10974921265716774], ["Pattern[str]", 0.09496385841045522]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[376, 4], [392, 18]], "fn_var_ln": {"database_drop_method": [[381, 8], [381, 28]], "database_exists_method": [[382, 8], [382, 30]], "database_method": [[380, 8], [380, 23]], "instance_exists_method": [[378, 8], [378, 30]], "instance_method": [[377, 8], [377, 23]], "res": [[384, 8], [384, 11]], "return_value": [[383, 8], [383, 43]]}, "fn_var_occur": {"database_drop_method": [["database_drop_method", "database_method", "return_value", "drop"], ["database_drop_method", "assert_called_once_with"]], "database_exists_method": [["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"], ["database_exists_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "delete_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"]]}, "name": "test_delete_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "delete_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19183651272039057]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_delete_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_drop_method": "", "database_exists_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_drop_method": [["List[str]", 0.1486643129707966], ["frozenset[bytes]", 0.10188291732485716], ["str", 0.09347408909512606], ["Dict[str, Dict[str, Any]]", 0.09207112747486035], ["int", 0.0904877335514581], ["Tuple[Any, Any, Any]", 0.08860746159972123], ["Dict[Tuple[str, str], Dict[str, int]]", 0.08551366702821289]], "database_exists_method": [["List[str]", 0.2464318894442184], ["Dict[int, int]", 0.11554563631738637], ["dict", 0.10637957759402263], ["Dict[str, Dict[str, Any]]", 0.10619073449168143], ["str", 0.08697609342381915], ["int", 0.08181245086829314], ["Type[Dict[Any, Any]]", 0.08051655814781317]], "database_method": [["str", 0.18491082529321262], ["Dict[str, str]", 0.17936045096941008], ["Dict[str, Union[int, str]]", 0.12437880949933812], ["dict", 0.1239487571697896], ["List[Dict[str, str]]", 0.10819297342030448], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.09054703494399718], ["Dict[str, Literal]", 0.08661450199089703]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.6948474851360804], ["Dict[str, Dict[str, float]]", 0.11576212654313561], ["int", 0.09772165603902186], ["Dict[str, List[str]]", 0.09166873228176209]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[400, 4], [416, 26]], "fn_var_ln": {"database_method": [[404, 8], [404, 23]], "instance_exists_method": [[402, 8], [402, 30]], "instance_method": [[401, 8], [401, 23]], "res": [[406, 8], [406, 11]], "return_value": [[403, 8], [403, 43]], "run_in_transaction_method": [[405, 8], [405, 33]]}, "fn_var_occur": {"database_method": [["database_method", "instance_method", "return_value", "database"], ["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "execute_dml", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"]], "run_in_transaction_method": [["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"], ["run_in_transaction_method", "assert_called_once_with", "mock", "ANY"]]}, "name": "test_execute_dml", "params": {"get_client": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_client": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "mock_project_id": [], "self": [["res", "self", "spanner_hook_default_project_id", "execute_dml", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.6793347485275042]], "kwargs": [], "mock_project_id": [["bool", 0.29366829578146386], ["str", 0.2654535094522156], ["Optional[bool]", 0.08367476937682117]], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_execute_dml", "ret_exprs": [], "ret_type": "", "variables": {"database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": "", "run_in_transaction_method": ""}, "variables_p": {"database_method": [["str", 0.3733641916621847], ["List[str]", 0.22693139773789622], ["Dict[Optional[str], str]", 0.10064722176126027], ["Optional[str]", 0.09480427284848383], ["Set[str]", 0.09016097579935858]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["Pattern[str]", 0.27320159533739874], ["dict", 0.2363826522775863], ["str", 0.17420039802856058], ["List[Tuple[str, str]]", 0.12428722192084944], ["List[google.cloud.bigquery.ScalarQueryParameter]", 0.1116754614973856], ["list", 0.08025267093821939]], "return_value": [["str", 1.0]], "run_in_transaction_method": [["List[Tuple[str, str, str, str, Any]]", 0.18876022990353186], ["int", 0.16259472212185389], ["list", 0.1139885726585951], ["List[Tuple[str, str]]", 0.11177116194191854], ["str", 0.08900933910268785]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[419, 4], [432, 26]], "fn_var_ln": {"database_method": [[423, 8], [423, 23]], "instance_exists_method": [[421, 8], [421, 30]], "instance_method": [[420, 8], [420, 23]], "res": [[425, 8], [425, 11]], "return_value": [[422, 8], [422, 43]], "run_in_transaction_method": [[424, 8], [424, 33]]}, "fn_var_occur": {"database_method": [["database_method", "instance_method", "return_value", "database"], ["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_default_project_id", "execute_dml", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"]], "run_in_transaction_method": [["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"], ["run_in_transaction_method", "assert_called_once_with", "mock", "ANY"]]}, "name": "test_execute_dml_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_default_project_id", "execute_dml", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"]]}, "params_p": {"args": [], "get_client": [["str", 0.19662914689686922]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookDefaultProjectId.test_execute_dml_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": "", "run_in_transaction_method": ""}, "variables_p": {"database_method": [["str", 0.3733641916621847], ["List[str]", 0.22693139773789622], ["Dict[Optional[str], str]", 0.10064722176126027], ["Optional[str]", 0.09480427284848383], ["Set[str]", 0.09016097579935858]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.6953403755606506], ["Dict[str, Dict[str, float]]", 0.12053580095800538], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09322180508761813], ["Dict[str, str]", 0.09090201839372582]], "return_value": [["str", 1.0]], "run_in_transaction_method": [["List[Tuple[str, str, str, str, Any]]", 0.18876022990353186], ["int", 0.16259472212185389], ["list", 0.1139885726585951], ["List[Tuple[str, str]]", 0.11177116194191854], ["str", 0.08900933910268785]]}}], "name": "TestGcpSpannerHookDefaultProjectId", "q_name": "TestGcpSpannerHookDefaultProjectId", "variables": {}, "variables_p": {}}, {"cls_lc": [[435, 0], [677, 26]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[436, 4], [441, 85]], "fn_var_ln": {"spanner_hook_no_default_project_id": [[441, 12], [441, 51]]}, "fn_var_occur": {"spanner_hook_no_default_project_id": [["self", "spanner_hook_no_default_project_id", "SpannerHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "spanner_hook_no_default_project_id", "SpannerHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"spanner_hook_no_default_project_id": ""}, "variables_p": {"spanner_hook_no_default_project_id": [["int", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[448, 4], [456, 72]], "fn_var_ln": {"result": [[449, 8], [449, 14]]}, "fn_var_occur": {"result": [["result", "self", "spanner_hook_no_default_project_id", "_get_client", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["mock_client", "return_value", "result"], ["self", "spanner_hook_no_default_project_id", "_client", "result"]]}, "name": "test_spanner_client_creation", "params": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "project", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"], ["mock_client", "return_value", "result"]], "mock_get_creds": [["mock_client", "assert_called_once_with", "project", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"]], "self": [["result", "self", "spanner_hook_no_default_project_id", "_get_client", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["self", "spanner_hook_no_default_project_id", "_client", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_creds": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_spanner_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["List[Tuple[int, float]]", 0.10472776829490044], ["str", 0.09517650219395044]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[459, 4], [468, 30]], "fn_var_ln": {"instance_exists_method": [[461, 8], [461, 30]], "instance_method": [[460, 8], [460, 23]], "res": [[463, 8], [463, 11]], "return_value": [[462, 8], [462, 43]]}, "fn_var_occur": {"instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]]}, "name": "test_get_existing_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["str", 0.2137895049726978]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_get_existing_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.8863348827939831], ["Union[Literal, str]", 0.11366511720601696]], "res": [["str", 0.9999999999999999]], "return_value": [["str", 0.9014603046577461], ["Optional[str]", 0.09853969534225392]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[471, 4], [480, 26]], "fn_var_ln": {"instance_exists_method": [[473, 8], [473, 30]], "instance_method": [[472, 8], [472, 23]], "res": [[475, 8], [475, 11]], "return_value": [[474, 8], [474, 43]]}, "fn_var_occur": {"instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "False"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "False"]]}, "name": "test_get_non_existing_instance", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"]]}, "params_p": {"args": [], "get_client": [["List[str]", 0.08697000227707817]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_get_non_existing_instance", "ret_exprs": [], "ret_type": "", "variables": {"instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"instance_exists_method": [["dict", 0.22912299079937518], ["str", 0.18452729086952913], ["Dict[int, int]", 0.10441904415650735], ["int", 0.10237037916130097], ["Dict[str, Dict[str, Any]]", 0.09244389758196833], ["bytes", 0.09080129670483152]], "instance_method": [["str", 0.8863348827939831], ["Union[Literal, str]", 0.11366511720601696]], "res": [["str", 0.9999999999999999]], "return_value": [["str", 0.8947139875200425], ["Optional[str]", 0.10528601247995734]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[483, 4], [501, 26]], "fn_var_ln": {"create_method": [[485, 8], [485, 21]], "instance_method": [[484, 8], [484, 23]], "res": [[487, 8], [487, 11]], "return_value": [[486, 8], [486, 34]]}, "fn_var_occur": {"create_method": [["create_method", "instance_method", "return_value", "create"], ["create_method", "return_value", "False"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["create_method", "instance_method", "return_value", "create"], ["instance_method", "assert_called_once_with", "instance_id", "configuration_name", "display_name", "node_count"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "create_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["create_method", "instance_method", "return_value", "create"], ["create_method", "return_value", "False"]]}, "name": "test_create_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "create_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19066578723233135]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_create_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"create_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"create_method": [["Dict[str, List[int]]", 0.1902164745320132], ["Dict[str, bool]", 0.16229311255064965], ["Dict[Any, str]", 0.10557788019928607], ["Dict[Any, Union[int, str]]", 0.09601142029054137], ["OrderedDict[Any, str]", 0.09469311686315783], ["List[str]", 0.09162937157673591], ["Dict[str, Union[Any, Any]]", 0.0877890503280659], ["Dict[Optional[str], str]", 0.08640692854424625], ["Dict[int, Optional[str]]", 0.08538264511530387]], "instance_method": [["str", 0.2987449909137462], ["dict", 0.18937872963944224], ["Dict[str, str]", 0.1200521432128049], ["bytes", 0.10522127070159101], ["Iterator[str]", 0.10409710990279963], ["Type[str]", 0.08927343145315506]], "res": [["str", 0.7096281922874914], ["int", 0.10046607356519024], ["Pattern[str]", 0.09523462838080653], ["List[Dict[str, Any]]", 0.0946711057665118]], "return_value": [["str", 0.6248772981466143], ["Dict[str, Union[int, str]]", 0.10363643950406544], ["dict", 0.09030635597247196], ["Dict[str, int]", 0.08696326169441301]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[504, 4], [525, 26]], "fn_var_ln": {"instance_exists_method": [[506, 8], [506, 30]], "instance_method": [[505, 8], [505, 23]], "res": [[510, 8], [510, 11]], "return_value": [[509, 8], [509, 34]], "update_method": [[508, 8], [508, 21]]}, "fn_var_occur": {"instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["update_method", "instance_method", "return_value", "update"], ["instance_method", "assert_called_once_with", "instance_id", "configuration_name", "display_name", "node_count"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "update_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["update_method", "instance_method", "return_value", "update"], ["update_method", "return_value", "False"]], "update_method": [["update_method", "instance_method", "return_value", "update"], ["update_method", "return_value", "False"], ["update_method", "assert_called_once_with"]]}, "name": "test_update_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "update_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19205151462024186]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_update_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"instance_exists_method": "", "instance_method": "", "res": "", "return_value": "", "update_method": ""}, "variables_p": {"instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7289910161231491], ["Dict[int, str]", 0.17943643002602042], ["Dict[str, str]", 0.09157255385083045]], "res": [["str", 0.7056206865621361], ["Optional[Match[str]]", 0.11266638302996747], ["int", 0.09409353889782486], ["Pattern[str]", 0.08761939151007166]], "return_value": [["str", 1.0]], "update_method": [["str", 0.5421433667819544], ["Dict[str, str]", 0.17447239774267537], ["Dict[str, Union[int, str]]", 0.11148082696794774], ["Pattern[str]", 0.08668294118814818], ["Dict[str, int]", 0.08522046731927414]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[528, 4], [540, 26]], "fn_var_ln": {"delete_method": [[532, 8], [532, 21]], "instance_exists_method": [[530, 8], [530, 30]], "instance_method": [[529, 8], [529, 23]], "res": [[534, 8], [534, 11]], "return_value": [[533, 8], [533, 34]]}, "fn_var_occur": {"delete_method": [["delete_method", "instance_method", "return_value", "delete"], ["delete_method", "return_value", "False"], ["delete_method", "assert_called_once_with"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["delete_method", "instance_method", "return_value", "delete"], ["instance_method", "assert_called_once_with"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "delete_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["delete_method", "instance_method", "return_value", "delete"], ["delete_method", "return_value", "False"]]}, "name": "test_delete_instance_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "delete_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19183651272039057]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_delete_instance_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"delete_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"delete_method": [["Dict[str, Dict[str, Any]]", 0.15316058520646444], ["Dict[str, Set[str]]", 0.10001389026555439], ["int", 0.09512938572329444], ["bytes", 0.09281233612362924], ["Dict[Union[int, str], int]", 0.08586564965346433], ["str", 0.08550428244237351]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.6181810435950675], ["int", 0.16490529909972734], ["Optional[Match[str]]", 0.11678603530280923], ["Pattern[str]", 0.10012762200239587]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[543, 4], [559, 30]], "fn_var_ln": {"database_exists_method": [[548, 8], [548, 30]], "database_method": [[547, 8], [547, 23]], "instance_exists_method": [[545, 8], [545, 30]], "instance_method": [[544, 8], [544, 23]], "res": [[550, 8], [550, 11]], "return_value": [[549, 8], [549, 43]]}, "fn_var_occur": {"database_exists_method": [["database_exists_method", "instance_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"], ["database_exists_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["database_exists_method", "instance_method", "return_value", "exists"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "get_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_exists_method", "instance_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"]]}, "name": "test_get_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "get_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19988411662548855]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_get_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_exists_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_exists_method": [["List[str]", 0.2464318894442184], ["Dict[int, int]", 0.11554563631738637], ["dict", 0.10637957759402263], ["Dict[str, Dict[str, Any]]", 0.10619073449168143], ["str", 0.08697609342381915], ["int", 0.08181245086829314], ["Type[Dict[Any, Any]]", 0.08051655814781317]], "database_method": [["str", 0.5172979711346464], ["Dict[str, str]", 0.09736749359535622], ["Pattern[str]", 0.09567660853834078], ["Dict[str, Tuple[str, str]]", 0.09223997843040663], ["Dict[str, Set[str]]", 0.09052821676297965]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.8134003822074548], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09343051019129645], ["Pattern[str]", 0.0931691076012488]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[562, 4], [578, 26]], "fn_var_ln": {"database_create_method": [[567, 8], [567, 30]], "database_method": [[566, 8], [566, 23]], "instance_exists_method": [[564, 8], [564, 30]], "instance_method": [[563, 8], [563, 23]], "res": [[568, 8], [568, 11]], "return_value": [[565, 8], [565, 43]]}, "fn_var_occur": {"database_create_method": [["database_create_method", "database_method", "return_value", "create"], ["database_create_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_create_method", "database_method", "return_value", "create"], ["database_method", "assert_called_once_with", "database_id", "ddl_statements"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "create_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_create_method", "database_method", "return_value", "create"]]}, "name": "test_create_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "create_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"]]}, "params_p": {"args": [], "get_client": [["str", 0.19066578723233135]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_create_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_create_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_create_method": [["str", 0.743061770355444]], "database_method": [["str", 0.13730864912995344], ["Set[str]", 0.11041179924327701], ["Dict[str, Optional[Any]]", 0.11031237276347651], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.1061060891465981], ["list", 0.09305376170930404], ["List[str]", 0.09125125532623221], ["set", 0.08998122369423608], ["Dict[str, Optional[str]]", 0.08709653670856586], ["Dict[Optional[str], Any]", 0.08509214218034715]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["Dict[str, int]", 0.3646771735364333], ["Set[str]", 0.2890614608288105], ["int", 0.21514505515752758], ["str", 0.1311163104772288]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[581, 4], [597, 26]], "fn_var_ln": {"database_method": [[585, 8], [585, 23]], "database_update_ddl_method": [[586, 8], [586, 34]], "instance_exists_method": [[583, 8], [583, 30]], "instance_method": [[582, 8], [582, 23]], "res": [[587, 8], [587, 11]], "return_value": [[584, 8], [584, 43]]}, "fn_var_occur": {"database_method": [["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_method", "assert_called_once_with", "database_id"]], "database_update_ddl_method": [["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_update_ddl_method", "assert_called_once_with", "ddl_statements", "operation_id", "None"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"]]}, "name": "test_update_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"]]}, "params_p": {"args": [], "get_client": [["str", 0.19205151462024186]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_update_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_method": "", "database_update_ddl_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_method": [["str", 0.6192975143103021], ["dict", 0.18503835828579773], ["Type[Callable[Any, Any]]", 0.10242085303491712]], "database_update_ddl_method": [["str", 0.7052628488126372], ["bool", 0.10629058902661258], ["int", 0.09454675939945897]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.734905479835622], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09150382784097139], ["Dict[str, List[Any]]", 0.08887584371333596]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[600, 4], [617, 26]], "fn_var_ln": {"database_method": [[604, 8], [604, 23]], "database_update_ddl_method": [[605, 8], [605, 34]], "instance_exists_method": [[602, 8], [602, 30]], "instance_method": [[601, 8], [601, 23]], "res": [[606, 8], [606, 11]], "return_value": [[603, 8], [603, 43]]}, "fn_var_occur": {"database_method": [["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_method", "assert_called_once_with", "database_id"]], "database_update_ddl_method": [["database_update_ddl_method", "database_method", "return_value", "update_ddl"], ["database_update_ddl_method", "assert_called_once_with", "ddl_statements", "operation_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "operation_id", "ddl_statements"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_update_ddl_method", "database_method", "return_value", "update_ddl"]]}, "name": "test_update_database_overridden_project_id_and_operation", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "operation_id", "ddl_statements"]]}, "params_p": {"args": [], "get_client": [["str", 0.19205151462024186]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_update_database_overridden_project_id_and_operation", "ret_exprs": [], "ret_type": "", "variables": {"database_method": "", "database_update_ddl_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_method": [["str", 0.6192975143103021], ["dict", 0.18503835828579773], ["Type[Callable[Any, Any]]", 0.10242085303491712]], "database_update_ddl_method": [["str", 0.5313808504731884], ["bool", 0.10175346572191125], ["Dict[str, Any]", 0.09085370528286188], ["int", 0.08825420053158055]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.734905479835622], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09150382784097139], ["Dict[str, List[Any]]", 0.08887584371333596]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[620, 4], [638, 18]], "fn_var_ln": {"database_drop_method": [[625, 8], [625, 28]], "database_exists_method": [[626, 8], [626, 30]], "database_method": [[624, 8], [624, 23]], "instance_exists_method": [[622, 8], [622, 30]], "instance_method": [[621, 8], [621, 23]], "res": [[628, 8], [628, 11]], "return_value": [[627, 8], [627, 43]]}, "fn_var_occur": {"database_drop_method": [["database_drop_method", "database_method", "return_value", "drop"], ["database_drop_method", "assert_called_once_with"]], "database_exists_method": [["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"], ["database_exists_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "delete_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "True"]]}, "name": "test_delete_database_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "delete_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.19183651272039057]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_delete_database_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_drop_method": "", "database_exists_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": ""}, "variables_p": {"database_drop_method": [["List[str]", 0.1486643129707966], ["frozenset[bytes]", 0.10188291732485716], ["str", 0.09347408909512606], ["Dict[str, Dict[str, Any]]", 0.09207112747486035], ["int", 0.0904877335514581], ["Tuple[Any, Any, Any]", 0.08860746159972123], ["Dict[Tuple[str, str], Dict[str, int]]", 0.08551366702821289]], "database_exists_method": [["List[str]", 0.2464318894442184], ["Dict[int, int]", 0.11554563631738637], ["dict", 0.10637957759402263], ["Dict[str, Dict[str, Any]]", 0.10619073449168143], ["str", 0.08697609342381915], ["int", 0.08181245086829314], ["Type[Dict[Any, Any]]", 0.08051655814781317]], "database_method": [["str", 0.18491082529321262], ["Dict[str, str]", 0.17936045096941008], ["Dict[str, Union[int, str]]", 0.12437880949933812], ["dict", 0.1239487571697896], ["List[Dict[str, str]]", 0.10819297342030448], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.09054703494399718], ["Dict[str, Literal]", 0.08661450199089703]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.7994752961009677], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10196866759181189], ["int", 0.09855603630722039]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[641, 4], [658, 48]], "fn_var_ln": {"database_drop_method": [[646, 8], [646, 28]], "database_exists_method": [[647, 8], [647, 30]], "database_method": [[645, 8], [645, 23]], "instance_exists_method": [[643, 8], [643, 30]], "instance_method": [[642, 8], [642, 23]], "return_value": [[648, 8], [648, 43]]}, "fn_var_occur": {"database_drop_method": [["database_drop_method", "database_method", "return_value", "drop"], ["database_drop_method", "assert_not_called"]], "database_exists_method": [["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "False"], ["database_exists_method", "assert_called_once_with"]], "database_method": [["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["database_drop_method", "database_method", "return_value", "drop"], ["database_exists_method", "database_method", "return_value", "exists"], ["database_exists_method", "return_value", "False"]]}, "name": "test_delete_database_missing_database", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["self", "spanner_hook_no_default_project_id", "delete_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"]]}, "params_p": {"args": [], "get_client": [["str", 0.18044589632832866]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_delete_database_missing_database", "ret_exprs": [], "ret_type": "", "variables": {"database_drop_method": "", "database_exists_method": "", "database_method": "", "instance_exists_method": "", "instance_method": "", "return_value": ""}, "variables_p": {"database_drop_method": [["List[str]", 0.1486643129707966], ["frozenset[bytes]", 0.10188291732485716], ["str", 0.09347408909512606], ["Dict[str, Dict[str, Any]]", 0.09207112747486035], ["int", 0.0904877335514581], ["Tuple[Any, Any, Any]", 0.08860746159972123], ["Dict[Tuple[str, str], Dict[str, int]]", 0.08551366702821289]], "database_exists_method": [["List[str]", 0.25999344819441933], ["dict", 0.1851096530246688], ["Dict[int, int]", 0.1046923223972284], ["Dict[str, Dict[str, Any]]", 0.0959131105337166], ["int", 0.08621348611308872], ["str", 0.08528500562524921], ["Type[Dict[Any, Any]]", 0.08321118962603359]], "database_method": [["str", 0.18491082529321262], ["Dict[str, str]", 0.17936045096941008], ["Dict[str, Union[int, str]]", 0.12437880949933812], ["dict", 0.1239487571697896], ["List[Dict[str, str]]", 0.10819297342030448], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.09054703494399718], ["Dict[str, Literal]", 0.08661450199089703]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "return_value": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[661, 4], [677, 26]], "fn_var_ln": {"database_method": [[665, 8], [665, 23]], "instance_exists_method": [[663, 8], [663, 30]], "instance_method": [[662, 8], [662, 23]], "res": [[667, 8], [667, 11]], "return_value": [[664, 8], [664, 43]], "run_in_transaction_method": [[666, 8], [666, 33]]}, "fn_var_occur": {"database_method": [["database_method", "instance_method", "return_value", "database"], ["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"], ["database_method", "assert_called_once_with", "database_id"]], "instance_exists_method": [["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"]], "instance_method": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["database_method", "instance_method", "return_value", "database"], ["instance_method", "assert_called_once_with", "instance_id"]], "res": [["res", "self", "spanner_hook_no_default_project_id", "execute_dml", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"], ["res", "None"]], "return_value": [["instance_method", "get_client", "return_value", "instance"], ["instance_exists_method", "instance_method", "return_value", "exists"], ["instance_exists_method", "return_value", "True"], ["database_method", "instance_method", "return_value", "database"], ["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"]], "run_in_transaction_method": [["run_in_transaction_method", "database_method", "return_value", "run_in_transaction"], ["run_in_transaction_method", "assert_called_once_with", "mock", "ANY"]]}, "name": "test_execute_dml_overridden_project_id", "params": {"get_client": "", "self": ""}, "params_descr": {"get_client": "", "self": ""}, "params_occur": {"get_client": [["instance_method", "get_client", "return_value", "instance"], ["get_client", "assert_called_once_with", "project_id"]], "self": [["res", "self", "spanner_hook_no_default_project_id", "execute_dml", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"]]}, "params_p": {"args": [], "get_client": [["str", 0.19662914689686922]], "kwargs": [], "self": []}, "q_name": "TestGcpSpannerHookNoDefaultProjectID.test_execute_dml_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"database_method": "", "instance_exists_method": "", "instance_method": "", "res": "", "return_value": "", "run_in_transaction_method": ""}, "variables_p": {"database_method": [["str", 0.3733641916621847], ["List[str]", 0.22693139773789622], ["Dict[Optional[str], str]", 0.10064722176126027], ["Optional[str]", 0.09480427284848383], ["Set[str]", 0.09016097579935858]], "instance_exists_method": [["List[str]", 0.214173563161821], ["int", 0.1934665122064927], ["str", 0.10158710816453156], ["bool", 0.10149545087681794], ["Dict[int, int]", 0.09721972240501528], ["dict", 0.09370140418065383], ["List[int]", 0.09240587185928753]], "instance_method": [["str", 0.7313740985856227], ["frozenset[Union[bytes, str]]", 0.09750856187014588], ["dict", 0.08595044497391262], ["Dict[str, str]", 0.08516689457031869]], "res": [["str", 0.7994752961009677], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10196866759181189], ["int", 0.09855603630722039]], "return_value": [["str", 1.0]], "run_in_transaction_method": [["List[Tuple[str, str, str, str, Any]]", 0.18876022990353186], ["int", 0.16259472212185389], ["list", 0.1139885726585951], ["List[Tuple[str, str]]", 0.11177116194191854], ["str", 0.08900933910268785]]}}], "name": "TestGcpSpannerHookNoDefaultProjectID", "q_name": "TestGcpSpannerHookNoDefaultProjectID", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "PropertyMock", "pytest", "airflow", "providers", "google", "cloud", "hooks", "spanner", "SpannerHook", "airflow", "providers", "google", "common", "consts", "CLIENT_INFO", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"SPANNER_CONFIGURATION": [[34, 0], [34, 21]], "SPANNER_DATABASE": [[35, 0], [35, 16]], "SPANNER_INSTANCE": [[33, 0], [33, 16]]}, "mod_var_occur": {"SPANNER_CONFIGURATION": [["res", "self", "spanner_hook_default_project_id", "create_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "create_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "update_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "update_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "create_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "update_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"]], "SPANNER_DATABASE": [["res", "self", "spanner_hook_default_project_id", "create_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "create_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "update_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "update_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "get_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "get_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "create_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "create_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_default_project_id", "update_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "update_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_default_project_id", "delete_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "delete_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "execute_dml", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "execute_dml", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"], ["res", "self", "spanner_hook_no_default_project_id", "create_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "update_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "get_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "create_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "operation_id", "ddl_statements"], ["res", "self", "spanner_hook_no_default_project_id", "delete_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["self", "spanner_hook_no_default_project_id", "delete_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "execute_dml", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"]], "SPANNER_INSTANCE": [["res", "self", "spanner_hook_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id"], ["res", "self", "spanner_hook_default_project_id", "create_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "create_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "update_instance", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "update_instance", "project_id", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "delete_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "delete_instance", "project_id", "instance_id", "SPANNER_INSTANCE"], ["res", "self", "spanner_hook_default_project_id", "get_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "get_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "create_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "create_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_default_project_id", "update_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "update_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_default_project_id", "delete_database", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "delete_database", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_default_project_id", "execute_dml", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_default_project_id", "execute_dml", "project_id", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"], ["res", "self", "spanner_hook_no_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_no_default_project_id", "get_instance", "instance_id", "SPANNER_INSTANCE", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST"], ["res", "self", "spanner_hook_no_default_project_id", "create_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "update_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "configuration_name", "SPANNER_CONFIGURATION", "node_count", "display_name", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "delete_instance", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE"], ["res", "self", "spanner_hook_no_default_project_id", "get_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "create_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "ddl_statements"], ["res", "self", "spanner_hook_no_default_project_id", "update_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "operation_id", "ddl_statements"], ["res", "self", "spanner_hook_no_default_project_id", "delete_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["self", "spanner_hook_no_default_project_id", "delete_database", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE"], ["res", "self", "spanner_hook_no_default_project_id", "execute_dml", "project_id", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "instance_id", "SPANNER_INSTANCE", "database_id", "SPANNER_DATABASE", "queries"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 247}, "session_id": "LT1pe3ETXC6hExKwQHSp4egghdmzYqgj024w9QMZVk4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"SPANNER_CONFIGURATION": "", "SPANNER_DATABASE": "", "SPANNER_INSTANCE": ""}, "variables_p": {"SPANNER_CONFIGURATION": [["int", 0.8000561596392872], ["float", 0.10492226814543795]], "SPANNER_DATABASE": [["int", 0.8000561596392872], ["float", 0.10492226814543795]], "SPANNER_INSTANCE": [["int", 0.2812774345652386], ["str", 0.2526339917381769], ["Tuple[str, str, str, str, str, str, str]", 0.09377436258913083], ["Optional[str]", 0.09005425814923435]]}}}