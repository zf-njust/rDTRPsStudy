{"error": null, "response": {"classes": [{"cls_lc": [[84, 0], [164, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [87, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudDataCatalog.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [94, 64]], "fn_var_ln": {"hook": [[94, 12], [94, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudDataCatalog.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.3340297263545203], ["int", 0.08749328331681792]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [113, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_lookup_entry_with_linked_resource", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "lookup_entry", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3037499067794272], ["mock.MagicMock", 0.09364682551340431]], "self": []}, "q_name": "TestCloudDataCatalog.test_lookup_entry_with_linked_resource", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [129, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_lookup_entry_with_sql_resource", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "lookup_entry", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3178053962743536]], "self": []}, "q_name": "TestCloudDataCatalog.test_lookup_entry_with_sql_resource", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [140, 98]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_lookup_entry_without_resource", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "lookup_entry", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3178053962743536]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3178053962743536]], "self": []}, "q_name": "TestCloudDataCatalog.test_lookup_entry_without_resource", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[147, 4], [164, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_search_catalog", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.09250402271471952]], "mock_get_creds_and_project_id": [["mock.Mock", 0.2064674999364384], ["mock.MagicMock", 0.19886728044249147]], "self": []}, "q_name": "TestCloudDataCatalog.test_search_catalog", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestCloudDataCatalog", "q_name": "TestCloudDataCatalog", "variables": {}, "variables_p": {}}, {"cls_lc": [[167, 0], [693, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[168, 4], [173, 64]], "fn_var_ln": {"hook": [[173, 12], [173, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.3340297263545203], ["int", 0.08749328331681792]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[180, 4], [199, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3122512117107187]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_create_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[206, 4], [224, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3122512117107187]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_create_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [250, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.4300112453282143]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_create_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[257, 4], [276, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_protobuff", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.4300112453282143]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_create_tag_protobuff", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[283, 4], [301, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3329820900947162]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_create_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[308, 4], [327, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.7297660821547045]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_create_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[334, 4], [350, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.10234633624842633]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_delete_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[357, 4], [372, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_delete_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[379, 4], [396, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.42521754056932154]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_delete_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[403, 4], [417, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.32618268051438265]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_delete_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[424, 4], [442, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.7283310704405457]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_delete_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[449, 4], [465, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.09226702173567725]], "mock_get_creds_and_project_id": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_get_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[472, 4], [489, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_get_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[496, 4], [511, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3118738027133348], ["mock.MagicMock", 0.1906893181503166]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_get_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[518, 4], [536, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_tags", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3362110079675851]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_list_tags", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[543, 4], [566, 30]], "fn_var_ln": {"result": [[548, 8], [548, 14]], "tag_1": [[544, 8], [544, 13]], "tag_2": [[545, 8], [545, 13]]}, "fn_var_occur": {"result": [["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "tag_2"]], "tag_1": [["tag_1", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format"], ["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"]], "tag_2": [["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1"], ["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"], ["result", "tag_2"]]}, "name": "test_get_tag_for_template_name", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.09974015588208243], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09378346049861591], ["str", 0.09112087999437238]], "mock_get_creds_and_project_id": [["mock.Mock", 0.5052084925352338]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_get_tag_for_template_name", "ret_exprs": [], "ret_type": "None", "variables": {"result": "", "tag_1": "", "tag_2": ""}, "variables_p": {"result": [["str", 0.48672301252025885], ["Dict[str, str]", 0.19724342798929523], ["Iterator[str]", 0.12456810814633282], ["OrderedDict[str, str]", 0.09783864864754054], ["List[Dict[str, str]]", 0.09362680269657249]], "tag_1": [["bytes", 0.22578640214613743], ["str", 0.21661642960690627], ["mock.Mock", 0.18397334944284693], ["List[Union[Any, Any]]", 0.08642709808631974]], "tag_2": [["str", 0.19571825918679275], ["mock.Mock", 0.19513825207568455], ["bytes", 0.09622199488652985]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[573, 4], [591, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rename_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.521759953096566]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_rename_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[598, 4], [617, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.30560614059322144], ["mock.MagicMock", 0.09415207008606075]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_update_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[624, 4], [641, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.42448691380332465]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_update_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[648, 4], [666, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3297869101922404]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_update_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[673, 4], [693, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.6380979758696187]], "self": []}, "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook.test_update_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestCloudDataCatalogWithDefaultProjectIdHook", "q_name": "TestCloudDataCatalogWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[696, 0], [1223, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[697, 4], [702, 64]], "fn_var_ln": {"hook": [[702, 12], [702, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.3340297263545203], ["int", 0.08749328331681792]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[709, 4], [729, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3122512117107187]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_create_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[736, 4], [755, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3122512117107187]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_create_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[762, 4], [782, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.4300112453282143]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_create_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[789, 4], [809, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_protobuff", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.4300112453282143]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_create_tag_protobuff", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[816, 4], [835, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3329820900947162]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_create_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[842, 4], [862, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.7297660821547045]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_create_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[869, 4], [884, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.10234633624842633]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_delete_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[891, 4], [905, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_delete_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[912, 4], [928, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.42521754056932154]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_delete_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[935, 4], [950, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.32618268051438265]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_delete_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[957, 4], [973, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.7283310704405457]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_delete_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[980, 4], [995, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.09226702173567725]], "mock_get_creds_and_project_id": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_get_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1002, 4], [1020, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_get_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1027, 4], [1041, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3118738027133348], ["mock.MagicMock", 0.1906893181503166]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_get_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1048, 4], [1064, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_tags", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3362110079675851]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_list_tags", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1071, 4], [1092, 30]], "fn_var_ln": {"result": [[1076, 8], [1076, 14]], "tag_1": [[1072, 8], [1072, 13]], "tag_2": [[1073, 8], [1073, 13]]}, "fn_var_occur": {"result": [["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "tag_2"]], "tag_1": [["tag_1", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format"], ["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"]], "tag_2": [["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2"], ["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"], ["result", "tag_2"]]}, "name": "test_get_tag_for_template_name", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.09974015588208243], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09378346049861591], ["str", 0.09112087999437238]], "mock_get_creds_and_project_id": [["mock.Mock", 0.5052084925352338]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_get_tag_for_template_name", "ret_exprs": [], "ret_type": "None", "variables": {"result": "", "tag_1": "", "tag_2": ""}, "variables_p": {"result": [["str", 0.48672301252025885], ["Dict[str, str]", 0.19724342798929523], ["Iterator[str]", 0.12456810814633282], ["OrderedDict[str, str]", 0.09783864864754054], ["List[Dict[str, str]]", 0.09362680269657249]], "tag_1": [["bytes", 0.22578640214613743], ["str", 0.21661642960690627], ["mock.Mock", 0.18397334944284693], ["List[Union[Any, Any]]", 0.08642709808631974]], "tag_2": [["str", 0.19571825918679275], ["mock.Mock", 0.19513825207568455], ["bytes", 0.09622199488652985]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1099, 4], [1118, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rename_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.521759953096566]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_rename_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1125, 4], [1144, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.30560614059322144], ["mock.MagicMock", 0.09415207008606075]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_update_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1151, 4], [1169, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.42448691380332465]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_update_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1176, 4], [1195, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.3297869101922404]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_update_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1202, 4], [1223, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_get_creds_and_project_id": [["mock.Mock", 0.6380979758696187]], "self": []}, "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook.test_update_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestCloudDataCatalogWithoutDefaultProjectIdHook", "q_name": "TestCloudDataCatalogWithoutDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[1232, 0], [1600, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1233, 4], [1238, 64]], "fn_var_ln": {"hook": [[1238, 12], [1238, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudDataCatalogHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.3340297263545203], ["int", 0.08749328331681792]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1245, 4], [1255, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3122512117107187]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3122512117107187]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_create_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1262, 4], [1271, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3122512117107187]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3122512117107187]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_create_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1278, 4], [1290, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.4300112453282143]], "mock_get_creds_and_project_id": [["mock.Mock", 0.4300112453282143]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_create_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1297, 4], [1309, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_protobuff", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.4300112453282143]], "mock_get_creds_and_project_id": [["mock.Mock", 0.4300112453282143]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_create_tag_protobuff", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1316, 4], [1326, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3329820900947162]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3329820900947162]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_create_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1333, 4], [1344, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.7297660821547045]], "mock_get_creds_and_project_id": [["mock.Mock", 0.7297660821547045]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_create_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1351, 4], [1361, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_delete_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1368, 4], [1376, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3071937606277874], ["mock.MagicMock", 0.19224291351713996]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_delete_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1383, 4], [1393, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.42521754056932154]], "mock_get_creds_and_project_id": [["mock.Mock", 0.42521754056932154]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_delete_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1400, 4], [1409, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.32618268051438265]], "mock_get_creds_and_project_id": [["mock.Mock", 0.32618268051438265]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_delete_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1416, 4], [1426, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.7283310704405457]], "mock_get_creds_and_project_id": [["mock.Mock", 0.7283310704405457]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_delete_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1433, 4], [1442, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "mock_get_creds_and_project_id": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_get_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1449, 4], [1458, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_entry_group", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "mock_get_creds_and_project_id": [["mock.Mock", 0.29539513111503224], ["mock.MagicMock", 0.20811493169468123]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_get_entry_group", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1465, 4], [1473, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3118738027133348], ["mock.MagicMock", 0.1906893181503166]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3118738027133348], ["mock.MagicMock", 0.1906893181503166]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_get_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1480, 4], [1490, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_tags", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3362110079675851]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3362110079675851]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_list_tags", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1497, 4], [1511, 13]], "fn_var_ln": {"tag_1": [[1498, 8], [1498, 13]], "tag_2": [[1499, 8], [1499, 13]]}, "fn_var_occur": {"tag_1": [["tag_1", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format"], ["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"]], "tag_2": [["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2"], ["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"]]}, "name": "test_get_tag_for_template_name", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_tags", "return_value", "tag_1", "tag_2"]], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.1127912015810409], ["mock.Mock", 0.09930507429803022]], "mock_get_creds_and_project_id": [["mock.Mock", 0.5052084925352338]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_get_tag_for_template_name", "ret_exprs": [], "ret_type": "None", "variables": {"tag_1": "", "tag_2": ""}, "variables_p": {"tag_1": [["bytes", 0.22578640214613743], ["str", 0.21661642960690627], ["mock.Mock", 0.18397334944284693], ["List[Union[Any, Any]]", 0.08642709808631974]], "tag_2": [["str", 0.19571825918679275], ["mock.Mock", 0.19513825207568455], ["bytes", 0.09622199488652985]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1518, 4], [1528, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rename_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.521759953096566]], "mock_get_creds_and_project_id": [["mock.Mock", 0.521759953096566]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_rename_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1535, 4], [1546, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_entry", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.30560614059322144], ["mock.MagicMock", 0.09415207008606075]], "mock_get_creds_and_project_id": [["mock.Mock", 0.30560614059322144], ["mock.MagicMock", 0.09415207008606075]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_update_entry", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1553, 4], [1565, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.42448691380332465]], "mock_get_creds_and_project_id": [["mock.Mock", 0.42448691380332465]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_update_tag", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1572, 4], [1582, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag_template", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3297869101922404]], "mock_get_creds_and_project_id": [["mock.Mock", 0.3297869101922404]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_update_tag_template", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1589, 4], [1600, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_tag_template_field", "params": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_get_creds_and_project_id": [], "self": [["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.6380979758696187]], "mock_get_creds_and_project_id": [["mock.Mock", 0.6380979758696187]], "self": []}, "q_name": "TestCloudDataCatalogMissingProjectIdHook.test_update_tag_template_field", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestCloudDataCatalogMissingProjectIdHook", "q_name": "TestCloudDataCatalogMissingProjectIdHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "re", "copy", "deepcopy", "typing", "Sequence", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "_MethodDefault", "google", "api_core", "retry", "Retry", "google", "cloud", "datacatalog", "CreateTagRequest", "CreateTagTemplateRequest", "Entry", "Tag", "TagTemplate", "google", "protobuf", "field_mask_pb2", "FieldMask", "airflow", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "datacatalog", "CloudDataCatalogHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"TEST_CREDENTIALS": [[81, 0], [81, 16]], "TEST_ENTRY": [[40, 0], [40, 10]], "TEST_ENTRY_GROUP": [[45, 0], [45, 16]], "TEST_ENTRY_GROUP_ID": [[44, 0], [44, 19]], "TEST_ENTRY_GROUP_PATH": [[69, 0], [69, 21]], "TEST_ENTRY_ID": [[39, 0], [39, 13]], "TEST_ENTRY_PATH": [[66, 0], [66, 15]], "TEST_FORCE": [[51, 0], [51, 10]], "TEST_GCP_CONN_ID": [[37, 0], [37, 16]], "TEST_LINKED_RESOURCE": [[55, 0], [55, 20]], "TEST_LOCATION": [[38, 0], [38, 13]], "TEST_LOCATION_PATH": [[65, 0], [65, 18]], "TEST_MESSAGE": [[1226, 0], [1226, 12]], "TEST_METADATA": [[43, 0], [43, 13]], "TEST_NAME": [[63, 0], [63, 9]], "TEST_NEW_TAG_TEMPLATE_FIELD_ID": [[57, 0], [57, 30]], "TEST_ORDER_BY": [[60, 0], [60, 13]], "TEST_PAGE_SIZE": [[54, 0], [54, 14]], "TEST_PARENT": [[62, 0], [62, 11]], "TEST_PROJECT_ID_1": [[79, 0], [79, 17]], "TEST_PROJECT_ID_2": [[80, 0], [80, 17]], "TEST_QUERY": [[59, 0], [59, 10]], "TEST_READ_MASK": [[52, 0], [52, 14]], "TEST_RESOURCE": [[53, 0], [53, 13]], "TEST_RETRY": [[41, 0], [41, 10]], "TEST_SCOPE": [[58, 0], [58, 10]], "TEST_SQL_RESOURCE": [[56, 0], [56, 17]], "TEST_TAG": [[46, 0], [46, 8]], "TEST_TAG_ID": [[64, 0], [64, 11]], "TEST_TAG_PATH": [[75, 0], [75, 13]], "TEST_TAG_TEMPLATE": [[48, 0], [48, 17]], "TEST_TAG_TEMPLATE_FIELD": [[50, 0], [50, 23]], "TEST_TAG_TEMPLATE_FIELD_ID": [[49, 0], [49, 26]], "TEST_TAG_TEMPLATE_FIELD_PATH": [[71, 0], [71, 28]], "TEST_TAG_TEMPLATE_ID": [[47, 0], [47, 20]], "TEST_TAG_TEMPLATE_PATH": [[70, 0], [70, 22]], "TEST_TIMEOUT": [[42, 0], [42, 12]], "TEST_UPDATE_MASK": [[61, 0], [61, 16]]}, "mod_var_occur": {"TEST_CREDENTIALS": [], "TEST_ENTRY": [["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_ENTRY_GROUP": [["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_ENTRY_GROUP_ID": [["TEST_ENTRY_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID", "TEST_ENTRY_ID"], ["TEST_ENTRY_GROUP_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID"], ["TEST_TAG_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID", "TEST_ENTRY_ID", "TEST_TAG_ID"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_ENTRY_GROUP_PATH": [["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_ENTRY_ID": [["TEST_ENTRY_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID", "TEST_ENTRY_ID"], ["TEST_TAG_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID", "TEST_ENTRY_ID", "TEST_TAG_ID"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_ENTRY_PATH": [["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_FORCE": [["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_GCP_CONN_ID": [], "TEST_LINKED_RESOURCE": [["self", "hook", "lookup_entry", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_LOCATION": [["TEST_LOCATION_PATH", "builtins", "str", "TEST_LOCATION"], ["TEST_ENTRY_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID", "TEST_ENTRY_ID"], ["TEST_ENTRY_GROUP_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID"], ["TEST_TAG_TEMPLATE_PATH", "builtins", "str", "TEST_LOCATION", "TEST_TAG_TEMPLATE_ID"], ["TEST_TAG_TEMPLATE_FIELD_PATH", "builtins", "str", "TEST_LOCATION", "TEST_TAG_TEMPLATE_ID", "TEST_TAG_TEMPLATE_FIELD_ID"], ["TEST_TAG_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID", "TEST_ENTRY_ID", "TEST_TAG_ID"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_LOCATION_PATH": [["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_MESSAGE": [["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"], ["pytest", "raises", "AirflowException", "match", "TEST_MESSAGE"]], "TEST_METADATA": [["self", "hook", "lookup_entry", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "lookup_entry", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "lookup_entry", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_NAME": [], "TEST_NEW_TAG_TEMPLATE_FIELD_ID": [["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_ORDER_BY": [["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PAGE_SIZE": [["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PARENT": [], "TEST_PROJECT_ID_1": [["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PROJECT_ID_2": [["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_QUERY": [["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_READ_MASK": [["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_RESOURCE": [], "TEST_RETRY": [["self", "hook", "lookup_entry", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "lookup_entry", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "lookup_entry", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_SCOPE": [["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_SQL_RESOURCE": [["self", "hook", "lookup_entry", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG": [["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_ID": [["TEST_TAG_PATH", "builtins", "str", "TEST_LOCATION", "TEST_ENTRY_GROUP_ID", "TEST_ENTRY_ID", "TEST_TAG_ID"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_PATH": [["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_TEMPLATE": [["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_TEMPLATE_FIELD": [["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_TEMPLATE_FIELD_ID": [["TEST_TAG_TEMPLATE_FIELD_PATH", "builtins", "str", "TEST_LOCATION", "TEST_TAG_TEMPLATE_ID", "TEST_TAG_TEMPLATE_FIELD_ID"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_TEMPLATE_FIELD_PATH": [["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_TEMPLATE_ID": [["TEST_TAG_TEMPLATE", "builtins", "dict", "TEST_TAG_TEMPLATE_ID"], ["TEST_TAG_TEMPLATE_PATH", "builtins", "str", "TEST_LOCATION", "TEST_TAG_TEMPLATE_ID"], ["TEST_TAG_TEMPLATE_FIELD_PATH", "builtins", "str", "TEST_LOCATION", "TEST_TAG_TEMPLATE_ID", "TEST_TAG_TEMPLATE_FIELD_ID"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TAG_TEMPLATE_PATH": [["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["tag_1", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format"], ["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["tag_1", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format"], ["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["tag_1", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format"], ["tag_2", "mock", "MagicMock", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TIMEOUT": [["self", "hook", "lookup_entry", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "linked_resource", "TEST_LINKED_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "lookup_entry", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "lookup_entry", "assert_called_once_with", "request", "dict", "sql_resource", "TEST_SQL_RESOURCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "lookup_entry", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "search_catalog", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "search_catalog", "assert_called_once_with", "request", "dict", "scope", "TEST_SCOPE", "query", "TEST_QUERY", "page_size", "TEST_PAGE_SIZE", "order_by", "TEST_ORDER_BY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_1", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_entry_group", "assert_called_once_with", "request", "dict", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag", "assert_called_once_with", "request", "CreateTagRequest", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "tag", "Tag", "template", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template", "assert_called_once_with", "request", "CreateTagTemplateRequest", "parent", "TEST_LOCATION_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_tag_template_field", "assert_called_once_with", "request", "dict", "parent", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_entry_group", "assert_called_once_with", "request", "dict", "name", "TEST_ENTRY_GROUP_PATH", "format", "TEST_PROJECT_ID_2", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_tag_template", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_tags", "assert_called_once_with", "request", "dict", "parent", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "page_size", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "rename_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "entry", "TEST_ENTRY", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_entry_group", "location", "TEST_LOCATION", "entry_group_id", "TEST_ENTRY_GROUP_ID", "entry_group", "TEST_ENTRY_GROUP", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "deepcopy", "TEST_TAG", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "Tag", "template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "tag_template", "TEST_TAG_TEMPLATE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "force", "TEST_FORCE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_entry_group", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "read_mask", "TEST_READ_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_template", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_tags", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_tag_for_template_name", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "template_name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "rename_tag_template_field", "location", "TEST_LOCATION", "tag_template", "TEST_TAG_TEMPLATE_ID", "field", "TEST_TAG_TEMPLATE_FIELD_ID", "new_tag_template_field_id", "TEST_NEW_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_UPDATE_MASK": [["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_1", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_1", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_entry", "assert_called_once_with", "request", "dict", "entry", "Entry", "name", "TEST_ENTRY_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag", "assert_called_once_with", "request", "dict", "tag", "Tag", "name", "TEST_TAG_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template", "assert_called_once_with", "request", "dict", "tag_template", "TagTemplate", "name", "TEST_TAG_TEMPLATE_PATH", "format", "TEST_PROJECT_ID_2", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "project_id", "TEST_PROJECT_ID_2", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_tag_template_field", "assert_called_once_with", "request", "dict", "name", "TEST_TAG_TEMPLATE_FIELD_PATH", "format", "TEST_PROJECT_ID_2", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_entry", "entry", "TEST_ENTRY", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry_id", "TEST_ENTRY_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag", "tag", "deepcopy", "TEST_TAG", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "entry_group", "TEST_ENTRY_GROUP_ID", "entry", "TEST_ENTRY_ID", "tag_id", "TEST_TAG_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template", "tag_template", "TEST_TAG_TEMPLATE", "update_mask", "TEST_UPDATE_MASK", "location", "TEST_LOCATION", "tag_template_id", "TEST_TAG_TEMPLATE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_tag_template_field", "tag_template_field", "TEST_TAG_TEMPLATE_FIELD", "update_mask", "TEST_UPDATE_MASK", "tag_template", "TEST_TAG_TEMPLATE_ID", "location", "TEST_LOCATION", "tag_template_field_id", "TEST_TAG_TEMPLATE_FIELD_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "no_types_annot": {"D": 101, "I": 0, "U": 155}, "session_id": "I8DMWQTIhcdSZ-XicZ0GU-Q9RvKRAokwXfa-F3NpxPk", "set": null, "tc": [false, null], "type_annot_cove": 0.39, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_CREDENTIALS": "", "TEST_ENTRY": "builtins.dict", "TEST_ENTRY_GROUP": "builtins.dict", "TEST_ENTRY_GROUP_ID": "builtins.str", "TEST_ENTRY_GROUP_PATH": "builtins.str", "TEST_ENTRY_ID": "builtins.str", "TEST_ENTRY_PATH": "builtins.str", "TEST_FORCE": "builtins.bool", "TEST_GCP_CONN_ID": "builtins.str", "TEST_LINKED_RESOURCE": "builtins.str", "TEST_LOCATION": "builtins.str", "TEST_LOCATION_PATH": "builtins.str", "TEST_MESSAGE": "", "TEST_METADATA": "typing.Sequence[builtins.tuple[builtins.str, builtins.str]]", "TEST_NAME": "builtins.str", "TEST_NEW_TAG_TEMPLATE_FIELD_ID": "builtins.str", "TEST_ORDER_BY": "builtins.str", "TEST_PAGE_SIZE": "builtins.int", "TEST_PARENT": "builtins.str", "TEST_PROJECT_ID_1": "", "TEST_PROJECT_ID_2": "", "TEST_QUERY": "builtins.str", "TEST_READ_MASK": "google.protobuf.field_mask_pb2.FieldMask", "TEST_RESOURCE": "builtins.str", "TEST_RETRY": "Retry | _MethodDefault", "TEST_SCOPE": "builtins.dict", "TEST_SQL_RESOURCE": "builtins.str", "TEST_TAG": "builtins.dict", "TEST_TAG_ID": "builtins.str", "TEST_TAG_PATH": "builtins.str", "TEST_TAG_TEMPLATE": "builtins.dict", "TEST_TAG_TEMPLATE_FIELD": "builtins.dict", "TEST_TAG_TEMPLATE_FIELD_ID": "builtins.str", "TEST_TAG_TEMPLATE_FIELD_PATH": "builtins.str", "TEST_TAG_TEMPLATE_ID": "builtins.str", "TEST_TAG_TEMPLATE_PATH": "builtins.str", "TEST_TIMEOUT": "builtins.float", "TEST_UPDATE_MASK": "builtins.dict"}, "variables_p": {"TEST_CREDENTIALS": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_ENTRY": [["str", 0.8889320373815544], ["int", 0.11106796261844568]], "TEST_ENTRY_GROUP": [["str", 0.6363322057839437], ["Dict[str, str]", 0.19423340597932598], ["Dict[str, Union[Any, str]]", 0.0886796762793566], ["List[Dict[str, str]]", 0.08075471195737377]], "TEST_ENTRY_GROUP_ID": [["str", 0.9999999999999998]], "TEST_ENTRY_GROUP_PATH": [["str", 0.781324066624962]], "TEST_ENTRY_ID": [["str", 0.8766117218267303], ["list", 0.1233882781732696]], "TEST_ENTRY_PATH": [["str", 0.7734494292912694], ["mock.Mock", 0.12697315648921295]], "TEST_FORCE": [["str", 0.5754293492573702], ["int", 0.2825502579783189]], "TEST_GCP_CONN_ID": [["str", 0.6916622581692238], ["Optional[str]", 0.10947808602664154], ["bool", 0.08516566607705627]], "TEST_LINKED_RESOURCE": [["str", 0.8823789731396793], ["List[str]", 0.11762102686032104]], "TEST_LOCATION": [["str", 0.9999999999999998]], "TEST_LOCATION_PATH": [["str", 0.6802724434273395]], "TEST_MESSAGE": [["str", 0.7377616534864025], ["Dict[str, str]", 0.08788539954711615]], "TEST_METADATA": [["str", 0.6035617090094851], ["List[str]", 0.08429540820178757]], "TEST_NAME": [["str", 0.8999999999999999], ["List[str]", 0.09999999999999999]], "TEST_NEW_TAG_TEMPLATE_FIELD_ID": [["str", 0.6189120260682186], ["int", 0.18278040489792358], ["Dict[str, str]", 0.10277793113267363], ["List[Tuple[str, str]]", 0.09552963790118407]], "TEST_ORDER_BY": [["Dict[str, Tuple[int, int]]", 0.4197376639153808], ["Dict[str, Union[Any, Any, bytes, float, str]]", 0.1753304119296762], ["int", 0.1295282555555837], ["Dict[str, Tuple[int, int, int]]", 0.09408750238019456], ["Dict[str, Dict[str, str]]", 0.09126785550320121], ["Dict[str, Union[int, Any]]", 0.09004831071596352]], "TEST_PAGE_SIZE": [["str", 0.8200221136560547], ["Dict[str, Union[Any, Any, Any, str]]", 0.09063672094752913], ["int", 0.08934116539641632]], "TEST_PARENT": [["str", 0.3977580322473486], ["Type[int]", 0.10305754211486255], ["list", 0.08393479846215902], ["List[Tuple[str, str]]", 0.08165958715281336], ["Dict[str, Union[Any, Any]]", 0.07548603874988584]], "TEST_PROJECT_ID_1": [["str", 0.42903400003567643], ["bool", 0.10488652764154456], ["int", 0.07344000387138729]], "TEST_PROJECT_ID_2": [["str", 1.0]], "TEST_QUERY": [["Tuple[str, str, str, str, str, str, str, str, str, str, str, str]", 0.11585262145436925], ["list", 0.10546604094983907], ["Type[Dict[str, Any]]", 0.10348816388372856], ["List[str]", 0.10108463878695019], ["int", 0.10069461003234778], ["Counter[str]", 0.09735497492920177]], "TEST_READ_MASK": [["str", 0.21301948368591966], ["int", 0.10379683495828872]], "TEST_RESOURCE": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_RETRY": [["str", 0.6035617090094851], ["List[str]", 0.08429540820178757]], "TEST_SCOPE": [["Dict[str, Tuple[int, int]]", 0.4197376639153808], ["Dict[str, Union[Any, Any, bytes, float, str]]", 0.1753304119296762], ["int", 0.1295282555555837], ["Dict[str, Tuple[int, int, int]]", 0.09408750238019456], ["Dict[str, Dict[str, str]]", 0.09126785550320121], ["Dict[str, Union[int, Any]]", 0.09004831071596352]], "TEST_SQL_RESOURCE": [["str", 0.6495313476635713], ["List[Union[Any, Any]]", 0.09482252577734158], ["Optional[str]", 0.08842466038086359], ["Dict[str, str]", 0.08339324416058509]], "TEST_TAG": [["list", 0.39257567069472754], ["str", 0.15000512999382581], ["List[str]", 0.09355507293145379], ["Dict[str, List[str]]", 0.09198051223051745], ["bytes", 0.0884064969192602], ["Dict[str, str]", 0.08652963943875792]], "TEST_TAG_ID": [["str", 1.0000000000000002]], "TEST_TAG_PATH": [["Dict[str, str]", 0.11802061733112808], ["Type[Callable[[], float]]", 0.08761585549184982], ["Dict[str, Any]", 0.08018825085964248]], "TEST_TAG_TEMPLATE": [["str", 0.9999999999999999]], "TEST_TAG_TEMPLATE_FIELD": [["str", 1.0]], "TEST_TAG_TEMPLATE_FIELD_ID": [["str", 1.0000000000000002]], "TEST_TAG_TEMPLATE_FIELD_PATH": [["str", 1.0000000000000002]], "TEST_TAG_TEMPLATE_ID": [["dict", 0.7881024247236672], ["str", 0.21189757527633266]], "TEST_TAG_TEMPLATE_PATH": [["str", 0.8136717435119208], ["mock.Mock", 0.09483810308374267]], "TEST_TIMEOUT": [["str", 0.6751798930750907], ["Tuple[str, str, str, str, str, str, str, str, str, str, str]", 0.10871140637809558], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str]", 0.10871140637809558], ["List[str]", 0.10739729416871811]], "TEST_UPDATE_MASK": [["str", 0.7981211675580423], ["int", 0.20187883244195767]]}}}