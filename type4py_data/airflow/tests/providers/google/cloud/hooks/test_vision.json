{"error": null, "response": {"classes": [{"cls_lc": [[89, 0], [923, 47]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 4], [92, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [99, 59]], "fn_var_ln": {"hook": [[99, 12], [99, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudVisionHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudVisionHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["simulation.core.common.Resources", 0.12038734605934608], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [107, 42]], "fn_var_ln": {"result": [[104, 8], [104, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "get_conn"], ["mock_client", "return_value", "result"], ["self", "hook", "_client", "result"]]}, "name": "test_product_search_client_creation", "params": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_creds": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"], ["mock_client", "return_value", "result"]], "mock_get_creds": [["mock_client", "assert_called_once_with", "credentials", "mock_get_creds", "return_value", "client_info", "CLIENT_INFO"]], "self": [["result", "self", "hook", "get_conn"], ["self", "hook", "_client", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_creds": [], "self": []}, "q_name": "TestGcpVisionHook.test_product_search_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["Generator[Any, None, None]", 0.19584605297859675], ["str", 0.15207621383817294]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [137, 9]], "fn_var_ln": {"create_product_set_method": [[112, 8], [112, 33]], "parent": [[114, 8], [114, 14]], "product_set": [[115, 8], [115, 19]], "result": [[117, 8], [117, 14]], "return_value": [[113, 8], [113, 46]]}, "fn_var_occur": {"create_product_set_method": [["create_product_set_method", "get_conn", "return_value", "create_product_set"], ["create_product_set_method", "return_value", "None"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "PRODUCTSET_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "parent": [["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "PRODUCTSET_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product_set": [["product_set", "ProductSet"], ["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "PRODUCTSET_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "result": [["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "PRODUCTSET_ID_TEST"]], "return_value": [["create_product_set_method", "get_conn", "return_value", "create_product_set"], ["create_product_set_method", "return_value", "None"]]}, "name": "test_create_productset_explicit_id", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_product_set_method", "get_conn", "return_value", "create_product_set"]], "self": [["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [["str", 0.3157922862668223], ["int", 0.17940676648283949], ["Dict[str, Any]", 0.12233615639550352], ["raiden.utils.TokenAmount", 0.09627468333179405], ["mock.MagicMock", 0.07923974599999228]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_productset_explicit_id", "ret_exprs": [], "ret_type": "", "variables": {"create_product_set_method": "", "parent": "", "product_set": "", "result": "", "return_value": ""}, "variables_p": {"create_product_set_method": [["dict", 0.25966434760288926], ["Type[Dict[Any, Any]]", 0.09049416738671383]], "parent": [["dict", 0.11112101864268216], ["list", 0.09552666852066911]], "product_set": [["Dict[str, str]", 0.137518909155588], ["str", 0.10828225371106022], ["Pattern[Any]", 0.09794553235173348], ["int", 0.0930594827778164], ["list", 0.09024411484848358]], "result": [["dict", 0.14163804883475342], ["Dict[str, List[Any]]", 0.09978995004781968], ["list", 0.09407491564348404], ["tests.core.data.json.test_json_repository.DummyEntity", 0.0931397255244608], ["Dict[str, int]", 0.09181161834226684]], "return_value": [["Type[Dict[Any, Any]]", 0.1189846222803507], ["str", 0.09988556659284534], ["Tuple[int, int]", 0.09637431015086426], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09350462053932414], ["Dict[str, str]", 0.09194894531038733]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [165, 9]], "fn_var_ln": {"autogenerated_id": [[142, 8], [142, 24]], "create_product_set_method": [[146, 8], [146, 33]], "parent": [[148, 8], [148, 14]], "product_set": [[149, 8], [149, 19]], "response_product_set": [[143, 8], [143, 28]], "result": [[151, 8], [151, 14]], "return_value": [[147, 8], [147, 46]]}, "fn_var_occur": {"autogenerated_id": [["response_product_set", "ProductSet", "name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["result", "autogenerated_id"]], "create_product_set_method": [["create_product_set_method", "get_conn", "return_value", "create_product_set"], ["create_product_set_method", "return_value", "response_product_set"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "parent": [["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product_set": [["product_set", "ProductSet"], ["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response_product_set": [["response_product_set", "ProductSet", "name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["create_product_set_method", "return_value", "response_product_set"]], "result": [["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST"], ["result", "autogenerated_id"]], "return_value": [["create_product_set_method", "get_conn", "return_value", "create_product_set"], ["create_product_set_method", "return_value", "response_product_set"]]}, "name": "test_create_productset_autogenerated_id", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_product_set_method", "get_conn", "return_value", "create_product_set"]], "self": [["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["str", 0.3157922862668223], ["int", 0.17940676648283949], ["Dict[str, Any]", 0.12233615639550352], ["raiden.utils.TokenAmount", 0.09627468333179405], ["mock.MagicMock", 0.07923974599999228]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_productset_autogenerated_id", "ret_exprs": [], "ret_type": "", "variables": {"autogenerated_id": "", "create_product_set_method": "", "parent": "", "product_set": "", "response_product_set": "", "result": "", "return_value": ""}, "variables_p": {"autogenerated_id": [["str", 1.0000000000000002]], "create_product_set_method": [["dict", 0.22678392976165176], ["List[Dict[str, Any]]", 0.2006711980386267], ["Type[Dict[Any, Any]]", 0.10470751589362538], ["Dict[str, Union[None, Any, Any]]", 0.08532621476976318], ["Dict[str, Union[float, str]]", 0.08245918547093378], ["Optional[bytes]", 0.0804306339880826]], "parent": [["dict", 0.11112101864268216], ["list", 0.09552666852066911]], "product_set": [["Dict[str, Tuple[Any, Any]]", 0.19538770895699845], ["str", 0.18726220732892662], ["List[Dict[str, Any]]", 0.10823847212600492], ["List[Tuple[str, str, str]]", 0.10823847212600492], ["Dict[Type[Any], Union[Any, Any]]", 0.10197476378320612], ["Pattern[str]", 0.09349762021995627]], "response_product_set": [["Dict[str, str]", 0.44705080911683065], ["str", 0.34814108877554373], ["list", 0.11245708241345186], ["List[str]", 0.09235101969417375]], "result": [["OrderedDict[str, Any]", 0.28603174083581706], ["Dict[str, Any]", 0.11148383766182417], ["Dict[str, int]", 0.11124864315055606], ["dict", 0.09619876704720974]], "return_value": [["Type[Dict[Any, Any]]", 0.11403648607863157], ["str", 0.1128755314424048], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09306400609961109], ["bytes", 0.09281095807871069], ["Tuple[int, int]", 0.09281036104914821]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[168, 4], [197, 9]], "fn_var_ln": {"create_product_set_method": [[171, 8], [171, 33]], "err": [[188, 8], [188, 11]], "parent": [[173, 8], [173, 14]], "product_set": [[174, 8], [174, 19]], "response_product_set": [[170, 8], [170, 28]], "return_value": [[172, 8], [172, 46]]}, "fn_var_occur": {"create_product_set_method": [["create_product_set_method", "get_conn", "return_value", "create_product_set"], ["create_product_set_method", "return_value", "response_product_set"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "err": [["err", "ctx", "value"], ["str", "err"]], "parent": [["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product_set": [["product_set", "ProductSet"], ["self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response_product_set": [["response_product_set", "None"], ["create_product_set_method", "return_value", "response_product_set"]], "return_value": [["create_product_set_method", "get_conn", "return_value", "create_product_set"], ["create_product_set_method", "return_value", "response_product_set"]]}, "name": "test_create_productset_autogenerated_id_wrong_api_response", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_product_set_method", "get_conn", "return_value", "create_product_set"]], "self": [["self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [["Dict[str, Any]", 0.10603895732498762], ["mock.MagicMock", 0.10342343099241876], ["raiden.utils.TokenAmount", 0.0970140441375355], ["int", 0.09485222600616919]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_productset_autogenerated_id_wrong_api_response", "ret_exprs": [], "ret_type": "", "variables": {"create_product_set_method": "", "err": "", "parent": "", "product_set": "", "response_product_set": "", "return_value": ""}, "variables_p": {"create_product_set_method": [["dict", 0.22678392976165176], ["List[Dict[str, Any]]", 0.2006711980386267], ["Type[Dict[Any, Any]]", 0.10470751589362538], ["Dict[str, Union[None, Any, Any]]", 0.08532621476976318], ["Dict[str, Union[float, str]]", 0.08245918547093378], ["Optional[bytes]", 0.0804306339880826]], "err": [["str", 0.30401277098330504], ["frozenset[str]", 0.27162558243657475], ["int", 0.2667999344278643], ["Final", 0.0789964170559774]], "parent": [["dict", 0.11112101864268216], ["list", 0.09552666852066911]], "product_set": [["str", 0.3048538401100022], ["dict", 0.2014964556730119], ["Dict[str, Optional[str]]", 0.11882370957878832], ["List[str]", 0.09602436673695286], ["Dict[str, Any]", 0.09135577810498698], ["Dict[str, float]", 0.08772130670194027]], "response_product_set": [["Optional[bool]", 0.4666179792232651], ["Optional[str]", 0.19461077514363648], ["bool", 0.1320386594248779], ["Dict[str, Union[int, str]]", 0.1148498784009446], ["Type[Dict[str, Any]]", 0.09188270780727595]], "return_value": [["Type[Dict[Any, Any]]", 0.11403648607863157], ["str", 0.1128755314424048], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09306400609961109], ["bytes", 0.09281095807871069], ["Tuple[int, int]", 0.09281036104914821]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[200, 4], [213, 107]], "fn_var_ln": {"get_product_set_method": [[204, 8], [204, 30]], "name": [[202, 8], [202, 12]], "response": [[207, 8], [207, 16]], "response_product_set": [[203, 8], [203, 28]], "return_value": [[205, 8], [205, 43]]}, "fn_var_occur": {"get_product_set_method": [["get_product_set_method", "get_conn", "return_value", "get_product_set"], ["get_product_set_method", "return_value", "response_product_set"], ["get_product_set_method", "assert_called_once_with", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "name": [["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["response_product_set", "ProductSet", "name", "name"], ["get_product_set_method", "assert_called_once_with", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response": [["response", "self", "hook", "get_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["response", "MessageToDict", "response_product_set", "_pb"]], "response_product_set": [["response_product_set", "ProductSet", "name", "name"], ["get_product_set_method", "return_value", "response_product_set"], ["response", "MessageToDict", "response_product_set", "_pb"]], "return_value": [["get_product_set_method", "get_conn", "return_value", "get_product_set"], ["get_product_set_method", "return_value", "response_product_set"]]}, "name": "test_get_productset", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["get_product_set_method", "get_conn", "return_value", "get_product_set"]], "self": [["response", "self", "hook", "get_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["int", 0.10074819047006507]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_get_productset", "ret_exprs": [], "ret_type": "", "variables": {"get_product_set_method": "", "name": "", "response": "", "response_product_set": "", "return_value": ""}, "variables_p": {"get_product_set_method": [["List[str]", 0.4088824962770282], ["Dict[str, List[Any]]", 0.2109968211228089], ["str", 0.09837160828174843], ["Dict[str, str]", 0.09522761196562797], ["Dict[str, Union[None, Any, int]]", 0.09328992390839523], ["List[Tuple[str, Any]]", 0.09323153844439125]], "name": [["str", 1.0000000000000002]], "response": [["Dict[str, str]", 0.41031244477298984], ["str", 0.39560248542030085], ["List[str]", 0.10603859823926405], ["Tuple[str, str, str]", 0.08804647156744516]], "response_product_set": [["Dict[str, Any]", 0.21024867414234844], ["Dict[str, Optional[Any]]", 0.18920400222584424], ["Dict[Any, Dict[Any, Any]]", 0.18552476644699606], ["dict", 0.09538684156125125], ["Dict[str, List[Any]]", 0.08967103653154619]], "return_value": [["str", 0.3652716444587877], ["Dict[str, List[str]]", 0.17747269756812778], ["Dict[str, Union[bool, str]]", 0.08727466571305079], ["Type[Dict[str, Any]]", 0.08711878980916514]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[216, 4], [243, 9]], "fn_var_ln": {"product_set": [[218, 8], [218, 19]], "productset_name": [[221, 8], [221, 23]], "result": [[225, 8], [225, 14]], "return_value": [[220, 8], [220, 46]], "update_product_set_method": [[219, 8], [219, 33]]}, "fn_var_occur": {"product_set": [["product_set", "ProductSet"], ["update_product_set_method", "return_value", "product_set"], ["result", "self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product_set", "_pb"], ["update_product_set_method", "assert_called_once_with", "product_set", "ProductSet", "name", "productset_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "productset_name": [["productset_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["update_product_set_method", "assert_called_once_with", "product_set", "ProductSet", "name", "productset_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "result": [["result", "self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product_set", "_pb"]], "return_value": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "product_set"]], "update_product_set_method": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "product_set"], ["update_product_set_method", "assert_called_once_with", "product_set", "ProductSet", "name", "productset_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]]}, "name": "test_update_productset_no_explicit_name", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["update_product_set_method", "get_conn", "return_value", "update_product_set"]], "self": [["result", "self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_update_productset_no_explicit_name", "ret_exprs": [], "ret_type": "", "variables": {"product_set": "", "productset_name": "", "result": "", "return_value": "", "update_product_set_method": ""}, "variables_p": {"product_set": [["str", 0.5076607638873476], ["Dict[str, str]", 0.3798549546150015], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.11248428149765091]], "productset_name": [["str", 0.9999999999999999]], "result": [["list", 0.13209122922573577], ["dict", 0.10523133998544365], ["tests.core.data.json.test_json_repository.DummyEntity", 0.10027469804659371], ["raiden.utils.Dict[raiden.utils.TokenAddress, raiden.utils.ProportionalFeeAmount]", 0.09416741165578148]], "return_value": [["str", 0.2496547239799104], ["Optional[bytes]", 0.10695695545322871], ["Tuple[int, int]", 0.08952129385616811], ["list", 0.08925639319860157], ["Dict[str, int]", 0.08725845868076927]], "update_product_set_method": [["Dict[int, Dict[str, Any]]", 0.40471538801978846], ["List[Dict[str, Any]]", 0.2872625960743855], ["Dict[str, Dict[str, int]]", 0.21601518256615218], ["Dict[str, Dict[int, Any]]", 0.09200683333967374]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[247, 4], [269, 53]], "fn_var_ln": {"err": [[266, 8], [266, 11]], "product_set": [[253, 8], [253, 19]], "return_value": [[252, 8], [252, 46]], "update_product_set_method": [[251, 8], [251, 33]]}, "fn_var_occur": {"err": [["err", "ctx", "value"], ["ERR_UNABLE_TO_CREATE", "format", "label", "id_label", "str", "err"]], "product_set": [["product_set", "ProductSet"], ["self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "return_value": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "None"]], "update_product_set_method": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "None"], ["update_product_set_method", "assert_not_called"]]}, "name": "test_update_productset_no_explicit_name_and_missing_params_for_constructed_name", "params": {"get_conn": "", "location": "", "product_set_id": "", "self": ""}, "params_descr": {"get_conn": "", "location": "", "product_set_id": "", "self": ""}, "params_occur": {"get_conn": [["update_product_set_method", "get_conn", "return_value", "update_product_set"]], "location": [["self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product_set_id": [["self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [["float", 0.14573553969398834], ["int", 0.12625898964824292], ["str", 0.09030549471675588], ["List[raiden.utils.Address]", 0.08905561752982306], ["bytes", 0.0890032230134247]], "kwargs": [], "location": [["str", 0.30886054439464333], ["Dict[str, Any]", 0.28732903866732545], ["int", 0.11940735338592372], ["set", 0.09135993608373486]], "product_set_id": [["str", 0.30886054439464333], ["Dict[str, Any]", 0.28732903866732545], ["int", 0.11940735338592372], ["set", 0.09135993608373486]], "self": []}, "q_name": "TestGcpVisionHook.test_update_productset_no_explicit_name_and_missing_params_for_constructed_name", "ret_exprs": [], "ret_type": "", "variables": {"err": "", "product_set": "", "return_value": "", "update_product_set_method": ""}, "variables_p": {"err": [["str", 0.6174612121869323], ["Dict[str, Union[int, str]]", 0.11084978347953828]], "product_set": [["dict", 0.5859076245224312], ["Dict[Any, Dict[Any, Any]]", 0.10978777420522617], ["str", 0.10710402108371053], ["Dict[str, int]", 0.10175775086153578]], "return_value": [["str", 0.248561225861116], ["Optional[bytes]", 0.10847789843787459], ["list", 0.09065339525486638], ["Dict[str, str]", 0.08960972233096358], ["Tuple[int, int]", 0.08906100713607214]], "update_product_set_method": [["dict", 0.10641387665736059], ["Dict[str, str]", 0.09641060432183274], ["Dict[str, int]", 0.09520562922842041], ["Dict[Any, Dict[str, Any]]", 0.09337197110047617]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[273, 4], [305, 9]], "fn_var_ln": {"explicit_ps_name": [[280, 8], [280, 24]], "product_set": [[283, 8], [283, 19]], "result": [[287, 8], [287, 14]], "return_value": [[285, 8], [285, 46]], "update_product_set_method": [[284, 8], [284, 33]]}, "fn_var_occur": {"explicit_ps_name": [["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"], ["product_set", "ProductSet", "name", "explicit_ps_name"], ["update_product_set_method", "assert_called_once_with", "product_set", "ProductSet", "name", "explicit_ps_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "product_set": [["product_set", "ProductSet", "name", "explicit_ps_name"], ["update_product_set_method", "return_value", "product_set"], ["result", "self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product_set", "_pb"], ["update_product_set_method", "assert_called_once_with", "product_set", "ProductSet", "name", "explicit_ps_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "result": [["result", "self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product_set", "_pb"]], "return_value": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "product_set"]], "update_product_set_method": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "product_set"], ["update_product_set_method", "assert_called_once_with", "product_set", "ProductSet", "name", "explicit_ps_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]]}, "name": "test_update_productset_explicit_name_missing_params_for_constructed_name", "params": {"get_conn": "", "location": "", "product_set_id": "", "self": ""}, "params_descr": {"get_conn": "", "location": "", "product_set_id": "", "self": ""}, "params_occur": {"get_conn": [["update_product_set_method", "get_conn", "return_value", "update_product_set"]], "location": [["result", "self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product_set_id": [["result", "self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["result", "self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [["str", 0.3855432567674175], ["int", 0.32977897133143264], ["float", 0.0889374365906773]], "kwargs": [], "location": [["int", 0.2446131099234746], ["dict", 0.21113696449858016], ["raiden.utils.Dict[raiden.transfer.identifiers.QueueIdentifier, raiden.utils.List[raiden.messages.abstracMessage]]", 0.201241963147688], ["common.ControllerData", 0.09557246564356674]], "product_set_id": [["int", 0.2446131099234746], ["dict", 0.21113696449858016], ["raiden.utils.Dict[raiden.transfer.identifiers.QueueIdentifier, raiden.utils.List[raiden.messages.abstracMessage]]", 0.201241963147688], ["common.ControllerData", 0.09557246564356674]], "self": []}, "q_name": "TestGcpVisionHook.test_update_productset_explicit_name_missing_params_for_constructed_name", "ret_exprs": [], "ret_type": "", "variables": {"explicit_ps_name": "", "product_set": "", "result": "", "return_value": "", "update_product_set_method": ""}, "variables_p": {"explicit_ps_name": [["str", 1.0]], "product_set": [["str", 0.4823271017529757], ["KeysView[str]", 0.23161460904301012], ["list", 0.0919526926956207], ["Dict[str, str]", 0.09055214030296171]], "result": [["str", 0.1012594507046596], ["Dict[Any, List[Any]]", 0.08706732761865438], ["telegram.utils.AsyncResult", 0.08322979172793485]], "return_value": [["str", 0.2496547239799104], ["Optional[bytes]", 0.10695695545322871], ["Tuple[int, int]", 0.08952129385616811], ["list", 0.08925639319860157], ["Dict[str, int]", 0.08725845868076927]], "update_product_set_method": [["Dict[int, Dict[str, Any]]", 0.40471538801978846], ["List[Dict[str, Any]]", 0.2872625960743855], ["Dict[str, Dict[str, int]]", 0.21601518256615218], ["Dict[str, Dict[int, Any]]", 0.09200683333967374]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[308, 4], [343, 53]], "fn_var_ln": {"err": [[334, 8], [334, 11]], "explicit_ps_name": [[312, 8], [312, 24]], "product_set": [[315, 8], [315, 19]], "return_value": [[311, 8], [311, 46]], "template_ps_name": [[316, 8], [316, 24]], "update_product_set_method": [[310, 8], [310, 33]]}, "fn_var_occur": {"err": [["err", "ctx", "value"], ["ERR_DIFF_NAMES", "format", "explicit_name", "explicit_ps_name", "constructed_name", "template_ps_name", "label", "id_label", "str", "err"]], "explicit_ps_name": [["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"], ["product_set", "ProductSet", "name", "explicit_ps_name"], ["ERR_DIFF_NAMES", "format", "explicit_name", "explicit_ps_name", "constructed_name", "template_ps_name", "label", "id_label", "str", "err"]], "product_set": [["product_set", "ProductSet", "name", "explicit_ps_name"], ["self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "return_value": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "None"]], "template_ps_name": [["template_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["ERR_DIFF_NAMES", "format", "explicit_name", "explicit_ps_name", "constructed_name", "template_ps_name", "label", "id_label", "str", "err"]], "update_product_set_method": [["update_product_set_method", "get_conn", "return_value", "update_product_set"], ["update_product_set_method", "return_value", "None"], ["update_product_set_method", "assert_not_called"]]}, "name": "test_update_productset_explicit_name_different_from_constructed", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["update_product_set_method", "get_conn", "return_value", "update_product_set"]], "self": [["self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_update_productset_explicit_name_different_from_constructed", "ret_exprs": [], "ret_type": "", "variables": {"err": "", "explicit_ps_name": "", "product_set": "", "return_value": "", "template_ps_name": "", "update_product_set_method": ""}, "variables_p": {"err": [["str", 0.8204727346241579], ["bool", 0.0868866309217227]], "explicit_ps_name": [["str", 1.0]], "product_set": [["dict", 0.30674796033644053], ["Dict[str, Any]", 0.19189396301984143], ["werkzeug.exceptions.InternalServerError", 0.11130616745488542], ["str", 0.11075463138012724], ["telegram.utils.AsyncResult", 0.09656023145580815], ["Dict[str, str]", 0.09282514605351185]], "return_value": [["str", 0.248561225861116], ["Optional[bytes]", 0.10847789843787459], ["list", 0.09065339525486638], ["Dict[str, str]", 0.08960972233096358], ["Tuple[int, int]", 0.08906100713607214]], "template_ps_name": [["str", 1.0000000000000002]], "update_product_set_method": [["dict", 0.10641387665736059], ["Dict[str, str]", 0.09641060432183274], ["Dict[str, int]", 0.09520562922842041], ["Dict[Any, Dict[str, Any]]", 0.09337197110047617]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[346, 4], [357, 110]], "fn_var_ln": {"delete_product_set_method": [[348, 8], [348, 33]], "name": [[350, 8], [350, 12]], "response": [[352, 8], [352, 16]], "return_value": [[349, 8], [349, 46]]}, "fn_var_occur": {"delete_product_set_method": [["delete_product_set_method", "get_conn", "return_value", "delete_product_set"], ["delete_product_set_method", "return_value", "None"], ["delete_product_set_method", "assert_called_once_with", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "name": [["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["delete_product_set_method", "assert_called_once_with", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response": [["response", "self", "hook", "delete_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["response", "None"]], "return_value": [["delete_product_set_method", "get_conn", "return_value", "delete_product_set"], ["delete_product_set_method", "return_value", "None"]]}, "name": "test_delete_productset", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["delete_product_set_method", "get_conn", "return_value", "delete_product_set"]], "self": [["response", "self", "hook", "delete_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["Dict[str, Any]", 0.11503684734360763], ["float", 0.09697840056243996]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_delete_productset", "ret_exprs": [], "ret_type": "", "variables": {"delete_product_set_method": "", "name": "", "response": "", "return_value": ""}, "variables_p": {"delete_product_set_method": [["dict", 0.20679271810162092], ["Dict[str, Dict[str, Any]]", 0.12759165658413388], ["Dict[int, Union[Any, Any]]", 0.10604797273579623], ["str", 0.10424686567883942], ["Dict[int, int]", 0.09476131078901685], ["Dict[int, Any]", 0.08929992310903759], ["Dict[str, Union[int, str]]", 0.08531844894890929]], "name": [["str", 0.9999999999999999]], "response": [["Dict[str, str]", 0.48585787955177384], ["str", 0.41886030495257054], ["List[str]", 0.0952818154956555]], "return_value": [["Dict[str, str]", 0.20841698628871505], ["List[Dict[str, Any]]", 0.19424427944835518], ["Counter[Any]", 0.1145893240888224], ["mock.Mock", 0.09318128463329409], ["Dict[str, List[Any]]", 0.09214751086401979]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[363, 4], [385, 9]], "fn_var_ln": {"create_reference_image_method": [[365, 8], [365, 37]], "result": [[368, 8], [368, 14]]}, "fn_var_occur": {"create_reference_image_method": [["create_reference_image_method", "get_conn", "return_value", "create_reference_image"], ["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "result": [["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["result", "REFERENCE_IMAGE_ID_TEST"]]}, "name": "test_create_reference_image_explicit_id", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_reference_image_method", "get_conn", "return_value", "create_reference_image"]], "self": [["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["Dict[str, str]", 0.11997383273433762], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09667692266191602], ["str", 0.09456147692314405]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_reference_image_explicit_id", "ret_exprs": [], "ret_type": "", "variables": {"create_reference_image_method": "", "result": ""}, "variables_p": {"create_reference_image_method": [["Tuple[Literal, Literal]", 0.1063334177056498], ["Set[str]", 0.09943438088816037], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.09699423638098131], ["Dict[str, int]", 0.09636279113862455], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09624295348995124], ["str", 0.09455116474265227], ["set", 0.09160852295120692]], "result": [["Dict[str, str]", 0.2680198921700958], ["List[str]", 0.07231405515100604], ["Dict[str, Dict[str, Any]]", 0.07187778354681533]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[391, 4], [413, 9]], "fn_var_ln": {"create_reference_image_method": [[393, 8], [393, 37]], "result": [[396, 8], [396, 14]]}, "fn_var_occur": {"create_reference_image_method": [["create_reference_image_method", "get_conn", "return_value", "create_reference_image"], ["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "result": [["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["result", "REFERENCE_IMAGE_GEN_ID_TEST"]]}, "name": "test_create_reference_image_autogenerated_id", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_reference_image_method", "get_conn", "return_value", "create_reference_image"]], "self": [["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["Dict[str, str]", 0.11997383273433762], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09667692266191602], ["str", 0.09456147692314405]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_reference_image_autogenerated_id", "ret_exprs": [], "ret_type": "", "variables": {"create_reference_image_method": "", "result": ""}, "variables_p": {"create_reference_image_method": [["Tuple[Literal, Literal]", 0.1063334177056498], ["Set[str]", 0.09943438088816037], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.09699423638098131], ["Dict[str, int]", 0.09636279113862455], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09624295348995124], ["str", 0.09455116474265227], ["set", 0.09160852295120692]], "result": [["Dict[str, str]", 0.2680198921700958], ["List[str]", 0.07231405515100604], ["Dict[str, Dict[str, Any]]", 0.07187778354681533]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[416, 4], [431, 9]], "fn_var_ln": {"add_product_to_product_set_method": [[418, 8], [418, 41]]}, "fn_var_occur": {"add_product_to_product_set_method": [["add_product_to_product_set_method", "get_conn", "return_value", "add_product_to_product_set"], ["add_product_to_product_set_method", "assert_called_once_with", "name", "PRODUCTSET_NAME_TEST", "product", "PRODUCT_NAME_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_add_product_to_product_set", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["add_product_to_product_set_method", "get_conn", "return_value", "add_product_to_product_set"]], "self": [["self", "hook", "add_product_to_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["List[Dict[str, Any]]", 0.09913587618088188]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_add_product_to_product_set", "ret_exprs": [], "ret_type": "", "variables": {"add_product_to_product_set_method": ""}, "variables_p": {"add_product_to_product_set_method": [["List[str]", 0.45943663269019197], ["Dict[str, List[Any]]", 0.14713125552117068], ["Dict[str, Dict[str, Any]]", 0.10440088106620413], ["Tuple[Tuple[Any, Any]]", 0.09949207497004925], ["Dict[Tuple[str, str], str]", 0.09676843756693868]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[435, 4], [450, 9]], "fn_var_ln": {"remove_product_from_product_set_method": [[437, 8], [437, 46]]}, "fn_var_occur": {"remove_product_from_product_set_method": [["remove_product_from_product_set_method", "get_conn", "return_value", "remove_product_from_product_set"], ["remove_product_from_product_set_method", "assert_called_once_with", "name", "PRODUCTSET_NAME_TEST", "product", "PRODUCT_NAME_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_remove_product_from_product_set", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["remove_product_from_product_set_method", "get_conn", "return_value", "remove_product_from_product_set"]], "self": [["self", "hook", "remove_product_from_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["List[Dict[str, Any]]", 0.10191393536204228], ["trezor.utils.Writer", 0.09929736229364113]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_remove_product_from_product_set", "ret_exprs": [], "ret_type": "", "variables": {"remove_product_from_product_set_method": ""}, "variables_p": {"remove_product_from_product_set_method": [["Dict[int, Dict[str, Any]]", 0.17379604374276308], ["int", 0.13305112223203247], ["Dict[int, Any]", 0.12760549683955497], ["Dict[Any, Dict[str, Any]]", 0.10013227553183719], ["Dict[str, Dict[str, int]]", 0.08960605091825759], ["Dict[str, Dict[str, Any]]", 0.08819793099079504], ["List[Tuple[str, str]]", 0.08304954833820272]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[453, 4], [463, 9]], "fn_var_ln": {"annotate_image_method": [[455, 8], [455, 29]]}, "fn_var_occur": {"annotate_image_method": [["annotate_image_method", "annotator_client_mock", "annotate_image"], ["annotate_image_method", "assert_called_once_with", "request", "ANNOTATE_IMAGE_REQUEST", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_annotate_image", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["annotate_image_method", "annotator_client_mock", "annotate_image"]], "self": [["self", "hook", "annotate_image", "request", "ANNOTATE_IMAGE_REQUEST"]]}, "params_p": {"annotator_client_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.29519211148158386], ["google.cloud.pubsub.Client", 0.18256070868149332]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_annotate_image", "ret_exprs": [], "ret_type": "", "variables": {"annotate_image_method": ""}, "variables_p": {"annotate_image_method": [["Dict[str, str]", 0.2224124757664006], ["Pattern[str]", 0.10498527188269974], ["Dict[str, int]", 0.09705890748059239], ["Type[Dict[str, Any]]", 0.09237346528742223]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[466, 4], [478, 9]], "fn_var_ln": {"batch_annotate_images_method": [[468, 8], [468, 36]]}, "fn_var_occur": {"batch_annotate_images_method": [["batch_annotate_images_method", "annotator_client_mock", "batch_annotate_images"], ["batch_annotate_images_method", "assert_called_once_with", "requests", "list", "map", "AnnotateImageRequest", "BATCH_ANNOTATE_IMAGE_REQUEST", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_batch_annotate_images", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["batch_annotate_images_method", "annotator_client_mock", "batch_annotate_images"]], "self": [["self", "hook", "batch_annotate_images", "requests", "BATCH_ANNOTATE_IMAGE_REQUEST"]]}, "params_p": {"annotator_client_mock": [["google.cloud.pubsub.Client", 0.2199185660291449]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_batch_annotate_images", "ret_exprs": [], "ret_type": "", "variables": {"batch_annotate_images_method": ""}, "variables_p": {"batch_annotate_images_method": [["str", 0.2181294204356954], ["List[str]", 0.2149316470635989], ["set", 0.19971936423716644], ["Tuple[Literal, Literal]", 0.09646322589545242], ["bool", 0.0911637995136741], ["Type[Dict[str, Any]]", 0.09100531909282832]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[481, 4], [501, 9]], "fn_var_ln": {"create_product_method": [[483, 8], [483, 29]], "parent": [[485, 8], [485, 14]], "product": [[486, 8], [486, 15]], "result": [[488, 8], [488, 14]], "return_value": [[484, 8], [484, 42]]}, "fn_var_occur": {"create_product_method": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "None"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "PRODUCT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "parent": [["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "PRODUCT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product": [["product", "Product"], ["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "project_id", "PROJECT_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "PRODUCT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "result": [["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "project_id", "PROJECT_ID_TEST"], ["result", "PRODUCT_ID_TEST"]], "return_value": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "None"]]}, "name": "test_create_product_explicit_id", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_product_method", "get_conn", "return_value", "create_product"]], "self": [["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["bytes", 0.18061474058565827]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_product_explicit_id", "ret_exprs": [], "ret_type": "", "variables": {"create_product_method": "", "parent": "", "product": "", "result": "", "return_value": ""}, "variables_p": {"create_product_method": [["Dict[str, Dict[str, Any]]", 0.2629799331852642], ["int", 0.20682671153750962], ["list", 0.11574823715822198], ["Dict[str, List[Any]]", 0.10639219207217725], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.099030364280034], ["Dict[str, Any]", 0.08597476757217189]], "parent": [["Dict[str, int]", 0.402116652638619], ["Dict[str, str]", 0.3042333052772379], ["Dict[str, Tuple[int, int, int]]", 0.09788334736138109], ["Dict[str, Tuple[float, float]]", 0.09788334736138109], ["Dict[str, Tuple[int, int]]", 0.09788334736138109]], "product": [["Dict[str, Union[Any, bool, str]]", 0.1779602453361736], ["dict", 0.13933796337057083], ["str", 0.11587501613030526], ["bytes", 0.08702292187485897]], "result": [["Dict[str, List[Any]]", 0.19504975414301365], ["str", 0.13177434299225055], ["Dict[Any, List[Any]]", 0.09752487707150682], ["dict", 0.0925111187396635], ["Dict[str, Any]", 0.09247778505756243]], "return_value": [["Optional[bytes]", 0.1265753809391682], ["Dict[str, List[Any]]", 0.10493809785489834], ["list", 0.09823204629106495], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.08941861248571334], ["Dict[str, Union[int, str]]", 0.07753516107189111], ["Tuple[int, int]", 0.07580013804921759]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[504, 4], [524, 9]], "fn_var_ln": {"autogenerated_id": [[506, 8], [506, 24]], "create_product_method": [[510, 8], [510, 29]], "parent": [[512, 8], [512, 14]], "product": [[513, 8], [513, 15]], "response_product": [[507, 8], [507, 24]], "result": [[515, 8], [515, 14]], "return_value": [[511, 8], [511, 42]]}, "fn_var_occur": {"autogenerated_id": [["response_product", "Product", "name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["result", "autogenerated_id"]], "create_product_method": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "response_product"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "parent": [["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product": [["product", "Product"], ["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response_product": [["response_product", "Product", "name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["create_product_method", "return_value", "response_product"]], "result": [["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["result", "autogenerated_id"]], "return_value": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "response_product"]]}, "name": "test_create_product_autogenerated_id", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_product_method", "get_conn", "return_value", "create_product"]], "self": [["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["bytes", 0.18061474058565827]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_product_autogenerated_id", "ret_exprs": [], "ret_type": "", "variables": {"autogenerated_id": "", "create_product_method": "", "parent": "", "product": "", "response_product": "", "result": "", "return_value": ""}, "variables_p": {"autogenerated_id": [["str", 0.8976434644769692], ["int", 0.10235653552303073]], "create_product_method": [["list", 0.18283609268864814], ["Optional[bytes]", 0.11211847236750166], ["Dict[str, List[Any]]", 0.10622889057079277], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09827330612826453], ["int", 0.08787887140649688]], "parent": [["list", 0.1269570040347205], ["Dict[bytes, Optional[bytes]]", 0.10862259222994962], ["Tuple[None, Tuple[None, None]]", 0.09425246570853303], ["Dict[str, Any]", 0.09343661318065323], ["int", 0.09221396007164291]], "product": [["str", 0.4027717444106728], ["int", 0.26277783007382693], ["dict", 0.13147792620142615], ["list", 0.1233673162970614]], "response_product": [["str", 0.9999999999999998]], "result": [["dict", 0.2774110211716454], ["str", 0.13753905747685127], ["Dict[str, Any]", 0.09262960974986983]], "return_value": [["list", 0.17870257587937255], ["Dict[str, Any]", 0.1752553628936386], ["Dict[str, List[Any]]", 0.13063793785710895], ["str", 0.09513387244388177], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09334346408980285], ["Dict[str, Union[int, str]]", 0.09072648750175388]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[527, 4], [546, 9]], "fn_var_ln": {"create_product_method": [[531, 8], [531, 29]], "err": [[542, 8], [542, 11]], "parent": [[533, 8], [533, 14]], "product": [[534, 8], [534, 15]], "response_product": [[530, 8], [530, 24]], "return_value": [[532, 8], [532, 42]], "wrong_name": [[529, 8], [529, 18]]}, "fn_var_occur": {"create_product_method": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "response_product"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "err": [["err", "ctx", "value"], ["str", "err"]], "parent": [["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product": [["product", "Product"], ["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response_product": [["response_product", "Product", "name", "wrong_name"], ["create_product_method", "return_value", "response_product"]], "return_value": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "response_product"]], "wrong_name": [["response_product", "Product", "name", "wrong_name"]]}, "name": "test_create_product_autogenerated_id_wrong_name_in_response", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_product_method", "get_conn", "return_value", "create_product"]], "self": [["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["bytes", 0.2463749895439293], ["mock.MagicMock", 0.10846119639739077]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_product_autogenerated_id_wrong_name_in_response", "ret_exprs": [], "ret_type": "", "variables": {"create_product_method": "", "err": "", "parent": "", "product": "", "response_product": "", "return_value": "", "wrong_name": ""}, "variables_p": {"create_product_method": [["list", 0.18283609268864814], ["Optional[bytes]", 0.11211847236750166], ["Dict[str, List[Any]]", 0.10622889057079277], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09827330612826453], ["int", 0.08787887140649688]], "err": [["str", 0.30401277098330504], ["frozenset[str]", 0.27162558243657475], ["int", 0.2667999344278643], ["Final", 0.0789964170559774]], "parent": [["list", 0.1269570040347205], ["Dict[bytes, Optional[bytes]]", 0.10862259222994962], ["Tuple[None, Tuple[None, None]]", 0.09425246570853303], ["Dict[str, Any]", 0.09343661318065323], ["int", 0.09221396007164291]], "product": [["str", 0.6942388415467206], ["dict", 0.1062173486569812]], "response_product": [["Dict[str, str]", 0.19147622154465882], ["int", 0.19146183841730638], ["str", 0.18995912639551923], ["Dict[str, Any]", 0.1436368712327931], ["dict", 0.10410376280264401]], "return_value": [["list", 0.17870257587937255], ["Dict[str, Any]", 0.1752553628936386], ["Dict[str, List[Any]]", 0.13063793785710895], ["str", 0.09513387244388177], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09334346408980285], ["Dict[str, Union[int, str]]", 0.09072648750175388]], "wrong_name": [["str", 0.7735407954143958], ["Optional[str]", 0.22645920458560423]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[549, 4], [567, 9]], "fn_var_ln": {"create_product_method": [[552, 8], [552, 29]], "err": [[563, 8], [563, 11]], "parent": [[554, 8], [554, 14]], "product": [[555, 8], [555, 15]], "response_product": [[551, 8], [551, 24]], "return_value": [[553, 8], [553, 42]]}, "fn_var_occur": {"create_product_method": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "response_product"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "err": [["err", "ctx", "value"], ["str", "err"]], "parent": [["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product": [["product", "Product"], ["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response_product": [["response_product", "None"], ["create_product_method", "return_value", "response_product"]], "return_value": [["create_product_method", "get_conn", "return_value", "create_product"], ["create_product_method", "return_value", "response_product"]]}, "name": "test_create_product_autogenerated_id_wrong_api_response", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["create_product_method", "get_conn", "return_value", "create_product"]], "self": [["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["bytes", 0.21812766740019265], ["mock.MagicMock", 0.09722839628315395]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_create_product_autogenerated_id_wrong_api_response", "ret_exprs": [], "ret_type": "", "variables": {"create_product_method": "", "err": "", "parent": "", "product": "", "response_product": "", "return_value": ""}, "variables_p": {"create_product_method": [["list", 0.18283609268864814], ["Optional[bytes]", 0.11211847236750166], ["Dict[str, List[Any]]", 0.10622889057079277], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09827330612826453], ["int", 0.08787887140649688]], "err": [["str", 0.30401277098330504], ["frozenset[str]", 0.27162558243657475], ["int", 0.2667999344278643], ["Final", 0.0789964170559774]], "parent": [["list", 0.1269570040347205], ["Dict[bytes, Optional[bytes]]", 0.10862259222994962], ["Tuple[None, Tuple[None, None]]", 0.09425246570853303], ["Dict[str, Any]", 0.09343661318065323], ["int", 0.09221396007164291]], "product": [["str", 0.6942388415467206], ["dict", 0.1062173486569812]], "response_product": [["Optional[bool]", 0.3736442260434738], ["str", 0.2660997030468072], ["bool", 0.2517611176097726]], "return_value": [["list", 0.17870257587937255], ["Dict[str, Any]", 0.1752553628936386], ["Dict[str, List[Any]]", 0.13063793785710895], ["str", 0.09513387244388177], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.09334346408980285], ["Dict[str, Union[int, str]]", 0.09072648750175388]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[570, 4], [591, 9]], "fn_var_ln": {"product": [[572, 8], [572, 15]], "product_name": [[575, 8], [575, 20]], "result": [[577, 8], [577, 14]], "return_value": [[574, 8], [574, 42]], "update_product_method": [[573, 8], [573, 29]]}, "fn_var_occur": {"product": [["product", "Product"], ["update_product_method", "return_value", "product"], ["result", "self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product", "_pb"], ["update_product_method", "assert_called_once_with", "product", "Product", "name", "product_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "product_name": [["product_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["update_product_method", "assert_called_once_with", "product", "Product", "name", "product_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "result": [["result", "self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product", "_pb"]], "return_value": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "product"]], "update_product_method": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "product"], ["update_product_method", "assert_called_once_with", "product", "Product", "name", "product_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]]}, "name": "test_update_product_no_explicit_name", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["update_product_method", "get_conn", "return_value", "update_product"]], "self": [["result", "self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [["str", 0.25006393913455205]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_update_product_no_explicit_name", "ret_exprs": [], "ret_type": "", "variables": {"product": "", "product_name": "", "result": "", "return_value": "", "update_product_method": ""}, "variables_p": {"product": [["bytes", 0.3805177300155935], ["str", 0.32016236927186936], ["int", 0.10561328918501729], ["Final", 0.08991662747695815]], "product_name": [["str", 1.0]], "result": [["Counter[Any]", 0.10299266418170057], ["Dict[int, Any]", 0.10175569119011736], ["Dict[Type[Any], str]", 0.10169795051148103], ["Dict[Any, tuple]", 0.09548936794708361], ["Dict[str, Union[Any, Any]]", 0.09458162120816371]], "return_value": [["list", 0.18135986255722164], ["Tuple[int, int]", 0.1368534065049974], ["str", 0.0999976338346238], ["tests.mock.zwave.MockNode", 0.09487118234154418], ["Dict[str, str]", 0.08859981883230622]], "update_product_method": [["List[Dict[str, Any]]", 0.3986698694169274], ["str", 0.2019983123437609], ["List[Dict[str, str]]", 0.10920023432034186], ["list", 0.10591965630508055], ["List[str]", 0.09344943463467813], ["Dict[str, List[Any]]", 0.09076249297921117]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[595, 4], [617, 49]], "fn_var_ln": {"err": [[614, 8], [614, 11]], "product": [[601, 8], [601, 15]], "return_value": [[600, 8], [600, 42]], "update_product_method": [[599, 8], [599, 29]]}, "fn_var_occur": {"err": [["err", "ctx", "value"], ["ERR_UNABLE_TO_CREATE", "format", "label", "id_label", "str", "err"]], "product": [["product", "Product"], ["self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "return_value": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "None"]], "update_product_method": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "None"], ["update_product_method", "assert_not_called"]]}, "name": "test_update_product_no_explicit_name_and_missing_params_for_constructed_name", "params": {"get_conn": "", "location": "", "product_id": "", "self": ""}, "params_descr": {"get_conn": "", "location": "", "product_id": "", "self": ""}, "params_occur": {"get_conn": [["update_product_method", "get_conn", "return_value", "update_product"]], "location": [["self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product_id": [["self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [["str", 0.4077765453883405], ["int", 0.2784663586081783], ["tests.pathfinding.utils.SimpleReachabilityContainer", 0.05890207239896325]], "kwargs": [], "location": [["str", 0.21571694339926573], ["List[str]", 0.11902694158260288], ["Optional[int]", 0.10364557583178298], ["raiden.utils.ChainID", 0.09692249098509771], ["Optional[str]", 0.09480983160509301], ["Dict[int, dict]", 0.0876834699705006], ["Optional[Dict]", 0.08264758159483918]], "product_id": [["str", 0.21571694339926573], ["List[str]", 0.11902694158260288], ["Optional[int]", 0.10364557583178298], ["raiden.utils.ChainID", 0.09692249098509771], ["Optional[str]", 0.09480983160509301], ["Dict[int, dict]", 0.0876834699705006], ["Optional[Dict]", 0.08264758159483918]], "self": []}, "q_name": "TestGcpVisionHook.test_update_product_no_explicit_name_and_missing_params_for_constructed_name", "ret_exprs": [], "ret_type": "", "variables": {"err": "", "product": "", "return_value": "", "update_product_method": ""}, "variables_p": {"err": [["str", 0.6174612121869323], ["Dict[str, Union[int, str]]", 0.11084978347953828]], "product": [["str", 0.6033224175009223], ["List[Tuple[str, str]]", 0.1032336349952923], ["Generator[Any, None, None]", 0.09997964109026668], ["Counter[str]", 0.09695001879426768]], "return_value": [["int", 0.19061577353608977], ["str", 0.11929744415777119], ["Dict[str, List[Any]]", 0.1047486050528751]], "update_product_method": [["str", 0.3603714811561186], ["Dict[str, List[Any]]", 0.21251468234064513], ["List[Dict[str, str]]", 0.18459681936919164], ["Dict[str, Literal[-1]]", 0.08341254720979373], ["Dict[str, Union[Any, str]]", 0.08330724826653688], ["Dict[Any, Union[int, str]]", 0.07579722165771392]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[621, 4], [646, 9]], "fn_var_ln": {"explicit_p_name": [[625, 8], [625, 23]], "product": [[628, 8], [628, 15]], "result": [[632, 8], [632, 14]], "return_value": [[630, 8], [630, 42]], "update_product_method": [[629, 8], [629, 29]]}, "fn_var_occur": {"explicit_p_name": [["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"], ["product", "Product", "name", "explicit_p_name"], ["update_product_method", "assert_called_once_with", "product", "Product", "name", "explicit_p_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "product": [["product", "Product", "name", "explicit_p_name"], ["update_product_method", "return_value", "product"], ["result", "self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product", "_pb"], ["update_product_method", "assert_called_once_with", "product", "Product", "name", "explicit_p_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]], "result": [["result", "self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "MessageToDict", "product", "_pb"]], "return_value": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "product"]], "update_product_method": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "product"], ["update_product_method", "assert_called_once_with", "product", "Product", "name", "explicit_p_name", "metadata", "retry", "DEFAULT", "timeout", "None", "update_mask", "None"]]}, "name": "test_update_product_explicit_name_missing_params_for_constructed_name", "params": {"get_conn": "", "location": "", "product_id": "", "self": ""}, "params_descr": {"get_conn": "", "location": "", "product_id": "", "self": ""}, "params_occur": {"get_conn": [["update_product_method", "get_conn", "return_value", "update_product"]], "location": [["result", "self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "product_id": [["result", "self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["result", "self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [["str", 0.42561569260729315], ["int", 0.27360875953009306], ["tests.pathfinding.utils.SimpleReachabilityContainer", 0.058633876610424074]], "kwargs": [], "location": [["str", 0.23023129686100635], ["Set[int]", 0.11047056214056031], ["Optional[str]", 0.09841582256037425], ["Optional[int]", 0.0864287373089078]], "product_id": [["str", 0.23023129686100635], ["Set[int]", 0.11047056214056031], ["Optional[str]", 0.09841582256037425], ["Optional[int]", 0.0864287373089078]], "self": []}, "q_name": "TestGcpVisionHook.test_update_product_explicit_name_missing_params_for_constructed_name", "ret_exprs": [], "ret_type": "", "variables": {"explicit_p_name": "", "product": "", "result": "", "return_value": "", "update_product_method": ""}, "variables_p": {"explicit_p_name": [["str", 0.9065868797188029], ["Dict[str, str]", 0.09341312028119711]], "product": [["str", 0.6747365192260801], ["Dict[str, Any]", 0.09243808950695478]], "result": [["list", 0.5014211344121028], ["Dict[str, int]", 0.11279866504797592], ["dict", 0.10647087347400638], ["List[Hashable]", 0.09052376017433689]], "return_value": [["list", 0.18135986255722164], ["Tuple[int, int]", 0.1368534065049974], ["str", 0.0999976338346238], ["tests.mock.zwave.MockNode", 0.09487118234154418], ["Dict[str, str]", 0.08859981883230622]], "update_product_method": [["List[Dict[str, Any]]", 0.3986698694169274], ["str", 0.2019983123437609], ["List[Dict[str, str]]", 0.10920023432034186], ["list", 0.10591965630508055], ["List[str]", 0.09344943463467813], ["Dict[str, List[Any]]", 0.09076249297921117]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[649, 4], [681, 49]], "fn_var_ln": {"err": [[673, 8], [673, 11]], "explicit_p_name": [[653, 8], [653, 23]], "product": [[656, 8], [656, 15]], "return_value": [[652, 8], [652, 42]], "template_p_name": [[657, 8], [657, 23]], "update_product_method": [[651, 8], [651, 29]]}, "fn_var_occur": {"err": [["err", "ctx", "value"], ["ERR_DIFF_NAMES", "format", "explicit_name", "explicit_p_name", "constructed_name", "template_p_name", "label", "id_label", "str", "err"]], "explicit_p_name": [["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"], ["product", "Product", "name", "explicit_p_name"], ["ERR_DIFF_NAMES", "format", "explicit_name", "explicit_p_name", "constructed_name", "template_p_name", "label", "id_label", "str", "err"]], "product": [["product", "Product", "name", "explicit_p_name"], ["self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "return_value": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "None"]], "template_p_name": [["template_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["ERR_DIFF_NAMES", "format", "explicit_name", "explicit_p_name", "constructed_name", "template_p_name", "label", "id_label", "str", "err"]], "update_product_method": [["update_product_method", "get_conn", "return_value", "update_product"], ["update_product_method", "return_value", "None"], ["update_product_method", "assert_not_called"]]}, "name": "test_update_product_explicit_name_different_from_constructed", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["update_product_method", "get_conn", "return_value", "update_product"]], "self": [["self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "get_conn": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_update_product_explicit_name_different_from_constructed", "ret_exprs": [], "ret_type": "", "variables": {"err": "", "explicit_p_name": "", "product": "", "return_value": "", "template_p_name": "", "update_product_method": ""}, "variables_p": {"err": [["str", 0.8204727346241579], ["bool", 0.0868866309217227]], "explicit_p_name": [["str", 0.9065868797188029], ["Dict[str, str]", 0.09341312028119711]], "product": [["str", 0.8104731253079164], ["List[str]", 0.09638495484364049], ["Dict[str, str]", 0.09314191984844318]], "return_value": [["int", 0.19061577353608977], ["str", 0.11929744415777119], ["Dict[str, List[Any]]", 0.1047486050528751]], "template_p_name": [["str", 0.9999999999999999]], "update_product_method": [["str", 0.3603714811561186], ["Dict[str, List[Any]]", 0.21251468234064513], ["List[Dict[str, str]]", 0.18459681936919164], ["Dict[str, Literal[-1]]", 0.08341254720979373], ["Dict[str, Union[Any, str]]", 0.08330724826653688], ["Dict[Any, Union[int, str]]", 0.07579722165771392]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[684, 4], [695, 106]], "fn_var_ln": {"delete_product_method": [[686, 8], [686, 29]], "name": [[688, 8], [688, 12]], "response": [[690, 8], [690, 16]], "return_value": [[687, 8], [687, 42]]}, "fn_var_occur": {"delete_product_method": [["delete_product_method", "get_conn", "return_value", "delete_product"], ["delete_product_method", "return_value", "None"], ["delete_product_method", "assert_called_once_with", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "name": [["name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["delete_product_method", "assert_called_once_with", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "response": [["response", "self", "hook", "delete_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["response", "None"]], "return_value": [["delete_product_method", "get_conn", "return_value", "delete_product"], ["delete_product_method", "return_value", "None"]]}, "name": "test_delete_product", "params": {"get_conn": "", "self": ""}, "params_descr": {"get_conn": "", "self": ""}, "params_occur": {"get_conn": [["delete_product_method", "get_conn", "return_value", "delete_product"]], "self": [["response", "self", "hook", "delete_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "project_id", "PROJECT_ID_TEST"]]}, "params_p": {"args": [], "get_conn": [["raiden.utils.TokenAmount", 0.08851261983042875]], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_delete_product", "ret_exprs": [], "ret_type": "", "variables": {"delete_product_method": "", "name": "", "response": "", "return_value": ""}, "variables_p": {"delete_product_method": [["int", 0.5177122882671744], ["Dict[str, Dict[str, Any]]", 0.14690348754636787], ["str", 0.09204611611707945], ["List[str]", 0.06433263630756203]], "name": [["str", 1.0]], "response": [["Dict[str, str]", 0.48796745097072397], ["str", 0.2189223391751005], ["List[str]", 0.10167444515222644], ["dict", 0.09774745996020376]], "return_value": [["Tuple[int, int]", 0.100794923226664], ["Dict[str, str]", 0.10036123931639386], ["idom.utils.Ref[None]", 0.09121478207582517], ["mock.Mock", 0.08914476526279147], ["users.tests.factories.UserFactory", 0.08709653357373681], ["list", 0.08587911121839288]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[698, 4], [711, 9]], "fn_var_ln": {"detect_text_method": [[700, 8], [700, 26]], "return_value": [[701, 8], [701, 39]]}, "fn_var_occur": {"detect_text_method": [["detect_text_method", "annotator_client_mock", "text_detection"], ["detect_text_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"], ["detect_text_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"]], "return_value": [["detect_text_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"]]}, "name": "test_detect_text", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["detect_text_method", "annotator_client_mock", "text_detection"]], "self": [["self", "hook", "text_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.08597017967961841]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_detect_text", "ret_exprs": [], "ret_type": "", "variables": {"detect_text_method": "", "return_value": ""}, "variables_p": {"detect_text_method": [["dict", 0.46738509545479473], ["list", 0.24899962156006208], ["str", 0.10004832725482063], ["Dict[str, str]", 0.0925867798710537], ["Pattern[str]", 0.09098017585926899]], "return_value": [["bytes", 0.2604293940902465], ["str", 0.25883793595453086], ["Dict[Any, str]", 0.1808483392105065], ["Dict[str, str]", 0.10658977926720378], ["Tuple[Type[str], Type[bytes]]", 0.10653847210923173], ["Optional[str]", 0.0867560793682805]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[714, 4], [734, 9]], "fn_var_ln": {"detect_text_method": [[716, 8], [716, 26]], "return_value": [[717, 8], [717, 39]]}, "fn_var_occur": {"detect_text_method": [["detect_text_method", "annotator_client_mock", "text_detection"], ["detect_text_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"], ["detect_text_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"]], "return_value": [["detect_text_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"]]}, "name": "test_detect_text_with_additional_properties", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["detect_text_method", "annotator_client_mock", "text_detection"]], "self": [["self", "hook", "text_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"]]}, "params_p": {"annotator_client_mock": [], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_detect_text_with_additional_properties", "ret_exprs": [], "ret_type": "", "variables": {"detect_text_method": "", "return_value": ""}, "variables_p": {"detect_text_method": [["dict", 0.46738509545479473], ["list", 0.24899962156006208], ["str", 0.10004832725482063], ["Dict[str, str]", 0.0925867798710537], ["Pattern[str]", 0.09098017585926899]], "return_value": [["bytes", 0.2604293940902465], ["str", 0.25883793595453086], ["Dict[Any, str]", 0.1808483392105065], ["Dict[str, str]", 0.10658977926720378], ["Tuple[Type[str], Type[bytes]]", 0.10653847210923173], ["Optional[str]", 0.0867560793682805]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[737, 4], [749, 47]], "fn_var_ln": {"detect_text_method": [[739, 8], [739, 26]], "err": [[748, 8], [748, 11]], "return_value": [[740, 8], [740, 39]]}, "fn_var_occur": {"detect_text_method": [["detect_text_method", "annotator_client_mock", "text_detection"], ["detect_text_method", "return_value", "AnnotateImageResponse", "error"]], "err": [["err", "ctx", "value"], ["str", "err"]], "return_value": [["detect_text_method", "return_value", "AnnotateImageResponse", "error"]]}, "name": "test_detect_text_with_error_response", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["detect_text_method", "annotator_client_mock", "text_detection"]], "self": [["self", "hook", "text_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_detect_text_with_error_response", "ret_exprs": [], "ret_type": "", "variables": {"detect_text_method": "", "err": "", "return_value": ""}, "variables_p": {"detect_text_method": [["dict", 0.299513352124204], ["Dict[str, Any]", 0.2269317699345978], ["list", 0.1159790212237509], ["Set[str]", 0.10247920458583165], ["Dict[str, Union[None, int, str]]", 0.08427115818728441], ["List[str]", 0.08310350612910002]], "err": [["str", 0.30401277098330504], ["frozenset[str]", 0.27162558243657475], ["int", 0.2667999344278643], ["Final", 0.0789964170559774]], "return_value": [["float", 0.24900381359918083], ["Dict[str, List[int]]", 0.1875390021870981], ["str", 0.18377604918717816], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.10168961316961128], ["List[Tuple[Any, Any]]", 0.09572423501627356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[752, 4], [765, 9]], "fn_var_ln": {"document_text_detection_method": [[754, 8], [754, 38]], "return_value": [[755, 8], [755, 51]]}, "fn_var_occur": {"document_text_detection_method": [["document_text_detection_method", "annotator_client_mock", "document_text_detection"], ["document_text_detection_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"], ["document_text_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"]], "return_value": [["document_text_detection_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"]]}, "name": "test_document_text_detection", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["document_text_detection_method", "annotator_client_mock", "document_text_detection"]], "self": [["self", "hook", "document_text_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_document_text_detection", "ret_exprs": [], "ret_type": "", "variables": {"document_text_detection_method": "", "return_value": ""}, "variables_p": {"document_text_detection_method": [["str", 0.14399819074437395], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1090565781859955], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.10809390633779517], ["list", 0.10000738763108982], ["Dict[str, set]", 0.09396653729627716], ["dict", 0.09059088252106626], ["Dict[str, Union[Any, Any, Any]]", 0.08973892856800067], ["Set[str]", 0.08614744632492345], ["Dict[str, list]", 0.08358361156349495]], "return_value": [["str", 0.21697366171569465], ["Tuple[str, str]", 0.19388755210496295], ["Dict[str, Union[int, str]]", 0.10194520511046751], ["dict", 0.09695621449264345]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[768, 4], [788, 9]], "fn_var_ln": {"document_text_detection_method": [[770, 8], [770, 38]], "return_value": [[771, 8], [771, 51]]}, "fn_var_occur": {"document_text_detection_method": [["document_text_detection_method", "annotator_client_mock", "document_text_detection"], ["document_text_detection_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"], ["document_text_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"]], "return_value": [["document_text_detection_method", "return_value", "AnnotateImageResponse", "text_annotations", "EntityAnnotation", "description", "score"]]}, "name": "test_document_text_detection_with_additional_properties", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["document_text_detection_method", "annotator_client_mock", "document_text_detection"]], "self": [["self", "hook", "document_text_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"]]}, "params_p": {"annotator_client_mock": [], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_document_text_detection_with_additional_properties", "ret_exprs": [], "ret_type": "", "variables": {"document_text_detection_method": "", "return_value": ""}, "variables_p": {"document_text_detection_method": [["str", 0.14399819074437395], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1090565781859955], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.10809390633779517], ["list", 0.10000738763108982], ["Dict[str, set]", 0.09396653729627716], ["dict", 0.09059088252106626], ["Dict[str, Union[Any, Any, Any]]", 0.08973892856800067], ["Set[str]", 0.08614744632492345], ["Dict[str, list]", 0.08358361156349495]], "return_value": [["str", 0.21697366171569465], ["Tuple[str, str]", 0.19388755210496295], ["Dict[str, Union[int, str]]", 0.10194520511046751], ["dict", 0.09695621449264345]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[791, 4], [803, 47]], "fn_var_ln": {"detect_text_method": [[793, 8], [793, 26]], "err": [[802, 8], [802, 11]], "return_value": [[794, 8], [794, 39]]}, "fn_var_occur": {"detect_text_method": [["detect_text_method", "annotator_client_mock", "document_text_detection"], ["detect_text_method", "return_value", "AnnotateImageResponse", "error"]], "err": [["err", "ctx", "value"], ["str", "err"]], "return_value": [["detect_text_method", "return_value", "AnnotateImageResponse", "error"]]}, "name": "test_detect_document_text_with_error_response", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["detect_text_method", "annotator_client_mock", "document_text_detection"]], "self": [["self", "hook", "document_text_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_detect_document_text_with_error_response", "ret_exprs": [], "ret_type": "", "variables": {"detect_text_method": "", "err": "", "return_value": ""}, "variables_p": {"detect_text_method": [["Dict[str, Union[Any, int]]", 0.36375129915543536], ["dict", 0.1280430941663252], ["Dict[Any, int]", 0.107056207345773], ["Dict[str, str]", 0.10195984219274361], ["Dict[int, List[Any]]", 0.09809033582072406], ["list", 0.09616071406928853]], "err": [["str", 0.30401277098330504], ["frozenset[str]", 0.27162558243657475], ["int", 0.2667999344278643], ["Final", 0.0789964170559774]], "return_value": [["float", 0.24900381359918083], ["Dict[str, List[int]]", 0.1875390021870981], ["str", 0.18377604918717816], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.10168961316961128], ["List[Tuple[Any, Any]]", 0.09572423501627356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[806, 4], [819, 9]], "fn_var_ln": {"label_detection_method": [[808, 8], [808, 30]], "return_value": [[809, 8], [809, 43]]}, "fn_var_occur": {"label_detection_method": [["label_detection_method", "annotator_client_mock", "label_detection"], ["label_detection_method", "return_value", "AnnotateImageResponse", "label_annotations", "EntityAnnotation", "description", "score"], ["label_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"]], "return_value": [["label_detection_method", "return_value", "AnnotateImageResponse", "label_annotations", "EntityAnnotation", "description", "score"]]}, "name": "test_label_detection", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["label_detection_method", "annotator_client_mock", "label_detection"]], "self": [["self", "hook", "label_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.5055979908722453]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_label_detection", "ret_exprs": [], "ret_type": "", "variables": {"label_detection_method": "", "return_value": ""}, "variables_p": {"label_detection_method": [["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.2568309249556154], ["list", 0.09230461819678586], ["int", 0.09011464460774007], ["str", 0.08699748545890137]], "return_value": [["str", 0.6922151726288663], ["Optional[str]", 0.130403690919423], ["Dict[str, Union[Any, Any, Any]]", 0.0890674986924456], ["Dict[str, str]", 0.08831363775926515]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[822, 4], [842, 9]], "fn_var_ln": {"label_detection_method": [[824, 8], [824, 30]], "return_value": [[825, 8], [825, 43]]}, "fn_var_occur": {"label_detection_method": [["label_detection_method", "annotator_client_mock", "label_detection"], ["label_detection_method", "return_value", "AnnotateImageResponse", "label_annotations", "EntityAnnotation", "description", "score"], ["label_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"]], "return_value": [["label_detection_method", "return_value", "AnnotateImageResponse", "label_annotations", "EntityAnnotation", "description", "score"]]}, "name": "test_label_detection_with_additional_properties", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["label_detection_method", "annotator_client_mock", "label_detection"]], "self": [["self", "hook", "label_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"]]}, "params_p": {"annotator_client_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.6278462986998818]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_label_detection_with_additional_properties", "ret_exprs": [], "ret_type": "", "variables": {"label_detection_method": "", "return_value": ""}, "variables_p": {"label_detection_method": [["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.2568309249556154], ["list", 0.09230461819678586], ["int", 0.09011464460774007], ["str", 0.08699748545890137]], "return_value": [["str", 0.6922151726288663], ["Optional[str]", 0.130403690919423], ["Dict[str, Union[Any, Any, Any]]", 0.0890674986924456], ["Dict[str, str]", 0.08831363775926515]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[845, 4], [857, 47]], "fn_var_ln": {"detect_text_method": [[847, 8], [847, 26]], "err": [[856, 8], [856, 11]], "return_value": [[848, 8], [848, 39]]}, "fn_var_occur": {"detect_text_method": [["detect_text_method", "annotator_client_mock", "label_detection"], ["detect_text_method", "return_value", "AnnotateImageResponse", "error"]], "err": [["err", "ctx", "value"], ["str", "err"]], "return_value": [["detect_text_method", "return_value", "AnnotateImageResponse", "error"]]}, "name": "test_label_detection_with_error_response", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["detect_text_method", "annotator_client_mock", "label_detection"]], "self": [["self", "hook", "label_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [["int", 0.09403054921477111]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_label_detection_with_error_response", "ret_exprs": [], "ret_type": "", "variables": {"detect_text_method": "", "err": "", "return_value": ""}, "variables_p": {"detect_text_method": [["Dict[str, Union[Any, int]]", 0.37674682277168875], ["dict", 0.31324324903746437], ["list", 0.10128995709242104], ["Dict[int, List[Any]]", 0.09713691239843857]], "err": [["str", 0.30401277098330504], ["frozenset[str]", 0.27162558243657475], ["int", 0.2667999344278643], ["Final", 0.0789964170559774]], "return_value": [["float", 0.24900381359918083], ["Dict[str, List[int]]", 0.1875390021870981], ["str", 0.18377604918717816], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.10168961316961128], ["List[Tuple[Any, Any]]", 0.09572423501627356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[860, 4], [879, 9]], "fn_var_ln": {"return_value": [[863, 8], [863, 49]], "safe_search_detection_method": [[862, 8], [862, 36]]}, "fn_var_occur": {"return_value": [["safe_search_detection_method", "return_value", "AnnotateImageResponse", "safe_search_annotation", "SafeSearchAnnotation", "adult", "spoof", "medical", "violence", "racy"]], "safe_search_detection_method": [["safe_search_detection_method", "annotator_client_mock", "safe_search_detection"], ["safe_search_detection_method", "return_value", "AnnotateImageResponse", "safe_search_annotation", "SafeSearchAnnotation", "adult", "spoof", "medical", "violence", "racy"], ["safe_search_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_safe_search_detection", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["safe_search_detection_method", "annotator_client_mock", "safe_search_detection"]], "self": [["self", "hook", "safe_search_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [["float", 0.08323051171661822]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_safe_search_detection", "ret_exprs": [], "ret_type": "", "variables": {"return_value": "", "safe_search_detection_method": ""}, "variables_p": {"return_value": [["str", 0.9084451084432934], ["Union[Literal, str]", 0.09155489155670676]], "safe_search_detection_method": [["DefaultDict[Any, int]", 0.1362272867396397]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[882, 4], [908, 9]], "fn_var_ln": {"return_value": [[885, 8], [885, 49]], "safe_search_detection_method": [[884, 8], [884, 36]]}, "fn_var_occur": {"return_value": [["safe_search_detection_method", "return_value", "AnnotateImageResponse", "safe_search_annotation", "SafeSearchAnnotation", "adult", "spoof", "medical", "violence", "racy"]], "safe_search_detection_method": [["safe_search_detection_method", "annotator_client_mock", "safe_search_detection"], ["safe_search_detection_method", "return_value", "AnnotateImageResponse", "safe_search_annotation", "SafeSearchAnnotation", "adult", "spoof", "medical", "violence", "racy"], ["safe_search_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"]]}, "name": "test_safe_search_detection_with_additional_properties", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["safe_search_detection_method", "annotator_client_mock", "safe_search_detection"]], "self": [["self", "hook", "safe_search_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"]]}, "params_p": {"annotator_client_mock": [], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_safe_search_detection_with_additional_properties", "ret_exprs": [], "ret_type": "", "variables": {"return_value": "", "safe_search_detection_method": ""}, "variables_p": {"return_value": [["str", 0.9084451084432934], ["Union[Literal, str]", 0.09155489155670676]], "safe_search_detection_method": [["DefaultDict[Any, int]", 0.1362272867396397]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[911, 4], [923, 47]], "fn_var_ln": {"detect_text_method": [[913, 8], [913, 26]], "err": [[922, 8], [922, 11]], "return_value": [[914, 8], [914, 39]]}, "fn_var_occur": {"detect_text_method": [["detect_text_method", "annotator_client_mock", "safe_search_detection"], ["detect_text_method", "return_value", "AnnotateImageResponse", "error"]], "err": [["err", "ctx", "value"], ["str", "err"]], "return_value": [["detect_text_method", "return_value", "AnnotateImageResponse", "error"]]}, "name": "test_safe_search_detection_with_error_response", "params": {"annotator_client_mock": "", "self": ""}, "params_descr": {"annotator_client_mock": "", "self": ""}, "params_occur": {"annotator_client_mock": [["detect_text_method", "annotator_client_mock", "safe_search_detection"]], "self": [["self", "hook", "safe_search_detection", "image", "DETECT_TEST_IMAGE"]]}, "params_p": {"annotator_client_mock": [["tests.e2e.Helper", 0.08929094369257738]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGcpVisionHook.test_safe_search_detection_with_error_response", "ret_exprs": [], "ret_type": "", "variables": {"detect_text_method": "", "err": "", "return_value": ""}, "variables_p": {"detect_text_method": [["Dict[str, int]", 0.131797755856533], ["str", 0.11457115260241825], ["Dict[str, Any]", 0.10040973831793543], ["Dict[str, dict]", 0.0958730233674729], ["List[int]", 0.09519058408134536], ["cirq.google.op_serializer.GateOpSerializer", 0.09444116388805111], ["pytch.utils.Position", 0.090995756237326]], "err": [["str", 0.30401277098330504], ["frozenset[str]", 0.27162558243657475], ["int", 0.2667999344278643], ["Final", 0.0789964170559774]], "return_value": [["float", 0.24900381359918083], ["Dict[str, List[int]]", 0.1875390021870981], ["str", 0.18377604918717816], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.10168961316961128], ["List[Tuple[Any, Any]]", 0.09572423501627356]]}}], "name": "TestGcpVisionHook", "q_name": "TestGcpVisionHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "google", "cloud", "vision_v1", "AnnotateImageRequest", "AnnotateImageResponse", "EntityAnnotation", "Feature", "Product", "ProductSearchClient", "ProductSet", "ReferenceImage", "SafeSearchAnnotation", "google", "protobuf", "json_format", "MessageToDict", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "vision", "ERR_DIFF_NAMES", "ERR_UNABLE_TO_CREATE", "CloudVisionHook", "airflow", "providers", "google", "common", "consts", "CLIENT_INFO", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id"], "mod_var_ln": {"ANNOTATE_IMAGE_REQUEST": [[55, 0], [55, 22]], "BATCH_ANNOTATE_IMAGE_REQUEST": [[59, 0], [59, 28]], "DETECT_TEST_ADDITIONAL_PROPERTIES": [[76, 0], [76, 33]], "DETECT_TEST_IMAGE": [[75, 0], [75, 17]], "LOCATION_PRODUCTSET_ID_TEST_PARAMS": [[77, 0], [77, 34]], "LOCATION_PRODUCT_ID_TEST_PARAMS": [[82, 0], [82, 31]], "LOC_ID_TEST": [[44, 0], [44, 11]], "LOC_ID_TEST_2": [[45, 0], [45, 13]], "PRODUCTSET_ID_TEST": [[46, 0], [46, 18]], "PRODUCTSET_ID_TEST_2": [[47, 0], [47, 20]], "PRODUCTSET_NAME_TEST": [[48, 0], [48, 20]], "PRODUCT_ID_TEST": [[49, 0], [49, 15]], "PRODUCT_ID_TEST_2": [[50, 0], [50, 17]], "PRODUCT_NAME": [[52, 0], [52, 12]], "PRODUCT_NAME_TEST": [[51, 0], [51, 17]], "PROJECT_ID_TEST": [[42, 0], [42, 15]], "PROJECT_ID_TEST_2": [[43, 0], [43, 17]], "REFERENCE_IMAGE_GEN_ID_TEST": [[54, 0], [54, 27]], "REFERENCE_IMAGE_ID_TEST": [[53, 0], [53, 23]], "REFERENCE_IMAGE_NAME_TEST": [[69, 0], [69, 25]], "REFERENCE_IMAGE_TEST": [[73, 0], [73, 20]], "REFERENCE_IMAGE_WITHOUT_ID_NAME": [[74, 0], [74, 31]]}, "mod_var_occur": {"ANNOTATE_IMAGE_REQUEST": [["self", "hook", "annotate_image", "request", "ANNOTATE_IMAGE_REQUEST"], ["annotate_image_method", "assert_called_once_with", "request", "ANNOTATE_IMAGE_REQUEST", "retry", "DEFAULT", "timeout", "None"]], "BATCH_ANNOTATE_IMAGE_REQUEST": [["self", "hook", "batch_annotate_images", "requests", "BATCH_ANNOTATE_IMAGE_REQUEST"], ["batch_annotate_images_method", "assert_called_once_with", "requests", "list", "map", "AnnotateImageRequest", "BATCH_ANNOTATE_IMAGE_REQUEST", "retry", "DEFAULT", "timeout", "None"]], "DETECT_TEST_ADDITIONAL_PROPERTIES": [], "DETECT_TEST_IMAGE": [["self", "hook", "text_detection", "image", "DETECT_TEST_IMAGE"], ["detect_text_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "text_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"], ["detect_text_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"], ["self", "hook", "text_detection", "image", "DETECT_TEST_IMAGE"], ["self", "hook", "document_text_detection", "image", "DETECT_TEST_IMAGE"], ["document_text_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "document_text_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"], ["document_text_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"], ["self", "hook", "document_text_detection", "image", "DETECT_TEST_IMAGE"], ["self", "hook", "label_detection", "image", "DETECT_TEST_IMAGE"], ["label_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "label_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"], ["label_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"], ["self", "hook", "label_detection", "image", "DETECT_TEST_IMAGE"], ["self", "hook", "safe_search_detection", "image", "DETECT_TEST_IMAGE"], ["safe_search_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "safe_search_detection", "image", "DETECT_TEST_IMAGE", "additional_properties"], ["safe_search_detection_method", "assert_called_once_with", "image", "DETECT_TEST_IMAGE", "max_results", "None", "retry", "DEFAULT", "timeout", "None", "prop1", "prop2"], ["self", "hook", "safe_search_detection", "image", "DETECT_TEST_IMAGE"]], "LOCATION_PRODUCTSET_ID_TEST_PARAMS": [], "LOCATION_PRODUCT_ID_TEST_PARAMS": [], "LOC_ID_TEST": [["PRODUCTSET_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["PRODUCT_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["PRODUCT_NAME", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["REFERENCE_IMAGE_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST", "REFERENCE_IMAGE_ID_TEST"], ["LOCATION_PRODUCTSET_ID_TEST_PARAMS", "pytest", "param", "None", "None", "id", "pytest", "param", "None", "PRODUCTSET_ID_TEST", "id", "pytest", "param", "LOC_ID_TEST", "None", "id"], ["LOCATION_PRODUCT_ID_TEST_PARAMS", "pytest", "param", "None", "None", "id", "pytest", "param", "None", "PRODUCT_ID_TEST", "id", "pytest", "param", "LOC_ID_TEST", "None", "id"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["response_product_set", "ProductSet", "name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["response", "self", "hook", "get_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["productset_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["result", "self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["template_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["response", "self", "hook", "delete_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["self", "hook", "add_product_to_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["self", "hook", "remove_product_from_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "project_id", "PROJECT_ID_TEST"], ["response_product", "Product", "name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["product_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["result", "self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["template_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["response", "self", "hook", "delete_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "project_id", "PROJECT_ID_TEST"]], "LOC_ID_TEST_2": [["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"], ["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"], ["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"], ["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"]], "PRODUCTSET_ID_TEST": [["PRODUCTSET_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["REFERENCE_IMAGE_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST", "REFERENCE_IMAGE_ID_TEST"], ["LOCATION_PRODUCTSET_ID_TEST_PARAMS", "pytest", "param", "None", "None", "id", "pytest", "param", "None", "PRODUCTSET_ID_TEST", "id", "pytest", "param", "LOC_ID_TEST", "None", "id"], ["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "PRODUCTSET_ID_TEST"], ["create_product_set_method", "assert_called_once_with", "parent", "parent", "product_set", "product_set", "product_set_id", "PRODUCTSET_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["response", "self", "hook", "get_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["productset_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["result", "self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["template_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["response", "self", "hook", "delete_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["self", "hook", "add_product_to_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["self", "hook", "remove_product_from_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"]], "PRODUCTSET_ID_TEST_2": [["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"], ["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"]], "PRODUCTSET_NAME_TEST": [["add_product_to_product_set_method", "assert_called_once_with", "name", "PRODUCTSET_NAME_TEST", "product", "PRODUCT_NAME_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["remove_product_from_product_set_method", "assert_called_once_with", "name", "PRODUCTSET_NAME_TEST", "product", "PRODUCT_NAME_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "PRODUCT_ID_TEST": [["PRODUCT_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["PRODUCT_NAME", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["LOCATION_PRODUCT_ID_TEST_PARAMS", "pytest", "param", "None", "None", "id", "pytest", "param", "None", "PRODUCT_ID_TEST", "id", "pytest", "param", "LOC_ID_TEST", "None", "id"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["self", "hook", "add_product_to_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["self", "hook", "remove_product_from_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "project_id", "PROJECT_ID_TEST"], ["result", "PRODUCT_ID_TEST"], ["create_product_method", "assert_called_once_with", "parent", "parent", "product", "product", "product_id", "PRODUCT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["product_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["result", "self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["template_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["response", "self", "hook", "delete_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "project_id", "PROJECT_ID_TEST"]], "PRODUCT_ID_TEST_2": [["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"], ["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"]], "PRODUCT_NAME": [["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "PRODUCT_NAME_TEST": [["add_product_to_product_set_method", "assert_called_once_with", "name", "PRODUCTSET_NAME_TEST", "product", "PRODUCT_NAME_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["remove_product_from_product_set_method", "assert_called_once_with", "name", "PRODUCTSET_NAME_TEST", "product", "PRODUCT_NAME_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "PROJECT_ID_TEST": [["PRODUCTSET_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["PRODUCT_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["PRODUCT_NAME", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["REFERENCE_IMAGE_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST", "REFERENCE_IMAGE_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["response_product_set", "ProductSet", "name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["self", "hook", "create_product_set", "location", "LOC_ID_TEST", "product_set_id", "None", "product_set", "product_set", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["response", "self", "hook", "get_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["productset_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["result", "self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "self", "hook", "update_product_set", "location", "location", "product_set_id", "product_set_id", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["template_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["self", "hook", "update_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "product_set", "product_set", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST"], ["response", "self", "hook", "delete_product_set", "location", "LOC_ID_TEST", "product_set_id", "PRODUCTSET_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["self", "hook", "add_product_to_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["self", "hook", "remove_product_from_product_set", "product_set_id", "PRODUCTSET_ID_TEST", "product_id", "PRODUCT_ID_TEST", "location", "LOC_ID_TEST", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "project_id", "PROJECT_ID_TEST"], ["response_product", "Product", "name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "autogenerated_id"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["result", "self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["parent", "PROJECT_ID_TEST", "LOC_ID_TEST"], ["self", "hook", "create_product", "location", "LOC_ID_TEST", "product_id", "None", "product", "product", "project_id", "PROJECT_ID_TEST"], ["product_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["result", "self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "self", "hook", "update_product", "location", "location", "product_id", "product_id", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["template_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["self", "hook", "update_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "product", "product", "update_mask", "None", "project_id", "PROJECT_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCT_ID_TEST"], ["response", "self", "hook", "delete_product", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "project_id", "PROJECT_ID_TEST"]], "PROJECT_ID_TEST_2": [["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"], ["explicit_ps_name", "ProductSearchClient", "product_set_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCTSET_ID_TEST_2"], ["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"], ["explicit_p_name", "ProductSearchClient", "product_path", "PROJECT_ID_TEST_2", "LOC_ID_TEST_2", "PRODUCT_ID_TEST_2"]], "REFERENCE_IMAGE_GEN_ID_TEST": [["REFERENCE_IMAGE_TEST", "ReferenceImage", "name", "REFERENCE_IMAGE_GEN_ID_TEST"], ["result", "REFERENCE_IMAGE_GEN_ID_TEST"]], "REFERENCE_IMAGE_ID_TEST": [["REFERENCE_IMAGE_NAME_TEST", "PROJECT_ID_TEST", "LOC_ID_TEST", "PRODUCTSET_ID_TEST", "REFERENCE_IMAGE_ID_TEST"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["result", "REFERENCE_IMAGE_ID_TEST"], ["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "REFERENCE_IMAGE_NAME_TEST": [], "REFERENCE_IMAGE_TEST": [["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_TEST", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]], "REFERENCE_IMAGE_WITHOUT_ID_NAME": [["result", "self", "hook", "create_reference_image", "project_id", "PROJECT_ID_TEST", "location", "LOC_ID_TEST", "product_id", "PRODUCT_ID_TEST", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST"], ["create_reference_image_method", "assert_called_once_with", "parent", "PRODUCT_NAME", "reference_image", "REFERENCE_IMAGE_WITHOUT_ID_NAME", "reference_image_id", "REFERENCE_IMAGE_ID_TEST", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 241}, "session_id": "u4KeHvd_bbYIW6WeyZjOTBwneai_9Fln-8653242AgI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"ANNOTATE_IMAGE_REQUEST": "", "BATCH_ANNOTATE_IMAGE_REQUEST": "", "DETECT_TEST_ADDITIONAL_PROPERTIES": "", "DETECT_TEST_IMAGE": "", "LOCATION_PRODUCTSET_ID_TEST_PARAMS": "", "LOCATION_PRODUCT_ID_TEST_PARAMS": "", "LOC_ID_TEST": "", "LOC_ID_TEST_2": "", "PRODUCTSET_ID_TEST": "", "PRODUCTSET_ID_TEST_2": "", "PRODUCTSET_NAME_TEST": "", "PRODUCT_ID_TEST": "", "PRODUCT_ID_TEST_2": "", "PRODUCT_NAME": "", "PRODUCT_NAME_TEST": "", "PROJECT_ID_TEST": "", "PROJECT_ID_TEST_2": "", "REFERENCE_IMAGE_GEN_ID_TEST": "", "REFERENCE_IMAGE_ID_TEST": "", "REFERENCE_IMAGE_NAME_TEST": "", "REFERENCE_IMAGE_TEST": "", "REFERENCE_IMAGE_WITHOUT_ID_NAME": ""}, "variables_p": {"ANNOTATE_IMAGE_REQUEST": [["str", 0.9016941743236779]], "BATCH_ANNOTATE_IMAGE_REQUEST": [["str", 0.6005087510634093], ["List[Tuple[Any, Any]]", 0.13175915497331003], ["Dict[str, str]", 0.09046134946314358], ["int", 0.0845884798092255]], "DETECT_TEST_ADDITIONAL_PROPERTIES": [["int", 0.5563129845193449], ["str", 0.14378264940948185], ["bool", 0.10803525690934801], ["Dict[str, Dict[str, str]]", 0.06948919825638734], ["List[str]", 0.061130450679213105]], "DETECT_TEST_IMAGE": [["int", 0.3551976597515484], ["Pattern[str]", 0.09570005606028274], ["str", 0.09053479083873313]], "LOCATION_PRODUCTSET_ID_TEST_PARAMS": [["int", 0.7216079446332444], ["bool", 0.10171612515238879], ["ClassVar", 0.07450946533540402]], "LOCATION_PRODUCT_ID_TEST_PARAMS": [["str", 0.3972147804607965], ["int", 0.296496603616615], ["bool", 0.11269260023688321], ["Optional[str]", 0.10407760707090363]], "LOC_ID_TEST": [["str", 0.2896434795151625], ["List[str]", 0.2032528355300052], ["Dict[int, Any]", 0.19531988949801957], ["Dict[int, str]", 0.11197907225915849], ["Tuple[str]", 0.1024448346651078], ["deque", 0.09735988853254647]], "LOC_ID_TEST_2": [["str", 0.593494839448445], ["int", 0.406505160551555]], "PRODUCTSET_ID_TEST": [["str", 0.20081955031821458], ["List[str]", 0.10533018865546077], ["int", 0.10271377150464514], ["KeysView[str]", 0.10078144434160068], ["Dict[int, str]", 0.09845244979222337], ["Dict[str, str]", 0.09827458701949045], ["float", 0.09734901855623575]], "PRODUCTSET_ID_TEST_2": [["str", 0.593494839448445], ["int", 0.406505160551555]], "PRODUCTSET_NAME_TEST": [["str", 0.7255192025142483], ["int", 0.17967635611425659]], "PRODUCT_ID_TEST": [["str", 0.49047816067814165], ["Final", 0.13044692695999982], ["int", 0.10346126943542061], ["dict", 0.09233968276152289], ["Tuple[Literal, Literal, Literal, Literal, Literal]", 0.09167302296436561], ["list", 0.09160093720054935]], "PRODUCT_ID_TEST_2": [["str", 0.8771614841552151], ["int", 0.1228385158447848]], "PRODUCT_NAME": [["str", 1.0000000000000002]], "PRODUCT_NAME_TEST": [["str", 0.8358409831768078], ["Set[str]", 0.16415901682319203]], "PROJECT_ID_TEST": [["Dict[int, str]", 0.6819195071571387], ["Dict[str, Any]", 0.10963183290428767], ["List[Tuple[int, int]]", 0.10542214147531308], ["Tuple[str, str, str, str, str]", 0.10302651846326076]], "PROJECT_ID_TEST_2": [["str", 0.6515389816537318], ["dict", 0.1616228397849406], ["Dict[str, str]", 0.09918599452414725], ["int", 0.0876521840371803]], "REFERENCE_IMAGE_GEN_ID_TEST": [["str", 0.32894660050321106], ["Set[str]", 0.2671774328410966], ["Pattern[bytes]", 0.11408670446668279], ["Pattern[str]", 0.11408670446668279], ["Dict[str, str]", 0.09644967231997618], ["List[str]", 0.07925288540235068]], "REFERENCE_IMAGE_ID_TEST": [["Set[str]", 0.21139856215242053], ["int", 0.19858293259146315], ["Optional[Callable[..., Any]]", 0.11452109673147863], ["set", 0.11082080883385217]], "REFERENCE_IMAGE_NAME_TEST": [["int", 0.6104310095348108], ["str", 0.19798884983020645], ["Dict[str, str]", 0.1915801406349828]], "REFERENCE_IMAGE_TEST": [["str", 0.20366056817933043], ["bytes", 0.1998660842249581], ["List[str]", 0.10464873233311231], ["Dict[str, str]", 0.1032918631136153], ["Dict[str, int]", 0.10120066276919315], ["Pattern[str]", 0.09671404071260162], ["Dict[int, str]", 0.09553931444973067], ["int", 0.09507873421745833]], "REFERENCE_IMAGE_WITHOUT_ID_NAME": [["str", 0.4970141743735491], ["Dict[str, str]", 0.2991346516754177], ["List[str]", 0.10598805555647547], ["Dict[int, str]", 0.09786311839455746]]}}}