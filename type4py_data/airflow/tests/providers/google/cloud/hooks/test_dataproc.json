{"error": null, "response": {"classes": [{"cls_lc": [[72, 0], [498, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [75, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataprocHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [79, 56]], "fn_var_ln": {"hook": [[79, 12], [79, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "DataprocHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "DataprocHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataprocHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.18614115987205282], ["simulation.core.common.Resources", 0.10492426918543066], ["Callable", 0.10401861564589024], ["str", 0.10141171637086635], ["Type[Dict[str, Any]]", 0.0945764171779035]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [89, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_cluster_client", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["self", "hook", "get_cluster_client", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocHook.test_get_cluster_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [99, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_cluster_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["self", "hook", "get_cluster_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08984485323135225]], "mock_get_credentials": [["mock.MagicMock", 0.08984485323135225]], "self": []}, "q_name": "TestDataprocHook.test_get_cluster_client_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [109, 9]], "fn_var_ln": {"_": [[104, 8], [104, 9]]}, "fn_var_occur": {"_": [["_", "self", "hook", "get_template_client"]]}, "name": "test_get_template_client_global", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["_", "self", "hook", "get_template_client"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocHook.test_get_template_client_global", "ret_exprs": [], "ret_type": "", "variables": {"_": ""}, "variables_p": {"_": [["int", 0.2453443363831954], ["TextIO", 0.10954789990959028], ["List[int]", 0.09760194102604097], ["bool", 0.0886731077736994]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [119, 9]], "fn_var_ln": {"_": [[114, 8], [114, 9]]}, "fn_var_occur": {"_": [["_", "self", "hook", "get_template_client", "region"]]}, "name": "test_get_template_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["_", "self", "hook", "get_template_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocHook.test_get_template_client_region", "ret_exprs": [], "ret_type": "", "variables": {"_": ""}, "variables_p": {"_": [["str", 0.904147520914878], ["Dict[str, int]", 0.0958524790851222]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[123, 4], [129, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_job_client", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["self", "hook", "get_job_client", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocHook.test_get_job_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [139, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_job_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["self", "hook", "get_job_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08984485323135225]], "mock_get_credentials": [["mock.MagicMock", 0.08984485323135225]], "self": []}, "q_name": "TestDataprocHook.test_get_job_client_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [149, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_client", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["self", "hook", "get_batch_client", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocHook.test_get_batch_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[153, 4], [157, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["self", "hook", "get_batch_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08984485323135225]], "mock_get_credentials": [["mock.MagicMock", 0.08984485323135225]], "self": []}, "q_name": "TestDataprocHook.test_get_batch_client_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[160, 4], [179, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09808339732289129]], "self": []}, "q_name": "TestDataprocHook.test_create_cluster", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[182, 4], [196, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10600997387379298]], "self": []}, "q_name": "TestDataprocHook.test_delete_cluster", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[199, 4], [212, 95]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_diagnose_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "diagnose_cluster", "return_value", "result", "assert_called_once_with"]], "self": [["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11900749175641241]], "self": []}, "q_name": "TestDataprocHook.test_diagnose_cluster", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [227, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09596376282307506]], "self": []}, "q_name": "TestDataprocHook.test_get_cluster", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[230, 4], [245, 9]], "fn_var_ln": {"filter_": [[231, 8], [231, 15]]}, "fn_var_occur": {"filter_": [["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_list_clusters", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10466550782519767]], "self": []}, "q_name": "TestDataprocHook.test_list_clusters", "ret_exprs": [], "ret_type": "", "variables": {"filter_": ""}, "variables_p": {"filter_": [["dict", 0.2189309135344318], ["tests.components.withings.common.WebhookResponse", 0.20416816001270197], ["list", 0.10441265364842428]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[248, 4], [271, 9]], "fn_var_ln": {"update_mask": [[249, 8], [249, 19]]}, "fn_var_occur": {"update_mask": [["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_update_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocHook.test_update_cluster", "ret_exprs": [], "ret_type": "", "variables": {"update_mask": ""}, "variables_p": {"update_mask": [["str", 0.7960486444872964], ["List[str]", 0.10336964987522523]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[274, 4], [281, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_cluster_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.15268389559271062]], "self": []}, "q_name": "TestDataprocHook.test_update_cluster_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[284, 4], [290, 9]], "fn_var_ln": {"parent": [[286, 8], [286, 14]], "template": [[285, 8], [285, 16]]}, "fn_var_occur": {"parent": [["parent", "GCP_PROJECT", "GCP_LOCATION"], ["mock_client", "return_value", "create_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "retry", "DEFAULT", "timeout", "None", "metadata"]], "template": [["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "create_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_create_workflow_template", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "create_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocHook.test_create_workflow_template", "ret_exprs": [], "ret_type": "", "variables": {"parent": "", "template": ""}, "variables_p": {"parent": [], "template": [["str", 0.38554143255327045], ["list", 0.2029658017640087], ["Dict[str, Union[Any, Any, Any, str]]", 0.0970857282500768], ["List[List[str]]", 0.09301439855727871]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[293, 4], [304, 9]], "fn_var_ln": {"name": [[295, 8], [295, 12]], "template_name": [[294, 8], [294, 21]]}, "fn_var_occur": {"name": [["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["mock_client", "return_value", "instantiate_workflow_template", "assert_called_once_with", "request", "dict", "name", "name", "version", "None", "parameters", "None", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "template_name": [["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"]]}, "name": "test_instantiate_workflow_template", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "instantiate_workflow_template", "assert_called_once_with", "request", "dict", "name", "name", "version", "None", "parameters", "None", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocHook.test_instantiate_workflow_template", "ret_exprs": [], "ret_type": "", "variables": {"name": "", "template_name": ""}, "variables_p": {"name": [["str", 1.0]], "template_name": [["str", 0.908381609147825]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[307, 4], [309, 106]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_instantiate_workflow_template_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "instantiate_workflow_template", "template_name", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.22728155864934957], ["Callable", 0.07372106913223447]], "self": []}, "q_name": "TestDataprocHook.test_instantiate_workflow_template_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[312, 4], [323, 9]], "fn_var_ln": {"parent": [[314, 8], [314, 14]], "template": [[313, 8], [313, 16]]}, "fn_var_occur": {"parent": [["parent", "GCP_PROJECT", "GCP_LOCATION"], ["mock_client", "return_value", "instantiate_inline_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "template": [["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "instantiate_inline_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_instantiate_inline_workflow_template", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "instantiate_inline_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocHook.test_instantiate_inline_workflow_template", "ret_exprs": [], "ret_type": "", "variables": {"parent": "", "template": ""}, "variables_p": {"parent": [["bool", 0.09014819154232159], ["str", 0.09009124600772919]], "template": [["str", 0.5668118737768394], ["Dict[str, Any]", 0.2069225267223984], ["dict", 0.11729820927030357]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[326, 4], [328, 109]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_instantiate_inline_workflow_template_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "instantiate_inline_workflow_template", "template", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.20578568668499245]], "self": []}, "q_name": "TestDataprocHook.test_instantiate_inline_workflow_template_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[331, 4], [342, 44]], "fn_var_ln": {"calls": [[338, 8], [338, 13]], "side_effect": [[332, 8], [332, 32]]}, "fn_var_occur": {"calls": [["calls", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_get_job", "assert_has_calls", "calls"]], "side_effect": [["mock_get_job", "side_effect", "mock", "MagicMock", "status", "mock", "MagicMock", "state", "JobStatus", "State", "RUNNING", "mock", "MagicMock", "status", "mock", "MagicMock", "state", "JobStatus", "State", "ERROR"]]}, "name": "test_wait_for_job", "params": {"mock_get_job": "", "self": ""}, "params_descr": {"mock_get_job": "", "self": ""}, "params_occur": {"mock_get_job": [["mock_get_job", "side_effect", "mock", "MagicMock", "status", "mock", "MagicMock", "state", "JobStatus", "State", "RUNNING", "mock", "MagicMock", "status", "mock", "MagicMock", "state", "JobStatus", "State", "ERROR"], ["mock_get_job", "assert_has_calls", "calls"]], "self": [["self", "hook", "wait_for_job", "job_id", "JOB_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_time"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_job": [["Dict[str, Any]", 0.30815949399733433]], "self": []}, "q_name": "TestDataprocHook.test_wait_for_job", "ret_exprs": [], "ret_type": "", "variables": {"calls": "", "side_effect": ""}, "variables_p": {"calls": [["List[int]", 0.20620525659818684], ["Dict[str, Union[Any, Any, Any]]", 0.19619651493094095], ["List[Tuple[str, Any]]", 0.10053054378364348], ["Tuple[Any, Any, int]", 0.09876282694639169], ["Dict[str, Union[Any, bool, str]]", 0.09809825746547048]], "side_effect": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[345, 4], [347, 86]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_wait_for_job_missing_region", "params": {"mock_get_job": "", "self": ""}, "params_descr": {"mock_get_job": "", "self": ""}, "params_occur": {"mock_get_job": [], "self": [["self", "hook", "wait_for_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "wait_time"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_job": [["mock.Mock", 0.44914744353821423], ["mock.MagicMock", 0.10704731210889964]], "self": []}, "q_name": "TestDataprocHook.test_wait_for_job_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[350, 4], [362, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_job", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.13056012037344802]], "self": []}, "q_name": "TestDataprocHook.test_get_job", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[365, 4], [367, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_job_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "get_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.20056827702525504]], "self": []}, "q_name": "TestDataprocHook.test_get_job_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[370, 4], [383, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_submit_job", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.15174875165578205]], "self": []}, "q_name": "TestDataprocHook.test_submit_job", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[386, 4], [388, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_submit_job_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "submit_job", "job", "JOB", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.21587004136630122]], "self": []}, "q_name": "TestDataprocHook.test_submit_job_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[391, 4], [403, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cancel_job", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.16583195017125774]], "self": []}, "q_name": "TestDataprocHook.test_cancel_job", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[406, 4], [424, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_batch", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11439466017464579]], "self": []}, "q_name": "TestDataprocHook.test_create_batch", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[427, 4], [446, 52]], "fn_var_ln": {"result": [[429, 8], [429, 14]], "return_value": [[428, 8], [428, 31]]}, "fn_var_occur": {"result": [["result", "google", "cloud", "dataproc_v1", "Batch", "self", "hook", "wait_for_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_check_interval", "retry", "DEFAULT", "timeout", "None", "metadata"], ["result", "state", "Batch", "State", "SUCCEEDED"]], "return_value": [["mock_batch", "return_value", "Batch", "state", "Batch", "State", "SUCCEEDED"]]}, "name": "test_wait_for_batch", "params": {"mock_batch": "", "self": ""}, "params_descr": {"mock_batch": "", "self": ""}, "params_occur": {"mock_batch": [["mock_batch", "return_value", "Batch", "state", "Batch", "State", "SUCCEEDED"], ["mock_batch", "assert_called_once_with", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["result", "google", "cloud", "dataproc_v1", "Batch", "self", "hook", "wait_for_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_check_interval", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "params_p": {"args": [], "kwargs": [], "mock_batch": [["mock.MagicMock", 0.1962249887229202]], "self": []}, "q_name": "TestDataprocHook.test_wait_for_batch", "ret_exprs": [], "ret_type": "", "variables": {"result": "google.cloud.dataproc_v1.Batch", "return_value": ""}, "variables_p": {"result": [["str", 0.3257359812446547], ["list", 0.3229988187311063], ["Dict[str, List[Any]]", 0.088340937649041], ["dict", 0.07810861434931322]], "return_value": [["int", 0.2854560711354669], ["str", 0.22297769573804777], ["Dict[str, Dict[str, Any]]", 0.09353613298236951], ["List[Dict[str, str]]", 0.07299156962240015]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[449, 4], [463, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_batch", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11685193318688243]], "self": []}, "q_name": "TestDataprocHook.test_delete_batch", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[466, 4], [480, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10783248442525231]], "self": []}, "q_name": "TestDataprocHook.test_get_batch", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[483, 4], [498, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_batches", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "list_batches", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11786144471204066]], "self": []}, "q_name": "TestDataprocHook.test_list_batches", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDataprocHook", "q_name": "TestDataprocHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[501, 0], [946, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[502, 4], [504, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[506, 4], [508, 61]], "fn_var_ln": {"hook": [[508, 12], [508, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "DataprocAsyncHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "DataprocAsyncHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataprocAsyncHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["simulation.core.common.Resources", 0.12038734605934608], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[512, 4], [518, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_cluster_client", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["self", "hook", "get_cluster_client", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_cluster_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[522, 4], [528, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_cluster_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["self", "hook", "get_cluster_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08984485323135225]], "mock_get_credentials": [["mock.MagicMock", 0.08984485323135225]], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_cluster_client_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[532, 4], [538, 9]], "fn_var_ln": {"_": [[533, 8], [533, 9]]}, "fn_var_occur": {"_": [["_", "self", "hook", "get_template_client"]]}, "name": "test_get_template_client_global", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["_", "self", "hook", "get_template_client"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_template_client_global", "ret_exprs": [], "ret_type": "", "variables": {"_": ""}, "variables_p": {"_": [["int", 0.2453443363831954], ["TextIO", 0.10954789990959028], ["List[int]", 0.09760194102604097], ["bool", 0.0886731077736994]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[542, 4], [548, 9]], "fn_var_ln": {"_": [[543, 8], [543, 9]]}, "fn_var_occur": {"_": [["_", "self", "hook", "get_template_client", "region"]]}, "name": "test_get_template_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["_", "self", "hook", "get_template_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_template_client_region", "ret_exprs": [], "ret_type": "", "variables": {"_": ""}, "variables_p": {"_": [["str", 0.904147520914878], ["Dict[str, int]", 0.0958524790851222]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[552, 4], [558, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_job_client", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["self", "hook", "get_job_client", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_job_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[562, 4], [568, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_job_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["self", "hook", "get_job_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08984485323135225]], "mock_get_credentials": [["mock.MagicMock", 0.08984485323135225]], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_job_client_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[572, 4], [578, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_client", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "None"]], "self": [["self", "hook", "get_batch_client", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_credentials": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_batch_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[582, 4], [586, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_batch_client_region", "params": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_credentials": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "mock_get_credentials": [["mock_client", "assert_called_once_with", "credentials", "mock_get_credentials", "return_value", "client_info", "CLIENT_INFO", "client_options", "ANY"]], "self": [["self", "hook", "get_batch_client", "region"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08984485323135225]], "mock_get_credentials": [["mock.MagicMock", 0.08984485323135225]], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_batch_client_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[590, 4], [611, 9]], "fn_var_ln": {"mock_cluster_client": [[591, 8], [591, 27]], "return_value": [[592, 8], [592, 32]]}, "fn_var_occur": {"mock_cluster_client": [["mock_cluster_client", "AsyncMock", "ClusterControllerAsyncClient"], ["mock_client", "return_value", "mock_cluster_client"]], "return_value": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_create_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_create_cluster", "ret_exprs": [], "ret_type": "", "variables": {"mock_cluster_client": "", "return_value": ""}, "variables_p": {"mock_cluster_client": [], "return_value": [["str", 0.24569232472178604], ["Pattern[str]", 0.22282217876874078], ["rotkehlchen.tests.utils.mock.MockResponse", 0.2052006395424992], ["Dict[str, List[Any]]", 0.09576721604440845], ["Dict[str, Union[None, Any, int]]", 0.08091164476596532], ["List[Dict[str, Any]]", 0.07560563834961717], ["Counter", 0.07400035780698305]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[615, 4], [631, 9]], "fn_var_ln": {"mock_cluster_client": [[616, 8], [616, 27]], "return_value": [[617, 8], [617, 32]]}, "fn_var_occur": {"mock_cluster_client": [["mock_cluster_client", "AsyncMock", "ClusterControllerAsyncClient"], ["mock_client", "return_value", "mock_cluster_client"]], "return_value": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_delete_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_delete_cluster", "ret_exprs": [], "ret_type": "", "variables": {"mock_cluster_client": "", "return_value": ""}, "variables_p": {"mock_cluster_client": [], "return_value": [["str", 0.3911970200011975], ["Pattern[str]", 0.2253664290399621], ["rotkehlchen.tests.utils.mock.MockResponse", 0.20054629479976788], ["Dict[str, List[Any]]", 0.09802850010953214], ["Dict[str, Union[None, Any, int]]", 0.0848617560495405]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[635, 4], [652, 95]], "fn_var_ln": {"mock_cluster_client": [[636, 8], [636, 27]], "return_value": [[637, 8], [637, 32]]}, "fn_var_occur": {"mock_cluster_client": [["mock_cluster_client", "AsyncMock", "ClusterControllerAsyncClient"], ["mock_client", "return_value", "mock_cluster_client"]], "return_value": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "diagnose_cluster", "return_value", "result", "assert_called_once_with"]]}, "name": "test_diagnose_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "diagnose_cluster", "return_value", "result", "assert_called_once_with"]], "self": [["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_diagnose_cluster", "ret_exprs": [], "ret_type": "", "variables": {"mock_cluster_client": "", "return_value": ""}, "variables_p": {"mock_cluster_client": [], "return_value": [["str", 0.3911970200011975], ["Pattern[str]", 0.2253664290399621], ["rotkehlchen.tests.utils.mock.MockResponse", 0.20054629479976788], ["Dict[str, List[Any]]", 0.09802850010953214], ["Dict[str, Union[None, Any, int]]", 0.0848617560495405]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[656, 4], [670, 9]], "fn_var_ln": {"mock_cluster_client": [[657, 8], [657, 27]], "return_value": [[658, 8], [658, 32]]}, "fn_var_occur": {"mock_cluster_client": [["mock_cluster_client", "AsyncMock", "ClusterControllerAsyncClient"], ["mock_client", "return_value", "mock_cluster_client"]], "return_value": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_get_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_cluster", "ret_exprs": [], "ret_type": "", "variables": {"mock_cluster_client": "", "return_value": ""}, "variables_p": {"mock_cluster_client": [], "return_value": [["rotkehlchen.tests.utils.mock.MockResponse", 0.30410832941187543], ["str", 0.21799247751087514], ["Pattern[str]", 0.10431032441158503], ["List[Dict[str, str]]", 0.10394053599917523], ["Dict[str, Union[float, str]]", 0.10018591657994964], ["Dict[str, dict]", 0.09221491984168831]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[674, 4], [690, 9]], "fn_var_ln": {"filter_": [[675, 8], [675, 15]], "mock_cluster_client": [[676, 8], [676, 27]], "return_value": [[677, 8], [677, 32]]}, "fn_var_occur": {"filter_": [["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "mock_cluster_client": [["mock_cluster_client", "AsyncMock", "ClusterControllerAsyncClient"], ["mock_client", "return_value", "mock_cluster_client"]], "return_value": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_list_clusters", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_list_clusters", "ret_exprs": [], "ret_type": "", "variables": {"filter_": "", "mock_cluster_client": "", "return_value": ""}, "variables_p": {"filter_": [["dict", 0.2189309135344318], ["tests.components.withings.common.WebhookResponse", 0.20416816001270197], ["list", 0.10441265364842428]], "mock_cluster_client": [], "return_value": [["str", 0.3911970200011975], ["Pattern[str]", 0.2253664290399621], ["rotkehlchen.tests.utils.mock.MockResponse", 0.20054629479976788], ["Dict[str, List[Any]]", 0.09802850010953214], ["Dict[str, Union[None, Any, int]]", 0.0848617560495405]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[694, 4], [719, 9]], "fn_var_ln": {"mock_cluster_client": [[696, 8], [696, 27]], "return_value": [[697, 8], [697, 32]], "update_mask": [[695, 8], [695, 19]]}, "fn_var_occur": {"mock_cluster_client": [["mock_cluster_client", "AsyncMock", "ClusterControllerAsyncClient"], ["mock_client", "return_value", "mock_cluster_client"]], "return_value": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "update_mask": [["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_update_cluster", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_cluster_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_update_cluster", "ret_exprs": [], "ret_type": "", "variables": {"mock_cluster_client": "", "return_value": "", "update_mask": ""}, "variables_p": {"mock_cluster_client": [], "return_value": [["str", 0.3917756937041859], ["Pattern[str]", 0.21922390637013986], ["rotkehlchen.tests.utils.mock.MockResponse", 0.21682028665812494], ["Dict[str, List[Any]]", 0.09372380700904845], ["Counter", 0.07845630625850081]], "update_mask": [["str", 0.7960486444872964], ["List[str]", 0.10336964987522523]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[722, 4], [729, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_cluster_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.15268389559271062]], "self": []}, "q_name": "TestDataprocAsyncHook.test_update_cluster_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[733, 4], [743, 9]], "fn_var_ln": {"mock_template_client": [[736, 8], [736, 28]], "parent": [[735, 8], [735, 14]], "return_value": [[737, 8], [737, 32]], "template": [[734, 8], [734, 16]]}, "fn_var_occur": {"mock_template_client": [["mock_template_client", "AsyncMock", "WorkflowTemplateServiceAsyncClient"], ["mock_client", "return_value", "mock_template_client"]], "parent": [["parent", "GCP_PROJECT", "GCP_LOCATION"], ["mock_client", "return_value", "create_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "retry", "DEFAULT", "timeout", "None", "metadata"]], "return_value": [["mock_client", "return_value", "mock_template_client"], ["mock_client", "return_value", "create_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "retry", "DEFAULT", "timeout", "None", "metadata"]], "template": [["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "create_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_create_workflow_template", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_template_client"], ["mock_client", "return_value", "create_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_create_workflow_template", "ret_exprs": [], "ret_type": "", "variables": {"mock_template_client": "", "parent": "", "return_value": "", "template": ""}, "variables_p": {"mock_template_client": [["str", 0.9104914703629751], ["int", 0.08950852963702473]], "parent": [], "return_value": [["Optional[bytes]", 0.1472428644340419], ["str", 0.10949704390449315]], "template": [["str", 0.38554143255327045], ["list", 0.2029658017640087], ["Dict[str, Union[Any, Any, Any, str]]", 0.0970857282500768], ["List[List[str]]", 0.09301439855727871]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[747, 4], [760, 9]], "fn_var_ln": {"mock_template_client": [[750, 8], [750, 28]], "name": [[749, 8], [749, 12]], "return_value": [[751, 8], [751, 32]], "template_name": [[748, 8], [748, 21]]}, "fn_var_occur": {"mock_template_client": [["mock_template_client", "AsyncMock", "WorkflowTemplateServiceAsyncClient"], ["mock_client", "return_value", "mock_template_client"]], "name": [["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["mock_client", "return_value", "instantiate_workflow_template", "assert_called_once_with", "request", "dict", "name", "name", "version", "None", "parameters", "None", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "return_value": [["mock_client", "return_value", "mock_template_client"], ["mock_client", "return_value", "instantiate_workflow_template", "assert_called_once_with", "request", "dict", "name", "name", "version", "None", "parameters", "None", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "template_name": [["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"]]}, "name": "test_instantiate_workflow_template", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_template_client"], ["mock_client", "return_value", "instantiate_workflow_template", "assert_called_once_with", "request", "dict", "name", "name", "version", "None", "parameters", "None", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_instantiate_workflow_template", "ret_exprs": [], "ret_type": "", "variables": {"mock_template_client": "", "name": "", "return_value": "", "template_name": ""}, "variables_p": {"mock_template_client": [["str", 0.9104914703629751], ["int", 0.08950852963702473]], "name": [["str", 1.0]], "return_value": [["Optional[bytes]", 0.13496240433846132], ["Dict[str, List[Any]]", 0.11442601935793328], ["str", 0.1025909287588097], ["list", 0.08796612218492902]], "template_name": [["str", 0.908381609147825]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[764, 4], [769, 92]], "fn_var_ln": {"hook": [[766, 8], [766, 12]], "return_value": [[765, 8], [765, 32]]}, "fn_var_occur": {"hook": [["hook", "DataprocAsyncHook", "gcp_conn_id", "impersonation_chain", "None"], ["hook", "get_operation", "region", "GCP_LOCATION", "operation_name"]], "return_value": [["mock_client", "return_value", "None"]]}, "name": "test_get_operation", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "None"], ["mock_client", "assert_called_once"], ["mock_client", "assert_called_with", "region", "GCP_LOCATION", "operation_name"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_operation", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "return_value": ""}, "variables_p": {"hook": [], "return_value": [["str", 0.3360645317125661], ["Dict[str, Any]", 0.17836011412059555], ["List[Dict[str, str]]", 0.11767586448276406], ["Optional[bytes]", 0.09522862494337486], ["Dict[Any, Union[int, str]]", 0.09416359618926486], ["Dict[str, Union[int, str]]", 0.09110124358669452], ["list", 0.08740602496474001]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[772, 4], [774, 106]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_instantiate_workflow_template_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "instantiate_workflow_template", "template_name", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.22728155864934957], ["Callable", 0.07372106913223447]], "self": []}, "q_name": "TestDataprocAsyncHook.test_instantiate_workflow_template_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[778, 4], [791, 9]], "fn_var_ln": {"mock_template_client": [[781, 8], [781, 28]], "parent": [[780, 8], [780, 14]], "return_value": [[782, 8], [782, 32]], "template": [[779, 8], [779, 16]]}, "fn_var_occur": {"mock_template_client": [["mock_template_client", "AsyncMock", "WorkflowTemplateServiceAsyncClient"], ["mock_client", "return_value", "mock_template_client"]], "parent": [["parent", "GCP_PROJECT", "GCP_LOCATION"], ["mock_client", "return_value", "instantiate_inline_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "return_value": [["mock_client", "return_value", "mock_template_client"], ["mock_client", "return_value", "instantiate_inline_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "template": [["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "instantiate_inline_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_instantiate_inline_workflow_template", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_template_client"], ["mock_client", "return_value", "instantiate_inline_workflow_template", "assert_called_once_with", "request", "dict", "parent", "parent", "template", "template", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_instantiate_inline_workflow_template", "ret_exprs": [], "ret_type": "", "variables": {"mock_template_client": "", "parent": "", "return_value": "", "template": ""}, "variables_p": {"mock_template_client": [["str", 0.9104914703629751], ["int", 0.08950852963702473]], "parent": [["bool", 0.09014819154232159], ["str", 0.09009124600772919]], "return_value": [["Optional[bytes]", 0.14358601231618248], ["Dict[str, List[Any]]", 0.1163718370835476], ["Dict[str, Any]", 0.11119618551665757], ["Dict[str, int]", 0.08818848739750036], ["list", 0.0864322563542908], ["Dict[str, str]", 0.08514759842546989], ["Tuple[int, int]", 0.08365383559922931]], "template": [["str", 0.5668118737768394], ["Dict[str, Any]", 0.2069225267223984], ["dict", 0.11729820927030357]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[794, 4], [796, 109]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_instantiate_inline_workflow_template_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "instantiate_inline_workflow_template", "template", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.20578568668499245]], "self": []}, "q_name": "TestDataprocAsyncHook.test_instantiate_inline_workflow_template_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[800, 4], [814, 9]], "fn_var_ln": {"mock_job_client": [[801, 8], [801, 23]], "return_value": [[802, 8], [802, 32]]}, "fn_var_occur": {"mock_job_client": [["mock_job_client", "AsyncMock", "JobControllerAsyncClient"], ["mock_client", "return_value", "mock_job_client"]], "return_value": [["mock_client", "return_value", "mock_job_client"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_get_job", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_job_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_job", "ret_exprs": [], "ret_type": "", "variables": {"mock_job_client": "", "return_value": ""}, "variables_p": {"mock_job_client": [], "return_value": [["str", 0.32823007628972367], ["Pattern[str]", 0.22473463879521072], ["rotkehlchen.tests.utils.mock.MockResponse", 0.1947454810426265], ["Dict[str, List[Any]]", 0.08519942687906829], ["Dict[str, str]", 0.08516685927631373], ["List[Dict[str, Any]]", 0.08192351771705701]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[817, 4], [819, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_job_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "get_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.20056827702525504]], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_job_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[823, 4], [838, 9]], "fn_var_ln": {"mock_job_client": [[824, 8], [824, 23]], "return_value": [[825, 8], [825, 32]]}, "fn_var_occur": {"mock_job_client": [["mock_job_client", "AsyncMock", "JobControllerAsyncClient"], ["mock_client", "return_value", "mock_job_client"]], "return_value": [["mock_client", "return_value", "mock_job_client"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_submit_job", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_job_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_submit_job", "ret_exprs": [], "ret_type": "", "variables": {"mock_job_client": "", "return_value": ""}, "variables_p": {"mock_job_client": [], "return_value": [["str", 0.3047041733452524], ["Pattern[str]", 0.23765293141437288], ["rotkehlchen.tests.utils.mock.MockResponse", 0.1901713858604964], ["Dict[str, List[Any]]", 0.09664637068720265], ["Dict[str, Union[None, Any, int]]", 0.08674219209539603], ["Dict[Any, str]", 0.08408294659727966]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[841, 4], [843, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_submit_job_missing_region", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [], "self": [["self", "hook", "submit_job", "job", "JOB", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.Mock", 0.21587004136630122]], "self": []}, "q_name": "TestDataprocAsyncHook.test_submit_job_missing_region", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[847, 4], [861, 9]], "fn_var_ln": {"mock_job_client": [[848, 8], [848, 23]], "return_value": [[849, 8], [849, 32]]}, "fn_var_occur": {"mock_job_client": [["mock_job_client", "AsyncMock", "JobControllerAsyncClient"], ["mock_client", "return_value", "mock_job_client"]], "return_value": [["mock_client", "return_value", "mock_job_client"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_cancel_job", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_job_client"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_cancel_job", "ret_exprs": [], "ret_type": "", "variables": {"mock_job_client": "", "return_value": ""}, "variables_p": {"mock_job_client": [], "return_value": [["str", 0.39297867870220804], ["Pattern[str]", 0.22935048473111228], ["rotkehlchen.tests.utils.mock.MockResponse", 0.18433643087233198], ["Dict[str, List[Any]]", 0.10157283311456151], ["Dict[str, Union[None, Any, int]]", 0.09176157257978622]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[865, 4], [885, 9]], "fn_var_ln": {"mock_batch_client": [[866, 8], [866, 25]], "return_value": [[867, 8], [867, 32]]}, "fn_var_occur": {"mock_batch_client": [["mock_batch_client", "AsyncMock", "BatchControllerAsyncClient"], ["mock_client", "return_value", "mock_batch_client"]], "return_value": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_create_batch", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_create_batch", "ret_exprs": [], "ret_type": "", "variables": {"mock_batch_client": "", "return_value": ""}, "variables_p": {"mock_batch_client": [], "return_value": [["str", 0.42144453908543095], ["Pattern[str]", 0.204882150271214], ["rotkehlchen.tests.utils.mock.MockResponse", 0.18665432259963574], ["Dict[str, List[Any]]", 0.10474231651277596], ["List[Dict[str, Any]]", 0.08227667153094317]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[889, 4], [905, 9]], "fn_var_ln": {"mock_batch_client": [[890, 8], [890, 25]], "return_value": [[891, 8], [891, 32]]}, "fn_var_occur": {"mock_batch_client": [["mock_batch_client", "AsyncMock", "BatchControllerAsyncClient"], ["mock_client", "return_value", "mock_batch_client"]], "return_value": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_delete_batch", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_delete_batch", "ret_exprs": [], "ret_type": "", "variables": {"mock_batch_client": "", "return_value": ""}, "variables_p": {"mock_batch_client": [], "return_value": [["str", 0.5319558675674539], ["List[Dict[str, str]]", 0.09770180437891915], ["Dict[Any, Union[Any, Any]]", 0.09671065841829161], ["bool", 0.09276256367338576], ["Dict[str, Union[Any, Any]]", 0.09206598173082085], ["Dict[str, dict]", 0.0888031242311288]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[909, 4], [925, 9]], "fn_var_ln": {"mock_batch_client": [[910, 8], [910, 25]], "return_value": [[911, 8], [911, 32]]}, "fn_var_occur": {"mock_batch_client": [["mock_batch_client", "AsyncMock", "BatchControllerAsyncClient"], ["mock_client", "return_value", "mock_batch_client"]], "return_value": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_get_batch", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_get_batch", "ret_exprs": [], "ret_type": "", "variables": {"mock_batch_client": "", "return_value": ""}, "variables_p": {"mock_batch_client": [], "return_value": [["str", 0.40991410298400954], ["List[Dict[str, str]]", 0.10689057932542687], ["Dict[str, dict]", 0.10239939248772162], ["Dict[Any, Union[Any, Any]]", 0.09708157942016489], ["Dict[str, Union[int, str]]", 0.09632845743072943], ["Dict[str, str]", 0.09405899048385288], ["Dict[str, Union[Any, Any]]", 0.09332689786809467]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[929, 4], [946, 9]], "fn_var_ln": {"mock_batch_client": [[930, 8], [930, 25]], "return_value": [[931, 8], [931, 32]]}, "fn_var_occur": {"mock_batch_client": [["mock_batch_client", "AsyncMock", "BatchControllerAsyncClient"], ["mock_client", "return_value", "mock_batch_client"]], "return_value": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "name": "test_list_batches", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "mock_batch_client"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "list_batches", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataprocAsyncHook.test_list_batches", "ret_exprs": [], "ret_type": "", "variables": {"mock_batch_client": "", "return_value": ""}, "variables_p": {"mock_batch_client": [], "return_value": [["str", 0.22621864317542167], ["Dict[str, str]", 0.2006946655261021], ["List[Dict[str, str]]", 0.10270134006325563], ["Dict[str, Any]", 0.09499917936910332], ["list", 0.0928594832809736], ["rotkehlchen.tests.utils.mock.MockResponse", 0.092311508083383]]}}], "name": "TestDataprocAsyncHook", "q_name": "TestDataprocAsyncHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[949, 0], [1067, 55]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[950, 4], [958, 9]], "fn_var_ln": {"builder": [[952, 8], [952, 20]], "job_type": [[951, 8], [951, 21]]}, "fn_var_occur": {"builder": [["self", "builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "TASK_ID", "cluster_name", "CLUSTER_NAME", "job_type", "self", "job_type", "properties"]], "job_type": [["self", "job_type"], ["self", "builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "TASK_ID", "cluster_name", "CLUSTER_NAME", "job_type", "self", "job_type", "properties"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "job_type"], ["self", "builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "TASK_ID", "cluster_name", "CLUSTER_NAME", "job_type", "self", "job_type", "properties"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.setup_method", "ret_exprs": [], "ret_type": "None", "variables": {"builder": "", "job_type": ""}, "variables_p": {"builder": [["str", 0.3633118370792811], ["bool", 0.27508944823353665], ["List[str]", 0.08877898844152045], ["List[Union[Any, Any, Any, Any]]", 0.08148464090359564]], "job_type": [["str", 0.3293077770642229], ["Set[str]", 0.20841339205479048], ["List[str]", 0.09870324565106585], ["Dict[Any, Tuple[Any, Any]]", 0.09441418183357154], ["Dict[str, List[str]]", 0.09120555165097322], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08937787040313529], ["dict", 0.0885779813422407]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[962, 4], [981, 42]], "fn_var_ln": {"builder": [[974, 8], [974, 15]], "expected_job": [[966, 8], [966, 20]], "expected_job_id": [[965, 8], [965, 23]], "properties": [[964, 8], [964, 18]], "return_value": [[963, 8], [963, 30]]}, "fn_var_occur": {"builder": [["builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "job_name", "cluster_name", "CLUSTER_NAME", "job_type", "properties", "properties"], ["expected_job", "builder", "job"]], "expected_job": [["expected_job", "AIRFLOW_VERSION", "CLUSTER_NAME", "expected_job_id", "GCP_PROJECT", "properties"], ["expected_job", "builder", "job"]], "expected_job_id": [["expected_job_id", "job_name", "mock_uuid", "return_value", "replace"], ["expected_job", "AIRFLOW_VERSION", "CLUSTER_NAME", "expected_job_id", "GCP_PROJECT", "properties"]], "properties": [["expected_job", "AIRFLOW_VERSION", "CLUSTER_NAME", "expected_job_id", "GCP_PROJECT", "properties"], ["builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "job_name", "cluster_name", "CLUSTER_NAME", "job_type", "properties", "properties"]], "return_value": [["mock_uuid", "return_value"], ["expected_job_id", "job_name", "mock_uuid", "return_value", "replace"]]}, "name": "test_init", "params": {"job_name": "", "mock_uuid": "", "self": ""}, "params_descr": {"job_name": "", "mock_uuid": "", "self": ""}, "params_occur": {"job_name": [["expected_job_id", "job_name", "mock_uuid", "return_value", "replace"], ["builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "job_name", "cluster_name", "CLUSTER_NAME", "job_type", "properties", "properties"]], "mock_uuid": [["mock_uuid", "return_value"], ["expected_job_id", "job_name", "mock_uuid", "return_value", "replace"]], "self": []}, "params_p": {"args": [], "job_name": [["str", 0.09345758572571188]], "kwargs": [], "mock_uuid": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_init", "ret_exprs": [], "ret_type": "", "variables": {"builder": "", "expected_job": "", "expected_job_id": "", "properties": "", "return_value": ""}, "variables_p": {"builder": [["str", 0.11598374120164355]], "expected_job": [["str", 0.20115308092636547], ["int", 0.18654144799624603]], "expected_job_id": [["str", 0.3193027647607356], ["Set[str]", 0.2563537367136691], ["bool", 0.11969756073229071], ["ClassVar[str]", 0.11917765931336363], ["Dict[int, str]", 0.0994514468778659]], "properties": [], "return_value": [["str", 0.8498145496148565], ["Dict[str, Union[int, str]]", 0.1501854503851436]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[983, 4], [987, 66]], "fn_var_ln": {"labels": [[984, 8], [984, 14]]}, "fn_var_occur": {"labels": [["self", "builder", "add_labels", "labels"]]}, "name": "test_add_labels", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_labels", "labels"], ["self", "builder", "job"], ["self", "builder", "job"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_labels", "ret_exprs": [], "ret_type": "", "variables": {"labels": ""}, "variables_p": {"labels": [["dict", 0.21528618782517503], ["tuple", 0.1828922208179481], ["Dict[str, str]", 0.11786417825156374], ["list", 0.08198664047769219], ["Union[bytearray, bytes]", 0.07958083745990924]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[989, 4], [992, 86]], "fn_var_ln": {"variables": [[990, 8], [990, 17]]}, "fn_var_occur": {"variables": [["self", "builder", "add_variables", "variables"], ["variables", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_variables", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_variables", "variables"], ["variables", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_variables", "ret_exprs": [], "ret_type": "", "variables": {"variables": ""}, "variables_p": {"variables": [["list", 0.3137832749666264], ["Dict[str, List[Any]]", 0.18885346821702162], ["List[Tuple[Any, Any]]", 0.1820425809246579], ["Type[List[Any]]", 0.13877942715445485], ["dict", 0.09094727538308092], ["Dict[str, int]", 0.08559397335415829]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[994, 4], [997, 69]], "fn_var_ln": {"args": [[995, 8], [995, 12]]}, "fn_var_occur": {"args": [["self", "builder", "add_args", "args"], ["args", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_args", "args"], ["args", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_args", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["list", 0.0975451821275943], ["List[str]", 0.09184943869591634]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[999, 4], [1002, 91]], "fn_var_ln": {"query": [[1000, 8], [1000, 13]]}, "fn_var_occur": {"query": [["self", "builder", "add_query", "query"], ["query", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_query", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_query", "query"], ["query", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_query", "ret_exprs": [], "ret_type": "", "variables": {"query": ""}, "variables_p": {"query": [["dict", 0.2270273873179522], ["str", 0.10452878240327532], ["T", 0.09203022619683972], ["Dict[str, Any]", 0.08744666170179012]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1004, 4], [1007, 84]], "fn_var_ln": {"query_uri": [[1005, 8], [1005, 17]]}, "fn_var_occur": {"query_uri": [["self", "builder", "add_query_uri", "query_uri"], ["query_uri", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_query_uri", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_query_uri", "query_uri"], ["query_uri", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_query_uri", "ret_exprs": [], "ret_type": "", "variables": {"query_uri": ""}, "variables_p": {"query_uri": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1009, 4], [1012, 87]], "fn_var_ln": {"jar_file_uris": [[1010, 8], [1010, 21]]}, "fn_var_occur": {"jar_file_uris": [["self", "builder", "add_jar_file_uris", "jar_file_uris"], ["jar_file_uris", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_jar_file_uris", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_jar_file_uris", "jar_file_uris"], ["jar_file_uris", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_jar_file_uris", "ret_exprs": [], "ret_type": "", "variables": {"jar_file_uris": ""}, "variables_p": {"jar_file_uris": [["List[str]", 0.5062580092194968], ["str", 0.3109026157592914], ["Dict[str, Tuple[str, ...]]", 0.09398389024737805], ["Set[str]", 0.08885548477383387]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1014, 4], [1017, 85]], "fn_var_ln": {"archive_uris": [[1015, 8], [1015, 20]]}, "fn_var_occur": {"archive_uris": [["self", "builder", "add_archive_uris", "archive_uris"], ["archive_uris", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_archive_uris", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_archive_uris", "archive_uris"], ["archive_uris", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_archive_uris", "ret_exprs": [], "ret_type": "", "variables": {"archive_uris": ""}, "variables_p": {"archive_uris": [["Optional[str]", 0.08816732580302758]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1019, 4], [1022, 79]], "fn_var_ln": {"file_uris": [[1020, 8], [1020, 17]]}, "fn_var_occur": {"file_uris": [["self", "builder", "add_file_uris", "file_uris"], ["file_uris", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_file_uris", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_file_uris", "file_uris"], ["file_uris", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_file_uris", "ret_exprs": [], "ret_type": "", "variables": {"file_uris": ""}, "variables_p": {"file_uris": [["str", 0.5417748936324034], ["list", 0.1775620827348903], ["dict", 0.1023311735622773], ["List[str]", 0.08975478510620839], ["List[Union[Any, Any]]", 0.0885770649642206]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1024, 4], [1027, 93]], "fn_var_ln": {"python_file_uris": [[1025, 8], [1025, 24]]}, "fn_var_occur": {"python_file_uris": [["self", "builder", "add_python_file_uris", "python_file_uris"], ["python_file_uris", "self", "builder", "job", "self", "job_type"]]}, "name": "test_add_python_file_uris", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "add_python_file_uris", "python_file_uris"], ["python_file_uris", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_add_python_file_uris", "ret_exprs": [], "ret_type": "", "variables": {"python_file_uris": ""}, "variables_p": {"python_file_uris": [["List[str]", 0.5062580092194968], ["str", 0.3109026157592914], ["Dict[str, Tuple[str, ...]]", 0.09398389024737805], ["Set[str]", 0.08885548477383387]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1029, 4], [1031, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_set_main_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "set_main"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_set_main_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1033, 4], [1036, 75]], "fn_var_ln": {"main": [[1034, 8], [1034, 12]]}, "fn_var_occur": {"main": [["self", "builder", "set_main", "main_class", "main", "main_jar", "None"], ["main", "self", "builder", "job", "self", "job_type"]]}, "name": "test_set_main_class", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "set_main", "main_class", "main", "main_jar", "None"], ["main", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_set_main_class", "ret_exprs": [], "ret_type": "", "variables": {"main": ""}, "variables_p": {"main": [["tuple", 0.114275135826767], ["Iterator[Any]", 0.09970923466717088], ["Type[Dict[int, Any]]", 0.09968727702411648]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1038, 4], [1041, 82]], "fn_var_ln": {"main": [[1039, 8], [1039, 12]]}, "fn_var_occur": {"main": [["self", "builder", "set_main", "main_class", "None", "main_jar", "main"], ["main", "self", "builder", "job", "self", "job_type"]]}, "name": "test_set_main_jar", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "set_main", "main_class", "None", "main_jar", "main"], ["main", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_set_main_jar", "ret_exprs": [], "ret_type": "", "variables": {"main": ""}, "variables_p": {"main": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1043, 4], [1046, 85]], "fn_var_ln": {"main": [[1044, 8], [1044, 12]]}, "fn_var_occur": {"main": [["self", "builder", "set_python_main", "main"], ["main", "self", "builder", "job", "self", "job_type"]]}, "name": "test_set_python_main", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "set_python_main", "main"], ["main", "self", "builder", "job", "self", "job_type"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_set_python_main", "ret_exprs": [], "ret_type": "", "variables": {"main": ""}, "variables_p": {"main": [["Pattern[str]", 0.16669372008398226], ["Optional[Match[str]]", 0.08617250591196897], ["str", 0.08017696818122326], ["set", 0.07928654790998839]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1058, 4], [1064, 87]], "fn_var_ln": {"expected_job_name": [[1060, 8], [1060, 25]], "return_value": [[1061, 8], [1061, 30]], "uuid": [[1059, 8], [1059, 12]]}, "fn_var_occur": {"expected_job_name": [["expected_job_name", "job_name", "uuid", "replace"], ["expected_job_name", "self", "builder", "job"]], "return_value": [["mock_uuid", "return_value", "uuid"]], "uuid": [["expected_job_name", "job_name", "uuid", "replace"], ["mock_uuid", "return_value", "uuid"]]}, "name": "test_set_job_name", "params": {"job_name": "", "mock_uuid": "", "self": ""}, "params_descr": {"job_name": "", "mock_uuid": "", "self": ""}, "params_occur": {"job_name": [["expected_job_name", "job_name", "uuid", "replace"], ["self", "builder", "set_job_name", "job_name"], ["len", "self", "builder", "job", "len", "job_name"]], "mock_uuid": [["mock_uuid", "return_value", "uuid"]], "self": [["self", "builder", "set_job_name", "job_name"], ["expected_job_name", "self", "builder", "job"], ["len", "self", "builder", "job", "len", "job_name"]]}, "params_p": {"args": [], "job_name": [["str", 0.088429829603918]], "kwargs": [], "mock_uuid": [["mock.MagicMock", 0.09133846761338246]], "self": []}, "q_name": "TestDataProcJobBuilder.test_set_job_name", "ret_exprs": [], "ret_type": "", "variables": {"expected_job_name": "", "return_value": "", "uuid": ""}, "variables_p": {"expected_job_name": [["str", 0.7694004744197055], ["Optional[str]", 0.1279291629309281], ["Union[Literal, str]", 0.10267036264936649]], "return_value": [["str", 0.1964043721498951], ["List[Dict[str, Any]]", 0.15102758637218866], ["int", 0.14237701866213398], ["Optional[bytes]", 0.08986535184550282], ["list", 0.08826909607970418]], "uuid": [["str", 0.48385323460870755], ["List[str]", 0.18732236574883632]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1066, 4], [1067, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_build", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "builder", "job", "self", "builder", "build"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataProcJobBuilder.test_build", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDataProcJobBuilder", "q_name": "TestDataProcJobBuilder", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 0], [65, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_init", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 0], [69, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_awaitable", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": []}, "q_name": "mock_awaitable", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "ANY", "AsyncMock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "google", "cloud", "dataproc_v1", "Batch", "BatchControllerAsyncClient", "ClusterControllerAsyncClient", "JobControllerAsyncClient", "JobStatus", "WorkflowTemplateServiceAsyncClient", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "dataproc", "DataprocAsyncHook", "DataprocHook", "DataProcJobBuilder", "airflow", "providers", "google", "common", "consts", "CLIENT_INFO", "airflow", "version", "version"], "mod_var_ln": {"AIRFLOW_VERSION": [[39, 0], [39, 15]], "BASE_STRING": [[60, 0], [60, 11]], "BATCH": [[55, 0], [55, 5]], "BATCH_ID": [[56, 0], [56, 8]], "BATCH_NAME": [[57, 0], [57, 10]], "CLUSTER": [[49, 0], [49, 7]], "CLUSTER_CONFIG": [[46, 0], [46, 14]], "CLUSTER_NAME": [[48, 0], [48, 12]], "DATAPROC_STRING": [[61, 0], [61, 15]], "GCP_LOCATION": [[44, 0], [44, 12]], "GCP_PROJECT": [[45, 0], [45, 11]], "JOB": [[41, 0], [41, 3]], "JOB_ID": [[42, 0], [42, 6]], "LABELS": [[47, 0], [47, 6]], "PARENT": [[58, 0], [58, 6]], "TASK_ID": [[43, 0], [43, 7]]}, "mod_var_occur": {"AIRFLOW_VERSION": [["expected_job", "AIRFLOW_VERSION", "CLUSTER_NAME", "expected_job_id", "GCP_PROJECT", "properties"]], "BASE_STRING": [["mock", "patch", "BASE_STRING", "format", "new", "mock_init"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_init"]], "BATCH": [["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "BATCH_ID": [["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["result", "google", "cloud", "dataproc_v1", "Batch", "self", "hook", "wait_for_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_check_interval", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_batch", "assert_called_once_with", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "BATCH_NAME": [["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "CLUSTER": [["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"]], "CLUSTER_CONFIG": [["CLUSTER", "CLUSTER_NAME", "CLUSTER_CONFIG", "LABELS", "GCP_PROJECT"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"]], "CLUSTER_NAME": [["CLUSTER", "CLUSTER_NAME", "CLUSTER_CONFIG", "LABELS", "GCP_PROJECT"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"], ["self", "builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "TASK_ID", "cluster_name", "CLUSTER_NAME", "job_type", "self", "job_type", "properties"], ["expected_job", "AIRFLOW_VERSION", "CLUSTER_NAME", "expected_job_id", "GCP_PROJECT", "properties"], ["builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "job_name", "cluster_name", "CLUSTER_NAME", "job_type", "properties", "properties"]], "DATAPROC_STRING": [], "GCP_LOCATION": [["self", "hook", "get_cluster_client", "region", "GCP_LOCATION"], ["self", "hook", "get_job_client", "region", "GCP_LOCATION"], ["self", "hook", "get_batch_client", "region", "GCP_LOCATION"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["self", "hook", "wait_for_job", "job_id", "JOB_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_time"], ["calls", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["result", "google", "cloud", "dataproc_v1", "Batch", "self", "hook", "wait_for_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_check_interval", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_batch", "assert_called_once_with", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_batches", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_cluster_client", "region", "GCP_LOCATION"], ["self", "hook", "get_job_client", "region", "GCP_LOCATION"], ["self", "hook", "get_batch_client", "region", "GCP_LOCATION"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"], ["hook", "get_operation", "region", "GCP_LOCATION", "operation_name"], ["mock_client", "assert_called_with", "region", "GCP_LOCATION", "operation_name"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "region", "GCP_LOCATION"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_batches", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION"], ["mock_client", "assert_called_once_with", "GCP_LOCATION"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "GCP_PROJECT": [["CLUSTER", "CLUSTER_NAME", "CLUSTER_CONFIG", "LABELS", "GCP_PROJECT"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"], ["self", "hook", "instantiate_workflow_template", "template_name", "project_id", "GCP_PROJECT"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["self", "hook", "instantiate_inline_workflow_template", "template", "project_id", "GCP_PROJECT"], ["self", "hook", "wait_for_job", "job_id", "JOB_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_time"], ["calls", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["self", "hook", "wait_for_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "wait_time"], ["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "submit_job", "job", "JOB", "project_id", "GCP_PROJECT"], ["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["result", "google", "cloud", "dataproc_v1", "Batch", "self", "hook", "wait_for_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_check_interval", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_batch", "assert_called_once_with", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_batches", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["mock_client", "return_value", "create_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "delete_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_uuid", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "diagnose_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "diagnose_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME"], ["mock_client", "return_value", "get_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_clusters", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter_", "filter_"], ["mock_client", "return_value", "list_clusters", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "filter", "filter_", "page_size", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask"], ["mock_client", "return_value", "update_cluster", "assert_called_once_with", "request", "dict", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask", "update_mask", "graceful_decommission_timeout", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_cluster", "project_id", "GCP_PROJECT", "cluster", "CLUSTER", "cluster_name", "CLUSTER_NAME", "update_mask"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "create_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["name", "GCP_PROJECT", "GCP_LOCATION", "template_name"], ["self", "hook", "instantiate_workflow_template", "region", "GCP_LOCATION", "template_name", "template_name", "project_id", "GCP_PROJECT"], ["self", "hook", "instantiate_workflow_template", "template_name", "project_id", "GCP_PROJECT"], ["parent", "GCP_PROJECT", "GCP_LOCATION"], ["self", "hook", "instantiate_inline_workflow_template", "region", "GCP_LOCATION", "template", "template", "project_id", "GCP_PROJECT"], ["self", "hook", "instantiate_inline_workflow_template", "template", "project_id", "GCP_PROJECT"], ["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "submit_job", "job", "JOB", "project_id", "GCP_PROJECT"], ["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "create_batch", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "delete_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_batch", "batch_id", "BATCH_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_batch", "assert_called_once_with", "request", "dict", "name", "BATCH_NAME", "format", "GCP_PROJECT", "GCP_LOCATION", "BATCH_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_batches", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "TASK_ID", "cluster_name", "CLUSTER_NAME", "job_type", "self", "job_type", "properties"], ["expected_job", "AIRFLOW_VERSION", "CLUSTER_NAME", "expected_job_id", "GCP_PROJECT", "properties"], ["builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "job_name", "cluster_name", "CLUSTER_NAME", "job_type", "properties", "properties"]], "JOB": [["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "submit_job", "job", "JOB", "project_id", "GCP_PROJECT"], ["self", "hook", "submit_job", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "submit_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job", "JOB", "project_id", "GCP_PROJECT", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "submit_job", "job", "JOB", "project_id", "GCP_PROJECT"]], "JOB_ID": [["self", "hook", "wait_for_job", "job_id", "JOB_ID", "region", "GCP_LOCATION", "project_id", "GCP_PROJECT", "wait_time"], ["calls", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "mock", "call", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["self", "hook", "wait_for_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "wait_time"], ["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "get_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_job", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["self", "hook", "cancel_job", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT"], ["mock_client", "return_value", "cancel_job", "assert_called_once_with", "request", "dict", "region", "GCP_LOCATION", "job_id", "JOB_ID", "project_id", "GCP_PROJECT", "retry", "DEFAULT", "timeout", "None", "metadata"]], "LABELS": [["CLUSTER", "CLUSTER_NAME", "CLUSTER_CONFIG", "LABELS", "GCP_PROJECT"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"], ["self", "hook", "create_cluster", "project_id", "GCP_PROJECT", "region", "GCP_LOCATION", "cluster_name", "CLUSTER_NAME", "cluster_config", "CLUSTER_CONFIG", "labels", "LABELS"]], "PARENT": [["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "create_batch", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "batch", "BATCH", "batch_id", "BATCH_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "list_batches", "assert_called_once_with", "request", "dict", "parent", "PARENT", "format", "GCP_PROJECT", "GCP_LOCATION", "page_size", "None", "page_token", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TASK_ID": [["self", "builder", "DataProcJobBuilder", "project_id", "GCP_PROJECT", "task_id", "TASK_ID", "cluster_name", "CLUSTER_NAME", "job_type", "self", "job_type", "properties"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 267}, "session_id": "GHVkoXZC_lEaj3R_v5xQNnJKxOhGqQnPme9zH1lFVxw", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {"AIRFLOW_VERSION": "", "BASE_STRING": "", "BATCH": "", "BATCH_ID": "", "BATCH_NAME": "", "CLUSTER": "", "CLUSTER_CONFIG": "", "CLUSTER_NAME": "", "DATAPROC_STRING": "", "GCP_LOCATION": "", "GCP_PROJECT": "", "JOB": "", "JOB_ID": "", "LABELS": "", "PARENT": "", "TASK_ID": ""}, "variables_p": {"AIRFLOW_VERSION": [["str", 0.6881046589177929], ["Union[bytes, str]", 0.20947178647309808], ["Dict[str, str]", 0.10242355460910887]], "BASE_STRING": [["str", 0.26919247534338325], ["List[str]", 0.2214038422212568], ["Dict[str, Union[bool, str]]", 0.14349936393942136], ["Dict[bytes, Any]", 0.09534058192544385], ["Type[ValueError]", 0.09143023680988728]], "BATCH": [["str", 0.397598741762094]], "BATCH_ID": [["int", 0.7131336614435895], ["str", 0.28686633855641047]], "BATCH_NAME": [["str", 0.9173089638416289], ["List[str]", 0.08269103615837108]], "CLUSTER": [["str", 0.2915541153726715], ["Dict[str, str]", 0.1669222432846643], ["Dict[str, Dict[str, Any]]", 0.1270499106742626], ["Dict[str, Union[int, str]]", 0.12278552555383411], ["Dict[str, Union[Any, Any]]", 0.11875368458007023], ["List[str]", 0.08552857312966668]], "CLUSTER_CONFIG": [["Dict[str, Union[Any, Any, Any, Any]]", 0.3555214451583745], ["Dict[Any, Union[int, str]]", 0.27183198154241817], ["Dict[str, Any]", 0.20004312904576732], ["Dict[str, Union[int, str]]", 0.08633987498056667]], "CLUSTER_NAME": [["str", 0.9170658593186504], ["Optional[str]", 0.08293414068134973]], "DATAPROC_STRING": [["str", 0.7], ["int", 0.2]], "GCP_LOCATION": [["str", 0.500964921931515], ["Optional[str]", 0.19101032352040945], ["dict", 0.12430007360601548], ["bool", 0.09146608859577887]], "GCP_PROJECT": [["dict", 0.20539284595001028], ["str", 0.1965782758290438], ["ChainMap", 0.1193132832350503], ["Dict[str, Dict[str, str]]", 0.10052193953240461], ["Dict[str, List[Any]]", 0.10052193953240461], ["Dict[str, str]", 0.09696734998545609], ["Dict[Any, str]", 0.09282179282481601], ["Dict[str, Any]", 0.08788257311081414]], "JOB": [["int", 0.18359679659090394], ["str", 0.11568283615780177]], "JOB_ID": [["str", 0.5106172692780857], ["Optional[str]", 0.20680554186643274], ["int", 0.09283786865691647]], "LABELS": [["str", 0.41025086361655555], ["Dict[int, Any]", 0.3078624022759534], ["OrderedDict[str, Any]", 0.10022653615507318], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09108457466714878], ["dict", 0.09057562328526918]], "PARENT": [["str", 0.9035346893760551], ["Optional[str]", 0.09646531062394514]], "TASK_ID": [["str", 0.5517443630513305], ["Set[int]", 0.2591243458934562], ["list", 0.10831271058011238], ["int", 0.08081858047510102]]}}}