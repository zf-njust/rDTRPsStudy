{"error": null, "response": {"classes": [{"cls_lc": [[54, 0], [253, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [57, 81]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAutoMLHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [65, 80]], "fn_var_ln": {"hook": [[64, 12], [64, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudAutoMLHook"], ["self", "hook", "get_credentials", "mock", "MagicMock", "return_value", "CREDENTIALS"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudAutoMLHook"], ["self", "hook", "get_credentials", "mock", "MagicMock", "return_value", "CREDENTIALS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAutoMLHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[str]", 0.08670076042851194]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [70, 100]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_conn", "params": {"mock_automl_client": "", "self": ""}, "params_descr": {"mock_automl_client": "", "self": ""}, "params_occur": {"mock_automl_client": [["mock_automl_client", "assert_called_once_with", "credentials", "CREDENTIALS", "client_info", "CLIENT_INFO"]], "self": [["self", "hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_automl_client": [], "self": []}, "q_name": "TestAutoMLHook.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [75, 104]], "fn_var_ln": {"client": [[74, 8], [74, 14]]}, "fn_var_occur": {"client": [["client", "self", "hook", "prediction_client"]]}, "name": "test_prediction_client", "params": {"mock_prediction_client": "", "self": ""}, "params_descr": {"mock_prediction_client": "", "self": ""}, "params_occur": {"mock_prediction_client": [["mock_prediction_client", "assert_called_once_with", "credentials", "CREDENTIALS", "client_info", "CLIENT_INFO"]], "self": [["client", "self", "hook", "prediction_client"]]}, "params_p": {"args": [], "kwargs": [], "mock_prediction_client": [], "self": []}, "q_name": "TestAutoMLHook.test_prediction_client", "ret_exprs": [], "ret_type": "", "variables": {"client": ""}, "variables_p": {"client": [["int", 0.7628066739747398], ["Final", 0.14835290329111792], ["List[int]", 0.08884042273414232]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [83, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_model", "params": {"mock_create_model": "", "self": ""}, "params_descr": {"mock_create_model": "", "self": ""}, "params_occur": {"mock_create_model": [["mock_create_model", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "model", "MODEL", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "create_model", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_create_model": [], "self": []}, "q_name": "TestAutoMLHook.test_create_model", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [102, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_batch_predict", "params": {"mock_batch_predict": "", "self": ""}, "params_descr": {"mock_batch_predict": "", "self": ""}, "params_occur": {"mock_batch_predict": [["mock_batch_predict", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "params", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "batch_predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG"]]}, "params_p": {"args": [], "kwargs": [], "mock_batch_predict": [["mock.MagicMock", 0.08310669466699731]], "self": []}, "q_name": "TestAutoMLHook.test_batch_predict", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [118, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_predict", "params": {"mock_predict": "", "self": ""}, "params_descr": {"mock_predict": "", "self": ""}, "params_occur": {"mock_predict": [["mock_predict", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "payload", "PAYLOAD", "params", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD"]]}, "params_p": {"args": [], "kwargs": [], "mock_predict": [], "self": []}, "q_name": "TestAutoMLHook.test_predict", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[121, 4], [129, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_dataset", "params": {"mock_create_dataset": "", "self": ""}, "params_descr": {"mock_create_dataset": "", "self": ""}, "params_occur": {"mock_create_dataset": [["mock_create_dataset", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "dataset", "DATASET", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "create_dataset", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_create_dataset": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.24958125141250692]], "self": []}, "q_name": "TestAutoMLHook.test_create_dataset", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[132, 4], [145, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_import_dataset", "params": {"mock_import_data": "", "self": ""}, "params_descr": {"mock_import_data": "", "self": ""}, "params_occur": {"mock_import_data": [["mock_import_data", "assert_called_once_with", "request", "dict", "name", "DATASET_PATH", "input_config", "INPUT_CONFIG", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "import_data", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG"]]}, "params_p": {"args": [], "kwargs": [], "mock_import_data": [], "self": []}, "q_name": "TestAutoMLHook.test_import_dataset", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [169, 9]], "fn_var_ln": {"filter_": [[150, 8], [150, 15]], "page_size": [[151, 8], [151, 17]], "parent": [[163, 8], [163, 14]], "table_spec": [[149, 8], [149, 18]]}, "fn_var_occur": {"filter_": [["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"], ["mock_list_column_specs", "assert_called_once_with", "request", "dict", "parent", "parent", "field_mask", "MASK", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"]], "page_size": [["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"], ["mock_list_column_specs", "assert_called_once_with", "request", "dict", "parent", "parent", "field_mask", "MASK", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"]], "parent": [["parent", "AutoMlClient", "table_spec_path", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID", "table_spec"], ["mock_list_column_specs", "assert_called_once_with", "request", "dict", "parent", "parent", "field_mask", "MASK", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"]], "table_spec": [["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"], ["parent", "AutoMlClient", "table_spec_path", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID", "table_spec"]]}, "name": "test_list_column_specs", "params": {"mock_list_column_specs": "", "self": ""}, "params_descr": {"mock_list_column_specs": "", "self": ""}, "params_occur": {"mock_list_column_specs": [["mock_list_column_specs", "assert_called_once_with", "request", "dict", "parent", "parent", "field_mask", "MASK", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"]]}, "params_p": {"args": [], "kwargs": [], "mock_list_column_specs": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.1980457969779906]], "self": []}, "q_name": "TestAutoMLHook.test_list_column_specs", "ret_exprs": [], "ret_type": "", "variables": {"filter_": "", "page_size": "", "parent": "", "table_spec": ""}, "variables_p": {"filter_": [["str", 1.0]], "page_size": [["str", 0.7733096719383165], ["raiden.utils.timeouBlockTimeout", 0.12578898533751776], ["int", 0.10090134272416565]], "parent": [["str", 0.5609051887878641], ["Optional[str]", 0.2385944918707205]], "table_spec": [["str", 0.9999999999999997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[172, 4], [177, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_model", "params": {"mock_get_model": "", "self": ""}, "params_descr": {"mock_get_model": "", "self": ""}, "params_occur": {"mock_get_model": [["mock_get_model", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "get_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_model": [], "self": []}, "q_name": "TestAutoMLHook.test_get_model", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[180, 4], [185, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_model", "params": {"mock_delete_model": "", "self": ""}, "params_descr": {"mock_delete_model": "", "self": ""}, "params_occur": {"mock_delete_model": [["mock_delete_model", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "delete_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_delete_model": [], "self": []}, "q_name": "TestAutoMLHook.test_delete_model", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 4], [196, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_dataset", "params": {"mock_update_dataset": "", "self": ""}, "params_descr": {"mock_update_dataset": "", "self": ""}, "params_occur": {"mock_update_dataset": [["mock_update_dataset", "assert_called_once_with", "request", "dict", "dataset", "DATASET", "update_mask", "MASK", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "update_dataset", "dataset", "DATASET", "update_mask", "MASK"]]}, "params_p": {"args": [], "kwargs": [], "mock_update_dataset": [], "self": []}, "q_name": "TestAutoMLHook.test_update_dataset", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[199, 4], [217, 9]], "fn_var_ln": {"image_detection_metadata": [[200, 8], [200, 32]]}, "fn_var_occur": {"image_detection_metadata": [["self", "hook", "deploy_model", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["mock_deploy_model", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "image_object_detection_model_deployment_metadata", "image_detection_metadata", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_deploy_model", "params": {"mock_deploy_model": "", "self": ""}, "params_descr": {"mock_deploy_model": "", "self": ""}, "params_occur": {"mock_deploy_model": [["mock_deploy_model", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "image_object_detection_model_deployment_metadata", "image_detection_metadata", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "deploy_model", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_deploy_model": [], "self": []}, "q_name": "TestAutoMLHook.test_deploy_model", "ret_exprs": [], "ret_type": "", "variables": {"image_detection_metadata": ""}, "variables_p": {"image_detection_metadata": [["str", 0.6476684236389744], ["int", 0.08932547481151677], ["list", 0.08643492980417238]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[220, 4], [237, 9]], "fn_var_ln": {"filter_": [[221, 8], [221, 15]], "page_size": [[222, 8], [222, 17]]}, "fn_var_occur": {"filter_": [["self", "hook", "list_table_specs", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size"], ["mock_list_table_specs", "assert_called_once_with", "request", "dict", "parent", "DATASET_PATH", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"]], "page_size": [["self", "hook", "list_table_specs", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size"], ["mock_list_table_specs", "assert_called_once_with", "request", "dict", "parent", "DATASET_PATH", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_list_table_specs", "params": {"mock_list_table_specs": "", "self": ""}, "params_descr": {"mock_list_table_specs": "", "self": ""}, "params_occur": {"mock_list_table_specs": [["mock_list_table_specs", "assert_called_once_with", "request", "dict", "parent", "DATASET_PATH", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "list_table_specs", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size"]]}, "params_p": {"args": [], "kwargs": [], "mock_list_table_specs": [["mock.Mock", 0.17632704873457783]], "self": []}, "q_name": "TestAutoMLHook.test_list_table_specs", "ret_exprs": [], "ret_type": "", "variables": {"filter_": "", "page_size": ""}, "variables_p": {"filter_": [["str", 0.4020629902255774], ["Dict[str, str]", 0.11725999390951607], ["int", 0.10467089902867806], ["dict", 0.09397193437099267]], "page_size": [["int", 0.7002177300935877], ["List[int]", 0.20002411369251663], ["str", 0.09975815621389574]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [245, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_datasets", "params": {"mock_list_datasets": "", "self": ""}, "params_descr": {"mock_list_datasets": "", "self": ""}, "params_occur": {"mock_list_datasets": [["mock_list_datasets", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "list_datasets", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_list_datasets": [["str", 0.10920504740251534], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.10087382619734439]], "self": []}, "q_name": "TestAutoMLHook.test_list_datasets", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[248, 4], [253, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_dataset", "params": {"mock_delete_dataset": "", "self": ""}, "params_descr": {"mock_delete_dataset": "", "self": ""}, "params_occur": {"mock_delete_dataset": [["mock_delete_dataset", "assert_called_once_with", "request", "dict", "name", "DATASET_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "delete_dataset", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_delete_dataset": [], "self": []}, "q_name": "TestAutoMLHook.test_delete_dataset", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestAutoMLHook", "q_name": "TestAutoMLHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "google", "cloud", "automl_v1beta1", "AutoMlClient", "airflow", "providers", "google", "cloud", "hooks", "automl", "CloudAutoMLHook", "airflow", "providers", "google", "common", "consts", "CLIENT_INFO", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"CREDENTIALS": [[30, 0], [30, 11]], "DATASET": [[50, 0], [50, 7]], "DATASET_ID": [[36, 0], [36, 10]], "DATASET_PATH": [[45, 0], [45, 12]], "GCP_LOCATION": [[33, 0], [33, 12]], "GCP_PROJECT_ID": [[32, 0], [32, 14]], "INPUT_CONFIG": [[47, 0], [47, 12]], "LOCATION_PATH": [[43, 0], [43, 13]], "MASK": [[51, 0], [51, 4]], "MODEL": [[37, 0], [37, 5]], "MODEL_ID": [[35, 0], [35, 8]], "MODEL_NAME": [[34, 0], [34, 10]], "MODEL_PATH": [[44, 0], [44, 10]], "OUTPUT_CONFIG": [[48, 0], [48, 13]], "PAYLOAD": [[49, 0], [49, 7]], "TASK_ID": [[31, 0], [31, 7]]}, "mod_var_occur": {"CREDENTIALS": [["self", "hook", "get_credentials", "mock", "MagicMock", "return_value", "CREDENTIALS"], ["mock_automl_client", "assert_called_once_with", "credentials", "CREDENTIALS", "client_info", "CLIENT_INFO"], ["mock_prediction_client", "assert_called_once_with", "credentials", "CREDENTIALS", "client_info", "CLIENT_INFO"]], "DATASET": [["self", "hook", "create_dataset", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["mock_create_dataset", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "dataset", "DATASET", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "update_dataset", "dataset", "DATASET", "update_mask", "MASK"], ["mock_update_dataset", "assert_called_once_with", "request", "dict", "dataset", "DATASET", "update_mask", "MASK", "retry", "DEFAULT", "timeout", "None", "metadata"]], "DATASET_ID": [["MODEL", "MODEL_NAME", "DATASET_ID"], ["DATASET_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID"], ["self", "hook", "import_data", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG"], ["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"], ["parent", "AutoMlClient", "table_spec_path", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID", "table_spec"], ["self", "hook", "list_table_specs", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size"], ["self", "hook", "delete_dataset", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]], "DATASET_PATH": [["mock_import_data", "assert_called_once_with", "request", "dict", "name", "DATASET_PATH", "input_config", "INPUT_CONFIG", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_list_table_specs", "assert_called_once_with", "request", "dict", "parent", "DATASET_PATH", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_delete_dataset", "assert_called_once_with", "request", "dict", "name", "DATASET_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"]], "GCP_LOCATION": [["LOCATION_PATH", "GCP_PROJECT_ID", "GCP_LOCATION"], ["MODEL_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "MODEL_ID"], ["DATASET_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID"], ["self", "hook", "create_model", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "batch_predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG"], ["self", "hook", "predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD"], ["self", "hook", "create_dataset", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "import_data", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG"], ["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"], ["parent", "AutoMlClient", "table_spec_path", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID", "table_spec"], ["self", "hook", "get_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "delete_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "deploy_model", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "list_table_specs", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size"], ["self", "hook", "list_datasets", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "delete_dataset", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]], "GCP_PROJECT_ID": [["LOCATION_PATH", "GCP_PROJECT_ID", "GCP_LOCATION"], ["MODEL_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "MODEL_ID"], ["DATASET_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID"], ["self", "hook", "create_model", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "batch_predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG"], ["self", "hook", "predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD"], ["self", "hook", "create_dataset", "dataset", "DATASET", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "import_data", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG"], ["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"], ["parent", "AutoMlClient", "table_spec_path", "GCP_PROJECT_ID", "GCP_LOCATION", "DATASET_ID", "table_spec"], ["self", "hook", "get_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "delete_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "deploy_model", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "list_table_specs", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "filter_", "filter_", "page_size", "page_size"], ["self", "hook", "list_datasets", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "delete_dataset", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]], "INPUT_CONFIG": [["self", "hook", "batch_predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG"], ["mock_batch_predict", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "params", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "import_data", "dataset_id", "DATASET_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG"], ["mock_import_data", "assert_called_once_with", "request", "dict", "name", "DATASET_PATH", "input_config", "INPUT_CONFIG", "retry", "DEFAULT", "timeout", "None", "metadata"]], "LOCATION_PATH": [["mock_create_model", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "model", "MODEL", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_create_dataset", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "dataset", "DATASET", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_list_datasets", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"]], "MASK": [["self", "hook", "list_column_specs", "dataset_id", "DATASET_ID", "table_spec_id", "table_spec", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "field_mask", "MASK", "filter_", "filter_", "page_size", "page_size"], ["mock_list_column_specs", "assert_called_once_with", "request", "dict", "parent", "parent", "field_mask", "MASK", "filter", "filter_", "page_size", "page_size", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "update_dataset", "dataset", "DATASET", "update_mask", "MASK"], ["mock_update_dataset", "assert_called_once_with", "request", "dict", "dataset", "DATASET", "update_mask", "MASK", "retry", "DEFAULT", "timeout", "None", "metadata"]], "MODEL": [["self", "hook", "create_model", "model", "MODEL", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["mock_create_model", "assert_called_once_with", "request", "dict", "parent", "LOCATION_PATH", "model", "MODEL", "retry", "DEFAULT", "timeout", "None", "metadata"]], "MODEL_ID": [["MODEL_PATH", "GCP_PROJECT_ID", "GCP_LOCATION", "MODEL_ID"], ["self", "hook", "batch_predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG"], ["self", "hook", "predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD"], ["self", "hook", "get_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "delete_model", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"], ["self", "hook", "deploy_model", "model_id", "MODEL_ID", "image_detection_metadata", "image_detection_metadata", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID"]], "MODEL_NAME": [["MODEL", "MODEL_NAME", "DATASET_ID"]], "MODEL_PATH": [["mock_batch_predict", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "params", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_predict", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "payload", "PAYLOAD", "params", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_get_model", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_delete_model", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_deploy_model", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "image_object_detection_model_deployment_metadata", "image_detection_metadata", "retry", "DEFAULT", "timeout", "None", "metadata"]], "OUTPUT_CONFIG": [["self", "hook", "batch_predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG"], ["mock_batch_predict", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "input_config", "INPUT_CONFIG", "output_config", "OUTPUT_CONFIG", "params", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "PAYLOAD": [["self", "hook", "predict", "model_id", "MODEL_ID", "location", "GCP_LOCATION", "project_id", "GCP_PROJECT_ID", "payload", "PAYLOAD"], ["mock_predict", "assert_called_once_with", "request", "dict", "name", "MODEL_PATH", "payload", "PAYLOAD", "params", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "TASK_ID": []}, "no_types_annot": {"D": 0, "I": 0, "U": 57}, "session_id": "FFUpZBzQ-TIBwmUbuHPWETL7ZjiHpEaONehKrXj-P0o", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CREDENTIALS": "", "DATASET": "", "DATASET_ID": "", "DATASET_PATH": "", "GCP_LOCATION": "", "GCP_PROJECT_ID": "", "INPUT_CONFIG": "", "LOCATION_PATH": "", "MASK": "", "MODEL": "", "MODEL_ID": "", "MODEL_NAME": "", "MODEL_PATH": "", "OUTPUT_CONFIG": "", "PAYLOAD": "", "TASK_ID": ""}, "variables_p": {"CREDENTIALS": [["mock.MagicMock", 0.5190781293045568], ["mock.Mock", 0.09453170623820231]], "DATASET": [["str", 0.409328003803972], ["Tuple[Tuple[str, str], Tuple[str, str], Tuple[str, str], Tuple[str, str]]", 0.11271037699048508], ["list", 0.09397127408472611]], "DATASET_ID": [["str", 0.6511026496485559], ["Set[int]", 0.18041313990053], ["int", 0.168484210450914]], "DATASET_PATH": [["str", 0.919169941430413], ["BinaryIO", 0.08083005856958672]], "GCP_LOCATION": [["List[str]", 0.18231726288096034], ["int", 0.13123897026081513], ["list", 0.11262917535333405], ["Dict[str, str]", 0.10260867439784917], ["bool", 0.09917308086574486]], "GCP_PROJECT_ID": [["Optional[str]", 0.41695261084707247], ["str", 0.29504904692525546], ["bytes", 0.10107963949683649], ["Optional[List[str]]", 0.09496298481781791], ["int", 0.09195571791301758]], "INPUT_CONFIG": [["str", 0.19615826751715632], ["Dict[str, str]", 0.09483711397016548], ["List[str]", 0.08744814056445813], ["Dict[str, Any]", 0.08706922949367465]], "LOCATION_PATH": [["str", 0.8937415371874051], ["List[str]", 0.10625846281259492]], "MASK": [["str", 1.0]], "MODEL": [["str", 0.09709126413722659]], "MODEL_ID": [["str", 0.7214877811242548], ["Optional[str]", 0.18459322884421375]], "MODEL_NAME": [["str", 0.9999999999999997]], "MODEL_PATH": [["str", 0.7101618854006192], ["Dict[str, Dict[str, Any]]", 0.10284794844625234], ["Tuple[str, str, str]", 0.09654416894619332]], "OUTPUT_CONFIG": [["str", 0.3017482893370795], ["Dict[str, str]", 0.28318747281373297], ["dict", 0.0883738021446923]], "PAYLOAD": [["str", 0.8511979092480948], ["List[dict]", 0.1488020907519053]], "TASK_ID": [["str", 0.4], ["Type[str]", 0.1], ["Optional[str]", 0.1]]}}}