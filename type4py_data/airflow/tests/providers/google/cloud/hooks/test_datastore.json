{"error": null, "response": {"classes": [{"cls_lc": [[39, 0], [407, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [42, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatastoreHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [48, 49]], "fn_var_ln": {"datastore_hook": [[48, 12], [48, 31]]}, "fn_var_occur": {"datastore_hook": [["self", "datastore_hook", "DatastoreHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "datastore_hook", "DatastoreHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatastoreHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"datastore_hook": ""}, "variables_p": {"datastore_hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [59, 53]], "fn_var_ln": {"conn": [[53, 8], [53, 12]]}, "fn_var_occur": {"conn": [["conn", "self", "datastore_hook", "get_conn"], ["conn", "mock_build", "return_value"], ["conn", "self", "datastore_hook", "connection"]]}, "name": "test_get_conn", "params": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_descr": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_occur": {"mock_authorize": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"]], "mock_build": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"], ["conn", "mock_build", "return_value"]], "self": [["conn", "self", "datastore_hook", "get_conn"], ["conn", "self", "datastore_hook", "connection"]]}, "params_p": {"args": [], "kwargs": [], "mock_authorize": [], "mock_build": [], "self": []}, "q_name": "TestDatastoreHook.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["list", 0.39326826495415007]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [74, 51]], "fn_var_ln": {"allocate_ids": [[70, 8], [70, 20]], "execute": [[72, 8], [72, 15]], "keys": [[66, 8], [66, 12]], "partial_keys": [[64, 8], [64, 20]], "projects": [[68, 8], [68, 16]]}, "fn_var_occur": {"allocate_ids": [["keys", "self", "datastore_hook", "allocate_ids", "partial_keys", "partial_keys", "project_id", "GCP_PROJECT_ID"], ["allocate_ids", "projects", "return_value", "allocateIds"], ["allocate_ids", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "partial_keys"], ["execute", "allocate_ids", "return_value", "execute"]], "execute": [["execute", "allocate_ids", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["keys", "execute", "return_value"]], "keys": [["keys", "self", "datastore_hook", "allocate_ids", "partial_keys", "partial_keys", "project_id", "GCP_PROJECT_ID"], ["keys", "execute", "return_value"]], "partial_keys": [["keys", "self", "datastore_hook", "allocate_ids", "partial_keys", "partial_keys", "project_id", "GCP_PROJECT_ID"], ["allocate_ids", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "partial_keys"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["allocate_ids", "projects", "return_value", "allocateIds"]]}, "name": "test_allocate_ids", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["keys", "self", "datastore_hook", "allocate_ids", "partial_keys", "partial_keys", "project_id", "GCP_PROJECT_ID"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.08773012952931906]], "self": []}, "q_name": "TestDatastoreHook.test_allocate_ids", "ret_exprs": [], "ret_type": "", "variables": {"allocate_ids": "", "execute": "", "keys": "", "partial_keys": "", "projects": ""}, "variables_p": {"allocate_ids": [["str", 0.3773940874404908], ["int", 0.10606244861366564], ["List[str]", 0.08630698878384409], ["list", 0.08232134525693015]], "execute": [["str", 0.750839035936352], ["Dict[str, Union[Any, Any, Any]]", 0.0897535318029524], ["Dict[str, Union[Any, Any]]", 0.080097540119228]], "keys": [["str", 0.7051821450793027], ["int", 0.10157481083957347], ["Dict[int, List[str]]", 0.09219990973831622]], "partial_keys": [["str", 0.9135947902118102], ["int", 0.08640520978818987]], "projects": [["list", 0.17890559745351012], ["Dict[str, Any]", 0.11167750767799207], ["List[Dict[str, Any]]", 0.10511405617522762], ["str", 0.09983630915159566], ["Dict[str, List[str]]", 0.09892129503359882]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [88, 45]], "fn_var_ln": {"partial_keys": [[84, 8], [84, 20]]}, "fn_var_occur": {"partial_keys": [["self", "datastore_hook", "allocate_ids", "partial_keys", "partial_keys"]]}, "name": "test_allocate_ids_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "allocate_ids", "partial_keys", "partial_keys"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.2913908930323393]], "self": []}, "q_name": "TestDatastoreHook.test_allocate_ids_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {"partial_keys": ""}, "variables_p": {"partial_keys": [["str", 0.6012916939355427], ["int", 0.09678145885829618], ["Type[int]", 0.09349551839692125]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [105, 65]], "fn_var_ln": {"begin_transaction": [[101, 8], [101, 25]], "execute": [[103, 8], [103, 15]], "projects": [[99, 8], [99, 16]], "transaction": [[94, 8], [94, 19]]}, "fn_var_occur": {"begin_transaction": [["transaction", "self", "datastore_hook", "begin_transaction", "project_id", "GCP_PROJECT_ID", "transaction_options"], ["begin_transaction", "projects", "return_value", "beginTransaction"], ["begin_transaction", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body"], ["execute", "begin_transaction", "return_value", "execute"]], "execute": [["execute", "begin_transaction", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["transaction", "execute", "return_value"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["begin_transaction", "projects", "return_value", "beginTransaction"]], "transaction": [["transaction", "self", "datastore_hook", "begin_transaction", "project_id", "GCP_PROJECT_ID", "transaction_options"], ["transaction", "execute", "return_value"]]}, "name": "test_begin_transaction", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["transaction", "self", "datastore_hook", "begin_transaction", "project_id", "GCP_PROJECT_ID", "transaction_options"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.42709937777253465]], "self": []}, "q_name": "TestDatastoreHook.test_begin_transaction", "ret_exprs": [], "ret_type": "", "variables": {"begin_transaction": "", "execute": "", "projects": "", "transaction": ""}, "variables_p": {"begin_transaction": [["Dict[str, dict]", 0.18117823994798082], ["Dict[Any, list]", 0.13804735741448185], ["Dict[Tuple[str, str], str]", 0.1089792507621996], ["Dict[str, str]", 0.1076874032317602], ["Dict[str, Union[Any, Any]]", 0.09834073358097607], ["Dict[Type[Any], Type[Any]]", 0.09735701539606256], ["Dict[str, Any]", 0.09286740296272639], ["dict", 0.09026681166639897]], "execute": [["str", 0.40265776920549423], ["List[str]", 0.17368038466461205], ["bool", 0.1330781351431618], ["List[Dict[str, Any]]", 0.11865362784800411], ["int", 0.08447997377529555]], "projects": [["str", 0.202341618992724], ["List[Dict[str, Any]]", 0.1270961471132946]], "transaction": [["List[Tuple[int, Any]]", 0.12556244217203844], ["dict", 0.10350489779279955], ["Dict[str, Tuple[Any, Any]]", 0.09730862926798697], ["List[Dict[str, Any]]", 0.09157543013935558]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [117, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_begin_transaction_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "begin_transaction"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.29123940418673644]], "self": []}, "q_name": "TestDatastoreHook.test_begin_transaction_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [132, 43]], "fn_var_ln": {"body": [[122, 8], [122, 12]], "commit": [[128, 8], [128, 14]], "execute": [[130, 8], [130, 15]], "projects": [[126, 8], [126, 16]], "resp": [[124, 8], [124, 12]]}, "fn_var_occur": {"body": [["resp", "self", "datastore_hook", "commit", "body", "body", "project_id", "GCP_PROJECT_ID"], ["commit", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "body"]], "commit": [["resp", "self", "datastore_hook", "commit", "body", "body", "project_id", "GCP_PROJECT_ID"], ["commit", "projects", "return_value", "commit"], ["commit", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "body"], ["execute", "commit", "return_value", "execute"]], "execute": [["execute", "commit", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["resp", "execute", "return_value"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["commit", "projects", "return_value", "commit"]], "resp": [["resp", "self", "datastore_hook", "commit", "body", "body", "project_id", "GCP_PROJECT_ID"], ["resp", "execute", "return_value"]]}, "name": "test_commit", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["resp", "self", "datastore_hook", "commit", "body", "body", "project_id", "GCP_PROJECT_ID"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.11898642182213423]], "self": []}, "q_name": "TestDatastoreHook.test_commit", "ret_exprs": [], "ret_type": "", "variables": {"body": "", "commit": "", "execute": "", "projects": "", "resp": ""}, "variables_p": {"body": [["str", 0.7203721706984152], ["bytes", 0.09279629118222293], ["list", 0.09010971246630975]], "commit": [["Dict[str, Type[Any]]", 0.3964172077742949], ["str", 0.2059481555618357], ["Dict[str, Union[Any, str]]", 0.1968120806502861], ["Dict[Any, List[str]]", 0.10640667613487877], ["OrderedDict[str, Any]", 0.09441587987870467]], "execute": [["str", 0.7541693310448616], ["bool", 0.0857164623257091], ["Dict[str, Union[Any, Any, Any]]", 0.08003293105709407]], "projects": [["list", 0.2827344861534556]], "resp": [["Dict[str, str]", 0.26167844050991895], ["Dict[Any, Dict[str, Any]]", 0.11202682162904286], ["str", 0.09233237885447114], ["Dict[int, str]", 0.0883318396832091], ["Dict[Any, str]", 0.08597635011423845], ["Dict[str, Any]", 0.08407308937348067]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [146, 45]], "fn_var_ln": {"body": [[142, 8], [142, 12]]}, "fn_var_occur": {"body": [["self", "datastore_hook", "commit", "body", "body"]]}, "name": "test_commit_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "commit", "body", "body"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.1991760428332059]], "self": []}, "q_name": "TestDatastoreHook.test_commit_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {"body": ""}, "variables_p": {"body": [["Dict[str, Callable[[], Any]]", 0.38098211615286265], ["Dict[str, Dict[str, bool]]", 0.21168664717138075], ["Dict[str, Union[Any, str]]", 0.09324888374854749], ["Dict[int, str]", 0.08234007405581878], ["Dict[str, str]", 0.07334711676536487], ["Type[Dict[str, Any]]", 0.07136883204465028]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [168, 43]], "fn_var_ln": {"execute": [[166, 8], [166, 15]], "keys": [[151, 8], [151, 12]], "lookup": [[161, 8], [161, 14]], "projects": [[159, 8], [159, 16]], "read_consistency": [[152, 8], [152, 24]], "resp": [[155, 8], [155, 12]], "transaction": [[153, 8], [153, 19]]}, "fn_var_occur": {"execute": [["execute", "lookup", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["resp", "execute", "return_value"]], "keys": [["resp", "self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["lookup", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "keys", "read_consistency", "transaction"]], "lookup": [["resp", "self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["lookup", "projects", "return_value", "lookup"], ["lookup", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "keys", "read_consistency", "transaction"], ["execute", "lookup", "return_value", "execute"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["lookup", "projects", "return_value", "lookup"]], "read_consistency": [["resp", "self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["lookup", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "keys", "read_consistency", "transaction"]], "resp": [["resp", "self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["resp", "execute", "return_value"]], "transaction": [["resp", "self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["lookup", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "keys", "read_consistency", "transaction"]]}, "name": "test_lookup", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["resp", "self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.11898642182213423]], "self": []}, "q_name": "TestDatastoreHook.test_lookup", "ret_exprs": [], "ret_type": "", "variables": {"execute": "", "keys": "", "lookup": "", "projects": "", "read_consistency": "", "resp": "", "transaction": ""}, "variables_p": {"execute": [["str", 0.7541693310448616], ["bool", 0.0857164623257091], ["Dict[str, Union[Any, Any, Any]]", 0.08003293105709407]], "keys": [["List[str]", 0.10741173532865987], ["dict", 0.10690878992934773], ["Dict[str, Any]", 0.10410864897135802], ["int", 0.09776375882727889], ["Dict[str, str]", 0.0964628737793048], ["str", 0.09308181074175431]], "lookup": [["str", 0.20421780419573515], ["Union[Literal, Literal]", 0.10538133319508665], ["int", 0.09877687244790902], ["List[List[str]]", 0.09499562137641207]], "projects": [["list", 0.2827344861534556]], "read_consistency": [["int", 0.2310548306867428], ["dict", 0.1934048483806339]], "resp": [["str", 0.20148902295118892], ["frozenset[Any]", 0.11296434597465987], ["dict", 0.11039111507327967], ["Dict[str, Any]", 0.10857297351878671], ["int", 0.10570095019411416]], "transaction": [["list", 0.09144831531658255]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [188, 45]], "fn_var_ln": {"keys": [[178, 8], [178, 12]], "read_consistency": [[179, 8], [179, 24]], "transaction": [[180, 8], [180, 19]]}, "fn_var_occur": {"keys": [["self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction"]], "read_consistency": [["self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction"]], "transaction": [["self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction"]]}, "name": "test_lookup_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.1991760428332059]], "self": []}, "q_name": "TestDatastoreHook.test_lookup_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {"keys": "", "read_consistency": "", "transaction": ""}, "variables_p": {"keys": [["str", 0.1946749530174745], ["Tuple[Literal, Literal]", 0.1056909076989299], ["Dict[str, Any]", 0.10380807343978905], ["dict", 0.09909074764189983]], "read_consistency": [["dict", 0.9072538117184719]], "transaction": [["list", 0.09344239619283269]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[191, 4], [202, 61]], "fn_var_ln": {"execute": [[201, 8], [201, 15]], "projects": [[197, 8], [197, 16]], "rollback": [[199, 8], [199, 16]], "transaction": [[193, 8], [193, 19]]}, "fn_var_occur": {"execute": [["execute", "rollback", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["rollback", "projects", "return_value", "rollback"]], "rollback": [["self", "datastore_hook", "rollback", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["rollback", "projects", "return_value", "rollback"], ["rollback", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "transaction"], ["execute", "rollback", "return_value", "execute"]], "transaction": [["self", "datastore_hook", "rollback", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["rollback", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "transaction"]]}, "name": "test_rollback", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "rollback", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.11898642182213423]], "self": []}, "q_name": "TestDatastoreHook.test_rollback", "ret_exprs": [], "ret_type": "", "variables": {"execute": "", "projects": "", "rollback": "", "transaction": ""}, "variables_p": {"execute": [["int", 0.29216338163606825], ["str", 0.27578846564443804], ["property", 0.11061031656941225], ["List[Dict[str, str]]", 0.09750050684386645], ["List[Dict[str, Any]]", 0.08553141037071879]], "projects": [["list", 0.2827344861534556]], "rollback": [["str", 0.8052568863880067], ["int", 0.10085135903690973]], "transaction": [["List[Tuple[Any, str]]", 0.13361634546725631], ["List[str]", 0.09395246812291184]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[210, 4], [216, 45]], "fn_var_ln": {"transaction": [[212, 8], [212, 19]]}, "fn_var_occur": {"transaction": [["self", "datastore_hook", "rollback", "transaction", "transaction"]]}, "name": "test_rollback_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "rollback", "transaction", "transaction"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.1991760428332059]], "self": []}, "q_name": "TestDatastoreHook.test_rollback_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {"transaction": ""}, "variables_p": {"transaction": [["dict", 0.10219258980933993]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[219, 4], [231, 52]], "fn_var_ln": {"body": [[221, 8], [221, 12]], "execute": [[229, 8], [229, 15]], "projects": [[225, 8], [225, 16]], "resp": [[223, 8], [223, 12]], "run_query": [[227, 8], [227, 17]]}, "fn_var_occur": {"body": [["resp", "self", "datastore_hook", "run_query", "body", "body", "project_id", "GCP_PROJECT_ID"], ["run_query", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "body"]], "execute": [["execute", "run_query", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["resp", "execute", "return_value"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["run_query", "projects", "return_value", "runQuery"]], "resp": [["resp", "self", "datastore_hook", "run_query", "body", "body", "project_id", "GCP_PROJECT_ID"], ["resp", "execute", "return_value"]], "run_query": [["resp", "self", "datastore_hook", "run_query", "body", "body", "project_id", "GCP_PROJECT_ID"], ["run_query", "projects", "return_value", "runQuery"], ["run_query", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "body"], ["execute", "run_query", "return_value", "execute"]]}, "name": "test_run_query", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["resp", "self", "datastore_hook", "run_query", "body", "body", "project_id", "GCP_PROJECT_ID"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.12813341508870377]], "self": []}, "q_name": "TestDatastoreHook.test_run_query", "ret_exprs": [], "ret_type": "", "variables": {"body": "", "execute": "", "projects": "", "resp": "", "run_query": ""}, "variables_p": {"body": [["str", 0.4849051996558725], ["Dict[Any, List[Any]]", 0.11746139966424306], ["Dict[str, Union[dict, str]]", 0.09544435624823497], ["Dict[str, List[str]]", 0.09337636001016082], ["list", 0.08650570571455705]], "execute": [["str", 0.7186512720114736], ["Dict[str, Union[Any, Any, Any]]", 0.1066409010464163], ["List[Dict[str, str]]", 0.07152079630094334]], "projects": [["list", 0.10934407381002272], ["str", 0.10414876255989002], ["Dict[str, Any]", 0.1016979755124796], ["List[str]", 0.09995049977346832], ["List[Dict[str, Any]]", 0.08881720100320675]], "resp": [["Dict[Any, Dict[str, Any]]", 0.10461882888845621], ["Dict[str, str]", 0.10399717370665604], ["Dict[Any, str]", 0.10148822614772511], ["Dict[str, dict]", 0.0985255789480454], ["list", 0.09405019302332865], ["str", 0.09393604926188152], ["dict", 0.09130774548113857]], "run_query": [["int", 0.19112222751156407], ["Dict[str, int]", 0.11030132461664739], ["Dict[str, Tuple[Any, Any, Any, int]]", 0.1039507320673281], ["List[dict]", 0.09682016016889321], ["Dict[str, str]", 0.09646954686508068], ["list", 0.0947031052712236]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[239, 4], [245, 45]], "fn_var_ln": {"body": [[241, 8], [241, 12]]}, "fn_var_occur": {"body": [["self", "datastore_hook", "run_query", "body", "body"]]}, "name": "test_run_query_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "run_query", "body", "body"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.30280486049465183]], "self": []}, "q_name": "TestDatastoreHook.test_run_query_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {"body": ""}, "variables_p": {"body": [["dict", 0.29017365420903457], ["str", 0.21641110982432044], ["KeysView[str]", 0.10841015447023325], ["Dict[object, Dict[str, Any]]", 0.08735825755575605]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[248, 4], [262, 43]], "fn_var_ln": {"execute": [[260, 8], [260, 15]], "get": [[258, 8], [258, 11]], "name": [[250, 8], [250, 12]], "operations": [[256, 8], [256, 18]], "projects": [[254, 8], [254, 16]], "resp": [[252, 8], [252, 12]]}, "fn_var_occur": {"execute": [["execute", "get", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["resp", "execute", "return_value"]], "get": [["get", "operations", "return_value", "get"], ["get", "assert_called_once_with", "name", "name"], ["execute", "get", "return_value", "execute"]], "name": [["resp", "self", "datastore_hook", "get_operation", "name", "name"], ["get", "assert_called_once_with", "name", "name"]], "operations": [["operations", "projects", "return_value", "operations"], ["operations", "assert_called_once_with"], ["get", "operations", "return_value", "get"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["operations", "projects", "return_value", "operations"]], "resp": [["resp", "self", "datastore_hook", "get_operation", "name", "name"], ["resp", "execute", "return_value"]]}, "name": "test_get_operation", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["resp", "self", "datastore_hook", "get_operation", "name", "name"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3977656378996324]], "self": []}, "q_name": "TestDatastoreHook.test_get_operation", "ret_exprs": [], "ret_type": "", "variables": {"execute": "", "get": "", "name": "", "operations": "", "projects": "", "resp": ""}, "variables_p": {"execute": [["str", 1.0]], "get": [["Dict[str, str]", 0.3865207492601257], ["str", 0.32121973753320776], ["Dict[str, Union[Any, str]]", 0.10495008799159118], ["Dict[str, Union[int, str]]", 0.09337737714367178]], "name": [["str", 0.6593745663837605], ["Dict[str, str]", 0.1825567959736016], ["Final", 0.15806863764263812]], "operations": [["str", 0.33943903046864127], ["Dict[str, Any]", 0.18319360263102102], ["Dict[str, Dict[str, Any]]", 0.10842547364375259], ["List[str]", 0.08937885158178333], ["Dict[str, Union[Any, Any]]", 0.08497344201400205]], "projects": [["Dict[str, Any]", 0.2271945807323998], ["List[Dict[str, Any]]", 0.10329759714879777], ["list", 0.1011706391045939], ["str", 0.09201527753256195], ["List[Tuple[str, str]]", 0.08107430516877258]], "resp": [["Dict[str, dict]", 0.11559410039529014], ["Dict[str, Dict[str, Any]]", 0.11559410039529014], ["Set[str]", 0.10311102959786124], ["Optional[str]", 0.09974528191784374], ["List[Tuple[str, bytes]]", 0.09305496451598681], ["Tuple[None, Tuple[None, None]]", 0.09243158533874646], ["Dict[str, None]", 0.08834462615381629]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[265, 4], [279, 43]], "fn_var_ln": {"delete": [[275, 8], [275, 14]], "execute": [[277, 8], [277, 15]], "name": [[267, 8], [267, 12]], "operations": [[273, 8], [273, 18]], "projects": [[271, 8], [271, 16]], "resp": [[269, 8], [269, 12]]}, "fn_var_occur": {"delete": [["delete", "operations", "return_value", "delete"], ["delete", "assert_called_once_with", "name", "name"], ["execute", "delete", "return_value", "execute"]], "execute": [["execute", "delete", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["resp", "execute", "return_value"]], "name": [["resp", "self", "datastore_hook", "delete_operation", "name", "name"], ["delete", "assert_called_once_with", "name", "name"]], "operations": [["operations", "projects", "return_value", "operations"], ["operations", "assert_called_once_with"], ["delete", "operations", "return_value", "delete"]], "projects": [["projects", "self", "datastore_hook", "connection", "projects"], ["projects", "assert_called_once_with"], ["operations", "projects", "return_value", "operations"]], "resp": [["resp", "self", "datastore_hook", "delete_operation", "name", "name"], ["resp", "execute", "return_value"]]}, "name": "test_delete_operation", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "connection", "mock_get_conn", "return_value"], ["resp", "self", "datastore_hook", "delete_operation", "name", "name"], ["projects", "self", "datastore_hook", "connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.3562078565219315]], "self": []}, "q_name": "TestDatastoreHook.test_delete_operation", "ret_exprs": [], "ret_type": "", "variables": {"delete": "", "execute": "", "name": "", "operations": "", "projects": "", "resp": ""}, "variables_p": {"delete": [["str", 0.6723174611314681], ["Set[str]", 0.1317390590043803]], "execute": [["str", 0.7541693310448616], ["bool", 0.0857164623257091], ["Dict[str, Union[Any, Any, Any]]", 0.08003293105709407]], "name": [["str", 0.6625856882812188], ["Set[str]", 0.24230781192698542], ["List[str]", 0.09510649979179582]], "operations": [["int", 0.5203396836472123], ["bytes", 0.08760720034685636], ["Dict[str, Union[Any, Any, Any]]", 0.08072035219568924], ["Dict[str, Dict[str, Any]]", 0.08072035219568924], ["List[Dict[str, Any]]", 0.08072035219568924], ["list", 0.08072035219568924]], "projects": [["Dict[str, Any]", 0.2271945807323998], ["List[Dict[str, Any]]", 0.10329759714879777], ["list", 0.1011706391045939], ["str", 0.09201527753256195], ["List[Tuple[str, str]]", 0.08107430516877258]], "resp": [["dict", 0.22273997856490627], ["str", 0.18246036448600536], ["Dict[str, str]", 0.10338734951204105], ["Dict[str, dict]", 0.10078040015288658], ["Dict[str, Dict[str, Any]]", 0.10078040015288658], ["Dict[str, None]", 0.09467839374884751]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[289, 4], [297, 78]], "fn_var_ln": {"name": [[290, 8], [290, 12]], "polling_interval_in_seconds": [[291, 8], [291, 35]], "result": [[293, 8], [293, 14]]}, "fn_var_occur": {"name": [["result", "self", "datastore_hook", "poll_operation_until_done", "name", "polling_interval_in_seconds"], ["mock_get_operation", "assert_has_calls", "call", "name", "call", "name"]], "polling_interval_in_seconds": [["result", "self", "datastore_hook", "poll_operation_until_done", "name", "polling_interval_in_seconds"], ["mock_time_sleep", "assert_called_once_with", "polling_interval_in_seconds"]], "result": [["result", "self", "datastore_hook", "poll_operation_until_done", "name", "polling_interval_in_seconds"]]}, "name": "test_poll_operation_until_done", "params": {"mock_get_operation": "", "mock_time_sleep": "", "self": ""}, "params_descr": {"mock_get_operation": "", "mock_time_sleep": "", "self": ""}, "params_occur": {"mock_get_operation": [["mock_get_operation", "assert_has_calls", "call", "name", "call", "name"]], "mock_time_sleep": [["mock_time_sleep", "assert_called_once_with", "polling_interval_in_seconds"]], "self": [["result", "self", "datastore_hook", "poll_operation_until_done", "name", "polling_interval_in_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_operation": [], "mock_time_sleep": [], "self": []}, "q_name": "TestDatastoreHook.test_poll_operation_until_done", "ret_exprs": [], "ret_type": "", "variables": {"name": "", "polling_interval_in_seconds": "", "result": ""}, "variables_p": {"name": [["str", 0.912320808736956], ["Dict[Any, Dict[str, Any]]", 0.08767919126304415]], "polling_interval_in_seconds": [["List[str]", 0.17959136269235845], ["List[int]", 0.1301342027784055], ["List[List[int]]", 0.10737620864776841], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.10215094957419554], ["bool", 0.10005819150334494], ["Dict[str, Dict[str, Any]]", 0.09768303037506591], ["List[Dict[str, str]]", 0.08806867427569702]], "result": [["list", 0.2951615824969237], ["List[Dict[str, Any]]", 0.18645102493657506], ["Dict[str, Dict[str, str]]", 0.09773207621060254], ["int", 0.09715571680956417]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[300, 4], [328, 43]], "fn_var_ln": {"bucket": [[302, 8], [302, 14]], "entity_filter": [[304, 8], [304, 21]], "execute": [[326, 8], [326, 15]], "export": [[317, 8], [317, 14]], "labels": [[305, 8], [305, 14]], "namespace": [[303, 8], [303, 17]], "projects": [[315, 8], [315, 16]], "resp": [[307, 8], [307, 12]]}, "fn_var_occur": {"bucket": [["resp", "self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["export", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "entity_filter", "labels"]], "entity_filter": [["resp", "self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["export", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "entity_filter", "labels"]], "execute": [["execute", "export", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["resp", "execute", "return_value"]], "export": [["export", "projects", "return_value", "export"], ["export", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "entity_filter", "labels"], ["execute", "export", "return_value", "execute"]], "labels": [["resp", "self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["export", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "entity_filter", "labels"]], "namespace": [["namespace", "None"], ["resp", "self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["export", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "entity_filter", "labels"]], "projects": [["projects", "self", "datastore_hook", "admin_connection", "projects"], ["projects", "assert_called_once_with"], ["export", "projects", "return_value", "export"]], "resp": [["resp", "self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["resp", "execute", "return_value"]]}, "name": "test_export_to_storage_bucket", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"], ["resp", "self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["projects", "self", "datastore_hook", "admin_connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["str", 0.21561280442285277], ["mock.Mock", 0.09113366297335197]], "self": []}, "q_name": "TestDatastoreHook.test_export_to_storage_bucket", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "entity_filter": "", "execute": "", "export": "", "labels": "", "namespace": "", "projects": "", "resp": ""}, "variables_p": {"bucket": [["dict", 0.19434362402625682], ["Dict[str, str]", 0.11256113641972296], ["int", 0.0997539954029978]], "entity_filter": [["Pattern[str]", 0.5067335595873583], ["Dict[str, int]", 0.12930873021036599], ["Dict[Any, List[float]]", 0.09906726229020577]], "execute": [["str", 0.7541693310448616], ["bool", 0.0857164623257091], ["Dict[str, Union[Any, Any, Any]]", 0.08003293105709407]], "export": [["str", 0.6894793881081159], ["List[str]", 0.20329611058596495]], "labels": [["int", 0.20383022612350235], ["Type[Dict[str, Any]]", 0.10645379503297799], ["Dict[str, Any]", 0.10596850919046988], ["Dict[Any, Type[Any]]", 0.10383517083076862], ["Dict[str, Tuple]", 0.09566359483888662]], "namespace": [["Union[Dict[str, str], List[Any], str]", 0.09211820799438393]], "projects": [["List[Dict[str, Any]]", 0.13601807325384416], ["str", 0.08882473732154814], ["dict", 0.08821893529769576], ["ChainMap", 0.0826409734457289]], "resp": [["dict", 0.20581967444410612], ["Generator[Any, None, None]", 0.20187047713079664], ["str", 0.0939934329818924], ["Dict[Any, str]", 0.093895158099296]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[336, 4], [350, 45]], "fn_var_ln": {"bucket": [[338, 8], [338, 14]], "entity_filter": [[340, 8], [340, 21]], "labels": [[341, 8], [341, 14]], "namespace": [[339, 8], [339, 17]]}, "fn_var_occur": {"bucket": [["self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]], "entity_filter": [["self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]], "labels": [["self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]], "namespace": [["namespace", "None"], ["self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]]}, "name": "test_export_to_storage_bucket_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["str", 0.26925462198753264]], "mock_project_id": [["mock.Mock", 0.21656179229427672]], "self": []}, "q_name": "TestDatastoreHook.test_export_to_storage_bucket_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "entity_filter": "", "labels": "", "namespace": ""}, "variables_p": {"bucket": [["float", 0.19881479272522978], ["str", 0.0878197401895683]], "entity_filter": [["str", 0.27180575708983734], ["Callable[[str], bool]", 0.23180084348887947], ["Optional[Dict[str, Any]]", 0.10750154799326148], ["set", 0.08734910941721999]], "labels": [["str", 0.18895517116694777]], "namespace": [["str", 0.18045043665125304], ["Type[str]", 0.09134086395155602], ["list", 0.0905324784955068]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[353, 4], [383, 43]], "fn_var_ln": {"bucket": [[355, 8], [355, 14]], "entity_filter": [[358, 8], [358, 21]], "execute": [[381, 8], [381, 15]], "file": [[356, 8], [356, 12]], "import_": [[372, 8], [372, 15]], "labels": [[359, 8], [359, 14]], "namespace": [[357, 8], [357, 17]], "projects": [[370, 8], [370, 16]], "resp": [[361, 8], [361, 12]]}, "fn_var_occur": {"bucket": [["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["import_", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "file", "entity_filter", "labels"]], "entity_filter": [["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["import_", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "file", "entity_filter", "labels"]], "execute": [["execute", "import_", "return_value", "execute"], ["execute", "assert_called_once_with", "num_retries", "mock", "ANY"], ["resp", "execute", "return_value"]], "file": [["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["import_", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "file", "entity_filter", "labels"]], "import_": [["import_", "projects", "return_value", "import_"], ["import_", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "file", "entity_filter", "labels"], ["execute", "import_", "return_value", "execute"]], "labels": [["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["import_", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "file", "entity_filter", "labels"]], "namespace": [["namespace", "None"], ["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["import_", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "file", "entity_filter", "labels"]], "projects": [["projects", "self", "datastore_hook", "admin_connection", "projects"], ["projects", "assert_called_once_with"], ["import_", "projects", "return_value", "import_"]], "resp": [["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["resp", "execute", "return_value"]]}, "name": "test_import_from_storage_bucket", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"]], "self": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"], ["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["projects", "self", "datastore_hook", "admin_connection", "projects"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["str", 0.12933496912962447], ["mock.Mock", 0.09500069438110963]], "self": []}, "q_name": "TestDatastoreHook.test_import_from_storage_bucket", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "entity_filter": "", "execute": "", "file": "", "import_": "", "labels": "", "namespace": "", "projects": "", "resp": ""}, "variables_p": {"bucket": [["str", 0.4830307321887683], ["MutableMapping[str, Any]", 0.09594475686905879], ["Dict[Any, float]", 0.09517809905118481]], "entity_filter": [["str", 0.24374042940519128], ["dict", 0.09630469276221776], ["Dict[str, Union[Any, Any, Any]]", 0.09546484356969516]], "execute": [["str", 0.7541693310448616], ["bool", 0.0857164623257091], ["Dict[str, Union[Any, Any, Any]]", 0.08003293105709407]], "file": [["Dict[Any, List[Any]]", 0.22704573253248025], ["str", 0.1752844047354175], ["list", 0.11275842605326698], ["List[str]", 0.09090976573818828], ["google.protobuf.descriptor_pb2.FileDescriptorProto", 0.08696207035266021]], "import_": [["str", 0.6077463652404376], ["List[str]", 0.2899585869784096]], "labels": [["str", 0.33189493410972676]], "namespace": [], "projects": [["List[Dict[str, Any]]", 0.13601807325384416], ["str", 0.08882473732154814], ["dict", 0.08821893529769576], ["ChainMap", 0.0826409734457289]], "resp": [["dict", 0.10558493187511923], ["Dict[str, Union[Any, Any, Any]]", 0.09847995916163735], ["Dict[str, str]", 0.09264863969505625]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[391, 4], [407, 45]], "fn_var_ln": {"bucket": [[393, 8], [393, 14]], "entity_filter": [[396, 8], [396, 21]], "file": [[394, 8], [394, 12]], "labels": [[397, 8], [397, 14]], "namespace": [[395, 8], [395, 17]]}, "fn_var_occur": {"bucket": [["self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]], "entity_filter": [["self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]], "file": [["self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]], "labels": [["self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]], "namespace": [["namespace", "None"], ["self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]]}, "name": "test_import_from_storage_bucket_no_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"]], "mock_project_id": [], "self": [["self", "datastore_hook", "admin_connection", "mock_get_conn", "return_value"], ["self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["str", 0.26655151043816716]], "mock_project_id": [["mock.Mock", 0.2076938442943499], ["List[T]", 0.0880218163906819]], "self": []}, "q_name": "TestDatastoreHook.test_import_from_storage_bucket_no_project_id", "ret_exprs": [], "ret_type": "", "variables": {"bucket": "", "entity_filter": "", "file": "", "labels": "", "namespace": ""}, "variables_p": {"bucket": [["str", 0.3163151977186569], ["int", 0.09169783655871741]], "entity_filter": [["Callable[[str], bool]", 0.3279189924399986], ["Dict[str, Union[Any, Any, Any]]", 0.10649905621921067], ["str", 0.09824112847351718], ["Set[str]", 0.08682969100831275], ["DefaultDict[str, Dict[str, Any]]", 0.08511365334628784], ["Optional[Dict[str, Any]]", 0.08481581993053561]], "file": [["dict", 0.4114046800151513]], "labels": [["Dict[str, Any]", 0.10272112394348827], ["str", 0.08591057575880096]], "namespace": []}}], "name": "TestDatastoreHook", "q_name": "TestDatastoreHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 0], [36, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "mock_init", "params": {"gcp_conn_id": "", "impersonation_chain": "", "self": ""}, "params_descr": {"gcp_conn_id": "", "impersonation_chain": "", "self": ""}, "params_occur": {"gcp_conn_id": [], "impersonation_chain": [], "self": []}, "params_p": {"args": [], "gcp_conn_id": [["str", 0.22309396388262298], ["Set[int]", 0.1348902946641084], ["Optional[Set[int]]", 0.1348902946641084], ["bool", 0.07902146925380046], ["List[int]", 0.07554342860998617]], "impersonation_chain": [["str", 0.22309396388262298], ["Set[int]", 0.1348902946641084], ["Optional[Set[int]]", 0.1348902946641084], ["bool", 0.07902146925380046], ["List[int]", 0.07554342860998617]], "kwargs": [], "self": [["str", 0.22309396388262298], ["Set[int]", 0.1348902946641084], ["Optional[Set[int]]", 0.1348902946641084], ["bool", 0.07902146925380046], ["List[int]", 0.07554342860998617]]}, "q_name": "mock_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "call", "patch", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "datastore", "DatastoreHook"], "mod_var_ln": {"GCP_PROJECT_ID": [[28, 0], [28, 14]]}, "mod_var_occur": {"GCP_PROJECT_ID": [["keys", "self", "datastore_hook", "allocate_ids", "partial_keys", "partial_keys", "project_id", "GCP_PROJECT_ID"], ["allocate_ids", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "partial_keys"], ["transaction", "self", "datastore_hook", "begin_transaction", "project_id", "GCP_PROJECT_ID", "transaction_options"], ["begin_transaction", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body"], ["resp", "self", "datastore_hook", "commit", "body", "body", "project_id", "GCP_PROJECT_ID"], ["commit", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "body"], ["resp", "self", "datastore_hook", "lookup", "keys", "keys", "read_consistency", "read_consistency", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["lookup", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "keys", "read_consistency", "transaction"], ["self", "datastore_hook", "rollback", "transaction", "transaction", "project_id", "GCP_PROJECT_ID"], ["rollback", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "transaction"], ["resp", "self", "datastore_hook", "run_query", "body", "body", "project_id", "GCP_PROJECT_ID"], ["run_query", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "body"], ["resp", "self", "datastore_hook", "export_to_storage_bucket", "bucket", "bucket", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["export", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "entity_filter", "labels"], ["resp", "self", "datastore_hook", "import_from_storage_bucket", "bucket", "bucket", "file", "file", "namespace", "namespace", "entity_filter", "entity_filter", "labels", "labels", "project_id", "GCP_PROJECT_ID"], ["import_", "assert_called_once_with", "projectId", "GCP_PROJECT_ID", "body", "join", "filter", "None", "bucket", "namespace", "file", "entity_filter", "labels"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 136}, "session_id": "f-qaginr4tC8cWc4pfwx6RrNr9z1f750Wni6nrbFX9Q", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"GCP_PROJECT_ID": ""}, "variables_p": {"GCP_PROJECT_ID": [["str", 0.5167619803443301], ["int", 0.30032621382991187], ["Type[str]", 0.09204828369764939], ["bool", 0.09086352212810851]]}}}