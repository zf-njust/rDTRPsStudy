{"error": null, "response": {"classes": [{"cls_lc": [[40, 0], [176, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 4], [43, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataplexHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [53, 13]], "fn_var_ln": {"hook": [[50, 12], [50, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "DataplexHook", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "DataplexHook", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataplexHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.8433904963831771], ["bool", 0.07830475180841137]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [76, 9]], "fn_var_ln": {"parent": [[66, 8], [66, 14]]}, "fn_var_occur": {"parent": [["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["mock_client", "return_value", "create_task", "assert_called_once_with", "request", "dict", "parent", "parent", "task_id", "DATAPLEX_TASK_ID", "task", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_create_task", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "create_task", "assert_called_once_with", "request", "dict", "parent", "parent", "task_id", "DATAPLEX_TASK_ID", "task", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "create_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "dataplex_task_id", "DATAPLEX_TASK_ID", "validate_only", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataplexHook.test_create_task", "ret_exprs": [], "ret_type": "", "variables": {"parent": ""}, "variables_p": {"parent": [["str", 0.1742131223749786], ["Dict[str, Union[float, str]]", 0.12085428749754032], ["List[Dict[str, Any]]", 0.09902275417787539], ["tests.mock.zwave.MockNode", 0.08474037395291077], ["Dict[str, Union[Any, int, str]]", 0.08332042866846841], ["List[str]", 0.0814311742952376]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [92, 9]], "fn_var_ln": {"name": [[84, 8], [84, 12]]}, "fn_var_occur": {"name": [["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["mock_client", "return_value", "delete_task", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_delete_task", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "delete_task", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "delete_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataplexHook.test_delete_task", "ret_exprs": [], "ret_type": "", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.3817129590783934], ["Union[Literal, Literal]", 0.10485109700623191], ["Dict[str, Union[float, str]]", 0.10102136509598963]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [110, 9]], "fn_var_ln": {"parent": [[98, 8], [98, 14]]}, "fn_var_occur": {"parent": [["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["mock_client", "return_value", "list_tasks", "assert_called_once_with", "request", "dict", "parent", "parent", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_list_tasks", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "list_tasks", "assert_called_once_with", "request", "dict", "parent", "parent", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "list_tasks", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.09895209202182535]], "self": []}, "q_name": "TestDataplexHook.test_list_tasks", "ret_exprs": [], "ret_type": "", "variables": {"parent": ""}, "variables_p": {"parent": [["str", 0.228616443674683], ["dict", 0.18857014016007806], ["Dict[str, List[Any]]", 0.10809317291080865], ["Dict[str, str]", 0.0957533962273843], ["ChainMap", 0.09011817773140006], ["bytes", 0.08288860278956103]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [126, 9]], "fn_var_ln": {"name": [[118, 8], [118, 12]]}, "fn_var_occur": {"name": [["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["mock_client", "return_value", "get_task", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_get_task", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "get_task", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "get_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataplexHook.test_get_task", "ret_exprs": [], "ret_type": "", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.5036835536615011], ["List[str]", 0.09859178106584304], ["list", 0.09434544709497178], ["Set[str]", 0.09401216989372749]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[129, 4], [148, 9]], "fn_var_ln": {"parent": [[138, 8], [138, 14]]}, "fn_var_occur": {"parent": [["parent", "PROJECT_ID", "REGION"], ["mock_client", "return_value", "create_lake", "assert_called_once_with", "request", "dict", "parent", "parent", "lake_id", "LAKE_ID", "lake", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_create_lake", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "create_lake", "assert_called_once_with", "request", "dict", "parent", "parent", "lake_id", "LAKE_ID", "lake", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "create_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "validate_only", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataplexHook.test_create_lake", "ret_exprs": [], "ret_type": "", "variables": {"parent": ""}, "variables_p": {"parent": [["str", 0.27304006270876235], ["mock._Call", 0.18788148235399496], ["Dict[str, List[Any]]", 0.1366573472197408], ["Dict[str, Any]", 0.10943797285948448], ["list", 0.10820592177379687], ["Dict[str, str]", 0.09958843329825075]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[151, 4], [162, 9]], "fn_var_ln": {"name": [[154, 8], [154, 12]]}, "fn_var_occur": {"name": [["name", "PROJECT_ID", "REGION", "LAKE_ID"], ["mock_client", "return_value", "delete_lake", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_delete_lake", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "delete_lake", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "delete_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataplexHook.test_delete_lake", "ret_exprs": [], "ret_type": "", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.6509163683472416], ["Set[str]", 0.08718076029915028], ["Optional[str]", 0.0863844366780547], ["List[str]", 0.08553642794639982]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [176, 9]], "fn_var_ln": {"name": [[168, 8], [168, 12]]}, "fn_var_occur": {"name": [["name", "PROJECT_ID", "REGION", "LAKE_ID"], ["mock_client", "return_value", "get_lake", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "name": "test_get_lake", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "return_value", "get_lake", "assert_called_once_with", "request", "dict", "name", "name", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "get_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "self": []}, "q_name": "TestDataplexHook.test_get_lake", "ret_exprs": [], "ret_type": "", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.6996317879417724], ["Optional[str]", 0.12455543271061356], ["Dict[str, str]", 0.08605211854698634]]}}], "name": "TestDataplexHook", "q_name": "TestDataplexHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "airflow", "providers", "google", "cloud", "operators", "dataplex", "DataplexHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id"], "mod_var_ln": {"BASE_STRING": [[27, 0], [27, 11]], "BODY": [[33, 0], [33, 4]], "DATAPLEX_STRING": [[28, 0], [28, 15]], "DATAPLEX_TASK_ID": [[34, 0], [34, 16]], "GCP_CONN_ID": [[36, 0], [36, 11]], "IMPERSONATION_CHAIN": [[37, 0], [37, 19]], "LAKE_ID": [[32, 0], [32, 7]], "PROJECT_ID": [[30, 0], [30, 10]], "REGION": [[31, 0], [31, 6]]}, "mod_var_occur": {"BASE_STRING": [["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"]], "BODY": [["self", "hook", "create_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "dataplex_task_id", "DATAPLEX_TASK_ID", "validate_only", "None"], ["mock_client", "return_value", "create_task", "assert_called_once_with", "request", "dict", "parent", "parent", "task_id", "DATAPLEX_TASK_ID", "task", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "create_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "validate_only", "None"], ["mock_client", "return_value", "create_lake", "assert_called_once_with", "request", "dict", "parent", "parent", "lake_id", "LAKE_ID", "lake", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"]], "DATAPLEX_STRING": [], "DATAPLEX_TASK_ID": [["self", "hook", "create_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "dataplex_task_id", "DATAPLEX_TASK_ID", "validate_only", "None"], ["mock_client", "return_value", "create_task", "assert_called_once_with", "request", "dict", "parent", "parent", "task_id", "DATAPLEX_TASK_ID", "task", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "delete_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["self", "hook", "get_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"]], "GCP_CONN_ID": [["self", "hook", "DataplexHook", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "IMPERSONATION_CHAIN": [["self", "hook", "DataplexHook", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "LAKE_ID": [["self", "hook", "create_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "dataplex_task_id", "DATAPLEX_TASK_ID", "validate_only", "None"], ["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "delete_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["self", "hook", "list_tasks", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "get_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["self", "hook", "create_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "validate_only", "None"], ["mock_client", "return_value", "create_lake", "assert_called_once_with", "request", "dict", "parent", "parent", "lake_id", "LAKE_ID", "lake", "BODY", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "delete_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "get_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID"]], "PROJECT_ID": [["self", "hook", "create_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "dataplex_task_id", "DATAPLEX_TASK_ID", "validate_only", "None"], ["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "delete_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["self", "hook", "list_tasks", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "get_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["self", "hook", "create_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "validate_only", "None"], ["parent", "PROJECT_ID", "REGION"], ["self", "hook", "delete_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "get_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID"]], "REGION": [["self", "hook", "create_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "dataplex_task_id", "DATAPLEX_TASK_ID", "validate_only", "None"], ["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "delete_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["self", "hook", "list_tasks", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["parent", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "get_task", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "dataplex_task_id", "DATAPLEX_TASK_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID", "DATAPLEX_TASK_ID"], ["self", "hook", "create_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID", "body", "BODY", "validate_only", "None"], ["parent", "PROJECT_ID", "REGION"], ["self", "hook", "delete_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID"], ["self", "hook", "get_lake", "project_id", "PROJECT_ID", "region", "REGION", "lake_id", "LAKE_ID"], ["name", "PROJECT_ID", "REGION", "LAKE_ID"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 33}, "session_id": "LOiTNbkxY2CMh00J80O5D-w4M-Y5vLsOOBlNasfk3OE", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BASE_STRING": "", "BODY": "", "DATAPLEX_STRING": "", "DATAPLEX_TASK_ID": "", "GCP_CONN_ID": "", "IMPERSONATION_CHAIN": "", "LAKE_ID": "", "PROJECT_ID": "", "REGION": ""}, "variables_p": {"BASE_STRING": [["str", 0.30749458719244954], ["tuple", 0.20936140158711464], ["Dict[str, str]", 0.1110586462849861], ["List[Tuple[str, str]]", 0.09483717673949707], ["int", 0.09301717642446926], ["Pattern[str]", 0.09273277862642978], ["list", 0.09149823314505354]], "BODY": [["str", 0.9076137517535794], ["int", 0.09238624824642037]], "DATAPLEX_STRING": [["str", 0.7], ["int", 0.2]], "DATAPLEX_TASK_ID": [["str", 0.6991786520372533], ["int", 0.30082134796274673]], "GCP_CONN_ID": [["int", 0.5303937939659991], ["str", 0.15625050338365498], ["Optional[str]", 0.07612749870954731]], "IMPERSONATION_CHAIN": [["str", 0.8433904963831771], ["bool", 0.07830475180841137]], "LAKE_ID": [["str", 0.5771660942647275], ["int", 0.3127577836948605], ["List[str]", 0.11007612204041198]], "PROJECT_ID": [["str", 0.7987736408628333], ["int", 0.20122635913716663]], "REGION": [["int", 0.20339920651751667], ["Optional[str]", 0.20315477020155553], ["str", 0.20007777636491442], ["Dict[str, Any]", 0.09426815127584554]]}}}