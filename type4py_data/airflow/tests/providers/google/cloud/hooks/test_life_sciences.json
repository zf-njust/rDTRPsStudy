{"error": null, "response": {"classes": [{"cls_lc": [[50, 0], [162, 95]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [53, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLifeSciencesHookWithPassedProjectId.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [60, 60]], "fn_var_ln": {"hook": [[60, 12], [60, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "LifeSciencesHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "LifeSciencesHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLifeSciencesHookWithPassedProjectId.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [65, 28]], "fn_var_ln": {"path": [[63, 8], [63, 12]], "path2": [[64, 8], [64, 13]]}, "fn_var_occur": {"path": [["path", "path2"]], "path2": [["path2", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["path", "path2"]]}, "name": "test_location_path", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["path2", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLifeSciencesHookWithPassedProjectId.test_location_path", "ret_exprs": [], "ret_type": "", "variables": {"path": "", "path2": ""}, "variables_p": {"path": [["str", 0.32588775145386895], ["List[str]", 0.1164326584338019]], "path2": [["str", 0.5045042296651377], ["Tuple[str, str]", 0.0888159043488021]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [75, 40]], "fn_var_ln": {"result": [[70, 8], [70, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "get_conn"], ["mock_build", "return_value", "result"], ["self", "hook", "_conn", "result"]]}, "name": "test_life_science_client_creation", "params": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_descr": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_occur": {"mock_authorize": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"]], "mock_build": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"], ["mock_build", "return_value", "result"]], "self": [["result", "self", "hook", "get_conn"], ["self", "hook", "_conn", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_authorize": [], "mock_build": [], "self": []}, "q_name": "TestLifeSciencesHookWithPassedProjectId.test_life_science_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["list", 0.8910636610468546]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [107, 39]], "fn_var_ln": {"parent": [[100, 8], [100, 14]], "result": [[98, 8], [98, 14]], "service_mock": [[84, 8], [84, 20]]}, "fn_var_occur": {"parent": [["parent", "self", "hook", "_location_path", "location", "TEST_LOCATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "assert_called_once_with", "body", "parent", "parent"]], "result": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"], ["result", "TEST_OPERATION"]], "service_mock": [["service_mock", "get_conn_mock", "return_value"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "return_value", "TEST_DONE_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "assert_called_once_with", "body", "parent", "parent"]]}, "name": "test_run_pipeline_immediately_complete", "params": {"get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_conn_mock": [["service_mock", "get_conn_mock", "return_value"]], "mock_project_id": [], "self": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"], ["parent", "self", "hook", "_location_path", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "get_conn_mock": [], "kwargs": [], "mock_project_id": [["str", 0.25755737278339963], ["bool", 0.22564620123407614]], "self": []}, "q_name": "TestLifeSciencesHookWithPassedProjectId.test_run_pipeline_immediately_complete", "ret_exprs": [], "ret_type": "", "variables": {"parent": "", "result": "", "service_mock": ""}, "variables_p": {"parent": [], "result": [["tests.test_model.CarInfoMap", 0.10837123763426007], ["tests.core.data.json.test_json_repository.DummyEntity", 0.10138733063313506]], "service_mock": [["mock.Mock", 0.09889729162656544]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [136, 39]], "fn_var_ln": {"execute_mock": [[125, 8], [125, 20]], "result": [[135, 8], [135, 14]], "service_mock": [[117, 8], [117, 20]]}, "fn_var_occur": {"execute_mock": [["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_DONE_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]], "result": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["result", "TEST_OPERATION"]], "service_mock": [["service_mock", "get_conn_mock", "return_value"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]]}, "name": "test_waiting_operation", "params": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_descr": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_occur": {"_": [], "get_conn_mock": [["service_mock", "get_conn_mock", "return_value"]], "mock_project_id": [], "self": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"]]}, "params_p": {"_": [["str", 0.1719512706875902], ["bool", 0.13131918123394962]], "args": [], "get_conn_mock": [], "kwargs": [], "mock_project_id": [["str", 0.1719512706875902], ["bool", 0.13131918123394962]], "self": []}, "q_name": "TestLifeSciencesHookWithPassedProjectId.test_waiting_operation", "ret_exprs": [], "ret_type": "", "variables": {"execute_mock": "", "result": "", "service_mock": ""}, "variables_p": {"execute_mock": [], "result": [["Dict[str, str]", 0.22071456871138934], ["Dict[str, Any]", 0.1985698890876801], ["Dict[str, int]", 0.09643418556527852], ["Dict[str, Dict[str, Any]]", 0.08700104497620058], ["dict", 0.0866891957833809], ["List[Dict[str, Any]]", 0.0858717053614543], ["List[Tuple[None, Any, str]]", 0.08413390644524549]], "service_mock": [["mock.Mock", 0.09889729162656544]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [162, 95]], "fn_var_ln": {"execute_mock": [[154, 8], [154, 20]], "service_mock": [[146, 8], [146, 20]]}, "fn_var_occur": {"execute_mock": [["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_ERROR_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]], "service_mock": [["service_mock", "get_conn_mock", "return_value"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]]}, "name": "test_error_operation", "params": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_descr": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_occur": {"_": [], "get_conn_mock": [["service_mock", "get_conn_mock", "return_value"]], "mock_project_id": [], "self": [["self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"]]}, "params_p": {"_": [["str", 0.08296199943402177]], "args": [], "get_conn_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.08363116902502761]], "kwargs": [], "mock_project_id": [["str", 0.08296199943402177]], "self": []}, "q_name": "TestLifeSciencesHookWithPassedProjectId.test_error_operation", "ret_exprs": [], "ret_type": "", "variables": {"execute_mock": "", "service_mock": ""}, "variables_p": {"execute_mock": [], "service_mock": [["mock.Mock", 0.09889729162656544]]}}], "name": "TestLifeSciencesHookWithPassedProjectId", "q_name": "TestLifeSciencesHookWithPassedProjectId", "variables": {}, "variables_p": {}}, {"cls_lc": [[165, 0], [268, 67]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 4], [171, 60]], "fn_var_ln": {"hook": [[171, 12], [171, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "LifeSciencesHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "LifeSciencesHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLifeSciencesHookWithDefaultProjectIdFromConnection.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[175, 4], [181, 40]], "fn_var_ln": {"result": [[176, 8], [176, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "get_conn"], ["mock_build", "return_value", "result"], ["self", "hook", "_conn", "result"]]}, "name": "test_life_science_client_creation", "params": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_descr": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_occur": {"mock_authorize": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"]], "mock_build": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"], ["mock_build", "return_value", "result"]], "self": [["result", "self", "hook", "get_conn"], ["self", "hook", "_conn", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_authorize": [], "mock_build": [], "self": []}, "q_name": "TestLifeSciencesHookWithDefaultProjectIdFromConnection.test_life_science_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["list", 0.8910636610468546]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[189, 4], [212, 39]], "fn_var_ln": {"parent": [[206, 8], [206, 14]], "result": [[205, 8], [205, 14]], "service_mock": [[190, 8], [190, 20]]}, "fn_var_occur": {"parent": [["parent", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "assert_called_once_with", "body", "parent", "parent"]], "result": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["result", "TEST_OPERATION"]], "service_mock": [["service_mock", "get_conn_mock", "return_value"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "return_value", "TEST_DONE_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "assert_called_once_with", "body", "parent", "parent"]]}, "name": "test_run_pipeline_immediately_complete", "params": {"get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_conn_mock": [["service_mock", "get_conn_mock", "return_value"]], "mock_project_id": [], "self": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["parent", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "get_conn_mock": [], "kwargs": [], "mock_project_id": [["str", 0.25755737278339963], ["bool", 0.22564620123407614]], "self": []}, "q_name": "TestLifeSciencesHookWithDefaultProjectIdFromConnection.test_run_pipeline_immediately_complete", "ret_exprs": [], "ret_type": "", "variables": {"parent": "", "result": "", "service_mock": ""}, "variables_p": {"parent": [["List[str]", 0.18412580739801007], ["tests.utils.MockCoroutine", 0.09556387506160216], ["tests.conftesConfluentAvroConsumerMock", 0.08968379885200407]], "result": [["Dict[str, str]", 0.22071456871138934], ["Dict[str, Any]", 0.1985698890876801], ["Dict[str, int]", 0.09643418556527852], ["Dict[str, Dict[str, Any]]", 0.08700104497620058], ["dict", 0.0866891957833809], ["List[Dict[str, Any]]", 0.0858717053614543], ["List[Tuple[None, Any, str]]", 0.08413390644524549]], "service_mock": [["mock.Mock", 0.09889729162656544]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[221, 4], [240, 39]], "fn_var_ln": {"execute_mock": [[231, 8], [231, 20]], "result": [[239, 8], [239, 14]], "service_mock": [[222, 8], [222, 20]]}, "fn_var_occur": {"execute_mock": [["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_DONE_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]], "result": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"], ["result", "TEST_OPERATION"]], "service_mock": [["service_mock", "get_conn_mock", "return_value"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]]}, "name": "test_waiting_operation", "params": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_descr": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_occur": {"_": [], "get_conn_mock": [["service_mock", "get_conn_mock", "return_value"]], "mock_project_id": [], "self": [["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"]]}, "params_p": {"_": [["str", 0.1719512706875902], ["bool", 0.13131918123394962]], "args": [], "get_conn_mock": [], "kwargs": [], "mock_project_id": [["str", 0.1719512706875902], ["bool", 0.13131918123394962]], "self": []}, "q_name": "TestLifeSciencesHookWithDefaultProjectIdFromConnection.test_waiting_operation", "ret_exprs": [], "ret_type": "", "variables": {"execute_mock": "", "result": "", "service_mock": ""}, "variables_p": {"execute_mock": [], "result": [["tests.test_model.CarInfoMap", 0.10837123763426007], ["tests.core.data.json.test_json_repository.DummyEntity", 0.10138733063313506]], "service_mock": [["mock.Mock", 0.09889729162656544]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[249, 4], [268, 67]], "fn_var_ln": {"execute_mock": [[259, 8], [259, 20]], "service_mock": [[250, 8], [250, 20]]}, "fn_var_occur": {"execute_mock": [["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_ERROR_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]], "service_mock": [["service_mock", "get_conn_mock", "return_value"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "execute_mock"]]}, "name": "test_error_operation", "params": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_descr": {"_": "", "get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_occur": {"_": [], "get_conn_mock": [["service_mock", "get_conn_mock", "return_value"]], "mock_project_id": [], "self": [["self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"]]}, "params_p": {"_": [["str", 0.08296199943402177]], "args": [], "get_conn_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.08363116902502761]], "kwargs": [], "mock_project_id": [["str", 0.08296199943402177]], "self": []}, "q_name": "TestLifeSciencesHookWithDefaultProjectIdFromConnection.test_error_operation", "ret_exprs": [], "ret_type": "", "variables": {"execute_mock": "", "service_mock": ""}, "variables_p": {"execute_mock": [], "service_mock": [["mock.Mock", 0.09889729162656544]]}}], "name": "TestLifeSciencesHookWithDefaultProjectIdFromConnection", "q_name": "TestLifeSciencesHookWithDefaultProjectIdFromConnection", "variables": {}, "variables_p": {}}, {"cls_lc": [[271, 0], [302, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[272, 4], [277, 60]], "fn_var_ln": {"hook": [[277, 12], [277, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "LifeSciencesHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "LifeSciencesHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLifeSciencesHookWithoutProjectId.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[281, 4], [287, 40]], "fn_var_ln": {"result": [[282, 8], [282, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "get_conn"], ["mock_build", "return_value", "result"], ["self", "hook", "_conn", "result"]]}, "name": "test_life_science_client_creation", "params": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_descr": {"mock_authorize": "", "mock_build": "", "self": ""}, "params_occur": {"mock_authorize": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"]], "mock_build": [["mock_build", "assert_called_once_with", "http", "mock_authorize", "return_value", "cache_discovery", "False"], ["mock_build", "return_value", "result"]], "self": [["result", "self", "hook", "get_conn"], ["self", "hook", "_conn", "result"]]}, "params_p": {"args": [], "kwargs": [], "mock_authorize": [], "mock_build": [], "self": []}, "q_name": "TestLifeSciencesHookWithoutProjectId.test_life_science_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["list", 0.8910636610468546]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[295, 4], [302, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_run_pipeline", "params": {"get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_descr": {"get_conn_mock": "", "mock_project_id": "", "self": ""}, "params_occur": {"get_conn_mock": [], "mock_project_id": [], "self": [["self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"]]}, "params_p": {"args": [], "get_conn_mock": [["str", 0.25755737278339963], ["bool", 0.22564620123407614]], "kwargs": [], "mock_project_id": [["str", 0.25755737278339963], ["bool", 0.22564620123407614]], "self": []}, "q_name": "TestLifeSciencesHookWithoutProjectId.test_run_pipeline", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestLifeSciencesHookWithoutProjectId", "q_name": "TestLifeSciencesHookWithoutProjectId", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "PropertyMock", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "life_sciences", "LifeSciencesHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"TEST_DONE_OPERATION": [[44, 0], [44, 19]], "TEST_ERROR_OPERATION": [[45, 0], [45, 20]], "TEST_LOCATION": [[47, 0], [47, 13]], "TEST_OPERATION": [[36, 0], [36, 14]], "TEST_PROJECT_ID": [[46, 0], [46, 15]], "TEST_WAITING_OPERATION": [[43, 0], [43, 22]]}, "mod_var_occur": {"TEST_DONE_OPERATION": [["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "return_value", "TEST_DONE_OPERATION"], ["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_DONE_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "operations", "return_value", "get", "return_value", "execute", "return_value", "TEST_DONE_OPERATION"], ["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_DONE_OPERATION"]], "TEST_ERROR_OPERATION": [["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_ERROR_OPERATION"], ["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_ERROR_OPERATION"]], "TEST_LOCATION": [["path2", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"], ["parent", "self", "hook", "_location_path", "location", "TEST_LOCATION"], ["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["parent", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"], ["self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"], ["self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION"]], "TEST_OPERATION": [["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["result", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["result", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["result", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"], ["result", "TEST_OPERATION"], ["service_mock", "projects", "return_value", "locations", "return_value", "pipelines", "return_value", "run", "return_value", "execute", "return_value", "TEST_OPERATION"]], "TEST_PROJECT_ID": [["path2", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"], ["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["result", "self", "hook", "run_pipeline", "body", "location", "TEST_LOCATION", "project_id", "TEST_PROJECT_ID"], ["parent", "self", "hook", "_location_path", "project_id", "TEST_PROJECT_ID", "location", "TEST_LOCATION"]], "TEST_WAITING_OPERATION": [["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_DONE_OPERATION"], ["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_ERROR_OPERATION"], ["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_DONE_OPERATION"], ["execute_mock", "mock", "Mock", "TEST_WAITING_OPERATION", "TEST_ERROR_OPERATION"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 69}, "session_id": "OnLOn1JOM1OoTKHjXMSxS2DR2sPXbodUNvNOS2jj9Sw", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_DONE_OPERATION": "", "TEST_ERROR_OPERATION": "", "TEST_LOCATION": "", "TEST_OPERATION": "", "TEST_PROJECT_ID": "", "TEST_WAITING_OPERATION": ""}, "variables_p": {"TEST_DONE_OPERATION": [["dict", 0.22054094604005542], ["Dict[str, Union[Any, Any]]", 0.1966612798987884], ["Dict[str, List[Any]]", 0.09273333500802733], ["Dict[str, Union[None, Any, Any]]", 0.0907341047690319]], "TEST_ERROR_OPERATION": [["int", 0.09089638094727497], ["mock.Mock", 0.08609163476106252]], "TEST_LOCATION": [["Dict[str, str]", 0.22107987675779242], ["str", 0.11755424069578921], ["Type[Dict[str, Any]]", 0.10019644472508323], ["Dict[str, int]", 0.09697028896889534], ["List[bool]", 0.09617439499691169], ["List[str]", 0.0900165224595596]], "TEST_OPERATION": [["list", 0.44019345448532565], ["int", 0.08890425730672416], ["str", 0.08276899244160135], ["Dict[Any, List[Any]]", 0.08190718646040351], ["Dict[str, Union[Any, int, mock.MagicMock]]", 0.07648554301823181], ["Union[mock.AsyncMock, mock.MagicMock]", 0.07563829286353686]], "TEST_PROJECT_ID": [["str", 0.6946819669147625], ["ClassVar[str]", 0.1080617154137617], ["Set[str]", 0.10662534032049652], ["Tuple[Literal]", 0.09063097735097925]], "TEST_WAITING_OPERATION": [["mock.Mock", 0.09223592479945376]]}}}