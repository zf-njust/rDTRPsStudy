{"error": null, "response": {"classes": [{"cls_lc": [[59, 0], [230, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [62, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [69, 64]], "fn_var_ln": {"hook": [[69, 12], [69, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudMemorystoreHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudMemorystoreHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [93, 49]], "fn_var_ln": {"result": [[79, 8], [79, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["Instance", "name", "TEST_NAME", "result"]]}, "name": "test_create_instance_when_exists", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "return_value", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20346271377570305]], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.test_create_instance_when_exists", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["dict", 0.19050228944552178], ["list", 0.0860066005207803]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [144, 49]], "fn_var_ln": {"result": [[107, 8], [107, 14]]}, "fn_var_occur": {"result": [["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["Instance", "name", "TEST_NAME", "result"]]}, "name": "test_create_instance_when_not_exists", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "side_effect", "NotFound", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"]], "mock_project_id": [], "self": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20346271377570305]], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.test_create_instance_when_not_exists", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["Dict[str, Tuple[str, Any]]", 0.17600758523296375], ["float", 0.14911703236748325], ["mock._Call", 0.08468260371628021]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[152, 4], [165, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_instance", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.2054526806664061]], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.test_delete_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [186, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_instance", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20635539947581893]], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.test_get_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[194, 4], [207, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_instances", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20448657829517322]], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.test_list_instances", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [230, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_instance", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20740390751890941]], "self": []}, "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook.test_update_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestCloudMemorystoreWithDefaultProjectIdHook", "q_name": "TestCloudMemorystoreWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[233, 0], [458, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[234, 4], [239, 64]], "fn_var_ln": {"hook": [[239, 12], [239, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudMemorystoreHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudMemorystoreHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["List[int]", 0.48648793344640595], ["int", 0.12102247359681272], ["Tuple[bytes, bytes]", 0.09454323230612932], ["str", 0.09268397231168002], ["List[str]", 0.08487504227962583]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[242, 4], [259, 49]], "fn_var_ln": {"result": [[244, 8], [244, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["Instance", "name", "TEST_NAME", "result"]]}, "name": "test_create_instance_when_exists", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "return_value", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "self": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.29732777431089313]], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_create_instance_when_exists", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["dict", 0.12221261141688611], ["tests.core.data.json.test_json_repository.DummyEntity", 0.08567166473585792], ["str", 0.08552050740074466], ["Tuple[Any, Any]", 0.08463285559028129]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[262, 4], [311, 49]], "fn_var_ln": {"result": [[268, 8], [268, 14]]}, "fn_var_occur": {"result": [["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["Instance", "name", "TEST_NAME", "result"]]}, "name": "test_create_instance_when_not_exists", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "side_effect", "NotFound", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"]], "self": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_create_instance_when_not_exists", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["Dict[str, Tuple[str, Any]]", 0.17600758523296375], ["float", 0.14911703236748325], ["mock._Call", 0.08468260371628021]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[319, 4], [329, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_instance_without_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_project_id": [], "self": [["self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.29810268935814876]], "mock_project_id": [["mock.Mock", 0.29810268935814876]], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_create_instance_without_project_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[332, 4], [343, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_instance", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "self": [["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_delete_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[351, 4], [360, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_instance_without_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_project_id": [], "self": [["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.29788891722991473]], "mock_project_id": [["mock.Mock", 0.29788891722991473]], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_delete_instance_without_project_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[363, 4], [374, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_instance", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "self": [["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_get_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[382, 4], [391, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_instance_without_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_project_id": [], "self": [["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.21420851383567724]], "mock_project_id": [["mock.Mock", 0.21420851383567724]], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_get_instance_without_project_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[394, 4], [408, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_instances", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "self": [["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_list_instances", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[416, 4], [425, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_instances_without_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_project_id": [], "self": [["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.2951416086132622]], "mock_project_id": [["mock.Mock", 0.2951416086132622]], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_list_instances_without_project_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[428, 4], [442, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_instance", "params": {"mock_get_conn": "", "self": ""}, "params_descr": {"mock_get_conn": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "self": [["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "project_id", "TEST_PROJECT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_update_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[450, 4], [458, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_instance_without_project_id", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [], "mock_project_id": [], "self": [["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.Mock", 0.29578237098512483]], "mock_project_id": [["mock.Mock", 0.29578237098512483]], "self": []}, "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook.test_update_instance_without_project_id", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestCloudMemorystoreWithoutDefaultProjectIdHook", "q_name": "TestCloudMemorystoreWithoutDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[461, 0], [631, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[462, 4], [467, 73]], "fn_var_ln": {"hook": [[467, 12], [467, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "CloudMemorystoreMemcachedHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "CloudMemorystoreMemcachedHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["int", 0.3250856179466078], ["List[int]", 0.25935896696421246], ["List[str]", 0.18451255041216147], ["str", 0.10178254451217379]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[477, 4], [490, 64]], "fn_var_ln": {"result": [[479, 8], [479, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["cloud_memcache", "Instance", "name", "TEST_NAME", "result"]]}, "name": "test_create_instance_when_exists", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "return_value", "cloud_memcache", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20346271377570305]], "self": []}, "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook.test_create_instance_when_exists", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["dict", 0.11174880933914366], ["Dict[str, dict]", 0.09004449285501358]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[500, 4], [543, 64]], "fn_var_ln": {"result": [[508, 8], [508, 14]]}, "fn_var_occur": {"result": [["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "cloud_memcache", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["cloud_memcache", "Instance", "name", "TEST_NAME", "result"]]}, "name": "test_create_instance_when_not_exists", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "side_effect", "NotFound", "cloud_memcache", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "cloud_memcache", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"]], "mock_project_id": [], "self": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20346271377570305]], "self": []}, "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook.test_create_instance_when_not_exists", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["float", 0.15697757219897324], ["int", 0.08809188228367999], ["tests.core.data.json.test_json_repository.DummyEntity", 0.08805742806514202], ["mock._Call", 0.08748458704196109]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[553, 4], [563, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_instance", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.2054526806664061]], "self": []}, "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook.test_delete_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[573, 4], [583, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_instance", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20635539947581893]], "self": []}, "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook.test_get_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[593, 4], [605, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_instances", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "list_instances", "location", "TEST_LOCATION", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [["mock.MagicMock", 0.09830944895963921]], "mock_project_id": [["mock.Mock", 0.20448657829517322]], "self": []}, "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook.test_list_instances", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[615, 4], [631, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_instance", "params": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_get_conn": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_get_conn": [["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "mock_project_id": [], "self": [["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_conn": [], "mock_project_id": [["mock.Mock", 0.20740390751890941]], "self": []}, "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook.test_update_instance", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook", "q_name": "TestCloudMemorystoreMemcachedWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "PropertyMock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "google", "cloud", "exceptions", "NotFound", "google", "cloud", "memcache_v1beta2", "types", "cloud_memcache", "google", "cloud", "redis_v1", "types", "Instance", "airflow", "version", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "cloud_memorystore", "CloudMemorystoreHook", "CloudMemorystoreMemcachedHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "GCP_PROJECT_ID_HOOK_UNIT_TEST", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"TEST_GCP_CONN_ID": [[41, 0], [41, 16]], "TEST_INSTANCE_ID": [[43, 0], [43, 16]], "TEST_LOCATION": [[42, 0], [42, 13]], "TEST_METADATA": [[47, 0], [47, 13]], "TEST_NAME": [[52, 0], [52, 9]], "TEST_NAME_DEFAULT_PROJECT_ID": [[54, 0], [54, 28]], "TEST_PAGE_SIZE": [[48, 0], [48, 14]], "TEST_PARENT": [[51, 0], [51, 11]], "TEST_PARENT_DEFAULT_PROJECT_ID": [[53, 0], [53, 30]], "TEST_PROJECT_ID": [[44, 0], [44, 15]], "TEST_RETRY": [[45, 0], [45, 10]], "TEST_TIMEOUT": [[46, 0], [46, 12]], "TEST_UPDATE_MASK": [[49, 0], [49, 16]], "TEST_UPDATE_MASK_MEMCACHED": [[50, 0], [50, 26]]}, "mod_var_occur": {"TEST_GCP_CONN_ID": [], "TEST_INSTANCE_ID": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_LOCATION": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_METADATA": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "project_id", "TEST_PROJECT_ID"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_NAME": [["mock_get_conn", "return_value", "get_instance", "return_value", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["Instance", "name", "TEST_NAME", "result"], ["mock_get_conn", "return_value", "get_instance", "side_effect", "NotFound", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["Instance", "name", "TEST_NAME", "result"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "return_value", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["Instance", "name", "TEST_NAME", "result"], ["mock_get_conn", "return_value", "get_instance", "side_effect", "NotFound", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["Instance", "name", "TEST_NAME", "result"], ["self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "project_id", "TEST_PROJECT_ID"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "return_value", "cloud_memcache", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["cloud_memcache", "Instance", "name", "TEST_NAME", "result"], ["mock_get_conn", "return_value", "get_instance", "side_effect", "NotFound", "cloud_memcache", "Instance", "name", "TEST_NAME"], ["mock_get_conn", "return_value", "create_instance", "return_value", "result", "return_value", "cloud_memcache", "Instance", "name", "TEST_NAME"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["cloud_memcache", "Instance", "name", "TEST_NAME", "result"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_NAME_DEFAULT_PROJECT_ID": [["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PAGE_SIZE": [["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PARENT": [["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PARENT_DEFAULT_PROJECT_ID": [["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_PROJECT_ID": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "project_id", "TEST_PROJECT_ID"]], "TEST_RETRY": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "project_id", "TEST_PROJECT_ID"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_TIMEOUT": [["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "request", "dict", "name", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "instance", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "request", "dict", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "Instance", "name", "TEST_NAME", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "TEST_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "page_size", "TEST_PAGE_SIZE", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "page_size", "TEST_PAGE_SIZE", "project_id", "None", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "project_id", "TEST_PROJECT_ID"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["result", "self", "hook", "create_instance", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_has_calls", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "mock", "call", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "create_instance", "assert_called_once_with", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME", "labels", "version", "version", "replace", "replace", "instance_id", "TEST_INSTANCE_ID", "metadata", "TEST_METADATA", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT"], ["self", "hook", "delete_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "delete_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "get_instance", "location", "TEST_LOCATION", "instance", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "get_instance", "assert_called_once_with", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "list_instances", "location", "TEST_LOCATION", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "list_instances", "assert_called_once_with", "parent", "TEST_PARENT_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_UPDATE_MASK": [["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "request", "dict", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA", "project_id", "TEST_PROJECT_ID"], ["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK", "instance", "Instance", "name", "TEST_NAME", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]], "TEST_UPDATE_MASK_MEMCACHED": [["self", "hook", "update_instance", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "instance", "cloud_memcache", "Instance", "name", "TEST_NAME", "location", "TEST_LOCATION", "instance_id", "TEST_INSTANCE_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"], ["mock_get_conn", "return_value", "update_instance", "assert_called_once_with", "update_mask", "TEST_UPDATE_MASK_MEMCACHED", "resource", "cloud_memcache", "Instance", "name", "TEST_NAME_DEFAULT_PROJECT_ID", "retry", "TEST_RETRY", "timeout", "TEST_TIMEOUT", "metadata", "TEST_METADATA"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 90}, "session_id": "dL8MpYJ1unYzhl409NA2B1xtAOi9Ng4mcWQCYSxfgx4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_GCP_CONN_ID": "", "TEST_INSTANCE_ID": "", "TEST_LOCATION": "", "TEST_METADATA": "", "TEST_NAME": "", "TEST_NAME_DEFAULT_PROJECT_ID": "", "TEST_PAGE_SIZE": "", "TEST_PARENT": "", "TEST_PARENT_DEFAULT_PROJECT_ID": "", "TEST_PROJECT_ID": "", "TEST_RETRY": "", "TEST_TIMEOUT": "", "TEST_UPDATE_MASK": "", "TEST_UPDATE_MASK_MEMCACHED": ""}, "variables_p": {"TEST_GCP_CONN_ID": [["str", 0.6916622581692238], ["Optional[str]", 0.10947808602664154], ["bool", 0.08516566607705627]], "TEST_INSTANCE_ID": [["str", 0.46890756730554783], ["int", 0.30397098271377093], ["Dict[str, str]", 0.2271214499806813]], "TEST_LOCATION": [["str", 0.36018646126212367], ["Dict[str, float]", 0.14026120539048703], ["Dict[Union[Any, Any, Any], str]", 0.11784928969468952], ["List[str]", 0.10544531025746215], ["Dict[str, Union[dict, str]]", 0.10109394198055288], ["dict", 0.09102483566878539], ["Dict[Any, Tuple[Any, Any, Any]]", 0.0841389557458993]], "TEST_METADATA": [["Dict[str, Union[Any, int]]", 0.18213901864354284], ["str", 0.15205329642271548], ["Dict[str, Union[str, Any]]", 0.09777978302205427], ["Dict[Any, str]", 0.09652089128348759], ["Dict[str, Union[dict, str]]", 0.09546281719405884], ["Dict[str, Union[Any, str]]", 0.09516207272601881], ["Dict[Any, Union[Any, Any]]", 0.09459069643627305], ["Dict[str, float]", 0.0943414808670015], ["Dict[str, Type[Any]]", 0.09194994340484774]], "TEST_NAME": [["str", 0.3377521250565179], ["list", 0.16203723111268437], ["Dict[str, Union[Any, Any]]", 0.0767814908225975], ["Set[str]", 0.07434312924554468]], "TEST_NAME_DEFAULT_PROJECT_ID": [["str", 0.14177568486854678], ["list", 0.10902454498761077], ["Dict[str, str]", 0.09368262283790832], ["Dict[str, Any]", 0.09069160147379018], ["int", 0.08578907005582166]], "TEST_PAGE_SIZE": [["int", 0.7185603586967548], ["List[str]", 0.09306252812266483], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str]", 0.08958682533471697]], "TEST_PARENT": [["str", 0.17973524769464727], ["int", 0.1436794106400969], ["List[Dict[str, Any]]", 0.11872736209506264], ["google.protobuf.reflection.GeneratedProtocolMessageType", 0.08377136395104402], ["Dict[str, str]", 0.08226224560443879]], "TEST_PARENT_DEFAULT_PROJECT_ID": [["str", 0.3588958508360632], ["list", 0.1783007384146842], ["tests.utils.MockCoroutine", 0.11076507699609704], ["int", 0.08792160989384613]], "TEST_PROJECT_ID": [["str", 0.434792061333844], ["Dict[str, str]", 0.19114186421018856], ["int", 0.10615738664110537], ["List[str]", 0.10020124687692465], ["Dict[str, int]", 0.084336945837039], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.08337049510089839]], "TEST_RETRY": [["Dict[str, Union[Any, int]]", 0.18213901864354284], ["str", 0.15205329642271548], ["Dict[str, Union[str, Any]]", 0.09777978302205427], ["Dict[Any, str]", 0.09652089128348759], ["Dict[str, Union[dict, str]]", 0.09546281719405884], ["Dict[str, Union[Any, str]]", 0.09516207272601881], ["Dict[Any, Union[Any, Any]]", 0.09459069643627305], ["Dict[str, float]", 0.0943414808670015], ["Dict[str, Type[Any]]", 0.09194994340484774]], "TEST_TIMEOUT": [["str", 0.2971613337001887], ["Dict[str, Union[float, str]]", 0.21002399693199536], ["Dict[str, str]", 0.1900329429960828], ["Type[Optional[Any]]", 0.11336359808445655], ["Dict[str, Any]", 0.09411268740251974]], "TEST_UPDATE_MASK": [["float", 0.39877868925559057], ["str", 0.23152690708681198], ["Dict[str, str]", 0.18984717574556764], ["int", 0.1798472279120298]], "TEST_UPDATE_MASK_MEMCACHED": [["float", 0.4028372636869297], ["int", 0.2316391376594455], ["str", 0.16714389497817173], ["bool", 0.09942772946664712], ["Dict[str, str]", 0.098951974208806]]}}}