{"error": null, "response": {"classes": [{"cls_lc": [[71, 0], [124, 83]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test GCS url parsing", "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [89, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_gcs_url", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHookHelperFunctions.test_parse_gcs_url", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [103, 102]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_json_from_gcs", "params": {"gcs_hook": "", "json_value": "", "parsed_value": "", "self": "", "temp_file": ""}, "params_descr": {"gcs_hook": "", "json_value": "", "parsed_value": "", "self": "", "temp_file": ""}, "params_occur": {"gcs_hook": [], "json_value": [["temp_file", "return_value", "__enter__", "return_value", "read", "return_value", "json_value"]], "parsed_value": [["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI", "parsed_value"]], "self": [], "temp_file": [["temp_file", "return_value", "__enter__", "return_value", "read", "return_value", "json_value"]]}, "params_p": {"args": [], "gcs_hook": [["bool", 0.42252074088608127]], "json_value": [["str", 0.2881657098515268], ["Optional[int]", 0.11810869221933436], ["tests.conftesStandaloneRedisServer", 0.09429529162226717]], "kwargs": [], "parsed_value": [["str", 0.10006869043802222], ["Callable", 0.09669300805012594]], "self": [], "temp_file": [["str", 0.2881657098515268], ["Optional[int]", 0.11810869221933436], ["tests.conftesStandaloneRedisServer", 0.09429529162226717]]}, "q_name": "TestGCSHookHelperFunctions.test_parse_json_from_gcs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [109, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_json_from_gcs_fail_download", "params": {"gsc_hook": "", "self": ""}, "params_descr": {"gsc_hook": "", "self": ""}, "params_occur": {"gsc_hook": [["gsc_hook", "return_value", "download", "return_value", "side_effect", "GoogleAPICallError"]], "self": []}, "params_p": {"args": [], "gsc_hook": [["tests.async_mock.Mock", 0.877570607612115]], "kwargs": [], "self": []}, "q_name": "TestGCSHookHelperFunctions.test_parse_json_from_gcs_fail_download", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [117, 87]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_json_from_gcs_fail_read_file", "params": {"gcs_hook": "", "self": "", "temp_file": ""}, "params_descr": {"gcs_hook": "", "self": "", "temp_file": ""}, "params_occur": {"gcs_hook": [], "self": [], "temp_file": [["temp_file", "return_value", "__enter__", "return_value", "read", "side_effect", "exception_class"]]}, "params_p": {"args": [], "gcs_hook": [], "kwargs": [], "self": [], "temp_file": [["str", 0.23155428290177948]]}, "q_name": "TestGCSHookHelperFunctions.test_parse_json_from_gcs_fail_read_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[121, 4], [124, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_json_from_gcs_fail_json_loads", "params": {"gcs_hook": "", "self": "", "temp_file": ""}, "params_descr": {"gcs_hook": "", "self": "", "temp_file": ""}, "params_occur": {"gcs_hook": [], "self": [], "temp_file": [["temp_file", "return_value", "__enter__", "return_value", "read", "return_value"]]}, "params_p": {"args": [], "gcs_hook": [], "kwargs": [], "self": [], "temp_file": [["Dict[str, Sequence[str]]", 0.1083149407209536], ["str", 0.10119593513075846]]}, "q_name": "TestGCSHookHelperFunctions.test_parse_json_from_gcs_fail_json_loads", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGCSHookHelperFunctions", "q_name": "TestGCSHookHelperFunctions", "variables": {}, "variables_p": {}}, {"cls_lc": [[127, 0], [166, 50]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[132, 8], [136, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_method", "params": {"_": "", "bucket_name": "", "object_name": "", "object_url": ""}, "params_descr": {"_": "", "bucket_name": "", "object_name": "", "object_url": ""}, "params_occur": {"_": [], "bucket_name": [], "object_name": [], "object_url": [["object_url", "None"]]}, "params_p": {"_": [["int", 0.5088789558275912], ["str", 0.40710316466207297], ["float", 0.08401787951033574]], "args": [], "bucket_name": [["int", 0.5088789558275912], ["str", 0.40710316466207297], ["float", 0.08401787951033574]], "kwargs": [], "object_name": [["int", 0.5088789558275912], ["str", 0.40710316466207297], ["float", 0.08401787951033574]], "object_url": [["str", 0.3385423776036576], ["bytes", 0.30742852078187477], ["Dict[str, Any]", 0.10147625668098179], ["dict", 0.08323400107467245], ["Callable[[], bool]", 0.08106094923999974]], "self": []}, "q_name": "TestFallbackObjectUrlToObjectNameAndBucketName.setup_method.<locals>.test_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [138, 38]], "fn_var_ln": {"assertion_on_body": [[129, 8], [129, 30]], "test_method": [[138, 8], [138, 24]]}, "fn_var_occur": {"assertion_on_body": [], "test_method": [["self", "test_method", "test_method"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "test_method", "test_method"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackObjectUrlToObjectNameAndBucketName.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"assertion_on_body": "", "test_method": ""}, "variables_p": {"assertion_on_body": [["str", 0.44444444442672615], ["int", 0.2222222222532291], ["List[str]", 0.22222222221336307], ["Final", 0.11111111110668154]], "test_method": [["str", 0.30787893175813374], ["int", 0.2015567878512354]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [142, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_url", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "test_method", "None", "object_url"], ["self", "assertion_on_body", "assert_called_once"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackObjectUrlToObjectNameAndBucketName.test_should_url", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [146, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_support_bucket_and_object", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "test_method", "None", "bucket_name", "object_name"], ["self", "assertion_on_body", "assert_called_once"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackObjectUrlToObjectNameAndBucketName.test_should_support_bucket_and_object", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [156, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_raise_exception_on_missing", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "test_method", "None"], ["self", "assertion_on_body", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackObjectUrlToObjectNameAndBucketName.test_should_raise_exception_on_missing", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [166, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_raise_exception_on_mutually_exclusive", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "test_method", "None", "bucket_name", "object_name", "object_url"], ["self", "assertion_on_body", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackObjectUrlToObjectNameAndBucketName.test_should_raise_exception_on_mutually_exclusive", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestFallbackObjectUrlToObjectNameAndBucketName", "q_name": "TestFallbackObjectUrlToObjectNameAndBucketName", "variables": {}, "variables_p": {}}, {"cls_lc": [[169, 0], [912, 79]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [172, 95]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[174, 4], [179, 59]], "fn_var_ln": {"gcs_hook": [[179, 12], [179, 25]]}, "fn_var_occur": {"gcs_hook": [["self", "gcs_hook", "gcs", "GCSHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "gcs", "GCSHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook": ""}, "variables_p": {"gcs_hook": [["int", 0.3250856179466078], ["List[int]", 0.25935896696421246], ["List[str]", 0.18451255041216147], ["simulation.core.common.Resources", 0.12926032016484426], ["str", 0.10178254451217379]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [194, 49]], "fn_var_ln": {"hook": [[188, 8], [188, 12]], "result": [[189, 8], [189, 14]]}, "fn_var_occur": {"hook": [["hook", "gcs", "GCSHook"], ["result", "hook", "get_conn"]], "result": [["result", "hook", "get_conn"], ["mock_client", "return_value", "result"]]}, "name": "test_storage_client_creation", "params": {"mock_client": "", "mock_get_connection": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_descr": {"mock_client": "", "mock_get_connection": "", "mock_get_creds_and_project_id": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "client_info", "CLIENT_INFO", "credentials", "project"], ["mock_client", "return_value", "result"]], "mock_get_connection": [], "mock_get_creds_and_project_id": [], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_client": [], "mock_get_connection": [["mock.Mock", 0.367968835883676]], "mock_get_creds_and_project_id": [["mock.Mock", 0.367968835883676]], "self": []}, "q_name": "TestGCSHook.test_storage_client_creation", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "result": ""}, "variables_p": {"hook": [["Tuple[Any, Literal]", 0.13585980782983795], ["List[str]", 0.10240190023681126], ["cirq.google.engine.engine_job.EngineJob", 0.09609119480770721]], "result": [["Dict[str, Any]", 0.13485052812899995], ["Dict[str, Union[Any, Any]]", 0.12637979365771618], ["dict", 0.09456060845784191], ["Optional[bytes]", 0.08736973632033983], ["Dict[Any, Dict[str, str]]", 0.08391608845117093], ["mock.Mock", 0.07906634183721525], ["Type[Callable[..., Any]]", 0.076975510073966]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[197, 4], [214, 66]], "fn_var_ln": {"blob_object": [[203, 8], [203, 19]], "bucket_mock": [[202, 8], [202, 19]], "exists_method": [[204, 8], [204, 21]], "response": [[208, 8], [208, 16]], "return_value": [[205, 8], [205, 34]], "test_bucket": [[198, 8], [198, 19]], "test_object": [[199, 8], [199, 19]]}, "fn_var_occur": {"blob_object": [["blob_object", "bucket_mock", "return_value", "blob"], ["exists_method", "blob_object", "return_value", "exists"], ["blob_object", "assert_called_once_with", "blob_name", "test_object"]], "bucket_mock": [["bucket_mock", "mock_service", "return_value", "bucket"], ["blob_object", "bucket_mock", "return_value", "blob"], ["bucket_mock", "assert_called_once_with", "test_bucket"]], "exists_method": [["exists_method", "blob_object", "return_value", "exists"], ["exists_method", "return_value", "True"], ["exists_method", "assert_called_once_with", "retry", "DEFAULT_RETRY"]], "response": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"]], "return_value": [["bucket_mock", "mock_service", "return_value", "bucket"], ["blob_object", "bucket_mock", "return_value", "blob"], ["exists_method", "blob_object", "return_value", "exists"], ["exists_method", "return_value", "True"]], "test_bucket": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"], ["bucket_mock", "assert_called_once_with", "test_bucket"]], "test_object": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"], ["blob_object", "assert_called_once_with", "blob_name", "test_object"]]}, "name": "test_exists", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["bucket_mock", "mock_service", "return_value", "bucket"]], "self": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.MagicMock", 0.13060882165275844]], "self": []}, "q_name": "TestGCSHook.test_exists", "ret_exprs": [], "ret_type": "", "variables": {"blob_object": "", "bucket_mock": "", "exists_method": "", "response": "", "return_value": "", "test_bucket": "", "test_object": ""}, "variables_p": {"blob_object": [["str", 0.9999999999999999]], "bucket_mock": [["tests.utils.MockProvider", 0.2057924146233889], ["mock.Mock", 0.11668943756057869], ["list", 0.09168177018770923], ["Dict[str, str]", 0.0873639799981673], ["mode.utils.mocks.Mock", 0.08248018655137698], ["str", 0.08118342535592506]], "exists_method": [["Dict[str, str]", 0.1900370325034746], ["Dict[str, int]", 0.10761041215090845], ["Dict[str, List[Any]]", 0.09770087558073094], ["List[str]", 0.09289928675590485], ["list", 0.07826404416189822]], "response": [["Dict[str, str]", 0.8334560290634234], ["str", 0.16654397093657672]], "return_value": [["str", 0.17737941617358183], ["Optional[bytes]", 0.09779182843788492], ["list", 0.08226717892196257], ["Dict[str, int]", 0.0819245066303943]], "test_bucket": [["str", 0.5895118440501268], ["Dict[str, str]", 0.11140498905389942], ["Set[str]", 0.10797046618906715], ["int", 0.10336777762025284], ["List[Dict[str, str]]", 0.08774492308665381]], "test_object": [["str", 0.2949734357706546], ["Dict[str, Union[Any, str]]", 0.18481945650693107], ["Dict[str, str]", 0.08536708685159293], ["Dict[str, List[str]]", 0.08151869628950792]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[217, 4], [231, 27]], "fn_var_ln": {"blob_object": [[223, 8], [223, 19]], "bucket_mock": [[222, 8], [222, 19]], "exists_method": [[224, 8], [224, 21]], "response": [[228, 8], [228, 16]], "return_value": [[225, 8], [225, 34]], "test_bucket": [[218, 8], [218, 19]], "test_object": [[219, 8], [219, 19]]}, "fn_var_occur": {"blob_object": [["blob_object", "bucket_mock", "return_value", "blob"], ["exists_method", "blob_object", "return_value", "exists"]], "bucket_mock": [["bucket_mock", "mock_service", "return_value", "bucket"], ["blob_object", "bucket_mock", "return_value", "blob"]], "exists_method": [["exists_method", "blob_object", "return_value", "exists"], ["exists_method", "return_value", "False"]], "response": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"]], "return_value": [["bucket_mock", "mock_service", "return_value", "bucket"], ["blob_object", "bucket_mock", "return_value", "blob"], ["exists_method", "blob_object", "return_value", "exists"], ["exists_method", "return_value", "False"]], "test_bucket": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"]], "test_object": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "name": "test_exists_nonexisting_object", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["bucket_mock", "mock_service", "return_value", "bucket"]], "self": [["response", "self", "gcs_hook", "exists", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.MagicMock", 0.13060882165275844]], "self": []}, "q_name": "TestGCSHook.test_exists_nonexisting_object", "ret_exprs": [], "ret_type": "", "variables": {"blob_object": "", "bucket_mock": "", "exists_method": "", "response": "", "return_value": "", "test_bucket": "", "test_object": ""}, "variables_p": {"blob_object": [["str", 0.507104429890742], ["Dict[str, Union[Any, Any]]", 0.16904410942866535], ["Dict[str, Dict[str, Any]]", 0.11099783324455852]], "bucket_mock": [["tests.utils.MockProvider", 0.20090526717893584], ["mock.Mock", 0.12085189691869144], ["list", 0.10190513446950465], ["Dict[str, str]", 0.0850070164564025], ["mode.utils.mocks.Mock", 0.08022177904492955]], "exists_method": [["Dict[str, datetime.datetime]", 0.37052777416230664], ["List[str]", 0.10339240761233043], ["Dict[str, Dict[str, str]]", 0.09606660120290335], ["str", 0.0957149210136733]], "response": [["Dict[str, str]", 0.8334560290634234], ["str", 0.16654397093657672]], "return_value": [["str", 0.17737941617358183], ["Optional[bytes]", 0.09779182843788492], ["list", 0.08226717892196257], ["Dict[str, int]", 0.0819245066303943]], "test_bucket": [["str", 0.7828925836556182], ["int", 0.11432719348333717]], "test_object": [["str", 0.3041003911435792], ["Set[str]", 0.29511989148556006], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.10269000559662991], ["Dict[str, Dict[str, Any]]", 0.10124254018451477], ["Dict[str, Tuple[Any, Any]]", 0.09937230169327935], ["Dict[str, bool]", 0.09747486989643686]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[234, 4], [249, 23]], "fn_var_ln": {"response": [[244, 8], [244, 16]], "test_bucket": [[235, 8], [235, 19]], "test_object": [[236, 8], [236, 19]]}, "fn_var_occur": {"response": [["response", "self", "gcs_hook", "is_updated_after", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]], "test_bucket": [["response", "self", "gcs_hook", "is_updated_after", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]], "test_object": [["response", "self", "gcs_hook", "is_updated_after", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]]}, "name": "test_is_updated_after", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "return_value", "get_blob", "return_value", "updated", "datetime", "dateutil", "tz", "tzutc"]], "self": [["response", "self", "gcs_hook", "is_updated_after", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_is_updated_after", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "test_bucket": "", "test_object": ""}, "variables_p": {"response": [["Dict[str, str]", 0.32281186773658094], ["List[str]", 0.11703685736932616], ["Dict[str, Type[Any]]", 0.08521808038029495], ["dict", 0.08521808038029495]], "test_bucket": [["List[str]", 0.398092780256947], ["str", 0.2869632159611917], ["Dict[str, Dict[str, Any]]", 0.11019201724853755], ["Dict[str, str]", 0.10586894737205269]], "test_object": [["Dict[str, Union[Any, str]]", 0.18066902130611406], ["str", 0.12246857078871956], ["Dict[str, Union[Any, bool]]", 0.11089392195946647], ["Dict[str, Union[Any, Any]]", 0.10971320191609021], ["Dict[str, str]", 0.10964043527660616], ["Dict[str, Tuple[Any, Any]]", 0.10103597787457619], ["Dict[str, Union[Any, float, str]]", 0.0928523864604315], ["Dict[str, Union[Any, Any, Any]]", 0.08679801281996288], ["Dict[str, Union[Any, Any, str]]", 0.08592847159803282]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [267, 23]], "fn_var_ln": {"response": [[262, 8], [262, 16]], "test_bucket": [[253, 8], [253, 19]], "test_object": [[254, 8], [254, 19]]}, "fn_var_occur": {"response": [["response", "self", "gcs_hook", "is_updated_before", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]], "test_bucket": [["response", "self", "gcs_hook", "is_updated_before", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]], "test_object": [["response", "self", "gcs_hook", "is_updated_before", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]]}, "name": "test_is_updated_before", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "return_value", "get_blob", "return_value", "updated", "datetime", "dateutil", "tz", "tzutc"]], "self": [["response", "self", "gcs_hook", "is_updated_before", "bucket_name", "test_bucket", "object_name", "test_object", "ts", "datetime"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_is_updated_before", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "test_bucket": "", "test_object": ""}, "variables_p": {"response": [["Dict[str, str]", 0.32281186773658094], ["List[str]", 0.11703685736932616], ["Dict[str, Type[Any]]", 0.08521808038029495], ["dict", 0.08521808038029495]], "test_bucket": [["List[str]", 0.398092780256947], ["str", 0.2869632159611917], ["Dict[str, Dict[str, Any]]", 0.11019201724853755], ["Dict[str, str]", 0.10586894737205269]], "test_object": [["Dict[str, Union[Any, str]]", 0.18066902130611406], ["str", 0.12246857078871956], ["Dict[str, Union[Any, bool]]", 0.11089392195946647], ["Dict[str, Union[Any, Any]]", 0.10971320191609021], ["Dict[str, str]", 0.10964043527660616], ["Dict[str, Tuple[Any, Any]]", 0.10103597787457619], ["Dict[str, Union[Any, float, str]]", 0.0928523864604315], ["Dict[str, Union[Any, Any, Any]]", 0.08679801281996288], ["Dict[str, Union[Any, Any, str]]", 0.08592847159803282]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[270, 4], [288, 23]], "fn_var_ln": {"response": [[280, 8], [280, 16]], "test_bucket": [[271, 8], [271, 19]], "test_object": [[272, 8], [272, 19]]}, "fn_var_occur": {"response": [["response", "self", "gcs_hook", "is_updated_between", "bucket_name", "test_bucket", "object_name", "test_object", "min_ts", "datetime", "max_ts", "datetime"]], "test_bucket": [["response", "self", "gcs_hook", "is_updated_between", "bucket_name", "test_bucket", "object_name", "test_object", "min_ts", "datetime", "max_ts", "datetime"]], "test_object": [["response", "self", "gcs_hook", "is_updated_between", "bucket_name", "test_bucket", "object_name", "test_object", "min_ts", "datetime", "max_ts", "datetime"]]}, "name": "test_is_updated_between", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "return_value", "get_blob", "return_value", "updated", "datetime", "dateutil", "tz", "tzutc"]], "self": [["response", "self", "gcs_hook", "is_updated_between", "bucket_name", "test_bucket", "object_name", "test_object", "min_ts", "datetime", "max_ts", "datetime"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_is_updated_between", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "test_bucket": "", "test_object": ""}, "variables_p": {"response": [["Dict[str, str]", 0.41122819747993045], ["str", 0.27999896415341236], ["List[str]", 0.10345417760099965]], "test_bucket": [["str", 0.6976058769848983], ["Dict[str, Union[Any, Any, Any]]", 0.1087111484917094], ["Dict[str, list]", 0.1087111484917094]], "test_object": [["str", 0.4116369734148933], ["Dict[str, str]", 0.11213629299379997], ["Dict[str, Union[Any, bool]]", 0.10274968507739443], ["Dict[str, Union[Any, Any]]", 0.09733555036675069], ["Dict[str, Dict[str, Any]]", 0.08589986609522653]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 4], [306, 23]], "fn_var_ln": {"response": [[301, 8], [301, 16]], "test_bucket": [[292, 8], [292, 19]], "test_object": [[293, 8], [293, 19]]}, "fn_var_occur": {"response": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]], "test_bucket": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]], "test_object": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]]}, "name": "test_is_older_than_with_true_cond", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "return_value", "get_blob", "return_value", "updated", "datetime", "dateutil", "tz", "tzutc"]], "self": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_is_older_than_with_true_cond", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "test_bucket": "", "test_object": ""}, "variables_p": {"response": [["str", 0.43676068024221093], ["Dict[str, str]", 0.27514588338518015], ["Dict[str, Dict[str, str]]", 0.17999287429493085]], "test_bucket": [["str", 0.7916749346452323], ["Dict[str, str]", 0.08306704403905178]], "test_object": [["str", 0.5232059221249153], ["Dict[str, Dict[str, Any]]", 0.19448312090012548], ["Dict[str, Tuple[Any, Any]]", 0.09324928700508181]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[309, 4], [323, 27]], "fn_var_ln": {"response": [[319, 8], [319, 16]], "test_bucket": [[310, 8], [310, 19]], "test_object": [[311, 8], [311, 19]]}, "fn_var_occur": {"response": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]], "test_bucket": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]], "test_object": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]]}, "name": "test_is_older_than_with_false_cond", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "return_value", "get_blob", "return_value", "updated", "timezone", "utcnow", "timedelta", "days"]], "self": [["response", "self", "gcs_hook", "is_older_than", "bucket_name", "test_bucket", "object_name", "test_object", "seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_is_older_than_with_false_cond", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "test_bucket": "", "test_object": ""}, "variables_p": {"response": [["str", 0.43676068024221093], ["Dict[str, str]", 0.27514588338518015], ["Dict[str, Dict[str, str]]", 0.17999287429493085]], "test_bucket": [["str", 0.7916749346452323], ["Dict[str, str]", 0.08306704403905178]], "test_object": [["str", 0.5232059221249153], ["Dict[str, Dict[str, Any]]", 0.19448312090012548], ["Dict[str, Tuple[Any, Any]]", 0.09324928700508181]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[327, 4], [355, 9]], "fn_var_ln": {"bucket_mock": [[338, 8], [338, 19]], "copy_method": [[340, 8], [340, 19]], "destination_blob": [[335, 8], [335, 24]], "destination_bucket": [[330, 8], [330, 26]], "destination_bucket_instance": [[333, 8], [333, 35]], "destination_object": [[331, 8], [331, 26]], "response": [[344, 8], [344, 16]], "return_value": [[341, 8], [341, 32]], "source_blob": [[334, 8], [334, 19]], "source_bucket": [[328, 8], [328, 21]], "source_object": [[329, 8], [329, 21]]}, "fn_var_occur": {"bucket_mock": [["bucket_mock", "mock_service", "return_value", "bucket"], ["bucket_mock", "return_value", "mock_bucket"], ["copy_method", "bucket_mock", "return_value", "copy_blob"]], "copy_method": [["copy_method", "bucket_mock", "return_value", "copy_blob"], ["copy_method", "return_value", "destination_blob"], ["copy_method", "assert_called_once_with", "blob", "source_blob", "destination_bucket", "destination_bucket_instance", "new_name", "destination_object"]], "destination_blob": [["destination_blob", "storage", "Blob", "bucket", "destination_bucket_instance", "name", "destination_object"], ["copy_method", "return_value", "destination_blob"]], "destination_bucket": [["response", "self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"], ["copy_method", "assert_called_once_with", "blob", "source_blob", "destination_bucket", "destination_bucket_instance", "new_name", "destination_object"]], "destination_bucket_instance": [["destination_bucket_instance", "mock_bucket"], ["destination_blob", "storage", "Blob", "bucket", "destination_bucket_instance", "name", "destination_object"], ["copy_method", "assert_called_once_with", "blob", "source_blob", "destination_bucket", "destination_bucket_instance", "new_name", "destination_object"]], "destination_object": [["destination_blob", "storage", "Blob", "bucket", "destination_bucket_instance", "name", "destination_object"], ["response", "self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"], ["copy_method", "assert_called_once_with", "blob", "source_blob", "destination_bucket", "destination_bucket_instance", "new_name", "destination_object"]], "response": [["response", "self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"], ["response", "None"]], "return_value": [["bucket_mock", "mock_service", "return_value", "bucket"], ["bucket_mock", "return_value", "mock_bucket"], ["copy_method", "bucket_mock", "return_value", "copy_blob"], ["copy_method", "return_value", "destination_blob"]], "source_blob": [["source_blob", "mock_bucket", "blob", "source_object"], ["copy_method", "assert_called_once_with", "blob", "source_blob", "destination_bucket", "destination_bucket_instance", "new_name", "destination_object"]], "source_bucket": [["response", "self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_object": [["source_blob", "mock_bucket", "blob", "source_object"], ["response", "self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "name": "test_copy", "params": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_descr": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_occur": {"mock_bucket": [["destination_bucket_instance", "mock_bucket"], ["source_blob", "mock_bucket", "blob", "source_object"], ["bucket_mock", "return_value", "mock_bucket"]], "mock_service": [["bucket_mock", "mock_service", "return_value", "bucket"]], "self": [["response", "self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_bucket": [["mock.Mock", 0.20900314004410367]], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_copy", "ret_exprs": [], "ret_type": "", "variables": {"bucket_mock": "", "copy_method": "", "destination_blob": "", "destination_bucket": "", "destination_bucket_instance": "", "destination_object": "", "response": "", "return_value": "", "source_blob": "", "source_bucket": "", "source_object": ""}, "variables_p": {"bucket_mock": [["tests.utils.MockProvider", 0.2336770727129124], ["Dict[str, Tuple[str, Any]]", 0.167395260029079], ["datetime.datetime.datetime", 0.10655851888470198], ["mock.Mock", 0.10389411630123298], ["mode.utils.mocks.Mock", 0.10154338107313482], ["Dict[str, int]", 0.08424241996591808]], "copy_method": [["str", 0.32428690200636456], ["List[Dict[str, Any]]", 0.10569725282539144], ["Dict[str, Union[Any, Any, Any]]", 0.0932093645869279], ["Dict[str, int]", 0.09180054062256461], ["list", 0.08809990881099423]], "destination_blob": [["List[Dict[str, Any]]", 0.1790083801110767], ["str", 0.1026416068099313], ["dict", 0.09199481547599142]], "destination_bucket": [["list", 0.7032892813865586], ["str", 0.11316313875525115], ["int", 0.09335971577692319]], "destination_bucket_instance": [["str", 0.5029825775838211], ["bool", 0.09529732838798839], ["tuple", 0.09402158364991528]], "destination_object": [["Dict[str, str]", 0.09047958628294756], ["str", 0.08955906975557537]], "response": [["list", 0.5498702664778542], ["dict", 0.17275887576018625], ["DefaultDict[Any, List[Any]]", 0.0861913550702405], ["int", 0.07752860951879627]], "return_value": [["Dict[str, int]", 0.12462322514237589], ["Optional[bytes]", 0.11273533301343615], ["mode.utils.mocks.Mock", 0.08622154925717186], ["tests.utils.MockCoroutine", 0.08413730222373095]], "source_blob": [["str", 0.47276000340930335], ["List[str]", 0.2459821429775336], ["Optional[str]", 0.19593868022224573], ["Tuple[str, str]", 0.0853191733909175]], "source_bucket": [["list", 0.6482903850993427], ["raiden.utils.List[EventID]", 0.13312610975973843], ["Dict[str, str]", 0.1146544599618652], ["int", 0.10392904517905394]], "source_object": [["str", 0.47940971892575046], ["List[int]", 0.12395605299226312], ["io.StringIO", 0.09300893421969236]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[357, 4], [377, 9]], "fn_var_ln": {"destination_bucket": [[360, 8], [360, 26]], "destination_object": [[361, 8], [361, 26]], "source_bucket": [[358, 8], [358, 21]], "source_object": [[359, 8], [359, 21]]}, "fn_var_occur": {"destination_bucket": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "destination_object": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_bucket": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"], ["str", "ctx", "value", "format", "source_bucket", "source_object"]], "source_object": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"], ["str", "ctx", "value", "format", "source_bucket", "source_object"]]}, "name": "test_copy_fail_same_source_and_destination", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.test_copy_fail_same_source_and_destination", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "destination_object": "", "source_bucket": "", "source_object": ""}, "variables_p": {"destination_bucket": [["str", 0.7420781663638661], ["int", 0.16627516406079126], ["Dict[str, Union[int, str]]", 0.09164666957534262]], "destination_object": [["int", 0.3394421184561934], ["str", 0.2833035911814034], ["datetime.datetime", 0.1895069984682965], ["dict", 0.09437879583286933], ["bool", 0.09336849606123725]], "source_bucket": [["str", 0.6772458946989631], ["Optional[str]", 0.22471383907224998], ["Dict[str, str]", 0.09804026622878684]], "source_object": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[379, 4], [393, 83]], "fn_var_ln": {"destination_bucket": [[382, 8], [382, 26]], "destination_object": [[383, 8], [383, 26]], "source_bucket": [[380, 8], [380, 21]], "source_object": [[381, 8], [381, 21]]}, "fn_var_occur": {"destination_bucket": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "destination_object": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_bucket": [["source_bucket", "None"], ["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_object": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "name": "test_copy_empty_source_bucket", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.test_copy_empty_source_bucket", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "destination_object": "", "source_bucket": "", "source_object": ""}, "variables_p": {"destination_bucket": [["str", 0.7420781663638661], ["int", 0.16627516406079126], ["Dict[str, Union[int, str]]", 0.09164666957534262]], "destination_object": [["int", 0.3394421184561934], ["str", 0.2833035911814034], ["datetime.datetime", 0.1895069984682965], ["dict", 0.09437879583286933], ["bool", 0.09336849606123725]], "source_bucket": [["str", 0.3092186773909984], ["set", 0.09831918957745607], ["bytes", 0.09821095458889201], ["Optional[bytes]", 0.09327665507670957]], "source_object": [["str", 0.9117536024418823], ["int", 0.08824639755811757]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[395, 4], [409, 83]], "fn_var_ln": {"destination_bucket": [[398, 8], [398, 26]], "destination_object": [[399, 8], [399, 26]], "source_bucket": [[396, 8], [396, 21]], "source_object": [[397, 8], [397, 21]]}, "fn_var_occur": {"destination_bucket": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "destination_object": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_bucket": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_object": [["source_object", "None"], ["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "name": "test_copy_empty_source_object", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "copy", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.test_copy_empty_source_object", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "destination_object": "", "source_bucket": "", "source_object": ""}, "variables_p": {"destination_bucket": [["str", 0.7420781663638661], ["int", 0.16627516406079126], ["Dict[str, Union[int, str]]", 0.09164666957534262]], "destination_object": [["int", 0.3394421184561934], ["str", 0.2833035911814034], ["datetime.datetime", 0.1895069984682965], ["dict", 0.09437879583286933], ["bool", 0.09336849606123725]], "source_bucket": [["str", 0.9999999999999998]], "source_object": [["Dict[str, Type[Any]]", 0.11486442669938493], ["Dict[str, Set[int]]", 0.10398312272923475], ["str", 0.10147506856424585], ["Dict[Any, Tuple[str, str]]", 0.09703001049934917], ["int", 0.09572122087171969], ["set", 0.08952587183557048], ["list", 0.08463622084058113]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[413, 4], [438, 66]], "fn_var_ln": {"bucket_mock": [[422, 8], [422, 19]], "destination_bucket": [[416, 8], [416, 26]], "destination_object": [[417, 8], [417, 26]], "get_blob_method": [[424, 8], [424, 23]], "response": [[429, 8], [429, 16]], "return_value": [[423, 8], [423, 32]], "rewrite_method": [[425, 8], [425, 22]], "side_effect": [[426, 8], [426, 34]], "source_blob": [[419, 8], [419, 19]], "source_bucket": [[414, 8], [414, 21]], "source_object": [[415, 8], [415, 21]]}, "fn_var_occur": {"bucket_mock": [["bucket_mock", "mock_service", "return_value", "bucket"], ["bucket_mock", "return_value", "mock_bucket"], ["get_blob_method", "bucket_mock", "return_value", "blob"]], "destination_bucket": [["response", "self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "destination_object": [["response", "self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "get_blob_method": [["get_blob_method", "bucket_mock", "return_value", "blob"], ["rewrite_method", "get_blob_method", "return_value", "rewrite"]], "response": [["response", "self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"], ["response", "None"]], "return_value": [["bucket_mock", "mock_service", "return_value", "bucket"], ["bucket_mock", "return_value", "mock_bucket"], ["get_blob_method", "bucket_mock", "return_value", "blob"], ["rewrite_method", "get_blob_method", "return_value", "rewrite"]], "rewrite_method": [["rewrite_method", "get_blob_method", "return_value", "rewrite"], ["rewrite_method", "side_effect", "None", "mock", "ANY", "mock", "ANY", "mock", "ANY", "mock", "ANY", "mock", "ANY"], ["rewrite_method", "assert_called_once_with", "source", "source_blob"]], "side_effect": [["rewrite_method", "side_effect", "None", "mock", "ANY", "mock", "ANY", "mock", "ANY", "mock", "ANY", "mock", "ANY"]], "source_blob": [["source_blob", "mock_bucket", "blob", "source_object"], ["rewrite_method", "assert_called_once_with", "source", "source_blob"]], "source_bucket": [["response", "self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_object": [["source_blob", "mock_bucket", "blob", "source_object"], ["response", "self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "name": "test_rewrite", "params": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_descr": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_occur": {"mock_bucket": [["source_blob", "mock_bucket", "blob", "source_object"], ["bucket_mock", "return_value", "mock_bucket"]], "mock_service": [["bucket_mock", "mock_service", "return_value", "bucket"]], "self": [["response", "self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_bucket": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_rewrite", "ret_exprs": [], "ret_type": "", "variables": {"bucket_mock": "", "destination_bucket": "", "destination_object": "", "get_blob_method": "", "response": "", "return_value": "", "rewrite_method": "", "side_effect": "", "source_blob": "", "source_bucket": "", "source_object": ""}, "variables_p": {"bucket_mock": [["tests.utils.MockProvider", 0.21975658911915516], ["Dict[str, Tuple[str, Any]]", 0.17336069170570184], ["datetime.datetime.datetime", 0.11571934615769557], ["mode.utils.mocks.Mock", 0.10659750754212151], ["mock.Mock", 0.10120996411279132], ["mock._Call", 0.08413210026248889]], "destination_bucket": [["list", 0.813167765932586], ["Dict[int, List[Any]]", 0.09551874059380887], ["int", 0.0913134934736051]], "destination_object": [["list", 0.6159982657998708], ["List[Union[Any, Any]]", 0.10558385588964105], ["Dict[str, Any]", 0.09957874334563283], ["Anaconda3.Lib.site-packages.astropy.io.fits.verify._ErrList", 0.08883207783268306]], "get_blob_method": [["str", 0.9400004922289518], ["Dict[str, str]", 0.05999950777104819]], "response": [["list", 0.6581600543988397], ["DefaultDict[Any, List[Any]]", 0.08995680982637466], ["dict", 0.08065366926764943], ["Dict[Any, int]", 0.07930105159900083]], "return_value": [["Dict[str, int]", 0.12079974835148806], ["Optional[bytes]", 0.11104195425170939], ["mode.utils.mocks.Mock", 0.08543656342772693], ["mock._Call", 0.08354950053110126]], "rewrite_method": [["int", 0.3703666710182721], ["Dict[str, Union[Any, Any, Any]]", 0.20500028751836558], ["Dict[str, Optional[str]]", 0.11729351496921561], ["Dict[str, str]", 0.11729351496921561], ["List[List[Any]]", 0.09502300576246561], ["Dict[str, Any]", 0.09502300576246561]], "side_effect": [["list", 0.28142105393487954], ["int", 0.09101189484108567]], "source_blob": [["Dict[str, Any]", 0.21399269666111637], ["str", 0.19100355395728102], ["int", 0.1802145229820707], ["List[str]", 0.08251618969064033]], "source_bucket": [["list", 0.5827583881140341], ["int", 0.10738465491970803], ["Dict[str, str]", 0.10375930656397704], ["raiden.utils.List[EventID]", 0.10344405081791401], ["str", 0.10265359958436693]], "source_object": [["str", 0.4772863688029465], ["List[int]", 0.12459939690270279], ["io.StringIO", 0.0935363062035928], ["dict", 0.0894901234900176]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[440, 4], [454, 83]], "fn_var_ln": {"destination_bucket": [[443, 8], [443, 26]], "destination_object": [[444, 8], [444, 26]], "source_bucket": [[441, 8], [441, 21]], "source_object": [[442, 8], [442, 21]]}, "fn_var_occur": {"destination_bucket": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "destination_object": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_bucket": [["source_bucket", "None"], ["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_object": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "name": "test_rewrite_empty_source_bucket", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.test_rewrite_empty_source_bucket", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "destination_object": "", "source_bucket": "", "source_object": ""}, "variables_p": {"destination_bucket": [["str", 0.40589287656579576], ["int", 0.40322773888250163]], "destination_object": [["str", 0.373141252321777], ["int", 0.3355451114369198], ["Dict[str, str]", 0.10834041319532509], ["geode.models.common.Address", 0.09170375853627202]], "source_bucket": [["str", 0.21281200693202265], ["dict", 0.17402797047994845], ["list", 0.12113538213889513], ["raiden.utils.TokenNetworkAddress", 0.1031770821525868], ["set", 0.08931574007515221]], "source_object": [["str", 0.47873991148735173], ["int", 0.2281228769258136], ["Optional[str]", 0.1105883868520988], ["List[int]", 0.0903037006605892]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[456, 4], [470, 83]], "fn_var_ln": {"destination_bucket": [[459, 8], [459, 26]], "destination_object": [[460, 8], [460, 26]], "source_bucket": [[457, 8], [457, 21]], "source_object": [[458, 8], [458, 21]]}, "fn_var_occur": {"destination_bucket": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "destination_object": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_bucket": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]], "source_object": [["source_object", "None"], ["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "name": "test_rewrite_empty_source_object", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "rewrite", "source_bucket", "source_bucket", "source_object", "source_object", "destination_bucket", "destination_bucket", "destination_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.test_rewrite_empty_source_object", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "destination_object": "", "source_bucket": "", "source_object": ""}, "variables_p": {"destination_bucket": [["str", 0.40589287656579576], ["int", 0.40322773888250163]], "destination_object": [["str", 0.373141252321777], ["int", 0.3355451114369198], ["Dict[str, str]", 0.10834041319532509], ["geode.models.common.Address", 0.09170375853627202]], "source_bucket": [["str", 0.5356004232123968], ["bool", 0.11721112928490612], ["int", 0.08657439979990071]], "source_object": [["str", 0.10831238513823266], ["Dict[str, Type[Any]]", 0.10106856150894424], ["int", 0.10079155476944845], ["Dict[Any, Tuple[str, str]]", 0.09566387767791236], ["list", 0.09478282378807733], ["Dict[str, Set[int]]", 0.0935556064054587], ["set", 0.09212886280512363], ["Generator[Any, None, None]", 0.09093213901928154]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[474, 4], [485, 31]], "fn_var_ln": {"blob_to_be_deleted": [[477, 8], [477, 26]], "delete_method": [[481, 8], [481, 21]], "get_blob_method": [[480, 8], [480, 23]], "get_bucket_method": [[479, 8], [479, 25]], "response": [[484, 8], [484, 16]], "return_value": [[482, 8], [482, 34]], "test_bucket": [[475, 8], [475, 19]], "test_object": [[476, 8], [476, 19]]}, "fn_var_occur": {"blob_to_be_deleted": [["blob_to_be_deleted", "storage", "Blob", "name", "test_object", "bucket", "mock_bucket"], ["delete_method", "return_value", "blob_to_be_deleted"]], "delete_method": [["delete_method", "get_blob_method", "return_value", "delete"], ["delete_method", "return_value", "blob_to_be_deleted"]], "get_blob_method": [["get_blob_method", "get_bucket_method", "return_value", "get_blob"], ["delete_method", "get_blob_method", "return_value", "delete"]], "get_bucket_method": [["get_bucket_method", "mock_service", "return_value", "get_bucket"], ["get_blob_method", "get_bucket_method", "return_value", "get_blob"]], "response": [["response", "self", "gcs_hook", "delete", "bucket_name", "test_bucket", "object_name", "test_object"], ["response", "None"]], "return_value": [["get_bucket_method", "mock_service", "return_value", "get_bucket"], ["get_blob_method", "get_bucket_method", "return_value", "get_blob"], ["delete_method", "get_blob_method", "return_value", "delete"], ["delete_method", "return_value", "blob_to_be_deleted"]], "test_bucket": [["response", "self", "gcs_hook", "delete", "bucket_name", "test_bucket", "object_name", "test_object"]], "test_object": [["blob_to_be_deleted", "storage", "Blob", "name", "test_object", "bucket", "mock_bucket"], ["response", "self", "gcs_hook", "delete", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "name": "test_delete", "params": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_descr": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_occur": {"mock_bucket": [["blob_to_be_deleted", "storage", "Blob", "name", "test_object", "bucket", "mock_bucket"]], "mock_service": [["get_bucket_method", "mock_service", "return_value", "get_bucket"]], "self": [["response", "self", "gcs_hook", "delete", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_bucket": [], "mock_service": [["mock.MagicMock", 0.08264641047288049]], "self": []}, "q_name": "TestGCSHook.test_delete", "ret_exprs": [], "ret_type": "", "variables": {"blob_to_be_deleted": "", "delete_method": "", "get_blob_method": "", "get_bucket_method": "", "response": "", "return_value": "", "test_bucket": "", "test_object": ""}, "variables_p": {"blob_to_be_deleted": [["Dict[str, Union[int, str]]", 0.5185752745109384], ["str", 0.3840399557960177], ["Dict[str, Union[Any, str]]", 0.0973847696930438]], "delete_method": [["int", 0.31550635099460567], ["str", 0.1774861680198476], ["Dict[str, Dict[str, Any]]", 0.11340666668933093]], "get_blob_method": [["int", 0.36218380638049397], ["str", 0.17249054494195482], ["Dict[str, List[Any]]", 0.11701346526015491], ["Dict[str, str]", 0.10189903812997358]], "get_bucket_method": [["dict", 0.2298030042706236], ["MutableMapping[str, Any]", 0.17545679498043246], ["mock.Mock", 0.11650437312428304], ["Dict[str, Any]", 0.10757967707160264]], "response": [["str", 0.5216127007411022], ["Dict[str, Dict[str, str]]", 0.1766153408175179], ["Dict[str, str]", 0.1031159615447158]], "return_value": [["str", 0.27596597202565093], ["Dict[str, List[Any]]", 0.21025884082326346], ["Dict[Any, Union[int, str]]", 0.10286170936052402], ["Dict[str, Any]", 0.08664672654393682], ["Dict[str, Union[int, str]]", 0.07986102224107632], ["List[Dict[str, str]]", 0.0783677120367391]], "test_bucket": [["str", 1.0]], "test_object": [["Dict[str, Union[Any, Any, Any]]", 0.2514969621826873], ["Dict[str, Union[Any, Any]]", 0.1940634013865244], ["Dict[str, Union[Any, str]]", 0.17148070983487246], ["str", 0.13583708633701513], ["Dict[Any, Union[bool, str]]", 0.08279984261724811], ["Dict[str, str]", 0.07809789233271795]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[488, 4], [498, 82]], "fn_var_ln": {"blob": [[493, 8], [493, 12]], "bucket_method": [[492, 8], [492, 21]], "delete_method": [[494, 8], [494, 21]], "side_effect": [[495, 8], [495, 33]], "test_bucket": [[489, 8], [489, 19]], "test_object": [[490, 8], [490, 19]]}, "fn_var_occur": {"blob": [["blob", "bucket_method", "return_value", "blob"], ["delete_method", "blob", "return_value", "delete"]], "bucket_method": [["bucket_method", "mock_service", "return_value", "bucket"], ["blob", "bucket_method", "return_value", "blob"]], "delete_method": [["delete_method", "blob", "return_value", "delete"], ["delete_method", "side_effect", "exceptions", "NotFound", "message"]], "side_effect": [["delete_method", "side_effect", "exceptions", "NotFound", "message"]], "test_bucket": [["self", "gcs_hook", "delete", "bucket_name", "test_bucket", "object_name", "test_object"]], "test_object": [["self", "gcs_hook", "delete", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "name": "test_delete_nonexisting_object", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["bucket_method", "mock_service", "return_value", "bucket"]], "self": [["self", "gcs_hook", "delete", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.MagicMock", 0.0784754677094385]], "self": []}, "q_name": "TestGCSHook.test_delete_nonexisting_object", "ret_exprs": [], "ret_type": "", "variables": {"blob": "", "bucket_method": "", "delete_method": "", "side_effect": "", "test_bucket": "", "test_object": ""}, "variables_p": {"blob": [["str", 0.3108874014495128], ["int", 0.14779916093061038], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08851722776829898], ["List[Union[Any, Any, Any]]", 0.08851722776829898], ["bytes", 0.08442953922008829]], "bucket_method": [["str", 0.7410851877570739], ["Dict[str, Union[int, str]]", 0.16067542511560617]], "delete_method": [["int", 0.20870179497005809], ["str", 0.17954339754517773], ["Dict[str, Union[int, str]]", 0.1248777395026467], ["Dict[str, Union[Any, Any]]", 0.10492590236678095], ["dict", 0.10400272948961302], ["List[Dict[str, Any]]", 0.1027797118292134], ["distutils.version.LooseVersion", 0.08776556369915092], ["List[str]", 0.0874031605973593]], "side_effect": [["int", 0.9999999999918893], ["str", 3.706119664248323e-12], ["List[List[int]]", 2.4070789552224675e-12]], "test_bucket": [["str", 0.9140395490441579]], "test_object": [["str", 0.7781932225055862], ["Dict[str, Union[Any, bool]]", 0.11305695997870928], ["bool", 0.10874981751570441]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[501, 4], [507, 81]], "fn_var_ln": {"test_bucket": [[502, 8], [502, 19]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "delete_bucket", "bucket_name", "test_bucket"], ["mock_service", "return_value", "bucket", "assert_called_once_with", "test_bucket"]]}, "name": "test_delete_bucket", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "assert_called_once_with", "test_bucket"], ["mock_service", "return_value", "bucket", "return_value", "delete", "assert_called_once"]], "self": [["self", "gcs_hook", "delete_bucket", "bucket_name", "test_bucket"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_delete_bucket", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": ""}, "variables_p": {"test_bucket": [["str", 0.47426118019261104], ["Dict[str, Union[int, str]]", 0.19799940465592122], ["int", 0.19341800463802766], ["Dict[str, str]", 0.13432141051343993]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[510, 4], [519, 60]], "fn_var_ln": {"test_bucket": [[514, 8], [514, 19]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "delete_bucket", "bucket_name", "test_bucket"], ["mock_service", "return_value", "bucket", "assert_called_once_with", "test_bucket"]]}, "name": "test_delete_nonexisting_bucket", "params": {"caplog": "", "mock_service": "", "self": ""}, "params_descr": {"caplog": "", "mock_service": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "logging", "INFO"], ["caplog", "text"]], "mock_service": [["mock_service", "return_value", "bucket", "return_value", "delete", "side_effect", "exceptions", "NotFound", "message"], ["mock_service", "return_value", "bucket", "assert_called_once_with", "test_bucket"], ["mock_service", "return_value", "bucket", "return_value", "delete", "assert_called_once"]], "self": [["self", "gcs_hook", "delete_bucket", "bucket_name", "test_bucket"]]}, "params_p": {"args": [], "caplog": [["str", 0.10053021030010274]], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_delete_nonexisting_bucket", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": ""}, "variables_p": {"test_bucket": [["str", 0.47426118019261104], ["Dict[str, Union[int, str]]", 0.19799940465592122], ["int", 0.19341800463802766], ["Dict[str, str]", 0.13432141051343993]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[522, 4], [533, 45]], "fn_var_ln": {"bucket_method": [[527, 8], [527, 21]], "get_blob_method": [[528, 8], [528, 23]], "response": [[531, 8], [531, 16]], "returned_file_size": [[525, 8], [525, 26]], "test_bucket": [[523, 8], [523, 19]], "test_object": [[524, 8], [524, 19]]}, "fn_var_occur": {"bucket_method": [["bucket_method", "mock_service", "return_value", "bucket"], ["get_blob_method", "bucket_method", "return_value", "get_blob"]], "get_blob_method": [["get_blob_method", "bucket_method", "return_value", "get_blob"], ["get_blob_method", "return_value", "size", "returned_file_size"]], "response": [["response", "self", "gcs_hook", "get_size", "bucket_name", "test_bucket", "object_name", "test_object"], ["response", "returned_file_size"]], "returned_file_size": [["get_blob_method", "return_value", "size", "returned_file_size"], ["response", "returned_file_size"]], "test_bucket": [["response", "self", "gcs_hook", "get_size", "bucket_name", "test_bucket", "object_name", "test_object"]], "test_object": [["response", "self", "gcs_hook", "get_size", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "name": "test_object_get_size", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["bucket_method", "mock_service", "return_value", "bucket"]], "self": [["response", "self", "gcs_hook", "get_size", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_object_get_size", "ret_exprs": [], "ret_type": "", "variables": {"bucket_method": "", "get_blob_method": "", "response": "", "returned_file_size": "", "test_bucket": "", "test_object": ""}, "variables_p": {"bucket_method": [["str", 0.3725681098687459], ["Dict[Any, Union[int, str]]", 0.11486022476710275], ["List[Dict[str, str]]", 0.09981664340548034], ["tests.utils.MockCoroutine", 0.08227989968821041]], "get_blob_method": [["Dict[int, int]", 0.08635517692173167], ["Dict[str, Any]", 0.08059292152557403]], "response": [["Dict[str, str]", 0.4535150567431039], ["Dict[str, Any]", 0.16719299167985602], ["Dict[str, List[str]]", 0.09916509470142507], ["dict", 0.08539534512976686]], "returned_file_size": [["str", 0.42725913769183765], ["List[Union[Any, Any]]", 0.21778435268634908], ["float", 0.1642426729848933], ["List[str]", 0.11271145165314764], ["Dict[str, Union[bytes, str]]", 0.07800238498377238]], "test_bucket": [["str", 0.6963511157032591], ["Callable[[], None]", 0.11573527869832173], ["int", 0.08744486665632983]], "test_object": [["str", 0.8217678353273742], ["Dict[str, str]", 0.09409248398710801], ["bool", 0.0841396806855178]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[536, 4], [547, 47]], "fn_var_ln": {"bucket_method": [[541, 8], [541, 21]], "get_blob_method": [[542, 8], [542, 23]], "response": [[545, 8], [545, 16]], "returned_file_crc32c": [[539, 8], [539, 28]], "test_bucket": [[537, 8], [537, 19]], "test_object": [[538, 8], [538, 19]]}, "fn_var_occur": {"bucket_method": [["bucket_method", "mock_service", "return_value", "bucket"], ["get_blob_method", "bucket_method", "return_value", "get_blob"]], "get_blob_method": [["get_blob_method", "bucket_method", "return_value", "get_blob"], ["get_blob_method", "return_value", "crc32c", "returned_file_crc32c"]], "response": [["response", "self", "gcs_hook", "get_crc32c", "bucket_name", "test_bucket", "object_name", "test_object"], ["response", "returned_file_crc32c"]], "returned_file_crc32c": [["get_blob_method", "return_value", "crc32c", "returned_file_crc32c"], ["response", "returned_file_crc32c"]], "test_bucket": [["response", "self", "gcs_hook", "get_crc32c", "bucket_name", "test_bucket", "object_name", "test_object"]], "test_object": [["response", "self", "gcs_hook", "get_crc32c", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "name": "test_object_get_crc32c", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["bucket_method", "mock_service", "return_value", "bucket"]], "self": [["response", "self", "gcs_hook", "get_crc32c", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.MagicMock", 0.07805640891181609]], "self": []}, "q_name": "TestGCSHook.test_object_get_crc32c", "ret_exprs": [], "ret_type": "", "variables": {"bucket_method": "", "get_blob_method": "", "response": "", "returned_file_crc32c": "", "test_bucket": "", "test_object": ""}, "variables_p": {"bucket_method": [["str", 0.3725681098687459], ["Dict[Any, Union[int, str]]", 0.11486022476710275], ["List[Dict[str, str]]", 0.09981664340548034], ["tests.utils.MockCoroutine", 0.08227989968821041]], "get_blob_method": [["List[str]", 0.2592605272738], ["Dict[str, Union[Any, Any, Any]]", 0.0819455180633031]], "response": [["Dict[str, str]", 0.47648485316231054], ["Dict[str, List[str]]", 0.13917209212352208], ["Dict[str, Any]", 0.09880902545737325], ["dict", 0.09680974020788964], ["Dict[Any, str]", 0.08937156386851397]], "returned_file_crc32c": [["str", 0.48384388005092904], ["list", 0.19983390644777263], ["List[List[str]]", 0.12339054479913734], ["Tuple[str, str, str, str, str, str]", 0.10213480622847991]], "test_bucket": [["Dict[str, str]", 0.5231290366321426], ["Optional[Dict[str, Any]]", 0.10081176375894527], ["List[str]", 0.09603873488148984], ["Dict[Any, Tuple[Any, Any]]", 0.09525660607630194], ["Dict[str, Type[Any]]", 0.09385481473866597], ["str", 0.09090904391245451]], "test_object": [["Dict[str, str]", 0.22286191189033996], ["str", 0.17867371561852669], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.10512183309629737], ["Dict[str, Union[Any, bool]]", 0.10013775529483263], ["Dict[str, Dict[str, Any]]", 0.09830480498676658], ["Dict[str, Union[Any, Any]]", 0.09649089302903097], ["Dict[str, bool]", 0.087693545869321]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[550, 4], [561, 48]], "fn_var_ln": {"bucket_method": [[555, 8], [555, 21]], "get_blob_method": [[556, 8], [556, 23]], "response": [[559, 8], [559, 16]], "returned_file_md5hash": [[553, 8], [553, 29]], "test_bucket": [[551, 8], [551, 19]], "test_object": [[552, 8], [552, 19]]}, "fn_var_occur": {"bucket_method": [["bucket_method", "mock_service", "return_value", "bucket"], ["get_blob_method", "bucket_method", "return_value", "get_blob"]], "get_blob_method": [["get_blob_method", "bucket_method", "return_value", "get_blob"], ["get_blob_method", "return_value", "md5_hash", "returned_file_md5hash"]], "response": [["response", "self", "gcs_hook", "get_md5hash", "bucket_name", "test_bucket", "object_name", "test_object"], ["response", "returned_file_md5hash"]], "returned_file_md5hash": [["get_blob_method", "return_value", "md5_hash", "returned_file_md5hash"], ["response", "returned_file_md5hash"]], "test_bucket": [["response", "self", "gcs_hook", "get_md5hash", "bucket_name", "test_bucket", "object_name", "test_object"]], "test_object": [["response", "self", "gcs_hook", "get_md5hash", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "name": "test_object_get_md5hash", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["bucket_method", "mock_service", "return_value", "bucket"]], "self": [["response", "self", "gcs_hook", "get_md5hash", "bucket_name", "test_bucket", "object_name", "test_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_object_get_md5hash", "ret_exprs": [], "ret_type": "", "variables": {"bucket_method": "", "get_blob_method": "", "response": "", "returned_file_md5hash": "", "test_bucket": "", "test_object": ""}, "variables_p": {"bucket_method": [["str", 0.3725681098687459], ["Dict[Any, Union[int, str]]", 0.11486022476710275], ["List[Dict[str, str]]", 0.09981664340548034], ["tests.utils.MockCoroutine", 0.08227989968821041]], "get_blob_method": [["List[str]", 0.2592605272738], ["Dict[str, Union[Any, Any, Any]]", 0.0819455180633031]], "response": [["Dict[str, str]", 0.47648485316231054], ["Dict[str, List[str]]", 0.13917209212352208], ["Dict[str, Any]", 0.09880902545737325], ["dict", 0.09680974020788964], ["Dict[Any, str]", 0.08937156386851397]], "returned_file_md5hash": [["str", 0.6008487355625055], ["list", 0.11770675712906399], ["List[List[str]]", 0.09630852484702268], ["Dict[str, Union[bool, str]]", 0.08995677383383008]], "test_bucket": [["Dict[str, str]", 0.5231290366321426], ["Optional[Dict[str, Any]]", 0.10081176375894527], ["List[str]", 0.09603873488148984], ["Dict[Any, Tuple[Any, Any]]", 0.09525660607630194], ["Dict[str, Type[Any]]", 0.09385481473866597], ["str", 0.09090904391245451]], "test_object": [["Dict[str, str]", 0.22286191189033996], ["str", 0.17867371561852669], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.10512183309629737], ["Dict[str, Union[Any, bool]]", 0.10013775529483263], ["Dict[str, Dict[str, Any]]", 0.09830480498676658], ["Dict[str, Union[Any, Any]]", 0.09649089302903097], ["Dict[str, bool]", 0.087693545869321]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[565, 4], [596, 9]], "fn_var_ln": {"labels_with_version": [[572, 8], [572, 27]], "response": [[581, 8], [581, 16]], "sample_bucket": [[579, 8], [579, 21]], "test_bucket": [[566, 8], [566, 19]], "test_labels": [[569, 8], [569, 19]], "test_location": [[568, 8], [568, 21]], "test_project": [[567, 8], [567, 20]], "test_storage_class": [[570, 8], [570, 26]]}, "fn_var_occur": {"labels_with_version": [["labels_with_version", "copy", "deepcopy", "test_labels"], ["labels_with_version", "version", "replace", "replace"], ["mock_bucket", "return_value", "labels", "labels_with_version"]], "response": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["response", "sample_bucket", "id"]], "sample_bucket": [["sample_bucket", "mock_service", "bucket", "bucket_name", "test_bucket"], ["response", "sample_bucket", "id"], ["sample_bucket", "storage_class", "test_storage_class"], ["sample_bucket", "labels", "test_labels"]], "test_bucket": [["sample_bucket", "mock_service", "bucket", "bucket_name", "test_bucket"], ["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"]], "test_labels": [["labels_with_version", "copy", "deepcopy", "test_labels"], ["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["sample_bucket", "labels", "test_labels"]], "test_location": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["mock_service", "return_value", "bucket", "return_value", "create", "assert_called_once_with", "project", "test_project", "location", "test_location"]], "test_project": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["mock_service", "return_value", "bucket", "return_value", "create", "assert_called_once_with", "project", "test_project", "location", "test_location"]], "test_storage_class": [["mock_bucket", "return_value", "storage_class", "test_storage_class"], ["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["sample_bucket", "storage_class", "test_storage_class"]]}, "name": "test_create_bucket", "params": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_descr": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_occur": {"mock_bucket": [["mock_bucket", "return_value", "storage_class", "test_storage_class"], ["mock_bucket", "return_value", "labels", "labels_with_version"]], "mock_service": [["mock_service", "return_value", "bucket", "return_value", "create", "return_value", "None"], ["sample_bucket", "mock_service", "bucket", "bucket_name", "test_bucket"], ["mock_service", "return_value", "bucket", "return_value", "create", "assert_called_once_with", "project", "test_project", "location", "test_location"]], "self": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"]]}, "params_p": {"args": [], "kwargs": [], "mock_bucket": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_create_bucket", "ret_exprs": [], "ret_type": "", "variables": {"labels_with_version": "", "response": "", "sample_bucket": "", "test_bucket": "", "test_labels": "", "test_location": "", "test_project": "", "test_storage_class": ""}, "variables_p": {"labels_with_version": [["str", 0.5968612395332615], ["Set[str]", 0.11275011656807873], ["Pattern[str]", 0.1033903656375895]], "response": [["OrderedDict[str, Any]", 0.20576651571735724], ["Dict[str, str]", 0.102152918739427], ["werkzeug.exceptions.InternalServerError", 0.09756727743364234], ["werkzeug.exceptions.HTTPException", 0.09739097818865496], ["Dict[str, Any]", 0.0932133165172195], ["str", 0.0907360091366975]], "sample_bucket": [["Optional[str]", 0.3777085690071619], ["bool", 0.21583811192391472], ["Dict[Any, str]", 0.09901384149666723], ["list", 0.07998793424133968], ["str", 0.0786535947433249], ["List[str]", 0.07194603730797157]], "test_bucket": [["str", 0.9158320395249615]], "test_labels": [["Dict[str, str]", 0.2063115404110824], ["Dict[str, Any]", 0.09836496387615497], ["list", 0.0942650074347945]], "test_location": [["List[Tuple[int, bool]]", 0.2778508860701225], ["str", 0.184204959318301], ["Dict[str, int]", 0.12452676809556228], ["Dict[str, Any]", 0.09411256014571794], ["Dict[str, Union[bool, str]]", 0.09303817468475871]], "test_project": [["dict", 0.09995196261218126], ["Dict[str, Any]", 0.09251470423224721]], "test_storage_class": [["str", 0.4003713847040932], ["Dict[str, Union[Any, Any]]", 0.21446515725380852], ["int", 0.10425283104905327], ["Counter", 0.09635711977172315], ["List[Dict[str, str]]", 0.09333130645300881], ["list", 0.091222200768313]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[600, 4], [633, 9]], "fn_var_ln": {"response": [[617, 8], [617, 16]], "sample_bucket": [[613, 8], [613, 21]], "test_bucket": [[601, 8], [601, 19]], "test_labels": [[604, 8], [604, 19]], "test_location": [[603, 8], [603, 21]], "test_project": [[602, 8], [602, 20]], "test_storage_class": [[605, 8], [605, 26]], "test_versioning_enabled": [[606, 8], [606, 31]]}, "fn_var_occur": {"response": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["response", "sample_bucket", "id"]], "sample_bucket": [["sample_bucket", "mock_service", "bucket", "bucket_name", "test_bucket"], ["response", "sample_bucket", "id"]], "test_bucket": [["sample_bucket", "mock_service", "bucket", "bucket_name", "test_bucket"], ["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"]], "test_labels": [["mock_bucket", "return_value", "labels", "test_labels"], ["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"]], "test_location": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["mock_service", "return_value", "bucket", "return_value", "create", "assert_called_once_with", "project", "test_project", "location", "test_location"]], "test_project": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["mock_service", "return_value", "bucket", "return_value", "create", "assert_called_once_with", "project", "test_project", "location", "test_location"]], "test_storage_class": [["mock_bucket", "return_value", "storage_class", "test_storage_class"], ["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"]], "test_versioning_enabled": [["test_versioning_enabled", "True"], ["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"], ["mock_service", "return_value", "bucket", "return_value", "_patch_property", "assert_called_once_with", "name", "value", "test_versioning_enabled"]]}, "name": "test_create_bucket_with_resource", "params": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_descr": {"mock_bucket": "", "mock_service": "", "self": ""}, "params_occur": {"mock_bucket": [["mock_bucket", "return_value", "storage_class", "test_storage_class"], ["mock_bucket", "return_value", "labels", "test_labels"], ["mock_bucket", "return_value", "versioning_enabled", "True"]], "mock_service": [["mock_service", "return_value", "bucket", "return_value", "create", "return_value", "None"], ["sample_bucket", "mock_service", "bucket", "bucket_name", "test_bucket"], ["mock_service", "return_value", "bucket", "return_value", "_patch_property", "assert_called_once_with", "name", "value", "test_versioning_enabled"], ["mock_service", "return_value", "bucket", "return_value", "create", "assert_called_once_with", "project", "test_project", "location", "test_location"]], "self": [["response", "self", "gcs_hook", "create_bucket", "bucket_name", "test_bucket", "resource", "test_versioning_enabled", "storage_class", "test_storage_class", "location", "test_location", "labels", "test_labels", "project_id", "test_project"]]}, "params_p": {"args": [], "kwargs": [], "mock_bucket": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_create_bucket_with_resource", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "sample_bucket": "", "test_bucket": "", "test_labels": "", "test_location": "", "test_project": "", "test_storage_class": "", "test_versioning_enabled": ""}, "variables_p": {"response": [["str", 0.33394756461311836], ["Dict[str, str]", 0.28012899769238425], ["int", 0.10682770299600698], ["dict", 0.0913144111562688]], "sample_bucket": [["str", 0.739391439416417], ["List[Pattern[str]]", 0.08891358270127858], ["List[str]", 0.08795872359896738], ["int", 0.08373625428333713]], "test_bucket": [["str", 0.8823979934758628], ["cmk.utils.type_defs.UserId", 0.11760200652413737]], "test_labels": [["str", 0.8964678508516872], ["Dict[str, Union[int, str]]", 0.10353214914831274]], "test_location": [["List[str]", 0.2762123215781054], ["str", 0.12896042374569117], ["List[Type[Any]]", 0.10902832788516022], ["Dict[str, str]", 0.09742570745480451], ["Dict[str, Dict[str, Any]]", 0.09282024848238575], ["dict", 0.09067027169123097]], "test_project": [["str", 0.3941263904837403], ["Dict[str, str]", 0.19413951757675602], ["dict", 0.1057453795353819], ["List[str]", 0.10003089202165208]], "test_storage_class": [["str", 0.23617458671952943], ["Dict[str, Union[Any, Any]]", 0.17736302219285435], ["int", 0.11629017172319564], ["List[Dict[str, Any]]", 0.1075613664635025], ["list", 0.09848077236478193], ["Optional[bytes]", 0.08944741203489558], ["List[Dict[str, str]]", 0.08758570653145684], ["datetime.datetime", 0.08709696196978393]], "test_versioning_enabled": [["str", 0.20129532871345918], ["Dict[str, Union[dict, Any]]", 0.10588147047055996], ["Dict[str, Dict[str, str]]", 0.10376410363633934], ["Dict[str, Union[None, int, str]]", 0.10066269938303506], ["Dict[str, Optional[str]]", 0.10066269938303506], ["Dict[str, List[str]]", 0.09498875632905814], ["Dict[str, Dict[str, Any]]", 0.09313371892074568]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[637, 4], [653, 9]], "fn_var_ln": {"method": [[643, 8], [643, 14]], "test_bucket": [[638, 8], [638, 19]], "test_destination_object": [[640, 8], [640, 31]], "test_source_objects": [[639, 8], [639, 27]]}, "fn_var_occur": {"method": [["method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "compose"], ["method", "assert_called_once_with", "sources", "mock_blob", "blob_name", "source_object", "source_object", "test_source_objects"]], "test_bucket": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_destination_object": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_source_objects": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"], ["method", "assert_called_once_with", "sources", "mock_blob", "blob_name", "source_object", "source_object", "test_source_objects"]]}, "name": "test_compose", "params": {"mock_blob": "", "mock_service": "", "self": ""}, "params_descr": {"mock_blob": "", "mock_service": "", "self": ""}, "params_occur": {"mock_blob": [["mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "mock_blob", "blob_name", "mock", "ANY"], ["method", "assert_called_once_with", "sources", "mock_blob", "blob_name", "source_object", "source_object", "test_source_objects"]], "mock_service": [["mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "mock_blob", "blob_name", "mock", "ANY"], ["method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "compose"]], "self": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_blob": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_compose", "ret_exprs": [], "ret_type": "", "variables": {"method": "", "test_bucket": "", "test_destination_object": "", "test_source_objects": ""}, "variables_p": {"method": [["str", 0.334675995988551], ["Dict[str, Union[None, Any, int]]", 0.11864642703904998], ["tests.utils.MockCoroutine", 0.09824281433149068]], "test_bucket": [["str", 0.8655057976433056], ["List[str]", 0.13449420235669443]], "test_destination_object": [["str", 0.5239201939598669], ["int", 0.11700997163350302], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11166086437784033], ["Dict[str, str]", 0.07917691577900927]], "test_source_objects": [["str", 0.6294746311556204], ["List[str]", 0.3705253688443798]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[656, 4], [668, 66]], "fn_var_ln": {"test_bucket": [[657, 8], [657, 19]], "test_destination_object": [[659, 8], [659, 31]], "test_source_objects": [[658, 8], [658, 27]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_destination_object": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_source_objects": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]]}, "name": "test_compose_with_empty_source_objects", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [], "self": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.Mock", 0.8541408884852932], ["Generator[None, Any, None]", 0.09578723456865387]], "self": []}, "q_name": "TestGCSHook.test_compose_with_empty_source_objects", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": "", "test_destination_object": "", "test_source_objects": ""}, "variables_p": {"test_bucket": [["str", 0.8655057976433056], ["List[str]", 0.13449420235669443]], "test_destination_object": [["str", 0.5239201939598669], ["int", 0.11700997163350302], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11166086437784033], ["Dict[str, str]", 0.07917691577900927]], "test_source_objects": [["str", 0.7077985536590741], ["List[str]", 0.19198010248318848], ["os._Environ[str]", 0.10022134385773729]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[671, 4], [683, 86]], "fn_var_ln": {"test_bucket": [[672, 8], [672, 19]], "test_destination_object": [[674, 8], [674, 31]], "test_source_objects": [[673, 8], [673, 27]]}, "fn_var_occur": {"test_bucket": [["test_bucket", "None"], ["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_destination_object": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_source_objects": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]]}, "name": "test_compose_without_bucket", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [], "self": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.Mock", 0.4918735460680354]], "self": []}, "q_name": "TestGCSHook.test_compose_without_bucket", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": "", "test_destination_object": "", "test_source_objects": ""}, "variables_p": {"test_bucket": [["dict", 0.20226116443911757], ["Dict[Any, str]", 0.13319128802429098], ["str", 0.11167039104601562], ["Dict[str, Union[Any, str]]", 0.10844781894205706], ["Dict[str, Any]", 0.08262472480840459]], "test_destination_object": [["str", 0.5239201939598669], ["int", 0.11700997163350302], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11166086437784033], ["Dict[str, str]", 0.07917691577900927]], "test_source_objects": [["str", 0.7077985536590741], ["List[str]", 0.19198010248318848], ["os._Environ[str]", 0.10022134385773729]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[686, 4], [698, 86]], "fn_var_ln": {"test_bucket": [[687, 8], [687, 19]], "test_destination_object": [[689, 8], [689, 31]], "test_source_objects": [[688, 8], [688, 27]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_destination_object": [["test_destination_object", "None"], ["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]], "test_source_objects": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]]}, "name": "test_compose_without_destination_object", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [], "self": [["self", "gcs_hook", "compose", "bucket_name", "test_bucket", "source_objects", "test_source_objects", "destination_object", "test_destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.Mock", 0.7777777782457801]], "self": []}, "q_name": "TestGCSHook.test_compose_without_destination_object", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": "", "test_destination_object": "", "test_source_objects": ""}, "variables_p": {"test_bucket": [["str", 0.8655057976433056], ["List[str]", 0.13449420235669443]], "test_destination_object": [["Dict[Any, Dict[str, Any]]", 0.3192201863181164], ["dict", 0.2896153018424878], ["Union[dict, os._Environ[Any]]", 0.0816264244582906], ["cmk.utils.tags.TagConfig", 0.08014708593289949]], "test_source_objects": [["str", 0.7077985536590741], ["List[str]", 0.19198010248318848], ["os._Environ[str]", 0.10022134385773729]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[701, 4], [712, 49]], "fn_var_ln": {"download_method": [[706, 8], [706, 23]], "response": [[709, 8], [709, 16]], "return_value": [[707, 8], [707, 36]], "test_bucket": [[702, 8], [702, 19]], "test_object": [[703, 8], [703, 19]], "test_object_bytes": [[704, 8], [704, 25]]}, "fn_var_occur": {"download_method": [["download_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"], ["download_method", "return_value", "test_object_bytes"], ["download_method", "assert_called_once_with"]], "response": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "None"], ["response", "test_object_bytes"]], "return_value": [["download_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"], ["download_method", "return_value", "test_object_bytes"]], "test_bucket": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "None"]], "test_object": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "None"]], "test_object_bytes": [["test_object_bytes", "io", "BytesIO"], ["download_method", "return_value", "test_object_bytes"], ["response", "test_object_bytes"]]}, "name": "test_download_as_bytes", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["download_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"]], "self": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_download_as_bytes", "ret_exprs": [], "ret_type": "", "variables": {"download_method": "", "response": "", "return_value": "", "test_bucket": "", "test_object": "", "test_object_bytes": ""}, "variables_p": {"download_method": [["dict", 0.19410162518882493], ["bytes", 0.17566678728769394], ["Dict[bytes, int]", 0.08952066295990813], ["Dict[str, Union[None, Any, Any]]", 0.08543361224826779], ["Dict[str, Union[Any, int, str]]", 0.0845292323544543]], "response": [["str", 0.6313116751353994], ["Dict[str, str]", 0.08616735851317524], ["bytes", 0.08502931553692332]], "return_value": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.12773037907757792], ["Optional[bytes]", 0.11671162928596668], ["bytes", 0.09443893755212443], ["Type[Dict[Any, Any]]", 0.08903040244373958], ["int", 0.07902592101141438], ["str", 0.07875552392229314]], "test_bucket": [["str", 1.0]], "test_object": [["str", 0.7877316328505004], ["int", 0.11210266254168136], ["Optional[str]", 0.10016570460781835]], "test_object_bytes": [["io.StringIO", 0.5624257003904364], ["io.BytesIO", 0.33701539570184413], ["bytes", 0.10055890390771964]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[715, 4], [735, 79]], "fn_var_ln": {"download_as_a_bytes_method": [[726, 8], [726, 34]], "download_filename_method": [[721, 8], [721, 32]], "response": [[730, 8], [730, 16]], "return_value": [[729, 8], [729, 47]], "test_bucket": [[716, 8], [716, 19]], "test_file": [[719, 8], [719, 17]], "test_object": [[717, 8], [717, 19]], "test_object_bytes": [[718, 8], [718, 25]]}, "fn_var_occur": {"download_as_a_bytes_method": [["download_as_a_bytes_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"], ["download_as_a_bytes_method", "return_value", "test_object_bytes"]], "download_filename_method": [["download_filename_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_to_filename"], ["download_filename_method", "return_value", "None"], ["download_filename_method", "assert_called_once_with", "test_file", "timeout"]], "response": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"], ["response", "test_file"]], "return_value": [["download_filename_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_to_filename"], ["download_filename_method", "return_value", "None"], ["download_as_a_bytes_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"], ["download_as_a_bytes_method", "return_value", "test_object_bytes"]], "test_bucket": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"]], "test_file": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"], ["response", "test_file"], ["download_filename_method", "assert_called_once_with", "test_file", "timeout"]], "test_object": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"]], "test_object_bytes": [["test_object_bytes", "io", "BytesIO"], ["download_as_a_bytes_method", "return_value", "test_object_bytes"]]}, "name": "test_download_to_file", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["download_filename_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_to_filename"], ["download_as_a_bytes_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"]], "self": [["response", "self", "gcs_hook", "download", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": []}, "q_name": "TestGCSHook.test_download_to_file", "ret_exprs": [], "ret_type": "", "variables": {"download_as_a_bytes_method": "", "download_filename_method": "", "response": "", "return_value": "", "test_bucket": "", "test_file": "", "test_object": "", "test_object_bytes": ""}, "variables_p": {"download_as_a_bytes_method": [["List[List[Any]]", 0.3988718367005156], ["Dict[int, Any]", 0.2628921230012737], ["Pattern[bytes]", 0.09149129924791878], ["Dict[str, Union[int, str]]", 0.08542189054760672], ["List[Union[None, float, str]]", 0.0814116565871311], ["str", 0.07991119391555412]], "download_filename_method": [["dict", 0.1808997558941094], ["Dict[str, int]", 0.1320148016873997], ["List[str]", 0.11367542509547728], ["Dict[str, Union[float, str]]", 0.11260973748276132], ["Tuple[int, int]", 0.10073791844562333], ["List[dict]", 0.09284669964516112], ["Dict[str, Union[None, Any, Any, Any]]", 0.08924768215976826], ["Dict[Any, Union[int, str]]", 0.08675904466842879]], "response": [["str", 0.603366291649556], ["Dict[str, str]", 0.10619269485309367]], "return_value": [["str", 0.3125920728255743], ["Dict[str, List[Any]]", 0.15190516362569106], ["Dict[str, Any]", 0.0928092012813944], ["tests.mock.zwave.MockNode", 0.08724139729783113]], "test_bucket": [["str", 0.7963995349211784], ["bool", 0.20360046507882146]], "test_file": [["str", 1.0]], "test_object": [["str", 0.7757726896203694], ["int", 0.14603245285826374], ["wallet_api.common.configfetch.Value", 0.07819485752136691]], "test_object_bytes": [["io.StringIO", 0.9266303835384535], ["io.BytesIO", 0.0733696164615465]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[739, 4], [768, 9]], "fn_var_ln": {"download_as_a_bytes_method": [[750, 8], [750, 34]], "download_filename_method": [[745, 8], [745, 32]], "return_value": [[753, 8], [753, 47]], "test_bucket": [[740, 8], [740, 19]], "test_file": [[743, 8], [743, 17]], "test_object": [[741, 8], [741, 19]], "test_object_bytes": [[742, 8], [742, 25]]}, "fn_var_occur": {"download_as_a_bytes_method": [["download_as_a_bytes_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"], ["download_as_a_bytes_method", "return_value", "test_object_bytes"]], "download_filename_method": [["download_filename_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_to_filename"], ["download_filename_method", "return_value", "None"], ["download_filename_method", "assert_called_once_with", "test_file", "timeout"]], "return_value": [["download_filename_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_to_filename"], ["download_filename_method", "return_value", "None"], ["download_as_a_bytes_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"], ["download_as_a_bytes_method", "return_value", "test_object_bytes"], ["mock_temp_file", "return_value", "__enter__", "return_value", "mock", "MagicMock"], ["mock_temp_file", "return_value", "__enter__", "return_value", "name", "test_file"]], "test_bucket": [["self", "gcs_hook", "provide_file", "bucket_name", "test_bucket", "object_name", "test_object", "response"]], "test_file": [["mock_temp_file", "return_value", "__enter__", "return_value", "name", "test_file"], ["test_file", "response", "name"], ["download_filename_method", "assert_called_once_with", "test_file", "timeout"]], "test_object": [["self", "gcs_hook", "provide_file", "bucket_name", "test_bucket", "object_name", "test_object", "response"]], "test_object_bytes": [["test_object_bytes", "io", "BytesIO"], ["download_as_a_bytes_method", "return_value", "test_object_bytes"]]}, "name": "test_provide_file", "params": {"mock_service": "", "mock_temp_file": "", "self": ""}, "params_descr": {"mock_service": "", "mock_temp_file": "", "self": ""}, "params_occur": {"mock_service": [["download_filename_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_to_filename"], ["download_as_a_bytes_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "download_as_bytes"]], "mock_temp_file": [["mock_temp_file", "return_value", "__enter__", "return_value", "mock", "MagicMock"], ["mock_temp_file", "return_value", "__enter__", "return_value", "name", "test_file"], ["mock_temp_file", "assert_has_calls", "mock", "call", "suffix", "dir", "None", "mock", "call", "__enter__", "mock", "call", "__enter__", "flush", "mock", "call", "__exit__", "None", "None", "None"]], "self": [["self", "gcs_hook", "provide_file", "bucket_name", "test_bucket", "object_name", "test_object", "response"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "mock_temp_file": [["mock.Mock", 0.1120342619798928]], "self": []}, "q_name": "TestGCSHook.test_provide_file", "ret_exprs": [], "ret_type": "", "variables": {"download_as_a_bytes_method": "", "download_filename_method": "", "return_value": "", "test_bucket": "", "test_file": "", "test_object": "", "test_object_bytes": ""}, "variables_p": {"download_as_a_bytes_method": [["List[List[Any]]", 0.3988718367005156], ["Dict[int, Any]", 0.2628921230012737], ["Pattern[bytes]", 0.09149129924791878], ["Dict[str, Union[int, str]]", 0.08542189054760672], ["List[Union[None, float, str]]", 0.0814116565871311], ["str", 0.07991119391555412]], "download_filename_method": [["dict", 0.1808997558941094], ["Dict[str, int]", 0.1320148016873997], ["List[str]", 0.11367542509547728], ["Dict[str, Union[float, str]]", 0.11260973748276132], ["Tuple[int, int]", 0.10073791844562333], ["List[dict]", 0.09284669964516112], ["Dict[str, Union[None, Any, Any, Any]]", 0.08924768215976826], ["Dict[Any, Union[int, str]]", 0.08675904466842879]], "return_value": [["str", 0.3125920728255743], ["Dict[str, List[Any]]", 0.15190516362569106], ["Dict[str, Any]", 0.0928092012813944], ["tests.mock.zwave.MockNode", 0.08724139729783113]], "test_bucket": [["str", 0.9021671234820678], ["int", 0.09783287651793199]], "test_file": [["str", 0.664256976562104], ["bool", 0.1278249319383338], ["list", 0.08734389722668538]], "test_object": [["str", 0.587637251634847], ["Dict[str, Literal]", 0.31223998230261274], ["int", 0.10012276606254017]], "test_object_bytes": [["io.StringIO", 0.9266303835384535], ["io.BytesIO", 0.0733696164615465]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[772, 4], [797, 9]], "fn_var_ln": {"test_bucket": [[773, 8], [773, 19]], "test_file": [[775, 8], [775, 17]], "test_object": [[774, 8], [774, 19]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "provide_file_and_upload", "bucket_name", "test_bucket", "object_name", "test_object", "fhandle"], ["mock_upload", "assert_called_once_with", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"]], "test_file": [["mock_temp_file", "return_value", "__enter__", "return_value", "name", "test_file"], ["fhandle", "name", "test_file"], ["mock_upload", "assert_called_once_with", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"]], "test_object": [["self", "gcs_hook", "provide_file_and_upload", "bucket_name", "test_bucket", "object_name", "test_object", "fhandle"], ["mock_upload", "assert_called_once_with", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"]]}, "name": "test_provide_file_upload", "params": {"mock_temp_file": "", "mock_upload": "", "self": ""}, "params_descr": {"mock_temp_file": "", "mock_upload": "", "self": ""}, "params_occur": {"mock_temp_file": [["mock_temp_file", "return_value", "__enter__", "return_value", "mock", "MagicMock"], ["mock_temp_file", "return_value", "__enter__", "return_value", "name", "test_file"], ["mock_temp_file", "assert_has_calls", "mock", "call", "suffix", "mock", "call", "__enter__", "mock", "call", "__enter__", "write", "mock", "call", "__enter__", "flush", "mock", "call", "__exit__", "None", "None", "None"]], "mock_upload": [["mock_upload", "assert_called_once_with", "bucket_name", "test_bucket", "object_name", "test_object", "filename", "test_file"]], "self": [["self", "gcs_hook", "provide_file_and_upload", "bucket_name", "test_bucket", "object_name", "test_object", "fhandle"]]}, "params_p": {"args": [], "kwargs": [], "mock_temp_file": [], "mock_upload": [["str", 0.11946912416498262]], "self": []}, "q_name": "TestGCSHook.test_provide_file_upload", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": "", "test_file": "", "test_object": ""}, "variables_p": {"test_bucket": [["str", 0.5755599008914201], ["Tuple[str, str]", 0.12246802714524538], ["List[str]", 0.11643138282926602], ["Dict[str, str]", 0.08957464897908851]], "test_file": [["str", 0.8152446336239647]], "test_object": [["Dict[str, Union[Any, str]]", 0.47874712285844223], ["str", 0.21440910603192576], ["Dict[str, str]", 0.21434305709898885], ["Dict[str, Union[Any, Any]]", 0.09250071401064311]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[820, 4], [828, 96]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list__delimiter", "params": {"mock_service": "", "prefix": "", "result": "", "self": ""}, "params_descr": {"mock_service": "", "prefix": "", "result": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "return_value", "list_blobs", "return_value", "next_page_token", "None"], ["mock_service", "return_value", "bucket", "return_value", "list_blobs", "call_args_list", "result"]], "prefix": [["self", "gcs_hook", "list", "bucket_name", "prefix", "prefix", "delimiter"]], "result": [["mock_service", "return_value", "bucket", "return_value", "list_blobs", "call_args_list", "result"]], "self": [["self", "gcs_hook", "list", "bucket_name", "prefix", "prefix", "delimiter"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "prefix": [["str", 0.08579849299224852]], "result": [["mock.MagicMock", 0.08975341701325605]], "self": []}, "q_name": "TestGCSHook.test_list__delimiter", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[835, 4], [857, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list__match_glob", "params": {"_blobs_page_start": "", "_item_to_blob": "", "http_iterator": "", "mock_service": "", "mocked_functools": "", "self": ""}, "params_descr": {"_blobs_page_start": "", "_item_to_blob": "", "http_iterator": "", "mock_service": "", "mocked_functools": "", "self": ""}, "params_occur": {"_blobs_page_start": [["http_iterator", "assert_has_calls", "mock", "call", "api_request", "mocked_functools", "partial", "return_value", "client", "mock_service", "return_value", "extra_params", "item_to_value", "_item_to_blob", "max_results", "None", "page_start", "_blobs_page_start", "page_token", "None", "path", "mock_service", "return_value", "bucket", "return_value", "path", "__add__", "return_value"]], "_item_to_blob": [["http_iterator", "assert_has_calls", "mock", "call", "api_request", "mocked_functools", "partial", "return_value", "client", "mock_service", "return_value", "extra_params", "item_to_value", "_item_to_blob", "max_results", "None", "page_start", "_blobs_page_start", "page_token", "None", "path", "mock_service", "return_value", "bucket", "return_value", "path", "__add__", "return_value"]], "http_iterator": [["http_iterator", "return_value", "next_page_token", "None"], ["http_iterator", "assert_has_calls", "mock", "call", "api_request", "mocked_functools", "partial", "return_value", "client", "mock_service", "return_value", "extra_params", "item_to_value", "_item_to_blob", "max_results", "None", "page_start", "_blobs_page_start", "page_token", "None", "path", "mock_service", "return_value", "bucket", "return_value", "path", "__add__", "return_value"]], "mock_service": [["http_iterator", "assert_has_calls", "mock", "call", "api_request", "mocked_functools", "partial", "return_value", "client", "mock_service", "return_value", "extra_params", "item_to_value", "_item_to_blob", "max_results", "None", "page_start", "_blobs_page_start", "page_token", "None", "path", "mock_service", "return_value", "bucket", "return_value", "path", "__add__", "return_value"]], "mocked_functools": [["http_iterator", "assert_has_calls", "mock", "call", "api_request", "mocked_functools", "partial", "return_value", "client", "mock_service", "return_value", "extra_params", "item_to_value", "_item_to_blob", "max_results", "None", "page_start", "_blobs_page_start", "page_token", "None", "path", "mock_service", "return_value", "bucket", "return_value", "path", "__add__", "return_value"]], "self": [["self", "gcs_hook", "list", "bucket_name", "prefix", "match_glob"]]}, "params_p": {"_blobs_page_start": [["mock.Mock", 0.10597794548375707], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09140125670347628], ["str", 0.09011079460694338]], "_item_to_blob": [["mock.Mock", 0.10597794548375707], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09140125670347628], ["str", 0.09011079460694338]], "args": [], "http_iterator": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.08696762422725483]], "kwargs": [], "mock_service": [["mock.Mock", 0.10597794548375707], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09140125670347628], ["str", 0.09011079460694338]], "mocked_functools": [["mock.Mock", 0.10597794548375707], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09140125670347628], ["str", 0.09011079460694338]], "self": []}, "q_name": "TestGCSHook.test_list__match_glob", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[860, 4], [867, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list__error_match_glob_and_invalid_delimiter", "params": {"_": "", "self": ""}, "params_descr": {"_": "", "self": ""}, "params_occur": {"_": [], "self": [["self", "gcs_hook", "list", "bucket_name", "prefix", "delimiter", "match_glob"]]}, "params_p": {"_": [["tests.basilisp.helpers.CompileFn", 0.12393525255667286], ["List[str]", 0.08795694766748405]], "args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHook.test_list__error_match_glob_and_invalid_delimiter", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[872, 4], [879, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list__error_match_glob_and_valid_delimiter", "params": {"delimiter": "", "http_iterator": "", "mock_service": "", "self": ""}, "params_descr": {"delimiter": "", "http_iterator": "", "mock_service": "", "self": ""}, "params_occur": {"delimiter": [["self", "gcs_hook", "list", "bucket_name", "prefix", "delimiter", "match_glob"]], "http_iterator": [["http_iterator", "return_value", "next_page_token", "None"]], "mock_service": [], "self": [["self", "gcs_hook", "list", "bucket_name", "prefix", "delimiter", "match_glob"]]}, "params_p": {"args": [], "delimiter": [["Callable", 0.4089989876674508], ["Dict[str, Any]", 0.10303497050488412]], "http_iterator": [], "kwargs": [], "mock_service": [["mock.Mock", 1.0]], "self": []}, "q_name": "TestGCSHook.test_list__error_match_glob_and_valid_delimiter", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[882, 4], [912, 79]], "fn_var_ln": {"blob1": [[886, 8], [886, 13]], "blob2": [[889, 8], [889, 13]], "blob3": [[892, 8], [892, 13]], "name": [[893, 8], [893, 18]], "response": [[905, 8], [905, 16]], "test_bucket": [[883, 8], [883, 19]], "updated": [[894, 8], [894, 21]]}, "fn_var_occur": {"blob1": [["blob1", "mock", "Mock"], ["blob1", "name"], ["blob1", "updated", "datetime", "dateutil", "tz", "tzutc"], ["mock_service", "return_value", "bucket", "return_value", "list_blobs", "return_value", "__iter__", "return_value", "blob1", "blob2", "blob3"]], "blob2": [["blob2", "mock", "Mock"], ["blob2", "name"], ["blob2", "updated", "datetime", "dateutil", "tz", "tzutc"], ["mock_service", "return_value", "bucket", "return_value", "list_blobs", "return_value", "__iter__", "return_value", "blob1", "blob2", "blob3"]], "blob3": [["blob3", "mock", "Mock"], ["blob3", "name"], ["blob3", "updated", "datetime", "dateutil", "tz", "tzutc"], ["mock_service", "return_value", "bucket", "return_value", "list_blobs", "return_value", "__iter__", "return_value", "blob1", "blob2", "blob3"]], "name": [["blob1", "name"], ["blob2", "name"], ["blob3", "name"]], "response": [["response", "self", "gcs_hook", "list_by_timespan", "bucket_name", "test_bucket", "timespan_start", "datetime", "dateutil", "tz", "tzutc", "timespan_end", "datetime", "dateutil", "tz", "tzutc"], ["len", "response", "all", "b", "b", "response"]], "test_bucket": [["response", "self", "gcs_hook", "list_by_timespan", "bucket_name", "test_bucket", "timespan_start", "datetime", "dateutil", "tz", "tzutc", "timespan_end", "datetime", "dateutil", "tz", "tzutc"]], "updated": [["blob1", "updated", "datetime", "dateutil", "tz", "tzutc"], ["blob2", "updated", "datetime", "dateutil", "tz", "tzutc"], ["blob3", "updated", "datetime", "dateutil", "tz", "tzutc"]]}, "name": "test_list_by_timespans", "params": {"mock_service": "", "self": ""}, "params_descr": {"mock_service": "", "self": ""}, "params_occur": {"mock_service": [["mock_service", "return_value", "bucket", "return_value", "list_blobs", "return_value", "__iter__", "return_value", "blob1", "blob2", "blob3"], ["mock_service", "return_value", "bucket", "return_value", "list_blobs", "return_value", "prefixes", "None"], ["mock_service", "return_value", "bucket", "return_value", "list_blobs", "return_value", "next_page_token", "None"]], "self": [["response", "self", "gcs_hook", "list_by_timespan", "bucket_name", "test_bucket", "timespan_start", "datetime", "dateutil", "tz", "tzutc", "timespan_end", "datetime", "dateutil", "tz", "tzutc"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.MagicMock", 0.2339071393652912]], "self": []}, "q_name": "TestGCSHook.test_list_by_timespans", "ret_exprs": [], "ret_type": "", "variables": {"blob1": "", "blob2": "", "blob3": "", "name": "", "response": "", "test_bucket": "", "updated": ""}, "variables_p": {"blob1": [["mock.Mock", 0.41278981259632586], ["mode.utils.mocks.Mock", 0.10078244739991218], ["bytes", 0.08892610767546716]], "blob2": [["mock.Mock", 0.41278981259632586], ["mode.utils.mocks.Mock", 0.10078244739991218], ["bytes", 0.08892610767546716]], "blob3": [["mock.Mock", 0.41278981259632586], ["mode.utils.mocks.Mock", 0.10078244739991218], ["bytes", 0.08892610767546716]], "name": [["str", 0.4818701926032722], ["Set[str]", 0.16077296257197923], ["Generator[str, None, None]", 0.10585419265251228], ["list", 0.0986639380137104], ["List[str]", 0.0764113863873265]], "response": [["str", 0.3115975358011235], ["datetime.timedelta", 0.3086947766545908], ["datetime.datetime.datetime", 0.09128804329931832], ["Optional[str]", 0.0832909727529545]], "test_bucket": [["datetime.timedelta", 0.6069086587897311], ["str", 0.2990564001628674]], "updated": [["str", 0.23953563814445694], ["dict", 0.14872152230711014], ["list", 0.09453455278030931], ["int", 0.09169225913731933], ["datetime.datetime", 0.08972545648224765], ["Pattern[str]", 0.08620693701006511], ["datetime.date", 0.08352514670954933], ["datetime.date.time.timedelta", 0.0834912330256087]]}}], "name": "TestGCSHook", "q_name": "TestGCSHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[915, 0], [1020, 104]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[916, 4], [918, 59]], "fn_var_ln": {"gcs_hook": [[918, 12], [918, 25]]}, "fn_var_occur": {"gcs_hook": [["self", "gcs_hook", "gcs", "GCSHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "gcs", "GCSHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGCSHookUpload.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook": ""}, "variables_p": {"gcs_hook": [["int", 0.3250856179466078], ["List[int]", 0.25935896696421246], ["List[str]", 0.18451255041216147], ["simulation.core.common.Resources", 0.12926032016484426], ["str", 0.10178254451217379]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[921, 4], [937, 60]], "fn_var_ln": {"blob_object": [[927, 8], [927, 19]], "bucket_mock": [[926, 8], [926, 19]], "metadata": [[924, 8], [924, 16]], "test_bucket": [[922, 8], [922, 19]], "test_object": [[923, 8], [923, 19]], "upload_method": [[929, 8], [929, 21]]}, "fn_var_occur": {"blob_object": [["blob_object", "bucket_mock", "return_value", "blob"], ["upload_method", "blob_object", "return_value", "upload_from_filename"], ["metadata", "blob_object", "return_value", "metadata"]], "bucket_mock": [["bucket_mock", "mock_service", "return_value", "bucket"], ["blob_object", "bucket_mock", "return_value", "blob"]], "metadata": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "metadata", "metadata"], ["metadata", "blob_object", "return_value", "metadata"]], "test_bucket": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "metadata", "metadata"]], "test_object": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "metadata", "metadata"]], "upload_method": [["upload_method", "blob_object", "return_value", "upload_from_filename"], ["upload_method", "assert_called_once_with", "filename", "testdata_file", "content_type", "timeout"]]}, "name": "test_upload_file", "params": {"mock_service": "", "self": "", "testdata_file": ""}, "params_descr": {"mock_service": "", "self": "", "testdata_file": ""}, "params_occur": {"mock_service": [["bucket_mock", "mock_service", "return_value", "bucket"]], "self": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "metadata", "metadata"]], "testdata_file": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "metadata", "metadata"], ["upload_method", "assert_called_once_with", "filename", "testdata_file", "content_type", "timeout"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": [], "testdata_file": [["tests.e2e.Helper", 0.09342564129412308]]}, "q_name": "TestGCSHookUpload.test_upload_file", "ret_exprs": [], "ret_type": "", "variables": {"blob_object": "", "bucket_mock": "", "metadata": "", "test_bucket": "", "test_object": "", "upload_method": ""}, "variables_p": {"blob_object": [["str", 1.0]], "bucket_mock": [["tests.utils.MockProvider", 0.20090526717893584], ["mock.Mock", 0.12085189691869144], ["list", 0.10190513446950465], ["Dict[str, str]", 0.0850070164564025], ["mode.utils.mocks.Mock", 0.08022177904492955]], "metadata": [["apps.registrations.tests.factories.RegistrationFactory", 0.18489627518764776]], "test_bucket": [["str", 0.5877354052956189], ["Dict[str, Dict[str, Any]]", 0.11920481151558616]], "test_object": [["str", 0.5824647897007734], ["TextIO", 0.08274810221364357]], "upload_method": [["str", 0.6019303770114048], ["Dict[str, str]", 0.12210109388753247], ["Dict[Any, Dict[str, Any]]", 0.09192751594687257], ["Dict[str, Union[int, str]]", 0.08870403805843546]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[940, 4], [945, 56]], "fn_var_ln": {"test_bucket": [[941, 8], [941, 19]], "test_object": [[942, 8], [942, 19]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "gzip", "True"]], "test_object": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "gzip", "True"]]}, "name": "test_upload_file_gzip", "params": {"mock_service": "", "self": "", "testdata_file": ""}, "params_descr": {"mock_service": "", "self": "", "testdata_file": ""}, "params_occur": {"mock_service": [], "self": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "gzip", "True"]], "testdata_file": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "gzip", "True"], ["os", "path", "exists", "testdata_file"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["mock.MagicMock", 0.10579907873167721], ["List[T]", 0.07493201081125259], ["Callable", 0.0681704319414321]], "self": [], "testdata_file": [["tests.e2e.Helper", 0.08498350590640234]]}, "q_name": "TestGCSHookUpload.test_upload_file_gzip", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": "", "test_object": ""}, "variables_p": {"test_bucket": [["str", 0.5777520452828716], ["Dict[str, Dict[str, Any]]", 0.1096360661112064], ["int", 0.09861553422595239], ["Optional[str]", 0.09548585966353226]], "test_object": [["str", 0.4784732683067598], ["TextIO", 0.08708347982226104]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[948, 4], [956, 101]], "fn_var_ln": {"test_bucket": [[949, 8], [949, 19]], "test_object": [[950, 8], [950, 19]], "upload_method": [[952, 8], [952, 21]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string"]], "test_object": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string"]], "upload_method": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"], ["upload_method", "assert_called_once_with", "testdata_string", "content_type", "timeout"]]}, "name": "test_upload_data_str", "params": {"mock_service": "", "self": "", "testdata_string": ""}, "params_descr": {"mock_service": "", "self": "", "testdata_string": ""}, "params_occur": {"mock_service": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"]], "self": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string"]], "testdata_string": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string"], ["upload_method", "assert_called_once_with", "testdata_string", "content_type", "timeout"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": [], "testdata_string": [["cmk.utils.structured_data.Container", 0.18912100689806555]]}, "q_name": "TestGCSHookUpload.test_upload_data_str", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": "", "test_object": "", "upload_method": ""}, "variables_p": {"test_bucket": [["str", 0.907420492248278], ["int", 0.09257950775172177]], "test_object": [["str", 0.32210417400239666], ["Dict[str, Union[Any, int, str]]", 0.285814828573172], ["Dict[str, Union[Any, Any]]", 0.18321145004840772], ["Dict[str, Union[bool, str]]", 0.10698333840833045], ["Dict[str, Union[Any, str]]", 0.10188620896769311]], "upload_method": [["mock._Call", 0.18324598052663518], ["list", 0.11056359287283037], ["str", 0.11031567649570052], ["Optional[bytes]", 0.10352341991335519], ["tests.utils.MockCoroutine", 0.10329587943646723], ["Dict[str, int]", 0.08960188485481885], ["List[str]", 0.08898860716540614]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[959, 4], [967, 100]], "fn_var_ln": {"test_bucket": [[960, 8], [960, 19]], "test_object": [[961, 8], [961, 19]], "upload_method": [[963, 8], [963, 21]]}, "fn_var_occur": {"test_bucket": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes"]], "test_object": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes"]], "upload_method": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"], ["upload_method", "assert_called_once_with", "testdata_bytes", "content_type", "timeout"]]}, "name": "test_upload_data_bytes", "params": {"mock_service": "", "self": "", "testdata_bytes": ""}, "params_descr": {"mock_service": "", "self": "", "testdata_bytes": ""}, "params_occur": {"mock_service": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"]], "self": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes"]], "testdata_bytes": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes"], ["upload_method", "assert_called_once_with", "testdata_bytes", "content_type", "timeout"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [], "self": [], "testdata_bytes": [["io.BytesIO", 0.49757416591185605], ["tests.e2e.Helper", 0.09894347696681645]]}, "q_name": "TestGCSHookUpload.test_upload_data_bytes", "ret_exprs": [], "ret_type": "", "variables": {"test_bucket": "", "test_object": "", "upload_method": ""}, "variables_p": {"test_bucket": [["str", 0.709097339645042], ["bool", 0.10135805381530896], ["Dict[str, Literal]", 0.09545051504877622], ["Dict[Any, str]", 0.09409409149087279]], "test_object": [["Dict[str, Union[Any, str]]", 0.28667972771823924], ["Dict[str, Union[bool, str]]", 0.19847288643381822], ["str", 0.18588600320065835], ["Dict[str, Union[Any, Any, Any, Any]]", 0.11667444358907476], ["Optional[str]", 0.10947356754887731], ["int", 0.10281337150933238]], "upload_method": [["str", 0.19797821747108008], ["Optional[bytes]", 0.12075275793257713], ["list", 0.11233744043502902], ["tests.utils.MockCoroutine", 0.09865919033074665], ["Dict[str, List[Any]]", 0.09211888468233725], ["datetime.datetime", 0.09131595038723836], ["Dict[str, Union[None, Any, int]]", 0.09071372922864016]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[972, 4], [986, 90]], "fn_var_ln": {"byte_str": [[983, 8], [983, 16]], "data": [[978, 8], [978, 12]], "encoding": [[975, 8], [975, 16]], "gzip_ctx": [[977, 8], [977, 16]], "test_bucket": [[973, 8], [973, 19]], "test_object": [[974, 8], [974, 19]], "upload_method": [[979, 8], [979, 21]]}, "fn_var_occur": {"byte_str": [["byte_str", "bytes", "testdata_string", "encoding"], ["gzip_ctx", "write", "assert_called_once_with", "byte_str"]], "data": [["data", "mock_bytes_io", "return_value", "getvalue", "return_value"], ["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string", "gzip", "True"], ["upload_method", "assert_called_once_with", "data", "content_type", "timeout"]], "encoding": [["byte_str", "bytes", "testdata_string", "encoding"]], "gzip_ctx": [["gzip_ctx", "mock_gzip", "return_value", "__enter__", "return_value"], ["gzip_ctx", "write", "assert_called_once_with", "byte_str"]], "test_bucket": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string", "gzip", "True"]], "test_object": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string", "gzip", "True"]], "upload_method": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"], ["upload_method", "assert_called_once_with", "data", "content_type", "timeout"]]}, "name": "test_upload_data_str_gzip", "params": {"mock_bytes_io": "", "mock_gzip": "", "mock_service": "", "self": "", "testdata_string": ""}, "params_descr": {"mock_bytes_io": "", "mock_gzip": "", "mock_service": "", "self": "", "testdata_string": ""}, "params_occur": {"mock_bytes_io": [["data", "mock_bytes_io", "return_value", "getvalue", "return_value"], ["mock_gzip", "assert_called_once_with", "fileobj", "mock_bytes_io", "return_value", "mode"]], "mock_gzip": [["gzip_ctx", "mock_gzip", "return_value", "__enter__", "return_value"], ["mock_gzip", "assert_called_once_with", "fileobj", "mock_bytes_io", "return_value", "mode"]], "mock_service": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"]], "self": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string", "gzip", "True"]], "testdata_string": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_string", "gzip", "True"], ["byte_str", "bytes", "testdata_string", "encoding"]]}, "params_p": {"args": [], "kwargs": [], "mock_bytes_io": [["mock.MagicMock", 0.0920091663913892]], "mock_gzip": [], "mock_service": [], "self": [], "testdata_string": [["io.BytesIO", 0.11771561373789764], ["tests.e2e.Helper", 0.1023907672912173]]}, "q_name": "TestGCSHookUpload.test_upload_data_str_gzip", "ret_exprs": [], "ret_type": "", "variables": {"byte_str": "", "data": "", "encoding": "", "gzip_ctx": "", "test_bucket": "", "test_object": "", "upload_method": ""}, "variables_p": {"byte_str": [["bytes", 0.8766885955787037], ["str", 0.12331140442129628]], "data": [["Tuple[int, int]", 0.16862388398378403], ["Optional[bytes]", 0.12646394389088536], ["tests.components.vera.common.ComponentData", 0.11487195518490763], ["tests.mock.zwave.MockNode", 0.09239836939109311], ["Dict[str, int]", 0.08936416268373697], ["int", 0.07681511278037814]], "encoding": [["str", 0.20544446439683797], ["Dict[bytes, bytes]", 0.20544446439683797], ["bytes", 0.15565776316000937], ["float", 0.12556839237799908], ["int", 0.12556839237799908]], "gzip_ctx": [["cirq.google.engine.engine.EngineContext", 0.43758698922382716], ["Dict[str, Union[Any, Any]]", 0.283424623104132], ["List[str]", 0.07163727284065673]], "test_bucket": [["str", 0.7862126841907304], ["Dict[Any, str]", 0.11888363676326982], ["dict", 0.09490367904599968]], "test_object": [["str", 0.26547175944293133], ["Dict[str, Union[Any, str]]", 0.16683751908097857], ["Optional[str]", 0.1525555830573087], ["Dict[str, Union[Any, Any]]", 0.15251830673694142], ["Dict[str, Union[Any, Any, Any]]", 0.08247364022387965], ["Dict[str, str]", 0.08113236208986485]], "upload_method": [["List[str]", 0.2383523068488396], ["str", 0.11361800417367983], ["tests.conftesConfluentAvroConsumerMock", 0.10551274947679083], ["tests.utils.MockCoroutine", 0.0898945547080095], ["list", 0.08352338122018876], ["Dict[str, int]", 0.07342933467673145]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[991, 4], [1003, 90]], "fn_var_ln": {"data": [[996, 8], [996, 12]], "gzip_ctx": [[995, 8], [995, 16]], "test_bucket": [[992, 8], [992, 19]], "test_object": [[993, 8], [993, 19]], "upload_method": [[997, 8], [997, 21]]}, "fn_var_occur": {"data": [["data", "mock_bytes_io", "return_value", "getvalue", "return_value"], ["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes", "gzip", "True"], ["upload_method", "assert_called_once_with", "data", "content_type", "timeout"]], "gzip_ctx": [["gzip_ctx", "mock_gzip", "return_value", "__enter__", "return_value"], ["gzip_ctx", "write", "assert_called_once_with", "testdata_bytes"]], "test_bucket": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes", "gzip", "True"]], "test_object": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes", "gzip", "True"]], "upload_method": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"], ["upload_method", "assert_called_once_with", "data", "content_type", "timeout"]]}, "name": "test_upload_data_bytes_gzip", "params": {"mock_bytes_io": "", "mock_gzip": "", "mock_service": "", "self": "", "testdata_bytes": ""}, "params_descr": {"mock_bytes_io": "", "mock_gzip": "", "mock_service": "", "self": "", "testdata_bytes": ""}, "params_occur": {"mock_bytes_io": [["data", "mock_bytes_io", "return_value", "getvalue", "return_value"], ["mock_gzip", "assert_called_once_with", "fileobj", "mock_bytes_io", "return_value", "mode"]], "mock_gzip": [["gzip_ctx", "mock_gzip", "return_value", "__enter__", "return_value"], ["mock_gzip", "assert_called_once_with", "fileobj", "mock_bytes_io", "return_value", "mode"]], "mock_service": [["upload_method", "mock_service", "return_value", "bucket", "return_value", "blob", "return_value", "upload_from_string"]], "self": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes", "gzip", "True"]], "testdata_bytes": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "data", "testdata_bytes", "gzip", "True"], ["gzip_ctx", "write", "assert_called_once_with", "testdata_bytes"]]}, "params_p": {"args": [], "kwargs": [], "mock_bytes_io": [["mock.MagicMock", 0.0893642922921218]], "mock_gzip": [], "mock_service": [], "self": [], "testdata_bytes": [["io.BytesIO", 0.2760224953428229], ["Dict[str, Any]", 0.11102076111208845], ["tests.e2e.Helper", 0.10738041443998499]]}, "q_name": "TestGCSHookUpload.test_upload_data_bytes_gzip", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "gzip_ctx": "", "test_bucket": "", "test_object": "", "upload_method": ""}, "variables_p": {"data": [["dict", 0.17397791917215066], ["Tuple[int, int]", 0.15537862075458206], ["Optional[bytes]", 0.11976895682485379], ["tests.mock.zwave.MockNode", 0.08628722767598955], ["Dict[str, int]", 0.08594463027040052], ["List[Dict[str, Any]]", 0.08495902049887484]], "gzip_ctx": [["cirq.google.engine.engine.EngineContext", 0.43157173553512235], ["Dict[str, Union[Any, Any]]", 0.21405781906439098], ["List[str]", 0.07773838736901939], ["Dict[str, Union[None, Any, Any]]", 0.06617096347412214]], "test_bucket": [["str", 0.9999999999999999]], "test_object": [["str", 0.6417256943478096], ["int", 0.11045097417260434], ["Dict[str, Union[bool, str]]", 0.09402320155742305], ["Dict[str, Union[Any, str]]", 0.0769847731875872], ["wallet_api.common.configfetch.Value", 0.07681535673457572]], "upload_method": [["List[str]", 0.2383523068488396], ["str", 0.11361800417367983], ["tests.conftesConfluentAvroConsumerMock", 0.10551274947679083], ["tests.utils.MockCoroutine", 0.0898945547080095], ["list", 0.08352338122018876], ["Dict[str, int]", 0.07342933467673145]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1006, 4], [1020, 104]], "fn_var_ln": {"both_params_except": [[1009, 8], [1009, 26]], "no_params_except": [[1014, 8], [1014, 24]], "test_bucket": [[1007, 8], [1007, 19]], "test_object": [[1008, 8], [1008, 19]]}, "fn_var_occur": {"both_params_except": [["pytest", "raises", "ValueError", "match", "re", "escape", "both_params_except"]], "no_params_except": [["pytest", "raises", "ValueError", "match", "re", "escape", "no_params_except"]], "test_bucket": [["self", "gcs_hook", "upload", "test_bucket", "test_object"], ["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "data", "testdata_string"]], "test_object": [["self", "gcs_hook", "upload", "test_bucket", "test_object"], ["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "data", "testdata_string"]]}, "name": "test_upload_exceptions", "params": {"mock_service": "", "self": "", "testdata_file": "", "testdata_string": ""}, "params_descr": {"mock_service": "", "self": "", "testdata_file": "", "testdata_string": ""}, "params_occur": {"mock_service": [], "self": [["self", "gcs_hook", "upload", "test_bucket", "test_object"], ["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "data", "testdata_string"]], "testdata_file": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "data", "testdata_string"]], "testdata_string": [["self", "gcs_hook", "upload", "test_bucket", "test_object", "filename", "testdata_file", "data", "testdata_string"]]}, "params_p": {"args": [], "kwargs": [], "mock_service": [["str", 0.41428818738207], ["bool", 0.1943654657276928], ["Union[str, List[str]]", 0.11484500273288159], ["List[str]", 0.09151251200840667]], "self": [], "testdata_file": [["io.BytesIO", 0.09419308212121923], ["int", 0.0930282921285312], ["datetime.datetime", 0.0930282921285312], ["str", 0.0930282921285312]], "testdata_string": [["io.BytesIO", 0.09419308212121923], ["int", 0.0930282921285312], ["datetime.datetime", 0.0930282921285312], ["str", 0.0930282921285312]]}, "q_name": "TestGCSHookUpload.test_upload_exceptions", "ret_exprs": [], "ret_type": "", "variables": {"both_params_except": "", "no_params_except": "", "test_bucket": "", "test_object": ""}, "variables_p": {"both_params_except": [["str", 0.8505987964404588], ["List[str]", 0.07770188078685297], ["Optional[Match[str]]", 0.0716993227726884]], "no_params_except": [["str", 1.0]], "test_bucket": [["str", 0.29237262575745715], ["mode.utils.mocks.Mock", 0.09483187597555506], ["bytes", 0.09010853950985363]], "test_object": [["Dict[str, Dict[str, Any]]", 0.11086216391388401], ["int", 0.10956059206881927], ["str", 0.10151753618864838], ["Dict[str, Union[dict, Any]]", 0.09890171377943631], ["Dict[str, Union[Any, str]]", 0.09505770219221775]]}}], "name": "TestGCSHookUpload", "q_name": "TestGCSHookUpload", "variables": {}, "variables_p": {}}, {"cls_lc": [[1023, 0], [1418, 21]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1024, 4], [1028, 59]], "fn_var_ln": {"gcs_hook": [[1028, 12], [1028, 25]]}, "fn_var_occur": {"gcs_hook": [["self", "gcs_hook", "gcs", "GCSHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "gcs_hook", "gcs", "GCSHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSyncGcsHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"gcs_hook": ""}, "variables_p": {"gcs_hook": [["int", 0.3250856179466078], ["List[int]", 0.25935896696421246], ["List[str]", 0.18451255041216147], ["simulation.core.common.Resources", 0.12926032016484426], ["str", 0.10178254451217379]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1034, 4], [1051, 37]], "fn_var_ln": {"destination_bucket": [[1040, 8], [1040, 26]], "source_bucket": [[1038, 8], [1038, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket"], ["destination_bucket", "list_blobs", "assert_called_once_with", "delimiter", "None", "prefix", "None"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket"], ["source_bucket", "list_blobs", "assert_called_once_with", "delimiter", "None", "prefix", "None"]]}, "name": "test_should_do_nothing_when_buckets_is_empty", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_not_called"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["mock_get_conn", "return_value", "bucket", "assert_has_calls", "mock", "call", "mock", "call"]], "mock_rewrite": [["mock_rewrite", "assert_not_called"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "self", "_create_bucket", "name"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [["mock.Mock", 0.07422893584656634]], "mock_delete": [["mock.Mock", 0.07422893584656634]], "mock_get_conn": [["mock.Mock", 0.10074957424521884]], "mock_rewrite": [["mock.Mock", 0.07422893584656634]], "self": []}, "q_name": "TestSyncGcsHook.test_should_do_nothing_when_buckets_is_empty", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["set", 0.4783100075449266], ["float", 0.11730473655424464], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.10344747279106746], ["list", 0.10013454535579638]], "source_bucket": [["str", 0.7930280118346361], ["bytes", 0.10940177361156005], ["Dict[str, str]", 0.09757021455380395]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1057, 4], [1073, 107]], "fn_var_ln": {"destination_bucket": [[1063, 8], [1063, 26]], "source_bucket": [[1061, 8], [1061, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object", "destination_object"], ["destination_bucket", "list_blobs", "assert_called_once_with", "delimiter", "None", "prefix"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object", "destination_object"], ["source_bucket", "list_blobs", "assert_called_once_with", "delimiter", "None", "prefix"]]}, "name": "test_should_append_slash_to_object_if_missing", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [], "mock_delete": [], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [], "self": [["source_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "self", "_create_bucket", "name"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [["mock.Mock", 0.5815862422352902]], "mock_delete": [["mock.Mock", 0.5815862422352902]], "mock_get_conn": [["mock.Mock", 0.09950223279497551]], "mock_rewrite": [["mock.Mock", 0.5815862422352902]], "self": []}, "q_name": "TestSyncGcsHook.test_should_append_slash_to_object_if_missing", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["set", 0.4783100075449266], ["float", 0.11730473655424464], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.10344747279106746], ["list", 0.10013454535579638]], "source_bucket": [["str", 0.7930280118346361], ["bytes", 0.10940177361156005], ["Dict[str, str]", 0.09757021455380395]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1079, 4], [1108, 9]], "fn_var_ln": {"destination_bucket": [[1086, 8], [1086, 26]], "source_bucket": [[1081, 8], [1081, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket"], ["mock_copy", "assert_has_calls", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "any_order", "True"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket"], ["mock_copy", "assert_has_calls", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "any_order", "True"]]}, "name": "test_should_copy_files", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_has_calls", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "any_order", "True"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_not_called"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["destination_bucket", "self", "_create_bucket", "name"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [["scraper.storage.Storage", 0.09299166089174953]], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [], "self": []}, "q_name": "TestSyncGcsHook.test_should_copy_files", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["set", 0.4783100075449266], ["float", 0.11730473655424464], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.10344747279106746], ["list", 0.10013454535579638]], "source_bucket": [["str", 0.39461781730604584], ["dict", 0.3115969922606987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1114, 4], [1126, 89]], "fn_var_ln": {"destination_bucket": [[1121, 8], [1121, 26]], "source_bucket": [[1116, 8], [1116, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "recursive", "False"], ["destination_bucket", "list_blobs", "assert_called_once_with", "delimiter", "prefix", "None"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "recursive", "False"], ["source_bucket", "list_blobs", "assert_called_once_with", "delimiter", "prefix", "None"]]}, "name": "test_should_copy_files_non_recursive", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [], "mock_delete": [], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["destination_bucket", "self", "_create_bucket", "name"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "recursive", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [["mock.Mock", 0.8562725143815411]], "mock_delete": [["mock.Mock", 0.8562725143815411]], "mock_get_conn": [["mock.Mock", 0.08924107094110278]], "mock_rewrite": [["mock.Mock", 0.8562725143815411]], "self": []}, "q_name": "TestSyncGcsHook.test_should_copy_files_non_recursive", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["set", 0.4783100075449266], ["float", 0.11730473655424464], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.10344747279106746], ["list", 0.10013454535579638]], "source_bucket": [["str", 0.39461781730604584], ["dict", 0.3115969922606987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1132, 4], [1163, 9]], "fn_var_ln": {"destination_bucket": [[1139, 8], [1139, 26]], "source_bucket": [[1134, 8], [1134, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "destination_object"], ["mock_copy", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "destination_object"], ["mock_copy", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]]}, "name": "test_should_copy_files_to_subdirectory", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_not_called"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["destination_bucket", "self", "_create_bucket", "name"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "destination_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [], "self": []}, "q_name": "TestSyncGcsHook.test_should_copy_files_to_subdirectory", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["set", 0.4783100075449266], ["float", 0.11730473655424464], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.10344747279106746], ["list", 0.10013454535579638]], "source_bucket": [["str", 0.39461781730604584], ["dict", 0.3115969922606987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1169, 4], [1200, 9]], "fn_var_ln": {"destination_bucket": [[1176, 8], [1176, 26]], "source_bucket": [[1171, 8], [1171, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object"], ["mock_copy", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object"], ["mock_copy", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]]}, "name": "test_should_copy_files_from_subdirectory", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_not_called"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["destination_bucket", "self", "_create_bucket", "name"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [], "self": []}, "q_name": "TestSyncGcsHook.test_should_copy_files_from_subdirectory", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["set", 0.4783100075449266], ["float", 0.11730473655424464], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.10344747279106746], ["list", 0.10013454535579638]], "source_bucket": [["str", 0.39461781730604584], ["dict", 0.3115969922606987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1206, 4], [1240, 37]], "fn_var_ln": {"destination_bucket": [[1213, 8], [1213, 26]], "source_bucket": [[1208, 8], [1208, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "allow_overwrite", "True"], ["mock_rewrite", "assert_has_calls", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "any_order", "True"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "allow_overwrite", "True"], ["mock_rewrite", "assert_has_calls", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "any_order", "True"]]}, "name": "test_should_overwrite_files", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_not_called"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_has_calls", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "mock", "call", "destination_bucket", "destination_object", "source_bucket", "source_object", "any_order", "True"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "allow_overwrite", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [["scraper.storage.Storage", 0.09299166089174953]], "self": []}, "q_name": "TestSyncGcsHook.test_should_overwrite_files", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["bool", 0.28300643646815987], ["tuple", 0.11392991150490443], ["dict", 0.09678409749794656], ["float", 0.09167133011383079]], "source_bucket": [["str", 0.39461781730604584], ["dict", 0.3115969922606987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1246, 4], [1285, 37]], "fn_var_ln": {"destination_bucket": [[1255, 8], [1255, 26]], "source_bucket": [[1250, 8], [1250, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "destination_object", "allow_overwrite", "True"], ["mock_rewrite", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "destination_object", "allow_overwrite", "True"], ["mock_rewrite", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]]}, "name": "test_should_overwrite_files_to_subdirectory", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_not_called"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "destination_object", "allow_overwrite", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [], "self": []}, "q_name": "TestSyncGcsHook.test_should_overwrite_files_to_subdirectory", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["bool", 0.28300643646815987], ["tuple", 0.11392991150490443], ["dict", 0.09678409749794656], ["float", 0.09167133011383079]], "source_bucket": [["str", 0.39461781730604584], ["dict", 0.3115969922606987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1291, 4], [1330, 37]], "fn_var_ln": {"destination_bucket": [[1300, 8], [1300, 26]], "source_bucket": [[1295, 8], [1295, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object", "allow_overwrite", "True"], ["mock_rewrite", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object", "allow_overwrite", "True"], ["mock_rewrite", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]]}, "name": "test_should_overwrite_files_from_subdirectory", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_not_called"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_has_calls", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "mock", "call", "source_bucket", "source_object", "destination_bucket", "destination_object", "any_order", "True"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "self", "_create_blob"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "source_object", "allow_overwrite", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [], "self": []}, "q_name": "TestSyncGcsHook.test_should_overwrite_files_from_subdirectory", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["bool", 0.28300643646815987], ["tuple", 0.11392991150490443], ["dict", 0.09678409749794656], ["float", 0.09167133011383079]], "source_bucket": [["str", 0.39461781730604584], ["dict", 0.3115969922606987]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1336, 4], [1354, 37]], "fn_var_ln": {"destination_bucket": [[1340, 8], [1340, 26]], "source_bucket": [[1338, 8], [1338, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "destination_bucket", "self", "_create_blob", "destination_bucket"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "True"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "True"]]}, "name": "test_should_delete_extra_files", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_not_called"]], "mock_delete": [["mock_delete", "assert_has_calls", "mock", "call", "mock", "call", "any_order", "True"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_not_called"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "destination_bucket", "self", "_create_blob", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "True"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [], "self": []}, "q_name": "TestSyncGcsHook.test_should_delete_extra_files", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["distutils.version.StrictVersion", 0.1812952947299089], ["Dict[str, Type[Any]]", 0.1144983963964725], ["list", 0.11396802992206041], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10041490270523311], ["Tuple[Any, Any, Any]", 0.09505797371464594]], "source_bucket": [["str", 0.7930280118346361], ["bytes", 0.10940177361156005], ["Dict[str, str]", 0.09757021455380395]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1360, 4], [1377, 37]], "fn_var_ln": {"destination_bucket": [[1366, 8], [1366, 26]], "source_bucket": [[1364, 8], [1364, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "destination_bucket", "self", "_create_blob", "destination_bucket"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "False"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "False"]]}, "name": "test_should_not_delete_extra_files_when_delete_extra_files_is_disabled", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_not_called"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_not_called"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "destination_bucket", "self", "_create_blob", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [], "mock_delete": [], "mock_get_conn": [], "mock_rewrite": [], "self": []}, "q_name": "TestSyncGcsHook.test_should_not_delete_extra_files_when_delete_extra_files_is_disabled", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["distutils.version.StrictVersion", 0.1812952947299089], ["Dict[str, Type[Any]]", 0.1144983963964725], ["list", 0.11396802992206041], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10041490270523311], ["Tuple[Any, Any, Any]", 0.09505797371464594]], "source_bucket": [["str", 0.7930280118346361], ["bytes", 0.10940177361156005], ["Dict[str, str]", 0.09757021455380395]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1383, 4], [1406, 37]], "fn_var_ln": {"destination_bucket": [[1392, 8], [1392, 26]], "source_bucket": [[1387, 8], [1387, 21]]}, "fn_var_occur": {"destination_bucket": [["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "destination_bucket", "self", "_create_blob", "destination_bucket"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "False", "allow_overwrite", "False"]], "source_bucket": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "source_bucket", "self", "_create_blob", "source_bucket"], ["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "False", "allow_overwrite", "False"]]}, "name": "test_should_not_overwrite_when_overwrite_is_disabled", "params": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_descr": {"mock_copy": "", "mock_delete": "", "mock_get_conn": "", "mock_rewrite": "", "self": ""}, "params_occur": {"mock_copy": [["mock_copy", "assert_not_called"]], "mock_delete": [["mock_delete", "assert_not_called"]], "mock_get_conn": [["mock_get_conn", "return_value", "bucket", "side_effect", "source_bucket", "destination_bucket"]], "mock_rewrite": [["mock_rewrite", "assert_not_called"]], "self": [["source_bucket", "self", "_create_bucket", "name"], ["source_bucket", "list_blobs", "return_value", "self", "_create_blob", "source_bucket", "self", "_create_blob", "source_bucket"], ["destination_bucket", "self", "_create_bucket", "name"], ["destination_bucket", "list_blobs", "return_value", "self", "_create_blob", "destination_bucket", "self", "_create_blob", "destination_bucket"], ["self", "gcs_hook", "sync", "source_bucket", "destination_bucket", "delete_extra_files", "False", "allow_overwrite", "False"]]}, "params_p": {"args": [], "kwargs": [], "mock_copy": [["mock.Mock", 0.18507019813619074]], "mock_delete": [["mock.Mock", 0.18507019813619074]], "mock_get_conn": [["mock.Mock", 0.10425630625413812]], "mock_rewrite": [["mock.Mock", 0.18507019813619074]], "self": []}, "q_name": "TestSyncGcsHook.test_should_not_overwrite_when_overwrite_is_disabled", "ret_exprs": [], "ret_type": "", "variables": {"destination_bucket": "", "source_bucket": ""}, "variables_p": {"destination_bucket": [["distutils.version.StrictVersion", 0.1812952947299089], ["Dict[str, Type[Any]]", 0.1144983963964725], ["list", 0.11396802992206041], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10041490270523311], ["Tuple[Any, Any, Any]", 0.09505797371464594]], "source_bucket": [["str", 0.32246342357531144], ["dict", 0.2116336418196797]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1408, 4], [1413, 19]], "fn_var_ln": {"blob": [[1409, 8], [1409, 12]], "bucket": [[1412, 8], [1412, 19]], "crc32": [[1411, 8], [1411, 18]], "name": [[1410, 8], [1410, 17]]}, "fn_var_occur": {"blob": [["blob", "mock", "MagicMock", "name", "name"], ["blob", "name", "name"], ["blob", "crc32", "crc32"], ["blob", "bucket", "bucket"]], "bucket": [["blob", "bucket", "bucket"]], "crc32": [["blob", "crc32", "crc32"]], "name": [["blob", "mock", "MagicMock", "name", "name"], ["blob", "name", "name"]]}, "name": "_create_blob", "params": {"bucket": "", "crc32": "builtins.str", "name": "builtins.str", "self": ""}, "params_descr": {"bucket": "", "crc32": "", "name": "", "self": ""}, "params_occur": {"bucket": [["blob", "bucket", "bucket"]], "crc32": [["blob", "crc32", "crc32"]], "name": [["blob", "mock", "MagicMock", "name", "name"], ["blob", "name", "name"]], "self": []}, "params_p": {"args": [], "bucket": [["str", 0.3589408287505899], ["int", 0.20318579815365193], ["Union[int, str]", 0.12112684415808725], ["bool", 0.11385326947686113]], "crc32": [["Optional[str]", 0.18333445899260395], ["str", 0.1675109576675484], ["bool", 0.1380103218660118], ["int", 0.1366916268325972]], "kwargs": [], "name": [["str", 0.40992718651958104], ["Optional[int]", 0.09794341271683542], ["bool", 0.09545053016452842], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.08942498122365686]], "self": []}, "q_name": "TestSyncGcsHook._create_blob", "ret_exprs": ["return blob"], "ret_type": "", "ret_type_p": [["bool", 0.5], ["float", 0.1]], "variables": {"blob": "", "bucket": "", "crc32": "", "name": ""}, "variables_p": {"blob": [["mock.Mock", 0.8208518976770096]], "bucket": [["str", 0.3295460902423413], ["int", 0.19462382714418625], ["List[str]", 0.19073168560120507], ["Final", 0.10980453459688269], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08977658907332248], ["Dict[str, bool]", 0.0855172733420622]], "crc32": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "name": [["str", 0.0922606311474243]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1415, 4], [1418, 21]], "fn_var_ln": {"bucket": [[1416, 8], [1416, 14]], "name": [[1417, 8], [1417, 19]]}, "fn_var_occur": {"bucket": [["bucket", "mock", "MagicMock", "name", "name"], ["bucket", "name", "name"]], "name": [["bucket", "mock", "MagicMock", "name", "name"], ["bucket", "name", "name"]]}, "name": "_create_bucket", "params": {"name": "builtins.str", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["bucket", "mock", "MagicMock", "name", "name"], ["bucket", "name", "name"]], "self": []}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.4877720458920094], ["bool", 0.12742205582930408], ["List[str]", 0.08079147292115085], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.07843952822892908]], "self": []}, "q_name": "TestSyncGcsHook._create_bucket", "ret_exprs": ["return bucket"], "ret_type": "", "ret_type_p": [["str", 0.2018804109118383], ["List[str]", 0.11069657000755923]], "variables": {"bucket": "", "name": ""}, "variables_p": {"bucket": [["mock.MagicMock", 0.08620046913667938]], "name": [["str", 0.18615269073458546]]}}], "name": "TestSyncGcsHook", "q_name": "TestSyncGcsHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 0], [56, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "testdata_bytes", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "testdata_bytes", "ret_exprs": ["return b\"x\" * 393216"], "ret_type": "", "ret_type_p": [["bytes", 0.09205941939264613], ["int", 0.08081797674659728], ["bool", 0.07897054547945402], ["Union[Dict, List]", 0.07685490847891918], ["str", 0.06823440931487468]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 0], [61, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "testdata_string", "params": {"testdata_bytes": ""}, "params_descr": {"testdata_bytes": ""}, "params_occur": {"testdata_bytes": [["testdata_bytes", "decode"]]}, "params_p": {"args": [], "kwargs": [], "testdata_bytes": [["bytes", 0.5866825552008971], ["int", 0.16454803063669574], ["List[int]", 0.09384104410098563], ["bytearray", 0.07838151274980851], ["bool", 0.07654685731161308]]}, "q_name": "testdata_string", "ret_exprs": ["return testdata_bytes.decode()"], "ret_type": "", "ret_type_p": [["str", 0.4404371208070623], ["bytearray", 0.26127702602886027], ["int", 0.1491429265820387]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 0], [68, 17]], "fn_var_ln": {"fn": [[66, 4], [66, 6]]}, "fn_var_occur": {"fn": [["fn", "tmp_path_factory", "mktemp", "request", "node", "name"], ["fn", "write_bytes", "testdata_bytes"], ["str", "fn"]]}, "name": "testdata_file", "params": {"request": "", "testdata_bytes": "", "tmp_path_factory": ""}, "params_descr": {"request": "", "testdata_bytes": "", "tmp_path_factory": ""}, "params_occur": {"request": [["fn", "tmp_path_factory", "mktemp", "request", "node", "name"]], "testdata_bytes": [["fn", "write_bytes", "testdata_bytes"]], "tmp_path_factory": [["fn", "tmp_path_factory", "mktemp", "request", "node", "name"]]}, "params_p": {"args": [], "kwargs": [], "request": [["Optional[List[Type]]", 0.14303207748145172], ["str", 0.0888379147404846], ["kata.data.io.network.GithubApi", 0.08799439274011275]], "testdata_bytes": [["int", 0.3115268748899854], ["List[bool]", 0.11574518301716781], ["List[str]", 0.11574518301716781], ["list", 0.09699377720253628], ["str", 0.08617459703365127], ["List[int]", 0.08452176523288776]], "tmp_path_factory": [["Optional[List[Type]]", 0.14303207748145172], ["str", 0.0888379147404846], ["kata.data.io.network.GithubApi", 0.08799439274011275]]}, "q_name": "testdata_file", "ret_exprs": [], "ret_type": "", "variables": {"fn": ""}, "variables_p": {"fn": [["neuromation.api.storage.FileStatus", 0.41534049723513594]]}}], "imports": ["__future__", "annotations", "copy", "io", "logging", "os", "re", "datetime", "datetime", "timedelta", "unittest", "mock", "dateutil", "pytest", "google", "api_core", "exceptions", "GoogleAPICallError", "google", "cloud", "exceptions", "storage", "google", "cloud", "storage", "retry", "DEFAULT_RETRY", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "hooks", "gcs", "airflow", "providers", "google", "cloud", "hooks", "gcs", "_fallback_object_url_to_object_name_and_bucket_name", "airflow", "providers", "google", "common", "consts", "CLIENT_INFO", "airflow", "utils", "timezone", "airflow", "version", "version", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id"], "mod_var_ln": {"BASE_STRING": [[44, 0], [44, 11]], "EMPTY_CONTENT": [[47, 0], [47, 13]], "GCP_CONN_ID": [[49, 0], [49, 11]], "GCS_FILE_URI": [[50, 0], [50, 12]], "GCS_STRING": [[45, 0], [45, 10]], "PROJECT_ID_TEST": [[48, 0], [48, 15]]}, "mod_var_occur": {"BASE_STRING": [["mock", "patch", "BASE_STRING", "format"]], "EMPTY_CONTENT": [], "GCP_CONN_ID": [["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI", "parsed_value"], ["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI"], ["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI"], ["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI"]], "GCS_FILE_URI": [["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI", "parsed_value"], ["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI"], ["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI"], ["gcs", "parse_json_from_gcs", "gcp_conn_id", "GCP_CONN_ID", "file_uri", "GCS_FILE_URI"]], "GCS_STRING": [["mock", "patch", "GCS_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "GCS_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"]], "PROJECT_ID_TEST": []}, "no_types_annot": {"D": 0, "I": 0, "U": 450}, "session_id": "JPyc-naZfylMgS9J5P2MgU6iLS7R27bwmQY8jmJSPtU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BASE_STRING": "", "EMPTY_CONTENT": "", "GCP_CONN_ID": "", "GCS_FILE_URI": "", "GCS_STRING": "", "PROJECT_ID_TEST": ""}, "variables_p": {"BASE_STRING": [["str", 0.28810320030527536], ["List[str]", 0.1731278515385716], ["Dict[str, List[str]]", 0.14516136761898604], ["Pattern[str]", 0.11118374050866293], ["list", 0.10612606371135479]], "EMPTY_CONTENT": [["str", 0.49999999999999994], ["bool", 0.39999999999999997], ["bytearray", 0.09999999999999999]], "GCP_CONN_ID": [["str", 0.42268560635032826], ["Optional[str]", 0.11658366609284586]], "GCS_FILE_URI": [["str", 0.6035593555142564], ["io.StringIO", 0.09627828510354665], ["Dict[str, str]", 0.09210664264533296], ["Dict[str, Any]", 0.08062342834475943]], "GCS_STRING": [["str", 0.3509448665117174], ["List[List[int]]", 0.12492261966301375], ["dict", 0.10606873644200318], ["tuple", 0.0912914164597519], ["Dict[str, Any]", 0.08460547868273563]], "PROJECT_ID_TEST": [["list", 0.36596685191043493], ["bool", 0.26247363669805185], ["str", 0.07055444101029226]]}}}