{"error": null, "response": {"classes": [{"cls_lc": [[43, 0], [109, 107]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [48, 64]], "fn_var_ln": {"hook": [[48, 12], [48, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "AutoMLHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "AutoMLHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAutoMLWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [68, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_training_pipeline", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "delete_training_pipeline", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "training_pipeline_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"]], "self": [["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09756313277970485]], "self": []}, "q_name": "TestAutoMLWithDefaultProjectIdHook.test_delete_training_pipeline", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [88, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_training_pipeline", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "get_training_pipeline", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "training_pipeline_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"]], "self": [["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09029936214427724]], "self": []}, "q_name": "TestAutoMLWithDefaultProjectIdHook.test_get_training_pipeline", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [109, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_training_pipelines", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "list_training_pipelines", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "page_size", "None", "page_token", "None", "filter", "None", "read_mask", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "list_training_pipelines", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09223573038883998]], "self": []}, "q_name": "TestAutoMLWithDefaultProjectIdHook.test_list_training_pipelines", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestAutoMLWithDefaultProjectIdHook", "q_name": "TestAutoMLWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[112, 0], [182, 107]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [115, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAutoMLWithoutDefaultProjectIdHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[117, 4], [121, 64]], "fn_var_ln": {"hook": [[121, 12], [121, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "AutoMLHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "AutoMLHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAutoMLWithoutDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [141, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_training_pipeline", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "delete_training_pipeline", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "training_pipeline_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"]], "self": [["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09756313277970485]], "self": []}, "q_name": "TestAutoMLWithoutDefaultProjectIdHook.test_delete_training_pipeline", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [161, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_training_pipeline", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "get_training_pipeline", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "training_pipeline_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"]], "self": [["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09029936214427724]], "self": []}, "q_name": "TestAutoMLWithoutDefaultProjectIdHook.test_get_training_pipeline", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[164, 4], [182, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_training_pipelines", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "list_training_pipelines", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "page_size", "None", "page_token", "None", "filter", "None", "read_mask", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "list_training_pipelines", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09223573038883998]], "self": []}, "q_name": "TestAutoMLWithoutDefaultProjectIdHook.test_list_training_pipelines", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestAutoMLWithoutDefaultProjectIdHook", "q_name": "TestAutoMLWithoutDefaultProjectIdHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "airflow", "providers", "google", "cloud", "hooks", "vertex_ai", "auto_ml", "AutoMLHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"BASE_STRING": [[39, 0], [39, 11]], "CUSTOM_JOB_STRING": [[40, 0], [40, 17]], "TEST_GCP_CONN_ID": [[31, 0], [31, 16]], "TEST_PIPELINE_JOB": [[34, 0], [34, 17]], "TEST_PIPELINE_JOB_ID": [[35, 0], [35, 20]], "TEST_PROJECT_ID": [[33, 0], [33, 15]], "TEST_REGION": [[32, 0], [32, 11]], "TEST_TRAINING_PIPELINE": [[36, 0], [36, 22]], "TEST_TRAINING_PIPELINE_NAME": [[37, 0], [37, 27]]}, "mod_var_occur": {"BASE_STRING": [["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_no_default_project_id"]], "CUSTOM_JOB_STRING": [], "TEST_GCP_CONN_ID": [["self", "hook", "AutoMLHook", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["AutoMLHook", "gcp_conn_id", "TEST_GCP_CONN_ID", "delegate_to"], ["self", "hook", "AutoMLHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]], "TEST_PIPELINE_JOB": [], "TEST_PIPELINE_JOB_ID": [], "TEST_PROJECT_ID": [["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "list_training_pipelines", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "list_training_pipelines", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "TEST_REGION": [["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "list_training_pipelines", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "list_training_pipelines", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "TEST_TRAINING_PIPELINE": [], "TEST_TRAINING_PIPELINE_NAME": [["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "delete_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"], ["self", "hook", "get_training_pipeline", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "training_pipeline", "TEST_TRAINING_PIPELINE_NAME"], ["mock_client", "return_value", "training_pipeline_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_TRAINING_PIPELINE_NAME"]]}, "no_types_annot": {"D": 13, "I": 0, "U": 13}, "session_id": "Akap7YnNdezbVHkLJwuD1DdLnhZg0S1QW4PnAS0f3XM", "set": null, "tc": [false, null], "type_annot_cove": 0.5, "typed_seq": "", "untyped_seq": "", "variables": {"BASE_STRING": "", "CUSTOM_JOB_STRING": "", "TEST_GCP_CONN_ID": "builtins.str", "TEST_PIPELINE_JOB": "builtins.dict", "TEST_PIPELINE_JOB_ID": "builtins.str", "TEST_PROJECT_ID": "builtins.str", "TEST_REGION": "builtins.str", "TEST_TRAINING_PIPELINE": "builtins.dict", "TEST_TRAINING_PIPELINE_NAME": "builtins.str"}, "variables_p": {"BASE_STRING": [["list", 0.2106209150826826], ["str", 0.18276628639361064], ["List[Tuple[str, str]]", 0.10758986291579262], ["List[dict]", 0.09659664232339189], ["List[str]", 0.08795139996388007]], "CUSTOM_JOB_STRING": [["int", 0.6], ["str", 0.30000000000000004], ["Dict[str, int]", 0.1]], "TEST_GCP_CONN_ID": [["str", 0.9186482235453974]], "TEST_PIPELINE_JOB": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_PIPELINE_JOB_ID": [["str", 0.6916622581692238], ["Optional[str]", 0.10947808602664154], ["bool", 0.08516566607705627]], "TEST_PROJECT_ID": [["str", 1.0]], "TEST_REGION": [["str", 0.7263670447246122], ["int", 0.27363295527538767]], "TEST_TRAINING_PIPELINE": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_TRAINING_PIPELINE_NAME": [["str", 0.9001471147270409]]}}}