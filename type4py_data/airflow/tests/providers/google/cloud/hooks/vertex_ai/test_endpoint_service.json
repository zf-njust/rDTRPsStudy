{"error": null, "response": {"classes": [{"cls_lc": [[46, 0], [218, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [49, 88]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [55, 73]], "fn_var_ln": {"hook": [[55, 12], [55, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "EndpointServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "EndpointServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [79, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "create_endpoint", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09053035888437551]], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_create_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [101, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "delete_endpoint", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "endpoint_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09128741377919355]], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_delete_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [127, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_deploy_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "deploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09697964240545064]], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_deploy_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[130, 4], [149, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "get_endpoint", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "endpoint_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08515571872242529]], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_get_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[152, 4], [174, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_endpoints", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "list_endpoints", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "filter", "None", "page_size", "None", "page_token", "None", "read_mask", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "list_endpoints", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08749363537396251]], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_list_endpoints", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[177, 4], [198, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_undeploy_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "undeploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09697964240545064]], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_undeploy_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[201, 4], [218, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "update_endpoint", "assert_called_once_with", "request", "dict", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11234482305475124]], "self": []}, "q_name": "TestEndpointServiceWithDefaultProjectIdHook.test_update_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestEndpointServiceWithDefaultProjectIdHook", "q_name": "TestEndpointServiceWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[221, 0], [389, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[222, 4], [226, 73]], "fn_var_ln": {"hook": [[226, 12], [226, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "EndpointServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "EndpointServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[229, 4], [250, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "create_endpoint", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09053035888437551]], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.test_create_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [272, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "delete_endpoint", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "endpoint_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09128741377919355]], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.test_delete_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[275, 4], [298, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_deploy_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "deploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09697964240545064]], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.test_deploy_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[301, 4], [320, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "get_endpoint", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "endpoint_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08515571872242529]], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.test_get_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[323, 4], [345, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_endpoints", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "list_endpoints", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "filter", "None", "page_size", "None", "page_token", "None", "read_mask", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "list_endpoints", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.08749363537396251]], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.test_list_endpoints", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[348, 4], [369, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_undeploy_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "undeploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"]], "self": [["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09697964240545064]], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.test_undeploy_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[372, 4], [389, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_endpoint", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "update_endpoint", "assert_called_once_with", "request", "dict", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11234482305475124]], "self": []}, "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook.test_update_endpoint", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestEndpointServiceWithoutDefaultProjectIdHook", "q_name": "TestEndpointServiceWithoutDefaultProjectIdHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "airflow", "providers", "google", "cloud", "hooks", "vertex_ai", "endpoint_service", "EndpointServiceHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"BASE_STRING": [[42, 0], [42, 11]], "ENDPOINT_SERVICE_STRING": [[43, 0], [43, 23]], "TEST_DEPLOYED_MODEL": [[37, 0], [37, 19]], "TEST_DEPLOYED_MODEL_ID": [[38, 0], [38, 22]], "TEST_ENDPOINT": [[34, 0], [34, 13]], "TEST_ENDPOINT_ID": [[35, 0], [35, 16]], "TEST_ENDPOINT_NAME": [[36, 0], [36, 18]], "TEST_GCP_CONN_ID": [[31, 0], [31, 16]], "TEST_PROJECT_ID": [[33, 0], [33, 15]], "TEST_REGION": [[32, 0], [32, 11]], "TEST_TRAFFIC_SPLIT": [[39, 0], [39, 18]], "TEST_UPDATE_MASK": [[40, 0], [40, 16]]}, "mod_var_occur": {"BASE_STRING": [["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_no_default_project_id"]], "ENDPOINT_SERVICE_STRING": [], "TEST_DEPLOYED_MODEL": [["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "deploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "deploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_DEPLOYED_MODEL_ID": [["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "undeploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "undeploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_ENDPOINT": [["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "return_value", "create_endpoint", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_endpoint", "assert_called_once_with", "request", "dict", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "return_value", "create_endpoint", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_endpoint", "assert_called_once_with", "request", "dict", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_ENDPOINT_ID": [["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "return_value", "create_endpoint", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "return_value", "create_endpoint", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_ENDPOINT_NAME": [["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"]], "TEST_GCP_CONN_ID": [["EndpointServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID", "delegate_to"], ["self", "hook", "EndpointServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["self", "hook", "EndpointServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]], "TEST_PROJECT_ID": [["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "list_endpoints", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "list_endpoints", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"]], "TEST_REGION": [["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "list_endpoints", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["self", "hook", "create_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT", "endpoint_id", "TEST_ENDPOINT_ID"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "get_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "list_endpoints", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "endpoint_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_ENDPOINT_NAME"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "assert_called_once_with", "TEST_REGION"]], "TEST_TRAFFIC_SPLIT": [["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "deploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "undeploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "deploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "deploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model", "TEST_DEPLOYED_MODEL", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "undeploy_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint", "TEST_ENDPOINT_NAME", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT"], ["mock_client", "return_value", "undeploy_model", "assert_called_once_with", "request", "dict", "endpoint", "mock_client", "return_value", "endpoint_path", "return_value", "deployed_model_id", "TEST_DEPLOYED_MODEL_ID", "traffic_split", "TEST_TRAFFIC_SPLIT", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_UPDATE_MASK": [["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_endpoint", "assert_called_once_with", "request", "dict", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_endpoint", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "endpoint_id", "TEST_ENDPOINT_NAME", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_endpoint", "assert_called_once_with", "request", "dict", "endpoint", "TEST_ENDPOINT", "update_mask", "TEST_UPDATE_MASK", "metadata", "retry", "DEFAULT", "timeout", "None"]]}, "no_types_annot": {"D": 24, "I": 0, "U": 21}, "session_id": "7cHwTTBTZkyajmSWXWkLGtcKswq9K9zlMzw96Emt-_4", "set": null, "tc": [false, null], "type_annot_cove": 0.53, "typed_seq": "", "untyped_seq": "", "variables": {"BASE_STRING": "", "ENDPOINT_SERVICE_STRING": "", "TEST_DEPLOYED_MODEL": "builtins.dict", "TEST_DEPLOYED_MODEL_ID": "builtins.str", "TEST_ENDPOINT": "builtins.dict", "TEST_ENDPOINT_ID": "builtins.str", "TEST_ENDPOINT_NAME": "builtins.str", "TEST_GCP_CONN_ID": "builtins.str", "TEST_PROJECT_ID": "builtins.str", "TEST_REGION": "builtins.str", "TEST_TRAFFIC_SPLIT": "builtins.dict", "TEST_UPDATE_MASK": "builtins.dict"}, "variables_p": {"BASE_STRING": [["list", 0.2106209150826826], ["str", 0.18276628639361064], ["List[Tuple[str, str]]", 0.10758986291579262], ["List[dict]", 0.09659664232339189], ["List[str]", 0.08795139996388007]], "ENDPOINT_SERVICE_STRING": [["int", 0.6], ["str", 0.30000000000000004], ["Dict[str, int]", 0.1]], "TEST_DEPLOYED_MODEL": [["str", 0.7048924440531956], ["Dict[str, List[str]]", 0.11207390923102661], ["Dict[str, Any]", 0.10231843952012092], ["list", 0.08071520719565696]], "TEST_DEPLOYED_MODEL_ID": [["str", 0.9006366792675402], ["Pattern[str]", 0.09936332073245982]], "TEST_ENDPOINT": [["str", 0.8453506784018837], ["List[str]", 0.07914110317223776], ["Dict[str, List[Any]]", 0.07550821842587846]], "TEST_ENDPOINT_ID": [["str", 1.0]], "TEST_ENDPOINT_NAME": [["str", 0.789271104377362]], "TEST_GCP_CONN_ID": [["str", 0.2891198708579297], ["List[bool]", 0.12016700857292045], ["List[Union[Any, Any, Any, Any]]", 0.11464871255978099], ["Dict[str, str]", 0.0903004495380098], ["ClassVar[str]", 0.08861146014281189]], "TEST_PROJECT_ID": [["str", 1.0]], "TEST_REGION": [["str", 0.8453506784018837], ["List[str]", 0.07914110317223776], ["Dict[str, List[Any]]", 0.07550821842587846]], "TEST_TRAFFIC_SPLIT": [["str", 0.6775630421462436], ["Dict[str, Union[float, str]]", 0.10507911379315317], ["Dict[Any, Dict[str, Any]]", 0.09749442358021908]], "TEST_UPDATE_MASK": [["Dict[str, str]", 0.30772866756247075], ["str", 0.3059638944536006], ["List[str]", 0.19794530215155368], ["int", 0.09276062554447372]]}}}