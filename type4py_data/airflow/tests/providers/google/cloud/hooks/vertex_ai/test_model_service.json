{"error": null, "response": {"classes": [{"cls_lc": [[42, 0], [132, 107]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [45, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestModelServiceWithDefaultProjectIdHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [51, 70]], "fn_var_ln": {"hook": [[51, 12], [51, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "ModelServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "ModelServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestModelServiceWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [73, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "delete_model", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "model_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"]], "self": [["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09208340254464269]], "self": []}, "q_name": "TestModelServiceWithDefaultProjectIdHook.test_delete_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 4], [95, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_export_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "export_model", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "model_path", "return_value", "output_config", "TEST_OUTPUT_CONFIG", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"]], "self": [["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09721183612914437]], "self": []}, "q_name": "TestModelServiceWithDefaultProjectIdHook.test_export_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [117, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_models", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "list_models", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "filter", "None", "page_size", "None", "page_token", "None", "read_mask", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "list_models", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.0850090398521613]], "self": []}, "q_name": "TestModelServiceWithDefaultProjectIdHook.test_list_models", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [132, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_upload_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "upload_model", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "model", "TEST_MODEL", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09162953687224236]], "self": []}, "q_name": "TestModelServiceWithDefaultProjectIdHook.test_upload_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestModelServiceWithDefaultProjectIdHook", "q_name": "TestModelServiceWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[135, 0], [221, 107]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [140, 70]], "fn_var_ln": {"hook": [[140, 12], [140, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "ModelServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "ModelServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestModelServiceWithoutDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [162, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "delete_model", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "model_path", "return_value", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"]], "self": [["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09208340254464269]], "self": []}, "q_name": "TestModelServiceWithoutDefaultProjectIdHook.test_delete_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [184, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_export_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "export_model", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "model_path", "return_value", "output_config", "TEST_OUTPUT_CONFIG", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"]], "self": [["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09721183612914437]], "self": []}, "q_name": "TestModelServiceWithoutDefaultProjectIdHook.test_export_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [206, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_models", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "list_models", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "filter", "None", "page_size", "None", "page_token", "None", "read_mask", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "list_models", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.0850090398521613]], "self": []}, "q_name": "TestModelServiceWithoutDefaultProjectIdHook.test_list_models", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[209, 4], [221, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_upload_model", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "upload_model", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "model", "TEST_MODEL", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "self": [["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.09162953687224236]], "self": []}, "q_name": "TestModelServiceWithoutDefaultProjectIdHook.test_upload_model", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestModelServiceWithoutDefaultProjectIdHook", "q_name": "TestModelServiceWithoutDefaultProjectIdHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "airflow", "providers", "google", "cloud", "hooks", "vertex_ai", "model_service", "ModelServiceHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"BASE_STRING": [[38, 0], [38, 11]], "MODEL_SERVICE_STRING": [[39, 0], [39, 20]], "TEST_GCP_CONN_ID": [[31, 0], [31, 16]], "TEST_MODEL": [[34, 0], [34, 10]], "TEST_MODEL_NAME": [[35, 0], [35, 15]], "TEST_OUTPUT_CONFIG": [[36, 0], [36, 18]], "TEST_PROJECT_ID": [[33, 0], [33, 15]], "TEST_REGION": [[32, 0], [32, 11]]}, "mod_var_occur": {"BASE_STRING": [["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_no_default_project_id"]], "MODEL_SERVICE_STRING": [], "TEST_GCP_CONN_ID": [["ModelServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID", "delegate_to"], ["self", "hook", "ModelServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["self", "hook", "ModelServiceHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]], "TEST_MODEL": [["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"], ["mock_client", "return_value", "upload_model", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "model", "TEST_MODEL", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"], ["mock_client", "return_value", "upload_model", "assert_called_once_with", "request", "dict", "parent", "mock_client", "return_value", "common_location_path", "return_value", "model", "TEST_MODEL", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_MODEL_NAME": [["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"]], "TEST_OUTPUT_CONFIG": [["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "return_value", "export_model", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "model_path", "return_value", "output_config", "TEST_OUTPUT_CONFIG", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "return_value", "export_model", "assert_called_once_with", "request", "dict", "name", "mock_client", "return_value", "model_path", "return_value", "output_config", "TEST_OUTPUT_CONFIG", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_PROJECT_ID": [["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "list_models", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "list_models", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]], "TEST_REGION": [["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "list_models", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "delete_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "export_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL_NAME", "output_config", "TEST_OUTPUT_CONFIG"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "model_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION", "TEST_MODEL_NAME"], ["self", "hook", "list_models", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"], ["self", "hook", "upload_model", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "model", "TEST_MODEL"], ["mock_client", "assert_called_once_with", "TEST_REGION"], ["mock_client", "return_value", "common_location_path", "assert_called_once_with", "TEST_PROJECT_ID", "TEST_REGION"]]}, "no_types_annot": {"D": 13, "I": 0, "U": 16}, "session_id": "btvdMbyKXIJhYASEVzqsWMY9tzg7e1-e65Sv2rXABwg", "set": null, "tc": [false, null], "type_annot_cove": 0.45, "typed_seq": "", "untyped_seq": "", "variables": {"BASE_STRING": "", "MODEL_SERVICE_STRING": "", "TEST_GCP_CONN_ID": "builtins.str", "TEST_MODEL": "", "TEST_MODEL_NAME": "builtins.str", "TEST_OUTPUT_CONFIG": "builtins.dict", "TEST_PROJECT_ID": "builtins.str", "TEST_REGION": "builtins.str"}, "variables_p": {"BASE_STRING": [["list", 0.2106209150826826], ["str", 0.18276628639361064], ["List[Tuple[str, str]]", 0.10758986291579262], ["List[dict]", 0.09659664232339189], ["List[str]", 0.08795139996388007]], "MODEL_SERVICE_STRING": [["str", 0.7999999999999999], ["bool", 0.2]], "TEST_GCP_CONN_ID": [["str", 0.2891198708579297], ["List[bool]", 0.12016700857292045], ["List[Union[Any, Any, Any, Any]]", 0.11464871255978099], ["Dict[str, str]", 0.0903004495380098], ["ClassVar[str]", 0.08861146014281189]], "TEST_MODEL": [["str", 0.46732554855371705], ["Dict[str, Dict[str, Any]]", 0.19787916376135864], ["Dict[str, List[Any]]", 0.12636151303718837], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11234931127307524], ["Dict[str, str]", 0.09608446337466066]], "TEST_MODEL_NAME": [["str", 0.7876756465142544]], "TEST_OUTPUT_CONFIG": [["bytes", 0.17936529814885516], ["str", 0.17533438147922858], ["Dict[str, Dict[str, str]]", 0.110796789358295], ["ChainMap", 0.0946776449571814], ["Dict[str, Any]", 0.08904909804986141]], "TEST_PROJECT_ID": [["str", 1.0]], "TEST_REGION": [["str", 0.4195354106460939], ["Dict[str, Union[None, Any, Any, int, str]]", 0.10800633405435346], ["dict", 0.10432498173062843], ["Dict[str, List[Any]]", 0.10311900999779319], ["Dict[str, str]", 0.08881274852135462]]}}}