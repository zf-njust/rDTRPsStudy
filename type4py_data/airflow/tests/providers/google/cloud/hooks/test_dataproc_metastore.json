{"error": null, "response": {"classes": [{"cls_lc": [[80, 0], [366, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [83, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delegate_to_runtime_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_delegate_to_runtime_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [89, 75]], "fn_var_ln": {"hook": [[89, 12], [89, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "DataprocMetastoreHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "DataprocMetastoreHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [111, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_backup", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.13932164797529709]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_create_backup", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [133, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_metadata_import", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.13686703684547605]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_create_metadata_import", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [154, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10316474796277343]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_create_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[157, 4], [172, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_backup", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "get_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "get_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10262269059814194]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_get_backup", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[175, 4], [191, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_backup", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10074052293354835]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_delete_backup", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[194, 4], [209, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10614965555357159]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_delete_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[212, 4], [230, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_export_metadata", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11638998497459346]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_export_metadata", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[233, 4], [247, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10720926603534234]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_get_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[250, 4], [268, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_backups", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.1102642314667071]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_list_backups", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [294, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_restore_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11838014408499627]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_restore_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[297, 4], [315, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "update_service", "assert_called_once_with", "request", "dict", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10338591202972922]], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_update_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[332, 4], [346, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_hive_partitions", "params": {"mock_client": "", "partitions": "", "partitions_input": "", "self": ""}, "params_descr": {"mock_client": "", "partitions": "", "partitions_input": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"]], "partitions": [["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"]], "partitions_input": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"]], "self": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11165387921756906]], "partitions": [], "partitions_input": [], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_list_hive_partitions", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[352, 4], [366, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_hive_partitions_empty_list", "params": {"mock_client": "", "partitions": "", "self": ""}, "params_descr": {"mock_client": "", "partitions": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "partitions": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"]], "self": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10510875638885216]], "partitions": [], "self": []}, "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook.test_list_hive_partitions_empty_list", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestDataprocMetastoreWithDefaultProjectIdHook", "q_name": "TestDataprocMetastoreWithDefaultProjectIdHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[369, 0], [633, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[370, 4], [374, 75]], "fn_var_ln": {"hook": [[374, 12], [374, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "DataprocMetastoreHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "DataprocMetastoreHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["str", 0.4799170446491938], ["bool", 0.42942900077564183]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[377, 4], [396, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_backup", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.13932164797529709]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_create_backup", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[399, 4], [418, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_metadata_import", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.13686703684547605]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_create_metadata_import", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[421, 4], [439, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_create_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10316474796277343]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_create_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[442, 4], [458, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_backup", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10074052293354835]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_delete_backup", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[461, 4], [476, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10614965555357159]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_delete_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[479, 4], [497, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_export_metadata", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11638998497459346]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_export_metadata", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[500, 4], [514, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10720926603534234]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_get_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[517, 4], [535, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_backups", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.1102642314667071]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_list_backups", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[538, 4], [561, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_restore_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "self": [["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11838014408499627]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_restore_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[564, 4], [582, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_service", "params": {"mock_client": "", "self": ""}, "params_descr": {"mock_client": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "update_service", "assert_called_once_with", "request", "dict", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "self": [["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10338591202972922]], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_update_service", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[599, 4], [613, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_hive_partitions", "params": {"mock_client": "", "partitions": "", "partitions_input": "", "self": ""}, "params_descr": {"mock_client": "", "partitions": "", "partitions_input": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"]], "partitions": [["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"]], "partitions_input": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"]], "self": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.11165387921756906]], "partitions": [], "partitions_input": [], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_list_hive_partitions", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[619, 4], [633, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_list_hive_partitions_empty_list", "params": {"mock_client": "", "partitions": "", "self": ""}, "params_descr": {"mock_client": "", "partitions": "", "self": ""}, "params_occur": {"mock_client": [["mock_client", "assert_called_once"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "partitions": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"]], "self": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"]]}, "params_p": {"args": [], "kwargs": [], "mock_client": [["mock.MagicMock", 0.10510875638885216]], "partitions": [], "self": []}, "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook.test_list_hive_partitions_empty_list", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestDataprocMetastoreWithoutDefaultProjectIdHook", "q_name": "TestDataprocMetastoreWithoutDefaultProjectIdHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "google", "api_core", "gapic_v1", "method", "DEFAULT", "airflow", "providers", "google", "cloud", "hooks", "dataproc_metastore", "DataprocMetastoreHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id", "mock_base_gcp_hook_no_default_project_id"], "mod_var_ln": {"BASE_STRING": [[76, 0], [76, 11]], "DATAPROC_METASTORE_STRING": [[77, 0], [77, 25]], "TEST_BACKUP": [[34, 0], [34, 11]], "TEST_BACKUP_ID": [[35, 0], [35, 14]], "TEST_DESTINATION_GCS_FOLDER": [[57, 0], [57, 27]], "TEST_GCP_CONN_ID": [[31, 0], [31, 16]], "TEST_METADATA_IMPORT": [[36, 0], [36, 20]], "TEST_METADATA_IMPORT_ID": [[43, 0], [43, 23]], "TEST_NAME_BACKUPS": [[56, 0], [56, 17]], "TEST_PARENT": [[53, 0], [53, 11]], "TEST_PARENT_BACKUPS": [[55, 0], [55, 19]], "TEST_PARENT_SERVICES": [[54, 0], [54, 20]], "TEST_PARTITIONS_QUERY": [[68, 0], [68, 21]], "TEST_PARTITIONS_QUERY_ALL": [[61, 0], [61, 25]], "TEST_PARTITION_NAME": [[59, 0], [59, 19]], "TEST_PROJECT_ID": [[33, 0], [33, 15]], "TEST_REGION": [[32, 0], [32, 11]], "TEST_SERVICE": [[44, 0], [44, 12]], "TEST_SERVICE_ID": [[45, 0], [45, 15]], "TEST_SERVICE_TO_UPDATE": [[46, 0], [46, 22]], "TEST_SUBPARTITION_NAME": [[60, 0], [60, 22]], "TEST_TABLE_ID": [[58, 0], [58, 13]], "TEST_UPDATE_MASK": [[52, 0], [52, 16]]}, "mod_var_occur": {"BASE_STRING": [["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "BASE_STRING", "format", "new", "mock_base_gcp_hook_no_default_project_id"]], "DATAPROC_METASTORE_STRING": [], "TEST_BACKUP": [["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_BACKUP_ID": [["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "get_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_DESTINATION_GCS_FOLDER": [["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "TEST_GCP_CONN_ID": [["DataprocMetastoreHook", "gcp_conn_id", "TEST_GCP_CONN_ID", "delegate_to"], ["self", "hook", "DataprocMetastoreHook", "gcp_conn_id", "TEST_GCP_CONN_ID"], ["self", "hook", "DataprocMetastoreHook", "gcp_conn_id", "TEST_GCP_CONN_ID"]], "TEST_METADATA_IMPORT": [["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_METADATA_IMPORT_ID": [["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_NAME_BACKUPS": [["mock_client", "return_value", "get_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_PARENT": [["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_PARENT_BACKUPS": [["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_PARENT_SERVICES": [["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "TEST_PARTITIONS_QUERY": [["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"]], "TEST_PARTITIONS_QUERY_ALL": [["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "TEST_PARTITION_NAME": [], "TEST_PROJECT_ID": [["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "get_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"], ["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "TEST_REGION": [["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "get_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"], ["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "TEST_SERVICE": [["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"]], "TEST_SERVICE_ID": [["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "get_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "get_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"], ["self", "hook", "create_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "create_backup", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_BACKUP", "backup_id", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_metadata_import", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID"], ["mock_client", "return_value", "create_metadata_import", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata_import", "TEST_METADATA_IMPORT", "metadata_import_id", "TEST_METADATA_IMPORT_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "create_service", "region", "TEST_REGION", "project_id", "TEST_PROJECT_ID", "service", "TEST_SERVICE", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "create_service", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT", "format", "TEST_PROJECT_ID", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_backup", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "delete_backup", "assert_called_once_with", "request", "dict", "name", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "delete_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "delete_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "export_metadata", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "export_metadata", "assert_called_once_with", "request", "dict", "destination_gcs_folder", "TEST_DESTINATION_GCS_FOLDER", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "request_id", "None", "database_dump_type", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "get_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "get_service", "assert_called_once_with", "request", "dict", "name", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "list_backups", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID"], ["mock_client", "return_value", "list_backups", "assert_called_once_with", "request", "dict", "parent", "TEST_PARENT_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "page_size", "None", "page_token", "None", "filter", "None", "order_by", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "restore_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "backup_project_id", "TEST_PROJECT_ID", "backup_region", "TEST_REGION", "backup_service_id", "TEST_SERVICE_ID", "backup_id", "TEST_BACKUP_ID"], ["mock_client", "return_value", "restore_service", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "backup", "TEST_NAME_BACKUPS", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "TEST_BACKUP_ID", "restore_type", "None", "request_id", "None", "metadata", "retry", "DEFAULT", "timeout", "None"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "TEST_SERVICE_TO_UPDATE": [["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_service", "assert_called_once_with", "request", "dict", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_service", "assert_called_once_with", "request", "dict", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]], "TEST_SUBPARTITION_NAME": [], "TEST_TABLE_ID": [["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions_input"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY", "format", "TEST_TABLE_ID", "partitions"], ["self", "hook", "list_hive_partitions", "project_id", "TEST_PROJECT_ID", "service_id", "TEST_SERVICE_ID", "region", "TEST_REGION", "table", "TEST_TABLE_ID", "partition_names", "partitions"], ["mock_client", "return_value", "query_metadata", "assert_called_once_with", "request", "dict", "service", "TEST_PARENT_SERVICES", "format", "TEST_PROJECT_ID", "TEST_REGION", "TEST_SERVICE_ID", "query", "TEST_PARTITIONS_QUERY_ALL", "format", "TEST_TABLE_ID"]], "TEST_UPDATE_MASK": [["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_service", "assert_called_once_with", "request", "dict", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"], ["self", "hook", "update_service", "project_id", "TEST_PROJECT_ID", "region", "TEST_REGION", "service_id", "TEST_SERVICE_ID", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK"], ["mock_client", "return_value", "update_service", "assert_called_once_with", "request", "dict", "service", "TEST_SERVICE_TO_UPDATE", "update_mask", "TEST_UPDATE_MASK", "request_id", "None", "retry", "DEFAULT", "timeout", "None", "metadata"]]}, "no_types_annot": {"D": 41, "I": 0, "U": 43}, "session_id": "W_TiKbK3_NY3U1YsCfq70NQohd3_fK_RnwnzLdeu5YI", "set": null, "tc": [false, null], "type_annot_cove": 0.49, "typed_seq": "", "untyped_seq": "", "variables": {"BASE_STRING": "", "DATAPROC_METASTORE_STRING": "", "TEST_BACKUP": "builtins.str", "TEST_BACKUP_ID": "builtins.str", "TEST_DESTINATION_GCS_FOLDER": "builtins.str", "TEST_GCP_CONN_ID": "builtins.str", "TEST_METADATA_IMPORT": "builtins.dict", "TEST_METADATA_IMPORT_ID": "builtins.str", "TEST_NAME_BACKUPS": "builtins.str", "TEST_PARENT": "builtins.str", "TEST_PARENT_BACKUPS": "builtins.str", "TEST_PARENT_SERVICES": "builtins.str", "TEST_PARTITIONS_QUERY": "", "TEST_PARTITIONS_QUERY_ALL": "", "TEST_PARTITION_NAME": "", "TEST_PROJECT_ID": "builtins.str", "TEST_REGION": "builtins.str", "TEST_SERVICE": "builtins.dict", "TEST_SERVICE_ID": "builtins.str", "TEST_SERVICE_TO_UPDATE": "", "TEST_SUBPARTITION_NAME": "", "TEST_TABLE_ID": "builtins.str", "TEST_UPDATE_MASK": "builtins.dict"}, "variables_p": {"BASE_STRING": [["list", 0.2106209150826826], ["str", 0.18276628639361064], ["List[Tuple[str, str]]", 0.10758986291579262], ["List[dict]", 0.09659664232339189], ["List[str]", 0.08795139996388007]], "DATAPROC_METASTORE_STRING": [["int", 0.6], ["str", 0.30000000000000004], ["Dict[str, int]", 0.1]], "TEST_BACKUP": [["str", 0.421276340503278], ["List[str]", 0.1923411859689148], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11924817921556911], ["google.protobuf.descriptor.FieldDescriptor", 0.09211089045852316], ["Dict[str, Union[Any, Any, Any]]", 0.08807678114028906]], "TEST_BACKUP_ID": [["str", 0.9094661651384481], ["int", 0.09053383486155174]], "TEST_DESTINATION_GCS_FOLDER": [["int", 0.19000969647349208], ["hashstore.tests.TestSetup", 0.10683061743969875], ["Tuple[str, str]", 0.09079428177587202]], "TEST_GCP_CONN_ID": [["str", 0.2891198708579297], ["List[bool]", 0.12016700857292045], ["List[Union[Any, Any, Any, Any]]", 0.11464871255978099], ["Dict[str, str]", 0.0903004495380098], ["ClassVar[str]", 0.08861146014281189]], "TEST_METADATA_IMPORT": [["str", 0.5201894064202163], ["List[str]", 0.27699752384685095], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11688932651171469]], "TEST_METADATA_IMPORT_ID": [["str", 0.9103700608765806]], "TEST_NAME_BACKUPS": [["str", 0.9999999999999997]], "TEST_PARENT": [["str", 0.821762985934906], ["Dict[str, Union[int, str]]", 0.09257781109353706], ["List[Dict[str, str]]", 0.08565920297155698]], "TEST_PARENT_BACKUPS": [["str", 0.5248702925482697], ["Dict[str, Union[Any, Any]]", 0.10823999828699625], ["Dict[str, Union[int, str]]", 0.10011196084405173], ["Dict[str, str]", 0.09544883403742628], ["Dict[str, List[Any]]", 0.08641114995090808], ["Dict[str, int]", 0.08491776433234793]], "TEST_PARENT_SERVICES": [["str", 0.5854047217942117], ["Dict[str, Union[Any, Any]]", 0.09000997252852569], ["Dict[str, int]", 0.08059187993261707], ["List[Dict[str, Any]]", 0.07645664897541422]], "TEST_PARTITIONS_QUERY": [["str", 0.5201081697104379], ["Dict[str, str]", 0.18477959025794335], ["Dict[str, Union[Any, Any]]", 0.10277762498696393], ["Dict[str, Union[int, str]]", 0.0980112344637934], ["int", 0.09432338058086141]], "TEST_PARTITIONS_QUERY_ALL": [["str", 0.5085147243714555], ["Dict[str, Union[Any, Any]]", 0.11535414625152399], ["Dict[str, Union[int, str]]", 0.10624311854554], ["Dict[Any, Union[Any, Any]]", 0.09025499627625719], ["Dict[str, str]", 0.09019285048118587], ["Dict[str, Dict[str, Any]]", 0.0894401640740376]], "TEST_PARTITION_NAME": [["str", 0.9999999999999999]], "TEST_PROJECT_ID": [["str", 0.7993049512039383], ["int", 0.10892570201267684], ["Type[str]", 0.09176934678338503]], "TEST_REGION": [["str", 0.421276340503278], ["List[str]", 0.1923411859689148], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11924817921556911], ["google.protobuf.descriptor.FieldDescriptor", 0.09211089045852316], ["Dict[str, Union[Any, Any, Any]]", 0.08807678114028906]], "TEST_SERVICE": [["str", 0.4732171885792965], ["Dict[str, Union[None, Any, Any, int, str]]", 0.11374887561776222], ["Dict[str, Union[Any, Any, Any]]", 0.08461553497086326], ["List[str]", 0.07910558711608329], ["Dict[str, Union[Any, Any, Any, Any]]", 0.07748285563868387]], "TEST_SERVICE_ID": [["str", 0.9094661651384481], ["int", 0.09053383486155174]], "TEST_SERVICE_TO_UPDATE": [["str", 0.4700795626001008], ["List[str]", 0.10988294746889549], ["Dict[str, Union[bool, str]]", 0.10572401127831033], ["Dict[str, bool]", 0.09622911570754003], ["Dict[str, Union[Any, Any]]", 0.09467666954455181]], "TEST_SUBPARTITION_NAME": [["str", 0.9999999999999999]], "TEST_TABLE_ID": [["str", 0.5360257510272207], ["int", 0.4639742489727793]], "TEST_UPDATE_MASK": [["str", 0.32544212470112355], ["int", 0.3036955460401806], ["List[Tuple[str, str]]", 0.09465044520715794], ["Dict[str,str]", 0.09272724064832726], ["bytes", 0.0926767075178843], ["Union[bytes, str]", 0.09080793588532643]]}}}