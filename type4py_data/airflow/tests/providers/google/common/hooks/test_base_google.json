{"error": null, "response": {"classes": [{"cls_lc": [[54, 0], [70, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[57, 4], [60, 28]], "fn_var_ln": {"count": [[59, 8], [59, 18]], "counter": [[58, 8], [58, 20]], "kwargs": [[60, 8], [60, 19]]}, "fn_var_occur": {"count": [["self", "count", "count"]], "counter": [["self", "counter"]], "kwargs": [["self", "kwargs", "kwargs"]]}, "name": "__init__", "params": {"count": "", "kwargs": "", "self": ""}, "params_descr": {"count": "", "kwargs": "", "self": ""}, "params_occur": {"count": [["self", "count", "count"]], "kwargs": [["self", "kwargs", "kwargs"]], "self": [["self", "counter"], ["self", "count", "count"], ["self", "kwargs", "kwargs"]]}, "params_p": {"args": [], "count": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "NoForbiddenAfterCount.__init__", "ret_exprs": [], "ret_type": "", "variables": {"count": "", "counter": "", "kwargs": ""}, "variables_p": {"count": [["int", 0.8723631571818032], ["str", 0.12763684281819665]], "counter": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "kwargs": [["int", 0.4108754312383336], ["str", 0.16040423479706495], ["DefaultDict[Any, List[Any]]", 0.11349408321943784], ["Set[str]", 0.08367660394776819], ["List[str]", 0.07712720454318656]]}}, {"docstring": {"func": "Raise an Forbidden until after count threshold has been crossed.", "long_descr": "Then return True.", "ret": null}, "fn_lc": [[62, 4], [70, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__call__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "counter", "self", "count"], ["self", "counter"], ["Forbidden", "self", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "NoForbiddenAfterCount.__call__", "ret_exprs": ["return True"], "ret_type": "", "ret_type_p": [["bool", 1.0000000000000002]], "variables": {}, "variables_p": {}}], "name": "NoForbiddenAfterCount", "q_name": "NoForbiddenAfterCount", "variables": {}, "variables_p": {}}, {"cls_lc": [[78, 0], [97, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [81, 25]], "fn_var_ln": {"result": [[80, 8], [80, 14]]}, "fn_var_occur": {"result": [["result", "_retryable_test_with_temporary_quota_retry"]]}, "name": "test_do_nothing_on_non_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestQuotaRetry.test_do_nothing_on_non_error", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["mock.MagicMock", 0.10257236925656353]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [88, 37]], "fn_var_ln": {"custom_fn": [[86, 8], [86, 17]], "errors": [[85, 8], [85, 14]], "message": [[84, 8], [84, 15]]}, "fn_var_occur": {"custom_fn": [["custom_fn", "NoForbiddenAfterCount", "count", "message", "message", "errors", "errors"], ["_retryable_test_with_temporary_quota_retry", "custom_fn"], ["custom_fn", "counter"]], "errors": [["errors", "mock", "MagicMock", "details", "mock", "PropertyMock", "return_value"], ["custom_fn", "NoForbiddenAfterCount", "count", "message", "message", "errors", "errors"]], "message": [["custom_fn", "NoForbiddenAfterCount", "count", "message", "message", "errors", "errors"]]}, "name": "test_retry_on_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestQuotaRetry.test_retry_on_exception", "ret_exprs": [], "ret_type": "", "variables": {"custom_fn": "", "errors": "", "message": ""}, "variables_p": {"custom_fn": [["int", 0.5221069431537178], ["float", 0.27991226749377734], ["str", 0.10883377772987167]], "errors": [["ValueError", 0.1319723348826941], ["asyncio.exceptions.CancelledError", 0.06394405829751958], ["mock.Mock", 0.056758608053606746]], "message": [["str", 0.5633555812881499], ["Union[Literal, str]", 0.11896947608314971], ["Optional[str]", 0.11896947608314971], ["int", 0.07736850883916693]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 4], [97, 13]], "fn_var_ln": {"errors": [[93, 12], [93, 18]], "message": [[92, 12], [92, 19]]}, "fn_var_occur": {"errors": [["errors", "mock", "MagicMock", "details", "mock", "PropertyMock", "return_value"], ["_retryable_test_with_temporary_quota_retry", "NoForbiddenAfterCount", "message", "message", "errors", "errors"]], "message": [["_retryable_test_with_temporary_quota_retry", "NoForbiddenAfterCount", "message", "message", "errors", "errors"]]}, "name": "test_raise_exception_on_non_quota_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestQuotaRetry.test_raise_exception_on_non_quota_exception", "ret_exprs": [], "ret_type": "", "variables": {"errors": "", "message": ""}, "variables_p": {"errors": [["ValueError", 0.1121680125417072], ["mode.utils.mocks.Mock", 0.056879268513207216], ["mock.Mock", 0.055868704546028713]], "message": [["str", 0.9016703870688173]]}}], "name": "TestQuotaRetry", "q_name": "TestQuotaRetry", "variables": {}, "variables_p": {}}, {"cls_lc": [[100, 0], [111, 38]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [103, 44]], "fn_var_ln": {"fixture_project_id": [[103, 8], [103, 31]], "mock": [[102, 8], [102, 17]]}, "fn_var_occur": {"fixture_project_id": [["self", "fixture_project_id", "project_id"]], "mock": [["self", "mock", "mock", "Mock"]]}, "name": "__init__", "params": {"project_id": "", "self": ""}, "params_descr": {"project_id": "", "self": ""}, "params_occur": {"project_id": [["self", "fixture_project_id", "project_id"]], "self": [["self", "mock", "mock", "Mock"], ["self", "fixture_project_id", "project_id"]]}, "params_p": {"args": [], "kwargs": [], "project_id": [["str", 0.4059568606310825], ["int", 0.3456247771740119], ["Union[int,str]", 0.16686849159523212], ["Optional[float]", 0.08154987059967339]], "self": []}, "q_name": "FallbackToDefaultProjectIdFixtureClass.__init__", "ret_exprs": [], "ret_type": "", "variables": {"fixture_project_id": "", "mock": ""}, "variables_p": {"fixture_project_id": [["int", 0.5002884007463895], ["str", 0.40135033896778155], ["Optional[int]", 0.09836126028582882]], "mock": [["tests.test_protocols.TransportMock", 0.24657341785937953], ["str", 0.09563608883876389], ["qcodes.tests.data_mocks.MatchIO", 0.07776835510362717]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [107, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "method", "params": {"project_id": "", "self": ""}, "params_descr": {"project_id": "", "self": ""}, "params_occur": {"project_id": [["self", "mock", "project_id", "project_id"]], "self": [["self", "mock", "project_id", "project_id"]]}, "params_p": {"args": [], "kwargs": [], "project_id": [["int", 0.3999463209201596], ["str", 0.11758466374570947], ["cmk.utils.type_defs.UserId", 0.09128644312891371], ["bool", 0.08998084710531447]], "self": []}, "q_name": "FallbackToDefaultProjectIdFixtureClass.method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [111, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "project_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "fixture_project_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "FallbackToDefaultProjectIdFixtureClass.project_id", "ret_exprs": ["return self.fixture_project_id"], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {}, "variables_p": {}}], "name": "FallbackToDefaultProjectIdFixtureClass", "q_name": "FallbackToDefaultProjectIdFixtureClass", "variables": {}, "variables_p": {}}, {"cls_lc": [[114, 0], [143, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [120, 61]], "fn_var_ln": {"gcp_hook": [[116, 8], [116, 16]]}, "fn_var_occur": {"gcp_hook": [["gcp_hook", "FallbackToDefaultProjectIdFixtureClass"], ["gcp_hook", "method"], ["gcp_hook", "mock", "assert_called_once_with", "project_id"]]}, "name": "test_no_arguments", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToDefaultProjectId.test_no_arguments", "ret_exprs": [], "ret_type": "", "variables": {"gcp_hook": ""}, "variables_p": {"gcp_hook": [["str", 0.20048433682896952]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[122, 4], [127, 61]], "fn_var_ln": {"gcp_hook": [[123, 8], [123, 16]]}, "fn_var_occur": {"gcp_hook": [["gcp_hook", "FallbackToDefaultProjectIdFixtureClass"], ["gcp_hook", "method", "project_id", "None"], ["gcp_hook", "mock", "assert_called_once_with", "project_id"]]}, "name": "test_default_project_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToDefaultProjectId.test_default_project_id", "ret_exprs": [], "ret_type": "", "variables": {"gcp_hook": ""}, "variables_p": {"gcp_hook": [["dict", 0.17818025884700425], ["bool", 0.13111513987475804], ["raiden.utils.Address", 0.10083903099930651], ["tbump.hooks.Hook", 0.08948322463432447]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[129, 4], [134, 61]], "fn_var_ln": {"gcp_hook": [[130, 8], [130, 16]]}, "fn_var_occur": {"gcp_hook": [["gcp_hook", "FallbackToDefaultProjectIdFixtureClass"], ["gcp_hook", "method", "project_id"], ["gcp_hook", "mock", "assert_called_once_with", "project_id"]]}, "name": "test_provided_project_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToDefaultProjectId.test_provided_project_id", "ret_exprs": [], "ret_type": "", "variables": {"gcp_hook": ""}, "variables_p": {"gcp_hook": [["str", 0.18076669045836558], ["Dict[str, Any]", 0.10176712065350367]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [143, 44]], "fn_var_ln": {"gcp_hook": [[137, 8], [137, 16]]}, "fn_var_occur": {"gcp_hook": [["gcp_hook", "FallbackToDefaultProjectIdFixtureClass"], ["gcp_hook", "method"], ["gcp_hook", "mock", "call_count"]]}, "name": "test_restrict_positional_arguments", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFallbackToDefaultProjectId.test_restrict_positional_arguments", "ret_exprs": [], "ret_type": "", "variables": {"gcp_hook": ""}, "variables_p": {"gcp_hook": [["Dict[str, Union[Any, Any, str]]", 0.11183374862311148], ["app.auth.forms.LoginForm", 0.0960612949700627]]}}], "name": "TestFallbackToDefaultProjectId", "q_name": "TestFallbackToDefaultProjectId", "variables": {}, "variables_p": {}}, {"cls_lc": [[146, 0], [280, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[147, 4], [152, 83]], "fn_var_ln": {"instance": [[152, 12], [152, 25]]}, "fn_var_occur": {"instance": [["self", "instance", "hook", "GoogleBaseHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "hook", "GoogleBaseHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["str", 0.3920459041904845], ["int", 0.15231622901898934], ["dict", 0.0885054221589], ["set", 0.07928272135381356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[162, 8], [163, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_file_decorator_key_path_and_keyfile_dict.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [170, 60]], "fn_var_ln": {"key_path": [[155, 8], [155, 16]]}, "fn_var_occur": {"key_path": []}, "name": "test_provide_gcp_credential_file_decorator_key_path_and_keyfile_dict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_file_decorator_key_path_and_keyfile_dict", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["Optional[str]", 0.3999999997640287], ["pathlib.Path", 0.19999999998222193], ["str", 2.1410425414869701e-10], ["Optional[pathlib.Path]", 1.5631060421906086e-10], ["int", 1.1930594162620382e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[184, 8], [185, 110]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"instance": ""}, "params_descr": {"instance": ""}, "params_occur": {"instance": []}, "params_p": {"args": [], "instance": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keyfile_dict_json.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Historically, keyfile_dict had to be str in the conn extra.  Now it", "long_descr": "can be dict and this is verified here.", "ret": null}, "fn_lc": [[172, 4], [201, 17]], "fn_var_ln": {"conn_dict": [[177, 8], [177, 17]], "hook": [[190, 12], [190, 16]]}, "fn_var_occur": {"conn_dict": [["patch", "dict", "AIRFLOW_CONN_MY_GOOGLE", "json", "dumps", "conn_dict"], ["m", "assert_called_once_with", "conn_dict", "scopes"]], "hook": [["hook", "GoogleBaseHook"], ["assert_gcp_credential_file_in_env", "hook"], ["hook", "get_credentials_and_project_id"]]}, "name": "test_provide_gcp_credential_keyfile_dict_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keyfile_dict_json", "ret_exprs": [], "ret_type": "", "variables": {"conn_dict": "", "hook": ""}, "variables_p": {"conn_dict": [["Dict[Any, str]", 0.435039370755794], ["dict", 0.2114163904944735], ["Dict[str, Any]", 0.07064392237439922], ["Dict[int, str]", 0.06552889424246564], ["str", 0.06326199033403905]], "hook": [["List[Dict[str, Any]]", 0.164868367273679], ["List[str]", 0.10563526902973717], ["str", 0.08267680359831824]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[208, 8], [209, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_file_decorator_key_path.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[203, 4], [211, 56]], "fn_var_ln": {"key_path": [[204, 8], [204, 16]]}, "fn_var_occur": {"key_path": []}, "name": "test_provide_gcp_credential_file_decorator_key_path", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_file_decorator_key_path", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["Optional[str]", 0.3999999997640287], ["pathlib.Path", 0.19999999998222193], ["str", 2.1410425414869701e-10], ["Optional[pathlib.Path]", 1.5631060421906086e-10], ["int", 1.1930594162620382e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[224, 8], [226, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_file_decorator_key_content.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[214, 4], [228, 56]], "fn_var_ln": {"file_content": [[216, 8], [216, 20]], "file_name": [[217, 8], [217, 17]], "mock_file_handler": [[219, 8], [219, 25]], "name": [[220, 8], [220, 30]], "string_file": [[215, 8], [215, 19]], "write": [[221, 8], [221, 31]]}, "fn_var_occur": {"file_content": [], "file_name": [], "mock_file_handler": [], "name": [], "string_file": [], "write": []}, "name": "test_provide_gcp_credential_file_decorator_key_content", "params": {"mock_file": "", "self": ""}, "params_descr": {"mock_file": "", "self": ""}, "params_occur": {"mock_file": [], "self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "mock_file": [["pathlib.Path", 0.36148628845251196], ["kata.data.io.network.GithubApi", 0.15121414992437907]], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_file_decorator_key_content", "ret_exprs": [], "ret_type": "", "variables": {"file_content": "", "file_name": "", "mock_file_handler": "", "name": "", "string_file": "", "write": ""}, "variables_p": {"file_content": [["str", 0.4285714284612926], ["int", 0.14285714297974214], ["bytes", 0.14285714282043085], ["Type[str]", 0.14285714282043085], ["List[str]", 9.767277440590888e-11]], "file_name": [["str", 0.7999999999999999], ["Optional[str]", 0.09999999999999999]], "mock_file_handler": [["int", 6.092498613582692e-10], ["str", 4.840305066544773e-10], ["List[str]", 2.634651283297612e-10]], "name": [["str", 0.8999999999999999]], "string_file": [["str", 0.3604358340353785], ["int", 0.290367303535065], ["list", 0.08737748265955804]], "write": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[236, 8], [237, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_environment.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [240, 51]], "fn_var_ln": {"key_path": [[232, 8], [232, 16]]}, "fn_var_occur": {"key_path": []}, "name": "test_provide_gcp_credential_keep_environment", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_environment", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["Optional[str]", 0.3999999997640287], ["pathlib.Path", 0.19999999998222193], ["str", 2.1410425414869701e-10], ["Optional[pathlib.Path]", 1.5631060421906086e-10], ["int", 1.1930594162620382e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[248, 8], [249, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_environment_when_exception.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[243, 4], [254, 51]], "fn_var_ln": {"key_path": [[244, 8], [244, 16]]}, "fn_var_occur": {"key_path": []}, "name": "test_provide_gcp_credential_keep_environment_when_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_environment_when_exception", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["Optional[str]", 0.3999999997640287], ["pathlib.Path", 0.19999999998222193], ["str", 2.1410425414869701e-10], ["Optional[pathlib.Path]", 1.5631060421906086e-10], ["int", 1.1930594162620382e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[262, 8], [263, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_clear_environment.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[257, 4], [266, 44]], "fn_var_ln": {"key_path": [[258, 8], [258, 16]]}, "fn_var_occur": {"key_path": []}, "name": "test_provide_gcp_credential_keep_clear_environment", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_clear_environment", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["Optional[str]", 0.3999999997640287], ["pathlib.Path", 0.19999999998222193], ["str", 2.1410425414869701e-10], ["Optional[pathlib.Path]", 1.5631060421906086e-10], ["int", 1.1930594162620382e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[274, 8], [275, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_clear_environment_when_exception.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 4], [280, 44]], "fn_var_ln": {"key_path": [[270, 8], [270, 16]]}, "fn_var_occur": {"key_path": []}, "name": "test_provide_gcp_credential_keep_clear_environment_when_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFile.test_provide_gcp_credential_keep_clear_environment_when_exception", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["Optional[str]", 0.3999999997640287], ["pathlib.Path", 0.19999999998222193], ["str", 2.1410425414869701e-10], ["Optional[pathlib.Path]", 1.5631060421906086e-10], ["int", 1.1930594162620382e-10]]}}], "name": "TestProvideGcpCredentialFile", "q_name": "TestProvideGcpCredentialFile", "variables": {}, "variables_p": {}}, {"cls_lc": [[283, 0], [352, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[284, 4], [289, 83]], "fn_var_ln": {"instance": [[289, 12], [289, 25]]}, "fn_var_occur": {"instance": [["self", "instance", "hook", "GoogleBaseHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "hook", "GoogleBaseHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFileAsContext.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["str", 0.3920459041904845], ["int", 0.15231622901898934], ["dict", 0.0885054221589], ["set", 0.07928272135381356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 4], [296, 54]], "fn_var_ln": {"key_path": [[292, 8], [292, 16]]}, "fn_var_occur": {"key_path": [["self", "instance", "extras", "key_path"], ["os", "environ", "CREDENTIALS", "key_path"]]}, "name": "test_provide_gcp_credential_file_decorator_key_path", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "key_path"], ["self", "instance", "provide_gcp_credential_file_as_context"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFileAsContext.test_provide_gcp_credential_file_decorator_key_path", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [310, 57]], "fn_var_ln": {"file_content": [[301, 8], [301, 20]], "file_name": [[302, 8], [302, 17]], "mock_file_handler": [[304, 8], [304, 25]], "name": [[305, 8], [305, 30]], "string_file": [[300, 8], [300, 19]], "write": [[306, 8], [306, 31]]}, "fn_var_occur": {"file_content": [["self", "instance", "extras", "file_content"], ["file_content", "string_file", "getvalue"]], "file_name": [["mock_file_handler", "name", "file_name"], ["os", "environ", "CREDENTIALS", "file_name"]], "mock_file_handler": [["mock_file_handler", "mock_file", "return_value", "__enter__", "return_value"], ["mock_file_handler", "name", "file_name"], ["mock_file_handler", "write", "string_file", "write"]], "name": [["mock_file_handler", "name", "file_name"]], "string_file": [["string_file", "StringIO"], ["mock_file_handler", "write", "string_file", "write"], ["file_content", "string_file", "getvalue"]], "write": [["mock_file_handler", "write", "string_file", "write"]]}, "name": "test_provide_gcp_credential_file_decorator_key_content", "params": {"mock_file": "", "self": ""}, "params_descr": {"mock_file": "", "self": ""}, "params_occur": {"mock_file": [["mock_file_handler", "mock_file", "return_value", "__enter__", "return_value"]], "self": [["self", "instance", "extras", "file_content"], ["self", "instance", "provide_gcp_credential_file_as_context"]]}, "params_p": {"args": [], "kwargs": [], "mock_file": [["pathlib.Path", 0.599107216447478], ["mock.MagicMock", 0.09453748290928918]], "self": []}, "q_name": "TestProvideGcpCredentialFileAsContext.test_provide_gcp_credential_file_decorator_key_content", "ret_exprs": [], "ret_type": "", "variables": {"file_content": "", "file_name": "", "mock_file_handler": "", "name": "", "string_file": "", "write": ""}, "variables_p": {"file_content": [["str", 0.9097877789287216], ["int", 0.0902122210712783]], "file_name": [["str", 1.0]], "mock_file_handler": [["str", 0.7830482288686671], ["pathlib.Path", 0.12402408828884952], ["dict", 0.09292768284248337]], "name": [["str", 0.9999999999999999]], "string_file": [["str", 0.8881683487557859], ["list", 0.11183165124421385]], "write": [["str", 0.26010197225308185], ["list", 0.20934554482799492], ["Dict[str, int]", 0.12115275145401345], ["Set[str]", 0.11839102342294891], ["IO[bytes]", 0.10299386840487652], ["bool", 0.09915274552880708], ["Union[Literal, Literal]", 0.08886209410827732]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[313, 4], [320, 51]], "fn_var_ln": {"key_path": [[314, 8], [314, 16]]}, "fn_var_occur": {"key_path": [["self", "instance", "extras", "key_path"], ["os", "environ", "CREDENTIALS", "key_path"]]}, "name": "test_provide_gcp_credential_keep_environment", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "key_path"], ["self", "instance", "provide_gcp_credential_file_as_context"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFileAsContext.test_provide_gcp_credential_keep_environment", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[323, 4], [331, 51]], "fn_var_ln": {"key_path": [[324, 8], [324, 16]]}, "fn_var_occur": {"key_path": [["self", "instance", "extras", "key_path"]]}, "name": "test_provide_gcp_credential_keep_environment_when_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "key_path"], ["self", "instance", "provide_gcp_credential_file_as_context"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFileAsContext.test_provide_gcp_credential_keep_environment_when_exception", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["str", 0.803344192848474], ["pathlib.Path", 0.1966558071515262]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[334, 4], [341, 44]], "fn_var_ln": {"key_path": [[335, 8], [335, 16]]}, "fn_var_occur": {"key_path": [["self", "instance", "extras", "key_path"], ["os", "environ", "CREDENTIALS", "key_path"]]}, "name": "test_provide_gcp_credential_keep_clear_environment", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "key_path"], ["self", "instance", "provide_gcp_credential_file_as_context"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFileAsContext.test_provide_gcp_credential_keep_clear_environment", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[344, 4], [352, 44]], "fn_var_ln": {"key_path": [[345, 8], [345, 16]]}, "fn_var_occur": {"key_path": [["self", "instance", "extras", "key_path"]]}, "name": "test_provide_gcp_credential_keep_clear_environment_when_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "key_path"], ["self", "instance", "provide_gcp_credential_file_as_context"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideGcpCredentialFileAsContext.test_provide_gcp_credential_keep_clear_environment_when_exception", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["str", 0.803344192848474], ["pathlib.Path", 0.1966558071515262]]}}], "name": "TestProvideGcpCredentialFileAsContext", "q_name": "TestProvideGcpCredentialFileAsContext", "variables": {}, "variables_p": {}}, {"cls_lc": [[355, 0], [699, 55]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[356, 4], [357, 45]], "fn_var_ln": {"instance": [[357, 8], [357, 21]]}, "fn_var_occur": {"instance": [["self", "instance", "hook", "GoogleBaseHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "hook", "GoogleBaseHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["str", 0.7359720484279572], ["int", 0.26402795157204284]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[360, 4], [374, 54]], "fn_var_ln": {"result": [[362, 8], [362, 14]]}, "fn_var_occur": {"result": [["result", "self", "instance", "get_credentials_and_project_id"]]}, "name": "test_get_credentials_and_project_id_with_default_auth", "params": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_descr": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_occur": {"mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]], "self": [["self", "instance", "extras"], ["result", "self", "instance", "get_credentials_and_project_id"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_proj_id": [["str", 0.21146880188090939], ["gobbli.io.TaskIO", 0.0926277045225859]], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_default_auth", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["int", 0.7149055997993777], ["Tuple[str, str, str, str, str, str, str, str]", 0.09328179574798563], ["str", 0.09313423752122806]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[378, 4], [385, 65]], "fn_var_ln": {"credentials": [[380, 8], [380, 19]], "result": [[384, 8], [384, 14]], "return_value": [[382, 8], [382, 47]]}, "fn_var_occur": {"credentials": [["credentials", "mock", "MagicMock"], ["type", "credentials", "token", "mock", "PropertyMock", "return_value"], ["mock_get_creds_and_proj_id", "return_value", "credentials"]], "result": [["result", "self", "instance", "test_connection"], ["result", "True"]], "return_value": [["requests_post", "return_value", "status_code"], ["type", "credentials", "token", "mock", "PropertyMock", "return_value"], ["mock_get_creds_and_proj_id", "return_value", "credentials"]]}, "name": "test_connection_success", "params": {"mock_get_creds_and_proj_id": "", "requests_post": "", "self": ""}, "params_descr": {"mock_get_creds_and_proj_id": "", "requests_post": "", "self": ""}, "params_occur": {"mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "return_value", "credentials"]], "requests_post": [["requests_post", "return_value", "status_code"]], "self": [["self", "instance", "extras"], ["result", "self", "instance", "test_connection"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_proj_id": [["bytes", 0.07969008581357964]], "requests_post": [["Dict[str, Any]", 0.08939732020798952], ["tests.helpers.MockedFetcher", 0.0891994797575503]], "self": []}, "q_name": "TestGoogleBaseHook.test_connection_success", "ret_exprs": [], "ret_type": "", "variables": {"credentials": "", "result": "", "return_value": ""}, "variables_p": {"credentials": [["Union[mock.AsyncMock, mock.MagicMock]", 0.4086408300670661]], "result": [["Dict[str, Dict[str, Any]]", 0.21693237241057745], ["Dict[str, dict]", 0.1372273692999149], ["List[List[Any]]", 0.12253250932070117], ["int", 0.09949934707754761], ["list", 0.08736899052836383], ["Dict[str, Union[None, int, str]]", 0.08289808248861358], ["Dict[str, Optional[str]]", 0.08289808248861358], ["Dict[str, Any]", 0.08059787309302094]], "return_value": [["Dict[str, str]", 0.19487527370127528], ["Dict[str, int]", 0.1045411057287783], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, str]]", 0.098065020424037], ["Dict[str, Union[Any, Any, Any, str]]", 0.09678740609457966], ["float", 0.09245712366540283], ["Dict[str, Union[Any, int]]", 0.09147501410857957], ["str", 0.09004413511419551]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[388, 4], [392, 53]], "fn_var_ln": {"result": [[391, 8], [391, 14]], "side_effect": [[389, 8], [389, 46]]}, "fn_var_occur": {"result": [["result", "self", "instance", "test_connection"], ["result", "False"]], "side_effect": [["mock_get_creds_and_proj_id", "side_effect", "AirflowException"]]}, "name": "test_connection_failure", "params": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_descr": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_occur": {"mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "side_effect", "AirflowException"]], "self": [["self", "instance", "extras"], ["result", "self", "instance", "test_connection"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_proj_id": [["str", 0.19017123283955784]], "self": []}, "q_name": "TestGoogleBaseHook.test_connection_failure", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "side_effect": ""}, "variables_p": {"result": [["list", 0.20762176934837048], ["Dict[str, dict]", 0.12768131251073336], ["Dict[str, Literal]", 0.103816616422685], ["Dict[Any, Union[Any, Any]]", 0.10000056797846883], ["List[Union[Any, Any, Any, Any]]", 0.09686169064498559], ["Dict[str, Any]", 0.09147829061163743], ["OrderedDict[str, Any]", 0.09020119458427128]], "side_effect": [["str", 0.8138869061161965], ["float", 0.08304518744202515]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[395, 4], [411, 57]], "fn_var_ln": {"mock_credentials": [[396, 8], [396, 24]], "result": [[399, 8], [399, 14]], "return_value": [[397, 8], [397, 47]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_get_creds_and_proj_id", "return_value", "mock_credentials"], ["mock_credentials", "result"]], "result": [["result", "self", "instance", "get_credentials_and_project_id"], ["mock_credentials", "result"]], "return_value": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials"]]}, "name": "test_get_credentials_and_project_id_with_service_account_file", "params": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_descr": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_occur": {"mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]], "self": [["self", "instance", "extras"], ["result", "self", "instance", "get_credentials_and_project_id"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_proj_id": [["Dict[str, Union[bool, str]]", 0.0931915218840202], ["Dict[str, bool]", 0.0931915218840202]], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_service_account_file", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [], "result": [["Dict[Any, int]", 0.2314944714187997], ["list", 0.09632261462672753], ["Dict[int, Any]", 0.0958115261263346], ["tests.test_enum.DataWithEnum", 0.09479694984763502], ["Callable", 0.09264966686684527], ["set", 0.09151239397456029]], "return_value": [["Dict[str, Dict[str, Any]]", 0.19619515001088061], ["Dict[str, Union[Any, Any, Any]]", 0.1711928491691761], ["List[Dict[str, Any]]", 0.16376315306928219], ["str", 0.10130658450421932], ["Dict[str, Union[int, str]]", 0.09179943946883116], ["List[Dict[str, str]]", 0.08246081497086086], ["Dict[str, int]", 0.07968340494507521]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[413, 4], [416, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_service_account_file_and_p12_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras"], ["self", "instance", "get_credentials_and_project_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_service_account_file_and_p12_key", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[418, 4], [421, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_service_account_file_and_unknown_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras"], ["self", "instance", "get_credentials_and_project_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_service_account_file_and_unknown_key", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[424, 4], [441, 57]], "fn_var_ln": {"mock_credentials": [[425, 8], [425, 24]], "result": [[429, 8], [429, 14]], "return_value": [[426, 8], [426, 47]], "service_account": [[427, 8], [427, 23]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_get_creds_and_proj_id", "return_value", "mock_credentials"], ["mock_credentials", "result"]], "result": [["result", "self", "instance", "get_credentials_and_project_id"], ["mock_credentials", "result"]], "return_value": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials"]], "service_account": [["self", "instance", "extras", "json", "dumps", "service_account"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "service_account", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]]}, "name": "test_get_credentials_and_project_id_with_service_account_info", "params": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_descr": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_occur": {"mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "service_account", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]], "self": [["self", "instance", "extras", "json", "dumps", "service_account"], ["result", "self", "instance", "get_credentials_and_project_id"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "service_account", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_proj_id": [["mock.Mock", 0.08709764138173036], ["Dict[str, str]", 0.08702388631109138]], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_service_account_info", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": "", "service_account": ""}, "variables_p": {"mock_credentials": [], "result": [["Dict[Any, int]", 0.2314944714187997], ["list", 0.09632261462672753], ["Dict[int, Any]", 0.0958115261263346], ["tests.test_enum.DataWithEnum", 0.09479694984763502], ["Callable", 0.09264966686684527], ["set", 0.09151239397456029]], "return_value": [["Dict[str, Dict[str, Any]]", 0.19619515001088061], ["Dict[str, Union[Any, Any, Any]]", 0.1711928491691761], ["List[Dict[str, Any]]", 0.16376315306928219], ["str", 0.10130658450421932], ["Dict[str, Union[int, str]]", 0.09179943946883116], ["List[Dict[str, str]]", 0.08246081497086086], ["Dict[str, int]", 0.07968340494507521]], "service_account": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[444, 4], [461, 57]], "fn_var_ln": {"mock_credentials": [[445, 8], [445, 24]], "result": [[449, 8], [449, 14]], "return_value": [[446, 8], [446, 47]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_get_creds_and_proj_id", "return_value", "mock_credentials"], ["mock_credentials", "result"]], "result": [["result", "self", "instance", "get_credentials_and_project_id"], ["mock_credentials", "result"]], "return_value": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_delegate", "params": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_descr": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_occur": {"mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "target_principal", "None", "delegates", "None"]], "self": [["self", "instance", "extras"], ["self", "instance", "delegate_to"], ["result", "self", "instance", "get_credentials_and_project_id"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "target_principal", "None", "delegates", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_proj_id": [], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_default_auth_and_delegate", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [], "result": [["Dict[Any, int]", 0.2314944714187997], ["list", 0.09632261462672753], ["Dict[int, Any]", 0.0958115261263346], ["tests.test_enum.DataWithEnum", 0.09479694984763502], ["Callable", 0.09264966686684527], ["set", 0.09151239397456029]], "return_value": [["Dict[str, Dict[str, Any]]", 0.19619515001088061], ["Dict[str, Union[Any, Any, Any]]", 0.1711928491691761], ["List[Dict[str, Any]]", 0.16376315306928219], ["str", 0.10130658450421932], ["Dict[str, Union[int, str]]", 0.09179943946883116], ["List[Dict[str, str]]", 0.08246081497086086], ["Dict[str, int]", 0.07968340494507521]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[464, 4], [478, 58]], "fn_var_ln": {"mock_credentials": [[468, 8], [468, 24]], "return_value": [[469, 8], [469, 38]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock", "spec", "google", "auth", "compute_engine", "Credentials"], ["mock_auth_default", "return_value", "mock_credentials"]], "return_value": [["mock_auth_default", "return_value", "mock_credentials"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_unsupported_delegate", "params": {"mock_auth_default": "", "self": ""}, "params_descr": {"mock_auth_default": "", "self": ""}, "params_occur": {"mock_auth_default": [["mock_auth_default", "return_value", "mock_credentials"]], "self": [["self", "instance", "delegate_to"], ["self", "instance", "get_credentials_and_project_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_auth_default": [], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_default_auth_and_unsupported_delegate", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "return_value": ""}, "variables_p": {"mock_credentials": [], "return_value": [["List[Dict[str, Any]]", 0.22863678624298506], ["Dict[str, Union[Any, Any, Any]]", 0.21432054309700288], ["Dict[str, Dict[str, Any]]", 0.17909750609340458], ["str", 0.1770825363978018], ["List[Dict[str, str]]", 0.0925133099297714]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[481, 4], [497, 61]], "fn_var_ln": {"result": [[485, 8], [485, 14]]}, "fn_var_occur": {"result": [["result", "self", "instance", "get_credentials_and_project_id"]]}, "name": "test_get_credentials_and_project_id_with_default_auth_and_overridden_project_id", "params": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_descr": {"mock_get_creds_and_proj_id": "", "self": ""}, "params_occur": {"mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]], "self": [["self", "instance", "extras"], ["result", "self", "instance", "get_credentials_and_project_id"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "None", "delegates", "None"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_creds_and_proj_id": [["str", 0.21146880188090939], ["gobbli.io.TaskIO", 0.0926277045225859]], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_default_auth_and_overridden_project_id", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["int", 0.7149055997993777], ["Tuple[str, str, str, str, str, str, str, str]", 0.09328179574798563], ["str", 0.09313423752122806]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[499, 4], [511, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_mutually_exclusive_configuration", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras"], ["self", "instance", "get_credentials_and_project_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_mutually_exclusive_configuration", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[513, 4], [518, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_credentials_and_project_id_with_invalid_keyfile_dict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras"], ["self", "instance", "get_credentials_and_project_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_invalid_keyfile_dict", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[523, 4], [545, 79]], "fn_var_ln": {"credentials": [[536, 8], [536, 19]], "scopes": [[543, 8], [543, 14]]}, "fn_var_occur": {"credentials": [["credentials", "self", "instance", "get_credentials"], ["hasattr", "credentials", "credentials", "scopes", "None"], ["scopes", "credentials", "scopes"]], "scopes": [["hasattr", "credentials", "credentials", "scopes", "None"], ["scopes", "credentials", "scopes"]]}, "name": "test_default_creds_with_scopes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "default_project", "join"], ["credentials", "self", "instance", "get_credentials"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_default_creds_with_scopes", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10140107714972572]], "variables": {"credentials": "", "scopes": ""}, "variables_p": {"credentials": [["int", 0.18039287587400277], ["float", 0.1324784677495693], ["pathlib.Path", 0.12961581888781099], ["Tuple[str, str, str, str, str]", 0.09396912560687068], ["Tuple[str, str, str]", 0.09396912560687068], ["bool", 0.08590533269350126], ["List[str]", 0.08567139380095236], ["Dict[int, Any]", 0.08142636684532517]], "scopes": [["bytes", 0.16670362447628623], ["pathlib.Path", 0.10644554312505218], ["dict", 0.08851267711305295], ["int", 0.08385929259051972]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[550, 4], [561, 54]], "fn_var_ln": {"credentials": [[553, 8], [553, 19]], "scopes": [[560, 8], [560, 14]]}, "fn_var_occur": {"credentials": [["credentials", "self", "instance", "get_credentials"], ["hasattr", "credentials", "credentials", "scopes", "None"], ["scopes", "credentials", "scopes"]], "scopes": [["hasattr", "credentials", "credentials", "scopes", "None"], ["scopes", "credentials", "scopes"], ["tuple", "_DEFAULT_SCOPES", "tuple", "scopes"]]}, "name": "test_default_creds_no_scopes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "default_project"], ["credentials", "self", "instance", "get_credentials"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_default_creds_no_scopes", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [], "variables": {"credentials": "", "scopes": ""}, "variables_p": {"credentials": [["int", 0.18039287587400277], ["float", 0.1324784677495693], ["pathlib.Path", 0.12961581888781099], ["Tuple[str, str, str, str, str]", 0.09396912560687068], ["Tuple[str, str, str]", 0.09396912560687068], ["bool", 0.08590533269350126], ["List[str]", 0.08567139380095236], ["Dict[int, Any]", 0.08142636684532517]], "scopes": [["str", 0.27113838054381273], ["int", 0.19611418855243198], ["Union[List[Any], list]", 0.10984953567659514], ["Tuple[Any, Any, Any, Any, Any, Any, Any]", 0.1014340326964632]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[568, 8], [569, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"hook_instance": ""}, "params_descr": {"hook_instance": ""}, "params_occur": {"hook_instance": []}, "params_p": {"args": [], "hook_instance": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_provide_gcp_credential_file_decorator_key_path.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[563, 4], [571, 56]], "fn_var_ln": {"key_path": [[564, 8], [564, 16]]}, "fn_var_occur": {"key_path": []}, "name": "test_provide_gcp_credential_file_decorator_key_path", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_provide_gcp_credential_file_decorator_key_path", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["Optional[str]", 0.3999999997640287], ["pathlib.Path", 0.19999999998222193], ["str", 2.1410425414869701e-10], ["Optional[pathlib.Path]", 1.5631060421906086e-10], ["int", 1.1930594162620382e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[584, 8], [586, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "assert_gcp_credential_file_in_env", "params": {"hook_instance": ""}, "params_descr": {"hook_instance": ""}, "params_occur": {"hook_instance": []}, "params_p": {"args": [], "hook_instance": [["bool", 0.2997469808319654], ["Optional[Exception]", 0.10059649050681609], ["Callable[..., Awaitable]", 0.10059649050681609], ["Dict[str, Any]", 0.10043392350952833], ["Callable", 0.10043392350952833], ["List[str]", 0.09887913381290869], ["int", 0.09887913381290869]], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_provide_gcp_credential_file_decorator_key_content.<locals>.assert_gcp_credential_file_in_env", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[574, 4], [588, 56]], "fn_var_ln": {"file_content": [[576, 8], [576, 20]], "file_name": [[577, 8], [577, 17]], "mock_file_handler": [[579, 8], [579, 25]], "name": [[580, 8], [580, 30]], "string_file": [[575, 8], [575, 19]], "write": [[581, 8], [581, 31]]}, "fn_var_occur": {"file_content": [], "file_name": [], "mock_file_handler": [], "name": [], "string_file": [], "write": []}, "name": "test_provide_gcp_credential_file_decorator_key_content", "params": {"mock_file": "", "self": ""}, "params_descr": {"mock_file": "", "self": ""}, "params_occur": {"mock_file": [], "self": [["assert_gcp_credential_file_in_env", "self", "instance"]]}, "params_p": {"args": [], "kwargs": [], "mock_file": [["pathlib.Path", 0.36148628845251196], ["kata.data.io.network.GithubApi", 0.15121414992437907]], "self": []}, "q_name": "TestGoogleBaseHook.test_provide_gcp_credential_file_decorator_key_content", "ret_exprs": [], "ret_type": "", "variables": {"file_content": "", "file_name": "", "mock_file_handler": "", "name": "", "string_file": "", "write": ""}, "variables_p": {"file_content": [["str", 0.4285714284612926], ["int", 0.14285714297974214], ["bytes", 0.14285714282043085], ["Type[str]", 0.14285714282043085], ["List[str]", 9.767277440590888e-11]], "file_name": [["str", 0.7999999999999999], ["Optional[str]", 0.09999999999999999]], "mock_file_handler": [["int", 6.092498613582692e-10], ["str", 4.840305066544773e-10], ["List[str]", 2.634651283297612e-10]], "name": [["str", 0.8999999999999999]], "string_file": [["str", 0.3604358340353785], ["int", 0.290367303535065], ["list", 0.08737748265955804]], "write": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[590, 4], [606, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_provided_scopes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "default_project", "join"], ["self", "instance", "scopes"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_provided_scopes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[608, 4], [611, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_default_scopes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "extras", "default_project"], ["self", "instance", "scopes"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_default_scopes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Verify that if 'num_retries' in extras is not set, the default value", "long_descr": "should not be None", "ret": null}, "fn_lc": [[614, 4], [620, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_num_retries_is_not_none_by_default", "params": {"get_con_mock": "", "self": ""}, "params_descr": {"get_con_mock": "", "self": ""}, "params_occur": {"get_con_mock": [["get_con_mock", "return_value", "extra_dejson", "None"]], "self": [["self", "instance", "num_retries"]]}, "params_p": {"args": [], "get_con_mock": [], "kwargs": [], "self": []}, "q_name": "TestGoogleBaseHook.test_num_retries_is_not_none_by_default", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Verify that if 'num_retires' in extras is not set, the default value", "long_descr": "should not be None", "ret": null}, "fn_lc": [[624, 4], [645, 37]], "fn_var_ln": {"content": [[631, 8], [631, 15]], "new_content": [[634, 22], [634, 33]], "new_response": [[634, 8], [634, 20]], "request": [[629, 8], [629, 15]], "response": [[630, 8], [630, 16]]}, "fn_var_occur": {"content": [["mock_http", "return_value", "request", "return_value", "response", "content"], ["content", "new_content"]], "new_content": [["new_response", "new_content", "self", "instance", "_authorize", "request"], ["content", "new_content"]], "new_response": [["new_response", "new_content", "self", "instance", "_authorize", "request"], ["response", "new_response"]], "request": [["request", "mock_http", "return_value", "request"], ["mock_http", "return_value", "request", "return_value", "response", "content"], ["new_response", "new_content", "self", "instance", "_authorize", "request"], ["request", "assert_called_once_with", "body", "None", "connection_type", "None", "headers", "version", "version", "method", "redirections"]], "response": [["response", "mock", "MagicMock", "status_code"], ["mock_http", "return_value", "request", "return_value", "response", "content"], ["response", "new_response"]]}, "name": "test_authorize_assert_user_agent_is_sent", "params": {"mock_get_credentials": "", "mock_http": "", "self": ""}, "params_descr": {"mock_get_credentials": "", "mock_http": "", "self": ""}, "params_occur": {"mock_get_credentials": [], "mock_http": [["request", "mock_http", "return_value", "request"], ["mock_http", "return_value", "request", "return_value", "response", "content"]], "self": [["new_response", "new_content", "self", "instance", "_authorize", "request"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_credentials": [["mock.MagicMock", 0.4627030405835325], ["mock.Mock", 0.07964495456742553]], "mock_http": [], "self": []}, "q_name": "TestGoogleBaseHook.test_authorize_assert_user_agent_is_sent", "ret_exprs": [], "ret_type": "", "variables": {"content": "", "new_content": "", "new_response": "", "request": "", "response": ""}, "variables_p": {"content": [["Dict[str, str]", 0.13204951942254656], ["int", 0.10971344876283162], ["Dict[str, Dict[Any, Any]]", 0.10527362948168392], ["List[bytes]", 0.09284088718181738], ["List[Tuple[bytes, bytes]]", 0.09150816994506096], ["Dict[str, Dict[str, Any]]", 0.08356216399760942]], "new_content": [["dict", 0.3561190603851494], ["Dict[str, Union[Any, Any]]", 0.18558014572848275], ["bytes", 0.09705208411272787], ["Dict[str, Union[bytes, str]]", 0.09195924082073285], ["List[str]", 0.09111132116181235], ["Dict[str, str]", 0.08794468586445325]], "new_response": [["dict", 0.20024806511377496], ["Dict[str, str]", 0.08791920901600633], ["Dict[str, Union[bytes, str]]", 0.08512938087295391]], "request": [["requests.auth.HTTPBasicAuth", 0.1700174978401332], ["rotkehlchen.tests.utils.mock.MockResponse", 0.10282188258047334], ["Pattern[str]", 0.08721022775054436]], "response": [["mock.MagicMock", 0.5136576951610385]]}}, {"docstring": {"func": "Verify that 308 status code is excluded from httplib2's redirect codes", "long_descr": null, "ret": null}, "fn_lc": [[648, 4], [653, 56]], "fn_var_ln": {"http_authorized": [[652, 8], [652, 23]]}, "fn_var_occur": {"http_authorized": [["http_authorized", "self", "instance", "_authorize", "http"], ["http_authorized", "redirect_codes"]]}, "name": "test_authorize_assert_http_308_is_excluded", "params": {"mock_get_credentials": "", "self": ""}, "params_descr": {"mock_get_credentials": "", "self": ""}, "params_occur": {"mock_get_credentials": [], "self": [["http_authorized", "self", "instance", "_authorize", "http"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_credentials": [["mock.Mock", 0.32731824377445823], ["Callable", 0.10885424373491641], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.07408094339540428], ["tests.async_mock.MagicMock", 0.07408094339540428]], "self": []}, "q_name": "TestGoogleBaseHook.test_authorize_assert_http_308_is_excluded", "ret_exprs": [], "ret_type": "", "variables": {"http_authorized": ""}, "variables_p": {"http_authorized": [["int", 0.46800749207192033], ["Type[str]", 0.09918827749884862], ["Dict[str, str]", 0.0884562929536018], ["str", 0.08736671844563942], ["Tuple[Any, Any, Any, Any]", 0.08643606468086967], ["Dict[str, int]", 0.08471154263795837]]}}, {"docstring": {"func": "Verify that http client has a timeout set", "long_descr": null, "ret": null}, "fn_lc": [[656, 4], [661, 50]], "fn_var_ln": {"http_authorized": [[660, 8], [660, 23]]}, "fn_var_occur": {"http_authorized": [["http_authorized", "self", "instance", "_authorize", "http"], ["http_authorized", "timeout", "None"]]}, "name": "test_authorize_assert_http_timeout_is_present", "params": {"mock_get_credentials": "", "self": ""}, "params_descr": {"mock_get_credentials": "", "self": ""}, "params_occur": {"mock_get_credentials": [], "self": [["http_authorized", "self", "instance", "_authorize", "http"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_credentials": [["mock.Mock", 0.36067582161282963], ["Callable", 0.10516781159880964], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.06470653851824627], ["tests.async_mock.MagicMock", 0.06470653851824627], ["mock.MagicMock", 0.06438538418120955]], "self": []}, "q_name": "TestGoogleBaseHook.test_authorize_assert_http_timeout_is_present", "ret_exprs": [], "ret_type": "", "variables": {"http_authorized": ""}, "variables_p": {"http_authorized": [["int", 0.1178124510282907], ["str", 0.0971037810035829], ["bool", 0.09618590731187378], ["Dict[str, str]", 0.09258695678373006], ["float", 0.09243972162658413], ["dict", 0.08850525516121038]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[677, 4], [699, 55]], "fn_var_ln": {"mock_credentials": [[684, 8], [684, 24]], "result": [[687, 8], [687, 14]], "return_value": [[685, 8], [685, 47]]}, "fn_var_occur": {"mock_credentials": [["mock_credentials", "mock", "MagicMock"], ["mock_get_creds_and_proj_id", "return_value", "mock_credentials", "PROJECT_ID"], ["mock_credentials", "PROJECT_ID", "result"]], "result": [["result", "self", "instance", "get_credentials_and_project_id"], ["mock_credentials", "PROJECT_ID", "result"]], "return_value": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials", "PROJECT_ID"]]}, "name": "test_get_credentials_and_project_id_with_impersonation_chain", "params": {"delegates": "", "impersonation_chain": "", "mock_get_creds_and_proj_id": "", "self": "", "target_principal": ""}, "params_descr": {"delegates": "", "impersonation_chain": "", "mock_get_creds_and_proj_id": "", "self": "", "target_principal": ""}, "params_occur": {"delegates": [["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "target_principal", "delegates", "delegates"]], "impersonation_chain": [["self", "instance", "impersonation_chain", "impersonation_chain"]], "mock_get_creds_and_proj_id": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials", "PROJECT_ID"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "target_principal", "delegates", "delegates"]], "self": [["self", "instance", "impersonation_chain", "impersonation_chain"], ["result", "self", "instance", "get_credentials_and_project_id"], ["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "target_principal", "delegates", "delegates"]], "target_principal": [["mock_get_creds_and_proj_id", "assert_called_once_with", "key_path", "None", "keyfile_dict", "None", "credential_config_file", "None", "key_secret_name", "None", "key_secret_project_id", "None", "scopes", "self", "instance", "scopes", "delegate_to", "None", "target_principal", "target_principal", "delegates", "delegates"]]}, "params_p": {"args": [], "delegates": [["str", 0.20627708348310353], ["Optional[Dict]", 0.099496641387047]], "impersonation_chain": [["str", 0.24825478411412835], ["int", 0.059501849213003895]], "kwargs": [], "mock_get_creds_and_proj_id": [["bool", 0.24337220466004575], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09394467161007769], ["Optional[float]", 0.09064435002735316], ["str", 0.09064435002735316], ["kata.data.io.network.GithubApi", 0.09025610404300347]], "self": [], "target_principal": [["str", 0.20627708348310353], ["Optional[Dict]", 0.099496641387047]]}, "q_name": "TestGoogleBaseHook.test_get_credentials_and_project_id_with_impersonation_chain", "ret_exprs": [], "ret_type": "", "variables": {"mock_credentials": "", "result": "", "return_value": ""}, "variables_p": {"mock_credentials": [["mock.MagicMock", 0.08990154387669506]], "result": [["int", 0.3626565516147008], ["Dict[str, Union[int, str]]", 0.17487343029869495], ["bytes", 0.10925199637794789], ["Dict[str, Any]", 0.09666055284002349], ["Dict[str, Tuple[Any, Any]]", 0.08921691878194767], ["list", 0.08446154443237905], ["str", 0.0828790056543061]], "return_value": [["str", 0.4301488745861331], ["int", 0.1410560355662001], ["list", 0.08252659140535472]]}}], "name": "TestGoogleBaseHook", "q_name": "TestGoogleBaseHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[702, 0], [810, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[703, 4], [708, 83]], "fn_var_ln": {"instance": [[708, 12], [708, 25]]}, "fn_var_occur": {"instance": [["self", "instance", "hook", "GoogleBaseHook", "gcp_conn_id"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "instance", "hook", "GoogleBaseHook", "gcp_conn_id"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProvideAuthorizedGcloud.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["str", 0.3920459041904845], ["int", 0.15231622901898934], ["dict", 0.0885054221589], ["set", 0.07928272135381356]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[716, 4], [729, 58]], "fn_var_ln": {"key_path": [[717, 8], [717, 16]]}, "fn_var_occur": {"key_path": [["self", "instance", "extras", "key_path"], ["os", "environ", "CREDENTIALS", "key_path"]]}, "name": "test_provide_authorized_gcloud_key_path_and_keyfile_dict", "params": {"mock_check_output": "", "mock_default": "", "self": ""}, "params_descr": {"mock_check_output": "", "mock_default": "", "self": ""}, "params_occur": {"mock_check_output": [], "mock_default": [], "self": [["self", "instance", "extras", "key_path"], ["self", "instance", "provide_authorized_gcloud"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_output": [["mock.Mock", 0.4051005211770674]], "mock_default": [["mock.Mock", 0.4051005211770674]], "self": []}, "q_name": "TestProvideAuthorizedGcloud.test_provide_authorized_gcloud_key_path_and_keyfile_dict", "ret_exprs": [], "ret_type": "", "variables": {"key_path": ""}, "variables_p": {"key_path": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[737, 4], [748, 49]], "fn_var_ln": {"calls": [[744, 8], [744, 13]], "key_path": [[738, 8], [738, 16]]}, "fn_var_occur": {"calls": [["calls", "mock", "call", "mock", "call"], ["mock_check_output", "assert_has_calls", "calls"]], "key_path": [["self", "instance", "extras", "key_path"], ["os", "environ", "CREDENTIALS", "key_path"]]}, "name": "test_provide_authorized_gcloud_key_path", "params": {"mock_check_output": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_check_output": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_check_output": [["mock_check_output", "assert_has_calls", "calls"]], "mock_project_id": [], "self": [["self", "instance", "extras", "key_path"], ["self", "instance", "provide_authorized_gcloud"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_output": [], "mock_project_id": [["mock.Mock", 0.4012548384249895], ["mock.MagicMock", 0.0945816354307271]], "self": []}, "q_name": "TestProvideAuthorizedGcloud.test_provide_authorized_gcloud_key_path", "ret_exprs": [], "ret_type": "", "variables": {"calls": "", "key_path": ""}, "variables_p": {"calls": [["list", 0.48781777985096414], ["mock._Call", 0.2583927011367349], ["List[int]", 0.10084745731361282], ["Tuple[int, int]", 0.08109936103326867], ["List[str]", 0.07184270066541953]], "key_path": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[757, 4], [773, 49]], "fn_var_ln": {"calls": [[769, 8], [769, 13]], "file_content": [[759, 8], [759, 20]], "file_name": [[760, 8], [760, 17]], "mock_file_handler": [[762, 8], [762, 25]], "name": [[763, 8], [763, 30]], "string_file": [[758, 8], [758, 19]], "write": [[764, 8], [764, 31]]}, "fn_var_occur": {"calls": [["calls", "mock", "call", "mock", "call"], ["mock_check_output", "assert_has_calls", "calls"]], "file_content": [["self", "instance", "extras", "file_content"]], "file_name": [["mock_file_handler", "name", "file_name"], ["os", "environ", "CREDENTIALS", "file_name"]], "mock_file_handler": [["mock_file_handler", "mock_file", "return_value", "__enter__", "return_value"], ["mock_file_handler", "name", "file_name"], ["mock_file_handler", "write", "string_file", "write"]], "name": [["mock_file_handler", "name", "file_name"]], "string_file": [["string_file", "StringIO"], ["mock_file_handler", "write", "string_file", "write"]], "write": [["mock_file_handler", "write", "string_file", "write"]]}, "name": "test_provide_authorized_gcloud_keyfile_dict", "params": {"mock_check_output": "", "mock_file": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_check_output": "", "mock_file": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_check_output": [["mock_check_output", "assert_has_calls", "calls"]], "mock_file": [["mock_file_handler", "mock_file", "return_value", "__enter__", "return_value"]], "mock_project_id": [], "self": [["self", "instance", "extras", "file_content"], ["self", "instance", "provide_authorized_gcloud"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_output": [["bool", 0.22350142142031648], ["str", 0.19834935443391505]], "mock_file": [["str", 0.7919122686145951], ["pathlib.Path", 0.11605135955586286]], "mock_project_id": [["str", 0.80315897401729], ["List[pathlib.Path]", 0.0986567854620959], ["Optional[str]", 0.09818424052061418]], "self": []}, "q_name": "TestProvideAuthorizedGcloud.test_provide_authorized_gcloud_keyfile_dict", "ret_exprs": [], "ret_type": "", "variables": {"calls": "", "file_content": "", "file_name": "", "mock_file_handler": "", "name": "", "string_file": "", "write": ""}, "variables_p": {"calls": [["list", 0.48781777985096414], ["mock._Call", 0.2583927011367349], ["List[int]", 0.10084745731361282], ["Tuple[int, int]", 0.08109936103326867], ["List[str]", 0.07184270066541953]], "file_content": [["int", 0.3685181229780605], ["bytes", 0.1919968111266271], ["Union[Dict[str, Any], List[Any]]", 0.13902145796173507], ["List[str]", 0.09288043709302947]], "file_name": [["str", 1.0]], "mock_file_handler": [["str", 0.7830482288686671], ["pathlib.Path", 0.12402408828884952], ["dict", 0.09292768284248337]], "name": [["str", 0.9999999999999999]], "string_file": [["str", 0.5936794489704093], ["io.TextIOWrapper", 0.11132836466405008], ["list", 0.10298265573142629], ["List[str]", 0.08548655831368134]], "write": [["str", 0.26010197225308185], ["list", 0.20934554482799492], ["Dict[str, int]", 0.12115275145401345], ["Set[str]", 0.11839102342294891], ["IO[bytes]", 0.10299386840487652], ["bool", 0.09915274552880708], ["Union[Literal, Literal]", 0.08886209410827732]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[783, 4], [810, 9]], "fn_var_ln": {"file_content": [[789, 8], [789, 20]]}, "fn_var_occur": {"file_content": [["file_content", "json", "dumps"], ["mock", "patch", "MODULE_NAME", "mock", "mock_open", "read_data", "file_content"]]}, "name": "test_provide_authorized_gcloud_via_gcloud_application_default", "params": {"mock_check_output": "", "mock_cloud_sdk": "", "mock_file": "", "mock_project_id": "", "self": ""}, "params_descr": {"mock_check_output": "", "mock_cloud_sdk": "", "mock_file": "", "mock_project_id": "", "self": ""}, "params_occur": {"mock_check_output": [["mock_check_output", "assert_has_calls", "mock", "call", "mock", "call", "mock", "call", "mock", "call", "any_order", "False"]], "mock_cloud_sdk": [["mock_cloud_sdk", "get_application_default_credentials_path", "return_value", "__file__"]], "mock_file": [], "mock_project_id": [], "self": [["self", "instance", "provide_authorized_gcloud"]]}, "params_p": {"args": [], "kwargs": [], "mock_check_output": [["mock.Mock", 0.1016510951485778]], "mock_cloud_sdk": [["pathlib.Path", 0.09093308493767406]], "mock_file": [["list", 0.12416165251394193], ["bool", 0.10278705657789829]], "mock_project_id": [["list", 0.12416165251394193], ["bool", 0.10278705657789829]], "self": []}, "q_name": "TestProvideAuthorizedGcloud.test_provide_authorized_gcloud_via_gcloud_application_default", "ret_exprs": [], "ret_type": "", "variables": {"file_content": ""}, "variables_p": {"file_content": [["str", 0.9123301687985029], ["int", 0.08766983120149699]]}}], "name": "TestProvideAuthorizedGcloud", "q_name": "TestProvideAuthorizedGcloud", "variables": {}, "variables_p": {}}, {"cls_lc": [[813, 0], [847, 40]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[814, 4], [821, 41]], "fn_var_ln": {"extras": [[816, 8], [816, 23]], "instance": [[815, 8], [815, 16]]}, "fn_var_occur": {"extras": [["instance", "extras"]], "instance": [["instance", "hook", "GoogleBaseHook", "gcp_conn_id"], ["instance", "extras"], ["isinstance", "instance", "num_retries", "int"], ["instance", "num_retries"]]}, "name": "test_should_return_int_when_set_int_via_connection", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestNumRetry.test_should_return_int_when_set_int_via_connection", "ret_exprs": [], "ret_type": "", "variables": {"extras": "", "instance": ""}, "variables_p": {"extras": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "instance": [["int", 0.6626033926354682], ["str", 0.13960292716127543]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[827, 4], [829, 52]], "fn_var_ln": {"instance": [[828, 8], [828, 16]]}, "fn_var_occur": {"instance": [["instance", "hook", "GoogleBaseHook", "gcp_conn_id"], ["isinstance", "instance", "num_retries", "int"]]}, "name": "test_should_return_int_when_set_via_env_var", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestNumRetry.test_should_return_int_when_set_via_env_var", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["int", 0.8146980566590136]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[835, 4], [838, 56]], "fn_var_ln": {"instance": [[836, 8], [836, 16]]}, "fn_var_occur": {"instance": [["instance", "hook", "GoogleBaseHook", "gcp_conn_id"], ["isinstance", "instance", "num_retries", "int"]]}, "name": "test_should_raise_when_invalid_value_via_env_var", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestNumRetry.test_should_raise_when_invalid_value_via_env_var", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["int", 0.8146980566590136]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[844, 4], [847, 40]], "fn_var_ln": {"instance": [[845, 8], [845, 16]]}, "fn_var_occur": {"instance": [["instance", "hook", "GoogleBaseHook", "gcp_conn_id"], ["isinstance", "instance", "num_retries", "int"], ["instance", "num_retries"]]}, "name": "test_should_fallback_when_empty_string_in_env_var", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestNumRetry.test_should_fallback_when_empty_string_in_env_var", "ret_exprs": [], "ret_type": "", "variables": {"instance": ""}, "variables_p": {"instance": [["int", 0.6784123785803203], ["Type[range]", 0.21880330096994804], ["Counter[int]", 0.10278432044973175]]}}], "name": "TestNumRetry", "q_name": "TestNumRetry", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 0], [75, 18]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_retryable_test_with_temporary_quota_retry", "params": {"thing": ""}, "params_descr": {"thing": ""}, "params_occur": {"thing": []}, "params_p": {"args": [], "kwargs": [], "thing": [["bool", 0.1666666668617039], ["Callable[[], bytes]", 0.16666666659551083], ["Dict[scripts.node_integration_tests.playbooks.test_config_base.NodeId, pathlib.Path]", 0.16666666659551083], ["BaseException", 0.16666666659551083]]}, "q_name": "_retryable_test_with_temporary_quota_retry", "ret_exprs": ["return thing()"], "ret_type": "", "ret_type_p": [["int", 3.732973574780814e-10], ["str", 1.8816062282067376e-10], ["Dict[str, int]", 1.3701866015987673e-10]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "json", "os", "re", "io", "StringIO", "pathlib", "Path", "unittest", "mock", "unittest", "mock", "patch", "google.auth", "pytest", "tenacity", "google", "auth", "environment_vars", "CREDENTIALS", "google", "auth", "exceptions", "GoogleAuthError", "google", "cloud", "exceptions", "Forbidden", "airflow", "version", "airflow", "exceptions", "AirflowException", "airflow", "providers", "google", "cloud", "utils", "credentials_provider", "_DEFAULT_SCOPES", "airflow", "providers", "google", "common", "hooks", "base_google", "hook", "airflow", "providers", "google", "common", "hooks", "base_google", "GoogleBaseHook", "tests", "providers", "google", "cloud", "utils", "base_gcp_mock", "mock_base_gcp_hook_default_project_id"], "mod_var_ln": {"ENV_VALUE": [[51, 0], [51, 9]], "MODULE_NAME": [[49, 0], [49, 11]], "PROJECT_ID": [[50, 0], [50, 10]], "_": [[45, 4], [45, 5]], "default_creds_available": [[47, 4], [47, 27]], "default_project": [[45, 7], [45, 22]]}, "mod_var_occur": {"ENV_VALUE": [["os", "environ", "CREDENTIALS", "ENV_VALUE"], ["os", "environ", "CREDENTIALS", "ENV_VALUE"], ["os", "environ", "CREDENTIALS", "ENV_VALUE"], ["os", "environ", "CREDENTIALS", "ENV_VALUE"]], "MODULE_NAME": [["mock", "patch", "MODULE_NAME", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "MODULE_NAME", "new", "mock_base_gcp_hook_default_project_id"], ["mock", "patch", "MODULE_NAME", "mock", "mock_open", "read_data", "file_content"]], "PROJECT_ID": [["mock_get_creds_and_proj_id", "return_value", "mock_credentials", "PROJECT_ID"], ["mock_credentials", "PROJECT_ID", "result"]], "_": [], "default_creds_available": [], "default_project": [["self", "instance", "extras", "default_project", "join"], ["self", "instance", "extras", "default_project"], ["self", "instance", "extras", "default_project", "join"], ["self", "instance", "extras", "default_project"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 208}, "session_id": "7UeLqe5_4A9GdjsM2LM_pVAWLxOaTKUfYHduhQ-fVAg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"ENV_VALUE": "", "MODULE_NAME": "", "PROJECT_ID": "", "_": "", "default_creds_available": "", "default_project": ""}, "variables_p": {"ENV_VALUE": [["str", 0.33282939133166844], ["Iterator[str]", 0.11150942470191652], ["Optional[str]", 0.10621590807587307], ["int", 0.09017952808084094], ["OrderedDict[str, str]", 0.08951428620374292]], "MODULE_NAME": [["str", 0.901542937520583], ["Dict[str, Union[float, str]]", 0.09845706247941705]], "PROJECT_ID": [["str", 1.0]], "_": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "default_creds_available": [["str", 0.4], ["int", 0.30000000000000004], ["List[Tuple[str, int]]", 0.1]], "default_project": [["str", 0.5483629788839544], ["int", 0.2713200846538461], ["distutils.version.LooseVersion", 0.09061584056166001], ["property", 0.08970109590053957]]}}}