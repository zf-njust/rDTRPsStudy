{"error": null, "response": {"classes": [{"cls_lc": [[245, 0], [831, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[251, 4], [259, 49]], "fn_var_ln": {"conn": [[252, 8], [252, 12]], "extra": [[256, 8], [256, 18]], "hook": [[259, 8], [259, 17]], "host": [[253, 8], [253, 17]], "login": [[254, 8], [254, 18]], "password": [[255, 8], [255, 21]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "host", "HOST"], ["conn", "login", "LOGIN"], ["conn", "password", "PASSWORD"], ["conn", "extra", "None"]], "extra": [["conn", "extra", "None"]], "hook": [["self", "hook", "DatabricksHook", "retry_delay"]], "host": [["conn", "host", "HOST"]], "login": [["conn", "login", "LOGIN"]], "password": [["conn", "password", "PASSWORD"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook", "retry_delay"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": "", "host": "", "login": "", "password": ""}, "variables_p": {"conn": [["str", 0.2656670043053492], ["List[str]", 0.08390391604919986], ["Pattern[str]", 0.07795662141772824]], "extra": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]], "login": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[261, 4], [265, 52]], "fn_var_ln": {"hook": [[263, 8], [263, 12]], "op": [[262, 8], [262, 10]], "ua_string": [[264, 8], [264, 17]]}, "fn_var_occur": {"hook": [["hook", "DatabricksHook", "retry_delay", "caller", "op"], ["ua_string", "hook", "user_agent_value"]], "op": [["hook", "DatabricksHook", "retry_delay", "caller", "op"], ["ua_string", "endswith", "op"]], "ua_string": [["ua_string", "hook", "user_agent_value"], ["ua_string", "endswith", "op"]]}, "name": "test_user_agent_string", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_user_agent_string", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "op": "", "ua_string": ""}, "variables_p": {"hook": [["List[str]", 0.22400488077507982]], "op": [["int", 0.21576382685261805], ["Dict[str, Tuple[str, str]]", 0.08698718188313247], ["dict", 0.08678130645970443]], "ua_string": [["str", 0.8999118447529968]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [269, 27]], "fn_var_ln": {"host": [[268, 8], [268, 12]]}, "fn_var_occur": {"host": [["host", "self", "hook", "_parse_host", "HOST"], ["host", "HOST"]]}, "name": "test_parse_host_with_proper_host", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["host", "self", "hook", "_parse_host", "HOST"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_parse_host_with_proper_host", "ret_exprs": [], "ret_type": "", "variables": {"host": ""}, "variables_p": {"host": [["dict", 0.4473168131289691], ["int", 0.28817079671775764], ["str", 0.2645123901532731]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [273, 27]], "fn_var_ln": {"host": [[272, 8], [272, 12]]}, "fn_var_occur": {"host": [["host", "self", "hook", "_parse_host", "HOST_WITH_SCHEME"], ["host", "HOST"]]}, "name": "test_parse_host_with_scheme", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["host", "self", "hook", "_parse_host", "HOST_WITH_SCHEME"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_parse_host_with_scheme", "ret_exprs": [], "ret_type": "", "variables": {"host": ""}, "variables_p": {"host": [["int", 0.43061601273977873], ["str", 0.1009430118585134], ["Tuple[str, int]", 0.08893591609686277], ["Dict[str, List[str]]", 0.07630964192547114]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[275, 4], [277, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_init_bad_retry_limit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_init_bad_retry_limit", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[279, 4], [296, 73]], "fn_var_ln": {"hook": [[280, 8], [280, 12]]}, "fn_var_occur": {"hook": [["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["mock", "patch", "object", "hook", "log", "mock_errors"], ["hook", "_do_api_call", "SUBMIT_RUN_ENDPOINT"]]}, "name": "test_do_api_call_retries_with_retryable_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_do_api_call_retries_with_retryable_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["app.providers.Provider", 0.20968498950353115]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[298, 4], [308, 69]], "fn_var_ln": {"hook": [[299, 8], [299, 12]]}, "fn_var_occur": {"hook": [["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["mock", "patch", "object", "hook", "log", "mock_errors"], ["hook", "_do_api_call", "SUBMIT_RUN_ENDPOINT"]]}, "name": "test_do_api_call_retries_with_too_many_requests", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_do_api_call_retries_with_too_many_requests", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["app.providers.Provider", 0.20968498950353115]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[311, 4], [320, 43]], "fn_var_ln": {"hook": [[312, 8], [312, 12]]}, "fn_var_occur": {"hook": [["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["mock", "patch", "object", "hook", "log", "mock_errors"], ["hook", "_do_api_call", "SUBMIT_RUN_ENDPOINT"]]}, "name": "test_do_api_call_does_not_retry_with_non_retryable_error", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["setup_mock_requests", "mock_requests", "requests_exceptions", "HTTPError", "status_code"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_do_api_call_does_not_retry_with_non_retryable_error", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["app.providers.Provider", 0.20968498950353115]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[322, 4], [341, 54]], "fn_var_ln": {"hook": [[323, 8], [323, 12]], "response": [[338, 20], [338, 28]]}, "fn_var_occur": {"hook": [["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["mock", "patch", "object", "hook", "log", "mock_errors"], ["response", "hook", "_do_api_call", "SUBMIT_RUN_ENDPOINT"]], "response": [["response", "hook", "_do_api_call", "SUBMIT_RUN_ENDPOINT"]]}, "name": "test_do_api_call_succeeds_after_retrying", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_do_api_call_succeeds_after_retrying", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "response": ""}, "variables_p": {"hook": [["app.providers.Provider", 0.340951662334229]], "response": [["List[str]", 0.21244589851176315], ["str", 0.20419041874771193], ["List[Tuple[str, str]]", 0.10740675318589489], ["Type[Dict[str, Any]]", 0.08918189223113344]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[343, 4], [360, 73]], "fn_var_ln": {"hook": [[344, 8], [344, 12]]}, "fn_var_occur": {"hook": [["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["mock", "patch", "object", "hook", "log", "mock_errors"], ["hook", "_do_api_call", "SUBMIT_RUN_ENDPOINT"]]}, "name": "test_do_api_call_custom_retry", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_do_api_call_custom_retry", "ret_exprs": [], "ret_type": "", "variables": {"hook": ""}, "variables_p": {"hook": [["app.providers.Provider", 0.20968498950353115]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[363, 4], [376, 9]], "fn_var_ln": {"data": [[365, 8], [365, 12]], "patched_cluster_name": [[366, 8], [366, 28]]}, "fn_var_occur": {"data": [["patched_cluster_name", "self", "hook", "_do_api_call", "data"]], "patched_cluster_name": [["patched_cluster_name", "self", "hook", "_do_api_call", "data"]]}, "name": "test_do_api_call_patch", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "patch", "return_value", "json", "return_value"], ["mock_requests", "patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["patched_cluster_name", "self", "hook", "_do_api_call", "data"], ["mock_requests", "patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [["mock.Mock", 0.0843242069902945]], "self": []}, "q_name": "TestDatabricksHook.test_do_api_call_patch", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "patched_cluster_name": ""}, "variables_p": {"data": [["Dict[str, str]", 0.9999999999999999]], "patched_cluster_name": [["str", 0.6835800644341318], ["List[str]", 0.13646970969223665], ["int", 0.09004281581910555], ["Dict[str, str]", 0.089907410054526]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[379, 4], [395, 9]], "fn_var_ln": {"data": [[381, 8], [381, 12]], "run_id": [[382, 8], [382, 14]]}, "fn_var_occur": {"data": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]]}, "name": "test_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "post", "return_value", "json", "return_value"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "NOTEBOOK_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["run_id", "self", "hook", "submit_run", "data"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "NOTEBOOK_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [["mock.Mock", 0.08990213559916217]], "self": []}, "q_name": "TestDatabricksHook.test_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "run_id": ""}, "variables_p": {"data": [["int", 0.5185721804473307]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[398, 4], [414, 9]], "fn_var_ln": {"data": [[400, 8], [400, 12]], "run_id": [[401, 8], [401, 14]]}, "fn_var_occur": {"data": [["data", "SPARK_PYTHON_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]]}, "name": "test_spark_python_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "post", "return_value", "json", "return_value"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "SPARK_PYTHON_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["run_id", "self", "hook", "submit_run", "data"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "SPARK_PYTHON_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_spark_python_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "run_id": ""}, "variables_p": {"data": [["int", 0.7113055428536447], ["str", 0.1030201735271974], ["List[str]", 0.09860914358249884], ["Dict[str, str]", 0.0870651400366591]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[417, 4], [434, 9]], "fn_var_ln": {"data": [[422, 8], [422, 12]], "run_id": [[423, 8], [423, 14]], "status_code_mock": [[420, 8], [420, 24]]}, "fn_var_occur": {"data": [["data", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID"], ["run_id", "self", "hook", "run_now", "data"]], "run_id": [["run_id", "self", "hook", "run_now", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_run_now", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["run_id", "self", "hook", "run_now", "data"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_run_now", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "run_id": "", "status_code_mock": ""}, "variables_p": {"data": [["dict", 0.28001123124590716], ["List[Dict[str, str]]", 0.1262922739640333], ["ddionrails.base.models.System", 0.10607747534177478], ["Dict[str, List[Any]]", 0.10087385052378574]], "run_id": [["str", 0.7000513454636341], ["list", 0.10641063025489866], ["Dict[int, str]", 0.09783873741153108], ["Dict[str, str]", 0.09569928686993605]], "status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[437, 4], [450, 9]], "fn_var_ln": {"run_page_url": [[440, 8], [440, 20]]}, "fn_var_occur": {"run_page_url": [["run_page_url", "self", "hook", "get_run_page_url", "RUN_ID"], ["run_page_url", "RUN_PAGE_URL"]]}, "name": "test_get_run_page_url", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["run_page_url", "self", "hook", "get_run_page_url", "RUN_ID"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_run_page_url", "ret_exprs": [], "ret_type": "", "variables": {"run_page_url": ""}, "variables_p": {"run_page_url": [["dict", 0.1916403376545361], ["Pattern[str]", 0.1292523753020546], ["Dict[str, Any]", 0.11315408041681191], ["str", 0.09959961714571335], ["list", 0.09946884642724019], ["KeysView[str]", 0.09476894837226373], ["Dict[str, Union[Any, int]]", 0.09107850606569147], ["kippo.tasks.models.KippoTask", 0.0896714368626913]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[453, 4], [466, 9]], "fn_var_ln": {"job_id": [[456, 8], [456, 14]]}, "fn_var_occur": {"job_id": [["job_id", "self", "hook", "get_job_id", "RUN_ID"], ["job_id", "JOB_ID"]]}, "name": "test_get_job_id", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["job_id", "self", "hook", "get_job_id", "RUN_ID"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_job_id", "ret_exprs": [], "ret_type": "", "variables": {"job_id": ""}, "variables_p": {"job_id": [["list", 0.6705038469287068], ["str", 0.22618326198885547], ["int", 0.10331289108243774]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[469, 4], [482, 9]], "fn_var_ln": {"run_output_error": [[472, 8], [472, 24]]}, "fn_var_occur": {"run_output_error": [["run_output_error", "self", "hook", "get_run_output", "RUN_ID", "get"], ["run_output_error", "ERROR_MESSAGE"]]}, "name": "test_get_run_output", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_OUTPUT_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "get_run_output_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["run_output_error", "self", "hook", "get_run_output", "RUN_ID", "get"], ["mock_requests", "get", "assert_called_once_with", "get_run_output_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_run_output", "ret_exprs": [], "ret_type": "", "variables": {"run_output_error": ""}, "variables_p": {"run_output_error": [["str", 0.7775521604557136], ["int", 0.11721443358918938], ["List[str]", 0.10523340595509681]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[485, 4], [498, 9]], "fn_var_ln": {"run_state": [[488, 8], [488, 17]]}, "fn_var_occur": {"run_state": [["run_state", "self", "hook", "get_run_state", "RUN_ID"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]]}, "name": "test_get_run_state", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["run_state", "self", "hook", "get_run_state", "RUN_ID"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_run_state", "ret_exprs": [], "ret_type": "", "variables": {"run_state": ""}, "variables_p": {"run_state": [["dict", 0.10811331566378231], ["examples.cloud.session.User", 0.09653190751114753], ["int", 0.09373202734143206], ["Dict[str, object]", 0.08612768736388018], ["Dict[str, Any]", 0.08132752678853043], ["app.models.user.User", 0.0802290062936133]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[501, 4], [504, 101]], "fn_var_ln": {"run_state_str": [[503, 8], [503, 21]]}, "fn_var_occur": {"run_state_str": [["run_state_str", "self", "hook", "get_run_state_str", "RUN_ID"], ["run_state_str", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]]}, "name": "test_get_run_state_str", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"]], "self": [["run_state_str", "self", "hook", "get_run_state_str", "RUN_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_run_state_str", "ret_exprs": [], "ret_type": "", "variables": {"run_state_str": ""}, "variables_p": {"run_state_str": [["str", 0.6862501956599797], ["List[str]", 0.1422897489000934], ["Dict[Any, str]", 0.08937647043080359], ["int", 0.08208358500912355]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[507, 4], [510, 50]], "fn_var_ln": {"lifecycle_state": [[509, 8], [509, 23]]}, "fn_var_occur": {"lifecycle_state": [["lifecycle_state", "self", "hook", "get_run_state_lifecycle", "RUN_ID"], ["lifecycle_state", "LIFE_CYCLE_STATE"]]}, "name": "test_get_run_state_lifecycle", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"]], "self": [["lifecycle_state", "self", "hook", "get_run_state_lifecycle", "RUN_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_run_state_lifecycle", "ret_exprs": [], "ret_type": "", "variables": {"lifecycle_state": ""}, "variables_p": {"lifecycle_state": [["int", 0.5671446179044205], ["str", 0.12700319495420379], ["list", 0.1097452617484012], ["radio.models.PlaybackState", 0.09889631120556464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[513, 4], [516, 43]], "fn_var_ln": {"result_state": [[515, 8], [515, 20]]}, "fn_var_occur": {"result_state": [["result_state", "self", "hook", "get_run_state_result", "RUN_ID"], ["result_state", "RESULT_STATE"]]}, "name": "test_get_run_state_result", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"]], "self": [["result_state", "self", "hook", "get_run_state_result", "RUN_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_run_state_result", "ret_exprs": [], "ret_type": "", "variables": {"result_state": ""}, "variables_p": {"result_state": [["Dict[str, Optional[str]]", 0.18076770379087648], ["list", 0.1771783492802887], ["Tuple[str, str]", 0.1391149364205183], ["str", 0.12745145257934773], ["dict", 0.10092271248776377]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[519, 4], [522, 45]], "fn_var_ln": {"state_message": [[521, 8], [521, 21]]}, "fn_var_occur": {"state_message": [["state_message", "self", "hook", "get_run_state_message", "RUN_ID"], ["state_message", "STATE_MESSAGE"]]}, "name": "test_get_run_state_cycle", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"]], "self": [["state_message", "self", "hook", "get_run_state_message", "RUN_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_run_state_cycle", "ret_exprs": [], "ret_type": "", "variables": {"state_message": ""}, "variables_p": {"state_message": [["int", 0.44058227990088444], ["T", 0.2721027993079801], ["str", 0.18439162251279134], ["list", 0.10292329827834425]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[525, 4], [537, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cancel_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "post", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "post", "assert_called_once_with", "cancel_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "cancel_run", "RUN_ID"], ["mock_requests", "post", "assert_called_once_with", "cancel_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_cancel_run", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[540, 4], [552, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cancel_all_runs", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "post", "return_value", "json", "return_value"], ["mock_requests", "post", "assert_called_once_with", "cancel_all_runs_endpoint", "HOST", "json", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "cancel_all_runs", "JOB_ID"], ["mock_requests", "post", "assert_called_once_with", "cancel_all_runs_endpoint", "HOST", "json", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_cancel_all_runs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[555, 4], [567, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "post", "return_value", "json", "return_value"], ["mock_requests", "post", "assert_called_once_with", "delete_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "delete_run", "RUN_ID"], ["mock_requests", "post", "assert_called_once_with", "delete_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [["mock.Mock", 0.09381357725908628]], "self": []}, "q_name": "TestDatabricksHook.test_delete_run", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[570, 4], [598, 9]], "fn_var_ln": {"json": [[572, 8], [572, 12]]}, "fn_var_occur": {"json": [["mock_requests", "post", "return_value", "json", "return_value"], ["json", "False", "True"], ["self", "hook", "repair_run", "json"], ["mock_requests", "post", "assert_called_once_with", "repair_run_endpoint", "HOST", "json", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "name": "test_repair_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "post", "return_value", "json", "return_value"], ["mock_requests", "post", "assert_called_once_with", "repair_run_endpoint", "HOST", "json", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "repair_run", "json"], ["mock_requests", "post", "assert_called_once_with", "repair_run_endpoint", "HOST", "json", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_repair_run", "ret_exprs": [], "ret_type": "", "variables": {"json": ""}, "variables_p": {"json": [["Dict[str, Dict[str, Any]]", 0.3966037891298736], ["List[Dict[str, Any]]", 0.09815362918423252], ["List[str]", 0.09086586009015393], ["list", 0.08870721914008022], ["Tuple[int, int]", 0.0777498327068293]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[601, 4], [616, 9]], "fn_var_ln": {"status_code_mock": [[604, 8], [604, 24]]}, "fn_var_occur": {"status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_start_cluster", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["mock_requests", "post", "assert_called_once_with", "start_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "start_cluster", "CLUSTER_ID"], ["mock_requests", "post", "assert_called_once_with", "start_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_start_cluster", "ret_exprs": [], "ret_type": "", "variables": {"status_code_mock": ""}, "variables_p": {"status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[619, 4], [634, 9]], "fn_var_ln": {"status_code_mock": [[622, 8], [622, 24]]}, "fn_var_occur": {"status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_restart_cluster", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["mock_requests", "post", "assert_called_once_with", "restart_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "restart_cluster", "CLUSTER_ID"], ["mock_requests", "post", "assert_called_once_with", "restart_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_restart_cluster", "ret_exprs": [], "ret_type": "", "variables": {"status_code_mock": ""}, "variables_p": {"status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[637, 4], [652, 9]], "fn_var_ln": {"status_code_mock": [[640, 8], [640, 24]]}, "fn_var_occur": {"status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_terminate_cluster", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["mock_requests", "post", "assert_called_once_with", "terminate_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "terminate_cluster", "CLUSTER_ID"], ["mock_requests", "post", "assert_called_once_with", "terminate_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_terminate_cluster", "ret_exprs": [], "ret_type": "", "variables": {"status_code_mock": ""}, "variables_p": {"status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[655, 4], [671, 9]], "fn_var_ln": {"data": [[661, 8], [661, 12]], "status_code_mock": [[658, 8], [658, 24]]}, "fn_var_occur": {"data": [["data", "CLUSTER_ID", "LIBRARIES"], ["self", "hook", "install", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_install_libs_on_cluster", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["mock_requests", "post", "assert_called_once_with", "install_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "install", "data"], ["mock_requests", "post", "assert_called_once_with", "install_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_install_libs_on_cluster", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "status_code_mock": ""}, "variables_p": {"data": [["Dict[int, Any]", 0.50299407779697], ["Dict[str, str]", 0.31751610050497064]], "status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[674, 4], [690, 9]], "fn_var_ln": {"data": [[680, 8], [680, 12]], "status_code_mock": [[677, 8], [677, 24]]}, "fn_var_occur": {"data": [["data", "CLUSTER_ID", "LIBRARIES"], ["self", "hook", "uninstall", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_uninstall_libs_on_cluster", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["mock_requests", "post", "assert_called_once_with", "uninstall_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "uninstall", "data"], ["mock_requests", "post", "assert_called_once_with", "uninstall_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_uninstall_libs_on_cluster", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "status_code_mock": ""}, "variables_p": {"data": [["Dict[int, Any]", 0.50299407779697], ["Dict[str, str]", 0.31751610050497064]], "status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[692, 4], [694, 55]], "fn_var_ln": {"aad_token": [[693, 8], [693, 17]]}, "fn_var_occur": {"aad_token": [["aad_token", "int", "time", "time", "TOKEN_REFRESH_LEAD_TIME"], ["self", "hook", "_is_aad_token_valid", "aad_token"]]}, "name": "test_is_aad_token_valid_returns_true", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "_is_aad_token_valid", "aad_token"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_is_aad_token_valid_returns_true", "ret_exprs": [], "ret_type": "", "variables": {"aad_token": ""}, "variables_p": {"aad_token": [["int", 0.5378466619468365], ["Dict[str, str]", 0.22788886110709963], ["list", 0.12702441724082], ["str", 0.10724005970524376]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[696, 4], [698, 59]], "fn_var_ln": {"aad_token": [[697, 8], [697, 17]]}, "fn_var_occur": {"aad_token": [["aad_token", "int", "time", "time"], ["self", "hook", "_is_aad_token_valid", "aad_token"]]}, "name": "test_is_aad_token_valid_returns_false", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "_is_aad_token_valid", "aad_token"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHook.test_is_aad_token_valid_returns_false", "ret_exprs": [], "ret_type": "", "variables": {"aad_token": ""}, "variables_p": {"aad_token": [["int", 0.24628025213143678], ["str", 0.17539947311100107], ["dict", 0.17022030810839328], ["set", 0.10385088730004322], ["List[Dict[str, Any]]", 0.09595480657249994], ["Dict[str, int]", 0.08445311250847432]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[701, 4], [716, 49]], "fn_var_ln": {"jobs": [[705, 8], [705, 12]]}, "fn_var_occur": {"jobs": [["jobs", "self", "hook", "list_jobs"], ["jobs", "LIST_JOBS_RESPONSE"]]}, "name": "test_list_jobs_success_single_page", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["jobs", "self", "hook", "list_jobs"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_list_jobs_success_single_page", "ret_exprs": [], "ret_type": "", "variables": {"jobs": ""}, "variables_p": {"jobs": [["int", 0.8092924777843575], ["float", 0.10436578120510019]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[719, 4], [739, 53]], "fn_var_ln": {"first_call_args": [[730, 8], [730, 23]], "jobs": [[726, 8], [726, 12]], "second_call_args": [[734, 8], [734, 24]]}, "fn_var_occur": {"first_call_args": [["first_call_args", "mock_requests", "method_calls"], ["first_call_args", "list_jobs_endpoint", "HOST"], ["first_call_args", "False"]], "jobs": [["jobs", "self", "hook", "list_jobs"], ["len", "jobs"], ["jobs", "LIST_JOBS_RESPONSE"]], "second_call_args": [["second_call_args", "mock_requests", "method_calls"], ["second_call_args", "list_jobs_endpoint", "HOST"], ["second_call_args", "False"]]}, "name": "test_list_jobs_success_multiple_pages", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "side_effect", "create_successful_response_mock", "LIST_JOBS_RESPONSE", "True", "create_successful_response_mock", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "call_count"], ["first_call_args", "mock_requests", "method_calls"], ["second_call_args", "mock_requests", "method_calls"]], "self": [["jobs", "self", "hook", "list_jobs"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_list_jobs_success_multiple_pages", "ret_exprs": [], "ret_type": "", "variables": {"first_call_args": "", "jobs": "", "second_call_args": ""}, "variables_p": {"first_call_args": [["str", 0.29564586176073987], ["list", 0.10953040757254134], ["dict", 0.09902213452384868]], "jobs": [["int", 0.7776381965080615], ["str", 0.11371821007212096], ["Callable(itertools.chain.from_iterable)[[Named(iterable, Iterable[Any])], Iterator[Any]]", 0.10864359341981746]], "second_call_args": [["str", 0.29564586176073987], ["list", 0.10953040757254134], ["dict", 0.09902213452384868]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[742, 4], [757, 31]], "fn_var_ln": {"job_id": [[746, 8], [746, 14]]}, "fn_var_occur": {"job_id": [["job_id", "self", "hook", "find_job_id_by_name", "JOB_NAME"], ["job_id", "JOB_ID"]]}, "name": "test_get_job_id_by_name_success", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["job_id", "self", "hook", "find_job_id_by_name", "JOB_NAME"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_job_id_by_name_success", "ret_exprs": [], "ret_type": "", "variables": {"job_id": ""}, "variables_p": {"job_id": [["str", 0.8695271875457333], ["int", 0.13047281245426695]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[760, 4], [776, 29]], "fn_var_ln": {"job_id": [[765, 8], [765, 14]], "job_name": [[764, 8], [764, 16]]}, "fn_var_occur": {"job_id": [["job_id", "self", "hook", "find_job_id_by_name", "job_name"], ["job_id", "None"]], "job_name": [["job_id", "self", "hook", "find_job_id_by_name", "job_name"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "job_name", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "name": "test_get_job_id_by_name_not_found", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "job_name", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["job_id", "self", "hook", "find_job_id_by_name", "job_name"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "job_name", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_job_id_by_name_not_found", "ret_exprs": [], "ret_type": "", "variables": {"job_id": "", "job_name": ""}, "variables_p": {"job_id": [["str", 0.4688495425331626], ["int", 0.2544411464050489], ["Dict[str, int]", 0.09860158117085316], ["cmk.utils.type_defs.UserId", 0.0901128676181926], ["List[str]", 0.08799486227274275]], "job_name": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[779, 4], [797, 9]], "fn_var_ln": {"exception_message": [[786, 8], [786, 25]]}, "fn_var_occur": {"exception_message": [["exception_message", "JOB_NAME"], ["pytest", "raises", "AirflowException", "match", "exception_message"]]}, "name": "test_get_job_id_by_name_raise_exception_with_duplicates", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook", "find_job_id_by_name", "JOB_NAME"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_get_job_id_by_name_raise_exception_with_duplicates", "ret_exprs": [], "ret_type": "", "variables": {"exception_message": ""}, "variables_p": {"exception_message": [["Dict[Any, str]", 0.6200480090553013], ["dict", 0.1254837942149687], ["bool", 0.08898441760516601], ["Dict[str, str]", 0.0829098828136671], ["Dict[str, Dict[str, Any]]", 0.08257389631089697]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[800, 4], [814, 9]], "fn_var_ln": {"response": [[805, 8], [805, 16]], "status_code_mock": [[803, 8], [803, 24]]}, "fn_var_occur": {"response": [["response", "self", "hook", "test_connection"], ["response", "True"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "get", "return_value", "status_code", "status_code_mock"]]}, "name": "test_connection_success", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_SPARK_VERSIONS_RESPONSE"], ["type", "mock_requests", "get", "return_value", "status_code", "status_code_mock"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["response", "self", "hook", "test_connection"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_connection_success", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "status_code_mock": ""}, "variables_p": {"response": [["dict", 0.20712316665028635], ["requests.auth.HTTPDigestAuth", 0.12834361033774777], ["bytes", 0.11923070137157546], ["Dict[str, List[Any]]", 0.09070756285262409], ["str", 0.09026458714838728], ["List[str]", 0.08998690621480045]], "status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[817, 4], [831, 9]], "fn_var_ln": {"response": [[822, 8], [822, 16]], "status_code_mock": [[820, 8], [820, 24]]}, "fn_var_occur": {"response": [["response", "self", "hook", "test_connection"], ["response", "False"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "get", "return_value", "status_code", "status_code_mock"]]}, "name": "test_connection_failure", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "side_effect", "Exception"], ["type", "mock_requests", "get", "return_value", "status_code", "status_code_mock"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["response", "self", "hook", "test_connection"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHook.test_connection_failure", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "status_code_mock": ""}, "variables_p": {"response": [["dict", 0.8792645716992338]], "status_code_mock": []}}], "name": "TestDatabricksHook", "q_name": "TestDatabricksHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[834, 0], [860, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[840, 4], [846, 36]], "fn_var_ln": {"conn": [[841, 8], [841, 12]], "extra": [[842, 8], [842, 18]], "hook": [[846, 8], [846, 17]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "extra", "json", "dumps", "TOKEN", "HOST"]], "extra": [["conn", "extra", "json", "dumps", "TOKEN", "HOST"]], "hook": [["self", "hook", "DatabricksHook"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookToken.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": ""}, "variables_p": {"conn": [["int", 0.3191882796963262], ["str", 0.170815471927645], ["List[str]", 0.1198958051759844], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.0746088566678866]], "extra": [["Dict[str, str]", 0.6993698201978067], ["str", 0.1993167321556191], ["Dict[int, str]", 0.101313447646574]], "hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[849, 4], [860, 44]], "fn_var_ln": {"args": [[858, 8], [858, 12]], "data": [[854, 8], [854, 12]], "kwargs": [[859, 8], [859, 14]], "run_id": [[855, 8], [855, 14]], "status_code_mock": [[852, 8], [852, 24]]}, "fn_var_occur": {"args": [["args", "mock_requests", "post", "call_args"], ["kwargs", "args"]], "data": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "kwargs": [["kwargs", "args"], ["kwargs", "token", "TOKEN"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["args", "mock_requests", "post", "call_args"]], "self": [["run_id", "self", "hook", "submit_run", "data"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHookToken.test_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "data": "", "kwargs": "", "run_id": "", "status_code_mock": ""}, "variables_p": {"args": [["werkzeug.exceptions.InternalServerError", 0.11853625299802804], ["Dict[str, List[str]]", 0.11735416396645286], ["Dict[str, Union[Any, Any]]", 0.09739572544941472], ["Iterator[Any]", 0.09651135593404345], ["Dict[str, Optional[float]]", 0.09583155601245819], ["Dict[str, Literal[True]]", 0.09310465076745121]], "data": [["int", 0.5185721804473307]], "kwargs": [["Tuple[Any, Any]", 0.13126080301217521], ["list", 0.11650091122600581], ["int", 0.09820520712138044], ["Type[Dict[str, str]]", 0.09659907174271284], ["str", 0.08765588770561658], ["Dict[str, Optional[float]]", 0.08203552929628577], ["Union[MutableMapping[str, Any], MutableSequence[Any], bool, float, int, str]", 0.08005417482332604]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]], "status_code_mock": []}}], "name": "TestDatabricksHookToken", "q_name": "TestDatabricksHookToken", "variables": {}, "variables_p": {}}, {"cls_lc": [[863, 0], [891, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[869, 4], [877, 49]], "fn_var_ln": {"conn": [[870, 8], [870, 12]], "extra": [[874, 8], [874, 18]], "hook": [[877, 8], [877, 17]], "host": [[871, 8], [871, 17]], "login": [[872, 8], [872, 18]], "password": [[873, 8], [873, 21]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "host", "HOST"], ["conn", "login", "None"], ["conn", "password", "TOKEN"], ["conn", "extra", "None"]], "extra": [["conn", "extra", "None"]], "hook": [["self", "hook", "DatabricksHook", "retry_delay"]], "host": [["conn", "host", "HOST"]], "login": [["conn", "login", "None"]], "password": [["conn", "password", "TOKEN"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook", "retry_delay"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookTokenInPassword.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": "", "host": "", "login": "", "password": ""}, "variables_p": {"conn": [["str", 0.2670843582608841], ["int", 0.20948277018338562], ["Optional[Match[str]]", 0.11619228998414996], ["Pattern[str]", 0.06791010466321273], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.06777066583537998]], "extra": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]], "login": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "password": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[880, 4], [891, 44]], "fn_var_ln": {"args": [[889, 8], [889, 12]], "data": [[885, 8], [885, 12]], "kwargs": [[890, 8], [890, 14]], "run_id": [[886, 8], [886, 14]], "status_code_mock": [[883, 8], [883, 24]]}, "fn_var_occur": {"args": [["args", "mock_requests", "post", "call_args"], ["kwargs", "args"]], "data": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "kwargs": [["kwargs", "args"], ["kwargs", "token", "TOKEN"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "return_value", "json", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["args", "mock_requests", "post", "call_args"]], "self": [["run_id", "self", "hook", "submit_run", "data"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHookTokenInPassword.test_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "data": "", "kwargs": "", "run_id": "", "status_code_mock": ""}, "variables_p": {"args": [["werkzeug.exceptions.InternalServerError", 0.11853625299802804], ["Dict[str, List[str]]", 0.11735416396645286], ["Dict[str, Union[Any, Any]]", 0.09739572544941472], ["Iterator[Any]", 0.09651135593404345], ["Dict[str, Optional[float]]", 0.09583155601245819], ["Dict[str, Literal[True]]", 0.09310465076745121]], "data": [["int", 0.5185721804473307]], "kwargs": [["Tuple[Any, Any]", 0.13126080301217521], ["list", 0.11650091122600581], ["int", 0.09820520712138044], ["Type[Dict[str, str]]", 0.09659907174271284], ["str", 0.08765588770561658], ["Dict[str, Optional[float]]", 0.08203552929628577], ["Union[MutableMapping[str, Any], MutableSequence[Any], bool, float, int, str]", 0.08005417482332604]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]], "status_code_mock": []}}], "name": "TestDatabricksHookTokenInPassword", "q_name": "TestDatabricksHookTokenInPassword", "variables": {}, "variables_p": {}}, {"cls_lc": [[894, 0], [902, 36]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[896, 4], [902, 36]], "fn_var_ln": {"conn": [[897, 8], [897, 12]], "extra": [[898, 8], [898, 18]], "hook": [[902, 8], [902, 17]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "extra", "json", "dumps", "TOKEN"]], "extra": [["conn", "extra", "json", "dumps", "TOKEN"]], "hook": [["self", "hook", "DatabricksHook"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookTokenWhenNoHostIsProvidedInExtra.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": ""}, "variables_p": {"conn": [["int", 0.3838958551347096], ["List[str]", 0.14134658916699042], ["str", 0.11354562805908333], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.07274294102339614]], "extra": [["str", 0.399194360974111], ["List[str]", 0.1999103501629439], ["Dict[int, str]", 0.18201000028691794], ["BinaryIO", 0.11630222519241436], ["Dict[str, float]", 0.10258306338361278]], "hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}], "name": "TestDatabricksHookTokenWhenNoHostIsProvidedInExtra", "q_name": "TestDatabricksHookTokenWhenNoHostIsProvidedInExtra", "variables": {}, "variables_p": {}}, {"cls_lc": [[905, 0], [937, 64]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[906, 4], [910, 40]], "fn_var_ln": {"run_state": [[909, 12], [909, 21]], "terminal_states": [[907, 8], [907, 23]]}, "fn_var_occur": {"run_state": [["run_state", "RunState", "state"], ["run_state", "is_terminal"]], "terminal_states": []}, "name": "test_is_terminal_true", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRunState.test_is_terminal_true", "ret_exprs": [], "ret_type": "", "variables": {"run_state": "", "terminal_states": ""}, "variables_p": {"run_state": [["str", 0.20146902411612883], ["List[List[int]]", 0.1879998412085126], ["Dict[str, List[Any]]", 0.1217699589826029], ["app.models.User", 0.10318323364090908], ["int", 0.09559619806205505], ["radio.models.PlaybackState", 0.09434735517501111], ["List[str]", 0.09280029959527451]], "terminal_states": [["str", 0.39999999999999997], ["int", 0.19999999999999998], ["list", 0.09999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[912, 4], [916, 44]], "fn_var_ln": {"non_terminal_states": [[913, 8], [913, 27]], "run_state": [[915, 12], [915, 21]]}, "fn_var_occur": {"non_terminal_states": [], "run_state": [["run_state", "RunState", "state"], ["run_state", "is_terminal"]]}, "name": "test_is_terminal_false", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRunState.test_is_terminal_false", "ret_exprs": [], "ret_type": "", "variables": {"non_terminal_states": "", "run_state": ""}, "variables_p": {"non_terminal_states": [["str", 0.34215039614791937], ["Dict[str, Union[int, str]]", 0.16637664467454752], ["int", 0.153943369361779], ["raiden.utils.TokenAmount", 0.09245334675618576], ["List[str]", 0.08268902995069778], ["list", 0.0803237739401294]], "run_state": [["str", 0.20146902411612883], ["List[List[int]]", 0.1879998412085126], ["Dict[str, List[Any]]", 0.1217699589826029], ["app.models.User", 0.10318323364090908], ["int", 0.09559619806205505], ["radio.models.PlaybackState", 0.09434735517501111], ["List[str]", 0.09280029959527451]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[918, 4], [921, 40]], "fn_var_ln": {"run_state": [[919, 8], [919, 17]]}, "fn_var_occur": {"run_state": [["run_state", "RunState"], ["run_state", "is_terminal"]]}, "name": "test_is_terminal_with_nonexistent_life_cycle_state", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRunState.test_is_terminal_with_nonexistent_life_cycle_state", "ret_exprs": [], "ret_type": "", "variables": {"run_state": ""}, "variables_p": {"run_state": [["int", 0.30146885583416627], ["Dict[str, List[Any]]", 0.1094519005248859], ["app.models.User", 0.10837969079061316], ["str", 0.1083409533053817], ["List[str]", 0.09571388300029403], ["Dict[str, object]", 0.09279477966449319], ["List[List[int]]", 0.09067843264658458]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[923, 4], [925, 38]], "fn_var_ln": {"run_state": [[924, 8], [924, 17]]}, "fn_var_occur": {"run_state": [["run_state", "RunState"], ["run_state", "is_successful"]]}, "name": "test_is_successful", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRunState.test_is_successful", "ret_exprs": [], "ret_type": "", "variables": {"run_state": ""}, "variables_p": {"run_state": [["int", 0.30146885583416627], ["Dict[str, List[Any]]", 0.1094519005248859], ["app.models.User", 0.10837969079061316], ["str", 0.1083409533053817], ["List[str]", 0.09571388300029403], ["Dict[str, object]", 0.09279477966449319], ["List[List[int]]", 0.09067843264658458]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[927, 4], [932, 46]], "fn_var_ln": {"expected": [[929, 8], [929, 16]], "run_state": [[928, 8], [928, 17]]}, "fn_var_occur": {"expected": [["expected", "json", "dumps"], ["expected", "run_state", "to_json"]], "run_state": [["run_state", "RunState"], ["expected", "run_state", "to_json"]]}, "name": "test_to_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRunState.test_to_json", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "run_state": ""}, "variables_p": {"expected": [["int", 0.36910375565976805], ["Dict[str, Any]", 0.13020290748362012], ["float", 0.09721765903839036], ["Dict[str, int]", 0.09701736910767156], ["Dict[str, object]", 0.08312242728488207]], "run_state": [["int", 0.17548787908720637], ["idom.utils.Ref[None]", 0.13687563793272176], ["List[Dict[str, Any]]", 0.12848603751473664], ["Dict[str, Any]", 0.09678472839077747], ["List[Tuple[Any, str]]", 0.09266913599736391], ["List[None]", 0.08721836979247638]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[934, 4], [937, 64]], "fn_var_ln": {"expected": [[936, 8], [936, 16]], "state": [[935, 8], [935, 13]]}, "fn_var_occur": {"expected": [["expected", "RunState"], ["expected", "RunState", "from_json", "json", "dumps", "state"]], "state": [["expected", "RunState", "from_json", "json", "dumps", "state"]]}, "name": "test_from_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRunState.test_from_json", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "state": ""}, "variables_p": {"expected": [["dict", 0.19569861379779666], ["List[str]", 0.18691667046299312], ["Dict[str, str]", 0.10476754584786185], ["Dict[str, List[str]]", 0.09568791375120007], ["Dict[str, int]", 0.09306370836994023], ["Pattern[str]", 0.07906575006432222], ["str", 0.07851484652173066]], "state": [["str", 0.2320721643279004], ["Dict[str, str]", 0.2026763039068784], ["Dict[str, Dict[str, Any]]", 0.11985126290602946], ["dict", 0.10644793031706143], ["int", 0.08664792077622091], ["requests.models.Response", 0.08645130299322194], ["Dict[str, Union[Any, Any]]", 0.08364668729384771]]}}], "name": "TestRunState", "q_name": "TestRunState", "variables": {}, "variables_p": {}}, {"cls_lc": [[952, 0], [986, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[958, 4], [969, 65]], "fn_var_ln": {"conn": [[959, 8], [959, 12]], "extra": [[962, 8], [962, 18]], "hook": [[969, 8], [969, 17]], "login": [[960, 8], [960, 18]], "password": [[961, 8], [961, 21]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "login"], ["conn", "password"], ["conn", "extra", "json", "dumps", "HOST"]], "extra": [["conn", "extra", "json", "dumps", "HOST"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "login": [["conn", "login"]], "password": [["conn", "password"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAadToken.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": "", "login": "", "password": ""}, "variables_p": {"conn": [["int", 0.3805508854426301], ["str", 0.16812171239704932], ["List[str]", 0.09114147383152363], ["app.models.Tweet", 0.08648490726021223], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.07622709005364897], ["Dict[str, str]", 0.07080351382834443]], "extra": [["str", 0.6307721686270849], ["Dict[int, str]", 0.08855956180888457], ["Dict[str, float]", 0.08561467069369226]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "login": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[972, 4], [986, 44]], "fn_var_ln": {"args": [[984, 8], [984, 12]], "data": [[980, 8], [980, 12]], "kwargs": [[985, 8], [985, 14]], "run_id": [[981, 8], [981, 14]], "status_code_mock": [[978, 8], [978, 24]]}, "fn_var_occur": {"args": [["args", "mock_requests", "post", "call_args"], ["kwargs", "args"]], "data": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "kwargs": [["kwargs", "args"], ["kwargs", "token", "TOKEN"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "side_effect", "create_successful_response_mock", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE", "create_successful_response_mock"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["args", "mock_requests", "post", "call_args"]], "self": [["run_id", "self", "hook", "submit_run", "data"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHookAadToken.test_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "data": "", "kwargs": "", "run_id": "", "status_code_mock": ""}, "variables_p": {"args": [["werkzeug.exceptions.InternalServerError", 0.11853625299802804], ["Dict[str, List[str]]", 0.11735416396645286], ["Dict[str, Union[Any, Any]]", 0.09739572544941472], ["Iterator[Any]", 0.09651135593404345], ["Dict[str, Optional[float]]", 0.09583155601245819], ["Dict[str, Literal[True]]", 0.09310465076745121]], "data": [["int", 0.5185721804473307]], "kwargs": [["Tuple[Any, Any]", 0.13126080301217521], ["list", 0.11650091122600581], ["int", 0.09820520712138044], ["Type[Dict[str, str]]", 0.09659907174271284], ["str", 0.08765588770561658], ["Dict[str, Optional[float]]", 0.08203552929628577], ["Union[MutableMapping[str, Any], MutableSequence[Any], bool, float, int, str]", 0.08005417482332604]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]], "status_code_mock": []}}], "name": "TestDatabricksHookAadToken", "q_name": "TestDatabricksHookAadToken", "variables": {}, "variables_p": {}}, {"cls_lc": [[989, 0], [1033, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[996, 4], [1011, 65]], "fn_var_ln": {"ad_endpoint": [[998, 8], [998, 24]], "client_id": [[999, 8], [999, 22]], "conn": [[1000, 8], [1000, 12]], "extra": [[1003, 8], [1003, 18]], "hook": [[1011, 8], [1011, 17]], "login": [[1001, 8], [1001, 18]], "password": [[1002, 8], [1002, 21]], "tenant_id": [[997, 8], [997, 22]]}, "fn_var_occur": {"ad_endpoint": [["self", "ad_endpoint"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]], "client_id": [["self", "client_id"], ["conn", "login", "self", "client_id"]], "conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "login", "self", "client_id"], ["conn", "password"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]], "extra": [["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "login": [["conn", "login", "self", "client_id"]], "password": [["conn", "password"]], "tenant_id": [["self", "tenant_id"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "tenant_id"], ["self", "ad_endpoint"], ["self", "client_id"], ["conn", "login", "self", "client_id"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAadTokenOtherClouds.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"ad_endpoint": "", "client_id": "", "conn": "", "extra": "", "hook": "", "login": "", "password": "", "tenant_id": ""}, "variables_p": {"ad_endpoint": [["str", 0.4072910685274616], ["int", 0.1053011286092904]], "client_id": [["str", 0.5150940440416887], ["int", 0.3152586971133816], ["frozenset[str]", 0.08844802273258327], ["List[str]", 0.08119923611234649]], "conn": [["int", 0.2591637804973064], ["str", 0.11571010654663864], ["List[str]", 0.10369956181395035], ["app.models.Tweet", 0.0913907394518614], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.0913545622553783]], "extra": [["str", 0.6332318575910101], ["int", 0.24110133140400306], ["bool", 0.12566681100498703]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "login": [["str", 0.7480284174922549], ["requests.models.Response", 0.15635807066276072], ["int", 0.0956135118449845]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]], "tenant_id": [["str", 0.5852120857695574], ["List[str]", 0.10889515022058001], ["Dict[int, str]", 0.09782138781970427], ["int", 0.09177498652295528]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1014, 4], [1033, 44]], "fn_var_ln": {"ad_call_args": [[1025, 8], [1025, 20]], "args": [[1031, 8], [1031, 12]], "data": [[1022, 8], [1022, 12]], "kwargs": [[1032, 8], [1032, 14]], "run_id": [[1023, 8], [1023, 14]], "status_code_mock": [[1020, 8], [1020, 24]]}, "fn_var_occur": {"ad_call_args": [["ad_call_args", "mock_requests", "method_calls"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "self", "ad_endpoint", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "DEFAULT_DATABRICKS_SCOPE"]], "args": [["args", "mock_requests", "post", "call_args"], ["kwargs", "args"]], "data": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "kwargs": [["kwargs", "args"], ["kwargs", "token", "TOKEN"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "side_effect", "create_successful_response_mock", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE", "create_successful_response_mock"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["ad_call_args", "mock_requests", "method_calls"], ["args", "mock_requests", "post", "call_args"]], "self": [["run_id", "self", "hook", "submit_run", "data"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "self", "ad_endpoint", "self", "tenant_id"], ["ad_call_args", "self", "client_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHookAadTokenOtherClouds.test_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"ad_call_args": "", "args": "", "data": "", "kwargs": "", "run_id": "", "status_code_mock": ""}, "variables_p": {"ad_call_args": [["dict", 0.3523527452508125], ["list", 0.15982666741195156]], "args": [["werkzeug.exceptions.InternalServerError", 0.11853625299802804], ["Dict[str, List[str]]", 0.11735416396645286], ["Dict[str, Union[Any, Any]]", 0.09739572544941472], ["Iterator[Any]", 0.09651135593404345], ["Dict[str, Optional[float]]", 0.09583155601245819], ["Dict[str, Literal[True]]", 0.09310465076745121]], "data": [["int", 0.5185721804473307]], "kwargs": [["Tuple[Any, Any]", 0.13126080301217521], ["list", 0.11650091122600581], ["int", 0.09820520712138044], ["Type[Dict[str, str]]", 0.09659907174271284], ["str", 0.08765588770561658], ["Dict[str, Optional[float]]", 0.08203552929628577], ["Union[MutableMapping[str, Any], MutableSequence[Any], bool, float, int, str]", 0.08005417482332604]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]], "status_code_mock": []}}], "name": "TestDatabricksHookAadTokenOtherClouds", "q_name": "TestDatabricksHookAadTokenOtherClouds", "variables": {}, "variables_p": {}}, {"cls_lc": [[1036, 0], [1086, 83]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1042, 4], [1056, 65]], "fn_var_ln": {"client_id": [[1045, 8], [1045, 22]], "conn": [[1043, 8], [1043, 12]], "extra": [[1049, 8], [1049, 18]], "hook": [[1056, 8], [1056, 17]], "host": [[1048, 8], [1048, 17]], "login": [[1046, 8], [1046, 18]], "password": [[1047, 8], [1047, 21]], "tenant_id": [[1044, 8], [1044, 22]]}, "fn_var_occur": {"client_id": [["self", "client_id"], ["conn", "login", "self", "client_id"]], "conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "login", "self", "client_id"], ["conn", "password"], ["conn", "host", "HOST"], ["conn", "extra", "json", "dumps"]], "extra": [["conn", "extra", "json", "dumps"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "host": [["conn", "host", "HOST"]], "login": [["conn", "login", "self", "client_id"]], "password": [["conn", "password"]], "tenant_id": [["self", "tenant_id"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "tenant_id"], ["self", "client_id"], ["conn", "login", "self", "client_id"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAadTokenSpOutside.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"client_id": "", "conn": "", "extra": "", "hook": "", "host": "", "login": "", "password": "", "tenant_id": ""}, "variables_p": {"client_id": [["str", 0.5150940440416887], ["int", 0.3152586971133816], ["frozenset[str]", 0.08844802273258327], ["List[str]", 0.08119923611234649]], "conn": [["int", 0.3802209916917029], ["str", 0.10460438252378185], ["List[str]", 0.09035533206875981], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.08032343664254453]], "extra": [["str", 0.9999999994459298], ["Dict[str, Union[Any, Any, Any, Any]]", 5.540700403238765e-10]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]], "login": [["str", 0.7480284174922549], ["requests.models.Response", 0.15635807066276072], ["int", 0.0956135118449845]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]], "tenant_id": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1059, 4], [1086, 83]], "fn_var_ln": {"ad_call_args": [[1076, 8], [1076, 20]], "args": [[1082, 8], [1082, 12]], "data": [[1068, 8], [1068, 12]], "kwargs": [[1083, 8], [1083, 14]], "run_id": [[1069, 8], [1069, 14]], "status_code_mock": [[1066, 8], [1066, 24]]}, "fn_var_occur": {"ad_call_args": [["ad_call_args", "mock_requests", "method_calls"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "AZURE_MANAGEMENT_ENDPOINT"], ["ad_call_args", "mock_requests", "method_calls"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "DEFAULT_DATABRICKS_SCOPE"]], "args": [["args", "mock_requests", "post", "call_args"], ["kwargs", "args"]], "data": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "kwargs": [["kwargs", "args"], ["kwargs", "token", "TOKEN"], ["kwargs", "TOKEN"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "post", "side_effect", "create_successful_response_mock", "create_aad_token_for_resource", "AZURE_MANAGEMENT_ENDPOINT", "create_successful_response_mock", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE", "create_successful_response_mock"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["ad_call_args", "mock_requests", "method_calls"], ["ad_call_args", "mock_requests", "method_calls"], ["args", "mock_requests", "post", "call_args"]], "self": [["run_id", "self", "hook", "submit_run", "data"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHookAadTokenSpOutside.test_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"ad_call_args": "", "args": "", "data": "", "kwargs": "", "run_id": "", "status_code_mock": ""}, "variables_p": {"ad_call_args": [["dict", 0.18984438762479258], ["Dict[str, Union[Any, Any, Any]]", 0.18041537024266416], ["list", 0.10716005503895357], ["Dict[str, Union[Any, bool, str]]", 0.09020768512133208]], "args": [["werkzeug.exceptions.InternalServerError", 0.11853625299802804], ["Dict[str, List[str]]", 0.11735416396645286], ["Dict[str, Union[Any, Any]]", 0.09739572544941472], ["Iterator[Any]", 0.09651135593404345], ["Dict[str, Optional[float]]", 0.09583155601245819], ["Dict[str, Literal[True]]", 0.09310465076745121]], "data": [["int", 0.5185721804473307]], "kwargs": [["Tuple[Any, Any]", 0.1398573600574468], ["bool", 0.12411236659148644], ["tuple", 0.10515270219444729], ["str", 0.10071729578488495], ["list", 0.09403616255944103], ["List[float]", 0.09182876682433506], ["List[Iterator[Any]]", 0.09149182163038432], ["int", 0.08193353993816598]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]], "status_code_mock": []}}], "name": "TestDatabricksHookAadTokenSpOutside", "q_name": "TestDatabricksHookAadTokenSpOutside", "variables": {}, "variables_p": {}}, {"cls_lc": [[1089, 0], [1129, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1095, 4], [1104, 65]], "fn_var_ln": {"conn": [[1096, 8], [1096, 12]], "extra": [[1098, 8], [1098, 18]], "hook": [[1104, 8], [1104, 17]], "host": [[1097, 8], [1097, 17]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "host", "HOST"], ["conn", "extra", "json", "dumps", "True"]], "extra": [["conn", "extra", "json", "dumps", "True"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "host": [["conn", "host", "HOST"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAadTokenManagedIdentity.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": "", "host": ""}, "variables_p": {"conn": [["int", 0.32003969707686236], ["str", 0.20691405261523216], ["List[str]", 0.10778708087609706], ["Pattern[str]", 0.0698664042590995]], "extra": [["str", 0.2680715701648937], ["List[Dict[str, Any]]", 0.20229689380792773], ["List[str]", 0.16768426427576735], ["Tuple[Type[str], Type[bytes]]", 0.10165603854160975], ["int", 0.09935312251928366], ["List[Dict[str, str]]", 0.08081325652600639], ["dict", 0.08012485416451147]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1107, 4], [1129, 44]], "fn_var_ln": {"ad_call_args": [[1121, 8], [1121, 20]], "args": [[1127, 8], [1127, 12]], "data": [[1118, 8], [1118, 12]], "kwargs": [[1128, 8], [1128, 14]], "run_id": [[1119, 8], [1119, 14]], "status_code_mock": [[1116, 8], [1116, 24]]}, "fn_var_occur": {"ad_call_args": [["ad_call_args", "mock_requests", "method_calls"], ["ad_call_args", "AZURE_METADATA_SERVICE_INSTANCE_URL"]], "args": [["args", "mock_requests", "post", "call_args"], ["kwargs", "args"]], "data": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["run_id", "self", "hook", "submit_run", "data"]], "kwargs": [["kwargs", "args"], ["kwargs", "token", "TOKEN"]], "run_id": [["run_id", "self", "hook", "submit_run", "data"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"]]}, "name": "test_submit_run", "params": {"mock_requests": "", "self": ""}, "params_descr": {"mock_requests": "", "self": ""}, "params_occur": {"mock_requests": [["mock_requests", "codes", "ok"], ["mock_requests", "get", "side_effect", "create_successful_response_mock", "create_successful_response_mock", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE"], ["mock_requests", "post", "side_effect", "create_successful_response_mock"], ["type", "mock_requests", "post", "return_value", "status_code", "status_code_mock"], ["ad_call_args", "mock_requests", "method_calls"], ["args", "mock_requests", "post", "call_args"]], "self": [["run_id", "self", "hook", "submit_run", "data"]]}, "params_p": {"args": [], "kwargs": [], "mock_requests": [], "self": []}, "q_name": "TestDatabricksHookAadTokenManagedIdentity.test_submit_run", "ret_exprs": [], "ret_type": "", "variables": {"ad_call_args": "", "args": "", "data": "", "kwargs": "", "run_id": "", "status_code_mock": ""}, "variables_p": {"ad_call_args": [["str", 0.2903535341169328], ["dict", 0.22085525242962106], ["Dict[str, Union[Any, Any, Any]]", 0.18596174106214727], ["List[int]", 0.11361281212409761], ["list", 0.0933179643437762]], "args": [["werkzeug.exceptions.InternalServerError", 0.11853625299802804], ["Dict[str, List[str]]", 0.11735416396645286], ["Dict[str, Union[Any, Any]]", 0.09739572544941472], ["Iterator[Any]", 0.09651135593404345], ["Dict[str, Optional[float]]", 0.09583155601245819], ["Dict[str, Literal[True]]", 0.09310465076745121]], "data": [["int", 0.5185721804473307]], "kwargs": [["Tuple[Any, Any]", 0.13126080301217521], ["list", 0.11650091122600581], ["int", 0.09820520712138044], ["Type[Dict[str, str]]", 0.09659907174271284], ["str", 0.08765588770561658], ["Dict[str, Optional[float]]", 0.08203552929628577], ["Union[MutableMapping[str, Any], MutableSequence[Any], bool, float, int, str]", 0.08005417482332604]], "run_id": [["Dict[int, str]", 0.32097388648896574], ["str", 0.18451980044489819], ["list", 0.09226693412459222], ["int", 0.08627397355020655], ["Type[str]", 0.08351337289557038]], "status_code_mock": []}}], "name": "TestDatabricksHookAadTokenManagedIdentity", "q_name": "TestDatabricksHookAadTokenManagedIdentity", "variables": {}, "variables_p": {}}, {"cls_lc": [[1132, 0], [1249, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1138, 4], [1146, 65]], "fn_var_ln": {"conn": [[1139, 8], [1139, 12]], "extra": [[1143, 8], [1143, 18]], "hook": [[1146, 8], [1146, 17]], "host": [[1140, 8], [1140, 17]], "login": [[1141, 8], [1141, 18]], "password": [[1142, 8], [1142, 21]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "host", "HOST"], ["conn", "login", "LOGIN"], ["conn", "password", "PASSWORD"], ["conn", "extra", "None"]], "extra": [["conn", "extra", "None"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "host": [["conn", "host", "HOST"]], "login": [["conn", "login", "LOGIN"]], "password": [["conn", "password", "PASSWORD"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAsyncMethods.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": "", "host": "", "login": "", "password": ""}, "variables_p": {"conn": [["str", 0.2656670043053492], ["List[str]", 0.08390391604919986], ["Pattern[str]", 0.07795662141772824]], "extra": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]], "login": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1149, 4], [1152, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_init_async_session", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook"], ["isinstance", "self", "hook", "_session", "aiohttp", "ClientSession"], ["self", "hook", "_session", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_init_async_session", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1156, 4], [1162, 69]], "fn_var_ln": {"side_effect": [[1157, 8], [1157, 28]]}, "fn_var_occur": {"side_effect": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status"]]}, "name": "test_do_api_call_retries_with_retryable_error", "params": {"mock_get": "", "self": ""}, "params_descr": {"mock_get": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status"]], "self": [["mock", "patch", "object", "self", "hook", "log", "mock_errors"], ["self", "hook"], ["self", "hook", "_a_do_api_call", "GET_RUN_ENDPOINT"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [["str", 0.22236807190971114], ["Optional[Tuple[float, float]]", 0.09756847814848103]], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_do_api_call_retries_with_retryable_error", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["int", 0.20018482746172886], ["Optional[List[str]]", 0.1409284661292079], ["viewer.models.Gallery", 0.10187224296002885], ["list", 0.09277026635776338], ["str", 0.08162041415708651], ["Dict[str, str]", 0.08093259973281876]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1166, 4], [1172, 47]], "fn_var_ln": {"side_effect": [[1167, 8], [1167, 28]]}, "fn_var_occur": {"side_effect": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status"]]}, "name": "test_do_api_call_does_not_retry_with_non_retryable_error", "params": {"mock_get": "", "self": ""}, "params_descr": {"mock_get": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status"]], "self": [["mock", "patch", "object", "self", "hook", "log", "mock_errors"], ["self", "hook"], ["self", "hook", "_a_do_api_call", "GET_RUN_ENDPOINT"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [["str", 0.22052027471512065], ["aiohttp.test_utils.TestClient", 0.10451530411542029], ["Optional[Tuple[float, float]]", 0.08387802363837761]], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_do_api_call_does_not_retry_with_non_retryable_error", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["int", 0.20018482746172886], ["Optional[List[str]]", 0.1409284661292079], ["viewer.models.Gallery", 0.10187224296002885], ["list", 0.09277026635776338], ["str", 0.08162041415708651], ["Dict[str, str]", 0.08093259973281876]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1176, 4], [1185, 50]], "fn_var_ln": {"response": [[1183, 16], [1183, 24]], "side_effect": [[1177, 8], [1177, 28]]}, "fn_var_occur": {"response": [["response", "self", "hook", "_a_do_api_call", "GET_RUN_ENDPOINT"]], "side_effect": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status", "create_valid_response_mock"]]}, "name": "test_do_api_call_succeeds_after_retrying", "params": {"mock_get": "", "self": ""}, "params_descr": {"mock_get": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status", "create_valid_response_mock"]], "self": [["mock", "patch", "object", "self", "hook", "log", "mock_errors"], ["self", "hook"], ["response", "self", "hook", "_a_do_api_call", "GET_RUN_ENDPOINT"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [["aiohttp.test_utils.TestServer", 0.11898842294779076]], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_do_api_call_succeeds_after_retrying", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "side_effect": ""}, "variables_p": {"response": [["int", 0.2890143496437299], ["metaswitch_tinder.database.models.Request", 0.18853596062758424], ["Dict[str, str]", 0.13391839176732936], ["Dict[str, Any]", 0.1119229715696068], ["requests.sessions.Session", 0.09752682642204798]], "side_effect": [["int", 0.4570758244131415], ["str", 0.15685067931962912], ["raiden.utils.PaymentID", 0.11151728222549033], ["Type[str]", 0.0803143023865251]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1189, 4], [1197, 69]], "fn_var_ln": {"hook": [[1190, 8], [1190, 17]], "side_effect": [[1192, 8], [1192, 28]]}, "fn_var_occur": {"hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["mock", "patch", "object", "self", "hook", "log", "mock_errors"], ["self", "hook"], ["self", "hook", "_a_do_api_call", "GET_RUN_ENDPOINT"]], "side_effect": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status"]]}, "name": "test_do_api_call_waits_between_retries", "params": {"mock_get": "", "self": ""}, "params_descr": {"mock_get": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "side_effect", "aiohttp", "ClientResponseError", "None", "None", "status"]], "self": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["mock", "patch", "object", "self", "hook", "log", "mock_errors"], ["self", "hook"], ["self", "hook", "_a_do_api_call", "GET_RUN_ENDPOINT"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [["str", 0.22043704981414924], ["Optional[Tuple[float, float]]", 0.09539085996602444]], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_do_api_call_waits_between_retries", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "side_effect": ""}, "variables_p": {"hook": [["app.providers.Provider", 0.09227697291379226]], "side_effect": [["int", 0.20018482746172886], ["Optional[List[str]]", 0.1409284661292079], ["viewer.models.Gallery", 0.10187224296002885], ["list", 0.09277026635776338], ["str", 0.08162041415708651], ["Dict[str, str]", 0.08093259973281876]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1201, 4], [1216, 9]], "fn_var_ln": {"data": [[1205, 8], [1205, 12]], "patched_cluster_name": [[1207, 12], [1207, 32]]}, "fn_var_occur": {"data": [["patched_cluster_name", "self", "hook", "_a_do_api_call", "data"]], "patched_cluster_name": [["patched_cluster_name", "self", "hook", "_a_do_api_call", "data"]]}, "name": "test_do_api_call_patch", "params": {"mock_patch": "", "self": ""}, "params_descr": {"mock_patch": "", "self": ""}, "params_occur": {"mock_patch": [["mock_patch", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value"], ["mock_patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook"], ["patched_cluster_name", "self", "hook", "_a_do_api_call", "data"], ["mock_patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_patch": [], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_do_api_call_patch", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "patched_cluster_name": ""}, "variables_p": {"data": [["Dict[str, str]", 0.9999999999999999]], "patched_cluster_name": [["str", 0.6835800644341318], ["List[str]", 0.13646970969223665], ["int", 0.09004281581910555], ["Dict[str, str]", 0.089907410054526]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1220, 4], [1232, 9]], "fn_var_ln": {"run_page_url": [[1223, 12], [1223, 24]]}, "fn_var_occur": {"run_page_url": [["run_page_url", "self", "hook", "a_get_run_page_url", "RUN_ID"], ["run_page_url", "RUN_PAGE_URL"]]}, "name": "test_get_run_page_url", "params": {"mock_get": "", "self": ""}, "params_descr": {"mock_get": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook"], ["run_page_url", "self", "hook", "a_get_run_page_url", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_get_run_page_url", "ret_exprs": [], "ret_type": "", "variables": {"run_page_url": ""}, "variables_p": {"run_page_url": [["dict", 0.1916403376545361], ["Pattern[str]", 0.1292523753020546], ["Dict[str, Any]", 0.11315408041681191], ["str", 0.09959961714571335], ["list", 0.09946884642724019], ["KeysView[str]", 0.09476894837226373], ["Dict[str, Union[Any, int]]", 0.09107850606569147], ["kippo.tasks.models.KippoTask", 0.0896714368626913]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1236, 4], [1249, 9]], "fn_var_ln": {"run_state": [[1240, 12], [1240, 21]]}, "fn_var_occur": {"run_state": [["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]]}, "name": "test_get_run_state", "params": {"mock_get": "", "self": ""}, "params_descr": {"mock_get": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "self": [["self", "hook"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [], "self": []}, "q_name": "TestDatabricksHookAsyncMethods.test_get_run_state", "ret_exprs": [], "ret_type": "", "variables": {"run_state": ""}, "variables_p": {"run_state": [["dict", 0.10811331566378231], ["examples.cloud.session.User", 0.09653190751114753], ["int", 0.09373202734143206], ["Dict[str, object]", 0.08612768736388018], ["Dict[str, Any]", 0.08132752678853043], ["app.models.user.User", 0.0802290062936133]]}}], "name": "TestDatabricksHookAsyncMethods", "q_name": "TestDatabricksHookAsyncMethods", "variables": {}, "variables_p": {}}, {"cls_lc": [[1252, 0], [1291, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1259, 4], [1270, 65]], "fn_var_ln": {"conn": [[1260, 8], [1260, 12]], "extra": [[1263, 8], [1263, 18]], "hook": [[1270, 8], [1270, 17]], "login": [[1261, 8], [1261, 18]], "password": [[1262, 8], [1262, 21]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "login"], ["conn", "password"], ["conn", "extra", "json", "dumps", "HOST"]], "extra": [["conn", "extra", "json", "dumps", "HOST"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "login": [["conn", "login"]], "password": [["conn", "password"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAsyncAadToken.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": "", "login": "", "password": ""}, "variables_p": {"conn": [["int", 0.3805508854426301], ["str", 0.16812171239704932], ["List[str]", 0.09114147383152363], ["app.models.Tweet", 0.08648490726021223], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.07622709005364897], ["Dict[str, str]", 0.07080351382834443]], "extra": [["str", 0.6307721686270849], ["Dict[int, str]", 0.08855956180888457], ["Dict[str, float]", 0.08561467069369226]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "login": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1275, 4], [1291, 9]], "fn_var_ln": {"run_state": [[1282, 12], [1282, 21]]}, "fn_var_occur": {"run_state": [["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]]}, "name": "test_get_run_state", "params": {"mock_get": "", "mock_post": "", "self": ""}, "params_descr": {"mock_get": "", "mock_post": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "mock_post": [["mock_post", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE"]], "self": [["self", "hook"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [], "mock_post": [["mock.MagicMock", 0.1827709992879095]], "self": []}, "q_name": "TestDatabricksHookAsyncAadToken.test_get_run_state", "ret_exprs": [], "ret_type": "", "variables": {"run_state": ""}, "variables_p": {"run_state": [["dict", 0.10811331566378231], ["examples.cloud.session.User", 0.09653190751114753], ["int", 0.09373202734143206], ["Dict[str, object]", 0.08612768736388018], ["Dict[str, Any]", 0.08132752678853043], ["app.models.user.User", 0.0802290062936133]]}}], "name": "TestDatabricksHookAsyncAadToken", "q_name": "TestDatabricksHookAsyncAadToken", "variables": {}, "variables_p": {}}, {"cls_lc": [[1294, 0], [1343, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1301, 4], [1316, 65]], "fn_var_ln": {"ad_endpoint": [[1303, 8], [1303, 24]], "client_id": [[1304, 8], [1304, 22]], "conn": [[1305, 8], [1305, 12]], "extra": [[1308, 8], [1308, 18]], "hook": [[1316, 8], [1316, 17]], "login": [[1306, 8], [1306, 18]], "password": [[1307, 8], [1307, 21]], "tenant_id": [[1302, 8], [1302, 22]]}, "fn_var_occur": {"ad_endpoint": [["self", "ad_endpoint"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]], "client_id": [["self", "client_id"], ["conn", "login", "self", "client_id"]], "conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "login", "self", "client_id"], ["conn", "password"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]], "extra": [["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "login": [["conn", "login", "self", "client_id"]], "password": [["conn", "password"]], "tenant_id": [["self", "tenant_id"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "tenant_id"], ["self", "ad_endpoint"], ["self", "client_id"], ["conn", "login", "self", "client_id"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAsyncAadTokenOtherClouds.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"ad_endpoint": "", "client_id": "", "conn": "", "extra": "", "hook": "", "login": "", "password": "", "tenant_id": ""}, "variables_p": {"ad_endpoint": [["str", 0.4072910685274616], ["int", 0.1053011286092904]], "client_id": [["str", 0.5150940440416887], ["int", 0.3152586971133816], ["frozenset[str]", 0.08844802273258327], ["List[str]", 0.08119923611234649]], "conn": [["int", 0.2591637804973064], ["str", 0.11571010654663864], ["List[str]", 0.10369956181395035], ["app.models.Tweet", 0.0913907394518614], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.0913545622553783]], "extra": [["str", 0.6332318575910101], ["int", 0.24110133140400306], ["bool", 0.12566681100498703]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "login": [["str", 0.7480284174922549], ["requests.models.Response", 0.15635807066276072], ["int", 0.0956135118449845]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]], "tenant_id": [["str", 0.5852120857695574], ["List[str]", 0.10889515022058001], ["Dict[int, str]", 0.09782138781970427], ["int", 0.09177498652295528]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1321, 4], [1343, 9]], "fn_var_ln": {"ad_call_args": [[1332, 8], [1332, 20]], "run_state": [[1328, 12], [1328, 21]]}, "fn_var_occur": {"ad_call_args": [["ad_call_args", "mock_post", "call_args_list"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "self", "ad_endpoint", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "DEFAULT_DATABRICKS_SCOPE"]], "run_state": [["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]]}, "name": "test_get_run_state", "params": {"mock_get": "", "mock_post": "", "self": ""}, "params_descr": {"mock_get": "", "mock_post": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "mock_post": [["mock_post", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE"], ["ad_call_args", "mock_post", "call_args_list"]], "self": [["self", "hook"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "self", "ad_endpoint", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [], "mock_post": [["mock.MagicMock", 0.22090691645635413]], "self": []}, "q_name": "TestDatabricksHookAsyncAadTokenOtherClouds.test_get_run_state", "ret_exprs": [], "ret_type": "", "variables": {"ad_call_args": "", "run_state": ""}, "variables_p": {"ad_call_args": [["list", 0.5082493102765211], ["Dict[str, Union[None, int, str]]", 0.1042130682775084], ["str", 0.10186110085222136], ["List[str]", 0.10114961428735711], ["Tuple[str, str, str, str, str]", 0.0981552620881268], ["Optional[str]", 0.0863716442182653]], "run_state": [["dict", 0.10811331566378231], ["examples.cloud.session.User", 0.09653190751114753], ["int", 0.09373202734143206], ["Dict[str, object]", 0.08612768736388018], ["Dict[str, Any]", 0.08132752678853043], ["app.models.user.User", 0.0802290062936133]]}}], "name": "TestDatabricksHookAsyncAadTokenOtherClouds", "q_name": "TestDatabricksHookAsyncAadTokenOtherClouds", "variables": {}, "variables_p": {}}, {"cls_lc": [[1346, 0], [1409, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1352, 4], [1366, 65]], "fn_var_ln": {"client_id": [[1354, 8], [1354, 22]], "conn": [[1355, 8], [1355, 12]], "extra": [[1359, 8], [1359, 18]], "hook": [[1366, 8], [1366, 17]], "host": [[1358, 8], [1358, 17]], "login": [[1356, 8], [1356, 18]], "password": [[1357, 8], [1357, 21]], "tenant_id": [[1353, 8], [1353, 22]]}, "fn_var_occur": {"client_id": [["self", "client_id"], ["conn", "login", "self", "client_id"]], "conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "login", "self", "client_id"], ["conn", "password"], ["conn", "host", "HOST"], ["conn", "extra", "json", "dumps", "self", "tenant_id"]], "extra": [["conn", "extra", "json", "dumps", "self", "tenant_id"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "host": [["conn", "host", "HOST"]], "login": [["conn", "login", "self", "client_id"]], "password": [["conn", "password"]], "tenant_id": [["self", "tenant_id"], ["conn", "extra", "json", "dumps", "self", "tenant_id"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "tenant_id"], ["self", "client_id"], ["conn", "login", "self", "client_id"], ["conn", "extra", "json", "dumps", "self", "tenant_id"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18608019186001473], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.09277817058845546], ["sqlalchemy.orm.session.Session.Transaction", 0.09108165956824699]]}, "q_name": "TestDatabricksHookAsyncAadTokenSpOutside.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"client_id": "", "conn": "", "extra": "", "hook": "", "host": "", "login": "", "password": "", "tenant_id": ""}, "variables_p": {"client_id": [["str", 0.5150940440416887], ["int", 0.3152586971133816], ["frozenset[str]", 0.08844802273258327], ["List[str]", 0.08119923611234649]], "conn": [["int", 0.3802209916917029], ["str", 0.10460438252378185], ["List[str]", 0.09035533206875981], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.08032343664254453]], "extra": [["str", 0.46681921354803757], ["Dict[str, str]", 0.25988693347529435], ["int", 0.09987454144475447], ["list", 0.08744492624332634], ["Dict[str, List[str]]", 0.0859743852885873]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]], "login": [["str", 0.7480284174922549], ["requests.models.Response", 0.15635807066276072], ["int", 0.0956135118449845]], "password": [["str", 0.6666666665981479], ["Optional[str]", 0.3333333333077041], ["List[str]", 2.0236463666246685e-11], ["Type[set]", 2.0236463666246685e-11], ["float", 1.9154481344935525e-11], ["bool", 1.7260305223833547e-11]], "tenant_id": [["str", 0.6194529166252227], ["set", 0.10634810859677572], ["List[str]", 0.0844182854025577]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1371, 4], [1409, 9]], "fn_var_ln": {"ad_call_args": [[1392, 8], [1392, 20]], "run_state": [[1381, 12], [1381, 21]]}, "fn_var_occur": {"ad_call_args": [["ad_call_args", "mock_post", "call_args_list"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "AZURE_MANAGEMENT_ENDPOINT"], ["ad_call_args", "mock_post", "call_args_list"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "DEFAULT_DATABRICKS_SCOPE"]], "run_state": [["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]]}, "name": "test_get_run_state", "params": {"mock_get": "", "mock_post": "", "self": ""}, "params_descr": {"mock_get": "", "mock_post": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "TOKEN", "timeout", "self", "hook", "timeout_seconds"]], "mock_post": [["mock_post", "return_value", "__aenter__", "return_value", "json", "side_effect", "AsyncMock", "side_effect", "create_aad_token_for_resource", "AZURE_MANAGEMENT_ENDPOINT", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE"], ["ad_call_args", "mock_post", "call_args_list"], ["ad_call_args", "mock_post", "call_args_list"]], "self": [["self", "hook"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["ad_call_args", "AZURE_TOKEN_SERVICE_URL", "format", "AZURE_DEFAULT_AD_ENDPOINT", "self", "tenant_id"], ["ad_call_args", "self", "client_id"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "TOKEN", "timeout", "self", "hook", "timeout_seconds"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [], "mock_post": [], "self": []}, "q_name": "TestDatabricksHookAsyncAadTokenSpOutside.test_get_run_state", "ret_exprs": [], "ret_type": "", "variables": {"ad_call_args": "", "run_state": ""}, "variables_p": {"ad_call_args": [["list", 0.4993278393356944], ["List[str]", 0.10906358051748805], ["Optional[str]", 0.10030059155181884], ["Dict[str, Union[None, int, str]]", 0.09940086263392552], ["str", 0.0963855621914977], ["Tuple[str, str, str, str, str]", 0.09552156376957557]], "run_state": [["dict", 0.10811331566378231], ["examples.cloud.session.User", 0.09653190751114753], ["int", 0.09373202734143206], ["Dict[str, object]", 0.08612768736388018], ["Dict[str, Any]", 0.08132752678853043], ["app.models.user.User", 0.0802290062936133]]}}], "name": "TestDatabricksHookAsyncAadTokenSpOutside", "q_name": "TestDatabricksHookAsyncAadTokenSpOutside", "variables": {}, "variables_p": {}}, {"cls_lc": [[1412, 0], [1450, 63]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1419, 4], [1429, 65]], "fn_var_ln": {"conn": [[1420, 8], [1420, 12]], "extra": [[1422, 8], [1422, 18]], "hook": [[1429, 8], [1429, 17]], "host": [[1421, 8], [1421, 17]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "host", "HOST"], ["conn", "extra", "json", "dumps", "True"]], "extra": [["conn", "extra", "json", "dumps", "True"]], "hook": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "host": [["conn", "host", "HOST"]]}, "name": "setup_method", "params": {"method": "", "self": "", "session": ""}, "params_descr": {"method": "", "self": "", "session": ""}, "params_occur": {"method": [], "self": [["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "method": [["str", 0.7274395059248243], ["int", 0.08464053740227286]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.18710166303013093], ["Union[sqlalchemy.orm.session.Session, abilian.core.models.blob.Blob]", 0.093347755860775], ["sqlalchemy.orm.session.Session.Transaction", 0.090835881415895]]}, "q_name": "TestDatabricksHookAsyncAadTokenManagedIdentity.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "hook": "", "host": ""}, "variables_p": {"conn": [["int", 0.32003969707686236], ["str", 0.20691405261523216], ["List[str]", 0.10778708087609706], ["Pattern[str]", 0.0698664042590995]], "extra": [["str", 0.2680715701648937], ["List[Dict[str, Any]]", 0.20229689380792773], ["List[str]", 0.16768426427576735], ["Tuple[Type[str], Type[bytes]]", 0.10165603854160975], ["int", 0.09935312251928366], ["List[Dict[str, str]]", 0.08081325652600639], ["dict", 0.08012485416451147]], "hook": [["int", 0.39207952512789346], ["float", 0.10867096849275859], ["list", 0.09196626397463292]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1433, 4], [1450, 63]], "fn_var_ln": {"ad_call_args": [[1447, 8], [1447, 20]], "run_state": [[1443, 12], [1443, 21]]}, "fn_var_occur": {"ad_call_args": [["ad_call_args", "mock_get", "call_args_list"], ["ad_call_args", "AZURE_METADATA_SERVICE_INSTANCE_URL"]], "run_state": [["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]]}, "name": "test_get_run_state", "params": {"mock_get": "", "self": ""}, "params_descr": {"mock_get": "", "self": ""}, "params_occur": {"mock_get": [["mock_get", "return_value", "__aenter__", "return_value", "json", "side_effect", "AsyncMock", "side_effect", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE", "GET_RUN_RESPONSE"], ["ad_call_args", "mock_get", "call_args_list"]], "self": [["self", "hook"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"]]}, "params_p": {"args": [], "kwargs": [], "mock_get": [], "self": []}, "q_name": "TestDatabricksHookAsyncAadTokenManagedIdentity.test_get_run_state", "ret_exprs": [], "ret_type": "", "variables": {"ad_call_args": "", "run_state": ""}, "variables_p": {"ad_call_args": [["list", 0.5715325796157951], ["Dict[str, Any]", 0.09669960376840253]], "run_state": [["dict", 0.10811331566378231], ["examples.cloud.session.User", 0.09653190751114753], ["int", 0.09373202734143206], ["Dict[str, object]", 0.08612768736388018], ["Dict[str, Any]", 0.08132752678853043], ["app.models.user.User", 0.0802290062936133]]}}], "name": "TestDatabricksHookAsyncAadTokenManagedIdentity", "q_name": "TestDatabricksHookAsyncAadTokenManagedIdentity", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Utility function to generate the run now endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[105, 0], [109, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "run_now_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["str", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "run_now_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/run-now\""], "ret_type": "", "ret_type_p": [["str", 0.7481461953713501], ["List[str]", 0.1672460332320867]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the submit run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[112, 0], [116, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "submit_run_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["bool", 0.33333332184601827], ["AbstractSet[str]", 0.33333332147823513], ["Callable", 0.33333332147823513], ["List[str]", 3.420349672688131e-08], ["str", 4.161908959569473e-10], ["int", 3.852158609439994e-10]], "kwargs": []}, "q_name": "submit_run_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/runs/submit\""], "ret_type": "", "ret_type_p": [["str", 0.807784426334196]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the get run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[119, 0], [123, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_run_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["List[Dict[str, Any]]", 0.2793047711996688], ["List[str]", 0.226836762164136], ["bool", 0.18340064024192693], ["str", 0.17746664017490338], ["Iterable[str]", 0.07665932268821912], ["Optional[int]", 0.056331863531145845]], "kwargs": []}, "q_name": "get_run_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/runs/get\""], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the get run output endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[126, 0], [130, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_run_output_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["str", 0.3512960177642326], ["List[Dict[str, Any]]", 0.24266951865388747], ["list", 0.10702875515808914]], "kwargs": []}, "q_name": "get_run_output_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/runs/get-output\""], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the cancel run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[133, 0], [137, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "cancel_run_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["bool", 0.33333332184601827], ["AbstractSet[str]", 0.33333332147823513], ["Callable", 0.33333332147823513], ["List[str]", 3.420349672688131e-08], ["str", 4.161908959569473e-10], ["int", 3.852158609439994e-10]], "kwargs": []}, "q_name": "cancel_run_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/runs/cancel\""], "ret_type": "", "ret_type_p": [["str", 0.807784426334196]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the cancel all runs endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[140, 0], [144, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "cancel_all_runs_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["str", 0.2519627240411846], ["bool", 0.19661798531135588], ["Optional[str]", 0.09482122322025112], ["Iterator[str]", 0.09368024200064407], ["Dict[str, Any]", 0.08780572503908313], ["Optional[Exception]", 0.08546965394697902]], "kwargs": []}, "q_name": "cancel_all_runs_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/runs/cancel-all\""], "ret_type": "", "ret_type_p": [["str", 0.7992347093518407]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate delete run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[147, 0], [151, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "delete_run_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["str", 0.3317312992021966], ["bool", 0.1269732197962889], ["int", 0.11163593461289005], ["List[str]", 0.08191136499522092], ["Callable", 0.07314432058114921], ["Optional", 0.07314432058114921]], "kwargs": []}, "q_name": "delete_run_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/runs/delete\""], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate delete run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[154, 0], [158, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "repair_run_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["bool", 0.33333332184601827], ["AbstractSet[str]", 0.33333332147823513], ["Callable", 0.33333332147823513], ["List[str]", 3.420349672688131e-08], ["str", 4.161908959569473e-10], ["int", 3.852158609439994e-10]], "kwargs": []}, "q_name": "repair_run_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/runs/repair\""], "ret_type": "", "ret_type_p": [["str", 0.807784426334196]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the get run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[161, 0], [165, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "start_cluster_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["int", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Callable", 0.09999999999999999], ["bool", 0.09999999999999999], ["str", 0.09999999999999999], ["Optional", 0.09999999999999999]], "kwargs": []}, "q_name": "start_cluster_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.0/clusters/start\""], "ret_type": "", "ret_type_p": [["str", 0.7776743488754663], ["dict", 0.1309716214655751]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the get run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[168, 0], [172, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "restart_cluster_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "restart_cluster_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.0/clusters/restart\""], "ret_type": "", "ret_type_p": [["str", 0.6306592380300643], ["Optional[str]", 0.0984212716560739], ["int", 0.0911462868921086]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the get run endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[175, 0], [179, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "terminate_cluster_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "terminate_cluster_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.0/clusters/delete\""], "ret_type": "", "ret_type_p": [["str", 0.9999999999999998]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the install endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[182, 0], [186, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "install_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "install_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.0/libraries/install\""], "ret_type": "", "ret_type_p": [["str", 0.6306592380300643], ["Optional[str]", 0.0984212716560739], ["int", 0.0911462868921086]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the uninstall endpoint given the host.", "long_descr": null, "ret": null}, "fn_lc": [[189, 0], [193, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "uninstall_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "uninstall_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.0/libraries/uninstall\""], "ret_type": "", "ret_type_p": [["str", 0.6306592380300643], ["Optional[str]", 0.0984212716560739], ["int", 0.0911462868921086]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the list jobs endpoint given the host", "long_descr": null, "ret": null}, "fn_lc": [[196, 0], [200, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "list_jobs_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["str", 0.49999999999999994], ["int", 0.3], ["list", 0.09999999999999999], ["Optional[str]", 0.09999999999999999]], "kwargs": []}, "q_name": "list_jobs_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.1/jobs/list\""], "ret_type": "", "ret_type_p": [["str", 0.9999999999999998]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Utility function to generate the list spark versions endpoint given the host", "long_descr": null, "ret": null}, "fn_lc": [[203, 0], [205, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "list_spark_versions_endpoint", "params": {"host": ""}, "params_descr": {"host": ""}, "params_occur": {"host": []}, "params_p": {"args": [], "host": [["int", 0.39379856657902806], ["str", 0.3094275154026453], ["List[int]", 0.10325963281226379], ["List[str]", 0.10325963281226379], ["jumeaux.models.Notifier", 0.09025465239379891]], "kwargs": []}, "q_name": "list_spark_versions_endpoint", "ret_exprs": ["return f\"https://{host}/api/2.0/clusters/spark-versions\""], "ret_type": "", "ret_type_p": [["str", 0.8051003626137813], ["Tuple[Tuple[int, ...]]", 0.09605630353856257]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[208, 0], [212, 19]], "fn_var_ln": {"response": [[209, 4], [209, 12]]}, "fn_var_occur": {"response": [["response", "mock", "MagicMock"], ["response", "json", "return_value", "content"], ["response", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "content"]]}, "name": "create_valid_response_mock", "params": {"content": ""}, "params_descr": {"content": ""}, "params_occur": {"content": [["response", "json", "return_value", "content"], ["response", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "content"]]}, "params_p": {"args": [], "content": [["List[str]", 0.11247758915745902], ["List[Dict[str, Any]]", 0.10902250884029967], ["bytes", 0.10390945402775752], ["str", 0.09827234713689767]], "kwargs": []}, "q_name": "create_valid_response_mock", "ret_exprs": ["return response"], "ret_type": "", "ret_type_p": [["dict", 0.2574614666383627], ["Mapping[str, Any]", 0.0969323614850115], ["bool", 0.08942895508162865]], "variables": {"response": ""}, "variables_p": {"response": [["mock.Mock", 0.09283296159695012]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 0], [219, 19]], "fn_var_ln": {"response": [[216, 4], [216, 12]], "status_code": [[218, 4], [218, 24]]}, "fn_var_occur": {"response": [["response", "mock", "MagicMock"], ["response", "json", "return_value", "content"], ["response", "status_code"]], "status_code": [["response", "status_code"]]}, "name": "create_successful_response_mock", "params": {"content": ""}, "params_descr": {"content": ""}, "params_occur": {"content": [["response", "json", "return_value", "content"]]}, "params_p": {"args": [], "content": [["str", 0.3693545074557515], ["List[str]", 0.10769260903460652], ["dict", 0.10108152326506795], ["int", 0.08125509027247325], ["Dict[str, Any]", 0.07866207764176907]], "kwargs": []}, "q_name": "create_successful_response_mock", "ret_exprs": ["return response"], "ret_type": "", "ret_type_p": [["dict", 0.3171781601544934], ["Optional[str]", 0.12476370858927086], ["Dict[str, Any]", 0.09839339880123994], ["bool", 0.08856856093692717], ["List[dict]", 0.08573598788282824], ["List[str]", 0.081432411437158]], "variables": {"response": "", "status_code": ""}, "variables_p": {"response": [["mock.MagicMock", 0.10193243203350784], ["mock.Mock", 0.09835446805704372]], "status_code": [["int", 0.3477481137026018], ["List[int]", 0.2005213624357815], ["Dict[int, bytes]", 0.18599700152737064], ["List[Tuple[Any, str]]", 0.08936090893080435], ["Set[int]", 0.08887963446956011], ["frozenset[int]", 0.08749297893388158]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[222, 0], [229, 23]], "fn_var_ln": {"response": [[226, 8], [226, 16]], "status_code": [[227, 8], [227, 28]]}, "fn_var_occur": {"response": [["response", "mock", "MagicMock"], ["response", "status_code", "status_code"], ["response", "raise_for_status", "side_effect", "exception", "response", "response"]], "status_code": [["response", "status_code", "status_code"]]}, "name": "create_post_side_effect", "params": {"exception": "", "status_code": ""}, "params_descr": {"exception": "", "status_code": ""}, "params_occur": {"exception": [["exception", "requests_exceptions", "HTTPError"], ["response", "raise_for_status", "side_effect", "exception", "response", "response"]], "status_code": [["response", "status_code", "status_code"]]}, "params_p": {"args": [], "exception": [["str", 0.2936316582298176], ["Dict[str, Any]", 0.19071020947533301], ["int", 0.09429727010166485], ["bool", 0.09321262687857387], ["Dict[str, str]", 0.09321262687857387], ["aiohttp.ClientTimeout", 0.09321262687857387]], "kwargs": [], "status_code": [["int", 1.0000000000000002]]}, "q_name": "create_post_side_effect", "ret_exprs": ["return exception()", "return response"], "ret_type": "", "ret_type_p": [["bool", 0.17733678279026538], ["utils.clienClient", 0.0843123357528061], ["dict", 0.08251996478530926]], "variables": {"response": "", "status_code": ""}, "variables_p": {"response": [["mock.MagicMock", 0.3922245076293609]], "status_code": [["int", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[232, 0], [242, 9]], "fn_var_ln": {"side_effect": [[233, 4], [233, 15]]}, "fn_var_occur": {"side_effect": [["side_effect", "create_post_side_effect", "exception", "status_code"], ["mock_requests", "post", "side_effect", "itertools", "repeat", "side_effect"], ["mock_requests", "post", "side_effect", "side_effect", "error_count", "create_valid_response_mock", "response_content"]]}, "name": "setup_mock_requests", "params": {"error_count": "", "exception": "", "mock_requests": "", "response_content": "", "status_code": ""}, "params_descr": {"error_count": "", "exception": "", "mock_requests": "", "response_content": "", "status_code": ""}, "params_occur": {"error_count": [["error_count", "None"], ["mock_requests", "post", "side_effect", "side_effect", "error_count", "create_valid_response_mock", "response_content"]], "exception": [["side_effect", "create_post_side_effect", "exception", "status_code"]], "mock_requests": [["mock_requests", "post", "side_effect", "itertools", "repeat", "side_effect"], ["mock_requests", "post", "side_effect", "side_effect", "error_count", "create_valid_response_mock", "response_content"]], "response_content": [["mock_requests", "post", "side_effect", "side_effect", "error_count", "create_valid_response_mock", "response_content"]], "status_code": [["side_effect", "create_post_side_effect", "exception", "status_code"]]}, "params_p": {"args": [], "error_count": [["Optional[dict]", 0.1896486748287667], ["Callable[..., None]", 0.10672052558144048], ["Optional[Type[Any]]", 0.10075180923388376], ["protoactor.persistence.providers.abstract_provider.AbstractEventStore", 0.09309856552587738], ["protoactor.persistence.providers.abstract_provider.AbstractSnapshotStore", 0.09309856552587738], ["Dict[str, Any]", 0.08075065948607443]], "exception": [["int", 0.49065550484326254], ["str", 0.2041352563657027], ["Optional[str]", 0.12079578898566845], ["Dict[str, str]", 0.09455410149199184], ["Optional[Sequence[Any]]", 0.08985934831337447]], "kwargs": [], "mock_requests": [["Tuple[Any, int]", 0.10815423218164055], ["float", 0.1028506725095562], ["List[aw_core.models.Event]", 0.09349615758030076], ["Optional[str]", 0.09216707228312711], ["dict", 0.08830849019792487]], "response_content": [["int", 0.19022894455388112], ["List[int]", 0.11116760896607099], ["Tuple[str, List[str]]", 0.11116760896607099], ["float", 0.096492015701376], ["List[str]", 0.09421664259386468], ["grouper.models.permission_requesPermissionRequest", 0.09276762193075651], ["Dict[str, Any]", 0.09209380399634821]], "status_code": [["int", 0.49065550484326254], ["str", 0.2041352563657027], ["Optional[str]", 0.12079578898566845], ["Dict[str, str]", 0.09455410149199184], ["Optional[Sequence[Any]]", 0.08985934831337447]]}, "q_name": "setup_mock_requests", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["str", 0.33112035722608896], ["Dict[int, str]", 0.2745193565757467], ["List[str]", 0.1106206306807086], ["Dict[str, bool]", 0.10636666966347005], ["list", 0.10234265112573152], ["Dict[str, Union[int, str]]", 0.07503033472825417]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[940, 0], [949, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_aad_token_for_resource", "params": {"resource": "builtins.str"}, "params_descr": {"resource": ""}, "params_occur": {"resource": [["resource", "TOKEN"]]}, "params_p": {"args": [], "kwargs": [], "resource": [["str", 0.5504472342776758], ["zerver.models.Realm", 0.3168712110177673], ["bool", 0.132681554704557]]}, "q_name": "create_aad_token_for_resource", "ret_exprs": ["return { \"token_type\": \"Bearer\", \"expires_in\": \"599\", \"ext_expires_in\": \"599\", \"expires_on\": \"1575500666\", \"not_before\": \"1575499766\", \"resource\": resource, \"access_token\": TOKEN,}"], "ret_type": "builtins.dict", "ret_type_p": [["List[str]", 0.4047680207353716], ["Union[str, float]", 0.29747582855212723], ["bool", 0.19046395852925685], ["int", 0.10729219218324436]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "itertools", "json", "time", "unittest", "mock", "unittest", "mock", "AsyncMock", "aiohttp", "pytest", "tenacity", "requests", "exceptions", "requests_exceptions", "requests", "auth", "HTTPBasicAuth", "airflow", "exceptions", "AirflowException", "airflow", "models", "Connection", "airflow", "providers", "databricks", "hooks", "databricks", "GET_RUN_ENDPOINT", "SUBMIT_RUN_ENDPOINT", "DatabricksHook", "RunState", "airflow", "providers", "databricks", "hooks", "databricks_base", "AZURE_DEFAULT_AD_ENDPOINT", "AZURE_MANAGEMENT_ENDPOINT", "AZURE_METADATA_SERVICE_INSTANCE_URL", "AZURE_TOKEN_SERVICE_URL", "DEFAULT_DATABRICKS_SCOPE", "TOKEN_REFRESH_LEAD_TIME", "BearerAuth", "airflow", "utils", "session", "provide_session"], "mod_var_ln": {"CLUSTER_ID": [[56, 0], [56, 10]], "DEFAULT_CONN_ID": [[52, 0], [52, 15]], "DEFAULT_RETRY_ARGS": [[61, 0], [61, 18]], "DEFAULT_RETRY_NUMBER": [[60, 0], [60, 20]], "ERROR_MESSAGE": [[73, 0], [73, 13]], "GET_RUN_OUTPUT_RESPONSE": [[79, 0], [79, 23]], "GET_RUN_RESPONSE": [[74, 0], [74, 16]], "HOST": [[65, 0], [65, 4]], "HOST_WITH_SCHEME": [[66, 0], [66, 16]], "JAR_PARAMS": [[81, 0], [81, 10]], "JOB_ID": [[58, 0], [58, 6]], "JOB_NAME": [[59, 0], [59, 8]], "LIBRARIES": [[83, 0], [83, 9]], "LIFE_CYCLE_STATE": [[71, 0], [71, 16]], "LIST_JOBS_RESPONSE": [[87, 0], [87, 18]], "LIST_SPARK_VERSIONS_RESPONSE": [[98, 0], [98, 28]], "LOGIN": [[67, 0], [67, 5]], "NEW_CLUSTER": [[55, 0], [55, 11]], "NOTEBOOK_PARAMS": [[80, 0], [80, 15]], "NOTEBOOK_TASK": [[53, 0], [53, 13]], "PASSWORD": [[68, 0], [68, 8]], "RESULT_STATE": [[82, 0], [82, 12]], "RUN_ID": [[57, 0], [57, 6]], "RUN_PAGE_URL": [[70, 0], [70, 12]], "SPARK_PYTHON_TASK": [[54, 0], [54, 17]], "STATE_MESSAGE": [[72, 0], [72, 13]], "TASK_ID": [[51, 0], [51, 7]], "TOKEN": [[69, 0], [69, 5]]}, "mod_var_occur": {"CLUSTER_ID": [["self", "hook", "start_cluster", "CLUSTER_ID"], ["mock_requests", "post", "assert_called_once_with", "start_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["self", "hook", "restart_cluster", "CLUSTER_ID"], ["mock_requests", "post", "assert_called_once_with", "restart_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["self", "hook", "terminate_cluster", "CLUSTER_ID"], ["mock_requests", "post", "assert_called_once_with", "terminate_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["data", "CLUSTER_ID", "LIBRARIES"], ["mock_requests", "post", "assert_called_once_with", "install_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["data", "CLUSTER_ID", "LIBRARIES"], ["mock_requests", "post", "assert_called_once_with", "uninstall_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "DEFAULT_CONN_ID": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"]], "DEFAULT_RETRY_ARGS": [["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"], ["self", "hook", "DatabricksHook", "retry_args", "DEFAULT_RETRY_ARGS"]], "DEFAULT_RETRY_NUMBER": [["DEFAULT_RETRY_ARGS", "dict", "wait", "tenacity", "wait_none", "stop", "tenacity", "stop_after_attempt", "DEFAULT_RETRY_NUMBER"], ["mock_errors", "call_count", "DEFAULT_RETRY_NUMBER"], ["mock_errors", "call_count", "DEFAULT_RETRY_NUMBER"], ["mock_errors", "call_count", "DEFAULT_RETRY_NUMBER"], ["mock_errors", "call_count", "DEFAULT_RETRY_NUMBER"], ["mock_errors", "call_count", "DEFAULT_RETRY_NUMBER"]], "ERROR_MESSAGE": [["GET_RUN_OUTPUT_RESPONSE", "ERROR_MESSAGE"], ["run_output_error", "ERROR_MESSAGE"]], "GET_RUN_OUTPUT_RESPONSE": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_OUTPUT_RESPONSE"]], "GET_RUN_RESPONSE": [["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_requests", "post", "return_value", "json", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "return_value", "__aenter__", "return_value", "json", "AsyncMock", "return_value", "GET_RUN_RESPONSE"], ["mock_get", "return_value", "__aenter__", "return_value", "json", "side_effect", "AsyncMock", "side_effect", "create_aad_token_for_resource", "DEFAULT_DATABRICKS_SCOPE", "GET_RUN_RESPONSE"]], "HOST": [["conn", "host", "HOST"], ["host", "self", "hook", "_parse_host", "HOST"], ["host", "HOST"], ["host", "HOST"], ["mock_requests", "patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "NOTEBOOK_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "SPARK_PYTHON_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_output_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "cancel_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "cancel_all_runs_endpoint", "HOST", "json", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "delete_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "repair_run_endpoint", "HOST", "json", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "start_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "restart_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "terminate_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "install_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "uninstall_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["first_call_args", "list_jobs_endpoint", "HOST"], ["second_call_args", "list_jobs_endpoint", "HOST"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "job_name", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["conn", "extra", "json", "dumps", "TOKEN", "HOST"], ["conn", "host", "HOST"], ["conn", "extra", "json", "dumps", "HOST"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"], ["conn", "host", "HOST"], ["conn", "host", "HOST"], ["conn", "host", "HOST"], ["mock_patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["conn", "extra", "json", "dumps", "HOST"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["conn", "extra", "json", "dumps", "HOST", "self", "tenant_id", "self", "ad_endpoint"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["conn", "host", "HOST"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "TOKEN", "timeout", "self", "hook", "timeout_seconds"], ["conn", "host", "HOST"]], "HOST_WITH_SCHEME": [["host", "self", "hook", "_parse_host", "HOST_WITH_SCHEME"]], "JAR_PARAMS": [["data", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "JOB_ID": [["GET_RUN_RESPONSE", "JOB_ID", "RUN_PAGE_URL", "LIFE_CYCLE_STATE", "STATE_MESSAGE"], ["LIST_JOBS_RESPONSE", "JOB_ID", "JOB_NAME", "False"], ["data", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["job_id", "JOB_ID"], ["self", "hook", "cancel_all_runs", "JOB_ID"], ["mock_requests", "post", "assert_called_once_with", "cancel_all_runs_endpoint", "HOST", "json", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["job_id", "JOB_ID"]], "JOB_NAME": [["LIST_JOBS_RESPONSE", "JOB_ID", "JOB_NAME", "False"], ["job_id", "self", "hook", "find_job_id_by_name", "JOB_NAME"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["exception_message", "JOB_NAME"], ["self", "hook", "find_job_id_by_name", "JOB_NAME"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "LIBRARIES": [["data", "CLUSTER_ID", "LIBRARIES"], ["mock_requests", "post", "assert_called_once_with", "install_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["data", "CLUSTER_ID", "LIBRARIES"], ["mock_requests", "post", "assert_called_once_with", "uninstall_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "LIFE_CYCLE_STATE": [["GET_RUN_RESPONSE", "JOB_ID", "RUN_PAGE_URL", "LIFE_CYCLE_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state_str", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["lifecycle_state", "LIFE_CYCLE_STATE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]], "LIST_JOBS_RESPONSE": [["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE"], ["jobs", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "side_effect", "create_successful_response_mock", "LIST_JOBS_RESPONSE", "True", "create_successful_response_mock", "LIST_JOBS_RESPONSE"], ["jobs", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE"], ["mock_requests", "get", "return_value", "json", "return_value", "LIST_JOBS_RESPONSE", "LIST_JOBS_RESPONSE"]], "LIST_SPARK_VERSIONS_RESPONSE": [["mock_requests", "get", "return_value", "json", "return_value", "LIST_SPARK_VERSIONS_RESPONSE"]], "LOGIN": [["conn", "login", "LOGIN"], ["mock_requests", "patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "NOTEBOOK_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "SPARK_PYTHON_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_output_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "cancel_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "cancel_all_runs_endpoint", "HOST", "json", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "delete_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "repair_run_endpoint", "HOST", "json", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "start_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "restart_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "terminate_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "install_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "uninstall_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "job_name", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["conn", "login", "LOGIN"], ["mock_patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "NEW_CLUSTER": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "NOTEBOOK_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["data", "SPARK_PYTHON_TASK", "NEW_CLUSTER"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "SPARK_PYTHON_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"]], "NOTEBOOK_PARAMS": [["data", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "NOTEBOOK_TASK": [["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "NOTEBOOK_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"], ["data", "NOTEBOOK_TASK", "NEW_CLUSTER"]], "PASSWORD": [["conn", "password", "PASSWORD"], ["mock_requests", "patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "NOTEBOOK_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "SPARK_PYTHON_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "run_now_endpoint", "HOST", "json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_output_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "cancel_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "cancel_all_runs_endpoint", "HOST", "json", "JOB_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "delete_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "repair_run_endpoint", "HOST", "json", "json", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "start_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "restart_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "terminate_cluster_endpoint", "HOST", "json", "CLUSTER_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "install_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "post", "assert_called_once_with", "uninstall_endpoint", "HOST", "json", "CLUSTER_ID", "LIBRARIES", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "job_name", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_jobs_endpoint", "HOST", "json", "None", "params", "False", "JOB_NAME", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_requests", "get", "assert_called_once_with", "list_spark_versions_endpoint", "HOST", "json", "None", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["conn", "password", "PASSWORD"], ["mock_patch", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "RESULT_STATE": [["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state_str", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["result_state", "RESULT_STATE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]], "RUN_ID": [["run_page_url", "self", "hook", "get_run_page_url", "RUN_ID"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["job_id", "self", "hook", "get_job_id", "RUN_ID"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_output_error", "self", "hook", "get_run_output", "RUN_ID", "get"], ["mock_requests", "get", "assert_called_once_with", "get_run_output_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_state", "self", "hook", "get_run_state", "RUN_ID"], ["mock_requests", "get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "None", "params", "RUN_ID", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_state_str", "self", "hook", "get_run_state_str", "RUN_ID"], ["lifecycle_state", "self", "hook", "get_run_state_lifecycle", "RUN_ID"], ["result_state", "self", "hook", "get_run_state_result", "RUN_ID"], ["state_message", "self", "hook", "get_run_state_message", "RUN_ID"], ["self", "hook", "cancel_run", "RUN_ID"], ["mock_requests", "post", "assert_called_once_with", "cancel_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["self", "hook", "delete_run", "RUN_ID"], ["mock_requests", "post", "assert_called_once_with", "delete_run_endpoint", "HOST", "json", "RUN_ID", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_page_url", "self", "hook", "a_get_run_page_url", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "aiohttp", "BasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "TOKEN", "timeout", "self", "hook", "timeout_seconds"], ["run_state", "self", "hook", "a_get_run_state", "RUN_ID"]], "RUN_PAGE_URL": [["GET_RUN_RESPONSE", "JOB_ID", "RUN_PAGE_URL", "LIFE_CYCLE_STATE", "STATE_MESSAGE"], ["run_page_url", "RUN_PAGE_URL"], ["run_page_url", "RUN_PAGE_URL"]], "SPARK_PYTHON_TASK": [["data", "SPARK_PYTHON_TASK", "NEW_CLUSTER"], ["mock_requests", "post", "assert_called_once_with", "submit_run_endpoint", "HOST", "json", "SPARK_PYTHON_TASK", "NEW_CLUSTER", "params", "None", "auth", "HTTPBasicAuth", "LOGIN", "PASSWORD", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"]], "STATE_MESSAGE": [["GET_RUN_RESPONSE", "JOB_ID", "RUN_PAGE_URL", "LIFE_CYCLE_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state_str", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["state_message", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"], ["run_state", "RunState", "LIFE_CYCLE_STATE", "RESULT_STATE", "STATE_MESSAGE"]], "TASK_ID": [], "TOKEN": [["conn", "extra", "json", "dumps", "TOKEN", "HOST"], ["kwargs", "token", "TOKEN"], ["conn", "password", "TOKEN"], ["kwargs", "token", "TOKEN"], ["conn", "extra", "json", "dumps", "TOKEN"], ["resource", "TOKEN"], ["kwargs", "token", "TOKEN"], ["kwargs", "token", "TOKEN"], ["kwargs", "token", "TOKEN"], ["kwargs", "TOKEN"], ["kwargs", "token", "TOKEN"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "timeout", "self", "hook", "timeout_seconds"], ["mock_get", "assert_called_once_with", "get_run_endpoint", "HOST", "json", "RUN_ID", "auth", "BearerAuth", "TOKEN", "headers", "self", "hook", "user_agent_header", "TOKEN", "timeout", "self", "hook", "timeout_seconds"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 411}, "session_id": "fmx9v_APwbnp38l0WPL1qxliHYuJ9W7pDBMRhBh6SaM", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"CLUSTER_ID": "", "DEFAULT_CONN_ID": "", "DEFAULT_RETRY_ARGS": "", "DEFAULT_RETRY_NUMBER": "", "ERROR_MESSAGE": "", "GET_RUN_OUTPUT_RESPONSE": "", "GET_RUN_RESPONSE": "", "HOST": "", "HOST_WITH_SCHEME": "", "JAR_PARAMS": "", "JOB_ID": "", "JOB_NAME": "", "LIBRARIES": "", "LIFE_CYCLE_STATE": "", "LIST_JOBS_RESPONSE": "", "LIST_SPARK_VERSIONS_RESPONSE": "", "LOGIN": "", "NEW_CLUSTER": "", "NOTEBOOK_PARAMS": "", "NOTEBOOK_TASK": "", "PASSWORD": "", "RESULT_STATE": "", "RUN_ID": "", "RUN_PAGE_URL": "", "SPARK_PYTHON_TASK": "", "STATE_MESSAGE": "", "TASK_ID": "", "TOKEN": ""}, "variables_p": {"CLUSTER_ID": [["str", 0.4093151630821118], ["int", 0.3137889270151774], ["bytes", 0.08820934145557859]], "DEFAULT_CONN_ID": [["int", 0.20912379767249115], ["Pattern[Any]", 0.1177038535980973], ["Optional[str]", 0.09915668940906824]], "DEFAULT_RETRY_ARGS": [["int", 0.5083108361497191], ["str", 0.10453766908237473]], "DEFAULT_RETRY_NUMBER": [["int", 0.6768672788297617], ["str", 0.12329793890388299], ["float", 0.0919578262237301]], "ERROR_MESSAGE": [["str", 0.21013678319957146], ["int", 0.11448857168075575], ["Tuple[str, str, str]", 0.0998851342459888]], "GET_RUN_OUTPUT_RESPONSE": [["str", 0.37937325020492907], ["Dict[str, List[Any]]", 0.1265995522869422], ["List[Tuple[str, Any]]", 0.1194980208892804], ["Dict[str, List[str]]", 0.10167927959787036]], "GET_RUN_RESPONSE": [["Dict[str, Dict[str, Any]]", 0.27648434108739706], ["Dict[Any, Dict[str, Any]]", 0.2161927599035617], ["Dict[str, Union[None, int, str]]", 0.117257079172821], ["Dict[str, List[str]]", 0.10955015463205088], ["Dict[str, Dict[Any, Any]]", 0.09386652238179873], ["Dict[str, Dict[Any, str]]", 0.09386652238179873], ["Dict[str, str]", 0.09278262044057206]], "HOST": [["str", 0.81634868165545], ["int", 0.18365131834455006]], "HOST_WITH_SCHEME": [["Type[str]", 0.4238803458549943], ["str", 0.39458336706483504], ["Dict[str, int]", 0.18153628708017053]], "JAR_PARAMS": [["int", 0.6641038746370208], ["Dict[str, Union[Any, int, str]]", 0.12532059677961122], ["DefaultDict[Any, List[Any]]", 0.10051182734292824]], "JOB_ID": [["Pattern[Any]", 0.11993554110503354], ["list", 0.11526091427912367], ["int", 0.10711315619246041], ["Optional[str]", 0.08085973799177953]], "JOB_NAME": [["str", 1.0000000000000002]], "LIBRARIES": [["str", 0.5832195903199451], ["list", 0.12553798812440836], ["int", 0.11808816040416968], ["List[Dict[str, str]]", 0.08667142796240329]], "LIFE_CYCLE_STATE": [["int", 0.26922966529208603], ["Tuple[str, str]", 0.260168308634095], ["str", 0.1733086272425663]], "LIST_JOBS_RESPONSE": [["Dict[str, Union[Any, Any]]", 0.39266180366466674], ["Dict[str, str]", 0.22072516585482577], ["Dict[str, Union[None, int, str]]", 0.10800670655979602], ["Dict[str, Union[Any, str]]", 0.09682003020472267], ["Dict[str, Optional[int]]", 0.0928628651315058], ["Dict[str, Union[Any, Any, int, str]]", 0.08892342858448307]], "LIST_SPARK_VERSIONS_RESPONSE": [["str", 0.3044660945257624], ["Dict[str, Union[Any, Any]]", 0.2335817567585737], ["Dict[str, List[Any]]", 0.09818565937967368], ["Optional[bytes]", 0.08418790099811171], ["rotkehlchen.tests.utils.mock.MockResponse", 0.08026238901587456]], "LOGIN": [["List[Dict[str, Any]]", 0.15958798191487877], ["Dict[str, Union[Any, str]]", 0.09467766733564209], ["str", 0.08675557272171382], ["Dict[str, str]", 0.0841031636769409]], "NEW_CLUSTER": [["str", 0.5067771747078477], ["Dict[str, str]", 0.19884173049064968], ["list", 0.09962002810202428]], "NOTEBOOK_PARAMS": [["int", 0.6641038746370208], ["Dict[str, Union[Any, int, str]]", 0.12532059677961122], ["DefaultDict[Any, List[Any]]", 0.10051182734292824]], "NOTEBOOK_TASK": [["str", 0.7903760084196427], ["Dict[str, str]", 0.10676521557925205], ["list", 0.10285877600110534]], "PASSWORD": [["str", 0.39757895197337334], ["Dict[str, str]", 0.2117650445843881], ["Dict[str, Dict[str, Any]]", 0.1872636905244229], ["Dict[str, Any]", 0.10287761370861039]], "RESULT_STATE": [["int", 0.6076956946279806], ["str", 0.1130670636181983], ["radio.models.PlaybackState", 0.09645305835911361], ["Dict[str, List[Any]]", 0.0892535996871333]], "RUN_ID": [["str", 0.6246447220693351], ["Dict[str, Any]", 0.17920759790746482], ["Tuple[Literal, Literal]", 0.10884896787757384]], "RUN_PAGE_URL": [["Dict[str, str]", 0.18778705658442224], ["str", 0.1527990846651186], ["int", 0.15133026488446427], ["Dict[str, Union[Any, Any]]", 0.11403547874687026], ["dict", 0.11268726102366315], ["cmk.utils.type_defs.UserId", 0.07674573363852441]], "SPARK_PYTHON_TASK": [["str", 0.5053388316835516], ["requests.models.Response", 0.09976303539079458], ["Tuple[str, str]", 0.09872453323141346], ["Dict[str, Any]", 0.09872453323141346], ["int", 0.09872453323141346], ["Dict[str, str]", 0.09872453323141346]], "STATE_MESSAGE": [["int", 0.17722572711505202], ["cmk.utils.type_defs.UserId", 0.13629832191034943], ["raiden.utils.Any", 0.12608091234461322], ["Tuple[str, str]", 0.12316379346582496], ["Optional[str]", 0.12301133653658236], ["str", 0.08248889224513092], ["List[Dict[str, Any]]", 0.07876019973154962], ["Set[int]", 0.0769799036175856], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.0759909130333118]], "TASK_ID": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "TOKEN": [["Dict[int, Any]", 0.275900747568406], ["Optional[str]", 0.10969450161811667], ["str", 0.08696149042276294]]}}}