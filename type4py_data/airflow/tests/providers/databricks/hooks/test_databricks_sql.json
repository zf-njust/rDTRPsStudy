{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 0], [46, 20]], "fn_var_ln": {"conn": [[41, 4], [41, 8]], "extra": [[45, 4], [45, 14]], "host": [[42, 4], [42, 13]], "login": [[43, 4], [43, 14]], "password": [[44, 4], [44, 17]]}, "fn_var_occur": {"conn": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["conn", "host", "HOST"], ["conn", "login", "None"], ["conn", "password", "TOKEN"], ["conn", "extra", "None"]], "extra": [["conn", "extra", "None"]], "host": [["conn", "host", "HOST"]], "login": [["conn", "login", "None"]], "password": [["conn", "password", "TOKEN"]]}, "name": "create_connection", "params": {"session": ""}, "params_descr": {"session": ""}, "params_occur": {"session": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "session": [["sqlalchemy.orm.session.Session", 0.4402611989873082], ["str", 0.1081487255519498], ["grouper.models.base.session.Session", 0.08683262768388379], ["grouper.models.group.Group", 0.08683262768388379], ["models.Queue", 0.08301151975762748]]}, "q_name": "create_connection", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "extra": "", "host": "", "login": "", "password": ""}, "variables_p": {"conn": [["str", 0.2670843582608841], ["int", 0.20948277018338562], ["Optional[Match[str]]", 0.11619228998414996], ["Pattern[str]", 0.06791010466321273]], "extra": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "host": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]], "login": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "password": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[50, 0], [51, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "databricks_hook", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "databricks_hook", "ret_exprs": ["return DatabricksSqlHook(sql_endpoint_name=\"Test\")"], "ret_type": "", "ret_type_p": [["str", 0.29100547041073865], ["Optional[int]", 0.2066027116276799], ["Callable", 0.10330135581383995]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 0], [55, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_cursor_descriptions", "params": {"fields": "builtins.list[builtins.str]"}, "params_descr": {"fields": ""}, "params_occur": {"fields": [["field", "field", "fields"]]}, "params_p": {"args": [], "fields": [["django.db.models.fields.Field", 0.2528087675429924], ["str", 0.10573012143287025], ["int", 0.10455046250480103], ["ValueError", 0.07499802619315853], ["set", 0.07039597757791444]], "kwargs": []}, "q_name": "get_cursor_descriptions", "ret_exprs": ["return [(field,) for field in fields]"], "ret_type": "builtins.list[builtins.tuple[builtins.str]]", "ret_type_p": [["list", 0.2079127639634381], ["dict", 0.1988841892733677], ["List[str]", 0.1916905793268722], ["str", 0.09912101132850135], ["List[\"Variable\"]", 0.09642178229951548]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[174, 0], [226, 33]], "fn_var_ln": {"conn": [[206, 12], [206, 16]], "connections": [[203, 8], [203, 19]], "cur": [[207, 12], [207, 15]], "cursors": [[204, 8], [204, 15]], "results": [[216, 8], [216, 15]], "side_effect": [[215, 8], [215, 29]], "status_code_mock": [[201, 8], [201, 24]]}, "fn_var_occur": {"conn": [["conn", "mock", "MagicMock"], ["conn", "cursor", "return_value", "cur"], ["connections", "append", "conn"]], "connections": [["connections", "append", "conn"], ["mock_conn", "side_effect", "connections"]], "cur": [["cur", "mock", "MagicMock", "rowcount", "len", "cursor_results", "index", "description", "get_cursor_descriptions", "cursor_descriptions", "index"], ["cur", "fetchall", "return_value", "cursor_results", "index"], ["conn", "cursor", "return_value", "cur"], ["cursors", "append", "cur"], ["cur", "execute", "assert_has_calls", "mock", "call", "cursor_calls", "index"], ["cur", "close", "assert_called"]], "cursors": [["cursors", "append", "cur"], ["enumerate", "cursors"]], "results": [["results", "databricks_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements"], ["results", "hook_results"]], "side_effect": [["mock_conn", "side_effect", "connections"]], "status_code_mock": [["status_code_mock", "mock", "PropertyMock", "return_value"], ["type", "mock_requests", "get", "return_value", "status_code", "status_code_mock"]]}, "name": "test_query", "params": {"cursor_calls": "", "cursor_descriptions": "", "cursor_results": "", "databricks_hook": "", "hook_descriptions": "", "hook_results": "", "return_last": "", "split_statements": "", "sql": ""}, "params_descr": {"cursor_calls": "", "cursor_descriptions": "", "cursor_results": "", "databricks_hook": "", "hook_descriptions": "", "hook_results": "", "return_last": "", "split_statements": "", "sql": ""}, "params_occur": {"cursor_calls": [["cur", "execute", "assert_has_calls", "mock", "call", "cursor_calls", "index"]], "cursor_descriptions": [["range", "len", "cursor_descriptions"], ["cur", "mock", "MagicMock", "rowcount", "len", "cursor_results", "index", "description", "get_cursor_descriptions", "cursor_descriptions", "index"]], "cursor_results": [["cur", "mock", "MagicMock", "rowcount", "len", "cursor_results", "index", "description", "get_cursor_descriptions", "cursor_descriptions", "index"], ["cur", "fetchall", "return_value", "cursor_results", "index"]], "databricks_hook": [["results", "databricks_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements"], ["databricks_hook", "descriptions", "hook_descriptions"], ["databricks_hook", "last_description", "hook_descriptions"]], "hook_descriptions": [["databricks_hook", "descriptions", "hook_descriptions"], ["databricks_hook", "last_description", "hook_descriptions"]], "hook_results": [["results", "hook_results"]], "return_last": [["results", "databricks_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements"]], "split_statements": [["results", "databricks_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements"]], "sql": [["results", "databricks_hook", "run", "sql", "sql", "handler", "fetch_all_handler", "return_last", "return_last", "split_statements", "split_statements"]]}, "params_p": {"args": [], "cursor_calls": [], "cursor_descriptions": [], "cursor_results": [["bool", 0.08776101626450213]], "databricks_hook": [], "hook_descriptions": [["str", 0.4104199297634637]], "hook_results": [["Union[int, slice]", 0.0842639823846721]], "kwargs": [], "return_last": [], "split_statements": [], "sql": []}, "q_name": "test_query", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "connections": "", "cur": "", "cursors": "", "results": "", "side_effect": "", "status_code_mock": ""}, "variables_p": {"conn": [["mock.Mock", 0.49396048380632773]], "connections": [["list", 0.20867477377786112], ["str", 0.19814626165177235], ["Dict[str, Union[Any, Any, Any]]", 0.1309696080266378], ["Dict[str, List[str]]", 0.10678066010985844], ["Dict[str, Union[int, str]]", 0.07440754057576883], ["List[str]", 0.07357161018272905]], "cur": [["mock.Mock", 0.8345965837213051]], "cursors": [["list", 0.4], ["Generator[Any, None, None]", 0.1], ["List[Tuple[int, int]]", 0.1], ["str", 0.1], ["float", 0.1], ["int", 0.1]], "results": [], "side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "status_code_mock": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[237, 0], [240, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_no_query", "params": {"databricks_hook": "", "empty_statement": ""}, "params_descr": {"databricks_hook": "", "empty_statement": ""}, "params_occur": {"databricks_hook": [["databricks_hook", "run", "sql", "empty_statement"]], "empty_statement": [["databricks_hook", "run", "sql", "empty_statement"]]}, "params_p": {"args": [], "databricks_hook": [], "empty_statement": [], "kwargs": []}, "q_name": "test_no_query", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "patch", "pytest", "airflow", "models", "Connection", "airflow", "providers", "common", "sql", "hooks", "sql", "fetch_all_handler", "airflow", "providers", "databricks", "hooks", "databricks_sql", "DatabricksSqlHook", "airflow", "utils", "session", "provide_session"], "mod_var_ln": {"DEFAULT_CONN_ID": [[32, 0], [32, 15]], "HOST": [[33, 0], [33, 4]], "HOST_WITH_SCHEME": [[34, 0], [34, 16]], "TASK_ID": [[31, 0], [31, 7]], "TOKEN": [[35, 0], [35, 5]]}, "mod_var_occur": {"DEFAULT_CONN_ID": [["conn", "session", "query", "Connection", "filter", "Connection", "conn_id", "DEFAULT_CONN_ID", "first"]], "HOST": [["conn", "host", "HOST"]], "HOST_WITH_SCHEME": [], "TASK_ID": [], "TOKEN": [["conn", "password", "TOKEN"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 33}, "session_id": "oOUNqA2IzKxJpaNBDJ_tq-7-I_-Hd2EUX5cCMHbPncw", "set": null, "tc": [false, null], "type_annot_cove": 0.06, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_CONN_ID": "", "HOST": "", "HOST_WITH_SCHEME": "", "TASK_ID": "", "TOKEN": ""}, "variables_p": {"DEFAULT_CONN_ID": [["int", 0.7116562669873758], ["transfer.models.SubjectID", 0.09546311680642994]], "HOST": [["dict", 0.7999999999545204], ["int", 0.19999999999854687], ["str", 3.046154765952506e-11]], "HOST_WITH_SCHEME": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "TASK_ID": [["str", 0.4], ["Type[bot_app.models.Products]", 0.1], ["Type[str]", 0.1], ["Optional[str]", 0.1]], "TOKEN": [["str", 0.5823444584739575], ["List[str]", 0.3046844469906969], ["list", 0.11297109453534565]]}}}