{"error": null, "response": {"classes": [{"cls_lc": [[96, 0], [437, 43]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test the initializer with the named parameters.", "long_descr": null, "ret": null}, "fn_lc": [[97, 4], [108, 64]], "fn_var_ln": {"expected": [[104, 8], [104, 16]], "op": [[101, 8], [101, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "notebook_task", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_notebook_task_named_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_notebook_task_named_parameters", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "op": ""}, "variables_p": {"expected": [["str", 0.9301256618563525]], "op": [["dict", 0.22100508692335621], ["Dict[str, Union[Any, bool, str]]", 0.18748553615359903], ["Dict[str, Union[Any, Any]]", 0.10734129607464374], ["RuntimeError", 0.1019119468258201], ["Tuple[int]", 0.09047641925756074]]}}, {"docstring": {"func": "Test the initializer with the named parameters.", "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [121, 64]], "fn_var_ln": {"expected": [[117, 8], [117, 16]], "op": [[114, 8], [114, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_PYTHON_TASK", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_python_task", "SPARK_PYTHON_TASK"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_spark_python_task_named_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_spark_python_task_named_parameters", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "op": ""}, "variables_p": {"expected": [["str", 0.48695687506948016], ["bytes", 0.3398943785850322], ["List[str]", 0.08734554811885983], ["dict", 0.08580319822662773]], "op": [["Dict[str, Union[Any, bool, str]]", 0.21443547616976655], ["dict", 0.19950164629384098], ["RuntimeError", 0.10638779772418086], ["Dict[str, Union[Any, Any]]", 0.09967551404411554], ["Tuple[int]", 0.09518012204817485]]}}, {"docstring": {"func": "Test the initializer with the named parameters.", "long_descr": null, "ret": null}, "fn_lc": [[123, 4], [134, 64]], "fn_var_ln": {"expected": [[130, 8], [130, 16]], "op": [[127, 8], [127, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_SUBMIT_TASK", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_submit_task", "SPARK_SUBMIT_TASK"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_spark_submit_task_named_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_spark_submit_task_named_parameters", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "op": ""}, "variables_p": {"expected": [["str", 0.48695687506948016], ["bytes", 0.3398943785850322], ["List[str]", 0.08734554811885983], ["dict", 0.08580319822662773]], "op": [["Dict[str, Union[Any, bool, str]]", 0.21443547616976655], ["dict", 0.19950164629384098], ["RuntimeError", 0.10638779772418086], ["Dict[str, Union[Any, Any]]", 0.09967551404411554], ["Tuple[int]", 0.09518012204817485]]}}, {"docstring": {"func": "Test the initializer with the named parameters.", "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [152, 64]], "fn_var_ln": {"expected": [[148, 8], [148, 16]], "git_source": [[140, 8], [140, 18]], "op": [[145, 8], [145, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "git_source": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "git_source", "git_source"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "git_source", "git_source"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_dbt_task_named_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_dbt_task_named_parameters", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "git_source": "", "op": ""}, "variables_p": {"expected": [["str", 0.5842514341103066], ["Dict[str, str]", 0.22234115059165122], ["Iterator[str]", 0.11360188741982138]], "git_source": [["str", 0.6817001644778773], ["Dict[str, str]", 0.11036021480642723], ["Set[str]", 0.10911669610479861], ["Union[Literal, str]", 0.09882292461089698]], "op": [["dict", 0.22254144144400737], ["Dict[str, Union[Any, bool, str]]", 0.18216965937701374], ["Dict[str, Union[Any, Any]]", 0.10678752866504697], ["RuntimeError", 0.10548567746576043], ["str", 0.10113339004457615]]}}, {"docstring": {"func": "Test the initializer with mixed parameters.", "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [171, 64]], "fn_var_ln": {"expected": [[167, 8], [167, 16]], "git_source": [[158, 8], [158, 18]], "json": [[163, 8], [163, 12]], "op": [[164, 8], [164, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "git_source": [["json", "git_source"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"]], "json": [["json", "git_source"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_dbt_task_mixed_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_dbt_task_mixed_parameters", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "git_source": "", "json": "", "op": ""}, "variables_p": {"expected": [["str", 0.5842514341103066], ["Dict[str, str]", 0.22234115059165122], ["Iterator[str]", 0.11360188741982138]], "git_source": [["str", 0.7096464634386492], ["Dict[str, Union[float, str]]", 0.11440178174682582], ["List[str]", 0.07581665865286188]], "json": [["str", 0.47440443765079826], ["int", 0.12242801510446646], ["Tuple[int, int, int, int]", 0.11784479522164079], ["List[str]", 0.09222844945003197]], "op": [["dict", 0.20394956131754943], ["Dict[str, Union[Any, bool, str]]", 0.2024054195349577], ["Dict[str, Union[Any, Any]]", 0.10891233892326135], ["RuntimeError", 0.1009389321900607], ["Tuple[int]", 0.09058915522562079], ["str", 0.08834204207161216]]}}, {"docstring": {"func": "Test the initializer without the necessary git_source for dbt_task raises error.", "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [179, 100]], "fn_var_ln": {"exception_message": [[177, 8], [177, 25]]}, "fn_var_occur": {"exception_message": [["pytest", "raises", "AirflowException", "match", "exception_message"]]}, "name": "test_init_with_dbt_task_without_git_source_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_dbt_task_without_git_source_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"exception_message": ""}, "variables_p": {"exception_message": [["Pattern[str]", 0.7339435918685113], ["Dict[str, str]", 0.10032741998133282], ["Dict[str, Union[Any, Any]]", 0.08578190432394314], ["Pattern[bytes]", 0.07994708382621284]]}}, {"docstring": {"func": "Test the initializer without the necessary git_source for dbt_task raises error.", "long_descr": null, "ret": null}, "fn_lc": [[181, 4], [189, 67]], "fn_var_ln": {"exception_message": [[187, 8], [187, 25]], "json": [[185, 8], [185, 12]]}, "fn_var_occur": {"exception_message": [["pytest", "raises", "AirflowException", "match", "exception_message"]], "json": [["json", "DBT_TASK", "NEW_CLUSTER"], ["DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"]]}, "name": "test_init_with_dbt_task_json_without_git_source_raises_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_dbt_task_json_without_git_source_raises_error", "ret_exprs": [], "ret_type": "", "variables": {"exception_message": "", "json": ""}, "variables_p": {"exception_message": [["Pattern[str]", 0.7339435918685113], ["Dict[str, str]", 0.10032741998133282], ["Dict[str, Union[Any, Any]]", 0.08578190432394314], ["Pattern[bytes]", 0.07994708382621284]], "json": [["str", 0.19708409083438244], ["Dict[Any, str]", 0.12027715941834477], ["dict", 0.10371109327565964], ["List[Union[Any, Any, Any, Any]]", 0.09870746473470651]]}}, {"docstring": {"func": "Test the initializer with json data.", "long_descr": null, "ret": null}, "fn_lc": [[191, 4], [200, 64]], "fn_var_ln": {"expected": [[197, 8], [197, 16]], "json": [[195, 8], [195, 12]], "op": [[196, 8], [196, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "json": [["json", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_json", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "json": "", "op": ""}, "variables_p": {"expected": [["str", 0.9301256618563525]], "json": [["tbump.hooks.Hook", 0.1933662696983115], ["bool", 0.1204677369315622], ["datetime.timedelta", 0.1021428838153774], ["str", 0.09606048156082957]], "op": [["str", 0.17024868905951757], ["bytes", 0.08365138068493222]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[202, 4], [206, 64]], "fn_var_ln": {"expected": [[205, 8], [205, 16]], "op": [[204, 8], [204, 10]], "tasks": [[203, 8], [203, 13]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "TASK_ID", "tasks"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "tasks", "tasks"], ["expected", "utils", "normalise_json_content", "op", "json"]], "tasks": [["tasks", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "tasks", "tasks"], ["expected", "utils", "normalise_json_content", "TASK_ID", "tasks"]]}, "name": "test_init_with_tasks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_tasks", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "op": "", "tasks": ""}, "variables_p": {"expected": [["str", 0.1929182554536089], ["List[Union[Any, Any]]", 0.10534577506063231], ["aw_core.models.Event", 0.09958588230451705], ["dict", 0.09489984422219604], ["Dict[str, Any]", 0.09058003333464791]], "op": [["str", 0.5358139014888422], ["dict", 0.09362847480092044]], "tasks": [["int", 0.18147863975581224], ["Dict[str, Any]", 0.09442449201492704], ["str", 0.09379868881658482]]}}, {"docstring": {"func": "Test the initializer with a specified run_name.", "long_descr": null, "ret": null}, "fn_lc": [[208, 4], [217, 64]], "fn_var_ln": {"expected": [[214, 8], [214, 16]], "json": [[212, 8], [212, 12]], "op": [[213, 8], [213, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "op", "json"]], "json": [["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_specified_run_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_specified_run_name", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "json": "", "op": ""}, "variables_p": {"expected": [["str", 0.2901583085722231], ["Dict[str, str]", 0.2422955669466451], ["Iterator[str]", 0.12857290225153223], ["int", 0.09678603596105073], ["ChainMap", 0.08076924313442567], ["List[List[int]]", 0.07832196350570829]], "json": [["str", 0.2699412731757981], ["int", 0.1936195401593171], ["List[Tuple[str, str, Any, Any, str]]", 0.11809184487322849], ["List[Dict[str, str]]", 0.10248559526072606]], "op": [["str", 0.17024868905951757], ["bytes", 0.08365138068493222]]}}, {"docstring": {"func": "Test the initializer with a pipeline task.", "long_descr": null, "ret": null}, "fn_lc": [[219, 4], [229, 64]], "fn_var_ln": {"expected": [[226, 8], [226, 16]], "json": [[224, 8], [224, 12]], "op": [[225, 8], [225, 10]], "pipeline_task": [[223, 8], [223, 21]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "pipeline_task", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "op", "json"]], "json": [["json", "NEW_CLUSTER", "RUN_NAME", "pipeline_task"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]], "pipeline_task": [["json", "NEW_CLUSTER", "RUN_NAME", "pipeline_task"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "pipeline_task", "RUN_NAME"]]}, "name": "test_pipeline_task", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_pipeline_task", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "json": "", "op": "", "pipeline_task": ""}, "variables_p": {"expected": [["str", 0.2901583085722231], ["Dict[str, str]", 0.2422955669466451], ["Iterator[str]", 0.12857290225153223], ["int", 0.09678603596105073], ["ChainMap", 0.08076924313442567], ["List[List[int]]", 0.07832196350570829]], "json": [["int", 0.33332872094007276], ["str", 0.280782396294735], ["List[Dict[str, str]]", 0.11484748233316842], ["List[str]", 0.10254105566215575], ["Dict[str, Union[Any, Any]]", 0.06839527600396399]], "op": [["str", 0.17024868905951757], ["bytes", 0.08365138068493222]], "pipeline_task": [["dict", 0.5561594078128184], ["src.models.generic_task.GenericTask", 0.09400453497069527], ["str", 0.07994191522260227]]}}, {"docstring": {"func": "Test the initializer when json and other named parameters are both", "long_descr": "provided. The named parameters should override top level keys in the\njson dict.", "ret": null}, "fn_lc": [[231, 4], [250, 64]], "fn_var_ln": {"expected": [[243, 8], [243, 16]], "json": [[238, 8], [238, 12]], "op": [[242, 8], [242, 10]], "override_new_cluster": [[237, 8], [237, 28]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "override_new_cluster", "NOTEBOOK_TASK", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "json": [["json", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json", "new_cluster", "override_new_cluster"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json", "new_cluster", "override_new_cluster"], ["expected", "utils", "normalise_json_content", "op", "json"]], "override_new_cluster": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json", "new_cluster", "override_new_cluster"], ["expected", "utils", "normalise_json_content", "override_new_cluster", "NOTEBOOK_TASK", "TASK_ID"]]}, "name": "test_init_with_merging", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_merging", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "json": "", "op": "", "override_new_cluster": ""}, "variables_p": {"expected": [["str", 0.909776999563646], ["List[Tuple[str, str, str, str]]", 0.09022300043635402]], "json": [["str", 0.11979417617912902], ["datetime.timedelta", 0.11202911151900807], ["bool", 0.09954498188348557], ["tbump.hooks.Hook", 0.0933631871536723]], "op": [["str", 0.1937943294133325], ["bytes", 0.08329000164996087]], "override_new_cluster": [["str", 0.6284356148805204], ["Dict[str, str]", 0.1895675324103844], ["List[Tuple[str, str]]", 0.08934414921840374]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[252, 4], [267, 64]], "fn_var_ln": {"dag": [[257, 8], [257, 11]], "expected": [[260, 8], [260, 16]], "json": [[253, 8], [253, 12]], "op": [[258, 8], [258, 10]]}, "fn_var_occur": {"dag": [["dag", "DAG", "start_date", "datetime", "now"], ["op", "DatabricksSubmitRunOperator", "dag", "dag", "task_id", "TASK_ID", "json", "json"]], "expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "RENDERED_TEMPLATED_NOTEBOOK_TASK", "TASK_ID"], ["expected", "utils", "normalise_json_content", "op", "json"]], "json": [["json", "NEW_CLUSTER", "TEMPLATED_NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "dag", "dag", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "dag", "dag", "task_id", "TASK_ID", "json", "json"], ["op", "render_template_fields", "context", "DATE"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_templating", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_templating", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "expected": "", "json": "", "op": ""}, "variables_p": {"dag": [["datetime.datetime", 0.2598080646416492], ["datetime.datetime.timedelta", 0.19925008835033625], ["str", 0.11815374287962052], ["datetime.timezone", 0.1145851728642984], ["datetime.date", 0.11387771557957128], ["int", 0.1073443697270644], ["datetime.date.time.timedelta", 0.08698084595745989]], "expected": [["str", 0.5632128723044919], ["bytes", 0.33521771939152867], ["dict", 0.10156940830397941]], "json": [["str", 0.27413441948155187], ["datetime.timedelta", 0.12266200687609556], ["Dict[str, Any]", 0.11695827217794992], ["List[str]", 0.09471637680190532], ["bool", 0.08700980369233666]], "op": [["RuntimeError", 0.11722614343627435], ["int", 0.10355093925517857]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 4], [285, 64]], "fn_var_ln": {"expected": [[277, 8], [277, 16]], "git_source": [[271, 8], [271, 18]], "json": [[270, 8], [270, 12]], "op": [[276, 8], [276, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME", "git_source"], ["expected", "utils", "normalise_json_content", "op", "json"]], "git_source": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "git_source", "git_source", "json", "json"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME", "git_source"]], "json": [["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "git_source", "git_source", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "git_source", "git_source", "json", "json"], ["expected", "utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_git_source", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_git_source", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "git_source": "", "json": "", "op": ""}, "variables_p": {"expected": [["str", 0.2924199027609342], ["Dict[str, str]", 0.24096634828700636], ["Iterator[str]", 0.1431362649210501], ["int", 0.08616589357062344], ["ChainMap", 0.08142067499237048]], "git_source": [["str", 0.7187362383701102], ["Dict[str, str]", 0.10309897204919975], ["int", 0.0876059199507433]], "json": [["str", 0.60570894005163], ["int", 0.10190008610121336], ["List[Tuple[str, str, Any, Any, str]]", 0.09377442083900746]], "op": [["str", 0.36068432233558667], ["int", 0.1239169212208864], ["List[Tuple[Any, Any]]", 0.10343986667907676], ["Dict[str, Dict[str, Any]]", 0.08618461723545304]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[287, 4], [296, 49]], "fn_var_ln": {"exception_message": [[291, 8], [291, 25]], "json": [[288, 8], [288, 12]], "op": [[289, 8], [289, 10]]}, "fn_var_occur": {"exception_message": [["pytest", "raises", "AirflowException", "match", "exception_message"]], "json": [["json", "datetime", "now"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["utils", "normalise_json_content", "op", "json"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["utils", "normalise_json_content", "op", "json"]]}, "name": "test_init_with_bad_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_init_with_bad_type", "ret_exprs": [], "ret_type": "", "variables": {"exception_message": "", "json": "", "op": ""}, "variables_p": {"exception_message": [["Pattern[str]", 0.7339435918685113], ["Dict[str, str]", 0.10032741998133282], ["Dict[str, Union[Any, Any]]", 0.08578190432394314], ["Pattern[bytes]", 0.07994708382621284]], "json": [["datetime.timedelta", 0.5766355603219466], ["str", 0.19732417595595705]], "op": [["str", 0.16984728071358313], ["bytes", 0.08372467743639264]]}}, {"docstring": {"func": "Test the execute function in case where the run is successful.", "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [328, 34]], "fn_var_ln": {"db_mock": [[308, 8], [308, 15]], "expected": [[314, 8], [314, 16]], "get_run": [[310, 8], [310, 23]], "op": [[307, 8], [307, 10]], "run": [[303, 8], [303, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "submit_run", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "submit_run", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["db_mock", "submit_run", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["RUN_ID", "op", "run_id"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"]]}, "name": "test_exec_success", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6130414409840075]], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_exec_success", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.33523732343388424]], "expected": [["str", 0.49515245418898796], ["List[Dict[str, str]]", 0.12846475125328782], ["List[List[int]]", 0.09625688511364726], ["Dict[str, str]", 0.09257215868267855], ["list", 0.08705647464725355]], "get_run": [["ValueError", 0.2187346325067953], ["int", 0.10878712534195305], ["asyncio.exceptions.CancelledError", 0.09605398389504796]], "op": [["str", 0.09035724419082593], ["Optional[str]", 0.08731963296467762], ["int", 0.0865665547386551], ["RuntimeError", 0.08522733480709893]], "run": [["int", 0.3958448731527985], ["str", 0.21261417847446124], ["Dict[str, int]", 0.20079742426718894], ["bool", 0.10267481300094213], ["Dict[str, Union[int, str]]", 0.08806871110460938]]}}, {"docstring": {"func": "Test the execute function in case where the run failed.", "long_descr": null, "ret": null}, "fn_lc": [[331, 4], [364, 34]], "fn_var_ln": {"db_mock": [[340, 8], [340, 15]], "expected": [[347, 8], [347, 16]], "get_run": [[342, 8], [342, 23]], "op": [[339, 8], [339, 10]], "run": [[335, 8], [335, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "submit_run", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "submit_run", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["db_mock", "submit_run", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["RUN_ID", "op", "run_id"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"]]}, "name": "test_exec_failure", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6130414409840075]], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_exec_failure", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.33523732343388424]], "expected": [["str", 0.49515245418898796], ["List[Dict[str, str]]", 0.12846475125328782], ["List[List[int]]", 0.09625688511364726], ["Dict[str, str]", 0.09257215868267855], ["list", 0.08705647464725355]], "get_run": [["ValueError", 0.2187346325067953], ["int", 0.10878712534195305], ["asyncio.exceptions.CancelledError", 0.09605398389504796]], "op": [["str", 0.09035724419082593], ["Optional[str]", 0.08731963296467762], ["int", 0.0865665547386551], ["RuntimeError", 0.08522733480709893]], "run": [["int", 0.3958448731527985], ["str", 0.21261417847446124], ["Dict[str, int]", 0.20079742426718894], ["bool", 0.10267481300094213], ["Dict[str, Union[int, str]]", 0.08806871110460938]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[367, 4], [378, 58]], "fn_var_ln": {"db_mock": [[373, 8], [373, 15]], "op": [[372, 8], [372, 10]], "run": [[368, 8], [368, 11]], "run_id": [[374, 8], [374, 17]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "cancel_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["op", "run_id", "RUN_ID"], ["op", "on_kill"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"]], "run_id": [["op", "run_id", "RUN_ID"]]}, "name": "test_on_kill", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6878547205184379]], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_on_kill", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "op": "", "run": "", "run_id": ""}, "variables_p": {"db_mock": [["jj.mock._remote_mock.RemoteMock", 0.4668550608291052], ["unittesmock.MagicMock", 0.1271777286220149]], "op": [["dict", 0.10205135579355851], ["int", 0.10015113540686589], ["str", 0.09733263275441435], ["Dict[int, bytes]", 0.0971212390707892], ["bytes", 0.08816019027251279]], "run": [["int", 0.3958448731527985], ["str", 0.21261417847446124], ["Dict[str, int]", 0.20079742426718894], ["bool", 0.10267481300094213], ["Dict[str, Union[int, str]]", 0.08806871110460938]], "run_id": [["str", 0.6069144525433596]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[381, 4], [408, 55]], "fn_var_ln": {"db_mock": [[387, 8], [387, 15]], "expected": [[395, 8], [395, 16]], "get_run": [[389, 8], [389, 23]], "op": [[386, 8], [386, 10]], "run": [[382, 8], [382, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "submit_run", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "submit_run", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["db_mock", "submit_run", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["op", "wait_for_termination"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"]]}, "name": "test_wait_for_termination", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.9057257235417646]], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_wait_for_termination", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.33523732343388424]], "expected": [["str", 0.49515245418898796], ["List[Dict[str, str]]", 0.12846475125328782], ["List[List[int]]", 0.09625688511364726], ["Dict[str, str]", 0.09257215868267855], ["list", 0.08705647464725355]], "get_run": [["ValueError", 0.2187346325067953], ["int", 0.10878712534195305], ["asyncio.exceptions.CancelledError", 0.09605398389504796]], "op": [["dict", 0.10344038043475039], ["RuntimeError", 0.09653896621174116]], "run": [["int", 0.3958448731527985], ["str", 0.21261417847446124], ["Dict[str, int]", 0.20079742426718894], ["bool", 0.10267481300094213], ["Dict[str, Union[int, str]]", 0.08806871110460938]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[411, 4], [437, 43]], "fn_var_ln": {"db_mock": [[417, 8], [417, 15]], "expected": [[424, 8], [424, 16]], "op": [[416, 8], [416, 10]], "run": [[412, 8], [412, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "submit_run", "return_value"], ["db_mock", "submit_run", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_not_called"]], "expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["db_mock", "submit_run", "assert_called_once_with", "expected"]], "op": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "wait_for_termination", "False", "json", "run"], ["op", "wait_for_termination"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "wait_for_termination", "False", "json", "run"]]}, "name": "test_no_wait_for_termination", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.9999999999999998]], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunOperator.test_no_wait_for_termination", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.55036791135477], ["unittesmock.MagicMock", 0.11632881798361623]], "expected": [["str", 0.49515245418898796], ["List[Dict[str, str]]", 0.12846475125328782], ["List[List[int]]", 0.09625688511364726], ["Dict[str, str]", 0.09257215868267855], ["list", 0.08705647464725355]], "op": [["str", 0.09916596610945469], ["int", 0.0980450979908047], ["List[str]", 0.07905383921692337], ["Dict[str, Union[Any, Any]]", 0.0750205244088422]], "run": [["int", 0.3869158552526091], ["str", 0.300531244634072], ["bool", 0.10017708154469067]]}}], "name": "TestDatabricksSubmitRunOperator", "q_name": "TestDatabricksSubmitRunOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[440, 0], [523, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test the execute function in case where the run is successful.", "long_descr": null, "ret": null}, "fn_lc": [[442, 4], [473, 34]], "fn_var_ln": {"db_mock": [[451, 8], [451, 15]], "expected": [[460, 8], [460, 16]], "get_run": [[453, 8], [453, 23]], "op": [[450, 8], [450, 10]], "run": [[446, 8], [446, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "submit_run", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "submit_run", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["db_mock", "submit_run", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"]], "op": [["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["op", "run_id", "RUN_ID"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"]]}, "name": "test_execute_task_deferred", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6251135932807198]], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunDeferrableOperator.test_execute_task_deferred", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.33523732343388424]], "expected": [["str", 0.49515245418898796], ["List[Dict[str, str]]", 0.12846475125328782], ["List[List[int]]", 0.09625688511364726], ["Dict[str, str]", 0.09257215868267855], ["list", 0.08705647464725355]], "get_run": [["str", 0.35255782049935847], ["unittesmock.MagicMock", 0.12340820896060228], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.0798466701461229]], "op": [["int", 0.19972266106693382], ["str", 0.09980804022791757], ["RuntimeError", 0.09895436752846944]], "run": [["int", 0.38227233960505536], ["str", 0.31337291293394076], ["bool", 0.10445763764464693]]}}, {"docstring": {"func": "Test `execute_complete` function in case the Trigger has returned a successful completion event.", "long_descr": null, "ret": null}, "fn_lc": [[475, 4], [490, 69]], "fn_var_ln": {"event": [[483, 8], [483, 13]], "op": [[489, 8], [489, 10]], "run": [[479, 8], [479, 11]]}, "fn_var_occur": {"event": [["event", "RUN_ID", "RUN_PAGE_URL", "RunState", "to_json"], ["op", "execute_complete", "context", "None", "event", "event", "None"]], "op": [["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"], ["op", "execute_complete", "context", "None", "event", "event", "None"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"]]}, "name": "test_execute_complete_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunDeferrableOperator.test_execute_complete_success", "ret_exprs": [], "ret_type": "", "variables": {"event": "", "op": "", "run": ""}, "variables_p": {"event": [["List[Dict[str, Any]]", 0.13156053551196661], ["Dict[str, Union[Any, str]]", 0.11555195945310229], ["dict", 0.11227990217740592], ["list", 0.1066906369873949], ["List[Tuple[int, float]]", 0.08424032493374962], ["Dict[str, str]", 0.0794683234732221]], "op": [["int", 0.1868187237641892], ["str", 0.08791534811898812], ["RuntimeError", 0.08728288070032307]], "run": [["int", 0.38227233960505536], ["str", 0.31337291293394076], ["bool", 0.10445763764464693]]}}, {"docstring": {"func": "Test `execute_complete` function in case the Trigger has returned a failure completion event.", "long_descr": null, "ret": null}, "fn_lc": [[493, 4], [517, 58]], "fn_var_ln": {"db_mock": [[512, 8], [512, 15]], "event": [[502, 8], [502, 13]], "get_run": [[514, 8], [514, 23]], "op": [[508, 8], [508, 10]], "run": [[498, 8], [498, 11]], "run_state_failed": [[497, 8], [497, 24]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "submit_run", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"]], "event": [["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"], ["op", "execute_complete", "context", "None", "event", "event"], ["op", "execute_complete", "context", "None", "event", "event"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"]], "op": [["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"], ["op", "execute_complete", "context", "None", "event", "event"], ["op", "execute_complete", "context", "None", "event", "event"]], "run": [["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"]], "run_state_failed": [["run_state_failed", "RunState"], ["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"], ["pytest", "raises", "AirflowException", "match", "run_state_failed"]]}, "name": "test_execute_complete_failure", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6878547205184379]], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunDeferrableOperator.test_execute_complete_failure", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "event": "", "get_run": "", "op": "", "run": "", "run_state_failed": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.3572548363929637], ["unittesmock.MagicMock", 0.1012647391147399]], "event": [["dict", 0.2559837534374355], ["str", 0.17171486003113867], ["Generator[Any, None, None]", 0.1624515630353803], ["List[Dict[str, Any]]", 0.1503948477254126]], "get_run": [["str", 0.35255782049935847], ["unittesmock.MagicMock", 0.12340820896060228], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.0798466701461229]], "op": [["int", 0.19064348483390847], ["str", 0.10354793741542735], ["RuntimeError", 0.09090991725451407]], "run": [["int", 0.38227233960505536], ["str", 0.31337291293394076], ["bool", 0.10445763764464693]], "run_state_failed": [["str", 0.35685620178385025], ["List[Dict[str, Any]]", 0.3442771262617164], ["Dict[str, str]", 0.10710716912083025], ["List[str]", 0.10343355380707248], ["Dict[str, Union[float, str]]", 0.0883259490265306]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[519, 4], [523, 58]], "fn_var_ln": {"event": [[520, 8], [520, 13]], "op": [[521, 8], [521, 10]]}, "fn_var_occur": {"event": [["op", "execute_complete", "context", "None", "event", "event"]], "op": [["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID"], ["op", "execute_complete", "context", "None", "event", "event"]]}, "name": "test_execute_complete_incorrect_event_validation_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksSubmitRunDeferrableOperator.test_execute_complete_incorrect_event_validation_failure", "ret_exprs": [], "ret_type": "", "variables": {"event": "", "op": ""}, "variables_p": {"event": [["list", 0.341405717923962], ["Dict[str, Any]", 0.2128496020958379], ["bool", 0.09528389096565501], ["Type[Tuple[str, ...]]", 0.09251082025817817], ["List[Tuple[int, float]]", 0.0838330244054239]], "op": [["str", 0.3642157980854871], ["dict", 0.09278869135335392], ["int", 0.08805277635292927]]}}], "name": "TestDatabricksSubmitRunDeferrableOperator", "q_name": "TestDatabricksSubmitRunDeferrableOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[526, 0], [874, 69]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test the initializer with the named parameters.", "long_descr": null, "ret": null}, "fn_lc": [[527, 4], [534, 34]], "fn_var_ln": {"expected": [[532, 8], [532, 16]], "op": [[531, 8], [531, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content"], ["expected", "op", "json"]], "op": [["op", "DatabricksRunNowOperator", "job_id", "JOB_ID", "task_id", "TASK_ID"], ["expected", "op", "json"]]}, "name": "test_init_with_named_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_init_with_named_parameters", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "op": ""}, "variables_p": {"expected": [["str", 0.5917653823933786], ["int", 0.21848978446040856], ["List[Tuple[str, str, str, str]]", 0.10298923710725796], ["Tuple[str, str]", 0.08675559603895487]], "op": [["str", 0.4255669914496407], ["int", 0.19542839350844848], ["tuple", 0.10625081763295575], ["dict", 0.09876783820761054]]}}, {"docstring": {"func": "Test the initializer with json data.", "long_descr": null, "ret": null}, "fn_lc": [[536, 4], [559, 34]], "fn_var_ln": {"expected": [[549, 8], [549, 16]], "json": [[540, 8], [540, 12]], "op": [[547, 8], [547, 10]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["expected", "op", "json"]], "json": [["json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "op", "json"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "op", "json"]]}, "name": "test_init_with_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_init_with_json", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "json": "", "op": ""}, "variables_p": {"expected": [["str", 0.5902585569272306], ["list", 0.0859228151571091], ["django.utils.six.moves.str", 0.07939471251631518], ["int", 0.07918620703426119]], "json": [], "op": [["str", 0.309561050853652], ["Type[django.applications.catmaid.models.ChangeRequest]", 0.09408404494869135]]}}, {"docstring": {"func": "Test the initializer when json and other named parameters are both", "long_descr": "provided. The named parameters should override top level keys in the\njson dict.", "ret": null}, "fn_lc": [[561, 4], [591, 34]], "fn_var_ln": {"expected": [[581, 8], [581, 16]], "json": [[569, 8], [569, 12]], "op": [[571, 8], [571, 10]], "override_jar_params": [[568, 8], [568, 27]], "override_notebook_params": [[567, 8], [567, 32]]}, "fn_var_occur": {"expected": [["expected", "utils", "normalise_json_content", "override_notebook_params", "override_jar_params", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["expected", "op", "json"]], "json": [["json", "NOTEBOOK_PARAMS", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["expected", "op", "json"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["expected", "op", "json"]], "override_jar_params": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["expected", "utils", "normalise_json_content", "override_notebook_params", "override_jar_params", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"]], "override_notebook_params": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["expected", "utils", "normalise_json_content", "override_notebook_params", "override_jar_params", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"]]}, "name": "test_init_with_merging", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_init_with_merging", "ret_exprs": [], "ret_type": "", "variables": {"expected": "", "json": "", "op": "", "override_jar_params": "", "override_notebook_params": ""}, "variables_p": {"expected": [["str", 0.5724692363880858], ["django.utils.six.moves.str", 0.09181867604880584]], "json": [["List[int]", 0.09648910790570767]], "op": [["str", 0.5091015757308628], ["Type[django.applications.catmaid.models.ChangeRequest]", 0.09101843458275775], ["Dict[Any, str]", 0.08793841632111567]], "override_jar_params": [["str", 0.33578062553915794], ["int", 0.15540413198325617], ["datetime.datetime.timedelta", 0.12778404013752828], ["datetime.datetime.datetime", 0.12778404013752828], ["Dict[str, List[Any]]", 0.09260743030261805]], "override_notebook_params": [["str", 0.33578062553915794], ["int", 0.15540413198325617], ["datetime.datetime.timedelta", 0.12778404013752828], ["datetime.datetime.datetime", 0.12778404013752828], ["Dict[str, List[Any]]", 0.09260743030261805]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[593, 4], [606, 34]], "fn_var_ln": {"dag": [[596, 8], [596, 11]], "expected": [[599, 8], [599, 16]], "json": [[594, 8], [594, 12]], "op": [[597, 8], [597, 10]]}, "fn_var_occur": {"dag": [["dag", "DAG", "start_date", "datetime", "now"], ["op", "DatabricksRunNowOperator", "dag", "dag", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "RENDERED_TEMPLATED_JAR_PARAMS", "JOB_ID"], ["expected", "op", "json"]], "json": [["json", "NOTEBOOK_PARAMS", "TEMPLATED_JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "dag", "dag", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"], ["expected", "op", "json"]], "op": [["op", "DatabricksRunNowOperator", "dag", "dag", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"], ["op", "render_template_fields", "context", "DATE"], ["expected", "op", "json"]]}, "name": "test_init_with_templating", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_init_with_templating", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "expected": "", "json": "", "op": ""}, "variables_p": {"dag": [["datetime.datetime", 0.3001631322068195], ["str", 0.10916388144305951], ["datetime.date", 0.10578123853155912], ["Tuple[int, int]", 0.10557201959881138], ["datetime.timezone", 0.10352011683434152], ["datetime.datetime.timedelta", 0.10326932120294004], ["Dict[str, str]", 0.08832116821105142], ["datetime.timedelta", 0.08420912197141757]], "expected": [["str", 0.6832354231060114], ["int", 0.1148293377331431], ["Iterator[str]", 0.10862678074149014], ["List[Tuple[str, str, str, str]]", 0.09330845841935542]], "json": [], "op": [["str", 0.13151780675406796], ["OrderedDict[str, str]", 0.09418210916287066], ["List[int]", 0.0760604931179688]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[608, 4], [616, 79]], "fn_var_ln": {"exception_message": [[611, 8], [611, 25]], "json": [[609, 8], [609, 12]]}, "fn_var_occur": {"exception_message": [["pytest", "raises", "AirflowException", "match", "exception_message"]], "json": [["json", "datetime", "now"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"]]}, "name": "test_init_with_bad_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_init_with_bad_type", "ret_exprs": [], "ret_type": "", "variables": {"exception_message": "", "json": ""}, "variables_p": {"exception_message": [["Pattern[str]", 0.7339435918685113], ["Dict[str, str]", 0.10032741998133282], ["Dict[str, Union[Any, Any]]", 0.08578190432394314], ["Pattern[bytes]", 0.07994708382621284]], "json": [["str", 0.25415363309827405], ["Type[backend.server.models.match.Match]", 0.19206578134166183], ["List[str]", 0.11407996729539802], ["datetime.datetime", 0.07881081990593958], ["Tuple[int, int]", 0.07475802700250299]]}}, {"docstring": {"func": "Test the execute function in case where the run is successful.", "long_descr": null, "ret": null}, "fn_lc": [[619, 4], [650, 34]], "fn_var_ln": {"db_mock": [[625, 8], [625, 15]], "expected": [[631, 8], [631, 16]], "get_run": [[627, 8], [627, 23]], "op": [[624, 8], [624, 10]], "run": [[623, 8], [623, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "run_now", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "run_now", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["db_mock", "run_now", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["RUN_ID", "op", "run_id"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]]}, "name": "test_exec_success", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6130414409840075]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_exec_success", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.5846843364103799], ["unittesmock.MagicMock", 0.09892358789999238]], "expected": [["str", 0.18462773522681983], ["Dict[str, Union[float, str]]", 0.10578418542335466], ["ChainMap", 0.09716428696883911], ["List[Dict[str, Any]]", 0.09703183297580159]], "get_run": [["ValueError", 0.2187346325067953], ["int", 0.10878712534195305], ["asyncio.exceptions.CancelledError", 0.09605398389504796]], "op": [["str", 0.8295643231057734]], "run": [["str", 0.27959213953901674], ["List[Tuple[str, Any]]", 0.1286718232568974], ["Set[str]", 0.12121733594107989], ["datetime.datetime", 0.09214211390196471], ["int", 0.09101191404910436], ["ajapaik.ajapaik.models.Album", 0.09094629379946378], ["Dict[str, Dict[str, str]]", 0.08974511590153697]]}}, {"docstring": {"func": "Test the execute function in case where the run failed.", "long_descr": null, "ret": null}, "fn_lc": [[653, 4], [684, 34]], "fn_var_ln": {"db_mock": [[659, 8], [659, 15]], "expected": [[666, 8], [666, 16]], "get_run": [[661, 8], [661, 23]], "op": [[658, 8], [658, 10]], "run": [[657, 8], [657, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "run_now", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "run_now", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["db_mock", "run_now", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["RUN_ID", "op", "run_id"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]]}, "name": "test_exec_failure", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6130414409840075]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_exec_failure", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.5846843364103799], ["unittesmock.MagicMock", 0.09892358789999238]], "expected": [["str", 0.18462773522681983], ["Dict[str, Union[float, str]]", 0.10578418542335466], ["ChainMap", 0.09716428696883911], ["List[Dict[str, Any]]", 0.09703183297580159]], "get_run": [["ValueError", 0.2187346325067953], ["int", 0.10878712534195305], ["asyncio.exceptions.CancelledError", 0.09605398389504796]], "op": [["str", 0.8295643231057734]], "run": [["str", 0.27959213953901674], ["List[Tuple[str, Any]]", 0.1286718232568974], ["Set[str]", 0.12121733594107989], ["datetime.datetime", 0.09214211390196471], ["int", 0.09101191404910436], ["ajapaik.ajapaik.models.Album", 0.09094629379946378], ["Dict[str, Dict[str, str]]", 0.08974511590153697]]}}, {"docstring": {"func": "Test the execute function in case where the run failed.", "long_descr": null, "ret": null}, "fn_lc": [[687, 4], [741, 34]], "fn_var_ln": {"db_mock": [[693, 8], [693, 15]], "expected": [[723, 8], [723, 16]], "get_run": [[695, 8], [695, 23]], "get_run_output": [[716, 8], [716, 30]], "op": [[692, 8], [692, 10]], "run": [[691, 8], [691, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "run_now", "return_value"], ["db_mock", "get_run", "mock_dict", "JOB_ID"], ["db_mock", "get_run_output", "mock_dict"], ["db_mock", "run_now", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["db_mock", "run_now", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "mock_dict", "JOB_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "get_run_output": [["db_mock", "get_run_output", "mock_dict"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["RUN_ID", "op", "run_id"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]]}, "name": "test_exec_failure_with_message", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6130414409840075]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_exec_failure_with_message", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "get_run_output": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.35821134396892], ["unittesmock.MagicMock", 0.09285156151786127]], "expected": [["str", 0.18462773522681983], ["Dict[str, Union[float, str]]", 0.10578418542335466], ["ChainMap", 0.09716428696883911], ["List[Dict[str, Any]]", 0.09703183297580159]], "get_run": [["str", 0.29043907148593995], ["Dict[str, Any]", 0.10644675626774464], ["mock.Mock", 0.10285134320359864]], "get_run_output": [["unittesmock.MagicMock", 0.4749444750692902], ["mock._Call", 0.19550356521183232], ["str", 0.08363415660224112], ["bool", 0.07819463228566241]], "op": [["str", 0.8295643231057734]], "run": [["str", 0.27959213953901674], ["List[Tuple[str, Any]]", 0.1286718232568974], ["Set[str]", 0.12121733594107989], ["datetime.datetime", 0.09214211390196471], ["int", 0.09101191404910436], ["ajapaik.ajapaik.models.Album", 0.09094629379946378], ["Dict[str, Dict[str, str]]", 0.08974511590153697]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[744, 4], [751, 58]], "fn_var_ln": {"db_mock": [[747, 8], [747, 15]], "op": [[746, 8], [746, 10]], "run": [[745, 8], [745, 11]], "run_id": [[748, 8], [748, 17]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "cancel_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "run_id", "RUN_ID"], ["op", "on_kill"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]], "run_id": [["op", "run_id", "RUN_ID"]]}, "name": "test_on_kill", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6878547205184379]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_on_kill", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "op": "", "run": "", "run_id": ""}, "variables_p": {"db_mock": [["jj.mock._remote_mock.RemoteMock", 0.4668550608291052], ["unittesmock.MagicMock", 0.1271777286220149]], "op": [["str", 0.6358678569855938], ["int", 0.0996778167384181], ["Dict[str, Dict[str, Any]]", 0.08992731582142266], ["bool", 0.08614104579014613]], "run": [["str", 0.27959213953901674], ["List[Tuple[str, Any]]", 0.1286718232568974], ["Set[str]", 0.12121733594107989], ["datetime.datetime", 0.09214211390196471], ["int", 0.09101191404910436], ["ajapaik.ajapaik.models.Album", 0.09094629379946378], ["Dict[str, Dict[str, str]]", 0.08974511590153697]], "run_id": [["str", 0.6069144525433596]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[754, 4], [783, 55]], "fn_var_ln": {"db_mock": [[757, 8], [757, 15]], "expected": [[765, 8], [765, 16]], "get_run": [[759, 8], [759, 23]], "op": [[756, 8], [756, 10]], "run": [[755, 8], [755, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "run_now", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "run_now", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["db_mock", "run_now", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "wait_for_termination"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]]}, "name": "test_wait_for_termination", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.9057257235417646]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_wait_for_termination", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.5846843364103799], ["unittesmock.MagicMock", 0.09892358789999238]], "expected": [["str", 0.18462773522681983], ["Dict[str, Union[float, str]]", 0.10578418542335466], ["ChainMap", 0.09716428696883911], ["List[Dict[str, Any]]", 0.09703183297580159]], "get_run": [["ValueError", 0.2187346325067953], ["int", 0.10878712534195305], ["asyncio.exceptions.CancelledError", 0.09605398389504796]], "op": [["str", 0.33811267579900034], ["int", 0.28025214868564885]], "run": [["str", 0.27959213953901674], ["List[Tuple[str, Any]]", 0.1286718232568974], ["Set[str]", 0.12121733594107989], ["datetime.datetime", 0.09214211390196471], ["int", 0.09101191404910436], ["ajapaik.ajapaik.models.Album", 0.09094629379946378], ["Dict[str, Dict[str, str]]", 0.08974511590153697]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[786, 4], [814, 43]], "fn_var_ln": {"db_mock": [[789, 8], [789, 15]], "expected": [[796, 8], [796, 16]], "op": [[788, 8], [788, 10]], "run": [[787, 8], [787, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "run_now", "return_value"], ["db_mock", "run_now", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_not_called"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["db_mock", "run_now", "assert_called_once_with", "expected"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "wait_for_termination", "False", "json", "run"], ["op", "wait_for_termination"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "wait_for_termination", "False", "json", "run"]]}, "name": "test_no_wait_for_termination", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.9999999999999998]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_no_wait_for_termination", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["unittesmock.MagicMock", 0.20595378735377057]], "expected": [["str", 0.18462773522681983], ["Dict[str, Union[float, str]]", 0.10578418542335466], ["ChainMap", 0.09716428696883911], ["List[Dict[str, Any]]", 0.09703183297580159]], "op": [["str", 0.5491297123456551], ["int", 0.1017126924562187], ["bool", 0.0840437891631191], ["Dict[str, Dict[str, Any]]", 0.08348556198112544]], "run": [["str", 0.29140599097739284], ["Set[str]", 0.1250409910319189], ["List[Tuple[str, Any]]", 0.12075474781631157], ["datetime.datetime", 0.09939492706578416], ["Dict[str, Dict[str, str]]", 0.09059192205765831], ["int", 0.08977113350556831], ["ajapaik.ajapaik.models.Album", 0.0887739985187294]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[816, 4], [828, 82]], "fn_var_ln": {"exception_message": [[817, 8], [817, 25]], "run": [[827, 12], [827, 15]]}, "fn_var_occur": {"exception_message": [["pytest", "raises", "AirflowException", "match", "exception_message"], ["pytest", "raises", "AirflowException", "match", "exception_message"], ["pytest", "raises", "AirflowException", "match", "exception_message"]], "run": [["run", "JOB_ID", "JOB_NAME"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "run"], ["run", "JOB_ID"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "run", "job_name", "JOB_NAME"]]}, "name": "test_init_exception_with_job_name_and_job_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_init_exception_with_job_name_and_job_id", "ret_exprs": [], "ret_type": "", "variables": {"exception_message": "", "run": ""}, "variables_p": {"exception_message": [["Type[bytes]", 0.2864728041794684], ["set", 0.13279875300285612], ["str", 0.10291140719556206], ["Dict[Any, List[float]]", 0.10149553991537583], ["Type[str]", 0.09549093472648947], ["Type[int]", 0.09549093472648947], ["dict", 0.08624917372078666]], "run": [["int", 0.6595875794876497], ["float", 0.34041242051235016]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[831, 4], [861, 34]], "fn_var_ln": {"db_mock": [[834, 8], [834, 15]], "expected": [[841, 8], [841, 16]], "get_run": [[837, 8], [837, 23]], "op": [[833, 8], [833, 10]], "run": [[832, 8], [832, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "find_job_id_by_name", "return_value", "JOB_ID"], ["db_mock", "run_now", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "find_job_id_by_name", "assert_called_once_with", "JOB_NAME"], ["db_mock", "run_now", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["db_mock", "run_now", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["RUN_ID", "op", "run_id"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"]]}, "name": "test_exec_with_job_name", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.9067662688979083]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_exec_with_job_name", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Dict[str, Union[Any, int, str]]", 0.08727905874003093], ["Dict[str, int]", 0.08261194794492586], ["mock.Mock", 0.07580398908787725]], "expected": [["str", 0.18462773522681983], ["Dict[str, Union[float, str]]", 0.10578418542335466], ["ChainMap", 0.09716428696883911], ["List[Dict[str, Any]]", 0.09703183297580159]], "get_run": [["ValueError", 0.2187346325067953], ["int", 0.10878712534195305], ["asyncio.exceptions.CancelledError", 0.09605398389504796]], "op": [["str", 0.3042568046084198], ["Dict[int, bytes]", 0.14448371997939335], ["tuple", 0.09937163803316532], ["dict", 0.07931919069931977]], "run": [["str", 0.2878697452423565], ["Set[str]", 0.12195142650135732], ["List[Tuple[str, Any]]", 0.12012058412062572], ["int", 0.09398100808965613], ["Dict[str, Dict[str, str]]", 0.09241409299396652], ["bytes", 0.09022702748175267]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[864, 4], [874, 69]], "fn_var_ln": {"db_mock": [[867, 8], [867, 15]], "exception_message": [[870, 8], [870, 25]], "op": [[866, 8], [866, 10]], "run": [[865, 8], [865, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "find_job_id_by_name", "return_value", "None"], ["db_mock", "find_job_id_by_name", "assert_called_once_with", "JOB_NAME"]], "exception_message": [["exception_message", "JOB_NAME"], ["pytest", "raises", "AirflowException", "match", "exception_message"]], "op": [["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"], ["op", "execute", "None"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"]]}, "name": "test_exec_failure_if_job_id_not_found", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.7972040497960016]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowOperator.test_exec_failure_if_job_id_not_found", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "exception_message": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["mock.Mock", 0.08532518665127438], ["Dict[str, Union[Any, int, str]]", 0.0825763348172746]], "exception_message": [["Dict[Any, str]", 0.6200480090553013], ["dict", 0.1254837942149687], ["bool", 0.08898441760516601], ["Dict[str, str]", 0.0829098828136671], ["Dict[str, Dict[str, Any]]", 0.08257389631089697]], "op": [["str", 0.4195524021689842], ["int", 0.20681222087667192], ["Dict[int, bytes]", 0.10219458717494959], ["Dict[str, Union[int, str]]", 0.09066957677350575]], "run": [["str", 0.2878697452423565], ["Set[str]", 0.12195142650135732], ["List[Tuple[str, Any]]", 0.12012058412062572], ["int", 0.09398100808965613], ["Dict[str, Dict[str, str]]", 0.09241409299396652], ["bytes", 0.09022702748175267]]}}], "name": "TestDatabricksRunNowOperator", "q_name": "TestDatabricksRunNowOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[877, 0], [957, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test the execute function in case where the run is successful.", "long_descr": null, "ret": null}, "fn_lc": [[879, 4], [913, 34]], "fn_var_ln": {"db_mock": [[885, 8], [885, 15]], "expected": [[894, 8], [894, 16]], "get_run": [[887, 8], [887, 23]], "op": [[884, 8], [884, 10]], "run": [[883, 8], [883, 11]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "run_now", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"], ["db_mock", "run_now", "assert_called_once_with", "expected"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"]], "expected": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["db_mock", "run_now", "assert_called_once_with", "expected"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"]], "op": [["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "execute", "None"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["op", "run_id", "RUN_ID"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]]}, "name": "test_execute_task_deferred", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6251135932807198]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowDeferrableOperator.test_execute_task_deferred", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "expected": "", "get_run": "", "op": "", "run": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.5846843364103799], ["unittesmock.MagicMock", 0.09892358789999238]], "expected": [["str", 0.18462773522681983], ["Dict[str, Union[float, str]]", 0.10578418542335466], ["ChainMap", 0.09716428696883911], ["List[Dict[str, Any]]", 0.09703183297580159]], "get_run": [["str", 0.35255782049935847], ["unittesmock.MagicMock", 0.12340820896060228], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.0798466701461229]], "op": [["str", 0.40352211594811227], ["Dict[int, bytes]", 0.09908477152924092], ["List[Tuple[Any, Any]]", 0.09850551734128606], ["dict", 0.09115027011488099], ["int", 0.09001860023196039]], "run": [["int", 0.18731366949221265], ["str", 0.1856996101955214], ["List[Tuple[str, Any]]", 0.13124554334390517], ["Set[str]", 0.10405911326219132], ["datetime.datetime", 0.09509600791133492], ["ajapaik.ajapaik.models.Album", 0.08953322866809706], ["bytes", 0.08872444823626272]]}}, {"docstring": {"func": "Test `execute_complete` function in case the Trigger has returned a successful completion event.", "long_descr": null, "ret": null}, "fn_lc": [[915, 4], [927, 69]], "fn_var_ln": {"event": [[920, 8], [920, 13]], "op": [[926, 8], [926, 10]], "run": [[919, 8], [919, 11]]}, "fn_var_occur": {"event": [["event", "RUN_ID", "RUN_PAGE_URL", "RunState", "to_json"], ["op", "execute_complete", "context", "None", "event", "event", "None"]], "op": [["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "execute_complete", "context", "None", "event", "event", "None"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]]}, "name": "test_execute_complete_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowDeferrableOperator.test_execute_complete_success", "ret_exprs": [], "ret_type": "", "variables": {"event": "", "op": "", "run": ""}, "variables_p": {"event": [["List[Dict[str, Any]]", 0.13156053551196661], ["Dict[str, Union[Any, str]]", 0.11555195945310229], ["dict", 0.11227990217740592], ["list", 0.1066906369873949], ["List[Tuple[int, float]]", 0.08424032493374962], ["Dict[str, str]", 0.0794683234732221]], "op": [["str", 0.5261190090934885], ["int", 0.09256131924269835]], "run": [["int", 0.18731366949221265], ["str", 0.1856996101955214], ["List[Tuple[str, Any]]", 0.13124554334390517], ["Set[str]", 0.10405911326219132], ["datetime.datetime", 0.09509600791133492], ["ajapaik.ajapaik.models.Album", 0.08953322866809706], ["bytes", 0.08872444823626272]]}}, {"docstring": {"func": "Test `execute_complete` function in case the Trigger has returned a failure completion event.", "long_descr": null, "ret": null}, "fn_lc": [[930, 4], [951, 58]], "fn_var_ln": {"db_mock": [[946, 8], [946, 15]], "event": [[936, 8], [936, 13]], "get_run": [[948, 8], [948, 23]], "op": [[942, 8], [942, 10]], "run": [[935, 8], [935, 11]], "run_state_failed": [[934, 8], [934, 24]]}, "fn_var_occur": {"db_mock": [["db_mock", "db_mock_class", "return_value"], ["db_mock", "run_now", "return_value"], ["db_mock", "get_run", "make_run_with_state_mock"]], "event": [["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"], ["op", "execute_complete", "context", "None", "event", "event"], ["op", "execute_complete", "context", "None", "event", "event"]], "get_run": [["db_mock", "get_run", "make_run_with_state_mock"]], "op": [["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "execute_complete", "context", "None", "event", "event"], ["op", "execute_complete", "context", "None", "event", "event"]], "run": [["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"]], "run_state_failed": [["run_state_failed", "RunState"], ["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"], ["pytest", "raises", "AirflowException", "match", "run_state_failed"]]}, "name": "test_execute_complete_failure", "params": {"db_mock_class": "", "self": ""}, "params_descr": {"db_mock_class": "", "self": ""}, "params_occur": {"db_mock_class": [["db_mock", "db_mock_class", "return_value"]], "self": []}, "params_p": {"args": [], "db_mock_class": [["unittesmock.MagicMock", 0.6878547205184379]], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowDeferrableOperator.test_execute_complete_failure", "ret_exprs": [], "ret_type": "", "variables": {"db_mock": "", "event": "", "get_run": "", "op": "", "run": "", "run_state_failed": ""}, "variables_p": {"db_mock": [["Union[mock.AsyncMock, mock.MagicMock]", 0.45629053676225967], ["unittesmock.MagicMock", 0.09973344713962994]], "event": [["dict", 0.2559837534374355], ["str", 0.17171486003113867], ["Generator[Any, None, None]", 0.1624515630353803], ["List[Dict[str, Any]]", 0.1503948477254126]], "get_run": [["str", 0.35255782049935847], ["unittesmock.MagicMock", 0.12340820896060228], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.0798466701461229]], "op": [["str", 0.5261190090934885], ["int", 0.09256131924269835]], "run": [["int", 0.18731366949221265], ["str", 0.1856996101955214], ["List[Tuple[str, Any]]", 0.13124554334390517], ["Set[str]", 0.10405911326219132], ["datetime.datetime", 0.09509600791133492], ["ajapaik.ajapaik.models.Album", 0.08953322866809706], ["bytes", 0.08872444823626272]], "run_state_failed": [["str", 0.35685620178385025], ["List[Dict[str, Any]]", 0.3442771262617164], ["Dict[str, str]", 0.10710716912083025], ["List[str]", 0.10343355380707248], ["Dict[str, Union[float, str]]", 0.0883259490265306]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[953, 4], [957, 58]], "fn_var_ln": {"event": [[954, 8], [954, 13]], "op": [[955, 8], [955, 10]]}, "fn_var_occur": {"event": [["op", "execute_complete", "context", "None", "event", "event"]], "op": [["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID"], ["op", "execute_complete", "context", "None", "event", "event"]]}, "name": "test_execute_complete_incorrect_event_validation_failure", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksRunNowDeferrableOperator.test_execute_complete_incorrect_event_validation_failure", "ret_exprs": [], "ret_type": "", "variables": {"event": "", "op": ""}, "variables_p": {"event": [["list", 0.341405717923962], ["Dict[str, Any]", 0.2128496020958379], ["bool", 0.09528389096565501], ["Type[Tuple[str, ...]]", 0.09251082025817817], ["List[Tuple[int, float]]", 0.0838330244054239]], "op": [["str", 0.3939267378315503], ["int", 0.23105755480195334]]}}], "name": "TestDatabricksRunNowDeferrableOperator", "q_name": "TestDatabricksRunNowDeferrableOperator", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 0], [77, 12]], "fn_var_ln": {"m": [[75, 4], [75, 5]], "return_value": [[76, 4], [76, 18]]}, "fn_var_occur": {"m": [["m", "MagicMock"], ["m", "return_value", "d"]], "return_value": [["m", "return_value", "d"]]}, "name": "mock_dict", "params": {"d": "builtins.dict"}, "params_descr": {"d": ""}, "params_occur": {"d": [["m", "return_value", "d"]]}, "params_p": {"args": [], "d": [["str", 0.20768959049774766], ["Dict[str, Any]", 0.19379876352062253], ["bool", 0.09676385170783329], ["Tuple[int, int]", 0.09595931589606367]], "kwargs": []}, "q_name": "mock_dict", "ret_exprs": ["return m"], "ret_type": "", "ret_type_p": [["str", 0.6061935425820859], ["int", 0.07298675911858743], ["dict", 0.05900973488394317], ["bool", 0.051844082608158114]], "variables": {"m": "", "return_value": ""}, "variables_p": {"m": [["unittesmock.MagicMock", 0.30318857180680264], ["mock.Mock", 0.21449558193622056], ["Union[mock.AsyncMock, mock.MagicMock]", 0.18942027399077357]], "return_value": [["str", 0.42381627195702853], ["int", 0.24676883251223247], ["list", 0.13120591819908167], ["Type[tuple]", 0.11902762681447211], ["Tuple[int, int, int]", 0.0791813505171851]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 0], [93, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "make_run_with_state_mock", "params": {"job_id": "", "lifecycle_state": "builtins.str", "result_state": "builtins.str", "run_id": "", "state_message": "builtins.str"}, "params_descr": {"job_id": "", "lifecycle_state": "", "result_state": "", "run_id": "", "state_message": ""}, "params_occur": {"job_id": [["mock_dict", "job_id", "run_id", "lifecycle_state", "result_state", "state_message"]], "lifecycle_state": [["mock_dict", "job_id", "run_id", "lifecycle_state", "result_state", "state_message"]], "result_state": [["mock_dict", "job_id", "run_id", "lifecycle_state", "result_state", "state_message"]], "run_id": [["mock_dict", "job_id", "run_id", "lifecycle_state", "result_state", "state_message"]], "state_message": [["mock_dict", "job_id", "run_id", "lifecycle_state", "result_state", "state_message"]]}, "params_p": {"args": [], "job_id": [["str", 0.7079403897495101], ["int", 0.19750477126531657]], "kwargs": [], "lifecycle_state": [["str", 0.7079403897495101], ["int", 0.19750477126531657]], "result_state": [["str", 0.7079403897495101], ["int", 0.19750477126531657]], "run_id": [["str", 0.7079403897495101], ["int", 0.19750477126531657]], "state_message": [["str", 0.7079403897495101], ["int", 0.19750477126531657]]}, "q_name": "make_run_with_state_mock", "ret_exprs": ["return mock_dict( { \"job_id\": job_id, \"run_id\": run_id, \"state\": { \"life_cycle_state\": lifecycle_state, \"result_state\": result_state, \"state_message\": state_message, }, })"], "ret_type": "", "ret_type_p": [["dict", 0.2371317991682318], ["Dict[str, Any]", 0.18289266733366782], ["str", 0.09912758800427993]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "datetime", "datetime", "unittest", "mock", "unittest", "mock", "MagicMock", "pytest", "airflow", "exceptions", "AirflowException", "TaskDeferred", "airflow", "models", "DAG", "airflow", "providers", "databricks", "hooks", "databricks", "RunState", "airflow", "providers", "databricks", "operators", "databricks", "DatabricksRunNowDeferrableOperator", "DatabricksRunNowOperator", "DatabricksSubmitRunDeferrableOperator", "DatabricksSubmitRunOperator", "airflow", "providers", "databricks", "triggers", "databricks", "DatabricksExecutionTrigger", "airflow", "providers", "databricks", "utils", "databricks", "utils"], "mod_var_ln": {"DATE": [[38, 0], [38, 4]], "DBT_TASK": [[67, 0], [67, 8]], "DEFAULT_CONN_ID": [[40, 0], [40, 15]], "EXISTING_CLUSTER_ID": [[55, 0], [55, 19]], "JAR_PARAMS": [[62, 0], [62, 10]], "JOB_ID": [[59, 0], [59, 6]], "JOB_NAME": [[60, 0], [60, 8]], "NEW_CLUSTER": [[49, 0], [49, 11]], "NOTEBOOK_PARAMS": [[61, 0], [61, 15]], "NOTEBOOK_TASK": [[41, 0], [41, 13]], "PYTHON_PARAMS": [[65, 0], [65, 13]], "RENDERED_TEMPLATED_JAR_PARAMS": [[63, 0], [63, 29]], "RENDERED_TEMPLATED_NOTEBOOK_TASK": [[43, 0], [43, 32]], "RUN_ID": [[57, 0], [57, 6]], "RUN_NAME": [[56, 0], [56, 8]], "RUN_PAGE_URL": [[58, 0], [58, 12]], "SPARK_JAR_TASK": [[44, 0], [44, 14]], "SPARK_PYTHON_TASK": [[45, 0], [45, 17]], "SPARK_SUBMIT_PARAMS": [[66, 0], [66, 19]], "SPARK_SUBMIT_TASK": [[46, 0], [46, 17]], "TASK_ID": [[39, 0], [39, 7]], "TEMPLATED_JAR_PARAMS": [[64, 0], [64, 20]], "TEMPLATED_NOTEBOOK_TASK": [[42, 0], [42, 23]]}, "mod_var_occur": {"DATE": [["RENDERED_TEMPLATED_NOTEBOOK_TASK", "DATE"], ["RENDERED_TEMPLATED_JAR_PARAMS", "DATE"], ["op", "render_template_fields", "context", "DATE"], ["op", "render_template_fields", "context", "DATE"]], "DBT_TASK": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "git_source", "git_source"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "json", "json"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK"], ["json", "DBT_TASK", "NEW_CLUSTER"]], "DEFAULT_CONN_ID": [["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"], ["db_mock_class", "assert_called_once_with", "DEFAULT_CONN_ID", "retry_limit", "op", "databricks_retry_limit", "retry_delay", "op", "databricks_retry_delay", "retry_args", "None", "caller"]], "EXISTING_CLUSTER_ID": [], "JAR_PARAMS": [["json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["json", "NOTEBOOK_PARAMS", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"]], "JOB_ID": [["op", "DatabricksRunNowOperator", "job_id", "JOB_ID", "task_id", "TASK_ID"], ["json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["expected", "utils", "normalise_json_content", "override_notebook_params", "override_jar_params", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "dag", "dag", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "RENDERED_TEMPLATED_JAR_PARAMS", "JOB_ID"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["db_mock", "get_run", "mock_dict", "JOB_ID"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "wait_for_termination", "False", "json", "run"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "job_name", "JOB_NAME"], ["run", "JOB_ID", "JOB_NAME"], ["run", "JOB_ID"], ["db_mock", "find_job_id_by_name", "return_value", "JOB_ID"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID"]], "JOB_NAME": [["DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "job_name", "JOB_NAME"], ["run", "JOB_ID", "JOB_NAME"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "run", "job_name", "JOB_NAME"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"], ["db_mock", "find_job_id_by_name", "assert_called_once_with", "JOB_NAME"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"], ["exception_message", "JOB_NAME"], ["db_mock", "find_job_id_by_name", "assert_called_once_with", "JOB_NAME"]], "NEW_CLUSTER": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "notebook_task", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_python_task", "SPARK_PYTHON_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_PYTHON_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_submit_task", "SPARK_SUBMIT_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_SUBMIT_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "git_source", "git_source"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "json", "json"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK"], ["json", "DBT_TASK", "NEW_CLUSTER"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["tasks", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["json", "NEW_CLUSTER", "RUN_NAME", "pipeline_task"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "pipeline_task", "RUN_NAME"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["json", "NEW_CLUSTER", "TEMPLATED_NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "RENDERED_TEMPLATED_NOTEBOOK_TASK", "TASK_ID"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME", "git_source"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"]], "NOTEBOOK_PARAMS": [["json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["json", "NOTEBOOK_PARAMS", "JAR_PARAMS"], ["json", "NOTEBOOK_PARAMS", "TEMPLATED_JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "RENDERED_TEMPLATED_JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"]], "NOTEBOOK_TASK": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "notebook_task", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["tasks", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "override_new_cluster", "NOTEBOOK_TASK", "TASK_ID"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME", "git_source"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["run", "NEW_CLUSTER", "NOTEBOOK_TASK"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS", "JOB_ID"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"], ["run", "NOTEBOOK_PARAMS", "NOTEBOOK_TASK", "JAR_PARAMS"]], "PYTHON_PARAMS": [["json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["expected", "utils", "normalise_json_content", "override_notebook_params", "override_jar_params", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"]], "RENDERED_TEMPLATED_JAR_PARAMS": [["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "RENDERED_TEMPLATED_JAR_PARAMS", "JOB_ID"]], "RENDERED_TEMPLATED_NOTEBOOK_TASK": [["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "RENDERED_TEMPLATED_NOTEBOOK_TASK", "TASK_ID"]], "RUN_ID": [["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["RUN_ID", "op", "run_id"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["RUN_ID", "op", "run_id"], ["op", "run_id", "RUN_ID"], ["db_mock", "cancel_run", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["op", "run_id", "RUN_ID"], ["event", "RUN_ID", "RUN_PAGE_URL", "RunState", "to_json"], ["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["RUN_ID", "op", "run_id"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["RUN_ID", "op", "run_id"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["RUN_ID", "op", "run_id"], ["op", "run_id", "RUN_ID"], ["db_mock", "cancel_run", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["db_mock", "get_run", "assert_called_once_with", "RUN_ID"], ["RUN_ID", "op", "run_id"], ["db_mock", "get_run_page_url", "assert_called_once_with", "RUN_ID"], ["op", "run_id", "RUN_ID"], ["event", "RUN_ID", "RUN_PAGE_URL", "RunState", "to_json"], ["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"]], "RUN_NAME": [["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["json", "NEW_CLUSTER", "RUN_NAME", "pipeline_task"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "pipeline_task", "RUN_NAME"], ["json", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "RUN_NAME", "git_source"]], "RUN_PAGE_URL": [["event", "RUN_ID", "RUN_PAGE_URL", "RunState", "to_json"], ["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"], ["event", "RUN_ID", "RUN_PAGE_URL", "RunState", "to_json"], ["event", "RUN_ID", "RUN_PAGE_URL", "run_state_failed", "to_json"]], "SPARK_JAR_TASK": [], "SPARK_PYTHON_TASK": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_python_task", "SPARK_PYTHON_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_PYTHON_TASK", "TASK_ID"]], "SPARK_SUBMIT_PARAMS": [["json", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["expected", "utils", "normalise_json_content", "NOTEBOOK_PARAMS", "JAR_PARAMS", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["expected", "utils", "normalise_json_content", "override_notebook_params", "override_jar_params", "PYTHON_PARAMS", "SPARK_SUBMIT_PARAMS", "JOB_ID"]], "SPARK_SUBMIT_TASK": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_submit_task", "SPARK_SUBMIT_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_SUBMIT_TASK", "TASK_ID"]], "TASK_ID": [["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "notebook_task", "NOTEBOOK_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_python_task", "SPARK_PYTHON_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_PYTHON_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "spark_submit_task", "SPARK_SUBMIT_TASK"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "SPARK_SUBMIT_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "git_source", "git_source"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK", "json", "json"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "DBT_TASK", "git_source", "TASK_ID"], ["DatabricksSubmitRunOperator", "task_id", "TASK_ID", "new_cluster", "NEW_CLUSTER", "dbt_task", "DBT_TASK"], ["DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "tasks", "tasks"], ["expected", "utils", "normalise_json_content", "TASK_ID", "tasks"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json", "new_cluster", "override_new_cluster"], ["expected", "utils", "normalise_json_content", "override_new_cluster", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "dag", "dag", "task_id", "TASK_ID", "json", "json"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "RENDERED_TEMPLATED_NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "git_source", "git_source", "json", "json"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "json"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunOperator", "task_id", "TASK_ID", "wait_for_termination", "False", "json", "run"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"], ["expected", "utils", "normalise_json_content", "NEW_CLUSTER", "NOTEBOOK_TASK", "TASK_ID"], ["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"], ["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID", "json", "run"], ["op", "DatabricksSubmitRunDeferrableOperator", "task_id", "TASK_ID"], ["op", "DatabricksRunNowOperator", "job_id", "JOB_ID", "task_id", "TASK_ID"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "json", "job_id", "JOB_ID", "notebook_params", "override_notebook_params", "python_params", "PYTHON_PARAMS", "jar_params", "override_jar_params", "spark_submit_params", "SPARK_SUBMIT_PARAMS"], ["op", "DatabricksRunNowOperator", "dag", "dag", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "json"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "wait_for_termination", "False", "json", "run"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "job_name", "JOB_NAME"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "run"], ["DatabricksRunNowOperator", "task_id", "TASK_ID", "json", "run", "job_name", "JOB_NAME"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"], ["op", "DatabricksRunNowOperator", "task_id", "TASK_ID", "job_name", "JOB_NAME", "json", "run"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID", "json", "run"], ["op", "DatabricksRunNowDeferrableOperator", "task_id", "TASK_ID", "job_id", "JOB_ID"]], "TEMPLATED_JAR_PARAMS": [["json", "NOTEBOOK_PARAMS", "TEMPLATED_JAR_PARAMS"]], "TEMPLATED_NOTEBOOK_TASK": [["json", "NEW_CLUSTER", "TEMPLATED_NOTEBOOK_TASK"]]}, "no_types_annot": {"D": 4, "I": 0, "U": 243}, "session_id": "W6u-wNgmOm0wxW6MM8inhW0JcLKntnk4vBUiVuZLopY", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"DATE": "", "DBT_TASK": "", "DEFAULT_CONN_ID": "", "EXISTING_CLUSTER_ID": "", "JAR_PARAMS": "", "JOB_ID": "", "JOB_NAME": "", "NEW_CLUSTER": "", "NOTEBOOK_PARAMS": "", "NOTEBOOK_TASK": "", "PYTHON_PARAMS": "", "RENDERED_TEMPLATED_JAR_PARAMS": "", "RENDERED_TEMPLATED_NOTEBOOK_TASK": "", "RUN_ID": "", "RUN_NAME": "", "RUN_PAGE_URL": "", "SPARK_JAR_TASK": "", "SPARK_PYTHON_TASK": "", "SPARK_SUBMIT_PARAMS": "", "SPARK_SUBMIT_TASK": "", "TASK_ID": "", "TEMPLATED_JAR_PARAMS": "", "TEMPLATED_NOTEBOOK_TASK": ""}, "variables_p": {"DATE": [["str", 0.4124593876121368], ["datetime.datetime.date", 0.30677229978154685], ["datetime.date", 0.17345375632646748], ["Pattern[str]", 0.10731455627984883]], "DBT_TASK": [["str", 0.2358419210842201], ["Tuple[int]", 0.21278789583980134], ["bytes", 0.10274951387809292], ["src.models.generic_task.GenericTask", 0.09790761207014584], ["vjemmie.utils.voting.VotingSession", 0.08018271668188973]], "DEFAULT_CONN_ID": [["int", 0.3299150728694782], ["str", 0.12578437363633999], ["Pattern[Any]", 0.0942057377488627], ["List[str]", 0.08231601546191053], ["Dict[str, Optional[str]]", 0.08142270664387614]], "EXISTING_CLUSTER_ID": [["Optional[str]", 0.3], ["int", 0.3], ["str", 0.19999999999999998], ["Optional[int]", 0.09999999999999999]], "JAR_PARAMS": [], "JOB_ID": [["str", 0.7117692262964421], ["list", 0.10416447776174982], ["int", 0.09421386231443318]], "JOB_NAME": [["str", 1.0]], "NEW_CLUSTER": [["str", 0.6031947999722238], ["Tuple[int]", 0.12710626840461328], ["Dict[str, str]", 0.08399721507874365]], "NOTEBOOK_PARAMS": [], "NOTEBOOK_TASK": [["str", 0.5372575499393484], ["Tuple[int]", 0.12530385441619654], ["bytes", 0.09924006236323182], ["RuntimeError", 0.07794055678954806]], "PYTHON_PARAMS": [], "RENDERED_TEMPLATED_JAR_PARAMS": [["str", 0.6222374213931942], ["List[Dict[str, str]]", 0.09262907674223177], ["int", 0.09262907674223177]], "RENDERED_TEMPLATED_NOTEBOOK_TASK": [["str", 0.8241513373205214], ["int", 0.091361570613146], ["Dict[str, Union[int, str]]", 0.08448709206633259]], "RUN_ID": [["str", 0.27058936070542533], ["int", 0.2628776143871401], ["dict", 0.09525839204359472]], "RUN_NAME": [["str", 1.0]], "RUN_PAGE_URL": [["str", 0.22824200787715465], ["List[str]", 0.11108276270187746], ["dict", 0.10107292080579373], ["Dict[str, str]", 0.10038096601375472], ["tagdir.models.Attr", 0.0924815074582216], ["Dict[str, Any]", 0.08946117000603053]], "SPARK_JAR_TASK": [["str", 0.3], ["int", 0.3], ["bool", 0.19999999999999998], ["Optional[int]", 0.09999999999999999], ["list", 0.09999999999999999]], "SPARK_PYTHON_TASK": [["dict", 0.36810506275500127], ["str", 0.24023640229074683], ["Dict[str, int]", 0.09556695310769958], ["src.models.generic_task.GenericTask", 0.09149040036119878], ["bytes", 0.08970018308438758]], "SPARK_SUBMIT_PARAMS": [], "SPARK_SUBMIT_TASK": [["dict", 0.36810506275500127], ["str", 0.24023640229074683], ["Dict[str, int]", 0.09556695310769958], ["src.models.generic_task.GenericTask", 0.09149040036119878], ["bytes", 0.08970018308438758]], "TASK_ID": [["str", 0.9213700392420038], ["Optional[str]", 0.07862996075799636]], "TEMPLATED_JAR_PARAMS": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "TEMPLATED_NOTEBOOK_TASK": [["bool", 0.23758969161724525], ["int", 0.17591823027509923], ["list", 0.13706587352156835], ["datetime.datetime.timedelta", 0.09540215752379423]]}}}