{"error": null, "response": {"classes": [{"cls_lc": [[61, 0], [101, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [78, 9]], "fn_var_ln": {"args": [[63, 8], [63, 12]], "dag": [[64, 8], [64, 16]], "partition_sensor": [[66, 8], [66, 29]]}, "fn_var_occur": {"args": [["args", "DEFAULT_DATE"], ["self", "dag", "DAG", "default_args", "args"]], "dag": [["self", "dag", "DAG", "default_args", "args"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]], "partition_sensor": [["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "DAG", "default_args", "args"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksPartitionSensor.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag": "", "partition_sensor": ""}, "variables_p": {"args": [["dict", 0.23158237319952885], ["Tuple[Any, Any]", 0.09138477310665434]], "dag": [["int", 0.18854707034732632], ["list", 0.1859525269477546], ["float", 0.15356740251592638], ["datetime.datetime.timedelta", 0.09316710108209444], ["Tuple[int, int]", 0.08421609126673803]], "partition_sensor": [["str", 0.4887858203845979], ["List[str]", 0.24753846373444258], ["int", 0.08791794393968967], ["bool", 0.08787888597063488]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 4], [84, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "partition_sensor", "databricks_conn_id"], ["self", "partition_sensor", "task_id"], ["self", "partition_sensor", "_sql_warehouse_name"], ["self", "partition_sensor", "poke_interval"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksPartitionSensor.test_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 4], [92, 69]], "fn_var_ln": {"return_value": [[91, 8], [91, 30]]}, "fn_var_occur": {"return_value": [["mock_poke", "return_value", "sensor_poke_result"]]}, "name": "test_poke", "params": {"expected_poke_result": "", "mock_poke": "", "self": "", "sensor_poke_result": ""}, "params_descr": {"expected_poke_result": "", "mock_poke": "", "self": "", "sensor_poke_result": ""}, "params_occur": {"expected_poke_result": [["self", "partition_sensor", "poke", "expected_poke_result"]], "mock_poke": [["mock_poke", "return_value", "sensor_poke_result"]], "self": [["self", "partition_sensor", "poke", "expected_poke_result"]], "sensor_poke_result": [["mock_poke", "return_value", "sensor_poke_result"]]}, "params_p": {"args": [], "expected_poke_result": [], "kwargs": [], "mock_poke": [], "self": [], "sensor_poke_result": []}, "q_name": "TestDatabricksPartitionSensor.test_poke", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["int", 0.2854560711354669], ["str", 0.22297769573804777], ["Dict[str, Dict[str, Any]]", 0.09353613298236951], ["List[Dict[str, str]]", 0.07299156962240015]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [96, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_unsupported_conn_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "partition_sensor", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDatabricksPartitionSensor.test_unsupported_conn_type", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [101, 45]], "fn_var_ln": {"return_value": [[100, 8], [100, 33]]}, "fn_var_occur": {"return_value": [["patched_poke", "return_value", "True"]]}, "name": "test_partition_sensor", "params": {"patched_poke": "", "self": ""}, "params_descr": {"patched_poke": "", "self": ""}, "params_occur": {"patched_poke": [["patched_poke", "return_value", "True"]], "self": [["self", "partition_sensor", "poke"]]}, "params_p": {"args": [], "kwargs": [], "patched_poke": [], "self": []}, "q_name": "TestDatabricksPartitionSensor.test_partition_sensor", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.1523790952946183], ["Optional[bytes]", 0.12410921896315463], ["Dict[str, Union[int, str]]", 0.08109799861621803], ["Tuple[int, int]", 0.07240470691961179], ["str", 0.06900037033705529]]}}], "name": "TestDatabricksPartitionSensor", "q_name": "TestDatabricksPartitionSensor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "datetime", "timedelta", "unittest", "mock", "patch", "pytest", "airflow", "exceptions", "AirflowException", "airflow", "models", "DAG", "airflow", "providers", "common", "sql", "hooks", "sql", "fetch_all_handler", "airflow", "providers", "databricks", "sensors", "databricks_partition", "DatabricksPartitionSensor", "airflow", "utils", "timezone"], "mod_var_ln": {"DEFAULT_CALLER": [[43, 0], [43, 14]], "DEFAULT_CATALOG": [[39, 0], [39, 15]], "DEFAULT_CONN_ID": [[33, 0], [33, 15]], "DEFAULT_DATE": [[45, 0], [45, 12]], "DEFAULT_HTTP_PATH": [[41, 0], [41, 17]], "DEFAULT_PARTITION": [[44, 0], [44, 17]], "DEFAULT_SCHEMA": [[38, 0], [38, 14]], "DEFAULT_SQL_WAREHOUSE": [[42, 0], [42, 21]], "DEFAULT_TABLE": [[40, 0], [40, 13]], "HOST": [[34, 0], [34, 4]], "HOST_WITH_SCHEME": [[35, 0], [35, 16]], "PERSONAL_ACCESS_TOKEN": [[36, 0], [36, 21]], "TASK_ID": [[32, 0], [32, 7]], "TIMESTAMP_TEST": [[47, 0], [47, 14]], "sql_sensor": [[49, 0], [49, 10]]}, "mod_var_occur": {"DEFAULT_CALLER": [], "DEFAULT_CATALOG": [["sql_sensor", "DatabricksPartitionSensor", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "task_id", "TASK_ID", "table_name", "DEFAULT_TABLE", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "partitions", "DEFAULT_PARTITION", "handler", "fetch_all_handler"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]], "DEFAULT_CONN_ID": [["sql_sensor", "DatabricksPartitionSensor", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "task_id", "TASK_ID", "table_name", "DEFAULT_TABLE", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "partitions", "DEFAULT_PARTITION", "handler", "fetch_all_handler"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]], "DEFAULT_DATE": [["args", "DEFAULT_DATE"], ["self", "partition_sensor", "run", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "ignore_ti_state", "True"]], "DEFAULT_HTTP_PATH": [], "DEFAULT_PARTITION": [["sql_sensor", "DatabricksPartitionSensor", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "task_id", "TASK_ID", "table_name", "DEFAULT_TABLE", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "partitions", "DEFAULT_PARTITION", "handler", "fetch_all_handler"]], "DEFAULT_SCHEMA": [["sql_sensor", "DatabricksPartitionSensor", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "task_id", "TASK_ID", "table_name", "DEFAULT_TABLE", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "partitions", "DEFAULT_PARTITION", "handler", "fetch_all_handler"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]], "DEFAULT_SQL_WAREHOUSE": [["sql_sensor", "DatabricksPartitionSensor", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "task_id", "TASK_ID", "table_name", "DEFAULT_TABLE", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "partitions", "DEFAULT_PARTITION", "handler", "fetch_all_handler"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]], "DEFAULT_TABLE": [["sql_sensor", "DatabricksPartitionSensor", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "task_id", "TASK_ID", "table_name", "DEFAULT_TABLE", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "partitions", "DEFAULT_PARTITION", "handler", "fetch_all_handler"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]], "HOST": [], "HOST_WITH_SCHEME": [], "PERSONAL_ACCESS_TOKEN": [], "TASK_ID": [["sql_sensor", "DatabricksPartitionSensor", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "task_id", "TASK_ID", "table_name", "DEFAULT_TABLE", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "partitions", "DEFAULT_PARTITION", "handler", "fetch_all_handler"], ["self", "partition_sensor", "DatabricksPartitionSensor", "task_id", "TASK_ID", "databricks_conn_id", "DEFAULT_CONN_ID", "sql_warehouse_name", "DEFAULT_SQL_WAREHOUSE", "dag", "self", "dag", "schema", "DEFAULT_SCHEMA", "catalog", "DEFAULT_CATALOG", "table_name", "DEFAULT_TABLE", "partitions", "partition_operator", "timeout", "poke_interval"]], "TIMESTAMP_TEST": [], "sql_sensor": []}, "no_types_annot": {"D": 0, "I": 0, "U": 29}, "session_id": "0Nxg3fLKn6eQDkthPnGfh7BC0SHI78pt3TxSxyESQG4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_CALLER": "", "DEFAULT_CATALOG": "", "DEFAULT_CONN_ID": "", "DEFAULT_DATE": "", "DEFAULT_HTTP_PATH": "", "DEFAULT_PARTITION": "", "DEFAULT_SCHEMA": "", "DEFAULT_SQL_WAREHOUSE": "", "DEFAULT_TABLE": "", "HOST": "", "HOST_WITH_SCHEME": "", "PERSONAL_ACCESS_TOKEN": "", "TASK_ID": "", "TIMESTAMP_TEST": "", "sql_sensor": ""}, "variables_p": {"DEFAULT_CALLER": [["str", 0.4], ["int", 0.30000000000000004], ["List[Tuple[str, int]]", 0.1], ["datetime.timedelta", 0.1]], "DEFAULT_CATALOG": [["str", 0.48374398213432734], ["Set[str]", 0.13651583973130088], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.09070122419782892]], "DEFAULT_CONN_ID": [["str", 0.8226908142416739], ["int", 0.09402963060242353], ["Optional[int]", 0.08327955515590255]], "DEFAULT_DATE": [["Pattern[str]", 0.18193431109444702], ["datetime.datetime", 0.1626380209492096], ["Tuple[Tuple[str, str], Tuple[str, str], Tuple[str, str]]", 0.09884336544871045], ["datetime.timedelta", 0.09424032066145124], ["str", 0.09234388639912715], ["Dict[str, str]", 0.09177286515399714], ["Dict[str, Any]", 0.0902837556392849]], "DEFAULT_HTTP_PATH": [["str", 0.9999999999999999]], "DEFAULT_PARTITION": [["str", 0.48374398213432734], ["Set[str]", 0.13651583973130088], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.09070122419782892]], "DEFAULT_SCHEMA": [["str", 0.48374398213432734], ["Set[str]", 0.13651583973130088], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.09070122419782892]], "DEFAULT_SQL_WAREHOUSE": [["str", 0.48374398213432734], ["Set[str]", 0.13651583973130088], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.09070122419782892]], "DEFAULT_TABLE": [["str", 0.7082261104099903]], "HOST": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "HOST_WITH_SCHEME": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "PERSONAL_ACCESS_TOKEN": [["str", 0.30000000000000004], ["datetime.timedelta", 0.2], ["Optional[str]", 0.2], ["int", 0.1]], "TASK_ID": [["str", 0.6216565201594014], ["Set[int]", 0.1922940920317029], ["int", 0.09473617732342314], ["bytes", 0.09131321048547253]], "TIMESTAMP_TEST": [["str", 0.49999999999999994], ["list", 0.09999999999999999], ["bool", 0.09999999999999999], ["Type[object]", 0.09999999999999999], ["Dict[str, Union[Any, Any, Any]]", 0.09999999999999999], ["List[Tuple[Any, ...]]", 0.09999999999999999]], "sql_sensor": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}