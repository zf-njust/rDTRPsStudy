{"error": null, "response": {"classes": [{"cls_lc": [[58, 0], [458, 49]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [66, 24]], "fn_var_ln": {"connection": [[61, 8], [61, 18]], "extra": [[64, 8], [64, 24]], "login": [[63, 8], [63, 24]], "old_login": [[62, 8], [62, 17]]}, "fn_var_occur": {"connection": [["connection", "session", "query", "Connection", "filter", "Connection", "conn_id", "first"], ["old_login", "connection", "login"], ["connection", "login", "login"], ["connection", "extra"]], "extra": [["connection", "extra"]], "login": [["old_login", "connection", "login"], ["connection", "login", "login"]], "old_login": [["old_login", "connection", "login"]]}, "name": "update_connection", "params": {"login": "", "self": "", "session": ""}, "params_descr": {"login": "", "self": "", "session": ""}, "params_occur": {"login": [["old_login", "connection", "login"], ["connection", "login", "login"]], "self": [], "session": [["connection", "session", "query", "Connection", "filter", "Connection", "conn_id", "first"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "login": [["Dict[str, Any]", 0.19193198297043215], ["dict", 0.11043948820293746], ["users.models.JustfixUser", 0.10776255765361054], ["bool", 0.09885056059924237], ["Callable", 0.09527472993908963]], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.49087492659541937], ["grouper.models.base.session.Session", 0.12520876119433486], ["models.Queue", 0.10536245002047256], ["str", 0.09068574619576976]]}, "q_name": "TestSFTPHook.update_connection", "ret_exprs": ["return old_login"], "ret_type": "", "ret_type_p": [["List[int]", 0.21966375763869592], ["int", 0.09750077814090401], ["multinedb.models.workspace.Workspace", 0.09085888716852594], ["Type", 0.0890862839250657]], "variables": {"connection": "", "extra": "", "login": "", "old_login": ""}, "variables_p": {"connection": [["str", 0.3722109349115896], ["int", 0.1098597027244129], ["Union[Literal, str]", 0.08715930664387195]], "extra": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "login": [["pymysql.connections.Connection", 0.24422353926856494], ["str", 0.18518668311067288]], "old_login": [["dict", 0.17706722102575284], ["Tuple[str, str, str, str, str]", 0.11000578585780785], ["int", 0.09940406387221389]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [70, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_create_additional_test_file", "params": {"file_name": "", "self": ""}, "params_descr": {"file_name": "", "self": ""}, "params_occur": {"file_name": [["open", "os", "path", "join", "self", "temp_dir", "file_name", "file"]], "self": [["open", "os", "path", "join", "self", "temp_dir", "file_name", "file"]]}, "params_p": {"args": [], "file_name": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook._create_additional_test_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Define default connection during tests and create directory structure.", "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [94, 46]], "fn_var_ln": {"hook": [[77, 8], [77, 17]], "old_login": [[76, 8], [76, 22]], "temp_dir": [[87, 8], [87, 21]]}, "fn_var_occur": {"hook": [["self", "hook", "SFTPHook"]], "old_login": [["self", "old_login", "self", "update_connection", "SFTP_CONNECTION_USER"], ["self", "update_connection", "self", "old_login"]], "temp_dir": [["temp_dir", "tmp_path_factory", "mktemp"], ["os", "makedirs", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR"], ["open", "os", "path", "join", "temp_dir", "file_name", "file"], ["open", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS", "file"], ["os", "mkfifo", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "FIFO_FOR_TESTS"], ["self", "temp_dir", "str", "temp_dir"], ["shutil", "rmtree", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS"], ["os", "remove", "os", "path", "join", "temp_dir", "file_name"]]}, "name": "setup_test_cases", "params": {"self": "", "tmp_path_factory": ""}, "params_descr": {"self": "", "tmp_path_factory": ""}, "params_occur": {"self": [["self", "old_login", "self", "update_connection", "SFTP_CONNECTION_USER"], ["self", "hook", "SFTPHook"], ["self", "temp_dir", "str", "temp_dir"], ["self", "update_connection", "self", "old_login"]], "tmp_path_factory": [["temp_dir", "tmp_path_factory", "mktemp"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path_factory": [["str", 0.2966186012361394], ["Sequence[str]", 0.10231710675474211]]}, "q_name": "TestSFTPHook.setup_test_cases", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "old_login": "", "temp_dir": ""}, "variables_p": {"hook": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "old_login": [["int", 0.37758933136977474], ["str", 0.3310289558465862], ["set", 0.12113073404413442], ["float", 0.0896848453864865], ["Dict[str, int]", 0.08056613335301803]], "temp_dir": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [98, 54]], "fn_var_ln": {"output": [[97, 8], [97, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_conn"], ["isinstance", "output", "paramiko", "SFTPClient"]]}, "name": "test_get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["int", 0.39239372819466367], ["bytes", 0.2723995183595889], ["str", 0.18920838058237627], ["List[int]", 0.1459983728633709]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [104, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_close_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "conn", "self", "hook", "get_conn"], ["self", "hook", "conn", "None"], ["self", "hook", "close_conn"], ["self", "hook", "conn", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_close_conn", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [108, 42]], "fn_var_ln": {"output": [[107, 8], [107, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "describe_directory", "self", "temp_dir"], ["TMP_DIR_FOR_TESTS", "output"]]}, "name": "test_describe_directory", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "describe_directory", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_describe_directory", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.4703627005911064], ["dict", 0.3100540235223925], ["Tuple[str, str, str]", 0.13513937393857695]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [112, 50]], "fn_var_ln": {"output": [[111, 8], [111, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS"]]}, "name": "test_list_directory", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_list_directory", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.8812268230796897], ["dict", 0.1187731769203102]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [122, 54]], "fn_var_ln": {"new_dir_name": [[115, 8], [115, 20]], "output": [[121, 8], [121, 14]], "umask": [[120, 8], [120, 13]]}, "fn_var_occur": {"new_dir_name": [["self", "hook", "mkdir", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["new_dir_name", "output"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"]], "output": [["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["new_dir_name", "output"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "st_mode", "umask"]], "umask": [["output", "st_mode", "umask"]]}, "name": "test_mkdir", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "mkdir", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_mkdir", "ret_exprs": [], "ret_type": "", "variables": {"new_dir_name": "", "output": "", "umask": ""}, "variables_p": {"new_dir_name": [["str", 0.9999999999999999]], "output": [["str", 0.7971869033022947], ["List[str]", 0.10800158340759757], ["Tuple[str, str, str, str]", 0.0948115132901078]], "umask": [["int", 0.39082644140513995], ["str", 0.21169383748464493], ["Dict[int, int]", 0.09447548125784624], ["list", 0.09394690632946434]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [142, 41]], "fn_var_ln": {"new_dir_name": [[125, 8], [125, 20]], "output": [[141, 8], [141, 14]], "umask": [[130, 8], [130, 13]]}, "fn_var_occur": {"new_dir_name": [["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["new_dir_name", "output"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["new_dir_name", "output"]], "output": [["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["new_dir_name", "output"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "st_mode", "umask"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["new_dir_name", "output"]], "umask": [["output", "st_mode", "umask"]]}, "name": "test_create_and_delete_directory", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_create_and_delete_directory", "ret_exprs": [], "ret_type": "", "variables": {"new_dir_name": "", "output": "", "umask": ""}, "variables_p": {"new_dir_name": [["str", 0.7784850063554334]], "output": [["str", 0.7971869033022947], ["List[str]", 0.10800158340759757], ["Tuple[str, str, str, str]", 0.0948115132901078]], "umask": [["int", 0.39082644140513995], ["str", 0.21169383748464493], ["Dict[int, int]", 0.09447548125784624], ["list", 0.09394690632946434]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [157, 37]], "fn_var_ln": {"base_dir": [[145, 8], [145, 16]], "new_dir_path": [[147, 8], [147, 20]], "output": [[155, 8], [155, 14]], "sub_dir": [[146, 8], [146, 15]]}, "fn_var_occur": {"base_dir": [["new_dir_path", "os", "path", "join", "base_dir", "sub_dir"], ["base_dir", "output"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "base_dir"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "base_dir"], ["base_dir", "output"]], "new_dir_path": [["new_dir_path", "os", "path", "join", "base_dir", "sub_dir"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_path"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_path"], ["new_dir_path", "output"]], "output": [["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["base_dir", "output"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "base_dir"], ["sub_dir", "output"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["new_dir_path", "output"], ["base_dir", "output"]], "sub_dir": [["new_dir_path", "os", "path", "join", "base_dir", "sub_dir"], ["sub_dir", "output"]]}, "name": "test_create_and_delete_directories", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_path"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "base_dir"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_path"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "base_dir"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_create_and_delete_directories", "ret_exprs": [], "ret_type": "", "variables": {"base_dir": "", "new_dir_path": "", "output": "", "sub_dir": ""}, "variables_p": {"base_dir": [["str", 0.9999999999999999]], "new_dir_path": [["str", 1.0]], "output": [["str", 0.8057664520900341], ["List[str]", 0.0953940419332663]], "sub_dir": [["str", 0.9999999999999996]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[159, 4], [175, 50]], "fn_var_ln": {"output": [[174, 8], [174, 14]], "retrieved_file_name": [[166, 8], [166, 27]]}, "fn_var_occur": {"output": [["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS"]], "retrieved_file_name": [["self", "hook", "retrieve_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "retrieved_file_name"], ["retrieved_file_name", "os", "listdir", "self", "temp_dir"], ["os", "remove", "os", "path", "join", "self", "temp_dir", "retrieved_file_name"]]}, "name": "test_store_retrieve_and_delete_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "store_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["self", "hook", "retrieve_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "retrieved_file_name"], ["retrieved_file_name", "os", "listdir", "self", "temp_dir"], ["os", "remove", "os", "path", "join", "self", "temp_dir", "retrieved_file_name"], ["self", "hook", "delete_file", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_store_retrieve_and_delete_file", "ret_exprs": [], "ret_type": "", "variables": {"output": "", "retrieved_file_name": ""}, "variables_p": {"output": [["str", 0.8812268230796897], ["dict", 0.1187731769203102]], "retrieved_file_name": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[177, 4], [185, 32]], "fn_var_ln": {"output": [[182, 8], [182, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_mod_time", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["len", "output"]]}, "name": "test_get_mod_time", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "hook", "store_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "get_mod_time", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_mod_time", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.2734599629239877], ["Callable[[List[str]], Iterable[str]]", 0.14437238219485432], ["List[str]", 0.12648608817089232], ["List[Dict[str, Any]]", 0.1051876451434452], ["Set[str]", 0.0907433506950525]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 4], [192, 45]], "fn_var_ln": {"connection": [[189, 8], [189, 18]], "hook": [[191, 8], [191, 12]], "return_value": [[190, 8], [190, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "no_host_key_check", "True"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_no_host_key_check_default", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["Dict[str, Any]", 0.0803851928558178]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_no_host_key_check_default", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["Dict[str, Dict[str, Any]]", 0.2716758480139768], ["mock.MagicMock", 0.07666315465244058], ["Dict[str, Union[Any, Any, Any, Any]]", 0.06120209890019079]], "hook": [["bytes", 0.23037894061706737], ["str", 0.08591537257246343]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[195, 4], [200, 45]], "fn_var_ln": {"connection": [[196, 8], [196, 18]], "hook": [[199, 8], [199, 12]], "return_value": [[198, 8], [198, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "no_host_key_check", "True"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_no_host_key_check_enabled", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["str", 0.7170874824483526], ["int", 0.0457335040572098], ["bool", 0.04355431608845976]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_no_host_key_check_enabled", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["Dict[str, Union[Any, str]]", 0.20242301379344232], ["int", 0.1131109304495301], ["Dict[str, Any]", 0.10308247479617351], ["str", 0.09601563175406454]], "hook": [["bytes", 0.23037894061706737], ["str", 0.08591537257246343]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[203, 4], [208, 46]], "fn_var_ln": {"connection": [[204, 8], [204, 18]], "hook": [[207, 8], [207, 12]], "return_value": [[206, 8], [206, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "no_host_key_check", "False"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_no_host_key_check_disabled", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["str", 0.7170874824483526], ["int", 0.0457335040572098], ["bool", 0.04355431608845976]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_no_host_key_check_disabled", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["Dict[str, Union[Any, str]]", 0.20242301379344232], ["int", 0.1131109304495301], ["Dict[str, Any]", 0.10308247479617351], ["str", 0.09601563175406454]], "hook": [["str", 0.4392073757511019], ["int", 0.19159778358683144], ["frozenset[str]", 0.09038772284203556]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[211, 4], [216, 46]], "fn_var_ln": {"connection": [[212, 8], [212, 18]], "hook": [[215, 8], [215, 12]], "return_value": [[214, 8], [214, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "ciphers"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_ciphers", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["str", 0.3650895014738747], ["int", 0.28686604665941273]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_ciphers", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["Dict[str, Union[Any, str]]", 0.20242301379344232], ["int", 0.1131109304495301], ["Dict[str, Any]", 0.10308247479617351], ["str", 0.09601563175406454]], "hook": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[219, 4], [224, 46]], "fn_var_ln": {"connection": [[220, 8], [220, 18]], "hook": [[223, 8], [223, 12]], "return_value": [[222, 8], [222, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "no_host_key_check", "False"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_no_host_key_check_disabled_for_all_but_true", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["int", 0.16742887312209848], ["str", 0.08239559538391743]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_no_host_key_check_disabled_for_all_but_true", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["Dict[str, Union[Any, str]]", 0.20242301379344232], ["int", 0.1131109304495301], ["Dict[str, Any]", 0.10308247479617351], ["str", 0.09601563175406454]], "hook": [["str", 0.4392073757511019], ["int", 0.19159778358683144], ["frozenset[str]", 0.09038772284203556]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[227, 4], [232, 45]], "fn_var_ln": {"connection": [[228, 8], [228, 18]], "hook": [[231, 8], [231, 12]], "return_value": [[230, 8], [230, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "no_host_key_check", "True"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_no_host_key_check_ignore", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["str", 0.7170874824483526], ["int", 0.0457335040572098], ["bool", 0.04355431608845976]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_no_host_key_check_ignore", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["Dict[str, Union[Any, str]]", 0.20242301379344232], ["int", 0.1131109304495301], ["Dict[str, Any]", 0.10308247479617351], ["str", 0.09601563175406454]], "hook": [["bytes", 0.23037894061706737], ["str", 0.08591537257246343]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[235, 4], [239, 36]], "fn_var_ln": {"connection": [[236, 8], [236, 18]], "hook": [[238, 8], [238, 12]], "return_value": [[237, 8], [237, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "host_key", "None"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_host_key_default", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["Dict[str, Any]", 0.09661011716258668], ["mock.Mock", 0.07167997812484515], ["int", 0.06608107192550138], ["str", 0.06608107192550138]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_host_key_default", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["Dict[str, Dict[str, Any]]", 0.2716758480139768], ["mock.MagicMock", 0.07666315465244058], ["Dict[str, Union[Any, Any, Any, Any]]", 0.06120209890019079]], "hook": [["int", 0.3059203846069385], ["List[str]", 0.11555714458480895], ["str", 0.08847371599195598], ["Dict[Any, int]", 0.08749569220181402], ["List[int]", 0.08704144642599346]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[242, 4], [250, 58]], "fn_var_ln": {"connection": [[243, 8], [243, 18]], "hook": [[249, 8], [249, 12]], "return_value": [[248, 8], [248, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_HOST_KEY"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "host_key", "get_base64", "TEST_HOST_KEY"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_host_key", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["str", 0.7151851224478345], ["bool", 0.14853965580910952]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_host_key", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["str", 0.3353315137411399], ["int", 0.10196683821320153], ["Exception", 0.08304904192421382]], "hook": [["str", 0.14346500624789593], ["Dict[str, Union[Any, Any, Any]]", 0.07137336763942677]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[253, 4], [261, 58]], "fn_var_ln": {"connection": [[254, 8], [254, 18]], "hook": [[260, 8], [260, 12]], "return_value": [[259, 8], [259, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_HOST_KEY"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "host_key", "get_base64", "TEST_HOST_KEY"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_host_key_with_type", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["Dict[str, Any]", 0.10885894962042761], ["int", 0.0730222342794214], ["str", 0.0730222342794214]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_host_key_with_type", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["str", 0.3353315137411399], ["int", 0.10196683821320153], ["Exception", 0.08304904192421382]], "hook": [["str", 0.14346500624789593], ["Dict[str, Union[Any, Any, Any]]", 0.07137336763942677]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[264, 4], [268, 40]], "fn_var_ln": {"connection": [[265, 8], [265, 18]], "hook": [[267, 8], [267, 12]], "return_value": [[266, 8], [266, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_HOST_KEY"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "host_key", "None"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_host_key_with_no_host_key_check", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["Dict[str, Any]", 0.07845645998520737]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_host_key_with_no_host_key_check", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["str", 0.3353315137411399], ["int", 0.10196683821320153], ["Exception", 0.08304904192421382]], "hook": [["int", 0.3059203846069385], ["List[str]", 0.11555714458480895], ["str", 0.08847371599195598], ["Dict[Any, int]", 0.08749569220181402], ["List[int]", 0.08704144642599346]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [289, 36]], "fn_var_ln": {"connection": [[277, 8], [277, 18]], "file_obj": [[272, 8], [272, 16]], "hook": [[287, 8], [287, 12]], "key_content_str": [[275, 8], [275, 23]], "return_value": [[286, 8], [286, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra", "json", "dumps", "key_content_str"], ["get_connection", "return_value", "connection"]], "file_obj": [["file_obj", "StringIO"], ["TEST_PKEY", "write_private_key", "file_obj"], ["file_obj", "seek"], ["key_content_str", "file_obj", "read"]], "hook": [["hook", "SFTPHook"], ["hook", "pkey", "TEST_PKEY"], ["hook", "key_file", "None"]], "key_content_str": [["key_content_str", "file_obj", "read"], ["connection", "Connection", "login", "host", "extra", "json", "dumps", "key_content_str"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_key_content_as_str", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["Dict[str, Any]", 0.08628589038406877]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_key_content_as_str", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "file_obj": "", "hook": "", "key_content_str": "", "return_value": ""}, "variables_p": {"connection": [["str", 0.3327748321482947], ["int", 0.12574640831687176], ["Type[multigtfs.models.stop.Stop]", 0.08090117011417029]], "file_obj": [["crux.models.file.File", 0.07722538716751788]], "hook": [["io.TextIOWrapper", 0.09928833432672467], ["str", 0.08569604292697491], ["Optional[str]", 0.07333346449590283], ["List[str]", 0.07303126106610817]], "key_content_str": [["str", 0.5921527311001269], ["int", 0.1128659035864001], ["Set[str]", 0.10921470311832021], ["bytes", 0.0980793061790177]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[292, 4], [304, 45]], "fn_var_ln": {"connection": [[293, 8], [293, 18]], "hook": [[303, 8], [303, 12]], "return_value": [[302, 8], [302, 35]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_KEY_FILE"], ["get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["hook", "key_file", "TEST_KEY_FILE"]], "return_value": [["get_connection", "return_value", "connection"]]}, "name": "test_key_file", "params": {"get_connection": "", "self": ""}, "params_descr": {"get_connection": "", "self": ""}, "params_occur": {"get_connection": [["get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "get_connection": [["str", 0.6767894209482405], ["bool", 0.18616028320776687]], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_key_file", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["str", 0.5283892976164308], ["Callable(os.path.join)[..., Any][[[Named(a, Union[_PathLike[str], str]), Variable(Union[_PathLike[str], str])], str][Any, Any]]", 0.09174336233416648]], "hook": [["str", 0.2852568031417907], ["list", 0.13585332886853327], ["bool", 0.09723654863956324], ["Dict[int, List[int]]", 0.09536374685448058], ["int", 0.08717251848878597], ["List[str]", 0.08324648783027745], ["Type[str]", 0.07705917556843482]], "return_value": [["int", 0.19080536554606292], ["str", 0.17816236503142124], ["List[Dict[str, Any]]", 0.1664010818316408], ["Dict[str, Union[Any, Any, Any]]", 0.10596322874431213], ["Dict[str, Dict[str, Any]]", 0.09211502908036674], ["Dict[str, int]", 0.06522378150835323], ["Dict[str, Union[int, str]]", 0.061160892633298464]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[315, 4], [318, 31]], "fn_var_ln": {"path": [[316, 8], [316, 12]], "result": [[317, 8], [317, 14]]}, "fn_var_occur": {"path": [["path", "os", "path", "join", "self", "temp_dir", "path"], ["result", "self", "hook", "path_exists", "path"]], "result": [["result", "self", "hook", "path_exists", "path"], ["result", "exists"]]}, "name": "test_path_exists", "params": {"exists": "", "path": "", "self": ""}, "params_descr": {"exists": "", "path": "", "self": ""}, "params_occur": {"exists": [["result", "exists"]], "path": [["path", "os", "path", "join", "self", "temp_dir", "path"], ["result", "self", "hook", "path_exists", "path"]], "self": [["path", "os", "path", "join", "self", "temp_dir", "path"], ["result", "self", "hook", "path_exists", "path"]]}, "params_p": {"args": [], "exists": [["str", 0.3826816437473386], ["int", 0.18515904069060551], ["bool", 0.093615581554345]], "kwargs": [], "path": [["str", 0.9060167229804145], ["bool", 0.09398327701958528]], "self": []}, "q_name": "TestSFTPHook.test_path_exists", "ret_exprs": [], "ret_type": "", "variables": {"path": "", "result": ""}, "variables_p": {"path": [["str", 0.9999999999999998]], "result": [["dict", 0.46640503637099917], ["src.pythonfinder.models.path.SystemPath", 0.09331733108899769], ["List[List[str]]", 0.09013416708193739]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[336, 4], [338, 30]], "fn_var_ln": {"result": [[337, 8], [337, 14]]}, "fn_var_occur": {"result": [["result", "self", "hook", "_is_path_match", "path", "path", "prefix", "prefix", "delimiter", "delimiter"], ["result", "match"]]}, "name": "test_path_match", "params": {"delimiter": "", "match": "", "path": "", "prefix": "", "self": ""}, "params_descr": {"delimiter": "", "match": "", "path": "", "prefix": "", "self": ""}, "params_occur": {"delimiter": [["result", "self", "hook", "_is_path_match", "path", "path", "prefix", "prefix", "delimiter", "delimiter"]], "match": [["result", "match"]], "path": [["result", "self", "hook", "_is_path_match", "path", "path", "prefix", "prefix", "delimiter", "delimiter"]], "prefix": [["result", "self", "hook", "_is_path_match", "path", "path", "prefix", "prefix", "delimiter", "delimiter"]], "self": [["result", "self", "hook", "_is_path_match", "path", "path", "prefix", "prefix", "delimiter", "delimiter"]]}, "params_p": {"args": [], "delimiter": [["Optional[str]", 0.09735946845792204]], "kwargs": [], "match": [["str", 0.19280789775972967], ["dict", 0.16665141252901589], ["List[List[int]]", 0.10086492430912591], ["Type[Exception]", 0.09753786836887042], ["type", 0.09511430318005194], ["bool", 0.09241665656884035], ["List[str]", 0.08712413790577751]], "path": [["Optional[str]", 0.09735946845792204]], "prefix": [["Optional[str]", 0.09735946845792204]], "self": []}, "q_name": "TestSFTPHook.test_path_match", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["str", 0.30382523871975514], ["Callable(open)[..., Any][[[Named(file, Union[_PathLike[bytes], _PathLike[str], bytes, int, str]), Named(mode, Union[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal], default), Named(buffering, int, default), Named(encoding, Optional[str], default), Named(errors, Optional[str], default), Named(newline, Optional[str], default), Named(closefd, bool, default), Named(opener, Optional[Callable[[str, int], int]], default)], io.TextIOWrapper][[Named(file, Union[_PathLike[bytes], _PathLike[str], bytes, int, str]), Named(mode, Union[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]), Named(buffering, Literal), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, Optional[Callable[[str, int], int]], default)], io.FileIO][[Named(file, Union[_PathLike[bytes], _PathLike[str], bytes, int, str]), Named(mode, Union[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]), Named(buffering, Union[Literal[-1], Literal], default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, Optional[Callable[[str, int], int]], default)], io.BufferedRandom][[Named(file, Union[_PathLike[bytes], _PathLike[str], bytes, int, str]), Named(mode, Union[Literal, Literal, Literal, Literal, Literal, Literal]), Named(buffering, Union[Literal[-1], Literal], default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, Optional[Callable[[str, int], int]], default)], io.BufferedWriter][[Named(file, Union[_PathLike[bytes], _PathLike[str], bytes, int, str]), Named(mode, Union[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]), Named(buffering, Union[Literal[-1], Literal], default), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, Optional[Callable[[str, int], int]], default)], io.BufferedReader][[Named(file, Union[_PathLike[bytes], _PathLike[str], bytes, int, str]), Named(mode, Union[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]), Named(buffering, int), Named(encoding, None, default), Named(errors, None, default), Named(newline, None, default), Named(closefd, bool, default), Named(opener, Optional[Callable[[str, int], int]], default)], BinaryIO][Any, Any]]", 0.20938092669752517], ["src.pip_shims.models.ShimmedPathCollection", 0.10691426002978513], ["list", 0.08550962152054595]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[340, 4], [346, 91]], "fn_var_ln": {"dirs": [[342, 15], [342, 19]], "files": [[342, 8], [342, 13]], "tree_map": [[341, 8], [341, 16]], "unknowns": [[342, 21], [342, 29]]}, "fn_var_occur": {"dirs": [["files", "dirs", "unknowns", "tree_map"], ["dirs", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR"]], "files": [["files", "dirs", "unknowns", "tree_map"], ["files", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"]], "tree_map": [["tree_map", "self", "hook", "get_tree_map", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["files", "dirs", "unknowns", "tree_map"]], "unknowns": [["files", "dirs", "unknowns", "tree_map"], ["unknowns", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "FIFO_FOR_TESTS"]]}, "name": "test_get_tree_map", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["tree_map", "self", "hook", "get_tree_map", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["files", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["dirs", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR"], ["unknowns", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "FIFO_FOR_TESTS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_tree_map", "ret_exprs": [], "ret_type": "", "variables": {"dirs": "", "files": "", "tree_map": "", "unknowns": ""}, "variables_p": {"dirs": [["str", 0.4847046387919425]], "files": [["List[Tuple[float, str]]", 0.5799307102499722], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.18494438574794872], ["str", 0.08446808785110078], ["dict", 0.07581482257112024]], "tree_map": [["List[str]", 0.41519399106123506], ["str", 0.28461807200892325], ["OrderedDict[str, int]", 0.12096359484849459], ["tagstore.models.entity.EntityId", 0.09133113207844881], ["list", 0.08789321000289832]], "unknowns": [["str", 0.4426428084469827], ["List[str]", 0.1834568307283285], ["float", 0.0949187238179492]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[349, 4], [363, 40]], "fn_var_ln": {"connection": [[350, 8], [350, 18]], "hook": [[360, 12], [360, 16]], "msg": [[361, 20], [361, 23]], "return_value": [[354, 8], [354, 40]], "status": [[361, 12], [361, 18]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host"], ["mock_get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "return_value": [["mock_get_connection", "return_value", "connection"], ["type", "get_conn", "return_value", "normalize", "mock", "PropertyMock", "side_effect", "Exception"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "False"]]}, "name": "test_connection_failure", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.MagicMock", 0.17416209555620893]], "self": []}, "q_name": "TestSFTPHook.test_connection_failure", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "msg": "", "return_value": "", "status": ""}, "variables_p": {"connection": [["str", 0.16748729849244395], ["property", 0.10272651050293437], ["Union[Literal, str]", 0.09317697298910978], ["list", 0.08921835210681052]], "hook": [["str", 0.3753054093155023], ["int", 0.09145548486064957], ["Dict[Any, str]", 0.07961872863917242]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "return_value": [["mock._Call", 0.20382028206523453]], "status": [["int", 0.5965902263708184], ["str", 0.09504299251503023]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[366, 4], [378, 54]], "fn_var_ln": {"connection": [[367, 8], [367, 18]], "hook": [[375, 12], [375, 16]], "msg": [[376, 20], [376, 23]], "return_value": [[371, 8], [371, 40]], "status": [[376, 12], [376, 18]]}, "fn_var_occur": {"connection": [["connection", "Connection", "login", "host"], ["mock_get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook"], ["status", "msg", "hook", "test_connection"]], "msg": [["status", "msg", "hook", "test_connection"]], "return_value": [["mock_get_connection", "return_value", "connection"], ["get_conn", "return_value", "pwd"]], "status": [["status", "msg", "hook", "test_connection"], ["status", "True"]]}, "name": "test_connection_success", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.MagicMock", 0.17416209555620893]], "self": []}, "q_name": "TestSFTPHook.test_connection_success", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "msg": "", "return_value": "", "status": ""}, "variables_p": {"connection": [["str", 0.16748729849244395], ["property", 0.10272651050293437], ["Union[Literal, str]", 0.09317697298910978], ["list", 0.08921835210681052]], "hook": [["str", 0.3753054093155023], ["int", 0.09145548486064957], ["Dict[Any, str]", 0.07961872863917242]], "msg": [["str", 0.27146692352883395], ["int", 0.1438477929569659], ["List[int]", 0.11412004512506149], ["list", 0.11412004512506149], ["Dict[str, Union[Any, Any, Any, Any, str]]", 0.09569432720318641], ["Tuple[List[str]]", 0.09164397600025916], ["enumerate[Any]", 0.0876064192955831]], "return_value": [["list", 0.1976404923656413], ["str", 0.18730316447567208], ["Dict[str, Union[int, str]]", 0.11073326147516717], ["Optional[bytes]", 0.10790936078385237], ["tests.utils.MockCoroutine", 0.0786648695173422]], "status": [["str", 0.8070705504286348], ["Dict[str, str]", 0.10742002232739085], ["Optional[str]", 0.08550942724397416]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[381, 4], [397, 55]], "fn_var_ln": {"connection": [[382, 8], [382, 18]], "return_value": [[383, 8], [383, 40]]}, "fn_var_occur": {"connection": [["connection", "Connection", "conn_id", "login", "host"], ["mock_get_connection", "return_value", "connection"]], "return_value": [["mock_get_connection", "return_value", "connection"]]}, "name": "test_deprecation_ftp_conn_id", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [], "self": []}, "q_name": "TestSFTPHook.test_deprecation_ftp_conn_id", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "return_value": ""}, "variables_p": {"connection": [["list", 0.18993284916493136], ["Dict[int, Dict[str, Any]]", 0.17772256489675], ["List[str]", 0.1061356343713332], ["str", 0.088861282448375]], "return_value": [["str", 0.2604361665626643], ["int", 0.1914968371785965], ["List[Dict[str, Any]]", 0.12623080368784928], ["list", 0.08534104615198508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[400, 4], [407, 49]], "fn_var_ln": {"connection": [[402, 12], [402, 22]], "return_value": [[403, 12], [403, 44]]}, "fn_var_occur": {"connection": [["connection", "Connection", "conn_id", "login", "host"], ["mock_get_connection", "return_value", "connection"]], "return_value": [["mock_get_connection", "return_value", "connection"]]}, "name": "test_invalid_ssh_hook", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.MagicMock", 0.17416209555620893]], "self": []}, "q_name": "TestSFTPHook.test_invalid_ssh_hook", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "return_value": ""}, "variables_p": {"connection": [["list", 0.18993284916493136], ["Dict[int, Dict[str, Any]]", 0.17772256489675], ["List[str]", 0.1061356343713332], ["str", 0.088861282448375]], "return_value": [["str", 0.2604361665626643], ["int", 0.1914968371785965], ["List[Dict[str, Any]]", 0.12623080368784928], ["list", 0.08534104615198508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[410, 4], [416, 63]], "fn_var_ln": {"connection": [[411, 8], [411, 18]], "hook": [[414, 12], [414, 16]], "return_value": [[412, 8], [412, 40]]}, "fn_var_occur": {"connection": [["connection", "Connection", "conn_id", "login", "host"], ["mock_get_connection", "return_value", "connection"]], "hook": [["hook", "SFTPHook", "ssh_hook", "SSHHook", "ssh_conn_id"], ["hook", "ssh_conn_id"], ["isinstance", "hook", "get_conn", "paramiko", "SFTPClient"]], "return_value": [["mock_get_connection", "return_value", "connection"]]}, "name": "test_valid_ssh_hook", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "connection"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [["mock.MagicMock", 0.1915698934763378]], "self": []}, "q_name": "TestSFTPHook.test_valid_ssh_hook", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "hook": "", "return_value": ""}, "variables_p": {"connection": [["list", 0.18993284916493136], ["Dict[int, Dict[str, Any]]", 0.17772256489675], ["List[str]", 0.1061356343713332], ["str", 0.088861282448375]], "hook": [["str", 0.12082268782398306], ["Tuple[Literal]", 0.0705581767432809]], "return_value": [["str", 0.2604361665626643], ["int", 0.1914968371785965], ["List[Dict[str, Any]]", 0.12623080368784928], ["list", 0.08534104615198508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[418, 4], [421, 41]], "fn_var_ln": {"output": [[419, 8], [419, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"], ["output", "TMP_FILE_FOR_TESTS"]]}, "name": "test_get_suffix_pattern_match", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_suffix_pattern_match", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.21193307362474145], ["list", 0.20523074700719304], ["Dict[str, Any]", 0.10985874052188638], ["List[str]", 0.10213049943117647], ["Optional[BinaryIO]", 0.1005515054167603], ["bool", 0.09384938130821774], ["dict", 0.08767959259324369]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[423, 4], [426, 41]], "fn_var_ln": {"output": [[424, 8], [424, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"], ["output", "TMP_FILE_FOR_TESTS"]]}, "name": "test_get_prefix_pattern_match", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_prefix_pattern_match", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.21193307362474145], ["list", 0.20523074700719304], ["Dict[str, Any]", 0.10985874052188638], ["List[str]", 0.10213049943117647], ["Optional[BinaryIO]", 0.1005515054167603], ["bool", 0.09384938130821774], ["dict", 0.08767959259324369]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[428, 4], [430, 27]], "fn_var_ln": {"output": [[429, 8], [429, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"]]}, "name": "test_get_pattern_not_match", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_pattern_not_match", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.8002657173539833], ["bytes", 0.07926012225327411]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[432, 4], [434, 43]], "fn_var_ln": {"output": [[433, 8], [433, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"], ["output", "LOG_FILE_FOR_TESTS"]]}, "name": "test_get_several_pattern_match", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_several_pattern_match", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.6079930076620561], ["int", 0.10351935925876321], ["Tuple[str, str, str]", 0.1010888559063233], ["List[str]", 0.0968147900359143], ["Dict[str, str]", 0.09058398713694313]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[436, 4], [438, 43]], "fn_var_ln": {"output": [[437, 8], [437, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"], ["output", "TMP_FILE_FOR_TESTS"]]}, "name": "test_get_first_pattern_match", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_first_pattern_match", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.21193307362474145], ["list", 0.20523074700719304], ["Dict[str, Any]", 0.10985874052188638], ["List[str]", 0.10213049943117647], ["Optional[BinaryIO]", 0.1005515054167603], ["bool", 0.09384938130821774], ["dict", 0.08767959259324369]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[440, 4], [442, 47]], "fn_var_ln": {"output": [[441, 8], [441, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"], ["output", "ANOTHER_FILE_FOR_TESTS"]]}, "name": "test_get_middle_pattern_match", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_file_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_middle_pattern_match", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.21193307362474145], ["list", 0.20523074700719304], ["Dict[str, Any]", 0.10985874052188638], ["List[str]", 0.10213049943117647], ["Optional[BinaryIO]", 0.1005515054167603], ["bool", 0.09384938130821774], ["dict", 0.08767959259324369]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[444, 4], [446, 27]], "fn_var_ln": {"output": [[445, 8], [445, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"]]}, "name": "test_get_none_matched_files", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_none_matched_files", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.8002657173539833], ["bytes", 0.07926012225327411]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[448, 4], [450, 45]], "fn_var_ln": {"output": [[449, 8], [449, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"], ["output", "LOG_FILE_FOR_TESTS"]]}, "name": "test_get_matched_files_several_pattern", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_matched_files_several_pattern", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.6079930076620561], ["int", 0.10351935925876321], ["Tuple[str, str, str]", 0.1010888559063233], ["List[str]", 0.0968147900359143], ["Dict[str, str]", 0.09058398713694313]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[452, 4], [454, 69]], "fn_var_ln": {"output": [[453, 8], [453, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"], ["output", "TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS"]]}, "name": "test_get_all_matched_files", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_all_matched_files", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["dict", 0.30817495783244125], ["list", 0.10840246799519727], ["List[str]", 0.10539608485843388], ["Optional[BinaryIO]", 0.10534773167447994], ["str", 0.09542885154630655], ["Dict[str, Dict[str, str]]", 0.09504331868920698], ["Dict[str, str]", 0.09278527869856994], ["Dict[str, Any]", 0.08942130870536419]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[456, 4], [458, 49]], "fn_var_ln": {"output": [[457, 8], [457, 14]]}, "fn_var_occur": {"output": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"], ["output", "ANOTHER_FILE_FOR_TESTS"]]}, "name": "test_get_matched_files_with_different_pattern", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["output", "self", "hook", "get_files_by_pattern", "self", "temp_dir"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSFTPHook.test_get_matched_files_with_different_pattern", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.21193307362474145], ["list", 0.20523074700719304], ["Dict[str, Any]", 0.10985874052188638], ["List[str]", 0.10213049943117647], ["Optional[BinaryIO]", 0.1005515054167603], ["bool", 0.09384938130821774], ["dict", 0.08767959259324369]]}}], "name": "TestSFTPHook", "q_name": "TestSFTPHook", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 0], [41, 31]], "fn_var_ln": {"key_fh": [[37, 4], [37, 10]], "key_obj": [[40, 4], [40, 11]]}, "fn_var_occur": {"key_fh": [["key_fh", "StringIO"], ["pkey", "write_private_key", "key_fh"], ["key_fh", "seek"], ["key_obj", "paramiko", "RSAKey", "file_obj", "key_fh"]], "key_obj": [["key_obj", "paramiko", "RSAKey", "file_obj", "key_fh"], ["key_obj", "get_base64"]]}, "name": "generate_host_key", "params": {"pkey": "paramiko.PKey"}, "params_descr": {"pkey": ""}, "params_occur": {"pkey": [["pkey", "write_private_key", "key_fh"]]}, "params_p": {"args": [], "kwargs": [], "pkey": [["str", 0.38577147647712984], ["Dict[str, Any]", 0.09357758341500033], ["float", 0.09257862215717524], ["int", 0.09257862215717524], ["Union[float, int]", 0.09257862215717524]]}, "q_name": "generate_host_key", "ret_exprs": ["return key_obj.get_base64()"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.34547077884366895], ["games.models.Game", 0.13245555101576423], ["bool", 0.09172980213956175], ["dict", 0.07945383732046192]], "variables": {"key_fh": "", "key_obj": ""}, "variables_p": {"key_fh": [["str", 0.29680102331273817], ["bytes", 0.20444891732062742], ["paramiko.rsakey.RSAKey", 0.10484898689824737], ["List[str]", 0.10323485139891199], ["Optional[bytes]", 0.09851301357262186], ["List[int]", 0.09318123426678507]], "key_obj": [["str", 0.3797230957896663], ["paramiko.rsakey.RSAKey", 0.16522665589973695], ["int", 0.09610301973298982], ["Dict[str, str]", 0.08663040588606559], ["bytes", 0.08149887712456506]]}}], "imports": ["__future__", "annotations", "json", "os", "shutil", "io", "StringIO", "unittest", "mock", "paramiko", "pytest", "airflow", "exceptions", "AirflowException", "AirflowProviderDeprecationWarning", "airflow", "models", "Connection", "airflow", "providers", "sftp", "hooks", "sftp", "SFTPHook", "airflow", "providers", "ssh", "hooks", "ssh", "SSHHook", "airflow", "utils", "session", "provide_session"], "mod_var_ln": {"ANOTHER_FILE_FOR_TESTS": [[47, 0], [47, 22]], "FIFO_FOR_TESTS": [[49, 0], [49, 14]], "LOG_FILE_FOR_TESTS": [[48, 0], [48, 18]], "SFTP_CONNECTION_USER": [[51, 0], [51, 20]], "SUB_DIR": [[45, 0], [45, 7]], "TEST_HOST_KEY": [[54, 0], [54, 13]], "TEST_KEY_FILE": [[55, 0], [55, 13]], "TEST_PKEY": [[53, 0], [53, 9]], "TMP_DIR_FOR_TESTS": [[44, 0], [44, 17]], "TMP_FILE_FOR_TESTS": [[46, 0], [46, 18]]}, "mod_var_occur": {"ANOTHER_FILE_FOR_TESTS": [["TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS", "LOG_FILE_FOR_TESTS"], ["TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS", "LOG_FILE_FOR_TESTS"], ["output", "ANOTHER_FILE_FOR_TESTS"], ["output", "TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS"], ["output", "ANOTHER_FILE_FOR_TESTS"]], "FIFO_FOR_TESTS": [["os", "mkfifo", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "FIFO_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS"], ["unknowns", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "FIFO_FOR_TESTS"]], "LOG_FILE_FOR_TESTS": [["TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS", "LOG_FILE_FOR_TESTS"], ["TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS", "LOG_FILE_FOR_TESTS"], ["output", "LOG_FILE_FOR_TESTS"], ["output", "LOG_FILE_FOR_TESTS"]], "SFTP_CONNECTION_USER": [["self", "old_login", "self", "update_connection", "SFTP_CONNECTION_USER"]], "SUB_DIR": [["os", "makedirs", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR"], ["open", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS", "file"], ["output", "SUB_DIR", "FIFO_FOR_TESTS"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS"], ["files", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["dirs", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR"]], "TEST_HOST_KEY": [["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_HOST_KEY"], ["hook", "host_key", "get_base64", "TEST_HOST_KEY"], ["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_HOST_KEY"], ["hook", "host_key", "get_base64", "TEST_HOST_KEY"], ["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_HOST_KEY"]], "TEST_KEY_FILE": [["connection", "Connection", "login", "host", "extra", "json", "dumps", "TEST_KEY_FILE"], ["hook", "key_file", "TEST_KEY_FILE"]], "TEST_PKEY": [["TEST_HOST_KEY", "generate_host_key", "pkey", "TEST_PKEY"], ["TEST_PKEY", "write_private_key", "file_obj"], ["hook", "pkey", "TEST_PKEY"]], "TMP_DIR_FOR_TESTS": [["os", "makedirs", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR"], ["open", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS", "file"], ["os", "mkfifo", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "FIFO_FOR_TESTS"], ["shutil", "rmtree", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS"], ["TMP_DIR_FOR_TESTS", "output"], ["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["self", "hook", "mkdir", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "self", "hook", "get_conn", "lstat", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_name"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_path"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "base_dir"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "new_dir_path"], ["self", "hook", "delete_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "base_dir"], ["output", "self", "hook", "describe_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["self", "hook", "store_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["self", "hook", "retrieve_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "retrieved_file_name"], ["self", "hook", "delete_file", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "list_directory", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["self", "hook", "store_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "get_mod_time", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["tree_map", "self", "hook", "get_tree_map", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS"], ["files", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["dirs", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR"], ["unknowns", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "FIFO_FOR_TESTS"]], "TMP_FILE_FOR_TESTS": [["TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS", "LOG_FILE_FOR_TESTS"], ["open", "os", "path", "join", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS", "file"], ["TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS", "LOG_FILE_FOR_TESTS"], ["self", "hook", "create_directory", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["self", "hook", "store_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "TMP_FILE_FOR_TESTS"], ["output", "SUB_DIR", "FIFO_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["self", "hook", "retrieve_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "retrieved_file_name"], ["self", "hook", "delete_file", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["self", "hook", "store_file", "remote_full_path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS", "local_full_path", "os", "path", "join", "self", "temp_dir", "TMP_FILE_FOR_TESTS"], ["output", "self", "hook", "get_mod_time", "path", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "TMP_FILE_FOR_TESTS"], ["files", "os", "path", "join", "self", "temp_dir", "TMP_DIR_FOR_TESTS", "SUB_DIR", "TMP_FILE_FOR_TESTS"], ["output", "TMP_FILE_FOR_TESTS"], ["output", "TMP_FILE_FOR_TESTS"], ["output", "TMP_FILE_FOR_TESTS"], ["output", "TMP_FILE_FOR_TESTS", "ANOTHER_FILE_FOR_TESTS"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 175}, "session_id": "dcXSY6OFMWzfSf4nG0ISP1etUdIIMQ5sVVx_EN-huNw", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {"ANOTHER_FILE_FOR_TESTS": "", "FIFO_FOR_TESTS": "", "LOG_FILE_FOR_TESTS": "", "SFTP_CONNECTION_USER": "", "SUB_DIR": "", "TEST_HOST_KEY": "", "TEST_KEY_FILE": "", "TEST_PKEY": "", "TMP_DIR_FOR_TESTS": "", "TMP_FILE_FOR_TESTS": ""}, "variables_p": {"ANOTHER_FILE_FOR_TESTS": [["os.stat_result", 0.20534038936923119], ["dict", 0.19604311313288525], ["str", 0.09302885896952225], ["List[int]", 0.0872095904464897]], "FIFO_FOR_TESTS": [["str", 0.728958816480025], ["int", 0.18207188653843642], ["Union[Literal, str]", 0.08896929698153852]], "LOG_FILE_FOR_TESTS": [["Dict[str, str]", 0.12269202768408896], ["torch.utils.data.DataLoader", 0.0965669998048278], ["bool", 0.09327332355821587], ["int", 0.09263444810257968], ["dict", 0.09211934098337368]], "SFTP_CONNECTION_USER": [["int", 1.0]], "SUB_DIR": [["str", 0.9999999999999998]], "TEST_HOST_KEY": [["str", 0.5293462344597691], ["Optional[str]", 0.09199014210976628], ["List[bytes]", 0.09133478080106103]], "TEST_KEY_FILE": [["str", 0.803978249549952]], "TEST_PKEY": [["int", 0.10636727045046736], ["Dict[str, Any]", 0.09813197998577648], ["Dict[str, Union[bytes, int]]", 0.09638713987275878], ["Dict[str, Union[Any, bool, str]]", 0.0960660291945318]], "TMP_DIR_FOR_TESTS": [["str", 0.6595800802205667], ["Union[Literal, str]", 0.34041991977943337]], "TMP_FILE_FOR_TESTS": [["Dict[str, str]", 0.278858367837826], ["str", 0.21180714308389484], ["Pattern[str]", 0.10304757620004215], ["List[List[int]]", 0.08638438280150428]]}}}