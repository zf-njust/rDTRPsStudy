{"error": null, "response": {"classes": [{"cls_lc": [[29, 0], [63, 43]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[30, 4], [41, 66]], "fn_var_ln": {"connection": [[31, 8], [31, 23]], "db_hook": [[39, 8], [39, 20]]}, "fn_var_occur": {"connection": [["self", "connection", "models", "Connection", "login", "password", "host", "port", "schema"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]], "db_hook": [["self", "db_hook", "ExasolHook"], ["self", "db_hook", "get_connection", "mock", "Mock"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "connection", "models", "Connection", "login", "password", "host", "port", "schema"], ["self", "db_hook", "ExasolHook"], ["self", "db_hook", "get_connection", "mock", "Mock"], ["self", "db_hook", "get_connection", "return_value", "self", "connection"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHookConn.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "db_hook": ""}, "variables_p": {"connection": [["str", 0.10784086173216809]], "db_hook": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 4], [53, 43]], "fn_var_ln": {"args": [[48, 8], [48, 12]], "kwargs": [[48, 14], [48, 20]], "mock_connect": [[46, 8], [46, 20]]}, "fn_var_occur": {"args": [["args", "kwargs", "mock_connect", "call_args"]], "kwargs": [["args", "kwargs", "mock_connect", "call_args"]], "mock_connect": [["mock_connect", "mock_pyexasol", "connect"], ["mock_connect", "assert_called_once"], ["args", "kwargs", "mock_connect", "call_args"]]}, "name": "test_get_conn", "params": {"mock_pyexasol": "", "self": ""}, "params_descr": {"mock_pyexasol": "", "self": ""}, "params_occur": {"mock_pyexasol": [["mock_connect", "mock_pyexasol", "connect"]], "self": [["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_pyexasol": [], "self": []}, "q_name": "TestExasolHookConn.test_get_conn", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "kwargs": "", "mock_connect": ""}, "variables_p": {"args": [["list", 0.09023848639491402], ["Dict[str, str]", 0.08433117130769581], ["Type[Dict[str, Any]]", 0.07514333884225831]], "kwargs": [["str", 0.13272552644537097], ["RuntimeError", 0.11422460751008312], ["mock._Call", 0.1083259933074182], ["Dict[str, int]", 0.09093023719189905], ["int", 0.08715095864092008]], "mock_connect": [["Dict[str, Tuple[str, Any]]", 0.17834409816150237]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [63, 43]], "fn_var_ln": {"args": [[61, 8], [61, 12]], "kwargs": [[61, 14], [61, 20]], "mock_connect": [[59, 8], [59, 20]]}, "fn_var_occur": {"args": [["args", "kwargs", "mock_connect", "call_args"]], "kwargs": [["args", "kwargs", "mock_connect", "call_args"], ["kwargs", "True"]], "mock_connect": [["mock_connect", "mock_pyexasol", "connect"], ["mock_connect", "assert_called_once"], ["args", "kwargs", "mock_connect", "call_args"]]}, "name": "test_get_conn_extra_args", "params": {"mock_pyexasol": "", "self": ""}, "params_descr": {"mock_pyexasol": "", "self": ""}, "params_occur": {"mock_pyexasol": [["mock_connect", "mock_pyexasol", "connect"]], "self": [["self", "connection", "extra", "json", "dumps", "True"], ["self", "db_hook", "get_conn"]]}, "params_p": {"args": [], "kwargs": [], "mock_pyexasol": [], "self": []}, "q_name": "TestExasolHookConn.test_get_conn_extra_args", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "kwargs": "", "mock_connect": ""}, "variables_p": {"args": [["list", 0.09023848639491402], ["Dict[str, str]", 0.08433117130769581], ["Type[Dict[str, Any]]", 0.07514333884225831]], "kwargs": [["str", 0.13898766359455947], ["RuntimeError", 0.11888103457040859], ["int", 0.09338654921826806], ["Dict[str, int]", 0.08999042247005794]], "mock_connect": [["Dict[str, Tuple[str, Any]]", 0.17834409816150237]]}}], "name": "TestExasolHookConn", "q_name": "TestExasolHookConn", "variables": {}, "variables_p": {}}, {"cls_lc": [[73, 8], [77, 27]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[76, 12], [77, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_conn", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "mock", "MagicMock", "rowcount"], ["self", "conn", "mock", "MagicMock"], ["self", "conn", "execute", "return_value", "self", "cur"], ["conn", "self", "conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.setup_method.<locals>.SubExasolHook.get_conn", "ret_exprs": ["return conn"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}], "name": "SubExasolHook", "q_name": "TestExasolHook.setup_method.<locals>.SubExasolHook", "variables": {}, "variables_p": {}}, {"cls_lc": [[66, 0], [173, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [79, 38]], "fn_var_ln": {"conn": [[71, 8], [71, 12]], "conn_name_attr": [[74, 12], [74, 26]], "cur": [[68, 8], [68, 16]], "db_hook": [[79, 8], [79, 20]]}, "fn_var_occur": {"conn": [], "conn_name_attr": [], "cur": [], "db_hook": [["self", "db_hook", "SubExasolHook"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "SubExasolHook"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn_name_attr": "", "cur": "", "db_hook": ""}, "variables_p": {"conn": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "conn_name_attr": [["str", 0.9999999984412052], ["Tuple[str, str, bool, str, str, str, str]", 8.316126869679678e-10], ["List[str]", 1.331690806861904e-10], ["Tuple[Any, Any]", 1.331690806861904e-10], ["bool", 1.3275060008743415e-10]], "cur": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "db_hook": [["Dict[str, Union[int, str]]", 6.111485891715269e-12], ["Counter", 3.492753903786034e-12]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [85, 68]], "fn_var_ln": {"autocommit": [[82, 8], [82, 18]]}, "fn_var_occur": {"autocommit": [["autocommit", "True"], ["self", "db_hook", "set_autocommit", "self", "conn", "autocommit"], ["self", "conn", "set_autocommit", "assert_called_once_with", "autocommit"]]}, "name": "test_set_autocommit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "set_autocommit", "self", "conn", "autocommit"], ["self", "conn", "set_autocommit", "assert_called_once_with", "autocommit"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_set_autocommit", "ret_exprs": [], "ret_type": "", "variables": {"autocommit": ""}, "variables_p": {"autocommit": [["dict", 0.10501562267910891], ["Pattern[str]", 0.0996509141886527], ["Dict[str, Union[Any, Any]]", 0.0950024465435198], ["deque[Any]", 0.09046057933059966], ["Counter[Any]", 0.08720909344229752]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [90, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_autocommit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["setattr", "self", "conn", "True"], ["setattr", "self", "conn", "False"], ["self", "db_hook", "get_autocommit", "self", "conn"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_get_autocommit", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [101, 45]], "fn_var_ln": {"sql": [[93, 8], [93, 11]]}, "fn_var_occur": {"sql": [["self", "db_hook", "run", "sql", "autocommit", "False"], ["self", "conn", "execute", "assert_called_once_with", "sql", "None"]]}, "name": "test_run_without_autocommit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["setattr", "self", "conn", "False"], ["self", "db_hook", "run", "sql", "autocommit", "False"], ["self", "conn", "set_autocommit", "assert_called_once_with", "False"], ["self", "conn", "execute", "assert_called_once_with", "sql", "None"], ["self", "conn", "commit", "assert_called_once"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_run_without_autocommit", "ret_exprs": [], "ret_type": "", "variables": {"sql": ""}, "variables_p": {"sql": [["Tuple[str, str]", 0.10558144172643243], ["Tuple[str, str, str, str, str]", 0.10558144172643243], ["dict", 0.09555720797347972], ["Union[Literal, Literal]", 0.0937525914829082]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [108, 44]], "fn_var_ln": {"sql": [[104, 8], [104, 11]]}, "fn_var_occur": {"sql": [["self", "db_hook", "run", "sql", "autocommit", "True"], ["self", "conn", "execute", "assert_called_once_with", "sql", "None"]]}, "name": "test_run_with_autocommit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "run", "sql", "autocommit", "True"], ["self", "conn", "set_autocommit", "assert_called_once_with", "True"], ["self", "conn", "execute", "assert_called_once_with", "sql", "None"], ["self", "conn", "commit", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_run_with_autocommit", "ret_exprs": [], "ret_type": "", "variables": {"sql": ""}, "variables_p": {"sql": [["int", 0.20275754736342236], ["list", 0.08965590919128462]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [116, 44]], "fn_var_ln": {"parameters": [[112, 8], [112, 18]], "sql": [[111, 8], [111, 11]]}, "fn_var_occur": {"parameters": [["self", "db_hook", "run", "sql", "autocommit", "True", "parameters", "parameters"], ["self", "conn", "execute", "assert_called_once_with", "sql", "parameters"]], "sql": [["self", "db_hook", "run", "sql", "autocommit", "True", "parameters", "parameters"], ["self", "conn", "execute", "assert_called_once_with", "sql", "parameters"]]}, "name": "test_run_with_parameters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "run", "sql", "autocommit", "True", "parameters", "parameters"], ["self", "conn", "set_autocommit", "assert_called_once_with", "True"], ["self", "conn", "execute", "assert_called_once_with", "sql", "parameters"], ["self", "conn", "commit", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_run_with_parameters", "ret_exprs": [], "ret_type": "", "variables": {"parameters": "", "sql": ""}, "variables_p": {"parameters": [["Set[str]", 0.11158038554567076], ["dict", 0.09668751940154546], ["Dict[str, Union[None, int, str]]", 0.09413797830964798], ["Tuple[Literal, Dict[str, str]]", 0.09340189102239738], ["Dict[str, dict]", 0.09256321673713491]], "sql": [["dict", 0.11005014654474041], ["List[bool]", 0.10616754718998188]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [128, 44]], "fn_var_ln": {"args": [[123, 12], [123, 16]], "kwargs": [[123, 18], [123, 24]], "sql": [[119, 8], [119, 11]]}, "fn_var_occur": {"args": [["args", "kwargs", "item"], ["len", "args"], ["args", "sql", "i"]], "kwargs": [["args", "kwargs", "item"]], "sql": [["self", "db_hook", "run", "sql", "autocommit", "True"], ["args", "sql", "i"], ["self", "conn", "execute", "assert_called_with", "sql", "None"]]}, "name": "test_run_multi_queries", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "run", "sql", "autocommit", "True"], ["self", "conn", "set_autocommit", "assert_called_once_with", "True"], ["enumerate", "self", "conn", "execute", "call_args_list"], ["self", "conn", "execute", "assert_called_with", "sql", "None"], ["self", "conn", "commit", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_run_multi_queries", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "kwargs": "", "sql": ""}, "variables_p": {"args": [["List[str]", 0.09143741286941787], ["List[Union[int, str]]", 0.08048842436904799]], "kwargs": [["Dict[str, List[str]]", 0.09847814033850154], ["Dict[str, Any]", 0.09387100623962091], ["List[str]", 0.08951791011943076]], "sql": [["int", 0.11951730055487766], ["tuple", 0.08983681426158777], ["Dict[str, Union[Any, Any]]", 0.08519330556274554]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[130, 4], [133, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_run_no_queries", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "run", "sql"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_run_no_queries", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Queries like DROP and SELECT are of type rowCount (not resultSet),", "long_descr": "which raises an error in pyexasol if trying to iterate over them", "ret": null}, "fn_lc": [[135, 4], [142, 29]], "fn_var_ln": {"sql": [[141, 8], [141, 11]]}, "fn_var_occur": {"sql": [["self", "db_hook", "run", "sql"]]}, "name": "test_no_result_set", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "cur", "result_type", "mock", "Mock"], ["self", "cur", "result_type", "return_value"], ["self", "db_hook", "run", "sql"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_no_result_set", "ret_exprs": [], "ret_type": "", "variables": {"sql": ""}, "variables_p": {"sql": [["float", 0.10518799296218735], ["Pattern[str]", 0.09315261618165768]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [146, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_bulk_load", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "bulk_load"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_bulk_load", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [150, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_bulk_dump", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "bulk_dump"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_bulk_dump", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[152, 4], [153, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_serialize_cell", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "_serialize_cell", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_serialize_cell", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[155, 4], [173, 9]], "fn_var_ln": {"export_params": [[159, 8], [159, 21]], "file_name": [[156, 8], [156, 17]], "query_or_table": [[157, 8], [157, 22]], "query_params": [[158, 8], [158, 20]]}, "fn_var_occur": {"export_params": [["self", "db_hook", "export_to_file", "filename", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"], ["self", "conn", "export_to_file", "assert_called_once_with", "dst", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"]], "file_name": [["self", "db_hook", "export_to_file", "filename", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"], ["self", "conn", "export_to_file", "assert_called_once_with", "dst", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"]], "query_or_table": [["self", "db_hook", "export_to_file", "filename", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"], ["self", "conn", "export_to_file", "assert_called_once_with", "dst", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"]], "query_params": [["self", "db_hook", "export_to_file", "filename", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"], ["self", "conn", "export_to_file", "assert_called_once_with", "dst", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"]]}, "name": "test_export_to_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "db_hook", "export_to_file", "filename", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"], ["self", "conn", "export_to_file", "assert_called_once_with", "dst", "file_name", "query_or_table", "query_or_table", "query_params", "query_params", "export_params", "export_params"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExasolHook.test_export_to_file", "ret_exprs": [], "ret_type": "", "variables": {"export_params": "", "file_name": "", "query_or_table": "", "query_params": ""}, "variables_p": {"export_params": [["list", 0.09208000851415873]], "file_name": [["str", 0.5906299377025355]], "query_or_table": [["str", 0.1545367936755146], ["Dict[str, float]", 0.09755410820607568]], "query_params": [["bytes", 0.18959627553196046]]}}], "name": "TestExasolHook", "q_name": "TestExasolHook", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "pytest", "airflow", "models", "airflow", "providers", "exasol", "hooks", "exasol", "ExasolHook"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 44}, "session_id": "-K_XVQWmztJO2OGKBAEeH_AZpbf3aDhLGVH3ozhZxyw", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}