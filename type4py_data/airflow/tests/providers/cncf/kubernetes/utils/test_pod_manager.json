{"error": null, "response": {"classes": [{"cls_lc": [[44, 0], [459, 54]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [47, 72]], "fn_var_ln": {"mock_kube_client": [[46, 8], [46, 29]], "pod_manager": [[47, 8], [47, 24]]}, "fn_var_occur": {"mock_kube_client": [["self", "mock_kube_client", "mock", "Mock"], ["self", "pod_manager", "PodManager", "kube_client", "self", "mock_kube_client"]], "pod_manager": [["self", "pod_manager", "PodManager", "kube_client", "self", "mock_kube_client"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "mock", "Mock"], ["self", "pod_manager", "PodManager", "kube_client", "self", "mock_kube_client"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"mock_kube_client": "", "pod_manager": ""}, "variables_p": {"mock_kube_client": [["mock.Mock", 0.5870926296226475]], "pod_manager": [["str", 0.2214054201091152], ["unittesmock.MagicMock", 0.10158595001461437], ["property", 0.10004622760622064], ["Union[Literal, str]", 0.08828233455834135], ["list", 0.08738690680698386], ["int", 0.08738690680698386]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [54, 50]], "fn_var_ln": {"logs": [[52, 8], [52, 12]]}, "fn_var_occur": {"logs": [["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "pod", "mock", "sentinel", "container_name"], ["type", "logs", "PodLogsConsumer"], ["logs", "response", "mock", "sentinel", "logs"]]}, "name": "test_read_pod_logs_successfully_returns_logs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "pod", "mock", "sentinel", "container_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_logs_successfully_returns_logs", "ret_exprs": [], "ret_type": "", "variables": {"logs": ""}, "variables_p": {"logs": [["logging.Logger", 0.495089031435142], ["logging.Formatter", 0.3335513507954156], ["logging.handlers.RotatingFileHandler", 0.09656539616316802]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [84, 9]], "fn_var_ln": {"logs": [[62, 8], [62, 12]]}, "fn_var_occur": {"logs": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "BaseHTTPError", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "pod", "mock", "sentinel", "container_name"], ["type", "logs", "PodLogsConsumer"], ["mock", "sentinel", "logs", "logs", "response"]]}, "name": "test_read_pod_logs_retries_successfully", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "BaseHTTPError", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "pod", "mock", "sentinel", "container_name"], ["self", "mock_kube_client", "read_namespaced_pod_log", "assert_has_calls", "mock", "call", "_preload_content", "False", "container", "follow", "True", "timestamps", "False", "name", "mock", "sentinel", "metadata", "name", "namespace", "mock", "sentinel", "metadata", "namespace", "mock", "call", "_preload_content", "False", "container", "follow", "True", "timestamps", "False", "name", "mock", "sentinel", "metadata", "name", "namespace", "mock", "sentinel", "metadata", "namespace"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_logs_retries_successfully", "ret_exprs": [], "ret_type": "", "variables": {"logs": ""}, "variables_p": {"logs": [["logging.Logger", 0.30639513493680903], ["logging.Formatter", 0.19793766990779282], ["str", 0.17652780132962115]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [94, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_read_pod_logs_retries_fails", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "BaseHTTPError", "BaseHTTPError", "BaseHTTPError"], ["self", "pod_manager", "read_pod_logs", "pod", "mock", "sentinel", "container_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_logs_retries_fails", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [114, 9]], "fn_var_ln": {"logs": [[99, 8], [99, 12]]}, "fn_var_occur": {"logs": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "pod", "mock", "sentinel", "container_name", "tail_lines"], ["type", "logs", "PodLogsConsumer"], ["mock", "sentinel", "logs", "logs", "response"]]}, "name": "test_read_pod_logs_successfully_with_tail_lines", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "pod", "mock", "sentinel", "container_name", "tail_lines"], ["self", "mock_kube_client", "read_namespaced_pod_log", "assert_has_calls", "mock", "call", "_preload_content", "False", "container", "follow", "True", "timestamps", "False", "name", "mock", "sentinel", "metadata", "name", "namespace", "mock", "sentinel", "metadata", "namespace", "tail_lines"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_logs_successfully_with_tail_lines", "ret_exprs": [], "ret_type": "", "variables": {"logs": ""}, "variables_p": {"logs": [["logging.FileHandler", 0.25806391118625743], ["logging.Logger", 0.21879894160482746], ["logging.Formatter", 0.1404235800879171], ["logging.StreamHandler", 0.08767829005258368]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [134, 9]], "fn_var_ln": {"logs": [[119, 8], [119, 12]]}, "fn_var_occur": {"logs": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "mock", "sentinel", "since_seconds"], ["type", "logs", "PodLogsConsumer"], ["mock", "sentinel", "logs", "logs", "response"]]}, "name": "test_read_pod_logs_successfully_with_since_seconds", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "mock", "sentinel", "logs"], ["logs", "self", "pod_manager", "read_pod_logs", "mock", "sentinel", "since_seconds"], ["self", "mock_kube_client", "read_namespaced_pod_log", "assert_has_calls", "mock", "call", "_preload_content", "False", "container", "follow", "True", "timestamps", "False", "name", "mock", "sentinel", "metadata", "name", "namespace", "mock", "sentinel", "metadata", "namespace", "since_seconds"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_logs_successfully_with_since_seconds", "ret_exprs": [], "ret_type": "", "variables": {"logs": ""}, "variables_p": {"logs": [["logging.Logger", 0.4902156538317397], ["List[Dict[Any, Any]]", 0.2477881945032769], ["logging.Formatter", 0.15407504245402226]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[136, 4], [140, 45]], "fn_var_ln": {"events": [[139, 8], [139, 14]]}, "fn_var_occur": {"events": [["self", "mock_kube_client", "list_namespaced_event", "return_value", "mock", "sentinel", "events"], ["events", "self", "pod_manager", "read_pod_events", "mock", "sentinel"], ["mock", "sentinel", "events", "events"]]}, "name": "test_read_pod_events_successfully_returns_events", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "list_namespaced_event", "return_value", "mock", "sentinel", "events"], ["events", "self", "pod_manager", "read_pod_events", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_events_successfully_returns_events", "ret_exprs": [], "ret_type": "", "variables": {"events": ""}, "variables_p": {"events": [["unittesmock.MagicMock", 0.21905682856658681], ["dict", 0.09999664915354023], ["List[unittesmock.MagicMock]", 0.09193227666657679], ["tests.utils.MockCoroutine", 0.08828641704802195]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[142, 4], [161, 9]], "fn_var_ln": {"events": [[148, 8], [148, 14]]}, "fn_var_occur": {"events": [["self", "mock_kube_client", "list_namespaced_event", "side_effect", "BaseHTTPError", "mock", "sentinel", "events"], ["events", "self", "pod_manager", "read_pod_events", "mock", "sentinel"], ["mock", "sentinel", "events", "events"]]}, "name": "test_read_pod_events_retries_successfully", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "list_namespaced_event", "side_effect", "BaseHTTPError", "mock", "sentinel", "events"], ["events", "self", "pod_manager", "read_pod_events", "mock", "sentinel"], ["self", "mock_kube_client", "list_namespaced_event", "assert_has_calls", "mock", "call", "namespace", "mock", "sentinel", "metadata", "namespace", "field_selector", "mock", "sentinel", "metadata", "name", "mock", "call", "namespace", "mock", "sentinel", "metadata", "namespace", "field_selector", "mock", "sentinel", "metadata", "name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_events_retries_successfully", "ret_exprs": [], "ret_type": "", "variables": {"events": ""}, "variables_p": {"events": [["unittesmock.MagicMock", 0.1603098709883617], ["str", 0.11473845596572235]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 4], [171, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_read_pod_events_retries_fails", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "list_namespaced_event", "side_effect", "BaseHTTPError", "BaseHTTPError", "BaseHTTPError"], ["self", "pod_manager", "read_pod_events", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_events_retries_fails", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [177, 49]], "fn_var_ln": {"pod_info": [[176, 8], [176, 16]]}, "fn_var_occur": {"pod_info": [["self", "mock_kube_client", "read_namespaced_pod", "return_value", "mock", "sentinel", "pod_info"], ["pod_info", "self", "pod_manager", "read_pod", "mock", "sentinel"], ["mock", "sentinel", "pod_info", "pod_info"]]}, "name": "test_read_pod_returns_logs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod", "return_value", "mock", "sentinel", "pod_info"], ["pod_info", "self", "pod_manager", "read_pod", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_returns_logs", "ret_exprs": [], "ret_type": "", "variables": {"pod_info": ""}, "variables_p": {"pod_info": [["Dict[str, Any]", 0.20307002882246333], ["mock._Call", 0.19057453704999738], ["unittesmock.MagicMock", 0.12580735220056502], ["str", 0.10256702261988217], ["Union[unittesmock.AsyncMock, unittesmock.MagicMock]", 0.09753994327962222], ["List[int]", 0.09531798155978342]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[179, 4], [192, 9]], "fn_var_ln": {"pod_info": [[185, 8], [185, 16]]}, "fn_var_occur": {"pod_info": [["self", "mock_kube_client", "read_namespaced_pod", "side_effect", "BaseHTTPError", "mock", "sentinel", "pod_info"], ["pod_info", "self", "pod_manager", "read_pod", "mock", "sentinel"], ["mock", "sentinel", "pod_info", "pod_info"]]}, "name": "test_read_pod_retries_successfully", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod", "side_effect", "BaseHTTPError", "mock", "sentinel", "pod_info"], ["pod_info", "self", "pod_manager", "read_pod", "mock", "sentinel"], ["self", "mock_kube_client", "read_namespaced_pod", "assert_has_calls", "mock", "call", "mock", "sentinel", "metadata", "name", "mock", "sentinel", "metadata", "namespace", "mock", "call", "mock", "sentinel", "metadata", "name", "mock", "sentinel", "metadata", "namespace"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_retries_successfully", "ret_exprs": [], "ret_type": "", "variables": {"pod_info": ""}, "variables_p": {"pod_info": [["unittesmock.MagicMock", 0.1955074407414545], ["str", 0.08508921850975425], ["Union[unittesmock.AsyncMock, unittesmock.MagicMock]", 0.07833720045729448], ["int", 0.07714618799852431], ["mock._Call", 0.076661570826109]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[201, 8], [204, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "pod_state_gen", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_monitor_pod_empty_logs.<locals>.pod_state_gen", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[194, 4], [209, 68]], "fn_var_ln": {"mock_response": [[207, 8], [207, 21]], "pod_info_running": [[198, 8], [198, 24]], "pod_info_succeeded": [[199, 8], [199, 26]], "running_status": [[196, 8], [196, 22]]}, "fn_var_occur": {"mock_response": [["mock_response", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value", "iter"], ["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock_response"]], "pod_info_running": [], "pod_info_succeeded": [], "running_status": []}, "name": "test_monitor_pod_empty_logs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod", "side_effect", "pod_state_gen"], ["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock_response"], ["self", "pod_manager", "fetch_container_logs", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_monitor_pod_empty_logs", "ret_exprs": [], "ret_type": "", "variables": {"mock_response": "", "pod_info_running": "", "pod_info_succeeded": "", "running_status": ""}, "variables_p": {"mock_response": [["unittesmock.MagicMock", 0.39774724234735803], ["mock.mock.MagicMock", 0.10654180154428411]], "pod_info_running": [["int", 0.23273145614325658], ["bool", 0.1684404188964772], ["Set[Tuple[str, str]]", 0.09118751911876279], ["Dict[str, Dict[str, Any]]", 0.060501547680314766], ["bytes", 0.05917315356226895]], "pod_info_succeeded": [["str", 0.30000000000000004], ["List[str]", 0.20000000000000004], ["Dict[str, Any]", 0.20000000000000004], ["Optional[\"ShippingInfo\"]", 0.10000000000000002], ["Dict[str, Dict[str, Any]]", 0.10000000000000002]], "running_status": [["str", 0.9999999983230536], ["int", 1.6769462144404037e-09]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[218, 8], [222, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "pod_state_gen", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_monitor_pod_logs_failures_non_fatal.<locals>.pod_state_gen", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[226, 8], [228, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "pod_log_gen", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_monitor_pod_logs_failures_non_fatal.<locals>.pod_log_gen", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[211, 4], [232, 68]], "fn_var_ln": {"pod_info_running": [[215, 8], [215, 24]], "pod_info_succeeded": [[216, 8], [216, 26]], "running_status": [[213, 8], [213, 22]]}, "fn_var_occur": {"pod_info_running": [], "pod_info_succeeded": [], "running_status": []}, "name": "test_monitor_pod_logs_failures_non_fatal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod_log", "side_effect", "pod_log_gen"], ["self", "pod_manager", "fetch_container_logs", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_monitor_pod_logs_failures_non_fatal", "ret_exprs": [], "ret_type": "", "variables": {"pod_info_running": "", "pod_info_succeeded": "", "running_status": ""}, "variables_p": {"pod_info_running": [["int", 0.23273145614325658], ["bool", 0.1684404188964772], ["Set[Tuple[str, str]]", 0.09118751911876279], ["Dict[str, Dict[str, Any]]", 0.060501547680314766], ["bytes", 0.05917315356226895]], "pod_info_succeeded": [["str", 0.30000000000000004], ["List[str]", 0.20000000000000004], ["Dict[str, Any]", 0.20000000000000004], ["Optional[\"ShippingInfo\"]", 0.10000000000000002], ["Dict[str, Dict[str, Any]]", 0.10000000000000002]], "running_status": [["str", 0.9999999983230536], ["int", 1.6769462144404037e-09]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[234, 4], [242, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_read_pod_retries_fails", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod", "side_effect", "BaseHTTPError", "BaseHTTPError", "BaseHTTPError"], ["self", "pod_manager", "read_pod", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_read_pod_retries_fails", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[244, 4], [253, 34]], "fn_var_ln": {"line": [[251, 19], [251, 23]], "log_message": [[245, 8], [245, 19]], "real_timestamp": [[250, 8], [250, 22]], "timestamp": [[251, 8], [251, 17]]}, "fn_var_occur": {"line": [["timestamp", "line", "self", "pod_manager", "parse_log_line", "log_message"], ["line", "log_message"], ["timestamp", "line", "self", "pod_manager", "parse_log_line", "join", "real_timestamp", "log_message"], ["line", "log_message"]], "log_message": [["timestamp", "line", "self", "pod_manager", "parse_log_line", "log_message"], ["line", "log_message"], ["timestamp", "line", "self", "pod_manager", "parse_log_line", "join", "real_timestamp", "log_message"], ["line", "log_message"]], "real_timestamp": [["timestamp", "line", "self", "pod_manager", "parse_log_line", "join", "real_timestamp", "log_message"], ["timestamp", "pendulum", "parse", "real_timestamp"]], "timestamp": [["timestamp", "line", "self", "pod_manager", "parse_log_line", "log_message"], ["timestamp", "None"], ["timestamp", "line", "self", "pod_manager", "parse_log_line", "join", "real_timestamp", "log_message"], ["timestamp", "pendulum", "parse", "real_timestamp"]]}, "name": "test_parse_log_line", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["timestamp", "line", "self", "pod_manager", "parse_log_line", "log_message"], ["timestamp", "line", "self", "pod_manager", "parse_log_line", "join", "real_timestamp", "log_message"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_parse_log_line", "ret_exprs": [], "ret_type": "", "variables": {"line": "", "log_message": "", "real_timestamp": "", "timestamp": ""}, "variables_p": {"line": [["str", 0.20014406830421622], ["OSError", 0.19047245827156115], ["int", 0.11872485106126543]], "log_message": [["logging.Logger", 0.3482198370399292], ["logging.LogRecord", 0.19105331645766688], ["logging.Formatter", 0.12974549373614222], ["dict", 0.08914408497793759]], "real_timestamp": [["List[int]", 0.12384728298391325], ["Type[str]", 0.12377037140331847], ["tuple", 0.11593258409876589], ["dict", 0.10622462044206682], ["Optional[str]", 0.09764308327539163], ["str", 0.08761019086354989], ["int", 0.08051631819122279]], "timestamp": [["str", 0.1918038442877818], ["List[str]", 0.11879999318877216], ["Dict[str, str]", 0.11795089434194565], ["logging.Logger", 0.10226375776380195], ["Callable[[], Any]", 0.08209542751598249]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[255, 4], [259, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_parse_invalid_log_line", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "logging", "INFO"], ["caplog", "text"], ["caplog", "text"]], "self": [["self", "pod_manager", "parse_log_line"]]}, "params_p": {"args": [], "caplog": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_parse_invalid_log_line", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[262, 4], [268, 49]], "fn_var_ln": {"side_effect": [[263, 8], [263, 38]]}, "fn_var_occur": {"side_effect": [["mock_run_pod_async", "side_effect", "ApiException", "status", "mock", "MagicMock"]]}, "name": "test_start_pod_retries_on_409_error", "params": {"mock_run_pod_async": "", "self": ""}, "params_descr": {"mock_run_pod_async": "", "self": ""}, "params_occur": {"mock_run_pod_async": [["mock_run_pod_async", "side_effect", "ApiException", "status", "mock", "MagicMock"], ["mock_run_pod_async", "call_count"]], "self": [["self", "pod_manager", "create_pod", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_pod_async": [["unittesmock.MagicMock", 0.6968098419526774], ["mock.MagicMock", 0.10517153920402328]], "self": []}, "q_name": "TestPodManager.test_start_pod_retries_on_409_error", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["Dict[str, Dict[str, Any]]", 0.39421132411967574], ["str", 0.17148046360321476], ["unittesmock.MagicMock", 0.11237377612236318], ["Dict[str, Union[Any, Any, Any, Any]]", 0.08031320630609162], ["List[Union[Any, Any, Any]]", 0.08031320630609162]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [274, 54]], "fn_var_ln": {"side_effect": [[272, 8], [272, 38]]}, "fn_var_occur": {"side_effect": [["mock_run_pod_async", "side_effect", "ApiException", "status"]]}, "name": "test_start_pod_fails_on_other_exception", "params": {"mock_run_pod_async": "", "self": ""}, "params_descr": {"mock_run_pod_async": "", "self": ""}, "params_occur": {"mock_run_pod_async": [["mock_run_pod_async", "side_effect", "ApiException", "status"]], "self": [["self", "pod_manager", "create_pod", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_pod_async": [], "self": []}, "q_name": "TestPodManager.test_start_pod_fails_on_other_exception", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["str", 0.10372028674817588], ["Dict[str, Union[Any, str]]", 0.10372028674817588], ["Dict[str, Any]", 0.09788890040581222]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[277, 4], [287, 49]], "fn_var_ln": {"side_effect": [[278, 8], [278, 38]]}, "fn_var_occur": {"side_effect": [["mock_run_pod_async", "side_effect", "ApiException", "status", "ApiException", "status", "ApiException", "status", "ApiException", "status"]]}, "name": "test_start_pod_retries_three_times", "params": {"mock_run_pod_async": "", "self": ""}, "params_descr": {"mock_run_pod_async": "", "self": ""}, "params_occur": {"mock_run_pod_async": [["mock_run_pod_async", "side_effect", "ApiException", "status", "ApiException", "status", "ApiException", "status", "ApiException", "status"], ["mock_run_pod_async", "call_count"]], "self": [["self", "pod_manager", "create_pod", "mock", "sentinel"]]}, "params_p": {"args": [], "kwargs": [], "mock_run_pod_async": [], "self": []}, "q_name": "TestPodManager.test_start_pod_retries_three_times", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["int", 0.17683193443975687], ["list", 0.14314800814365983], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.10873780690835369]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[289, 4], [299, 13]], "fn_var_ln": {"expected_msg": [[293, 8], [293, 20]], "mock_pod": [[294, 8], [294, 16]], "pod_response": [[290, 8], [290, 20]]}, "fn_var_occur": {"expected_msg": [["pytest", "raises", "AirflowException", "match", "expected_msg"]], "mock_pod": [["mock_pod", "MagicMock"], ["self", "pod_manager", "await_pod_start", "pod", "mock_pod", "startup_timeout"]], "pod_response": [["pod_response", "mock", "MagicMock"], ["pod_response", "status", "phase"], ["self", "mock_kube_client", "read_namespaced_pod", "return_value", "pod_response"]]}, "name": "test_start_pod_raises_informative_error_on_timeout", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_kube_client", "read_namespaced_pod", "return_value", "pod_response"], ["self", "pod_manager", "await_pod_start", "pod", "mock_pod", "startup_timeout"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_start_pod_raises_informative_error_on_timeout", "ret_exprs": [], "ret_type": "", "variables": {"expected_msg": "", "mock_pod": "", "pod_response": ""}, "variables_p": {"expected_msg": [["Pattern[str]", 0.4489808906483841], ["List[str]", 0.2908043470288664], ["str", 0.17672311767519258], ["list", 0.0834916446475569]], "mock_pod": [["mock.Mock", 0.4530227131353877], ["unittesmock.MagicMock", 0.16461460116656373], ["str", 0.1288982454890917], ["mock.MagicMock", 0.0870800765123054]], "pod_response": [["mock.Mock", 0.43534249132994574], ["mock.MagicMock", 0.2561398086467951], ["dict", 0.07387883011039828]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[302, 4], [306, 89]], "fn_var_ln": {"mock_pod": [[303, 8], [303, 16]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["self", "pod_manager", "read_pod", "mock", "MagicMock", "return_value", "mock_pod"], ["container_is_running_mock", "assert_called_with", "pod", "mock_pod", "container_name"]]}, "name": "test_container_is_running", "params": {"container_is_running_mock": "", "self": ""}, "params_descr": {"container_is_running_mock": "", "self": ""}, "params_occur": {"container_is_running_mock": [["container_is_running_mock", "assert_called_with", "pod", "mock_pod", "container_name"]], "self": [["self", "pod_manager", "read_pod", "mock", "MagicMock", "return_value", "mock_pod"], ["self", "pod_manager", "container_is_running", "None"]]}, "params_p": {"args": [], "container_is_running_mock": [["unittesmock.MagicMock", 0.7336751879834111]], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_container_is_running", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": ""}, "variables_p": {"mock_pod": [["unittesmock.MagicMock", 0.8984458275210851], ["mock.Mock", 0.10155417247891495]]}}, {"docstring": {"func": "If container done, should exit, no matter setting of follow.", "long_descr": null, "ret": null}, "fn_lc": [[311, 4], [318, 35]], "fn_var_ln": {"mock_pod": [[313, 8], [313, 16]], "ret": [[316, 8], [316, 11]], "return_value": [[315, 8], [315, 38]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"]], "ret": [["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"], ["ret", "last_log_time", "None"], ["ret", "running", "False"]], "return_value": [["logs_available", "return_value", "False"], ["container_running", "return_value", "False"]]}, "name": "test_fetch_container_done", "params": {"container_running": "", "follow": "", "logs_available": "", "self": ""}, "params_descr": {"container_running": "", "follow": "", "logs_available": "", "self": ""}, "params_occur": {"container_running": [["container_running", "return_value", "False"]], "follow": [["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"]], "logs_available": [["logs_available", "return_value", "False"]], "self": [["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"]]}, "params_p": {"args": [], "container_running": [["unittesmock.MagicMock", 0.3610896441013944]], "follow": [["unittesmock.MagicMock", 0.14629207053261992], ["List[str]", 0.10879915499260041], ["Optional[str]", 0.09509250660359739], ["str", 0.08659927540363936]], "kwargs": [], "logs_available": [["unittesmock.MagicMock", 0.12526633365781054], ["mock.MagicMock", 0.08552326481262282]], "self": []}, "q_name": "TestPodManager.test_fetch_container_done", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "ret": "", "return_value": ""}, "variables_p": {"mock_pod": [["unittesmock.MagicMock", 0.6365574313007529], ["mock.Mock", 0.09309146747744486], ["str", 0.08710221223685846]], "ret": [["str", 0.20893825907817204], ["Dict[str, Any]", 0.11547919752867865], ["dict", 0.09278275188009327], ["DefaultDict[Any, dict]", 0.09211483137641806], ["Dict[str, List[str]]", 0.09146676200311007], ["list", 0.08999048484206074]], "return_value": [["str", 0.3100884340955329], ["Dict[str, Dict[str, Any]]", 0.16225407006530898], ["List[Dict[str, Any]]", 0.11278748440994293], ["Dict[str, int]", 0.10469832008925316], ["datetime.datetime.datetime", 0.0868822343803964], ["float", 0.08144259927556308], ["Dict[str, Union[Any, Any, Any]]", 0.07247505713808856], ["pytch.utils.Position", 0.06937180054591391]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[324, 4], [338, 39]], "fn_var_ln": {"mock_pod": [[325, 8], [325, 16]], "ret_values": [[334, 8], [334, 18]], "return_value": [[329, 8], [329, 41]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs", "follow_logs", "follow"]], "ret_values": [["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs", "follow_logs", "follow"]], "return_value": [["self", "pod_manager", "get_container_names", "return_value"], ["container_is_running", "return_value", "False"], ["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value"]]}, "name": "test_fetch_requested_container_logs", "params": {"container_is_running": "", "container_logs": "", "follow": "", "self": ""}, "params_descr": {"container_is_running": "", "container_logs": "", "follow": "", "self": ""}, "params_occur": {"container_is_running": [["container_is_running", "return_value", "False"]], "container_logs": [["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs", "follow_logs", "follow"]], "follow": [["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs", "follow_logs", "follow"]], "self": [["self", "pod_manager", "read_pod", "MagicMock"], ["self", "pod_manager", "get_container_names", "MagicMock"], ["self", "pod_manager", "get_container_names", "return_value"], ["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value"], ["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs", "follow_logs", "follow"]]}, "params_p": {"args": [], "container_is_running": [["mock.MagicMock", 0.2125611970042386], ["unittesmock.MagicMock", 0.20274306624612617]], "container_logs": [["unittesmock.MagicMock", 0.6992888368768037]], "follow": [["unittesmock.MagicMock", 0.6992888368768037]], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_fetch_requested_container_logs", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "ret_values": "", "return_value": ""}, "variables_p": {"mock_pod": [["unittesmock.MagicMock", 0.788083598032443], ["mock.Mock", 0.21191640196755707]], "ret_values": [["str", 0.7200279170762336], ["Dict[str, Optional[int]]", 0.09736055010889401], ["List[Dict[str, Any]]", 0.09415546373906167]], "return_value": [["str", 0.8096288672435694], ["int", 0.09525619908755845]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[343, 4], [358, 35]], "fn_var_ln": {"mock_pod": [[344, 8], [344, 16]], "ret_values": [[353, 8], [353, 18]], "return_value": [[348, 8], [348, 38]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs"]], "ret_values": [["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs"], ["len", "ret_values"]], "return_value": [["self", "pod_manager", "get_container_names", "return_value"], ["container_running", "return_value", "False"], ["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value"]]}, "name": "test_fetch_requested_container_logs_invalid", "params": {"container_logs": "", "container_running": "", "self": ""}, "params_descr": {"container_logs": "", "container_running": "", "self": ""}, "params_occur": {"container_logs": [["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs"]], "container_running": [["container_running", "return_value", "False"]], "self": [["self", "pod_manager", "read_pod", "MagicMock"], ["self", "pod_manager", "get_container_names", "MagicMock"], ["self", "pod_manager", "get_container_names", "return_value"], ["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value"], ["ret_values", "self", "pod_manager", "fetch_requested_container_logs", "pod", "mock_pod", "container_logs", "container_logs"]]}, "params_p": {"args": [], "container_logs": [["unittesmock.MagicMock", 0.6389552574953317], ["str", 0.18133186596989057]], "container_running": [["unittesmock.MagicMock", 0.29712521277760384], ["mock.MagicMock", 0.22555678531140727]], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_fetch_requested_container_logs_invalid", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "ret_values": "", "return_value": ""}, "variables_p": {"mock_pod": [["unittesmock.MagicMock", 0.7467268495179199], ["mock.Mock", 0.25327315048208]], "ret_values": [["str", 0.5061945525465401], ["Final", 0.12299130319752657], ["Dict[str, List[str]]", 0.08757508841597303]], "return_value": [["str", 0.8096288672435694], ["int", 0.09525619908755845]]}}, {"docstring": {"func": "If given since_time, should be used.", "long_descr": null, "ret": null}, "fn_lc": [[363, 4], [375, 43]], "fn_var_ln": {"args": [[374, 8], [374, 12]], "kwargs": [[374, 14], [374, 20]], "mock_pod": [[365, 8], [365, 16]], "return_value": [[368, 8], [368, 38]], "since_time": [[372, 8], [372, 18]]}, "fn_var_occur": {"args": [["args", "kwargs", "self", "mock_kube_client", "read_namespaced_pod_log", "call_args_list"]], "kwargs": [["args", "kwargs", "self", "mock_kube_client", "read_namespaced_pod_log", "call_args_list"]], "mock_pod": [["mock_pod", "MagicMock"], ["self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "since_time", "since_time"]], "return_value": [["mock_now", "return_value", "DateTime", "tzinfo", "Timezone"], ["logs_available", "return_value", "True"], ["container_running", "return_value", "False"], ["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value"]], "since_time": [["since_time", "DateTime", "tzinfo", "Timezone"], ["self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "since_time", "since_time"]]}, "name": "test_fetch_container_since_time", "params": {"container_running": "", "logs_available": "", "mock_now": "", "self": ""}, "params_descr": {"container_running": "", "logs_available": "", "mock_now": "", "self": ""}, "params_occur": {"container_running": [["container_running", "return_value", "False"]], "logs_available": [["logs_available", "return_value", "True"]], "mock_now": [["mock_now", "return_value", "DateTime", "tzinfo", "Timezone"]], "self": [["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value"], ["self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "since_time", "since_time"], ["args", "kwargs", "self", "mock_kube_client", "read_namespaced_pod_log", "call_args_list"]]}, "params_p": {"args": [], "container_running": [["unittesmock.MagicMock", 0.17317934109960526], ["mock.MagicMock", 0.0924761513508486]], "kwargs": [], "logs_available": [["mock.Mock", 0.1621946970899835]], "mock_now": [["unittesmock.MagicMock", 0.39377549226726105]], "self": []}, "q_name": "TestPodManager.test_fetch_container_since_time", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "kwargs": "", "mock_pod": "", "return_value": "", "since_time": ""}, "variables_p": {"args": [["Tuple[str, str, str]", 0.18624084800501628], ["List[str]", 0.17694200265334964], ["Dict[str, str]", 0.12491495664421581], ["logging.FileHandler", 0.1080118965901237], ["Type[Dict[str, Any]]", 0.10359805665737762], ["List[Optional[str]]", 0.08933346572672173], ["list", 0.08277252417600185]], "kwargs": [["str", 0.1770735154314092], ["List[str]", 0.17017318745333868], ["List[Tuple[Any, Any, Any]]", 0.0973080167713084]], "mock_pod": [["mock.Mock", 0.4000780095013528], ["unittesmock.MagicMock", 0.18165952991915202], ["str", 0.14293860784204288], ["mock.MagicMock", 0.09552318282075362]], "return_value": [["str", 0.5711579569468263], ["Dict[str, Tuple[str, str, str]]", 0.09326252090571346], ["int", 0.09206472643920621], ["Dict[str, List[str]]", 0.09117518718525676]], "since_time": [["int", 0.40452786200206553], ["datetime.date", 0.19534305752883815], ["datetime.timedelta", 0.17987426207604368], ["datetime", 0.1331396265307929], ["raiden.utils.PaymentAmount", 0.0871151918622597]]}}, {"docstring": {"func": "When called with follow, should keep looping even after disconnections, if pod still running.", "long_descr": "When called with follow=False, should return immediately even though still running.", "ret": null}, "fn_lc": [[379, 4], [394, 41]], "fn_var_ln": {"mock_pod": [[386, 8], [386, 16]], "ret": [[391, 8], [391, 11]], "side_effect": [[387, 8], [387, 42]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"]], "ret": [["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"], ["ret", "last_log_time", "DateTime", "tzinfo", "Timezone"], ["ret", "running", "exp_running"]], "side_effect": [["container_running_mock", "side_effect", "True", "True", "False"]]}, "name": "test_fetch_container_running_follow", "params": {"container_running_mock": "", "exp_running": "", "follow": "", "is_running_calls": "", "self": ""}, "params_descr": {"container_running_mock": "", "exp_running": "", "follow": "", "is_running_calls": "", "self": ""}, "params_occur": {"container_running_mock": [["container_running_mock", "side_effect", "True", "True", "False"], ["len", "container_running_mock", "call_args_list", "is_running_calls"]], "exp_running": [["ret", "running", "exp_running"]], "follow": [["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"]], "is_running_calls": [["len", "container_running_mock", "call_args_list", "is_running_calls"]], "self": [["self", "mock_kube_client", "read_namespaced_pod_log", "return_value", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value"], ["ret", "self", "pod_manager", "fetch_container_logs", "pod", "mock_pod", "container_name", "follow", "follow"]]}, "params_p": {"args": [], "container_running_mock": [["unittesmock.MagicMock", 0.4129750379353642]], "exp_running": [["unittesmock.MagicMock", 0.09567157033168167]], "follow": [["unittesmock.MagicMock", 0.3247928465081038], ["str", 0.1901730808990975], ["bool", 0.10545890569928094], ["Optional[str]", 0.09362937903852103]], "is_running_calls": [["unittesmock.MagicMock", 0.39495982853565903], ["dict", 0.09025838419719413]], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_fetch_container_running_follow", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "ret": "", "side_effect": ""}, "variables_p": {"mock_pod": [["unittesmock.MagicMock", 0.6365574313007529], ["mock.Mock", 0.09309146747744486], ["str", 0.08710221223685846]], "ret": [["list", 0.17724084677881874], ["Dict[str, Union[Any, Any, Any, str]]", 0.10706985163402911], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0916537705824997], ["Dict[str, Union[datetime.datetime, datetime.timedelta, int, str]]", 0.09064791175269896], ["Tuple[Literal]", 0.09056010775565126], ["str", 0.08919104154431616]], "side_effect": [["Dict[int, Dict[str, Any]]", 0.20286910972878722], ["Tuple[Literal, Literal, Literal]", 0.17649243768256556], ["str", 0.10143455486439361], ["mock.MagicMock", 0.09152809097317015]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[400, 4], [412, 82]], "fn_var_ln": {"container_status": [[401, 8], [401, 24]], "pod_info": [[410, 8], [410, 16]]}, "fn_var_occur": {"container_status": [["container_status", "MagicMock"], ["container_status", "configure_mock", "True", "container_state", "None", "True", "container_state", "None", "True", "container_state", "None"], ["pod_info", "status", "container_statuses", "container_status"]], "pod_info": [["pod_info", "MagicMock"], ["pod_info", "status", "container_statuses", "container_status"], ["container_is_terminated", "pod_info", "expected_is_terminated"]]}, "name": "test_container_is_terminated_with_waiting_state", "params": {"container_state": "", "expected_is_terminated": "", "self": ""}, "params_descr": {"container_state": "", "expected_is_terminated": "", "self": ""}, "params_occur": {"container_state": [["container_status", "configure_mock", "True", "container_state", "None", "True", "container_state", "None", "True", "container_state", "None"]], "expected_is_terminated": [["container_is_terminated", "pod_info", "expected_is_terminated"]], "self": []}, "params_p": {"args": [], "container_state": [["kubernetes.clienCustomObjectsApi", 0.7692149915049705]], "expected_is_terminated": [], "kwargs": [], "self": []}, "q_name": "TestPodManager.test_container_is_terminated_with_waiting_state", "ret_exprs": [], "ret_type": "", "variables": {"container_status": "", "pod_info": ""}, "variables_p": {"container_status": [["str", 0.21549151540774816], ["unittesmock.MagicMock", 0.09006193039307211], ["Type[unittesmock.MagicMock]", 0.08991552682526949]], "pod_info": [["mock.Mock", 0.6238962639007319], ["unittesmock.MagicMock", 0.18903622383148194], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.1870675122677861]]}}, {"docstring": {"func": "test when valid json is retrieved from xcom sidecar container.", "long_descr": null, "ret": null}, "fn_lc": [[417, 4], [424, 50]], "fn_var_ln": {"mock_pod": [[420, 8], [420, 16]], "ret": [[422, 8], [422, 11]], "return_value": [[421, 8], [421, 42]], "xcom_json": [[419, 8], [419, 17]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["ret", "self", "pod_manager", "extract_xcom", "pod", "mock_pod"]], "ret": [["ret", "self", "pod_manager", "extract_xcom", "pod", "mock_pod"], ["ret", "xcom_json"]], "return_value": [["mock_exec_pod_command", "return_value", "xcom_json"]], "xcom_json": [["mock_exec_pod_command", "return_value", "xcom_json"], ["ret", "xcom_json"]]}, "name": "test_extract_xcom_success", "params": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_descr": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_occur": {"mock_exec_pod_command": [["mock_exec_pod_command", "return_value", "xcom_json"]], "mock_exec_xcom_kill": [["mock_exec_xcom_kill", "call_count"]], "mock_kubernetes_stream": [], "self": [["ret", "self", "pod_manager", "extract_xcom", "pod", "mock_pod"]]}, "params_p": {"args": [], "kwargs": [], "mock_exec_pod_command": [["unittesmock.MagicMock", 0.1257348762627925]], "mock_exec_xcom_kill": [["unittesmock.MagicMock", 0.43709555486256596], ["mock.MagicMock", 0.09271153400603052]], "mock_kubernetes_stream": [["mock.Mock", 0.06964855053292926]], "self": []}, "q_name": "TestPodManager.test_extract_xcom_success", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "ret": "", "return_value": "", "xcom_json": ""}, "variables_p": {"mock_pod": [["unittesmock.MagicMock", 0.5052875108153133]], "ret": [["int", 0.4017891654186526], ["List[float]", 0.08887459818927919]], "return_value": [["int", 0.2894638126780938], ["str", 0.1162598140691148], ["Optional[bytes]", 0.11404761894176807], ["List[str]", 0.098696312067303], ["Tuple[int, int]", 0.08110637935532153], ["list", 0.0791255541667267]], "xcom_json": [["str", 0.3409976987725546], ["property", 0.1487686179545267], ["int", 0.12190604319576026], ["List[Dict[str, str]]", 0.10425339383078105], ["Dict[str, Union[Any, Any, Any]]", 0.09157470201166475]]}}, {"docstring": {"func": "test when invalid json is retrieved from xcom sidecar container.", "long_descr": null, "ret": null}, "fn_lc": [[429, 4], [436, 54]], "fn_var_ln": {"mock_pod": [[433, 12], [433, 20]], "return_value": [[434, 12], [434, 46]], "xcom_json": [[432, 12], [432, 21]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["self", "pod_manager", "extract_xcom", "pod", "mock_pod"]], "return_value": [["mock_exec_pod_command", "return_value", "xcom_json"]], "xcom_json": [["mock_exec_pod_command", "return_value", "xcom_json"]]}, "name": "test_extract_xcom_failure", "params": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_descr": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_occur": {"mock_exec_pod_command": [["mock_exec_pod_command", "return_value", "xcom_json"]], "mock_exec_xcom_kill": [["mock_exec_xcom_kill", "call_count"]], "mock_kubernetes_stream": [], "self": [["self", "pod_manager", "extract_xcom", "pod", "mock_pod"]]}, "params_p": {"args": [], "kwargs": [], "mock_exec_pod_command": [["unittesmock.MagicMock", 0.1257348762627925]], "mock_exec_xcom_kill": [["unittesmock.MagicMock", 0.43709555486256596], ["mock.MagicMock", 0.09271153400603052]], "mock_kubernetes_stream": [["mock.Mock", 0.06964855053292926]], "self": []}, "q_name": "TestPodManager.test_extract_xcom_failure", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "return_value": "", "xcom_json": ""}, "variables_p": {"mock_pod": [["mock.Mock", 0.4502583502554627], ["str", 0.20274205806413884], ["mock.MagicMock", 0.17212928794704377], ["unittesmock.MagicMock", 0.08741263604465689]], "return_value": [["int", 0.2894638126780938], ["str", 0.1162598140691148], ["Optional[bytes]", 0.11404761894176807], ["List[str]", 0.098696312067303], ["Tuple[int, int]", 0.08110637935532153], ["list", 0.0791255541667267]], "xcom_json": [["Dict[str, Dict[str, Any]]", 0.5180045668202203], ["Tuple[List[str], Tuple[Literal, Literal], List[str]]", 0.1185954109737542], ["unittesmock.MagicMock", 0.11253419483530548], ["list", 0.07844779270068168], ["property", 0.06016794343697296]]}}, {"docstring": {"func": "test when __airflow_xcom_result_empty__ is retrieved from xcom sidecar container.", "long_descr": null, "ret": null}, "fn_lc": [[441, 4], [448, 50]], "fn_var_ln": {"mock_pod": [[443, 8], [443, 16]], "ret": [[446, 8], [446, 11]], "return_value": [[445, 8], [445, 42]], "xcom_result": [[444, 8], [444, 19]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["ret", "self", "pod_manager", "extract_xcom", "pod", "mock_pod"]], "ret": [["ret", "self", "pod_manager", "extract_xcom", "pod", "mock_pod"], ["ret", "xcom_result"]], "return_value": [["mock_exec_pod_command", "return_value", "xcom_result"]], "xcom_result": [["mock_exec_pod_command", "return_value", "xcom_result"], ["ret", "xcom_result"]]}, "name": "test_extract_xcom_empty", "params": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_descr": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_occur": {"mock_exec_pod_command": [["mock_exec_pod_command", "return_value", "xcom_result"]], "mock_exec_xcom_kill": [["mock_exec_xcom_kill", "call_count"]], "mock_kubernetes_stream": [], "self": [["ret", "self", "pod_manager", "extract_xcom", "pod", "mock_pod"]]}, "params_p": {"args": [], "kwargs": [], "mock_exec_pod_command": [["unittesmock.MagicMock", 0.1257348762627925]], "mock_exec_xcom_kill": [["unittesmock.MagicMock", 0.43709555486256596], ["mock.MagicMock", 0.09271153400603052]], "mock_kubernetes_stream": [["mock.Mock", 0.06964855053292926]], "self": []}, "q_name": "TestPodManager.test_extract_xcom_empty", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "ret": "", "return_value": "", "xcom_result": ""}, "variables_p": {"mock_pod": [["unittesmock.MagicMock", 0.5052875108153133]], "ret": [["int", 0.4017891654186526], ["List[float]", 0.08887459818927919]], "return_value": [["int", 0.2894638126780938], ["str", 0.1162598140691148], ["Optional[bytes]", 0.11404761894176807], ["List[str]", 0.098696312067303], ["Tuple[int, int]", 0.08110637935532153], ["list", 0.0791255541667267]], "xcom_result": [["List[str]", 0.12670407021638694], ["str", 0.10464883991225656], ["List[float]", 0.10235903518136422], ["list", 0.09206313203236512], ["Dict[str, Union[int, str]]", 0.09098777005823015]]}}, {"docstring": {"func": "test when None is retrieved from xcom sidecar container.", "long_descr": null, "ret": null}, "fn_lc": [[453, 4], [459, 54]], "fn_var_ln": {"mock_pod": [[456, 12], [456, 20]], "return_value": [[457, 12], [457, 46]]}, "fn_var_occur": {"mock_pod": [["mock_pod", "MagicMock"], ["self", "pod_manager", "extract_xcom", "pod", "mock_pod"]], "return_value": [["mock_exec_pod_command", "return_value", "None"]]}, "name": "test_extract_xcom_none", "params": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_descr": {"mock_exec_pod_command": "", "mock_exec_xcom_kill": "", "mock_kubernetes_stream": "", "self": ""}, "params_occur": {"mock_exec_pod_command": [["mock_exec_pod_command", "return_value", "None"]], "mock_exec_xcom_kill": [["mock_exec_xcom_kill", "call_count"]], "mock_kubernetes_stream": [], "self": [["self", "pod_manager", "extract_xcom", "pod", "mock_pod"]]}, "params_p": {"args": [], "kwargs": [], "mock_exec_pod_command": [["unittesmock.MagicMock", 0.14374855452954666]], "mock_exec_xcom_kill": [["unittesmock.MagicMock", 0.43752394815931006], ["mock.MagicMock", 0.08761151963378735], ["mock.Mock", 0.0836607221685994]], "mock_kubernetes_stream": [["mock.Mock", 0.12519761094456489]], "self": []}, "q_name": "TestPodManager.test_extract_xcom_none", "ret_exprs": [], "ret_type": "", "variables": {"mock_pod": "", "return_value": ""}, "variables_p": {"mock_pod": [["mock.Mock", 0.4502583502554627], ["str", 0.20274205806413884], ["mock.MagicMock", 0.17212928794704377], ["unittesmock.MagicMock", 0.08741263604465689]], "return_value": [["Optional[bytes]", 0.1165024844203908], ["int", 0.10286610504358709], ["str", 0.08146292341023556], ["tests.utils.MockCoroutine", 0.080827871627044], ["Dict[str, Union[Any, Any, Any, Any]]", 0.0778223842057549], ["List[Union[Any, Any, Any]]", 0.0778223842057549], ["Dict[str, Any]", 0.07692438246611959]]}}], "name": "TestPodManager", "q_name": "TestPodManager", "variables": {}, "variables_p": {}}, {"cls_lc": [[472, 4], [473, 12]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "RemotePodMock", "q_name": "params_for_test_container_is_running.<locals>.RemotePodMock", "variables": {}, "variables_p": {}}, {"cls_lc": [[475, 4], [477, 28]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[476, 8], [477, 28]], "fn_var_ln": {"name": [[477, 12], [477, 21]]}, "fn_var_occur": {"name": [["self", "name", "name"]]}, "name": "__init__", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "name", "name"]], "self": [["self", "name", "name"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.6404554567662508], ["Dict[str, Any]", 0.1323744471252627], ["List[str]", 0.09225535683805484], ["dict", 0.06347828706017733]], "self": []}, "q_name": "params_for_test_container_is_running.<locals>.ContainerStatusMock.__init__", "ret_exprs": [], "ret_type": "", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.9999999999637337], ["Dict[str, str]", 3.626623568486625e-11]]}}], "name": "ContainerStatusMock", "q_name": "params_for_test_container_is_running.<locals>.ContainerStatusMock", "variables": {}, "variables_p": {}}, {"cls_lc": [[520, 0], [695, 63]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[531, 4], [540, 50]], "fn_var_ln": {"consumer": [[534, 12], [534, 20]], "return_value": [[533, 12], [533, 39]]}, "fn_var_occur": {"consumer": [["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value", "chunks", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_is_running", "mock", "MagicMock", "return_value", "True", "container_name"], ["list", "consumer", "expected_logs"]], "return_value": [["logs_available", "return_value", "True"], ["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value", "chunks", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_is_running", "mock", "MagicMock", "return_value", "True", "container_name"]]}, "name": "test_chunks", "params": {"chunks": "", "expected_logs": "", "self": ""}, "params_descr": {"chunks": "", "expected_logs": "", "self": ""}, "params_occur": {"chunks": [["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value", "chunks", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_is_running", "mock", "MagicMock", "return_value", "True", "container_name"]], "expected_logs": [["list", "consumer", "expected_logs"]], "self": []}, "params_p": {"args": [], "chunks": [], "expected_logs": [["bool", 0.3936696578335539], ["int", 0.1071597524483693], ["List[List[Any]]", 0.10359501093741715], ["Tuple[paradigm.models.Base, tests.utils.Kwargs]", 0.07966278994269527], ["dict", 0.07825138130548666], ["List[str]", 0.07825138130548666], ["str", 0.07674819143614087]], "kwargs": [], "self": []}, "q_name": "TestPodLogsConsumer.test_chunks", "ret_exprs": [], "ret_type": "", "variables": {"consumer": "", "return_value": ""}, "variables_p": {"consumer": [["unittesmock.MagicMock", 0.8573074777212633]], "return_value": [["mock._Call", 0.19729073947319167], ["Optional[bytes]", 0.11509609004288733], ["List[Dict[str, Any]]", 0.10015748830938158], ["bool", 0.09889045500208399], ["tests.utils.MockCoroutine", 0.09263922043835024], ["unittesmock.MagicMock", 0.09232658029164008]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[542, 4], [551, 39]], "fn_var_ln": {"consumer": [[545, 12], [545, 20]], "return_value": [[544, 12], [544, 39]]}, "fn_var_occur": {"consumer": [["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_is_running", "mock", "MagicMock", "return_value", "False", "container_name"], ["list", "consumer"]], "return_value": [["logs_available", "return_value", "False"], ["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "stream", "mock", "MagicMock", "return_value", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_is_running", "mock", "MagicMock", "return_value", "False", "container_name"]]}, "name": "test_container_is_not_running", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPodLogsConsumer.test_container_is_not_running", "ret_exprs": [], "ret_type": "", "variables": {"consumer": "", "return_value": ""}, "variables_p": {"consumer": [["unittesmock.MagicMock", 0.7037150119429645], ["mock.MagicMock", 0.10307636301904577]], "return_value": [["unittesmock.MagicMock", 0.48110893136020105], ["Callable", 0.1369825534483954], ["str", 0.10032577031354874], ["mock.Mock", 0.09732278975184985], ["tuple", 0.09275347651208546]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[602, 4], [624, 71]], "fn_var_ln": {"consumer": [[617, 12], [617, 20]], "return_value": [[613, 8], [613, 46]]}, "fn_var_occur": {"consumer": [["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_name", "post_termination_timeout", "post_termination_timeout"], ["consumer", "logs_available", "expected_logs_available"]], "return_value": [["mock_container_is_running", "return_value", "container_run"], ["mock_get_container_status", "return_value", "mock", "MagicMock", "state", "mock", "MagicMock", "terminated", "mock", "MagicMock", "finished_at", "termination_time"]]}, "name": "test_logs_available", "params": {"container_run": "", "expected_logs_available": "", "mock_container_is_running": "", "mock_get_container_status": "", "now_time": "", "post_termination_timeout": "", "self": "", "termination_time": ""}, "params_descr": {"container_run": "", "expected_logs_available": "", "mock_container_is_running": "", "mock_get_container_status": "", "now_time": "", "post_termination_timeout": "", "self": "", "termination_time": ""}, "params_occur": {"container_run": [["mock_container_is_running", "return_value", "container_run"]], "expected_logs_available": [["consumer", "logs_available", "expected_logs_available"]], "mock_container_is_running": [["mock_container_is_running", "return_value", "container_run"]], "mock_get_container_status": [["mock_get_container_status", "return_value", "mock", "MagicMock", "state", "mock", "MagicMock", "terminated", "mock", "MagicMock", "finished_at", "termination_time"]], "now_time": [["time_machine", "travel", "now_time"]], "post_termination_timeout": [["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_name", "post_termination_timeout", "post_termination_timeout"]], "self": [], "termination_time": [["mock_get_container_status", "return_value", "mock", "MagicMock", "state", "mock", "MagicMock", "terminated", "mock", "MagicMock", "finished_at", "termination_time"]]}, "params_p": {"args": [], "container_run": [], "expected_logs_available": [["unittesmock.MagicMock", 0.19002149120505957], ["dict", 0.11083488533075461]], "kwargs": [], "mock_container_is_running": [], "mock_get_container_status": [["Dict[str, Any]", 0.2849986723943051], ["unittesmock.MagicMock", 0.1139266077504816]], "now_time": [], "post_termination_timeout": [["unittesmock.MagicMock", 0.2772243106588411], ["Dict[str, Any]", 0.1952973284891284]], "self": [], "termination_time": [["Dict[str, Any]", 0.2849986723943051], ["unittesmock.MagicMock", 0.1139266077504816]]}, "q_name": "TestPodLogsConsumer.test_logs_available", "ret_exprs": [], "ret_type": "", "variables": {"consumer": "", "return_value": ""}, "variables_p": {"consumer": [["unittesmock.MagicMock", 0.6810456141514125]], "return_value": [["str", 0.2274236650716172], ["int", 0.16724909835693622], ["list", 0.16175722491745886], ["bool", 0.0964962395690118], ["Dict[str, Any]", 0.09147556503423832], ["List[Dict[str, str]]", 0.0840801842644554]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[673, 4], [695, 63]], "fn_var_ln": {"consumer": [[681, 8], [681, 16]]}, "fn_var_occur": {"consumer": [["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_name", "read_pod_cache_timeout", "read_pod_cache_timeout"], ["consumer", "pod_manager", "read_pod", "side_effect", "mock_read_pods"], ["consumer", "read_pod", "expected_read_pods"], ["consumer", "read_pod", "expected_read_pods"]]}, "name": "test_read_pod", "params": {"expected_read_pods": "", "mock_read_pod_at_0": "", "mock_read_pod_at_1": "", "mock_read_pods": "", "read_pod_cache_timeout": "", "self": ""}, "params_descr": {"expected_read_pods": "", "mock_read_pod_at_0": "", "mock_read_pod_at_1": "", "mock_read_pods": "", "read_pod_cache_timeout": "", "self": ""}, "params_occur": {"expected_read_pods": [["consumer", "read_pod", "expected_read_pods"], ["consumer", "read_pod", "expected_read_pods"]], "mock_read_pod_at_0": [["time_machine", "travel", "mock_read_pod_at_0"]], "mock_read_pod_at_1": [["time_machine", "travel", "mock_read_pod_at_1"]], "mock_read_pods": [["consumer", "pod_manager", "read_pod", "side_effect", "mock_read_pods"]], "read_pod_cache_timeout": [["consumer", "PodLogsConsumer", "response", "mock", "MagicMock", "pod", "mock", "MagicMock", "pod_manager", "mock", "MagicMock", "container_name", "read_pod_cache_timeout", "read_pod_cache_timeout"]], "self": []}, "params_p": {"args": [], "expected_read_pods": [["str", 0.12984923329882145], ["bool", 0.09737792889624379]], "kwargs": [], "mock_read_pod_at_0": [["unittesmock.MagicMock", 0.2944614393737085], ["mock.Mock", 0.21407000580387775]], "mock_read_pod_at_1": [["unittesmock.MagicMock", 0.2944614393737085], ["mock.Mock", 0.21407000580387775]], "mock_read_pods": [["unittesmock.MagicMock", 0.19112007779704365], ["str", 0.10583958980527632]], "read_pod_cache_timeout": [["unittesmock.MagicMock", 0.586752508284471]], "self": []}, "q_name": "TestPodLogsConsumer.test_read_pod", "ret_exprs": [], "ret_type": "", "variables": {"consumer": ""}, "variables_p": {"consumer": [["unittesmock.MagicMock", 0.49489938899669267], ["Union[mock.AsyncMock, mock.MagicMock]", 0.40856663495392603]]}}], "name": "TestPodLogsConsumer", "q_name": "TestPodLogsConsumer", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[479, 4], [487, 16]], "fn_var_ln": {"e": [[480, 8], [480, 9]], "status": [[481, 8], [481, 16]]}, "fn_var_occur": {"e": [["e", "RemotePodMock"], ["e", "status", "RemotePodMock"], ["e", "status", "container_statuses"], ["e", "status", "container_statuses", "append", "container", "r", "False"], ["e", "status", "container_statuses", "append", "container", "r", "True"]], "status": [["e", "status", "RemotePodMock"], ["e", "status", "container_statuses"], ["e", "status", "container_statuses", "append", "container", "r", "False"], ["e", "status", "container_statuses", "append", "container", "r", "True"]]}, "name": "remote_pod", "params": {"not_running": "", "running": ""}, "params_descr": {"not_running": "", "running": ""}, "params_occur": {"not_running": [], "running": []}, "params_p": {"args": [], "kwargs": [], "not_running": [["bool", 0.9127502118664169]], "running": [["bool", 0.9127502118664169]]}, "q_name": "params_for_test_container_is_running.<locals>.remote_pod", "ret_exprs": ["return e"], "ret_type": "", "ret_type_p": [["str", 0.3306288106554681], ["dict", 0.17556849508005018], ["bool", 0.14568620191821569], ["Optional[str]", 0.09279934415528474]], "variables": {"e": "", "status": ""}, "variables_p": {"e": [["int", 0.3240040165203698], ["Exception", 0.19807059561885854], ["list", 0.18961947143452762], ["str", 0.09313888423181563], ["Dict[str, str]", 0.09236522042980246]], "status": [["str", 0.38412406648376474], ["Dict[str, Any]", 0.10779887606328922], ["cmk.utils.type_defs.UserId", 0.10213284580869017], ["Dict[int, str]", 0.0938900515993494]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[489, 4], [493, 16]], "fn_var_ln": {"c": [[490, 8], [490, 9]], "state": [[491, 8], [491, 15]]}, "fn_var_occur": {"c": [["c", "ContainerStatusMock", "name"], ["c", "state", "RemotePodMock"], ["c", "state", "running", "running", "None"]], "state": [["c", "state", "RemotePodMock"], ["c", "state", "running", "running", "None"]]}, "name": "container", "params": {"name": "", "running": ""}, "params_descr": {"name": "", "running": ""}, "params_occur": {"name": [["c", "ContainerStatusMock", "name"]], "running": [["c", "state", "running", "running", "None"]]}, "params_p": {"args": [], "kwargs": [], "name": [["Optional[dict]", 0.14827959485592118], ["str", 0.09225930456673713]], "running": [["bool", 0.19692341744687802], ["Optional[Dict]", 0.186270717965325], ["str", 0.13916292493333665], ["TextIO", 0.09386111963478799]]}, "q_name": "params_for_test_container_is_running.<locals>.container", "ret_exprs": ["return c"], "ret_type": "", "ret_type_p": [["Optional[Iterable[str]]", 0.13041768424842323], ["Iterable[str]", 0.0993610800038996], ["str", 0.09691928011796652], ["dict", 0.09616077132907441], ["List[str]", 0.0925851053342838], ["Tuple[str]", 0.09198741268865146]], "variables": {"c": "", "state": ""}, "variables_p": {"c": [["list", 0.10727188106686462], ["set", 0.10650779806839078], ["int", 0.10004415348138923], ["str", 0.09701079765112552], ["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.0943649942253348]], "state": [["List[int]", 0.09688440633943751], ["Dict[str, float]", 0.09503290704860504], ["List[float]", 0.0946029918803372], ["Generator[Any, None, None]", 0.09306377788803852]]}}, {"docstring": {"func": "The `container_is_running` method is designed to handle an assortment of bad objects", "long_descr": "returned from `read_pod`.  E.g. a None object, an object `e` such that `e.status` is None,\nan object `e` such that `e.status.container_statuses` is None, and so on.  This function\nemits params used in `test_container_is_running` to verify this behavior.\n\nWe create mock classes not derived from MagicMock because with an instance `e` of MagicMock,\ntests like `e.hello is not None` are always True.", "ret": null}, "fn_lc": [[462, 0], [508, 24]], "fn_var_ln": {"p": [[500, 4], [500, 5]], "pod_mock_list": [[495, 4], [495, 17]], "status": [[501, 4], [501, 12]]}, "fn_var_occur": {"p": [["p", "RemotePodMock"], ["p", "status", "None"], ["pod_mock_list", "append", "pytest", "param", "p", "False", "id"], ["p", "RemotePodMock"], ["p", "status", "RemotePodMock"], ["p", "status", "container_statuses"], ["pod_mock_list", "append", "pytest", "param", "p", "False", "id"]], "pod_mock_list": [["pod_mock_list", "append", "pytest", "param", "None", "False", "id"], ["pod_mock_list", "append", "pytest", "param", "p", "False", "id"], ["pod_mock_list", "append", "pytest", "param", "p", "False", "id"], ["pod_mock_list", "append", "pytest", "param", "remote_pod", "False", "id"], ["pod_mock_list", "append", "pytest", "param", "remote_pod", "None", "False", "id"], ["pod_mock_list", "append", "pytest", "param", "remote_pod", "False", "id"], ["pod_mock_list", "append", "pytest", "param", "remote_pod", "True", "id"]], "status": [["p", "status", "None"], ["p", "status", "RemotePodMock"], ["p", "status", "container_statuses"]]}, "name": "params_for_test_container_is_running", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "params_for_test_container_is_running", "ret_exprs": ["return pod_mock_list"], "ret_type": "", "ret_type_p": [["str", 0.19089634711305917], ["Dict[str, Any]", 0.13928455181930594], ["List[str]", 0.11321333497304496]], "variables": {"p": "", "pod_mock_list": "", "status": ""}, "variables_p": {"p": [], "pod_mock_list": [["List[str]", 0.6097141451988104], ["str", 0.09706441346999778], ["list", 0.09510961271306857]], "status": [["int", 0.2058928692294603], ["List[str]", 0.11293774168144673], ["str", 0.09285210131732856]]}}, {"docstring": {"func": "The `container_is_running` function is designed to handle an assortment of bad objects", "long_descr": "returned from `read_pod`.  E.g. a None object, an object `e` such that `e.status` is None,\nan object `e` such that `e.status.container_statuses` is None, and so on.  This test\nverifies the expected behavior.", "ret": null}, "fn_lc": [[512, 0], [517, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_container_is_running", "params": {"remote_pod": "", "result": ""}, "params_descr": {"remote_pod": "", "result": ""}, "params_occur": {"remote_pod": [["container_is_running", "remote_pod", "result"]], "result": [["container_is_running", "remote_pod", "result"]]}, "params_p": {"args": [], "kwargs": [], "remote_pod": [], "result": []}, "q_name": "test_container_is_running", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "logging", "datetime", "datetime", "json", "decoder", "JSONDecodeError", "unittest", "mock", "unittest", "mock", "MagicMock", "pendulum", "pytest", "time_machine", "kubernetes", "client", "rest", "ApiException", "pendulum", "DateTime", "pendulum", "tz", "timezone", "Timezone", "urllib3", "exceptions", "HTTPError", "BaseHTTPError", "airflow", "exceptions", "AirflowException", "airflow", "providers", "cncf", "kubernetes", "utils", "pod_manager", "PodLogsConsumer", "PodManager", "PodPhase", "container_is_running", "container_is_terminated", "airflow", "utils", "timezone", "utc"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 171}, "session_id": "sOuZb2vAOnBsD3KSGP9XjFap31c46MtFCljDSeh2wMU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}