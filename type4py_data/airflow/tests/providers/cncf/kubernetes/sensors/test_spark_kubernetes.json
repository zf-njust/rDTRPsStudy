{"error": null, "response": {"classes": [{"cls_lc": [[552, 0], [866, 47]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[553, 4], [570, 56]], "fn_var_ln": {"args": [[569, 8], [569, 12]], "dag": [[570, 8], [570, 16]]}, "fn_var_occur": {"args": [["args", "timezone", "datetime"], ["self", "dag", "DAG", "default_args", "args"]], "dag": [["self", "dag", "DAG", "default_args", "args"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag", "DAG", "default_args", "args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSparkKubernetesSensor.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag": ""}, "variables_p": {"args": [["dict", 0.16519000510875745], ["Dict[str, int]", 0.10572535519693417], ["List[str]", 0.08678559945925718]], "dag": [["bool", 0.2048703308790552], ["dict", 0.19090330750955672], ["id3c.db.types.GenomeRecord", 0.13106309879648786], ["str", 0.08800142005137496], ["Exception", 0.08517259256046432]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[576, 4], [586, 9]], "fn_var_ln": {"sensor": [[577, 8], [577, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_completed_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_completed_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[592, 4], [603, 9]], "fn_var_ln": {"sensor": [[593, 8], [593, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_failed_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_failed_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[609, 4], [619, 9]], "fn_var_ln": {"sensor": [[610, 8], [610, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_not_processed_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_not_processed_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[625, 4], [635, 9]], "fn_var_ln": {"sensor": [[626, 8], [626, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_new_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_new_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[641, 4], [651, 9]], "fn_var_ln": {"sensor": [[642, 8], [642, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_running_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_running_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[657, 4], [667, 9]], "fn_var_ln": {"sensor": [[658, 8], [658, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_submitted_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_submitted_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[673, 4], [683, 9]], "fn_var_ln": {"sensor": [[674, 8], [674, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_pending_rerun_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_pending_rerun_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[689, 4], [700, 9]], "fn_var_ln": {"sensor": [[690, 8], [690, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_unknown_application", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_unknown_application", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["int", 0.2344571327075425], ["dict", 0.20740711420817104], ["Dict[str, str]", 0.12538216854832474], ["raiden.utils.Any", 0.10189192777679508]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[706, 4], [722, 9]], "fn_var_ln": {"sensor": [[707, 8], [707, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "namespace", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_namespace_from_sensor", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "namespace", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_namespace_from_sensor", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["str", 0.08185890567110421]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[728, 4], [747, 9]], "fn_var_ln": {"api_group": [[729, 8], [729, 17]], "api_version": [[730, 8], [730, 19]], "sensor": [[731, 8], [731, 14]]}, "fn_var_occur": {"api_group": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "task_id", "api_group", "api_group", "api_version", "api_version"], ["mock_get_namespaced_crd", "assert_called_once_with", "group", "api_group", "name", "namespace", "plural", "version", "api_version"]], "api_version": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "task_id", "api_group", "api_group", "api_version", "api_version"], ["mock_get_namespaced_crd", "assert_called_once_with", "group", "api_group", "name", "namespace", "plural", "version", "api_version"]], "sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "task_id", "api_group", "api_group", "api_version", "api_version"], ["sensor", "poke", "None"]]}, "name": "test_api_group_and_version_from_sensor", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "api_group", "name", "namespace", "plural", "version", "api_version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "task_id", "api_group", "api_group", "api_version", "api_version"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [["mock.Mock", 0.09891691397526585]], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_api_group_and_version_from_sensor", "ret_exprs": [], "ret_type": "", "variables": {"api_group": "", "api_version": "", "sensor": ""}, "variables_p": {"api_group": [["str", 0.6128748918825159], ["List[str]", 0.09610025374899049], ["int", 0.09233035722214435], ["Dict[str, Any]", 0.08793367785776972]], "api_version": [["str", 0.725435347714828], ["Union[bytes, str]", 0.09893060706981194], ["int", 0.08101835066185564]], "sensor": [["str", 0.6128748918825159], ["List[str]", 0.09610025374899049], ["int", 0.09233035722214435], ["Dict[str, Any]", 0.08793367785776972]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[753, 4], [768, 9]], "fn_var_ln": {"sensor": [[754, 8], [754, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_namespace_from_connection", "params": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kubernetes_hook": "", "self": ""}, "params_occur": {"mock_get_namespaced_crd": [["mock_get_namespaced_crd", "assert_called_once_with", "group", "name", "namespace", "plural", "version"]], "mock_kubernetes_hook": [["mock_kubernetes_hook", "assert_called_once_with"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "dag", "self", "dag", "kubernetes_conn_id", "task_id"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [], "mock_kubernetes_hook": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_namespace_from_connection", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["dict", 0.21552523353737973], ["str", 0.19609523339632562]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[779, 4], [793, 67]], "fn_var_ln": {"sensor": [[782, 8], [782, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_driver_logging_failure", "params": {"error_log_call": "", "mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": ""}, "params_descr": {"error_log_call": "", "mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": ""}, "params_occur": {"error_log_call": [["error_log_call", "assert_called_once_with", "TEST_POD_LOG_RESULT"]], "mock_get_namespaced_crd": [], "mock_kube_conn": [], "mock_log_call": [["mock_log_call", "assert_called_once_with", "namespace", "container"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "error_log_call": [["str", 0.17910830206955844], ["cmk.utils.type_defs.HostAddress", 0.09271251226648015]], "kwargs": [], "mock_get_namespaced_crd": [["type", 0.13394546165409524], ["bool", 0.09585982286307154], ["Exception", 0.08247216082961577], ["Dict[str, Any]", 0.08247216082961577]], "mock_kube_conn": [["type", 0.13394546165409524], ["bool", 0.09585982286307154], ["Exception", 0.08247216082961577], ["Dict[str, Any]", 0.08247216082961577]], "mock_log_call": [["dict", 0.09657269389159866]], "self": []}, "q_name": "TestSparkKubernetesSensor.test_driver_logging_failure", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["rotkehlchen.db.settings.DBSettings", 0.11166553716003776], ["str", 0.1113994179644901]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[804, 4], [819, 47]], "fn_var_ln": {"log_info_call": [[817, 8], [817, 21]], "log_value": [[818, 8], [818, 17]], "sensor": [[807, 8], [807, 14]]}, "fn_var_occur": {"log_info_call": [["log_info_call", "info_log_call", "mock_calls"], ["log_value", "log_info_call"]], "log_value": [["log_value", "log_info_call"], ["log_value", "TEST_POD_LOG_RESULT"]], "sensor": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_driver_logging_completed", "params": {"info_log_call": "", "mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": ""}, "params_descr": {"info_log_call": "", "mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": ""}, "params_occur": {"info_log_call": [["log_info_call", "info_log_call", "mock_calls"]], "mock_get_namespaced_crd": [], "mock_kube_conn": [], "mock_log_call": [["mock_log_call", "assert_called_once_with", "namespace", "container"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "info_log_call": [], "kwargs": [], "mock_get_namespaced_crd": [["mock.Mock", 0.08644121134136373], ["Callable", 0.08199022391397362]], "mock_kube_conn": [["mock.Mock", 0.08644121134136373], ["Callable", 0.08199022391397362]], "mock_log_call": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_driver_logging_completed", "ret_exprs": [], "ret_type": "", "variables": {"log_info_call": "", "log_value": "", "sensor": ""}, "variables_p": {"log_info_call": [["int", 0.5276642250435354], ["str", 0.27774600572815145], ["List[str]", 0.19458976922831336]], "log_value": [["str", 0.8086463118786389], ["dict", 0.10249762577287791]], "sensor": [["rotkehlchen.db.settings.DBSettings", 0.11166553716003776], ["str", 0.1113994179644901]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[830, 4], [840, 42]], "fn_var_ln": {"sensor": [[833, 8], [833, 14]]}, "fn_var_occur": {"sensor": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_driver_logging_error", "params": {"mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": "", "warn_log_call": ""}, "params_descr": {"mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": "", "warn_log_call": ""}, "params_occur": {"mock_get_namespaced_crd": [], "mock_kube_conn": [], "mock_log_call": [], "self": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"]], "warn_log_call": [["warn_log_call", "assert_called_once"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_namespaced_crd": [["Callable", 0.19468111081329492], ["dict", 0.1031368840267941], ["Callable[..., None]", 0.1031368840267941], ["str", 0.1031368840267941], ["salon.models.Stylist", 0.102231793252579]], "mock_kube_conn": [["Callable", 0.19468111081329492], ["dict", 0.1031368840267941], ["Callable[..., None]", 0.1031368840267941], ["str", 0.1031368840267941], ["salon.models.Stylist", 0.102231793252579]], "mock_log_call": [["Callable", 0.19468111081329492], ["dict", 0.1031368840267941], ["Callable[..., None]", 0.1031368840267941], ["str", 0.1031368840267941], ["salon.models.Stylist", 0.102231793252579]], "self": [], "warn_log_call": [["correios.models.posting.PostingList", 0.17367117966498646]]}, "q_name": "TestSparkKubernetesSensor.test_driver_logging_error", "ret_exprs": [], "ret_type": "", "variables": {"sensor": ""}, "variables_p": {"sensor": [["rotkehlchen.db.settings.DBSettings", 0.11166553716003776], ["str", 0.1113994179644901]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[851, 4], [866, 47]], "fn_var_ln": {"log_info_call": [[864, 8], [864, 21]], "log_value": [[865, 8], [865, 17]], "sensor": [[854, 8], [854, 14]]}, "fn_var_occur": {"log_info_call": [["log_info_call", "info_log_call", "mock_calls"], ["log_value", "log_info_call"]], "log_value": [["log_value", "log_info_call"], ["log_value", "TEST_POD_LOG_RESULT"]], "sensor": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"], ["sensor", "poke", "None"]]}, "name": "test_sidecar_driver_logging_completed", "params": {"info_log_call": "", "mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": ""}, "params_descr": {"info_log_call": "", "mock_get_namespaced_crd": "", "mock_kube_conn": "", "mock_log_call": "", "self": ""}, "params_occur": {"info_log_call": [["log_info_call", "info_log_call", "mock_calls"]], "mock_get_namespaced_crd": [], "mock_kube_conn": [], "mock_log_call": [["mock_log_call", "assert_called_once_with", "namespace", "container"]], "self": [["sensor", "SparkKubernetesSensor", "application_name", "attach_log", "True", "dag", "self", "dag", "task_id"]]}, "params_p": {"args": [], "info_log_call": [], "kwargs": [], "mock_get_namespaced_crd": [["mock.Mock", 0.08644121134136373], ["Callable", 0.08199022391397362]], "mock_kube_conn": [["mock.Mock", 0.08644121134136373], ["Callable", 0.08199022391397362]], "mock_log_call": [], "self": []}, "q_name": "TestSparkKubernetesSensor.test_sidecar_driver_logging_completed", "ret_exprs": [], "ret_type": "", "variables": {"log_info_call": "", "log_value": "", "sensor": ""}, "variables_p": {"log_info_call": [["int", 0.5276642250435354], ["str", 0.27774600572815145], ["List[str]", 0.19458976922831336]], "log_value": [["str", 0.8086463118786389], ["dict", 0.10249762577287791]], "sensor": [["rotkehlchen.db.settings.DBSettings", 0.11166553716003776], ["str", 0.1113994179644901]]}}], "name": "TestSparkKubernetesSensor", "q_name": "TestSparkKubernetesSensor", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "unittest", "mock", "patch", "pytest", "kubernetes", "client", "rest", "ApiException", "airflow", "DAG", "airflow", "exceptions", "AirflowException", "airflow", "models", "Connection", "airflow", "providers", "cncf", "kubernetes", "sensors", "spark_kubernetes", "SparkKubernetesSensor", "airflow", "utils", "db", "timezone"], "mod_var_ln": {"TEST_COMPLETED_APPLICATION": [[32, 0], [32, 26]], "TEST_DRIVER_WITH_SIDECAR_APPLICATION": [[485, 0], [485, 36]], "TEST_FAILED_APPLICATION": [[93, 0], [93, 23]], "TEST_NEW_APPLICATION": [[386, 0], [386, 20]], "TEST_NOT_PROCESSED_APPLICATION": [[217, 0], [217, 30]], "TEST_PENDING_RERUN_APPLICATION": [[433, 0], [433, 30]], "TEST_POD_LOGS": [[547, 0], [547, 13]], "TEST_POD_LOG_RESULT": [[548, 0], [548, 19]], "TEST_RUNNING_APPLICATION": [[263, 0], [263, 24]], "TEST_SUBMITTED_APPLICATION": [[325, 0], [325, 26]], "TEST_UNKNOWN_APPLICATION": [[157, 0], [157, 24]]}, "mod_var_occur": {"TEST_COMPLETED_APPLICATION": [], "TEST_DRIVER_WITH_SIDECAR_APPLICATION": [], "TEST_FAILED_APPLICATION": [], "TEST_NEW_APPLICATION": [], "TEST_NOT_PROCESSED_APPLICATION": [], "TEST_PENDING_RERUN_APPLICATION": [], "TEST_POD_LOGS": [], "TEST_POD_LOG_RESULT": [["error_log_call", "assert_called_once_with", "TEST_POD_LOG_RESULT"], ["log_value", "TEST_POD_LOG_RESULT"], ["log_value", "TEST_POD_LOG_RESULT"]], "TEST_RUNNING_APPLICATION": [], "TEST_SUBMITTED_APPLICATION": [], "TEST_UNKNOWN_APPLICATION": []}, "no_types_annot": {"D": 0, "I": 0, "U": 88}, "session_id": "baZ6Dqy3X5TQYUlTHh4jOQgFxFw3Mz3YJCpOEOZ1ij0", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_COMPLETED_APPLICATION": "", "TEST_DRIVER_WITH_SIDECAR_APPLICATION": "", "TEST_FAILED_APPLICATION": "", "TEST_NEW_APPLICATION": "", "TEST_NOT_PROCESSED_APPLICATION": "", "TEST_PENDING_RERUN_APPLICATION": "", "TEST_POD_LOGS": "", "TEST_POD_LOG_RESULT": "", "TEST_RUNNING_APPLICATION": "", "TEST_SUBMITTED_APPLICATION": "", "TEST_UNKNOWN_APPLICATION": ""}, "variables_p": {"TEST_COMPLETED_APPLICATION": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_DRIVER_WITH_SIDECAR_APPLICATION": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_FAILED_APPLICATION": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_NEW_APPLICATION": [["str", 0.5880675645773465], ["int", 0.22370881994806252], ["List[int]", 0.10385339798509004]], "TEST_NOT_PROCESSED_APPLICATION": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_PENDING_RERUN_APPLICATION": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_POD_LOGS": [["List[str]", 0.48215969013171117], ["str", 0.19405001947314088], ["Union[Literal, str]", 0.1473910943378243], ["List[Tuple[str, Any]]", 0.1005444396686238], ["List[Tuple[str, str, bool]]", 0.04028489066186516], ["bytes", 0.035569865726834876]], "TEST_POD_LOG_RESULT": [["str", 0.7868473122216386], ["List[str]", 0.11796950748070523]], "TEST_RUNNING_APPLICATION": [["int", 0.4999999998760807], ["bool", 0.4999999998358487], ["str", 2.480259286043124e-10], ["list", 4.00446876512944e-11]], "TEST_SUBMITTED_APPLICATION": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]], "TEST_UNKNOWN_APPLICATION": [["List[Union[Any, Any]]", 0.39999999999999997], ["Dict[str, Any]", 0.19999999999999998], ["List[Dict[str, Any]]", 0.09999999999999999], ["str", 0.09999999999999999], ["List[Union[Any, Any, Any]]", 0.09999999999999999], ["bool", 0.09999999999999999]]}}}