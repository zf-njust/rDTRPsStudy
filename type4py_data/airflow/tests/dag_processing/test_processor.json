{"error": null, "response": {"classes": [{"cls_lc": [[75, 0], [992, 25]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [84, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "clean_db", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagFileProcessor.clean_db", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [87, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_class", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "clean_db"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagFileProcessor.setup_class", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [93, 33]], "fn_var_ln": {"null_exec": [[92, 8], [92, 22]], "scheduler_job": [[93, 8], [93, 26]]}, "fn_var_occur": {"null_exec": [["self", "null_exec", "MockExecutor"]], "scheduler_job": [["self", "scheduler_job", "None"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "null_exec", "MockExecutor"], ["self", "scheduler_job", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagFileProcessor.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"null_exec": "", "scheduler_job": ""}, "variables_p": {"null_exec": [["int", 0.8032103581599327]], "scheduler_job": [["bool", 0.9999999997638014], ["int", 3.020395889648087e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [99, 23]], "fn_var_ln": {"scheduler_job": [[98, 12], [98, 30]]}, "fn_var_occur": {"scheduler_job": [["self", "scheduler_job", "self", "scheduler_job", "job_runner", "processor_agent"], ["self", "scheduler_job", "job_runner", "processor_agent", "end"], ["self", "scheduler_job", "None"]]}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "scheduler_job", "self", "scheduler_job", "job_runner", "processor_agent"], ["self", "scheduler_job", "job_runner", "processor_agent", "end"], ["self", "scheduler_job", "None"], ["self", "clean_db"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagFileProcessor.teardown_method", "ret_exprs": [], "ret_type": "None", "variables": {"scheduler_job": ""}, "variables_p": {"scheduler_job": [["str", 0.6304610932380437], ["int", 0.2816882074598197], ["List[str]", 0.08785069930213675]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [106, 70]], "fn_var_ln": {"dag_file_processor": [[102, 8], [102, 26]]}, "fn_var_occur": {"dag_file_processor": [["dag_file_processor", "DagFileProcessor", "dag_ids", "dag_directory", "str", "dag_directory", "log", "mock", "MagicMock"], ["dag_file_processor", "process_file", "file_path", "False", "session"]]}, "name": "_process_file", "params": {"dag_directory": "", "file_path": "", "self": "", "session": ""}, "params_descr": {"dag_directory": "", "file_path": "", "self": "", "session": ""}, "params_occur": {"dag_directory": [["dag_file_processor", "DagFileProcessor", "dag_ids", "dag_directory", "str", "dag_directory", "log", "mock", "MagicMock"]], "file_path": [["dag_file_processor", "process_file", "file_path", "False", "session"]], "self": [], "session": [["dag_file_processor", "process_file", "file_path", "False", "session"]]}, "params_p": {"args": [], "dag_directory": [["tuple", 0.13454103595273875], ["django.db.models.QuerySet", 0.08671534603016799], ["Dict[str, str]", 0.08546706574998277], ["IO", 0.08413230345722227], ["bool", 0.0826008224814589], ["str", 0.08147984566133559]], "file_path": [["bool", 0.5623417313054884], ["str", 0.1688345824169945], ["Optional[str]", 0.06848179215935124]], "kwargs": [], "self": [], "session": [["bool", 0.5623417313054884], ["str", 0.1688345824169945], ["Optional[str]", 0.06848179215935124]]}, "q_name": "TestDagFileProcessor._process_file", "ret_exprs": [], "ret_type": "", "variables": {"dag_file_processor": ""}, "variables_p": {"dag_file_processor": [["unittesmock.MagicMock", 0.09910048207868107], ["dict", 0.09665467097353715], ["list", 0.0948115367356717]]}}, {"docstring": {"func": "Test that the dag file processor calls the sla miss callback", "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [134, 34]], "fn_var_ln": {"dag": [[118, 8], [118, 11]], "mock_dagbag": [[128, 8], [128, 19]], "return_value": [[130, 8], [130, 36]], "session": [[113, 8], [113, 15]], "sla_callback": [[114, 8], [114, 20]], "task": [[118, 13], [118, 17]], "test_start_date": [[117, 8], [117, 23]]}, "fn_var_occur": {"dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "return_value": [["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "sla_callback": [["sla_callback", "MagicMock"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta"], ["sla_callback", "called"]], "task": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"]]}, "name": "test_dag_file_processor_sla_miss_callback", "params": {"create_dummy_dag": "", "get_test_dag": "", "mock_get_dagbag": "", "self": ""}, "params_descr": {"create_dummy_dag": "", "get_test_dag": "", "mock_get_dagbag": "", "self": ""}, "params_occur": {"create_dummy_dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta"]], "get_test_dag": [], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "self": []}, "params_p": {"args": [], "create_dummy_dag": [["int", 0.18210539018943084], ["list", 0.09537423029009949], ["str", 0.08944309169960657], ["Callable[..., None]", 0.08615251282809953]], "get_test_dag": [["bool", 0.2632229845694326], ["sqlalchemy.orm.session.Session", 0.24670017860382626]], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.7183871708403551]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_callback", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "mock_dagbag": "", "return_value": "", "session": "", "sla_callback": "", "task": "", "test_start_date": ""}, "variables_p": {"dag": [["int", 0.25847870045839916], ["dict", 0.15255469324604476], ["Dict[Any, int]", 0.12052372006108189], ["Type[bootcamp.qa.models.Question]", 0.09133720684909818], ["alerta.models.alerAlert", 0.09102792312771242], ["list", 0.08729183296636833]], "mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "return_value": [["str", 0.42190954402456077], ["list", 0.09081778189894057]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "sla_callback": [["int", 0.142594701059527], ["mode.utils.mocks.Mock", 0.09281053646290667], ["unittesmock.MagicMock", 0.08904887930346662]], "task": [["list", 0.12508283478724158], ["int", 0.12333595711183815], ["DefaultDict[Any, int]", 0.10704281791024764], ["Dict[int, str]", 0.09085001999562463], ["dict", 0.08741132948753041], ["ValueError", 0.08526479131785694]], "test_start_date": [["datetime.date", 0.30853184235744735], ["datetime.datetime", 0.2888349761068187], ["datetime.timedelta", 0.21271608366254696], ["str", 0.09572674781512555]]}}, {"docstring": {"func": "Test that the dag file processor does not call the sla miss callback when", "long_descr": "given an invalid sla", "ret": null}, "fn_lc": [[137, 4], [165, 40]], "fn_var_ln": {"dag": [[150, 8], [150, 11]], "mock_dagbag": [[160, 8], [160, 19]], "return_value": [[162, 8], [162, 36]], "session": [[142, 8], [142, 15]], "sla_callback": [[144, 8], [144, 20]], "task": [[150, 13], [150, 17]], "test_start_date": [[149, 8], [149, 23]]}, "fn_var_occur": {"dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "None"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "return_value": [["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "sla_callback": [["sla_callback", "MagicMock"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "None"], ["sla_callback", "assert_not_called"]], "task": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "None"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "None"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"]]}, "name": "test_dag_file_processor_sla_miss_callback_invalid_sla", "params": {"create_dummy_dag": "", "mock_get_dagbag": "", "self": ""}, "params_descr": {"create_dummy_dag": "", "mock_get_dagbag": "", "self": ""}, "params_occur": {"create_dummy_dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "None"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "self": []}, "params_p": {"args": [], "create_dummy_dag": [["tests.async_mock.Mock", 0.12358227544111026], ["app.models.Game", 0.09092129649810851]], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.38627401955523416], ["mock.MagicMock", 0.1160451151209184]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_callback_invalid_sla", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "mock_dagbag": "", "return_value": "", "session": "", "sla_callback": "", "task": "", "test_start_date": ""}, "variables_p": {"dag": [["dict", 0.3193672898916703], ["datetime.datetime.timedelta", 0.11668046506475216], ["Dict[Any, int]", 0.11215633316467821], ["int", 0.1032234175650742], ["qcodes.utils.validators.Ints", 0.09162114243034718], ["list", 0.0854427967847429]], "mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "return_value": [["str", 0.42190954402456077], ["list", 0.09081778189894057]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "sla_callback": [["int", 0.142594701059527], ["mode.utils.mocks.Mock", 0.09281053646290667], ["unittesmock.MagicMock", 0.08904887930346662]], "task": [["dict", 0.32936683670804356], ["DefaultDict[Any, int]", 0.1345994413233938], ["Dict[str, List[Any]]", 0.09834612441671432], ["Dict[int, str]", 0.09630040030241527], ["list", 0.08580540097564382], ["List[Dict]", 0.08409216667364026], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.08386027510412827]], "test_start_date": [["datetime.date", 0.30853184235744735], ["datetime.datetime", 0.2888349761068187], ["datetime.timedelta", 0.21271608366254696], ["str", 0.09572674781512555]]}}, {"docstring": {"func": "Test that the dag file processor does not call the sla_miss_callback when a", "long_descr": "notification has already been sent", "ret": null}, "fn_lc": [[168, 4], [209, 40]], "fn_var_ln": {"dag": [[181, 8], [181, 11]], "mock_dagbag": [[202, 8], [202, 19]], "return_value": [[204, 8], [204, 36]], "session": [[173, 8], [173, 15]], "sla_callback": [[176, 8], [176, 20]], "task": [[181, 13], [181, 17]], "test_start_date": [[180, 8], [180, 23]]}, "fn_var_occur": {"dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta", "days"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "return_value": [["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date", "email_sent", "False", "notification_sent", "True"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "sla_callback": [["sla_callback", "MagicMock"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta", "days"], ["sla_callback", "assert_not_called"]], "task": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta", "days"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta", "days"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date", "email_sent", "False", "notification_sent", "True"]]}, "name": "test_dag_file_processor_sla_miss_callback_sent_notification", "params": {"create_dummy_dag": "", "mock_get_dagbag": "", "self": ""}, "params_descr": {"create_dummy_dag": "", "mock_get_dagbag": "", "self": ""}, "params_occur": {"create_dummy_dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "sla_miss_callback", "sla_callback", "default_args", "test_start_date", "datetime", "timedelta", "days"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "self": []}, "params_p": {"args": [], "create_dummy_dag": [["tests.async_mock.Mock", 0.11394291088285673], ["str", 0.08858927017606802]], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.38627401955523416], ["mock.MagicMock", 0.1160451151209184]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_callback_sent_notification", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "mock_dagbag": "", "return_value": "", "session": "", "sla_callback": "", "task": "", "test_start_date": ""}, "variables_p": {"dag": [["int", 0.25847870045839916], ["dict", 0.15255469324604476], ["Dict[Any, int]", 0.12052372006108189], ["Type[bootcamp.qa.models.Question]", 0.09133720684909818], ["alerta.models.alerAlert", 0.09102792312771242], ["list", 0.08729183296636833]], "mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "return_value": [["str", 0.42190954402456077], ["list", 0.09081778189894057]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "sla_callback": [["int", 0.142594701059527], ["mode.utils.mocks.Mock", 0.09281053646290667], ["unittesmock.MagicMock", 0.08904887930346662]], "task": [["list", 0.12508283478724158], ["int", 0.12333595711183815], ["DefaultDict[Any, int]", 0.10704281791024764], ["Dict[int, str]", 0.09085001999562463], ["dict", 0.08741132948753041], ["ValueError", 0.08526479131785694]], "test_start_date": [["datetime.date", 0.30853184235744735], ["datetime.datetime", 0.2888349761068187], ["datetime.timedelta", 0.21271608366254696], ["str", 0.09572674781512555]]}}, {"docstring": {"func": "Test that the dag file processor does not try to insert already existing item into the database", "long_descr": null, "ret": null}, "fn_lc": [[213, 4], [256, 101]], "fn_var_ln": {"mock_dagbag": [[237, 8], [237, 19]], "return_value": [[239, 8], [239, 36]], "session": [[219, 8], [219, 15]], "sla_miss_count": [[242, 8], [242, 22]], "task": [[228, 12], [228, 16]], "test_start_date": [[223, 8], [223, 23]], "ti": [[233, 8], [233, 10]]}, "fn_var_occur": {"mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "return_value": [["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "ti"], ["session", "flush"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"], ["sla_miss_count", "session", "query", "SlaMiss", "filter", "SlaMiss", "dag_id", "dag", "dag_id", "SlaMiss", "task_id", "task", "task_id", "count"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "sla_miss_count": [["sla_miss_count", "session", "query", "SlaMiss", "filter", "SlaMiss", "dag_id", "dag", "dag_id", "SlaMiss", "task_id", "task", "task_id", "count"]], "task": [["task", "EmptyOperator", "task_id"], ["ti", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["sla_miss_count", "session", "query", "SlaMiss", "filter", "SlaMiss", "dag_id", "dag", "dag_id", "SlaMiss", "task_id", "task", "task_id", "count"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag_maker", "dag_id", "default_args", "test_start_date", "datetime", "timedelta", "days", "dag"], ["dag_maker", "create_dagrun", "execution_date", "test_start_date", "state", "State", "SUCCESS"], ["ti", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "ti": [["ti", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "ti"]]}, "name": "test_dag_file_processor_sla_miss_doesnot_raise_integrity_error", "params": {"dag_maker": "", "mock_get_dagbag": "", "mock_stats_incr": "", "self": ""}, "params_descr": {"dag_maker": "", "mock_get_dagbag": "", "mock_stats_incr": "", "self": ""}, "params_occur": {"dag_maker": [["dag_maker", "dag_id", "default_args", "test_start_date", "datetime", "timedelta", "days", "dag"], ["dag_maker", "create_dagrun", "execution_date", "test_start_date", "state", "State", "SUCCESS"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "mock_stats_incr": [["mock_stats_incr", "assert_called_with", "tags"]], "self": []}, "params_p": {"args": [], "dag_maker": [["unittesmock.MagicMock", 0.1949182537605152], ["mock.MagicMock", 0.10106937809464808]], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.41293110267711286]], "mock_stats_incr": [["unittesmock.MagicMock", 0.5460868475877272], ["mock.Mock", 0.27739002436851923]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_doesnot_raise_integrity_error", "ret_exprs": [], "ret_type": "", "variables": {"mock_dagbag": "", "return_value": "", "session": "", "sla_miss_count": "", "task": "", "test_start_date": "", "ti": ""}, "variables_p": {"mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "return_value": [["str", 0.42190954402456077], ["list", 0.09081778189894057]], "session": [["sqlalchemy.orm.session.Session", 0.36358363343963324], ["kedro.framework.session.session.KedroSession", 0.11991303282375407], ["Optional[str]", 0.09653870783880529]], "sla_miss_count": [["int", 0.19726267928017444], ["float", 0.19623903329095138], ["dict", 0.11035377562693928], ["Type[Callable[Any, bool]]", 0.10207714695835224], ["Type[bootcamp.qa.models.Question]", 0.09866398090355677], ["Type[ajapaik.ajapaik.models.MyXtdCommenWikimediaCommonsUpload]", 0.09502916928909305]], "task": [["taskiapplication.models.task.Task", 0.17452585085397754], ["kippo.tasks.models.KippoTask", 0.16452771842380323]], "test_start_date": [["datetime.date", 0.4085812773972587], ["datetime.datetime", 0.20151900687562796], ["str", 0.09513446112603907], ["datetime.timedelta", 0.09425799155327746]], "ti": [["str", 0.18315425926284565], ["byceps.services.user.transfer.models.User", 0.15693589261433366], ["int", 0.14312178777439102], ["backend.api.models.group.Group", 0.09587867035404139], ["accounts.models.Account", 0.09238908807656404], ["app.models.Journey", 0.08634278692257764], ["List[Tuple[Any, Any]]", 0.08120146231295398], ["khetha.models.Question", 0.07907313922585643]]}}, {"docstring": {"func": "Test that the dag file processor continue checking subsequent task instances", "long_descr": "even if the preceding task instance misses the sla ahead", "ret": null}, "fn_lc": [[260, 4], [301, 110]], "fn_var_ln": {"mock_dagbag": [[287, 8], [287, 19]], "now": [[271, 8], [271, 11]], "return_value": [[289, 8], [289, 36]], "session": [[267, 8], [267, 15]], "sla_miss_count": [[292, 8], [292, 22]], "task": [[277, 12], [277, 16]], "test_start_date": [[272, 8], [272, 23]]}, "fn_var_occur": {"mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "now": [["now", "timezone", "utcnow"], ["test_start_date", "now", "datetime", "timedelta", "days"], ["session", "merge", "SlaMiss", "task_id", "task", "task_id", "dag_id", "dag", "dag_id", "execution_date", "now", "datetime", "timedelta", "days"]], "return_value": [["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "task", "task_id", "dag_id", "dag", "dag_id", "execution_date", "now", "datetime", "timedelta", "days"], ["session", "flush"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"], ["sla_miss_count", "session", "query", "SlaMiss", "filter", "SlaMiss", "dag_id", "dag", "dag_id", "SlaMiss", "task_id", "task", "task_id", "count"]], "sla_miss_count": [["sla_miss_count", "session", "query", "SlaMiss", "filter", "SlaMiss", "dag_id", "dag", "dag_id", "SlaMiss", "task_id", "task", "task_id", "count"]], "task": [["task", "EmptyOperator", "task_id"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "task", "task_id", "dag_id", "dag", "dag_id", "execution_date", "now", "datetime", "timedelta", "days"], ["sla_miss_count", "session", "query", "SlaMiss", "filter", "SlaMiss", "dag_id", "dag", "dag_id", "SlaMiss", "task_id", "task", "task_id", "count"]], "test_start_date": [["test_start_date", "now", "datetime", "timedelta", "days"], ["dag_maker", "dag_id", "default_args", "test_start_date", "datetime", "timedelta", "days", "dag"], ["dag_maker", "create_dagrun", "execution_date", "test_start_date", "state", "State", "SUCCESS"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]]}, "name": "test_dag_file_processor_sla_miss_continue_checking_the_task_instances_after_recording_missing_sla", "params": {"dag_maker": "", "mock_get_dagbag": "", "mock_stats_incr": "", "self": ""}, "params_descr": {"dag_maker": "", "mock_get_dagbag": "", "mock_stats_incr": "", "self": ""}, "params_occur": {"dag_maker": [["dag_maker", "dag_id", "default_args", "test_start_date", "datetime", "timedelta", "days", "dag"], ["dag_maker", "create_dagrun", "execution_date", "test_start_date", "state", "State", "SUCCESS"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "mock_stats_incr": [["mock_stats_incr", "assert_called_with", "tags"]], "self": []}, "params_p": {"args": [], "dag_maker": [["unittesmock.MagicMock", 0.10048636399408978], ["mock.MagicMock", 0.09403784796708838], ["raiden.utils.Address", 0.0877907893205027]], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.30244021655176223]], "mock_stats_incr": [["unittesmock.MagicMock", 0.6383737365195276], ["mock.Mock", 0.18813452475400133]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_continue_checking_the_task_instances_after_recording_missing_sla", "ret_exprs": [], "ret_type": "", "variables": {"mock_dagbag": "", "now": "", "return_value": "", "session": "", "sla_miss_count": "", "task": "", "test_start_date": ""}, "variables_p": {"mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "now": [["str", 0.47062993211390924], ["datetime.datetime.date", 0.11999574749489647], ["dict", 0.10458084134705369], ["datetime.datetime", 0.09552725679155068], ["datetime.datetime.datetime", 0.08927047475769341]], "return_value": [["str", 0.42190954402456077], ["list", 0.09081778189894057]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "sla_miss_count": [["int", 0.19726267928017444], ["float", 0.19623903329095138], ["dict", 0.11035377562693928], ["Type[Callable[Any, bool]]", 0.10207714695835224], ["Type[bootcamp.qa.models.Question]", 0.09866398090355677], ["Type[ajapaik.ajapaik.models.MyXtdCommenWikimediaCommonsUpload]", 0.09502916928909305]], "task": [["kippo.tasks.models.KippoTask", 0.18687244590013152], ["kippo.tasks.models.KippoTaskStatus", 0.12502202311354615], ["str", 0.11655123639879358], ["taskiapplication.models.task.Task", 0.10702224648618856], ["models.userData", 0.09283388333645415]], "test_start_date": [["datetime.datetime", 0.523788665148696], ["datetime.date", 0.20298380930323626], ["datetime.datetime.datetime", 0.1814127557516534], ["datetime.date.time.date", 0.09181476979641434]]}}, {"docstring": {"func": "Test that the dag file processor gracefully logs an exception if there is a problem", "long_descr": "calling the sla_miss_callback", "ret": null}, "fn_lc": [[306, 4], [354, 13]], "fn_var_ln": {"dag": [[322, 12], [322, 15]], "mock_dagbag": [[340, 12], [340, 23]], "mock_log": [[338, 12], [338, 20]], "return_value": [[342, 12], [342, 40]], "session": [[313, 8], [313, 15]], "sla_callback": [[315, 8], [315, 20]], "task": [[322, 17], [322, 21]], "test_start_date": [[319, 8], [319, 23]]}, "fn_var_occur": {"dag": [["dag", "task", "create_dummy_dag", "dag_id", "i", "task_id", "sla_miss_callback", "callback", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "mock_log": [["mock_log", "mock", "Mock"], ["mock_get_log", "return_value", "mock_log"], ["mock_log", "exception", "assert_called_once_with", "sla_callback", "__name__", "i"]], "return_value": [["mock_get_log", "return_value", "mock_log"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "i", "execution_date", "test_start_date"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "sla_callback": [["sla_callback", "MagicMock", "__name__", "side_effect", "RuntimeError"], ["enumerate", "sla_callback", "sla_callback"], ["sla_callback", "called"], ["mock_log", "exception", "assert_called_once_with", "sla_callback", "__name__", "i"], ["mock_stats_incr", "assert_called_once_with", "tags", "i", "sla_callback", "__name__"]], "task": [["dag", "task", "create_dummy_dag", "dag_id", "i", "task_id", "sla_miss_callback", "callback", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag", "task", "create_dummy_dag", "dag_id", "i", "task_id", "sla_miss_callback", "callback", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "i", "execution_date", "test_start_date"]]}, "name": "test_dag_file_processor_sla_miss_callback_exception", "params": {"create_dummy_dag": "", "mock_get_dagbag": "", "mock_get_log": "", "mock_stats_incr": "", "self": ""}, "params_descr": {"create_dummy_dag": "", "mock_get_dagbag": "", "mock_get_log": "", "mock_stats_incr": "", "self": ""}, "params_occur": {"create_dummy_dag": [["dag", "task", "create_dummy_dag", "dag_id", "i", "task_id", "sla_miss_callback", "callback", "default_args", "test_start_date", "datetime", "timedelta", "hours"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "mock_get_log": [["mock_get_log", "return_value", "mock_log"]], "mock_stats_incr": [["mock_stats_incr", "reset_mock"], ["mock_stats_incr", "assert_called_once_with", "tags", "i", "sla_callback", "__name__"]], "self": []}, "params_p": {"args": [], "create_dummy_dag": [], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.36085752310242275]], "mock_get_log": [["unittesmock.MagicMock", 0.7201947459822117]], "mock_stats_incr": [["unittesmock.MagicMock", 0.5029486167334091]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_callback_exception", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "mock_dagbag": "", "mock_log": "", "return_value": "", "session": "", "sla_callback": "", "task": "", "test_start_date": ""}, "variables_p": {"dag": [["int", 0.3028876191129325], ["Dict[str, Dict[str, int]]", 0.1017238490334811], ["str", 0.0970378290719765]], "mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "mock_log": [["unittesmock.MagicMock", 0.3325127982549194]], "return_value": [["str", 0.8624129523947648], ["Dict[str, int]", 0.13758704760523535]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "sla_callback": [["mock.MagicMock", 0.30026457404272966], ["int", 0.08875670887202346]], "task": [["Dict[str, Any]", 0.09382019116939024], ["Dict[str, Union[int, str]]", 0.09116880603902516], ["str", 0.0822478537174662]], "test_start_date": [["datetime.date", 0.21542896042840065], ["datetime.timedelta", 0.2106213462472361], ["datetime.datetime", 0.19374228908421165], ["datetime.datetime.datetime", 0.18414586506549985], ["str", 0.09817900407354768]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[358, 4], [389, 42]], "fn_var_ln": {"dag": [[365, 8], [365, 11]], "email1": [[364, 8], [364, 14]], "email2": [[374, 8], [374, 14]], "mock_dagbag": [[379, 8], [379, 19]], "return_value": [[381, 8], [381, 36]], "send_email_to": [[387, 8], [387, 21]], "session": [[361, 8], [361, 15]], "task": [[365, 13], [365, 17]], "test_start_date": [[363, 8], [363, 23]]}, "fn_var_occur": {"dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "email1", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["EmptyOperator", "task_id", "dag", "dag", "owner", "email", "email2"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "email1": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "email1", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["email1", "send_email_to"]], "email2": [["EmptyOperator", "task_id", "dag", "dag", "owner", "email", "email2"], ["email2", "send_email_to"]], "mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "return_value": [["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "send_email_to": [["send_email_to", "mock_send_email", "call_args_list"], ["email1", "send_email_to"], ["email2", "send_email_to"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "task": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "email1", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "email1", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"]]}, "name": "test_dag_file_processor_only_collect_emails_from_sla_missed_tasks", "params": {"create_dummy_dag": "", "mock_get_dagbag": "", "mock_send_email": "", "self": ""}, "params_descr": {"create_dummy_dag": "", "mock_get_dagbag": "", "mock_send_email": "", "self": ""}, "params_occur": {"create_dummy_dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "email1", "default_args", "test_start_date", "datetime", "timedelta", "hours"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "mock_send_email": [["len", "mock_send_email", "call_args_list"], ["send_email_to", "mock_send_email", "call_args_list"]], "self": []}, "params_p": {"args": [], "create_dummy_dag": [["src.core.manager.script_manager.ScriptManager", 0.13820188183440513], ["unittesmock.MagicMock", 0.08928425674943131], ["core.models.Recipe", 0.08636429809421055]], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.15565326617099148]], "mock_send_email": [["unittesmock.MagicMock", 0.535467478096656], ["mock.Mock", 0.26657003482652314]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_only_collect_emails_from_sla_missed_tasks", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "email1": "", "email2": "", "mock_dagbag": "", "return_value": "", "send_email_to": "", "session": "", "task": "", "test_start_date": ""}, "variables_p": {"dag": [["dict", 0.14824045504474206], ["Dict[Any, str]", 0.11342914505916585], ["Type[bootcamp.qa.models.Question]", 0.10201068691099362], ["Dict[Any, int]", 0.08903470432174791], ["list", 0.08717288878933573], ["set", 0.08371372746707663], ["range", 0.07621224493597668], ["Type[ajapaik.ajapaik.models.MyXtdCommenWikimediaCommonsUpload]", 0.07305162854727724], ["datetime.timedelta", 0.07057831735612628]], "email1": [["str", 0.5428832307742877], ["int", 0.10732572217426439], ["List[str]", 0.09301573597027475], ["raiden.utils.TokenNetworkAddress", 0.08703768518379908], ["list", 0.08417310483807437]], "email2": [["str", 0.8155126633771539], ["int", 0.10110555015053034]], "mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "return_value": [["str", 0.42190954402456077], ["list", 0.09081778189894057]], "send_email_to": [["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.19022584091800812], ["mock._Call", 0.1301929794460114], ["Type[Dict[Any, Any]]", 0.10679924361981219], ["int", 0.10137412447152913], ["List[List[int]]", 0.09368594744042483], ["List[str]", 0.09151051632661004], ["Tuple[int, int]", 0.0905242483862859]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "task": [["Dict[str, Any]", 0.10513418567789634], ["int", 0.10328768791371741], ["dict", 0.09688757680832784], ["Dict[int, str]", 0.0891330836898635]], "test_start_date": [["datetime.datetime.datetime", 0.29999256011276615], ["datetime.datetime", 0.19729894747370044], ["datetime.timedelta", 0.19378864142859914], ["datetime.datetime.time", 0.10880356490435526], ["datetime.date", 0.09896878583706469]]}}, {"docstring": {"func": "Test that the dag file processor gracefully logs an exception if there is a problem", "long_descr": "sending an email", "ret": null}, "fn_lc": [[395, 4], [434, 106]], "fn_var_ln": {"dag": [[411, 8], [411, 11]], "dag_id": [[403, 8], [403, 14]], "email": [[405, 8], [405, 13]], "mock_dagbag": [[426, 8], [426, 19]], "mock_log": [[424, 8], [424, 16]], "return_value": [[428, 8], [428, 36]], "session": [[402, 8], [402, 15]], "side_effect": [[408, 8], [408, 35]], "task": [[411, 13], [411, 17]], "task_id": [[404, 8], [404, 15]], "test_start_date": [[410, 8], [410, 23]]}, "fn_var_occur": {"dag": [["dag", "task", "create_dummy_dag", "dag_id", "dag_id", "task_id", "task_id", "email", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "dag_id", "session", "session"]], "dag_id": [["dag", "task", "create_dummy_dag", "dag_id", "dag_id", "task_id", "task_id", "email", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "SlaMiss", "task_id", "task_id", "dag_id", "dag_id", "execution_date", "test_start_date"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "dag_id", "session", "session"], ["mock_log", "exception", "assert_called_once_with", "dag_id"], ["mock_stats_incr", "assert_called_once_with", "tags", "dag_id"]], "email": [["dag", "task", "create_dummy_dag", "dag_id", "dag_id", "task_id", "task_id", "email", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"]], "mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "mock_log": [["mock_log", "mock", "Mock"], ["mock_get_log", "return_value", "mock_log"], ["mock_log", "exception", "assert_called_once_with", "dag_id"]], "return_value": [["mock_get_log", "return_value", "mock_log"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "task_id", "dag_id", "dag_id", "execution_date", "test_start_date"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "dag_id", "session", "session"]], "side_effect": [["mock_send_email", "side_effect", "RuntimeError"]], "task": [["dag", "task", "create_dummy_dag", "dag_id", "dag_id", "task_id", "task_id", "email", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "task_id": [["dag", "task", "create_dummy_dag", "dag_id", "dag_id", "task_id", "task_id", "email", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "SlaMiss", "task_id", "task_id", "dag_id", "dag_id", "execution_date", "test_start_date"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag", "task", "create_dummy_dag", "dag_id", "dag_id", "task_id", "task_id", "email", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "task_id", "dag_id", "dag_id", "execution_date", "test_start_date"]]}, "name": "test_dag_file_processor_sla_miss_email_exception", "params": {"create_dummy_dag": "", "mock_get_dagbag": "", "mock_get_log": "", "mock_send_email": "", "mock_stats_incr": "", "self": ""}, "params_descr": {"create_dummy_dag": "", "mock_get_dagbag": "", "mock_get_log": "", "mock_send_email": "", "mock_stats_incr": "", "self": ""}, "params_occur": {"create_dummy_dag": [["dag", "task", "create_dummy_dag", "dag_id", "dag_id", "task_id", "task_id", "email", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "mock_get_log": [["mock_get_log", "return_value", "mock_log"]], "mock_send_email": [["mock_send_email", "side_effect", "RuntimeError"]], "mock_stats_incr": [["mock_stats_incr", "reset_mock"], ["mock_stats_incr", "assert_called_once_with", "tags", "dag_id"]], "self": []}, "params_p": {"args": [], "create_dummy_dag": [["src.core.manager.script_manager.ScriptManager", 0.11846751895295998]], "kwargs": [], "mock_get_dagbag": [["mock.Mock", 0.08162847562503042]], "mock_get_log": [["unittesmock.MagicMock", 0.18864970045236434]], "mock_send_email": [["mock.Mock", 0.24785013968717362], ["unittesmock.MagicMock", 0.14826994858359083]], "mock_stats_incr": [["mock.Mock", 0.5152146086737297]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_email_exception", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "dag_id": "", "email": "", "mock_dagbag": "", "mock_log": "", "return_value": "", "session": "", "side_effect": "", "task": "", "task_id": "", "test_start_date": ""}, "variables_p": {"dag": [["int", 0.2970876371171788], ["dict", 0.28155559019636334], ["list", 0.124937161411295], ["set", 0.08869786977766803], ["Dict[Any, str]", 0.07966019501582358]], "dag_id": [["int", 0.46548848968943424], ["str", 0.1090791768608954], ["List[str]", 0.08427932705072401], ["set", 0.07974735794135254]], "email": [["str", 0.2876192648262889], ["dict", 0.10632849580082385], ["int", 0.10445058716630064], ["set", 0.09992605281556045], ["List[float]", 0.09050550611833189], ["Dict[int, str]", 0.08908151923114502]], "mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "mock_log": [["unittesmock.MagicMock", 0.21940879463992416]], "return_value": [["str", 0.8624129523947648], ["Dict[str, int]", 0.13758704760523535]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "side_effect": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]], "task": [["dict", 0.16841589651037414], ["Dict[int, str]", 0.14528555756580974], ["int", 0.1176694491042906], ["DefaultDict[Any, int]", 0.10969464797490787], ["List[Dict]", 0.10213266990299373], ["list", 0.08932922858476658], ["Generator[Any, None, None]", 0.07982787624779325]], "task_id": [["List[str]", 0.2846739588653311], ["int", 0.2237380410552128], ["list", 0.10249865423114214], ["str", 0.09750364088158484], ["dict", 0.09703210138414871], ["Dict[str, int]", 0.0966760766643493]], "test_start_date": [["datetime.datetime.datetime", 0.2792135376099603], ["datetime.datetime", 0.21290475706867001], ["datetime.date", 0.19531130349255965], ["datetime.datetime.time", 0.12644616449607088], ["datetime.timedelta", 0.08888445087590117]]}}, {"docstring": {"func": "Test that the dag file processor will not crash when trying to send", "long_descr": "sla miss notification for a deleted task", "ret": null}, "fn_lc": [[437, 4], [463, 101]], "fn_var_ln": {"dag": [[445, 8], [445, 11]], "mock_dagbag": [[459, 8], [459, 19]], "return_value": [[461, 8], [461, 36]], "session": [[442, 8], [442, 15]], "task": [[445, 13], [445, 17]], "test_start_date": [[444, 8], [444, 23]]}, "fn_var_occur": {"dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "mock_dagbag": [["mock_dagbag", "mock", "Mock"], ["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "return_value": [["mock_dagbag", "get_dag", "return_value", "dag"], ["mock_get_dagbag", "return_value", "mock_dagbag"]], "session": [["session", "settings", "Session"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"], ["DagFileProcessor", "manage_slas", "dag_folder", "dag", "fileloc", "dag_id", "session", "session"]], "task": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"]], "test_start_date": [["test_start_date", "timezone", "utcnow", "datetime", "timedelta", "days"], ["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"], ["session", "merge", "TaskInstance", "task", "task", "execution_date", "test_start_date", "state"], ["session", "merge", "SlaMiss", "task_id", "dag_id", "execution_date", "test_start_date"]]}, "name": "test_dag_file_processor_sla_miss_deleted_task", "params": {"create_dummy_dag": "", "mock_get_dagbag": "", "self": ""}, "params_descr": {"create_dummy_dag": "", "mock_get_dagbag": "", "self": ""}, "params_occur": {"create_dummy_dag": [["dag", "task", "create_dummy_dag", "dag_id", "task_id", "email", "default_args", "test_start_date", "datetime", "timedelta", "hours"]], "mock_get_dagbag": [["mock_get_dagbag", "return_value", "mock_dagbag"]], "self": []}, "params_p": {"args": [], "create_dummy_dag": [["Callable[..., None]", 0.11060645849676697], ["str", 0.1050836198143937], ["core.models.Recipe", 0.09461678891665994]], "kwargs": [], "mock_get_dagbag": [["unittesmock.MagicMock", 0.4986223404673016], ["mock.MagicMock", 0.09642433786688413]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_file_processor_sla_miss_deleted_task", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "mock_dagbag": "", "return_value": "", "session": "", "task": "", "test_start_date": ""}, "variables_p": {"dag": [["str", 0.14555411359265963], ["Dict[Any, str]", 0.11781493565680708], ["set", 0.08851897738201353], ["datetime.timedelta", 0.08149280413532925], ["qcodes.utils.validators.Ints", 0.07253797270926621]], "mock_dagbag": [["mock.Mock", 0.19663817028461178], ["str", 0.11851431092511451], ["unittesmock.MagicMock", 0.11285524758229905], ["mock.MagicMock", 0.0841197174700587]], "return_value": [["str", 0.42190954402456077], ["list", 0.09081778189894057]], "session": [["SMSShell.models.session.Session", 0.08365270233957818], ["Optional[str]", 0.06910906413233305]], "task": [["Dict[str, Any]", 0.12381920599768878], ["Dict[int, Any]", 0.10139936003618454], ["dict", 0.09990568935741531], ["Dict[int, str]", 0.09908218863154256], ["List[Dict[str, Any]]", 0.09512160660967796]], "test_start_date": [["datetime.datetime.datetime", 0.293085474051031], ["datetime.datetime", 0.2905607825746274], ["datetime.timedelta", 0.11220182262245122], ["datetime.datetime.time", 0.10025495776574159], ["datetime.date", 0.09454673172733492]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[466, 4], [492, 9]], "fn_var_ln": {"dag": [[473, 12], [473, 15]], "dag_file_processor": [[468, 8], [468, 26]], "dagbag": [[467, 8], [467, 14]], "dagrun": [[474, 12], [474, 18]], "requests": [[484, 8], [484, 16]], "task": [[480, 12], [480, 16]], "ti": [[481, 12], [481, 14]]}, "fn_var_occur": {"dag": [["dag", "dagbag", "get_dag"], ["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["task", "dag", "get_task", "task_id"]], "dag_file_processor": [["dag_file_processor", "DagFileProcessor", "dag_ids", "dag_directory", "TEST_DAGS_FOLDER", "log", "mock", "MagicMock"], ["dag_file_processor", "execute_callbacks", "dagbag", "requests", "session"]], "dagbag": [["dagbag", "DagBag", "dag_folder", "include_examples", "True", "read_dags_from_db", "False"], ["dag", "dagbag", "get_dag"], ["dag_file_processor", "execute_callbacks", "dagbag", "requests", "session"]], "dagrun": [["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "RUNNING"]], "requests": [["requests", "TaskCallbackRequest", "full_filepath", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"], ["dag_file_processor", "execute_callbacks", "dagbag", "requests", "session"]], "task": [["task", "dag", "get_task", "task_id"], ["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "RUNNING"]], "ti": [["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "RUNNING"], ["session", "add", "ti"], ["requests", "TaskCallbackRequest", "full_filepath", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"]]}, "name": "test_execute_on_failure_callbacks", "params": {"mock_ti_handle_failure": "", "self": ""}, "params_descr": {"mock_ti_handle_failure": "", "self": ""}, "params_occur": {"mock_ti_handle_failure": [["mock_ti_handle_failure", "assert_called_once_with", "error", "test_mode", "conf", "getboolean", "session", "session"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_ti_handle_failure": [["unittesmock.MagicMock", 0.8906703220975193]], "self": []}, "q_name": "TestDagFileProcessor.test_execute_on_failure_callbacks", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "dag_file_processor": "", "dagbag": "", "dagrun": "", "requests": "", "task": "", "ti": ""}, "variables_p": {"dag": [["ajapaik.ajapaik.models.Area", 0.19419260025818796], ["list", 0.12258387851774008], ["cnaas_nms.db.interface.Interface", 0.09362762956845741], ["dict", 0.09133470612825909], ["multinedb.models.table.Table", 0.08928447958493602], ["str", 0.08854449345513754]], "dag_file_processor": [["unittesmock.MagicMock", 0.1851382201141508], ["Dict[str, Any]", 0.1194852343811441], ["dict", 0.10051506287842724], ["Dict[str, str]", 0.09210234478475646], ["str", 0.09097009763505318], ["mock.MagicMock", 0.08748283570832042]], "dagbag": [["grouper.api.settings.ApiSettings", 0.0942646557898898]], "dagrun": [["str", 0.19015028771621198], ["Dict[str, Union[datetime.datetime, str]]", 0.14442961814674915], ["list", 0.0954627227766721], ["core.models.MemberModels.Member", 0.09313204290571112], ["float", 0.08790607407672463], ["int", 0.08133525826462165], ["List[Union[Any, Any, Any, Any]]", 0.07998622263104367]], "requests": [["Dict[str, Any]", 0.1710035535080039], ["kedro.framework.session.session.KedroSession", 0.09802549873018986]], "task": [["kippo.tasks.models.KippoTask", 0.19775892721634591], ["taskiapplication.models.task.Task", 0.09055852838136996], ["Dict[str, str]", 0.08065288574128769]], "ti": [["int", 0.5942661404750096], ["raiden.utils.PaymentID", 0.08999774223128851]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[499, 4], [529, 9]], "fn_var_ln": {"dag": [[506, 12], [506, 15]], "dag_file_processor": [[501, 8], [501, 26]], "dagbag": [[500, 8], [500, 14]], "dagrun": [[507, 12], [507, 18]], "requests": [[521, 8], [521, 16]], "task": [[513, 12], [513, 16]], "ti": [[514, 12], [514, 14]]}, "fn_var_occur": {"dag": [["dag", "dagbag", "get_dag"], ["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["task", "dag", "get_task", "task_id"], ["SerializedDagModel", "write_dag", "dag", "session", "session", "True"]], "dag_file_processor": [["dag_file_processor", "DagFileProcessor", "dag_ids", "dag_directory", "TEST_DAGS_FOLDER", "log", "mock", "MagicMock"], ["dag_file_processor", "execute_callbacks_without_dag", "requests", "session"]], "dagbag": [["dagbag", "DagBag", "dag_folder", "include_examples", "True", "read_dags_from_db", "False"], ["dag", "dagbag", "get_dag"]], "dagrun": [["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "QUEUED"]], "requests": [["requests", "TaskCallbackRequest", "full_filepath", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"], ["dag_file_processor", "execute_callbacks_without_dag", "requests", "session"]], "task": [["task", "dag", "get_task", "task_id"], ["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "QUEUED"]], "ti": [["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "QUEUED"], ["session", "add", "ti"], ["requests", "TaskCallbackRequest", "full_filepath", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"]]}, "name": "test_execute_on_failure_callbacks_without_dag", "params": {"has_serialized_dag": "", "mock_ti_handle_failure": "", "self": ""}, "params_descr": {"has_serialized_dag": "", "mock_ti_handle_failure": "", "self": ""}, "params_occur": {"has_serialized_dag": [], "mock_ti_handle_failure": [["mock_ti_handle_failure", "assert_called_once_with", "error", "test_mode", "conf", "getboolean", "session", "session"]], "self": []}, "params_p": {"args": [], "has_serialized_dag": [["mock.Mock", 0.7777777782457801]], "kwargs": [], "mock_ti_handle_failure": [["unittesmock.MagicMock", 0.8906703220975193]], "self": []}, "q_name": "TestDagFileProcessor.test_execute_on_failure_callbacks_without_dag", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "dag_file_processor": "", "dagbag": "", "dagrun": "", "requests": "", "task": "", "ti": ""}, "variables_p": {"dag": [["ajapaik.ajapaik.models.Area", 0.19419260025818796], ["list", 0.12258387851774008], ["cnaas_nms.db.interface.Interface", 0.09362762956845741], ["dict", 0.09133470612825909], ["multinedb.models.table.Table", 0.08928447958493602], ["str", 0.08854449345513754]], "dag_file_processor": [["unittesmock.MagicMock", 0.1851382201141508], ["Dict[str, Any]", 0.1194852343811441], ["dict", 0.10051506287842724], ["Dict[str, str]", 0.09210234478475646], ["str", 0.09097009763505318], ["mock.MagicMock", 0.08748283570832042]], "dagbag": [["str", 0.09084689727421624]], "dagrun": [["str", 0.19015028771621198], ["Dict[str, Union[datetime.datetime, str]]", 0.14442961814674915], ["list", 0.0954627227766721], ["core.models.MemberModels.Member", 0.09313204290571112], ["float", 0.08790607407672463], ["int", 0.08133525826462165], ["List[Union[Any, Any, Any, Any]]", 0.07998622263104367]], "requests": [["Dict[str, Any]", 0.1710035535080039], ["kedro.framework.session.session.KedroSession", 0.09802549873018986]], "task": [["kippo.tasks.models.KippoTask", 0.19775892721634591], ["taskiapplication.models.task.Task", 0.09055852838136996], ["Dict[str, str]", 0.08065288574128769]], "ti": [["int", 0.6087914595098374], ["raiden.utils.PaymentID", 0.08753245217529013]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[531, 4], [560, 53]], "fn_var_ln": {"UNIT_TEST_MODE": [[536, 8], [536, 41]], "dag": [[539, 12], [539, 15]], "dag_file_processor": [[533, 8], [533, 26]], "dagbag": [[532, 8], [532, 14]], "dagrun": [[541, 12], [541, 18]], "hostname": [[548, 12], [548, 23]], "requests": [[551, 8], [551, 16]], "task": [[540, 12], [540, 16]], "ti": [[547, 12], [547, 14]], "tis": [[559, 12], [559, 15]]}, "fn_var_occur": {"UNIT_TEST_MODE": [["dag_file_processor", "UNIT_TEST_MODE", "False"]], "dag": [["dag", "dagbag", "get_dag"], ["task", "dag", "get_task", "task_id"], ["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"]], "dag_file_processor": [["dag_file_processor", "DagFileProcessor", "dag_ids", "dag_directory", "TEST_DAGS_FOLDER", "log", "mock", "MagicMock"], ["dag_file_processor", "UNIT_TEST_MODE", "False"], ["dag_file_processor", "execute_callbacks", "dagbag", "requests"]], "dagbag": [["dagbag", "DagBag", "dag_folder", "include_examples", "True", "read_dags_from_db", "False"], ["dag", "dagbag", "get_dag"], ["dag_file_processor", "execute_callbacks", "dagbag", "requests"]], "dagrun": [["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "RUNNING"]], "hostname": [["ti", "hostname"], ["tis", "hostname"]], "requests": [["requests", "TaskCallbackRequest", "full_filepath", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"], ["dag_file_processor", "execute_callbacks", "dagbag", "requests"]], "task": [["task", "dag", "get_task", "task_id"], ["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "RUNNING"]], "ti": [["ti", "TaskInstance", "task", "run_id", "dagrun", "run_id", "state", "State", "RUNNING"], ["ti", "hostname"], ["session", "add", "ti"], ["requests", "TaskCallbackRequest", "full_filepath", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"]], "tis": [["tis", "session", "query", "TaskInstance"], ["tis", "hostname"]]}, "name": "test_failure_callbacks_should_not_drop_hostname", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagFileProcessor.test_failure_callbacks_should_not_drop_hostname", "ret_exprs": [], "ret_type": "", "variables": {"UNIT_TEST_MODE": "", "dag": "", "dag_file_processor": "", "dagbag": "", "dagrun": "", "hostname": "", "requests": "", "task": "", "ti": "", "tis": ""}, "variables_p": {"UNIT_TEST_MODE": [["str", 0.9999999999999999]], "dag": [["correios.models.posting.TrackingCode", 0.08679732941523922], ["rotkehlchen.tests.utils.rotkehlchen.BalancesTestSetup", 0.08520335535518081], ["cg_broker.models.Runner", 0.08503701909428928], ["int", 0.0844136467776038]], "dag_file_processor": [["unittesmock.MagicMock", 0.1851382201141508], ["Dict[str, Any]", 0.1194852343811441], ["dict", 0.10051506287842724], ["Dict[str, str]", 0.09210234478475646], ["str", 0.09097009763505318], ["mock.MagicMock", 0.08748283570832042]], "dagbag": [["grouper.api.settings.ApiSettings", 0.0942646557898898]], "dagrun": [["str", 0.19015028771621198], ["Dict[str, Union[datetime.datetime, str]]", 0.14442961814674915], ["list", 0.0954627227766721], ["core.models.MemberModels.Member", 0.09313204290571112], ["float", 0.08790607407672463], ["int", 0.08133525826462165], ["List[Union[Any, Any, Any, Any]]", 0.07998622263104367]], "hostname": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1], ["datetime.timedelta", 0.1]], "requests": [["Dict[str, Any]", 0.1710035535080039], ["kedro.framework.session.session.KedroSession", 0.09802549873018986]], "task": [["kippo.tasks.models.KippoTask", 0.19775892721634591], ["taskiapplication.models.task.Task", 0.09055852838136996], ["Dict[str, str]", 0.08065288574128769]], "ti": [["int", 0.6182512129109038], ["pydynasync.models.Changes", 0.09303249802393763], ["Dict[int, str]", 0.08766363706981242]], "tis": [["str", 0.25223083794498247], ["Dict[int, str]", 0.20484588901396936], ["list", 0.08817745425243687]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[562, 4], [593, 47]], "fn_var_ln": {"callback_file": [[563, 8], [563, 21]], "dag": [[570, 8], [570, 11]], "dag_file_processor": [[566, 8], [566, 26]], "dagrun": [[573, 12], [573, 18]], "msg": [[592, 8], [592, 11]], "requests": [[582, 12], [582, 20]], "task": [[571, 8], [571, 12]], "ti": [[579, 12], [579, 14]]}, "fn_var_occur": {"callback_file": [["callback_file", "tmp_path", "joinpath"], ["callback_file", "touch"], ["monkeypatch", "setenv", "str", "callback_file"], ["msg", "callback_file", "read_text"]], "dag": [["dag", "get_test_dag"], ["task", "dag", "get_task", "task_id"], ["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["requests", "TaskCallbackRequest", "full_filepath", "dag", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"], ["dag_file_processor", "process_file", "dag", "fileloc", "requests", "session", "session"]], "dag_file_processor": [["dag_file_processor", "DagFileProcessor", "dag_ids", "dag_directory", "TEST_DAGS_FOLDER", "log", "mock", "MagicMock"], ["dag_file_processor", "process_file", "dag", "fileloc", "requests", "session", "session"]], "dagrun": [["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["ti", "dagrun", "get_task_instance", "task", "task_id"]], "msg": [["requests", "TaskCallbackRequest", "full_filepath", "dag", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"], ["msg", "join", "str", "k", "k", "ti", "key", "primary"], ["msg", "callback_file", "read_text"]], "requests": [["requests", "TaskCallbackRequest", "full_filepath", "dag", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"], ["dag_file_processor", "process_file", "dag", "fileloc", "requests", "session", "session"]], "task": [["task", "dag", "get_task", "task_id"], ["ti", "dagrun", "get_task_instance", "task", "task_id"], ["ti", "refresh_from_task", "task"]], "ti": [["ti", "dagrun", "get_task_instance", "task", "task_id"], ["ti", "refresh_from_task", "task"], ["requests", "TaskCallbackRequest", "full_filepath", "dag", "fileloc", "simple_task_instance", "SimpleTaskInstance", "from_ti", "ti", "msg"], ["ti", "refresh_from_db"], ["msg", "join", "str", "k", "k", "ti", "key", "primary"]]}, "name": "test_process_file_should_failure_callback", "params": {"get_test_dag": "", "monkeypatch": "", "self": "", "tmp_path": ""}, "params_descr": {"get_test_dag": "", "monkeypatch": "", "self": "", "tmp_path": ""}, "params_occur": {"get_test_dag": [["dag", "get_test_dag"]], "monkeypatch": [["monkeypatch", "setenv", "str", "callback_file"]], "self": [], "tmp_path": [["callback_file", "tmp_path", "joinpath"]]}, "params_p": {"args": [], "get_test_dag": [["str", 0.09916410765440734], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.08636301606383873]], "kwargs": [], "monkeypatch": [["str", 0.23436913073027138], ["int", 0.09935624788807541]], "self": [], "tmp_path": [["tests.fixtures.cloud_uploader.Uploader", 0.20434154225333687], ["str", 0.1032056289195163], ["Optional[str]", 0.08502117786529204]]}, "q_name": "TestDagFileProcessor.test_process_file_should_failure_callback", "ret_exprs": [], "ret_type": "", "variables": {"callback_file": "", "dag": "", "dag_file_processor": "", "dagrun": "", "msg": "", "requests": "", "task": "", "ti": ""}, "variables_p": {"callback_file": [["str", 0.45676258834322214], ["Optional[str]", 0.08886906603572757]], "dag": [["zerver.models.Realm", 0.11889939233364547], ["correios.models.posting.TrackingCode", 0.09507252457604624], ["Dict[str, str]", 0.09139844806079962]], "dag_file_processor": [["unittesmock.MagicMock", 0.1851382201141508], ["Dict[str, Any]", 0.1194852343811441], ["dict", 0.10051506287842724], ["Dict[str, str]", 0.09210234478475646], ["str", 0.09097009763505318], ["mock.MagicMock", 0.08748283570832042]], "dagrun": [["list", 0.20758328139159002], ["float", 0.18292469374505643], ["str", 0.08767299411116916]], "msg": [["str", 0.3697902504101706], ["Dict[str, str]", 0.09754804181972479]], "requests": [["excars.models.rides.RideRequest", 0.1719004480055623], ["kedro.framework.session.session.KedroSession", 0.10649338852050287], ["taskiapplication.models.task.Task", 0.08545158983984392]], "task": [["taskiapplication.models.task.Task", 0.091279396427776], ["kippo.tasks.models.KippoTask", 0.07006662565525482]], "ti": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[596, 4], [609, 30]], "fn_var_ln": {"import_error": [[606, 12], [606, 24]], "import_errors": [[603, 12], [603, 25]], "unparseable_filename": [[597, 8], [597, 28]]}, "fn_var_occur": {"import_error": [["import_error", "import_errors"], ["import_error", "filename", "unparseable_filename"], ["import_error", "stacktrace", "TEMP_DAG_FILENAME"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "unparseable_filename": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["open", "unparseable_filename", "unparseable_file"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["import_error", "filename", "unparseable_filename"]]}, "name": "test_add_unparseable_file_before_sched_start_creates_import_error", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.649607113953394], ["dss.config.Replica", 0.08055524488763809]]}, "q_name": "TestDagFileProcessor.test_add_unparseable_file_before_sched_start_creates_import_error", "ret_exprs": [], "ret_type": "", "variables": {"import_error": "", "import_errors": "", "unparseable_filename": ""}, "variables_p": {"import_error": [["str", 0.8253746664612014], ["float", 0.06209002472590305]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "unparseable_filename": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[612, 4], [626, 30]], "fn_var_ln": {"import_error": [[623, 12], [623, 24]], "import_errors": [[620, 12], [620, 25]], "invalid_dag_filename": [[614, 8], [614, 28]], "zip_filename": [[613, 8], [613, 20]]}, "fn_var_occur": {"import_error": [["import_error", "import_errors"], ["import_error", "filename", "invalid_dag_filename"], ["import_error", "stacktrace", "TEMP_DAG_FILENAME"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "invalid_dag_filename": [["invalid_dag_filename", "os", "path", "join", "zip_filename", "TEMP_DAG_FILENAME"], ["import_error", "filename", "invalid_dag_filename"]], "zip_filename": [["zip_filename", "os", "path", "join", "tmpdir"], ["invalid_dag_filename", "os", "path", "join", "zip_filename", "TEMP_DAG_FILENAME"], ["ZipFile", "zip_filename", "zip_file"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "name": "test_add_unparseable_zip_file_creates_import_error", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["zip_filename", "os", "path", "join", "tmpdir"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.16253491865463024], ["tests.basilisp.helpers.CompileFn", 0.07504228620843616]]}, "q_name": "TestDagFileProcessor.test_add_unparseable_zip_file_creates_import_error", "ret_exprs": [], "ret_type": "", "variables": {"import_error": "", "import_errors": "", "invalid_dag_filename": "", "zip_filename": ""}, "variables_p": {"import_error": [["str", 0.7983654814927524], ["float", 0.06120006530021916]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "invalid_dag_filename": [["str", 0.9143674829104241], ["Union[Literal, str]", 0.08563251708957574]], "zip_filename": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[629, 4], [652, 35]], "fn_var_ln": {"dag_file": [[630, 8], [630, 16]], "dm": [[651, 8], [651, 10]], "import_error": [[648, 8], [648, 20]], "import_errors": [[645, 8], [645, 21]], "temp_dagfile": [[631, 8], [631, 20]]}, "fn_var_occur": {"dag_file": [["dag_file", "os", "path", "join", "TEST_DAGS_FOLDER"], ["open", "dag_file", "main_dag"]], "dm": [["dm", "session", "query", "DagModel", "filter", "DagModel", "fileloc", "temp_dagfile", "first"], ["dm", "has_import_errors"], ["dm", "session", "query", "DagModel", "filter", "DagModel", "fileloc", "temp_dagfile", "first"], ["dm", "has_import_errors"]], "import_error": [["import_error", "import_errors"], ["import_error", "filename", "temp_dagfile"], ["import_error", "stacktrace"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "temp_dagfile": [["temp_dagfile", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"], ["dm", "session", "query", "DagModel", "filter", "DagModel", "fileloc", "temp_dagfile", "first"], ["open", "temp_dagfile", "file"], ["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"], ["import_error", "filename", "temp_dagfile"], ["dm", "session", "query", "DagModel", "filter", "DagModel", "fileloc", "temp_dagfile", "first"]]}, "name": "test_dag_model_has_import_error_is_true_when_import_error_exists", "params": {"self": "", "session": "", "tmpdir": ""}, "params_descr": {"self": "", "session": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"]], "session": [["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"], ["dm", "session", "query", "DagModel", "filter", "DagModel", "fileloc", "temp_dagfile", "first"], ["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"], ["import_errors", "session", "query", "errors", "ImportError", "all"], ["dm", "session", "query", "DagModel", "filter", "DagModel", "fileloc", "temp_dagfile", "first"]], "tmpdir": [["temp_dagfile", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "temp_dagfile", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["django.conf.settings.AUTH_USER_MODEL", 0.10733026091780118]], "tmpdir": [["str", 0.3049327874782301], ["int", 0.10626657915850515], ["Mapping[str, List[str]]", 0.09633325636414666], ["List[str]", 0.09176864530240988]]}, "q_name": "TestDagFileProcessor.test_dag_model_has_import_error_is_true_when_import_error_exists", "ret_exprs": [], "ret_type": "", "variables": {"dag_file": "", "dm": "", "import_error": "", "import_errors": "", "temp_dagfile": ""}, "variables_p": {"dag_file": [["str", 0.9154621328975727], ["List[str]", 0.08453786710242744]], "dm": [["list", 0.31130252262468994], ["str", 0.10224147335999671], ["abilian.core.models.subjects.User", 0.07000624116528854], ["dict", 0.0684423924957798]], "import_error": [["str", 0.598389290520531], ["List[str]", 0.06668072737915937], ["float", 0.060856521973796415]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "temp_dagfile": [["str", 0.6996829711824666], ["List[str]", 0.10946298560064843]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[654, 4], [666, 30]], "fn_var_ln": {"import_errors": [[662, 12], [662, 25]], "parseable_filename": [[655, 8], [655, 26]]}, "fn_var_occur": {"import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"]], "parseable_filename": [["parseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["open", "parseable_filename", "parseable_file"], ["self", "_process_file", "parseable_filename", "dag_directory", "tmpdir", "session", "session"]]}, "name": "test_no_import_errors_with_parseable_dag", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "parseable_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["parseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "parseable_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.8052105818534048]]}, "q_name": "TestDagFileProcessor.test_no_import_errors_with_parseable_dag", "ret_exprs": [], "ret_type": "", "variables": {"import_errors": "", "parseable_filename": ""}, "variables_p": {"import_errors": [["str", 0.8716634156839195], ["List[str]", 0.12833658431608058]], "parseable_filename": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[668, 4], [679, 30]], "fn_var_ln": {"import_errors": [[675, 12], [675, 25]], "zip_filename": [[669, 8], [669, 20]]}, "fn_var_occur": {"import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"]], "zip_filename": [["zip_filename", "os", "path", "join", "tmpdir"], ["ZipFile", "zip_filename", "zip_file"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "name": "test_no_import_errors_with_parseable_dag_in_zip", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["zip_filename", "os", "path", "join", "tmpdir"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.2152815196091945], ["cmk.utils.type_defs.UserId", 0.06742353516755699]]}, "q_name": "TestDagFileProcessor.test_no_import_errors_with_parseable_dag_in_zip", "ret_exprs": [], "ret_type": "", "variables": {"import_errors": "", "zip_filename": ""}, "variables_p": {"import_errors": [["str", 0.8716634156839195], ["List[str]", 0.12833658431608058]], "zip_filename": [["str", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[682, 4], [705, 26]], "fn_var_ln": {"import_error": [[701, 8], [701, 20]], "import_errors": [[698, 8], [698, 21]], "session": [[688, 8], [688, 15]], "unparseable_filename": [[683, 8], [683, 28]]}, "fn_var_occur": {"import_error": [["import_error", "import_errors"], ["import_error", "filename", "unparseable_filename"], ["import_error", "stacktrace", "TEMP_DAG_FILENAME"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "session": [["session", "settings", "Session"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["import_errors", "session", "query", "errors", "ImportError", "all"], ["session", "rollback"]], "unparseable_filename": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["open", "unparseable_filename", "unparseable_file"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["open", "unparseable_filename", "unparseable_file"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["import_error", "filename", "unparseable_filename"]]}, "name": "test_new_import_error_replaces_old", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.45267065068572765]]}, "q_name": "TestDagFileProcessor.test_new_import_error_replaces_old", "ret_exprs": [], "ret_type": "", "variables": {"import_error": "", "import_errors": "", "session": "", "unparseable_filename": ""}, "variables_p": {"import_error": [["str", 0.8253746664612014], ["float", 0.06209002472590305]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "session": [["kedro.framework.session.store.BaseSessionStore", 0.11025610373154666], ["Dict[str, Union[Any, str]]", 0.09961191771383437], ["highlevel.roboentity.configuration.Configuration", 0.0956998060018408], ["Optional[Dict[str, Any]]", 0.09517008044840589], ["Dict[str, Any]", 0.094087739552035]], "unparseable_filename": [["str", 0.9999999999999999]]}}, {"docstring": {"func": "Test that existing import error is updated and new record not created", "long_descr": "for a dag with the same filename", "ret": null}, "fn_lc": [[707, 4], [733, 53]], "fn_var_ln": {"filename_to_parse": [[712, 8], [712, 25]], "import_error_1": [[720, 8], [720, 22]], "import_error_2": [[728, 8], [728, 22]], "session": [[717, 8], [717, 15]]}, "fn_var_occur": {"filename_to_parse": [["filename_to_parse", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["open", "filename_to_parse", "file_to_parse"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["import_error_1", "session", "query", "errors", "ImportError", "filter", "errors", "ImportError", "filename", "filename_to_parse", "one"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["import_error_2", "session", "query", "errors", "ImportError", "filter", "errors", "ImportError", "filename", "filename_to_parse", "one"]], "import_error_1": [["import_error_1", "session", "query", "errors", "ImportError", "filter", "errors", "ImportError", "filename", "filename_to_parse", "one"], ["import_error_1", "id", "import_error_2", "id"]], "import_error_2": [["import_error_2", "session", "query", "errors", "ImportError", "filter", "errors", "ImportError", "filename", "filename_to_parse", "one"], ["import_error_1", "id", "import_error_2", "id"]], "session": [["session", "settings", "Session"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["import_error_1", "session", "query", "errors", "ImportError", "filter", "errors", "ImportError", "filename", "filename_to_parse", "one"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["import_error_2", "session", "query", "errors", "ImportError", "filter", "errors", "ImportError", "filename", "filename_to_parse", "one"]]}, "name": "test_import_error_record_is_updated_not_deleted_and_recreated", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["filename_to_parse", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.33720986130989294]]}, "q_name": "TestDagFileProcessor.test_import_error_record_is_updated_not_deleted_and_recreated", "ret_exprs": [], "ret_type": "", "variables": {"filename_to_parse": "", "import_error_1": "", "import_error_2": "", "session": ""}, "variables_p": {"filename_to_parse": [["str", 0.9125454248264651], ["dict", 0.0874545751735349]], "import_error_1": [["str", 0.8527330913357044], ["Type[Dict[Any, str]]", 0.14726690866429556]], "import_error_2": [["str", 0.8527330913357044], ["Type[Dict[Any, str]]", 0.14726690866429556]], "session": [["Dict[str, Any]", 0.29526089787800475]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[735, 4], [753, 26]], "fn_var_ln": {"filename_to_parse": [[736, 8], [736, 25]], "import_errors": [[749, 8], [749, 21]], "session": [[741, 8], [741, 15]]}, "fn_var_occur": {"filename_to_parse": [["filename_to_parse", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["open", "filename_to_parse", "file_to_parse"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["open", "filename_to_parse", "file_to_parse"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"]], "session": [["session", "settings", "Session"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["import_errors", "session", "query", "errors", "ImportError", "all"], ["session", "rollback"]]}, "name": "test_remove_error_clears_import_error", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["filename_to_parse", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "filename_to_parse", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.18832304379992587], ["tests.basilisp.helpers.CompileFn", 0.09279960162073307]]}, "q_name": "TestDagFileProcessor.test_remove_error_clears_import_error", "ret_exprs": [], "ret_type": "", "variables": {"filename_to_parse": "", "import_errors": "", "session": ""}, "variables_p": {"filename_to_parse": [["str", 0.9125454248264651], ["dict", 0.0874545751735349]], "import_errors": [["str", 0.8716634156839195], ["List[str]", 0.12833658431608058]], "session": [["yawasscanner.session.Session", 0.393057716558862], ["Dict[str, Any]", 0.2713914145351854], ["dict", 0.08539852443355019], ["buza.models.Answer", 0.08024838780081063]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[755, 4], [775, 26]], "fn_var_ln": {"import_errors": [[772, 8], [772, 21]], "session": [[756, 8], [756, 15]], "zip_filename": [[759, 8], [759, 20]]}, "fn_var_occur": {"import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"]], "session": [["session", "settings", "Session"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"], ["import_errors", "session", "query", "errors", "ImportError", "all"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"], ["import_errors", "session", "query", "errors", "ImportError", "all"], ["session", "rollback"]], "zip_filename": [["zip_filename", "os", "path", "join", "tmpdir"], ["ZipFile", "zip_filename", "zip_file"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"], ["ZipFile", "zip_filename", "zip_file"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "name": "test_remove_error_clears_import_error_zip", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["zip_filename", "os", "path", "join", "tmpdir"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"], ["self", "_process_file", "zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.31443642886435363]]}, "q_name": "TestDagFileProcessor.test_remove_error_clears_import_error_zip", "ret_exprs": [], "ret_type": "", "variables": {"import_errors": "", "session": "", "zip_filename": ""}, "variables_p": {"import_errors": [["str", 0.7556659002868844], ["List[str]", 0.24433409971311565]], "session": [["Dict[str, Any]", 0.28850889128306667], ["kedro.framework.session.store.BaseSessionStore", 0.1000820196766724], ["dict", 0.09821277858179171], ["Dict[str, dict]", 0.08870755442593008], ["Dict[str, Dict[str, Any]]", 0.08870755442593008], ["Tuple[int]", 0.08670169243784084], ["trakcore.config.TraktCredentials", 0.08651068810553385]], "zip_filename": [["str", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[777, 4], [811, 30]], "fn_var_ln": {"expected_stacktrace": [[800, 16], [800, 35]], "import_error": [[787, 12], [787, 24]], "import_errors": [[784, 12], [784, 25]], "unparseable_filename": [[778, 8], [778, 28]]}, "fn_var_occur": {"expected_stacktrace": [["import_error", "stacktrace", "expected_stacktrace", "format", "unparseable_filename", "unparseable_filename"]], "import_error": [["import_error", "import_errors"], ["import_error", "filename", "unparseable_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "unparseable_filename", "unparseable_filename"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "unparseable_filename": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["open", "unparseable_filename", "unparseable_file"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["import_error", "filename", "unparseable_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "unparseable_filename", "unparseable_filename"]]}, "name": "test_import_error_tracebacks", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.7273903675054476]]}, "q_name": "TestDagFileProcessor.test_import_error_tracebacks", "ret_exprs": [], "ret_type": "", "variables": {"expected_stacktrace": "", "import_error": "", "import_errors": "", "unparseable_filename": ""}, "variables_p": {"expected_stacktrace": [["str", 0.7991070749015785], ["Union[Literal, str]", 0.10578207483485748], ["bytes", 0.09511085026356386]], "import_error": [["str", 0.9031359410027615], ["Exception", 0.09686405899723852]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "unparseable_filename": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[814, 4], [843, 30]], "fn_var_ln": {"expected_stacktrace": [[835, 16], [835, 35]], "import_error": [[824, 12], [824, 24]], "import_errors": [[821, 12], [821, 25]], "unparseable_filename": [[815, 8], [815, 28]]}, "fn_var_occur": {"expected_stacktrace": [["import_error", "stacktrace", "expected_stacktrace", "format", "unparseable_filename"]], "import_error": [["import_error", "import_errors"], ["import_error", "filename", "unparseable_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "unparseable_filename"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "unparseable_filename": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["open", "unparseable_filename", "unparseable_file"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"], ["import_error", "filename", "unparseable_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "unparseable_filename"]]}, "name": "test_import_error_traceback_depth", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["self", "_process_file", "unparseable_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.7273903675054476]]}, "q_name": "TestDagFileProcessor.test_import_error_traceback_depth", "ret_exprs": [], "ret_type": "", "variables": {"expected_stacktrace": "", "import_error": "", "import_errors": "", "unparseable_filename": ""}, "variables_p": {"expected_stacktrace": [["str", 1.0]], "import_error": [["str", 0.8969385035151628], ["Exception", 0.10306149648483745]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "unparseable_filename": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[845, 4], [880, 30]], "fn_var_ln": {"expected_stacktrace": [[869, 16], [869, 35]], "import_error": [[856, 12], [856, 24]], "import_errors": [[853, 12], [853, 25]], "invalid_dag_filename": [[847, 8], [847, 28]], "invalid_zip_filename": [[846, 8], [846, 28]]}, "fn_var_occur": {"expected_stacktrace": [["import_error", "stacktrace", "expected_stacktrace", "format", "invalid_dag_filename", "invalid_dag_filename"]], "import_error": [["import_error", "import_errors"], ["import_error", "filename", "invalid_dag_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "invalid_dag_filename", "invalid_dag_filename"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "invalid_dag_filename": [["invalid_dag_filename", "os", "path", "join", "invalid_zip_filename", "TEMP_DAG_FILENAME"], ["import_error", "filename", "invalid_dag_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "invalid_dag_filename", "invalid_dag_filename"]], "invalid_zip_filename": [["invalid_zip_filename", "os", "path", "join", "tmpdir"], ["invalid_dag_filename", "os", "path", "join", "invalid_zip_filename", "TEMP_DAG_FILENAME"], ["ZipFile", "invalid_zip_filename", "invalid_zip_file"], ["self", "_process_file", "invalid_zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "name": "test_import_error_tracebacks_zip", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "invalid_zip_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["invalid_zip_filename", "os", "path", "join", "tmpdir"], ["self", "_process_file", "invalid_zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.17129170340178906], ["tests.basilisp.helpers.CompileFn", 0.16823741871889397]]}, "q_name": "TestDagFileProcessor.test_import_error_tracebacks_zip", "ret_exprs": [], "ret_type": "", "variables": {"expected_stacktrace": "", "import_error": "", "import_errors": "", "invalid_dag_filename": "", "invalid_zip_filename": ""}, "variables_p": {"expected_stacktrace": [["str", 0.9001441050018215], ["Union[Literal, str]", 0.09985589499817853]], "import_error": [["str", 0.8287955919435641], ["float", 0.07165412012449598]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "invalid_dag_filename": [["str", 1.0000000000000002]], "invalid_zip_filename": [["str", 0.9999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[883, 4], [912, 30]], "fn_var_ln": {"expected_stacktrace": [[905, 16], [905, 35]], "import_error": [[894, 12], [894, 24]], "import_errors": [[891, 12], [891, 25]], "invalid_dag_filename": [[885, 8], [885, 28]], "invalid_zip_filename": [[884, 8], [884, 28]]}, "fn_var_occur": {"expected_stacktrace": [["import_error", "stacktrace", "expected_stacktrace", "format", "invalid_dag_filename"]], "import_error": [["import_error", "import_errors"], ["import_error", "filename", "invalid_dag_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "invalid_dag_filename"]], "import_errors": [["import_errors", "session", "query", "errors", "ImportError", "all"], ["len", "import_errors"], ["import_error", "import_errors"]], "invalid_dag_filename": [["invalid_dag_filename", "os", "path", "join", "invalid_zip_filename", "TEMP_DAG_FILENAME"], ["import_error", "filename", "invalid_dag_filename"], ["import_error", "stacktrace", "expected_stacktrace", "format", "invalid_dag_filename"]], "invalid_zip_filename": [["invalid_zip_filename", "os", "path", "join", "tmpdir"], ["invalid_dag_filename", "os", "path", "join", "invalid_zip_filename", "TEMP_DAG_FILENAME"], ["ZipFile", "invalid_zip_filename", "invalid_zip_file"], ["self", "_process_file", "invalid_zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "name": "test_import_error_tracebacks_zip_depth", "params": {"self": "", "tmpdir": ""}, "params_descr": {"self": "", "tmpdir": ""}, "params_occur": {"self": [["self", "_process_file", "invalid_zip_filename", "dag_directory", "tmpdir", "session", "session"]], "tmpdir": [["invalid_zip_filename", "os", "path", "join", "tmpdir"], ["self", "_process_file", "invalid_zip_filename", "dag_directory", "tmpdir", "session", "session"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmpdir": [["str", 0.17129170340178906], ["tests.basilisp.helpers.CompileFn", 0.16823741871889397]]}, "q_name": "TestDagFileProcessor.test_import_error_tracebacks_zip_depth", "ret_exprs": [], "ret_type": "", "variables": {"expected_stacktrace": "", "import_error": "", "import_errors": "", "invalid_dag_filename": "", "invalid_zip_filename": ""}, "variables_p": {"expected_stacktrace": [["str", 1.0]], "import_error": [["str", 0.8274159842581945], ["float", 0.07298316233183492]], "import_errors": [["str", 0.6504027397418963], ["List[str]", 0.2448317447426719]], "invalid_dag_filename": [["str", 1.0000000000000002]], "invalid_zip_filename": [["str", 0.9999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[917, 4], [935, 57]], "fn_var_ln": {"processor": [[918, 8], [918, 17]]}, "fn_var_occur": {"processor": [["processor", "DagFileProcessorProcess", "file_path", "pickle_dags", "False", "dag_ids", "dag_directory", "callback_requests"], ["processor", "_run_file_processor", "result_channel", "MagicMock", "parent_channel", "MagicMock", "file_path", "pickle_dags", "False", "dag_ids", "thread_name", "callback_requests", "dag_directory"]]}, "name": "test_dag_parser_output_when_logging_to_stdout", "params": {"mock_redirect_stdout_for_file": "", "self": ""}, "params_descr": {"mock_redirect_stdout_for_file": "", "self": ""}, "params_occur": {"mock_redirect_stdout_for_file": [["mock_redirect_stdout_for_file", "assert_not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_redirect_stdout_for_file": [["unittesmock.MagicMock", 0.7517067526315577]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_parser_output_when_logging_to_stdout", "ret_exprs": [], "ret_type": "", "variables": {"processor": ""}, "variables_p": {"processor": [["list", 0.11715396820836678], ["str", 0.10204841685926294], ["bool", 0.0749282979219764], ["dict", 0.07270933112330051]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[940, 4], [958, 58]], "fn_var_ln": {"processor": [[941, 8], [941, 17]]}, "fn_var_occur": {"processor": [["processor", "DagFileProcessorProcess", "file_path", "pickle_dags", "False", "dag_ids", "dag_directory", "callback_requests"], ["processor", "_run_file_processor", "result_channel", "MagicMock", "parent_channel", "MagicMock", "file_path", "pickle_dags", "False", "dag_ids", "thread_name", "callback_requests", "dag_directory"]]}, "name": "test_dag_parser_output_when_logging_to_file", "params": {"mock_redirect_stdout_for_file": "", "self": ""}, "params_descr": {"mock_redirect_stdout_for_file": "", "self": ""}, "params_occur": {"mock_redirect_stdout_for_file": [["mock_redirect_stdout_for_file", "assert_called_once"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_redirect_stdout_for_file": [["unittesmock.MagicMock", 0.6173362112884251], ["mock.MagicMock", 0.08704421866938418]], "self": []}, "q_name": "TestDagFileProcessor.test_dag_parser_output_when_logging_to_file", "ret_exprs": [], "ret_type": "", "variables": {"processor": ""}, "variables_p": {"processor": [["list", 0.11715396820836678], ["str", 0.10204841685926294], ["bool", 0.0749282979219764], ["dict", 0.07270933112330051]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[962, 4], [975, 25]], "fn_var_ln": {"processor": [[968, 8], [968, 17]], "zip_filename": [[964, 8], [964, 20]]}, "fn_var_occur": {"processor": [["processor", "DagFileProcessorProcess", "file_path", "zip_filename", "pickle_dags", "False", "dag_ids", "dag_directory", "callback_requests"], ["processor", "start"]], "zip_filename": [["zip_filename", "os", "path", "join", "tmpdir"], ["ZipFile", "zip_filename", "zip_file"], ["processor", "DagFileProcessorProcess", "file_path", "zip_filename", "pickle_dags", "False", "dag_ids", "dag_directory", "callback_requests"]]}, "name": "test_no_valueerror_with_parseable_dag_in_zip", "params": {"mock_context": "", "self": "", "tmpdir": ""}, "params_descr": {"mock_context": "", "self": "", "tmpdir": ""}, "params_occur": {"mock_context": [["mock_context", "return_value", "Pipe", "return_value", "MagicMock", "MagicMock"]], "self": [], "tmpdir": [["zip_filename", "os", "path", "join", "tmpdir"]]}, "params_p": {"args": [], "kwargs": [], "mock_context": [["unittesmock.MagicMock", 0.15804544864183367], ["Dict[str, Any]", 0.07360940658720128]], "self": [], "tmpdir": [["unittesmock.MagicMock", 0.4555674855107981], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.19790188031240744], ["str", 0.1417832073167406]]}, "q_name": "TestDagFileProcessor.test_no_valueerror_with_parseable_dag_in_zip", "ret_exprs": [], "ret_type": "", "variables": {"processor": "", "zip_filename": ""}, "variables_p": {"processor": [["datetime.timedelta", 0.13875214615165005], ["grouper.api.settings.ApiSettings", 0.08044698783328087], ["Tuple[Literal, Literal, Literal]", 0.07935377426398611]], "zip_filename": [["str", 0.9014542755837684], ["Union[Literal, str]", 0.09854572441623158]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[979, 4], [992, 25]], "fn_var_ln": {"dag_filename": [[981, 8], [981, 20]], "processor": [[985, 8], [985, 17]]}, "fn_var_occur": {"dag_filename": [["dag_filename", "os", "path", "join", "tmpdir"], ["open", "dag_filename", "file"], ["processor", "DagFileProcessorProcess", "file_path", "dag_filename", "pickle_dags", "False", "dag_ids", "dag_directory", "callback_requests"]], "processor": [["processor", "DagFileProcessorProcess", "file_path", "dag_filename", "pickle_dags", "False", "dag_ids", "dag_directory", "callback_requests"], ["processor", "start"]]}, "name": "test_nullbyte_exception_handling_when_preimporting_airflow", "params": {"mock_context": "", "self": "", "tmpdir": ""}, "params_descr": {"mock_context": "", "self": "", "tmpdir": ""}, "params_occur": {"mock_context": [["mock_context", "return_value", "Pipe", "return_value", "MagicMock", "MagicMock"]], "self": [], "tmpdir": [["dag_filename", "os", "path", "join", "tmpdir"]]}, "params_p": {"args": [], "kwargs": [], "mock_context": [["unittesmock.MagicMock", 0.15631942348708455], ["Dict[str, Any]", 0.08577983222943109]], "self": [], "tmpdir": [["unittesmock.MagicMock", 0.43868095024790366], ["str", 0.25817973830671326], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09781381889697043]]}, "q_name": "TestDagFileProcessor.test_nullbyte_exception_handling_when_preimporting_airflow", "ret_exprs": [], "ret_type": "", "variables": {"dag_filename": "", "processor": ""}, "variables_p": {"dag_filename": [["str", 0.9163614059871046]], "processor": [["str", 0.10658318317897342], ["bool", 0.08960423452730468], ["grouper.api.settings.ApiSettings", 0.08746923509914867]]}}], "name": "TestDagFileProcessor", "q_name": "TestDagFileProcessor", "variables": {}, "variables_p": {}}, {"cls_lc": [[995, 0], [1041, 50]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[997, 4], [1001, 38]], "fn_var_ln": {"processor_agent": [[998, 8], [998, 28]]}, "fn_var_occur": {"processor_agent": [["self", "processor_agent", "None"], ["self", "processor_agent"], ["self", "processor_agent", "end"]]}, "name": "per_test", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "processor_agent", "None"], ["self", "processor_agent"], ["self", "processor_agent", "end"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestProcessorAgent.per_test", "ret_exprs": [], "ret_type": "", "variables": {"processor_agent": ""}, "variables_p": {"processor_agent": [["Dict[int, Any]", 0.5173041555882865], ["int", 0.18950232844265488], ["list", 0.10648135456877621], ["Union[Literal, str]", 0.09807344954787285], ["dict", 0.0886387118524096]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1003, 4], [1014, 54]], "fn_var_ln": {"processor_agent": [[1004, 8], [1004, 28]]}, "fn_var_occur": {"processor_agent": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "True"], ["self", "processor_agent", "start"], ["self", "processor_agent", "wait_until_finished"]]}, "name": "test_error_when_waiting_in_async_mode", "params": {"self": "", "tmp_path": ""}, "params_descr": {"self": "", "tmp_path": ""}, "params_occur": {"self": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "True"], ["self", "processor_agent", "start"], ["self", "processor_agent", "wait_until_finished"]], "tmp_path": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path": [["str", 0.4043240616907832], ["List[str]", 0.09666385625946353], ["types.CompilationTarget", 0.09163304807808], ["dict", 0.0905994468503916]]}, "q_name": "TestProcessorAgent.test_error_when_waiting_in_async_mode", "ret_exprs": [], "ret_type": "", "variables": {"processor_agent": ""}, "variables_p": {"processor_agent": [["str", 0.4555296747848436], ["int", 0.36137739730592056], ["bool", 0.09458698538774969], ["Dict[str, Dict[str, int]]", 0.0885059425214864]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1016, 4], [1027, 50]], "fn_var_ln": {"processor_agent": [[1017, 8], [1017, 28]]}, "fn_var_occur": {"processor_agent": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "False"], ["self", "processor_agent", "start"], ["self", "processor_agent", "run_single_parsing_loop"], ["self", "processor_agent", "wait_until_finished"]]}, "name": "test_default_multiprocessing_behaviour", "params": {"self": "", "tmp_path": ""}, "params_descr": {"self": "", "tmp_path": ""}, "params_occur": {"self": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "False"], ["self", "processor_agent", "start"], ["self", "processor_agent", "run_single_parsing_loop"], ["self", "processor_agent", "wait_until_finished"]], "tmp_path": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path": [["int", 0.20117695837853433], ["str", 0.1003235749320547], ["set", 0.09501453572520001], ["bool", 0.09153858815897824]]}, "q_name": "TestProcessorAgent.test_default_multiprocessing_behaviour", "ret_exprs": [], "ret_type": "", "variables": {"processor_agent": ""}, "variables_p": {"processor_agent": [["str", 0.4555296747848436], ["int", 0.36137739730592056], ["bool", 0.09458698538774969], ["Dict[str, Dict[str, int]]", 0.0885059425214864]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[1030, 4], [1041, 50]], "fn_var_ln": {"processor_agent": [[1031, 8], [1031, 28]]}, "fn_var_occur": {"processor_agent": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "False"], ["self", "processor_agent", "start"], ["self", "processor_agent", "run_single_parsing_loop"], ["self", "processor_agent", "wait_until_finished"]]}, "name": "test_spawn_multiprocessing_behaviour", "params": {"self": "", "tmp_path": ""}, "params_descr": {"self": "", "tmp_path": ""}, "params_occur": {"self": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "False"], ["self", "processor_agent", "start"], ["self", "processor_agent", "run_single_parsing_loop"], ["self", "processor_agent", "wait_until_finished"]], "tmp_path": [["self", "processor_agent", "DagFileProcessorAgent", "dag_directory", "tmp_path", "max_runs", "processor_timeout", "datetime", "timedelta", "dag_ids", "pickle_dags", "False", "async_mode", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path": [["int", 0.10670821255593083], ["List[str]", 0.09582723669508836], ["str", 0.09492492102883127]]}, "q_name": "TestProcessorAgent.test_spawn_multiprocessing_behaviour", "ret_exprs": [], "ret_type": "", "variables": {"processor_agent": ""}, "variables_p": {"processor_agent": [["str", 0.4555296747848436], ["int", 0.36137739730592056], ["bool", 0.09458698538774969], ["Dict[str, Dict[str, int]]", 0.0885059425214864]]}}], "name": "TestProcessorAgent", "q_name": "TestProcessorAgent", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 0], [71, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "disable_load_example", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "disable_load_example", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "datetime", "os", "unittest", "mock", "unittest", "mock", "MagicMock", "patch", "zipfile", "ZipFile", "pytest", "airflow", "PY311", "settings", "airflow", "callbacks", "callback_requests", "TaskCallbackRequest", "airflow", "configuration", "TEST_DAGS_FOLDER", "conf", "airflow", "dag_processing", "manager", "DagFileProcessorAgent", "airflow", "dag_processing", "processor", "DagFileProcessor", "DagFileProcessorProcess", "airflow", "models", "DagBag", "DagModel", "SlaMiss", "TaskInstance", "errors", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "models", "taskinstance", "SimpleTaskInstance", "airflow", "operators", "empty", "EmptyOperator", "airflow", "utils", "timezone", "airflow", "utils", "session", "create_session", "airflow", "utils", "state", "State", "airflow", "utils", "types", "DagRunType", "tests", "test_utils", "config", "conf_vars", "env_vars", "tests", "test_utils", "db", "clear_db_dags", "clear_db_import_errors", "clear_db_jobs", "clear_db_pools", "clear_db_runs", "clear_db_serialized_dags", "clear_db_sla_miss", "tests", "test_utils", "mock_executor", "MockExecutor"], "mod_var_ln": {"DEFAULT_DATE": [[53, 0], [53, 12]], "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS": [[60, 0], [60, 36]], "PARSEABLE_DAG_FILE_CONTENTS": [[58, 0], [58, 27]], "TEMP_DAG_FILENAME": [[64, 0], [64, 17]], "UNPARSEABLE_DAG_FILE_CONTENTS": [[59, 0], [59, 29]]}, "mod_var_occur": {"DEFAULT_DATE": [["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"], ["dagrun", "dag", "create_dagrun", "state", "State", "RUNNING", "execution_date", "DEFAULT_DATE", "run_type", "DagRunType", "SCHEDULED", "session", "session"]], "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS": [["unparseable_file", "writelines", "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS"], ["unparseable_file", "writelines", "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS"], ["invalid_zip_file", "writestr", "TEMP_DAG_FILENAME", "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS"], ["invalid_zip_file", "writestr", "TEMP_DAG_FILENAME", "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS"]], "PARSEABLE_DAG_FILE_CONTENTS": [["parseable_file", "writelines", "PARSEABLE_DAG_FILE_CONTENTS"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "PARSEABLE_DAG_FILE_CONTENTS"], ["unparseable_file", "writelines", "PARSEABLE_DAG_FILE_CONTENTS", "os", "linesep", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["file_to_parse", "writelines", "PARSEABLE_DAG_FILE_CONTENTS"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "PARSEABLE_DAG_FILE_CONTENTS"]], "TEMP_DAG_FILENAME": [["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["import_error", "stacktrace", "TEMP_DAG_FILENAME"], ["invalid_dag_filename", "os", "path", "join", "zip_filename", "TEMP_DAG_FILENAME"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["import_error", "stacktrace", "TEMP_DAG_FILENAME"], ["temp_dagfile", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["parseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "PARSEABLE_DAG_FILE_CONTENTS"], ["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["import_error", "stacktrace", "TEMP_DAG_FILENAME"], ["filename_to_parse", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["filename_to_parse", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["zip_file", "writestr", "TEMP_DAG_FILENAME"], ["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["unparseable_filename", "os", "path", "join", "tmpdir", "TEMP_DAG_FILENAME"], ["invalid_dag_filename", "os", "path", "join", "invalid_zip_filename", "TEMP_DAG_FILENAME"], ["invalid_zip_file", "writestr", "TEMP_DAG_FILENAME", "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS"], ["invalid_dag_filename", "os", "path", "join", "invalid_zip_filename", "TEMP_DAG_FILENAME"], ["invalid_zip_file", "writestr", "TEMP_DAG_FILENAME", "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "PARSEABLE_DAG_FILE_CONTENTS"]], "UNPARSEABLE_DAG_FILE_CONTENTS": [["unparseable_file", "writelines", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["file", "writelines", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["unparseable_file", "writelines", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["unparseable_file", "writelines", "PARSEABLE_DAG_FILE_CONTENTS", "os", "linesep", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["file_to_parse", "writelines", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["file_to_parse", "writelines", "UNPARSEABLE_DAG_FILE_CONTENTS"], ["zip_file", "writestr", "TEMP_DAG_FILENAME", "UNPARSEABLE_DAG_FILE_CONTENTS"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 266}, "session_id": "hLwzZqeurHTTDFJiFyra9WHJBPWPWr9cKCDTxpQXVhc", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS": "", "PARSEABLE_DAG_FILE_CONTENTS": "", "TEMP_DAG_FILENAME": "", "UNPARSEABLE_DAG_FILE_CONTENTS": ""}, "variables_p": {"DEFAULT_DATE": [["str", 0.7899956458579189], ["List[Dict[str, Any]]", 0.1131264524329488], ["Optional[str]", 0.0968779017091321]], "INVALID_DAG_WITH_DEPTH_FILE_CONTENTS": [["Optional[BaseException]", 0.40400684350765415], ["str", 0.29691684096693866], ["List[str]", 0.10600391631323842], ["Dict[str, Any]", 0.09653732010381251]], "PARSEABLE_DAG_FILE_CONTENTS": [["str", 0.48192149680201113]], "TEMP_DAG_FILENAME": [["str", 0.9085758610501077], ["Optional[str]", 0.09142413894989233]], "UNPARSEABLE_DAG_FILE_CONTENTS": [["str", 0.3923218646013114]]}}}