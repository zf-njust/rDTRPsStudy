{"error": null, "response": {"classes": [{"cls_lc": [[50, 0], [330, 64]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Test TrinoToGCSOperator instance is properly initialized.", "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [64, 60]], "fn_var_ln": {"op": [[53, 8], [53, 10]]}, "fn_var_occur": {"op": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "task_id", "TASK_ID"], ["op", "sql", "SQL"], ["op", "bucket", "BUCKET"], ["op", "filename", "FILENAME"], ["op", "impersonation_chain", "IMPERSONATION_CHAIN"]]}, "name": "test_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrinoToGCSOperator.test_init", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["Dict[str, Union[Any, bool, str]]", 0.2744644553054488], ["int", 0.23453013257315092], ["Dict[str, Dict[str, Any]]", 0.09227744625046626], ["str", 0.08076181068425108]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 8], [75, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["FILENAME", "format", "obj"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.8024488204116482], ["bool", 0.09851880793221435]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestTrinoToGCSOperator.test_save_as_json.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [111, 57]], "fn_var_ln": {"mock_cursor": [[79, 8], [79, 19]], "op": [[93, 8], [93, 10]]}, "fn_var_occur": {"mock_cursor": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_cursor", "return_value", "description", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None"], ["mock_cursor", "return_value", "fetchone", "side_effect", "None"]], "op": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "execute", "None"]]}, "name": "test_save_as_json", "params": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [["mock_gcs_hook", "return_value", "upload", "side_effect", "_assert_upload"], ["mock_gcs_hook", "assert_called_once_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_gcs_hook", "return_value", "upload", "assert_called"]], "mock_trino_hook": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_trino_hook", "assert_called_once_with", "trino_conn_id", "TRINO_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [], "mock_trino_hook": [["mock.Mock", 0.10870777623824128]], "self": []}, "q_name": "TestTrinoToGCSOperator.test_save_as_json", "ret_exprs": [], "ret_type": "", "variables": {"mock_cursor": "", "op": ""}, "variables_p": {"mock_cursor": [["Dict[str, str]", 0.3299379315989571], ["Dict[str, int]", 0.09527722509348203], ["Type[Dict[str, Any]]", 0.08802948698796645]], "op": [["Dict[str, Union[Any, bool, str]]", 0.22035371986066093], ["Dict[str, str]", 0.11932185063142083], ["str", 0.07639412187792631]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[123, 8], [128, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["expected_upload", "obj", "file", "read"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.5662193080867797], ["Optional[str]", 0.13741048348053062], ["bool", 0.09447498720480671]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestTrinoToGCSOperator.test_save_as_json_with_file_splitting.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that ndjson is split by approx_max_file_size_bytes param.", "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [156, 57]], "fn_var_ln": {"expected_upload": [[118, 8], [118, 23]], "mock_cursor": [[132, 8], [132, 19]], "op": [[146, 8], [146, 10]]}, "fn_var_occur": {"expected_upload": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"]], "mock_cursor": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_cursor", "return_value", "description", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None"], ["mock_cursor", "return_value", "fetchone", "side_effect", "None"]], "op": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "execute", "None"]]}, "name": "test_save_as_json_with_file_splitting", "params": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [["mock_gcs_hook", "return_value", "upload", "side_effect", "_assert_upload"], ["mock_gcs_hook", "return_value", "upload", "assert_called"]], "mock_trino_hook": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [], "mock_trino_hook": [], "self": []}, "q_name": "TestTrinoToGCSOperator.test_save_as_json_with_file_splitting", "ret_exprs": [], "ret_type": "", "variables": {"expected_upload": "", "mock_cursor": "", "op": ""}, "variables_p": {"expected_upload": [["str", 0.5096167315544864], ["Dict[str, str]", 0.10973691577608621], ["List[str]", 0.10791667088393013], ["Dict[str, Union[Any, Any]]", 0.09347309469967165], ["Dict[str, Any]", 0.09337891967913568]], "mock_cursor": [["Dict[str, str]", 0.3299379315989571], ["Dict[str, int]", 0.09527722509348203], ["Type[Dict[str, Any]]", 0.08802948698796645]], "op": [["Dict[str, Union[Any, bool, str]]", 0.22033640795347423], ["Dict[str, Union[Any, Any, str]]", 0.15713536146998314], ["int", 0.07083541986424507]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 8], [166, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [], "gzip": [], "metadata": [], "mime_type": [], "obj": [["obj", "SCHEMA_FILENAME"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestTrinoToGCSOperator.test_save_as_json_with_schema_file.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test writing schema files.", "long_descr": null, "ret": null}, "fn_lc": [[160, 4], [197, 64]], "fn_var_ln": {"mock_cursor": [[170, 8], [170, 19]], "op": [[184, 8], [184, 10]]}, "fn_var_occur": {"mock_cursor": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_cursor", "return_value", "description", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None"], ["mock_cursor", "return_value", "fetchone", "side_effect", "None"]], "op": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["op", "execute", "None"]]}, "name": "test_save_as_json_with_schema_file", "params": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [["mock_gcs_hook", "return_value", "upload", "side_effect", "_assert_upload"], ["mock_gcs_hook", "return_value", "upload", "call_count"]], "mock_trino_hook": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [], "mock_trino_hook": [["mock.MagicMock", 0.09342818943888466]], "self": []}, "q_name": "TestTrinoToGCSOperator.test_save_as_json_with_schema_file", "ret_exprs": [], "ret_type": "", "variables": {"mock_cursor": "", "op": ""}, "variables_p": {"mock_cursor": [["Dict[str, str]", 0.3299379315989571], ["Dict[str, int]", 0.09527722509348203], ["Type[Dict[str, Any]]", 0.08802948698796645]], "op": [["Dict[str, str]", 0.09842819954944988], ["Dict[str, Dict[str, Any]]", 0.08368374921657225], ["str", 0.0772695896814089]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[202, 8], [208, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["FILENAME", "format", "obj"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.8024488204116482], ["bool", 0.09851880793221435]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestTrinoToGCSOperator.test_save_as_csv.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[201, 4], [245, 9]], "fn_var_ln": {"mock_cursor": [[212, 8], [212, 19]], "op": [[226, 8], [226, 10]]}, "fn_var_occur": {"mock_cursor": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_cursor", "return_value", "description", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None"], ["mock_cursor", "return_value", "fetchone", "side_effect", "None"]], "op": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "execute", "None"]]}, "name": "test_save_as_csv", "params": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [["mock_gcs_hook", "return_value", "upload", "side_effect", "_assert_upload"], ["mock_gcs_hook", "return_value", "upload", "assert_called"], ["mock_gcs_hook", "assert_called_once_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "mock_trino_hook": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_trino_hook", "assert_called_once_with", "trino_conn_id", "TRINO_CONN_ID"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [], "mock_trino_hook": [["mock.Mock", 0.10870777623824128]], "self": []}, "q_name": "TestTrinoToGCSOperator.test_save_as_csv", "ret_exprs": [], "ret_type": "", "variables": {"mock_cursor": "", "op": ""}, "variables_p": {"mock_cursor": [["Dict[str, str]", 0.3299379315989571], ["Dict[str, int]", 0.09527722509348203], ["Type[Dict[str, Any]]", 0.08802948698796645]], "op": [["Dict[str, Union[Any, bool, str]]", 0.19746050619602928], ["Dict[str, str]", 0.1273881124711138], ["str", 0.07821462190437298]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[257, 8], [262, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [["BUCKET", "bucket"]], "gzip": [], "metadata": [], "mime_type": [], "obj": [["expected_upload", "obj", "file", "read"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["str", 0.5662193080867797], ["Optional[str]", 0.13741048348053062], ["bool", 0.09447498720480671]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestTrinoToGCSOperator.test_save_as_csv_with_file_splitting.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that csv is split by approx_max_file_size_bytes param.", "long_descr": null, "ret": null}, "fn_lc": [[249, 4], [291, 57]], "fn_var_ln": {"expected_upload": [[252, 8], [252, 23]], "mock_cursor": [[266, 8], [266, 19]], "op": [[280, 8], [280, 10]]}, "fn_var_occur": {"expected_upload": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format", "export_format"]], "mock_cursor": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_cursor", "return_value", "description", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None"], ["mock_cursor", "return_value", "fetchone", "side_effect", "None"]], "op": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format", "export_format"], ["op", "execute", "None"]]}, "name": "test_save_as_csv_with_file_splitting", "params": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [["mock_gcs_hook", "return_value", "upload", "side_effect", "_assert_upload"], ["mock_gcs_hook", "return_value", "upload", "assert_called"]], "mock_trino_hook": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [], "mock_trino_hook": [], "self": []}, "q_name": "TestTrinoToGCSOperator.test_save_as_csv_with_file_splitting", "ret_exprs": [], "ret_type": "", "variables": {"expected_upload": "", "mock_cursor": "", "op": ""}, "variables_p": {"expected_upload": [["str", 0.5096167315544864], ["Dict[str, str]", 0.10973691577608621], ["List[str]", 0.10791667088393013], ["Dict[str, Union[Any, Any]]", 0.09347309469967165], ["Dict[str, Any]", 0.09337891967913568]], "mock_cursor": [["Dict[str, str]", 0.3299379315989571], ["Dict[str, int]", 0.09527722509348203], ["Type[Dict[str, Any]]", 0.08802948698796645]], "op": [["Dict[str, Union[Any, bool, str]]", 0.22033640795347423], ["Dict[str, Union[Any, Any, str]]", 0.15713536146998314], ["int", 0.07083541986424507]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[298, 8], [301, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_upload", "params": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_descr": {"bucket": "", "gzip": "", "metadata": "", "mime_type": "", "obj": "", "tmp_filename": ""}, "params_occur": {"bucket": [], "gzip": [], "metadata": [], "mime_type": [], "obj": [["obj", "SCHEMA_FILENAME"]], "tmp_filename": [["open", "tmp_filename", "file"]]}, "params_p": {"args": [], "bucket": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "gzip": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "kwargs": [], "metadata": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "mime_type": [["str", 0.3417102963988437], ["List[str]", 0.2590566805972581], ["Iterable[List[Any]]", 0.1031348157602093], ["bool", 0.08982857572327023]], "obj": [["bool", 0.31034865031086395], ["str", 0.2121044696842061], ["int", 0.1849097695104553], ["Optional[str]", 0.10742655200411168], ["float", 0.09777004672181731], ["Sequence[Dict[str, str]]", 0.08744051176854571]], "self": [], "tmp_filename": [["str", 0.8104425661808049], ["Optional[str]", 0.09408988588163818]]}, "q_name": "TestTrinoToGCSOperator.test_save_as_csv_with_schema_file.<locals>._assert_upload", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test writing schema files.", "long_descr": null, "ret": null}, "fn_lc": [[295, 4], [330, 64]], "fn_var_ln": {"mock_cursor": [[305, 8], [305, 19]], "op": [[319, 8], [319, 10]]}, "fn_var_occur": {"mock_cursor": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"], ["mock_cursor", "return_value", "description", "None", "None", "None", "None", "None", "None", "None", "None", "None", "None"], ["mock_cursor", "return_value", "fetchone", "side_effect", "None"]], "op": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format"], ["op", "execute", "None"]]}, "name": "test_save_as_csv_with_schema_file", "params": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_descr": {"mock_gcs_hook": "", "mock_trino_hook": "", "self": ""}, "params_occur": {"mock_gcs_hook": [["mock_gcs_hook", "return_value", "upload", "side_effect", "_assert_upload"], ["mock_gcs_hook", "return_value", "upload", "call_count"]], "mock_trino_hook": [["mock_cursor", "mock_trino_hook", "return_value", "get_conn", "return_value", "cursor"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_gcs_hook": [], "mock_trino_hook": [["mock.MagicMock", 0.09342818943888466]], "self": []}, "q_name": "TestTrinoToGCSOperator.test_save_as_csv_with_schema_file", "ret_exprs": [], "ret_type": "", "variables": {"mock_cursor": "", "op": ""}, "variables_p": {"mock_cursor": [["Dict[str, str]", 0.3299379315989571], ["Dict[str, int]", 0.09527722509348203], ["Type[Dict[str, Any]]", 0.08802948698796645]], "op": [["Dict[str, Union[Any, bool, str]]", 0.20941205795235687], ["Dict[str, Union[int, str]]", 0.0716392372973672]]}}], "name": "TestTrinoToGCSOperator", "q_name": "TestTrinoToGCSOperator", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "patch", "pytest", "airflow", "providers", "google", "cloud", "transfers", "trino_to_gcs", "TrinoToGCSOperator"], "mod_var_ln": {"BUCKET": [[31, 0], [31, 6]], "CSV_LINES": [[39, 0], [39, 9]], "FILENAME": [[32, 0], [32, 8]], "GCP_CONN_ID": [[28, 0], [28, 11]], "IMPERSONATION_CHAIN": [[29, 0], [29, 19]], "NDJSON_LINES": [[34, 0], [34, 12]], "SCHEMA_FILENAME": [[45, 0], [45, 15]], "SCHEMA_JSON": [[46, 0], [46, 11]], "SQL": [[30, 0], [30, 3]], "TASK_ID": [[26, 0], [26, 7]], "TRINO_CONN_ID": [[27, 0], [27, 13]]}, "mod_var_occur": {"BUCKET": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "bucket", "BUCKET"], ["BUCKET", "bucket"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["BUCKET", "bucket"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["BUCKET", "bucket"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["BUCKET", "bucket"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format", "export_format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format"]], "CSV_LINES": [["join", "CSV_LINES", "file", "read"], ["expected_upload", "FILENAME", "format", "join", "CSV_LINES", "FILENAME", "format", "join", "CSV_LINES", "CSV_LINES"]], "FILENAME": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "filename", "FILENAME"], ["FILENAME", "format", "obj"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["expected_upload", "FILENAME", "format", "join", "NDJSON_LINES", "FILENAME", "format", "NDJSON_LINES"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["FILENAME", "format", "obj"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["expected_upload", "FILENAME", "format", "join", "CSV_LINES", "FILENAME", "format", "join", "CSV_LINES", "CSV_LINES"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format", "export_format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format"]], "GCP_CONN_ID": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_gcs_hook", "assert_called_once_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_gcs_hook", "assert_called_once_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "IMPERSONATION_CHAIN": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_gcs_hook", "assert_called_once_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_gcs_hook", "assert_called_once_with", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"]], "NDJSON_LINES": [["join", "NDJSON_LINES", "file", "read"], ["expected_upload", "FILENAME", "format", "join", "NDJSON_LINES", "FILENAME", "format", "NDJSON_LINES"]], "SCHEMA_FILENAME": [["obj", "SCHEMA_FILENAME"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["obj", "SCHEMA_FILENAME"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format"]], "SCHEMA_JSON": [["SCHEMA_JSON", "file", "read"], ["SCHEMA_JSON", "file", "read"]], "SQL": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "sql", "SQL"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format", "export_format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format"]], "TASK_ID": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "task_id", "TASK_ID"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "approx_max_file_size_bytes", "len", "expected_upload", "FILENAME", "format", "export_format"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format"]], "TRINO_CONN_ID": [["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_trino_hook", "assert_called_once_with", "trino_conn_id", "TRINO_CONN_ID"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "schema_filename", "SCHEMA_FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID"], ["op", "TrinoToGCSOperator", "task_id", "TASK_ID", "sql", "SQL", "bucket", "BUCKET", "filename", "FILENAME", "export_format", "trino_conn_id", "TRINO_CONN_ID", "gcp_conn_id", "GCP_CONN_ID", "impersonation_chain", "IMPERSONATION_CHAIN"], ["mock_trino_hook", "assert_called_once_with", "trino_conn_id", "TRINO_CONN_ID"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 52}, "session_id": "1c7MxRRD0-ooWFw1r8k-EYTQu-w2ul58fB1k1ovaTKc", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"BUCKET": "", "CSV_LINES": "", "FILENAME": "", "GCP_CONN_ID": "", "IMPERSONATION_CHAIN": "", "NDJSON_LINES": "", "SCHEMA_FILENAME": "", "SCHEMA_JSON": "", "SQL": "", "TASK_ID": "", "TRINO_CONN_ID": ""}, "variables_p": {"BUCKET": [["str", 0.20424398266895744], ["int", 0.16949926070940313]], "CSV_LINES": [["str", 0.4777196414060426], ["List[str]", 0.23224669214284455], ["OrderedDict[str, int]", 0.11977149516349686], ["List[Dict[str, Any]]", 0.08583967877010017], ["dict", 0.08442249251751573]], "FILENAME": [["List[str]", 0.42377963641438804], ["Optional[str]", 0.1821865387106747], ["str", 0.10609609530914474], ["Type[Dict[str, Any]]", 0.09667362967824411], ["dict", 0.09129347572675438]], "GCP_CONN_ID": [["str", 0.23974034786667683], ["tools.bots.cloud.status.Status", 0.09176635231814792]], "IMPERSONATION_CHAIN": [["int", 0.44161831659949957], ["Dict[str, Any]", 0.09313929754343668], ["List[str]", 0.0890572634243076]], "NDJSON_LINES": [["str", 0.6019146720360374], ["List[Dict[str, Any]]", 0.10687473193968905], ["List[str]", 0.09113319100868299], ["list", 0.0892432433966443]], "SCHEMA_FILENAME": [["str", 0.7549288235506711], ["List[str]", 0.1555992657539977]], "SCHEMA_JSON": [["dict", 0.10290058617193944]], "SQL": [["int", 0.44161831659949957], ["Dict[str, Any]", 0.09313929754343668], ["List[str]", 0.0890572634243076]], "TASK_ID": [["str", 0.4910271236694044], ["int", 0.10288405941614566], ["Dict[str, int]", 0.0815434772928486]], "TRINO_CONN_ID": [["str", 0.23974034786667683], ["tools.bots.cloud.status.Status", 0.09176635231814792]]}}}