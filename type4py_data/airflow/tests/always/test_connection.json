{"error": null, "response": {"classes": [{"cls_lc": [[39, 0], [59, 85]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [55, 38]], "fn_var_ln": {"description": [[55, 8], [55, 24]], "test_conn_attributes": [[54, 8], [54, 33]], "test_uri": [[53, 8], [53, 21]]}, "fn_var_occur": {"description": [["self", "description", "description"]], "test_conn_attributes": [["self", "test_conn_attributes", "test_conn_attributes"]], "test_uri": [["self", "test_uri", "test_conn_uri"]]}, "name": "__init__", "params": {"description": "builtins.str", "self": "", "test_conn_attributes": "builtins.dict", "test_conn_uri": "builtins.str"}, "params_descr": {"description": "human-friendly name appended to parameterized test", "self": "", "test_conn_attributes": "we expect a connection object created with `test_uri` to have these\nattributes", "test_conn_uri": "URI that we use to create connection"}, "params_occur": {"description": [["self", "description", "description"]], "self": [["self", "test_uri", "test_conn_uri"], ["self", "test_conn_attributes", "test_conn_attributes"], ["self", "description", "description"]], "test_conn_attributes": [["self", "test_conn_attributes", "test_conn_attributes"]], "test_conn_uri": [["self", "test_uri", "test_conn_uri"]]}, "params_p": {"args": [], "description": [["bool", 0.5495312224999774], ["int", 0.09212831851615824], ["list", 0.08672927974906282]], "kwargs": [], "self": [], "test_conn_attributes": [["bool", 0.5678280044520205], ["List[str]", 0.12722356351949887], ["Dict[int, Set[int]]", 0.11511112537146259], ["Optional[List[int]]", 0.09221884651885898]], "test_conn_uri": [["Tuple[int]", 0.29508379466851037], ["bool", 0.2550702634197071], ["int", 0.1842825055985784], ["models.TestExecution", 0.09523191377964475]]}, "q_name": "UriTestCaseConfig.__init__", "ret_exprs": [], "ret_type": "", "variables": {"description": "", "test_conn_attributes": "", "test_uri": ""}, "variables_p": {"description": [["str", 0.797444417937712], ["Dict[str, Union[Any, Any]]", 0.11633190069796367]], "test_conn_attributes": [["int", 0.2756707071504636], ["str", 0.219116316658154], ["Dict[str, Union[float, str]]", 0.15644384575721426], ["List[str]", 0.10263225770936403]], "test_uri": [["int", 0.31430587844749386], ["Optional[Dict[str, Any]]", 0.0937010820239271], ["bool", 0.0906330413485191], ["str", 0.08998802570344942]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [59, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "uri_test_name", "params": {"func": "", "num": "", "param": ""}, "params_descr": {"func": "", "num": "", "param": ""}, "params_occur": {"func": [["func", "__name__", "num", "param", "args", "description", "replace"]], "num": [["func", "__name__", "num", "param", "args", "description", "replace"]], "param": [["func", "__name__", "num", "param", "args", "description", "replace"]]}, "params_p": {"args": [], "func": [["List[str]", 0.5778929934823389], ["list", 0.12257880643623785], ["Callable", 0.10066936628840627], ["str", 0.09544715728743507]], "kwargs": [], "num": [["List[str]", 0.5778929934823389], ["list", 0.12257880643623785], ["Callable", 0.10066936628840627], ["str", 0.09544715728743507]], "param": [["List[str]", 0.5778929934823389], ["list", 0.12257880643623785], ["Callable", 0.10066936628840627], ["str", 0.09544715728743507]], "self": []}, "q_name": "UriTestCaseConfig.uri_test_name", "ret_exprs": ["return f\"{func.__name__}_{num}_{param.args[0].description.replace(' ', '_')}\""], "ret_type": "", "ret_type_p": [["str", 0.6771593371329101]], "variables": {}, "variables_p": {}}], "name": "UriTestCaseConfig", "q_name": "UriTestCaseConfig", "variables": {}, "variables_p": {}}, {"cls_lc": [[62, 0], [791, 52]], "cls_var_ln": {"test_from_uri_params": [[116, 4], [116, 24]]}, "cls_var_occur": {"test_from_uri_params": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [66, 47]], "fn_var_ln": {"_fernet": [[64, 8], [64, 22]], "mask_secret": [[66, 8], [66, 24]], "patcher": [[65, 8], [65, 20]]}, "fn_var_occur": {"_fernet": [["crypto", "_fernet", "None"]], "mask_secret": [["self", "mask_secret", "self", "patcher", "start"]], "patcher": [["self", "patcher", "mock", "patch", "autospec", "True"], ["self", "mask_secret", "self", "patcher", "start"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "patcher", "mock", "patch", "autospec", "True"], ["self", "mask_secret", "self", "patcher", "start"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"_fernet": "", "mask_secret": "", "patcher": ""}, "variables_p": {"_fernet": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "mask_secret": [["str", 0.6145361996416547], ["int", 0.17976811417500724]], "patcher": [["Dict[str, Union[Any, Any]]", 0.17916904456287974], ["dict", 0.09844838235381635], ["str", 0.09749054139625571], ["Dict[str, int]", 0.09601806690393998], ["int", 0.08860301319133612], ["List[str]", 0.08715023349023986], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any]]", 0.0843446497709304]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [70, 27]], "fn_var_ln": {"_fernet": [[69, 8], [69, 22]]}, "fn_var_occur": {"_fernet": [["crypto", "_fernet", "None"]]}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "patcher", "stop"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {"_fernet": ""}, "variables_p": {"_fernet": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]]}}, {"docstring": {"func": "Tests extras on a new connection without encryption. The fernet key", "long_descr": "is set to a non-base64-encoded string and the extra is stored without\nencryption.", "ret": null}, "fn_lc": [[73, 4], [81, 51]], "fn_var_ln": {"test_connection": [[79, 8], [79, 23]]}, "fn_var_occur": {"test_connection": [["test_connection", "Connection", "extra"], ["test_connection", "is_extra_encrypted"], ["test_connection", "extra"]]}, "name": "test_connection_extra_no_encryption", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_connection_extra_no_encryption", "ret_exprs": [], "ret_type": "", "variables": {"test_connection": ""}, "variables_p": {"test_connection": [["str", 0.19030380893955975], ["Dict[str, bool]", 0.09887260566972898], ["List[int]", 0.09310471341123625], ["List[Union[str, Any]]", 0.08470048762773112]]}}, {"docstring": {"func": "Tests extras on a new connection with encryption.", "long_descr": null, "ret": null}, "fn_lc": [[84, 4], [90, 51]], "fn_var_ln": {"test_connection": [[88, 8], [88, 23]]}, "fn_var_occur": {"test_connection": [["test_connection", "Connection", "extra"], ["test_connection", "is_extra_encrypted"], ["test_connection", "extra"]]}, "name": "test_connection_extra_with_encryption", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_connection_extra_with_encryption", "ret_exprs": [], "ret_type": "", "variables": {"test_connection": ""}, "variables_p": {"test_connection": [["str", 0.19030380893955975], ["Dict[str, bool]", 0.09887260566972898], ["List[int]", 0.09310471341123625], ["List[Union[str, Any]]", 0.08470048762773112]]}}, {"docstring": {"func": "Tests rotating encrypted extras.", "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [114, 88]], "fn_var_ln": {"_fernet": [[107, 12], [107, 26]], "key1": [[96, 8], [96, 12]], "key2": [[97, 8], [97, 12]], "test_connection": [[100, 12], [100, 27]]}, "fn_var_occur": {"_fernet": [["crypto", "_fernet", "None"]], "key1": [["key1", "Fernet", "generate_key"], ["conf_vars", "key1", "decode"], ["Fernet", "key1", "decrypt", "test_connection", "_extra", "encode"], ["conf_vars", "join", "key2", "decode", "key1", "decode"]], "key2": [["key2", "Fernet", "generate_key"], ["conf_vars", "join", "key2", "decode", "key1", "decode"], ["Fernet", "key2", "decrypt", "test_connection", "_extra", "encode"]], "test_connection": [["test_connection", "Connection", "extra"], ["test_connection", "is_extra_encrypted"], ["test_connection", "extra"], ["Fernet", "key1", "decrypt", "test_connection", "_extra", "encode"], ["test_connection", "extra"], ["test_connection", "rotate_fernet_key"], ["test_connection", "is_extra_encrypted"], ["test_connection", "extra"], ["Fernet", "key2", "decrypt", "test_connection", "_extra", "encode"]]}, "name": "test_connection_extra_with_encryption_rotate_fernet_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_connection_extra_with_encryption_rotate_fernet_key", "ret_exprs": [], "ret_type": "", "variables": {"_fernet": "", "key1": "", "key2": "", "test_connection": ""}, "variables_p": {"_fernet": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "key1": [["str", 0.2520157778770924], ["Dict[str, str]", 0.16957329840474128], ["List[int]", 0.09639130976539076], ["dict", 0.081551929628277]], "key2": [["str", 0.5197101936647907], ["List[str]", 0.08900265412072186]], "test_connection": [["str", 0.18960929198486615]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[351, 4], [370, 57]], "fn_var_ln": {"actual_val": [[355, 12], [355, 22]], "connection": [[353, 8], [353, 18]], "expected_calls": [[363, 8], [363, 22]]}, "fn_var_occur": {"actual_val": [["actual_val", "getattr", "connection", "conn_attr"], ["expected_val", "actual_val"], ["expected_val", "actual_val"]], "connection": [["connection", "Connection", "uri", "test_config", "test_uri"], ["actual_val", "getattr", "connection", "conn_attr"]], "expected_calls": [["expected_calls", "append", "mock", "call", "test_config", "test_conn_attributes"], ["expected_calls", "append", "mock", "call", "test_config", "test_conn_attributes"], ["self", "mask_secret", "assert_has_calls", "expected_calls"]]}, "name": "test_connection_from_uri", "params": {"self": "", "test_config": "UriTestCaseConfig"}, "params_descr": {"self": "", "test_config": ""}, "params_occur": {"self": [["self", "mask_secret", "assert_has_calls", "expected_calls"]], "test_config": [["connection", "Connection", "uri", "test_config", "test_uri"], ["test_config", "test_conn_attributes", "items"], ["test_config", "test_conn_attributes", "get"], ["expected_calls", "append", "mock", "call", "test_config", "test_conn_attributes"], ["test_config", "test_conn_attributes", "get"], ["expected_calls", "append", "mock", "call", "test_config", "test_conn_attributes"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_config": []}, "q_name": "TestConnection.test_connection_from_uri", "ret_exprs": [], "ret_type": "", "variables": {"actual_val": "", "connection": "", "expected_calls": ""}, "variables_p": {"actual_val": [["str", 0.42572455215375093], ["list", 0.2081277491116424], ["List[str]", 0.07870655617274844]], "connection": [["Pattern[str]", 0.09948612121526226], ["int", 0.09771231350928697], ["Optional[str]", 0.08804527104096628]], "expected_calls": [["List[Tuple[str, int]]", 0.38073383493961843], ["list", 0.09436463793082533], ["Tuple[str]", 0.0837152185098321], ["List[str]", 0.0837152185098321], ["set", 0.0837152185098321], ["Tuple[str, str]", 0.0837152185098321], ["str", 0.0837152185098321]]}}, {"docstring": {"func": "This test verifies that when we create a conn_1 from URI, and we generate a URI from that conn, that", "long_descr": "when we create a conn_2 from the generated URI, we get an equivalent conn.\n1. Parse URI to create `Connection` object, `connection`.\n2. Using this connection, generate URI `generated_uri`..\n3. Using this`generated_uri`, parse and create new Connection `new_conn`.\n4. Verify that `new_conn` has same attributes as `connection`.", "ret": null}, "fn_lc": [[373, 4], [391, 63]], "fn_var_ln": {"connection": [[382, 8], [382, 18]], "generated_uri": [[383, 8], [383, 21]], "new_conn": [[384, 8], [384, 16]]}, "fn_var_occur": {"connection": [["connection", "Connection", "uri", "test_config", "test_uri"], ["generated_uri", "connection", "get_uri"], ["connection", "conn_type", "new_conn", "conn_type"], ["connection", "login", "new_conn", "login"], ["connection", "password", "new_conn", "password"], ["connection", "host", "new_conn", "host"], ["connection", "port", "new_conn", "port"], ["connection", "schema", "new_conn", "schema"], ["connection", "extra_dejson", "new_conn", "extra_dejson"]], "generated_uri": [["generated_uri", "connection", "get_uri"], ["new_conn", "Connection", "uri", "generated_uri"]], "new_conn": [["new_conn", "Connection", "uri", "generated_uri"], ["connection", "conn_type", "new_conn", "conn_type"], ["connection", "login", "new_conn", "login"], ["connection", "password", "new_conn", "password"], ["connection", "host", "new_conn", "host"], ["connection", "port", "new_conn", "port"], ["connection", "schema", "new_conn", "schema"], ["connection", "extra_dejson", "new_conn", "extra_dejson"]]}, "name": "test_connection_get_uri_from_uri", "params": {"self": "", "test_config": "UriTestCaseConfig"}, "params_descr": {"self": "", "test_config": ""}, "params_occur": {"self": [], "test_config": [["connection", "Connection", "uri", "test_config", "test_uri"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_config": [["antidote.providers.lazy.LazyCallProvider", 0.21054668643378352], ["tests.e2e.Helper", 0.08047330795953794]]}, "q_name": "TestConnection.test_connection_get_uri_from_uri", "ret_exprs": [], "ret_type": "", "variables": {"connection": "", "generated_uri": "", "new_conn": ""}, "variables_p": {"connection": [["accounts.tests.factories.AccountTestFactory", 0.23739083681584305], ["pandas-master.pandas.tests.io.test_common.CustomFSPath", 0.200039992505454]], "generated_uri": [["int", 0.3288925466640208], ["str", 0.2942732467345372], ["Optional[str]", 0.18073996090905883], ["List[str]", 0.09472142396962739]], "new_conn": [["dict", 0.09216095561742778]]}}, {"docstring": {"func": "This test verifies that if we create conn_1 from attributes (rather than from URI), and we generate a", "long_descr": "URI, that when we create conn_2 from this URI, we get an equivalent conn.\n1. Build conn init params using `test_conn_attributes` and store in `conn_kwargs`\n2. Instantiate conn `connection` from `conn_kwargs`.\n3. Generate uri `get_uri` from this conn.\n4. Create conn `new_conn` from this uri.\n5. Verify `new_conn` has same attributes as `connection`.", "ret": null}, "fn_lc": [[394, 4], [419, 49]], "fn_var_ln": {"actual_val": [[415, 12], [415, 22]], "conn_kwargs": [[404, 8], [404, 19]], "connection": [[411, 8], [411, 18]], "gen_uri": [[412, 8], [412, 15]], "new_conn": [[413, 8], [413, 16]]}, "fn_var_occur": {"actual_val": [["actual_val", "getattr", "new_conn", "conn_attr"], ["actual_val", "None"], ["actual_val", "expected_val"]], "conn_kwargs": [["conn_kwargs", "update", "json", "dumps", "v"], ["conn_kwargs", "update", "k", "v"], ["connection", "Connection", "conn_id", "conn_kwargs"]], "connection": [["connection", "Connection", "conn_id", "conn_kwargs"], ["gen_uri", "connection", "get_uri"]], "gen_uri": [["gen_uri", "connection", "get_uri"], ["new_conn", "Connection", "conn_id", "uri", "gen_uri"]], "new_conn": [["new_conn", "Connection", "conn_id", "uri", "gen_uri"], ["actual_val", "getattr", "new_conn", "conn_attr"]]}, "name": "test_connection_get_uri_from_conn", "params": {"self": "", "test_config": "UriTestCaseConfig"}, "params_descr": {"self": "", "test_config": ""}, "params_occur": {"self": [], "test_config": [["test_config", "test_conn_attributes", "items"], ["test_config", "test_conn_attributes", "items"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_config": [["str", 0.11986078265814927], ["List[str]", 0.11986078265814927], ["backup.config.Config", 0.0936615251093433], ["IO[str]", 0.08868487313951899]]}, "q_name": "TestConnection.test_connection_get_uri_from_conn", "ret_exprs": [], "ret_type": "", "variables": {"actual_val": "", "conn_kwargs": "", "connection": "", "gen_uri": "", "new_conn": ""}, "variables_p": {"actual_val": [["str", 0.27486003636363504], ["int", 0.13358874990441155], ["List[str]", 0.1056376577301343], ["Dict[str, float]", 0.09963224756513503], ["Dict[str, str]", 0.09201154469205941]], "conn_kwargs": [["dict", 0.6564438479680782], ["Dict[str, dict]", 0.09945826079353604], ["Dict[str, Any]", 0.08148552747468443], ["Dict[str, str]", 0.0814504874718766], ["Mapping[str, Any]", 0.08116187629182477]], "connection": [["int", 0.09395921302699389], ["Tuple[Any, Any, Any]", 0.08942137012355923], ["Dict[str, Any]", 0.08427193207074095]], "gen_uri": [["str", 0.8573568698323081], ["list", 0.142643130167692]], "new_conn": [["dict", 0.11472331345960289], ["grpy.core.models.Grouping", 0.10087359313729238], ["ajapaik.ajapaik.models.Photo", 0.10073056601668669], ["Dict[str, Union[Any, str]]", 0.09709100255160692], ["Dict[str, str]", 0.09658193860919903], ["Tuple[Any, Any, Any]", 0.09580705747220357], ["Tuple[int]", 0.09509405335070502]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[533, 4], [541, 52]], "fn_var_ln": {"connection": [[534, 8], [534, 18]]}, "fn_var_occur": {"connection": [["connection", "Connection", "uri", "uri"], ["connection", "conn_type", "uri_parts", "conn_type"], ["connection", "login", "uri_parts", "login"], ["connection", "password", "uri_parts", "password"], ["connection", "host", "uri_parts", "host"], ["connection", "port", "uri_parts", "port"], ["connection", "schema", "uri_parts", "schema"]]}, "name": "test_connection_from_with_auth_info", "params": {"self": "", "uri": "", "uri_parts": ""}, "params_descr": {"self": "", "uri": "", "uri_parts": ""}, "params_occur": {"self": [], "uri": [["connection", "Connection", "uri", "uri"]], "uri_parts": [["connection", "conn_type", "uri_parts", "conn_type"], ["connection", "login", "uri_parts", "login"], ["connection", "password", "uri_parts", "password"], ["connection", "host", "uri_parts", "host"], ["connection", "port", "uri_parts", "port"], ["connection", "schema", "uri_parts", "schema"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "uri": [["tests.basilisp.helpers.CompileFn", 0.3547230324273287], ["Dict[str, Any]", 0.08334777098310783], ["mtg_ssm.scryfall.models.ScryObject", 0.08334777098310783]], "uri_parts": [["dict", 0.07803652100610874], ["tests.basilisp.helpers.CompileFn", 0.07642448581785084], ["Type[Any]", 0.06821820693175804]]}, "q_name": "TestConnection.test_connection_from_with_auth_info", "ret_exprs": [], "ret_type": "", "variables": {"connection": ""}, "variables_p": {"connection": [["int", 0.17951365825127705], ["Dict[str, Union[Any, Any]]", 0.08975682912563852]]}}, {"docstring": {"func": "json serialization should support extra stored as object _or_ as string", "long_descr": null, "ret": null}, "fn_lc": [[552, 4], [554, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_from_json_extra", "params": {"expected": "", "extra": "", "self": ""}, "params_descr": {"expected": "", "extra": "", "self": ""}, "params_occur": {"expected": [["Connection", "from_json", "extra", "extra", "expected"]], "extra": [["Connection", "from_json", "extra", "extra", "expected"]], "self": []}, "params_p": {"args": [], "expected": [["str", 0.3234962500787101], ["dict", 0.13193235478857068], ["bytes", 0.1077178288082542], ["int", 0.09788532535032801], ["Dict[str, str]", 0.0760639925562337]], "extra": [["str", 0.3234962500787101], ["dict", 0.13193235478857068], ["bytes", 0.1077178288082542], ["int", 0.09788532535032801], ["Dict[str, str]", 0.0760639925562337]], "kwargs": [], "self": []}, "q_name": "TestConnection.test_from_json_extra", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "two conn_type normalizations are applied: replace - with _ and postgresql with postgres", "long_descr": null, "ret": null}, "fn_lc": [[564, 4], [566, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_from_json_conn_type", "params": {"expected": "", "self": "", "val": ""}, "params_descr": {"expected": "", "self": "", "val": ""}, "params_occur": {"expected": [["Connection", "from_json", "val", "conn_type", "expected"]], "self": [], "val": [["Connection", "from_json", "val", "conn_type", "expected"]]}, "params_p": {"args": [], "expected": [["str", 0.7001423696710194], ["dict", 0.1165584685834301], ["IO[bytes]", 0.09497465090456529]], "kwargs": [], "self": [], "val": [["str", 0.7001423696710194], ["dict", 0.1165584685834301], ["IO[bytes]", 0.09497465090456529]]}, "q_name": "TestConnection.test_from_json_conn_type", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "two conn_type normalizations are applied: replace - with _ and postgresql with postgres", "long_descr": null, "ret": null}, "fn_lc": [[576, 4], [578, 57]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_from_json_port", "params": {"expected": "", "self": "", "val": ""}, "params_descr": {"expected": "", "self": "", "val": ""}, "params_occur": {"expected": [["Connection", "from_json", "val", "port", "expected"]], "self": [], "val": [["Connection", "from_json", "val", "port", "expected"]]}, "params_p": {"args": [], "expected": [["str", 0.5973914823575559], ["int", 0.20678068438499625]], "kwargs": [], "self": [], "val": [["str", 0.5973914823575559], ["int", 0.20678068438499625]]}, "q_name": "TestConnection.test_from_json_port", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "two conn_type normalizations are applied: replace - with _ and postgresql with postgres", "long_descr": null, "ret": null}, "fn_lc": [[588, 4], [591, 66]], "fn_var_ln": {"json_val": [[590, 8], [590, 16]]}, "fn_var_occur": {"json_val": [["json_val", "json", "dumps", "dict", "password", "val"], ["Connection", "from_json", "json_val", "password", "expected"]]}, "name": "test_from_json_special_characters", "params": {"expected": "", "self": "", "val": ""}, "params_descr": {"expected": "", "self": "", "val": ""}, "params_occur": {"expected": [["Connection", "from_json", "json_val", "password", "expected"]], "self": [], "val": [["json_val", "json", "dumps", "dict", "password", "val"]]}, "params_p": {"args": [], "expected": [["str", 0.3234962500787101], ["dict", 0.13193235478857068], ["bytes", 0.1077178288082542], ["int", 0.09788532535032801], ["Dict[str, str]", 0.0760639925562337]], "kwargs": [], "self": [], "val": [["str", 0.28373607749759955], ["dict", 0.2833389099087875], ["Mapping", 0.12141262690986813], ["Optional[dict]", 0.1181746753812497], ["Dict[str, str]", 0.08729647715785806]]}, "q_name": "TestConnection.test_from_json_special_characters", "ret_exprs": [], "ret_type": "", "variables": {"json_val": ""}, "variables_p": {"json_val": [["Dict[str, Callable[[Any, Any], Any]]", 0.6931600533803671], ["Dict[Any, str]", 0.10238044852329338], ["int", 0.10222974904816967], ["str", 0.10222974904816967]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[599, 4], [607, 60]], "fn_var_ln": {"conn": [[600, 8], [600, 12]]}, "fn_var_occur": {"conn": [["conn", "SqliteHook", "get_connection", "conn_id"], ["conn", "host"], ["conn", "schema"], ["conn", "login"], ["conn", "password"], ["conn", "port"]]}, "name": "test_using_env_var", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mask_secret", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_using_env_var", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["int", 0.15817882836907057], ["str", 0.15400086299772364]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[615, 4], [621, 32]], "fn_var_ln": {"conn": [[616, 8], [616, 12]]}, "fn_var_occur": {"conn": [["conn", "SqliteHook", "get_connection", "conn_id"], ["conn", "host"], ["conn", "schema"], ["conn", "login", "None"], ["conn", "password", "None"], ["conn", "port", "None"]]}, "name": "test_using_unix_socket_env_var", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_using_unix_socket_env_var", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.22393745052400177], ["int", 0.2055378930436721], ["float", 0.09822154155823828], ["Type[str]", 0.09260563921919042], ["Type[List[Any]]", 0.09237747813826057]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[623, 4], [636, 32]], "fn_var_ln": {"conn": [[624, 8], [624, 12]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_id", "conn_type", "host", "login", "password", "schema"], ["conn", "host"], ["conn", "schema"], ["conn", "login"], ["conn", "password"], ["conn", "port", "None"]]}, "name": "test_param_setup", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_param_setup", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.3953507056801175], ["int", 0.30103542755123547], ["dict", 0.10379159901760013]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[638, 4], [653, 36]], "fn_var_ln": {"conn": [[648, 12], [648, 16]]}, "fn_var_occur": {"conn": [["conn", "SqliteHook", "get_connection", "conn_id"], ["conn", "host"], ["conn", "SqliteHook", "get_connection", "conn_id"], ["conn", "host"], ["conn", "schema"], ["conn", "login"], ["conn", "password"], ["conn", "port"]]}, "name": "test_env_var_priority", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_env_var_priority", "ret_exprs": [], "ret_type": "", "variables": {"conn": ""}, "variables_p": {"conn": [["str", 0.20190370654956538]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[662, 4], [668, 77]], "fn_var_ln": {"conn": [[663, 8], [663, 12]], "conn2": [[666, 8], [666, 13]], "hook": [[664, 8], [664, 12]], "hook2": [[667, 8], [667, 13]]}, "fn_var_occur": {"conn": [["conn", "BaseHook", "get_connection", "conn_id"], ["hook", "conn", "get_hook"]], "conn2": [["conn2", "BaseHook", "get_connection", "conn_id"], ["hook2", "conn2", "get_hook"]], "hook": [["hook", "conn", "get_hook"], ["hook", "get_uri"]], "hook2": [["hook2", "conn2", "get_hook"], ["hook2", "get_uri"]]}, "name": "test_dbapi_get_uri", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_dbapi_get_uri", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn2": "", "hook": "", "hook2": ""}, "variables_p": {"conn": [["str", 0.2998548594636975], ["list", 0.22355467362905052], ["List[str]", 0.0921040170371263]], "conn2": [["str", 0.2998548594636975], ["list", 0.22355467362905052], ["List[str]", 0.0921040170371263]], "hook": [["decksite.data.models.person.Person", 0.13355246543435906], ["str", 0.061867476949088875], ["int", 0.05970419273197121]], "hook2": [["decksite.data.models.person.Person", 0.13355246543435906], ["str", 0.061867476949088875], ["int", 0.05970419273197121]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[677, 4], [682, 100]], "fn_var_ln": {"conn": [[678, 8], [678, 12]], "engine": [[680, 8], [680, 14]], "hook": [[679, 8], [679, 12]]}, "fn_var_occur": {"conn": [["conn", "BaseHook", "get_connection", "conn_id"], ["hook", "conn", "get_hook"]], "engine": [["engine", "hook", "get_sqlalchemy_engine"], ["isinstance", "engine", "sqlalchemy", "engine", "Engine"], ["str", "engine", "url"]], "hook": [["hook", "conn", "get_hook"], ["engine", "hook", "get_sqlalchemy_engine"]]}, "name": "test_dbapi_get_sqlalchemy_engine", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_dbapi_get_sqlalchemy_engine", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "engine": "", "hook": ""}, "variables_p": {"conn": [["str", 0.2998548594636975], ["list", 0.22355467362905052], ["List[str]", 0.0921040170371263]], "engine": [["str", 0.7083684418686337]], "hook": [["str", 0.11874995788249035], ["List[str]", 0.0906397252446471], ["Dict[str, Dict[str, Any]]", 0.09024103382330634]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[691, 4], [697, 33]], "fn_var_ln": {"conns": [[692, 8], [692, 13]]}, "fn_var_occur": {"conns": [["conns", "SqliteHook", "get_connection", "conn_id"], ["conns", "host"], ["conns", "schema"], ["conns", "login"], ["conns", "password"], ["conns", "port"]]}, "name": "test_get_connections_env_var", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_get_connections_env_var", "ret_exprs": [], "ret_type": "", "variables": {"conns": ""}, "variables_p": {"conns": [["int", 0.15817882836907057], ["str", 0.15400086299772364]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[699, 4], [707, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_connection_mixed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_connection_mixed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test secrets are masked when loaded directly from the DB", "long_descr": null, "ret": null}, "fn_lc": [[709, 4], [739, 30]], "fn_var_ln": {"conn": [[716, 12], [716, 16]], "from_db": [[730, 12], [730, 19]], "session": [[713, 8], [713, 15]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_id", "os", "getpid", "conn_type", "password", "extra"], ["session", "add", "conn"], ["session", "expunge", "conn"], ["from_db", "session", "get", "Connection", "conn", "id"]], "from_db": [["from_db", "session", "get", "Connection", "conn", "id"], ["from_db", "extra_dejson"]], "session": [["session", "Session"], ["session", "add", "conn"], ["session", "flush"], ["session", "expunge", "conn"], ["from_db", "session", "get", "Connection", "conn", "id"], ["session", "rollback"]]}, "name": "test_masking_from_db", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mask_secret", "reset_mock"], ["self", "mask_secret", "mock_calls", "mock", "call", "mock", "call"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_masking_from_db", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "from_db": "", "session": ""}, "variables_p": {"conn": [["float", 0.13435345874511376], ["Dict[str, str]", 0.10678330458237038], ["str", 0.08972682974566051]], "from_db": [["libkol.Session.Session", 0.4232177182873181], ["dict", 0.14309910056837938], ["List[bool]", 0.09317744204562077], ["taskiinfrastructure.data.json.repositories.task_repository.JsonTaskRepository", 0.08108339381556633], ["requests.sessions.Session", 0.08078247976209792]], "session": [["sqlalchemy.orm.session.Session", 0.4034445131941745], ["Optional[str]", 0.16776353338203073], ["SMSShell.models.session.Session", 0.11762002330499192], ["libkol.Session.Session", 0.08866445745974125], ["sqlalchemy.orm.scoped_session", 0.08245069312727872]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[747, 4], [751, 57]], "fn_var_ln": {"conn": [[748, 8], [748, 12]], "res": [[749, 8], [749, 11]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_id", "conn_type"], ["res", "conn", "test_connection"]], "res": [["res", "conn", "test_connection"], ["res", "True"]]}, "name": "test_connection_test_success", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_connection_test_success", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "res": ""}, "variables_p": {"conn": [["str", 0.2130951756596671], ["float", 0.19375715643396635]], "res": [["str", 0.33341148484733835], ["IO[bytes]", 0.20338760072079], ["Dict[str, str]", 0.14030873622116688], ["Optional[Match[str]]", 0.09945158838043294]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[759, 4], [763, 49]], "fn_var_ln": {"conn": [[760, 8], [760, 12]], "res": [[761, 8], [761, 11]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_id", "conn_type"], ["res", "conn", "test_connection"]], "res": [["res", "conn", "test_connection"], ["res", "False"]]}, "name": "test_connection_test_no_hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_connection_test_no_hook", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "res": ""}, "variables_p": {"conn": [["str", 0.2130951756596671], ["float", 0.19375715643396635]], "res": [["str", 0.19686355578744022], ["Dict[str, str]", 0.11927639451897816], ["Dict[Tuple[str, str], str]", 0.11373119333462205], ["MutableMapping[str, Any]", 0.09476553011910345], ["Iterator[str]", 0.09442010444511405], ["Type[Dict[str, Any]]", 0.09418099001475405], ["List[int]", 0.09408413792772284], ["Dict[str, List[str]]", 0.09362088972364756]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[771, 4], [775, 92]], "fn_var_ln": {"conn": [[772, 8], [772, 12]], "res": [[773, 8], [773, 11]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_id", "conn_type"], ["res", "conn", "test_connection"]], "res": [["res", "conn", "test_connection"], ["res", "False"]]}, "name": "test_connection_test_hook_method_missing", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_connection_test_hook_method_missing", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "res": ""}, "variables_p": {"conn": [["str", 0.2130951756596671], ["float", 0.19375715643396635]], "res": [["str", 0.19686355578744022], ["Dict[str, str]", 0.11927639451897816], ["Dict[Tuple[str, str], str]", 0.11373119333462205], ["MutableMapping[str, Any]", 0.09476553011910345], ["Iterator[str]", 0.09442010444511405], ["Type[Dict[str, Any]]", 0.09418099001475405], ["List[int]", 0.09408413792772284], ["Dict[str, List[str]]", 0.09362088972364756]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[777, 4], [779, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_extra_warnings_non_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_extra_warnings_non_json", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[781, 4], [783, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_extra_warnings_non_dict_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_extra_warnings_non_dict_json", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[785, 4], [791, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_uri_no_conn_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnection.test_get_uri_no_conn_type", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestConnection", "q_name": "TestConnection", "variables": {"test_from_uri_params": ""}, "variables_p": {"test_from_uri_params": [["str", 0.29605468436526566], ["Type[todo.models.Comment]", 0.23987674959057365], ["Optional[bool]", 0.10873818328246812], ["List[str]", 0.09484879678936323], ["Type[todo.models.Task]", 0.04646577175838487], ["List[Dict[str, str]]", 0.04646577175838487], ["list", 0.04646577175838487]]}}], "funcs": [], "imports": ["__future__", "annotations", "json", "os", "re", "collections", "namedtuple", "unittest", "mock", "pytest", "sqlalchemy", "cryptography", "fernet", "Fernet", "airflow", "AirflowException", "airflow", "hooks", "base", "BaseHook", "airflow", "models", "Connection", "crypto", "airflow", "providers", "sqlite", "hooks", "sqlite", "SqliteHook", "tests", "test_utils", "config", "conf_vars", "airflow", "settings", "Session"], "mod_var_ln": {"ConnectionParts": [[36, 0], [36, 15]]}, "mod_var_occur": {"ConnectionParts": []}, "no_types_annot": {"D": 4, "I": 0, "U": 92}, "session_id": "Jdr2WFQRsIirzOkr1yjZ5o5PUktvFFCjl8OG7fIaosU", "set": null, "tc": [false, null], "type_annot_cove": 0.04, "typed_seq": "", "untyped_seq": "", "variables": {"ConnectionParts": ""}, "variables_p": {"ConnectionParts": [["Sequence[str]", 0.1], ["List[str]", 0.1], ["str", 0.1]]}}}