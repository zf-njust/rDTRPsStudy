{"error": null, "response": {"classes": [{"cls_lc": [[28, 0], [111, 76]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [35, 68]], "fn_var_ln": {"side_effect": [[32, 8], [32, 32]]}, "fn_var_occur": {"side_effect": [["mock_env_get", "side_effect", "None"]]}, "name": "test_get_connection_second_try", "params": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_descr": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_occur": {"mock_env_get": [["mock_env_get", "side_effect", "None"], ["mock_env_get", "assert_called_once_with", "conn_id"]], "mock_meta_get": [["mock_meta_get", "assert_called_once_with", "conn_id"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_env_get": [], "mock_meta_get": [], "self": []}, "q_name": "TestConnectionsFromSecrets.test_get_connection_second_try", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["libsoundtouch.tests.test_libsoundtouch.MockDevice", 0.18384468584726094], ["str", 0.17135406794830976], ["app.config.Config", 0.08839102903781336]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [43, 34]], "fn_var_ln": {"side_effect": [[40, 8], [40, 32]]}, "fn_var_occur": {"side_effect": [["mock_env_get", "side_effect"]]}, "name": "test_get_connection_first_try", "params": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_descr": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_occur": {"mock_env_get": [["mock_env_get", "side_effect"], ["mock_env_get", "assert_called_once_with", "conn_id"]], "mock_meta_get": [["mock_meta_get", "not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_env_get": [], "mock_meta_get": [["mock.MagicMock", 0.19628038314904597], ["mock.Mock", 0.19519157210301274]], "self": []}, "q_name": "TestConnectionsFromSecrets.test_get_connection_first_try", "ret_exprs": [], "ret_type": "", "variables": {"side_effect": ""}, "variables_p": {"side_effect": [["Dict[int, Dict[str, Any]]", 0.22315179630748208], ["Tuple[Literal, Literal, Literal]", 0.19920585612310543], ["str", 0.19558266507181346], ["List[str]", 0.10586478824596061], ["alibi.tests.utils.MockPredictor", 0.08481134973193637]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [59, 71]], "fn_var_ln": {"backend_classes": [[56, 8], [56, 23]], "backends": [[55, 8], [55, 16]]}, "fn_var_occur": {"backend_classes": [["backend_classes", "backend", "__class__", "__name__", "backend", "backends"]], "backends": [["backends", "initialize_secrets_backends"], ["backend_classes", "backend", "__class__", "__name__", "backend", "backends"], ["len", "backends"]]}, "name": "test_initialize_secrets_backends", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionsFromSecrets.test_initialize_secrets_backends", "ret_exprs": [], "ret_type": "", "variables": {"backend_classes": "", "backends": ""}, "variables_p": {"backend_classes": [["Dict[str, Union[Any, Any]]", 0.3772898582265312], ["Dict[str, str]", 0.2787516967628725], ["Dict[str, Any]", 0.12924615708178105], ["OrderedDict[str, List[str]]", 0.11656384561460814], ["dict", 0.09814844231420712]], "backends": [["Optional[str]", 0.344343088127482], ["str", 0.26836964021545423], ["List[Dict[str, Any]]", 0.10074328573372295]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[70, 4], [78, 47]], "fn_var_ln": {"backends": [[71, 8], [71, 16]], "systems_manager": [[72, 8], [72, 23]]}, "fn_var_occur": {"backends": [["backends", "initialize_secrets_backends"], ["systems_manager", "next", "backend", "backend", "backends", "backend", "__class__", "__name__"]], "systems_manager": [["systems_manager", "next", "backend", "backend", "backends", "backend", "__class__", "__name__"], ["systems_manager", "kwargs"], ["systems_manager", "use_ssl", "False"]]}, "name": "test_backends_kwargs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestConnectionsFromSecrets.test_backends_kwargs", "ret_exprs": [], "ret_type": "", "variables": {"backends": "", "systems_manager": ""}, "variables_p": {"backends": [["str", 0.37168193240219305], ["List[str]", 0.08629894218621383]], "systems_manager": [["int", 0.10355982009032061]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[99, 4], [111, 76]], "fn_var_ln": {"backend_classes": [[103, 8], [103, 23]], "backends": [[102, 8], [102, 16]], "conn": [[106, 8], [106, 12]], "return_value": [[100, 8], [100, 40]]}, "fn_var_occur": {"backend_classes": [["backend_classes", "backend", "__class__", "__name__", "backend", "backends"]], "backends": [["backends", "ensure_secrets_loaded"], ["backend_classes", "backend", "__class__", "__name__", "backend", "backends"]], "conn": [["conn", "Connection", "get_connection_from_secrets", "conn_id"], ["conn", "get_uri"]], "return_value": [["mock_get_connection", "return_value", "None"]]}, "name": "test_backend_fallback_to_env_var", "params": {"mock_get_connection": "", "self": ""}, "params_descr": {"mock_get_connection": "", "self": ""}, "params_occur": {"mock_get_connection": [["mock_get_connection", "return_value", "None"], ["mock_get_connection", "assert_called_once_with", "conn_id"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_get_connection": [], "self": []}, "q_name": "TestConnectionsFromSecrets.test_backend_fallback_to_env_var", "ret_exprs": [], "ret_type": "", "variables": {"backend_classes": "", "backends": "", "conn": "", "return_value": ""}, "variables_p": {"backend_classes": [["Dict[str, Union[Any, Any]]", 0.3772898582265312], ["Dict[str, str]", 0.2787516967628725], ["Dict[str, Any]", 0.12924615708178105], ["OrderedDict[str, List[str]]", 0.11656384561460814], ["dict", 0.09814844231420712]], "backends": [["bytes", 0.10862043198382684], ["Dict[str, str]", 0.10743346886931888], ["str", 0.1037134356844001], ["frozenset[str]", 0.09529617207805322]], "conn": [["List[str]", 0.20357563851736668], ["str", 0.17640560612655948], ["Dict[str, Callable]", 0.11295934069506265], ["Tuple[Any, Any]", 0.10516100409245455], ["decksite.data.models.person.Person", 0.1047427577845658], ["Dict[str, Union[Any, Any]]", 0.09501551452197601], ["TextIO", 0.08533405617892596]], "return_value": [["str", 0.28773119535165487], ["int", 0.1023352290846592], ["list", 0.09570651595418316], ["Optional[bytes]", 0.09131689366840749], ["List[Dict[str, Any]]", 0.08477167491389467]]}}], "name": "TestConnectionsFromSecrets", "q_name": "TestConnectionsFromSecrets", "variables": {}, "variables_p": {}}, {"cls_lc": [[114, 0], [191, 64]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [116, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariableFromSecrets.setup_method", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [119, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariableFromSecrets.teardown_method", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test if Variable is not present in Environment Variable, it then looks for it in", "long_descr": "Metastore DB", "ret": null}, "fn_lc": [[123, 4], [131, 64]], "fn_var_ln": {"return_value": [[128, 8], [128, 33]]}, "fn_var_occur": {"return_value": [["mock_env_get", "return_value", "None"]]}, "name": "test_get_variable_second_try", "params": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_descr": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_occur": {"mock_env_get": [["mock_env_get", "return_value", "None"], ["mock_env_get", "assert_called_once_with", "key"]], "mock_meta_get": [["mock_meta_get", "assert_called_once_with", "key"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_env_get": [], "mock_meta_get": [["mock.MagicMock", 0.20574234874217384]], "self": []}, "q_name": "TestVariableFromSecrets.test_get_variable_second_try", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["str", 0.18569594386325622], ["list", 0.1372469222898635], ["Optional[bytes]", 0.09046516040833741], ["List[Dict[str, Any]]", 0.08797148033113919], ["int", 0.07890550961595602]]}}, {"docstring": {"func": "Test if Variable is present in Environment Variable, it does not look for it in", "long_descr": "Metastore DB", "ret": null}, "fn_lc": [[135, 4], [143, 41]], "fn_var_ln": {"return_value": [[140, 8], [140, 33]]}, "fn_var_occur": {"return_value": [["mock_env_get", "return_value"]]}, "name": "test_get_variable_first_try", "params": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_descr": {"mock_env_get": "", "mock_meta_get": "", "self": ""}, "params_occur": {"mock_env_get": [["mock_env_get", "return_value"], ["mock_env_get", "assert_called_once_with", "key"]], "mock_meta_get": [["mock_meta_get", "assert_not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_env_get": [], "mock_meta_get": [["mock.MagicMock", 0.11406416051139501]], "self": []}, "q_name": "TestVariableFromSecrets.test_get_variable_first_try", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["list", 0.20701852467407875], ["List[Dict[str, str]]", 0.17798491838697333], ["List[Tuple[str, str]]", 0.15614088832208964], ["tests.mock.zwave.MockNode", 0.09916571947987571], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.09113974571346747], ["List[str]", 0.09056528503654183]]}}, {"docstring": {"func": "Test if a default_var is defined and no backend has the Variable,", "long_descr": "the value returned is default_var", "ret": null}, "fn_lc": [[145, 4], [151, 38]], "fn_var_ln": {"variable_value": [[150, 8], [150, 22]]}, "fn_var_occur": {"variable_value": [["variable_value", "Variable", "get", "key", "default_var"]]}, "name": "test_backend_fallback_to_default_var", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariableFromSecrets.test_backend_fallback_to_default_var", "ret_exprs": [], "ret_type": "", "variables": {"variable_value": ""}, "variables_p": {"variable_value": [["Dict[str, str]", 0.5808792431266727], ["Dict[str, Any]", 0.11775976137334092], ["Dict[str, Optional[str]]", 0.10419509333641214], ["Dict[str, int]", 0.09410881763786316]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [191, 64]], "fn_var_ln": {"backend_classes": [[175, 8], [175, 23]], "backends": [[174, 8], [174, 16]], "return_value": [[190, 8], [190, 36]]}, "fn_var_occur": {"backend_classes": [["backend_classes", "backend", "__class__", "__name__", "backend", "backends"]], "backends": [["backends", "ensure_secrets_loaded"], ["backend_classes", "backend", "__class__", "__name__", "backend", "backends"]], "return_value": [["mock_secret_get", "return_value", "None"], ["mock_meta_get", "return_value", "None"], ["mock_secret_get", "return_value", "None"], ["mock_meta_get", "return_value"], ["mock_secret_get", "return_value"]]}, "name": "test_backend_variable_order", "params": {"mock_meta_get": "", "mock_secret_get": "", "self": ""}, "params_descr": {"mock_meta_get": "", "mock_secret_get": "", "self": ""}, "params_occur": {"mock_meta_get": [["mock_meta_get", "return_value", "None"], ["mock_meta_get", "assert_not_called"], ["mock_meta_get", "return_value"], ["mock_meta_get", "assert_called_once_with", "key"]], "mock_secret_get": [["mock_secret_get", "return_value", "None"], ["mock_secret_get", "assert_called_with", "key"], ["mock_secret_get", "return_value", "None"], ["mock_secret_get", "return_value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_meta_get": [], "mock_secret_get": [], "self": []}, "q_name": "TestVariableFromSecrets.test_backend_variable_order", "ret_exprs": [], "ret_type": "", "variables": {"backend_classes": "", "backends": "", "return_value": ""}, "variables_p": {"backend_classes": [["Dict[str, Union[Any, Any]]", 0.3772898582265312], ["Dict[str, str]", 0.2787516967628725], ["Dict[str, Any]", 0.12924615708178105], ["OrderedDict[str, List[str]]", 0.11656384561460814], ["dict", 0.09814844231420712]], "backends": [["bytes", 0.10862043198382684], ["Dict[str, str]", 0.10743346886931888], ["str", 0.1037134356844001], ["frozenset[str]", 0.09529617207805322]], "return_value": [["str", 0.6682044940957803], ["Dict[str, str]", 0.12902907338933914], ["Generator[str, None, None]", 0.1211635521864663]]}}], "name": "TestVariableFromSecrets", "q_name": "TestVariableFromSecrets", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "airflow", "configuration", "ensure_secrets_loaded", "initialize_secrets_backends", "airflow", "models", "Connection", "Variable", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_variables"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 2, "I": 0, "U": 36}, "session_id": "uXltuRSQV8IOB1ltcoE2TbKcMPtYbV3-YH3zxX7g6s4", "set": null, "tc": [false, null], "type_annot_cove": 0.05, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}