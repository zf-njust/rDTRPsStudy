{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Returns a list of suspended providers folders that should be", "long_descr": "skipped when running tests (without any prefix - for example apache/beam, yandex, google etc.).", "ret": null}, "fn_lc": [[35, 0], [49, 30]], "fn_var_ln": {"provider_yaml": [[42, 8], [42, 21]], "suspended_providers": [[40, 4], [40, 23]]}, "fn_var_occur": {"provider_yaml": [["provider_yaml", "yaml", "safe_load", "provider_path", "read_text"], ["provider_yaml", "get"]], "suspended_providers": [["suspended_providers", "append", "provider_path", "parent", "relative_to", "AIRFLOW_SOURCES_ROOT", "as_posix", "replace"]]}, "name": "get_suspended_providers_folders", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_suspended_providers_folders", "ret_exprs": ["return suspended_providers"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"provider_yaml": "", "suspended_providers": ""}, "variables_p": {"provider_yaml": [["str", 0.43576107623694293], ["Sequence[str]", 0.08320852923095401], ["int", 0.08004025679696151]], "suspended_providers": [["list", 0.9129758823122531], ["str", 0.08702411768774679]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 0], [64, 27]], "fn_var_ln": {"candidates": [[60, 8], [60, 18]], "example_dirs": [[53, 4], [53, 16]], "possible_prefixes": [[55, 4], [55, 21]], "suspended_providers_folders": [[56, 4], [56, 31]]}, "fn_var_occur": {"candidates": [["candidates", "glob", "AIRFLOW_SOURCES_ROOT", "as_posix", "example_dir", "recursive", "True"]], "example_dirs": [], "possible_prefixes": [["suspended_providers_folders", "prefix", "provider", "prefix", "possible_prefixes", "provider", "suspended_providers_folders"]], "suspended_providers_folders": [["suspended_providers_folders", "get_suspended_providers_folders"], ["suspended_providers_folders", "prefix", "provider", "prefix", "possible_prefixes", "provider", "suspended_providers_folders"], ["any", "candidate", "startswith", "s", "s", "suspended_providers_folders"]]}, "name": "example_not_suspended_dags", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "example_not_suspended_dags", "ret_exprs": [], "ret_type": "", "variables": {"candidates": "", "example_dirs": "", "possible_prefixes": "", "suspended_providers_folders": ""}, "variables_p": {"candidates": [["str", 0.30466659746281655], ["pathlib.Path", 0.1907219746350688], ["List[pathlib.Path]", 0.11934206580345459], ["List[str]", 0.08506352004067498]], "example_dirs": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "possible_prefixes": [["str", 0.7104593369552507], ["Tuple[Literal, Literal, Literal]", 0.2895406630447494]], "suspended_providers_folders": [["str", 0.6896416024612863], ["List[str]", 0.10638143968367274], ["int", 0.10325500420172125], ["list", 0.10072195365331968]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 0], [72, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "example_dags_except_db_exception", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "example_dags_except_db_exception", "ret_exprs": ["return [ dag_file for dag_file in example_not_suspended_dags() if any(not dag_file.endswith(e) for e in NO_DB_QUERY_EXCEPTION)]"], "ret_type": "", "ret_type_p": [["List[str]", 0.8144906352154879], ["List[List[Any]]", 0.09530674935884165]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 0], [76, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "relative_path", "params": {"path": ""}, "params_descr": {"path": ""}, "params_occur": {"path": [["os", "path", "relpath", "path", "AIRFLOW_SOURCES_ROOT", "as_posix"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.6960951325928948], ["Optional[str]", 0.14397023599216605], ["bool", 0.08333486064884355], ["dict", 0.0765997707660958]]}, "q_name": "relative_path", "ret_exprs": ["return os.path.relpath(path, AIRFLOW_SOURCES_ROOT.as_posix())"], "ret_type": "", "ret_type_p": [["str", 1.0]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[80, 0], [86, 35]], "fn_var_ln": {"dagbag": [[81, 4], [81, 10]]}, "fn_var_occur": {"dagbag": [["dagbag", "DagBag", "dag_folder", "example", "include_examples", "False"], ["len", "dagbag", "import_errors", "str", "dagbag", "import_errors"], ["len", "dagbag", "dag_ids"]]}, "name": "test_should_be_importable", "params": {"example": ""}, "params_descr": {"example": ""}, "params_occur": {"example": [["dagbag", "DagBag", "dag_folder", "example", "include_examples", "False"]]}, "params_p": {"args": [], "example": [["pathlib.Path", 0.11974471699174388]], "kwargs": []}, "q_name": "test_should_be_importable", "ret_exprs": [], "ret_type": "", "variables": {"dagbag": ""}, "variables_p": {"dagbag": [["dict", 0.08262100209650926]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 0], [95, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_should_not_do_database_queries", "params": {"example": ""}, "params_descr": {"example": ""}, "params_occur": {"example": [["DagBag", "dag_folder", "example", "include_examples", "False"]]}, "params_p": {"args": [], "example": [["pathlib.Path", 0.14758081053006944]], "kwargs": []}, "q_name": "test_should_not_do_database_queries", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "os", "glob", "glob", "pathlib", "Path", "pytest", "airflow", "models", "DagBag", "airflow", "utils", "yaml", "tests", "test_utils", "asserts", "assert_queries_count"], "mod_var_ln": {"AIRFLOW_PROVIDERS_ROOT": [[30, 0], [30, 22]], "AIRFLOW_SOURCES_ROOT": [[29, 0], [29, 20]], "NO_DB_QUERY_EXCEPTION": [[32, 0], [32, 21]]}, "mod_var_occur": {"AIRFLOW_PROVIDERS_ROOT": [["AIRFLOW_PROVIDERS_ROOT", "glob"]], "AIRFLOW_SOURCES_ROOT": [["AIRFLOW_PROVIDERS_ROOT", "AIRFLOW_SOURCES_ROOT"], ["suspended_providers", "append", "provider_path", "parent", "relative_to", "AIRFLOW_SOURCES_ROOT", "as_posix", "replace"], ["candidates", "glob", "AIRFLOW_SOURCES_ROOT", "as_posix", "example_dir", "recursive", "True"], ["os", "path", "relpath", "path", "AIRFLOW_SOURCES_ROOT", "as_posix"]], "NO_DB_QUERY_EXCEPTION": [["dag_file", "dag_file", "example_not_suspended_dags", "any", "dag_file", "endswith", "e", "e", "NO_DB_QUERY_EXCEPTION"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 18}, "session_id": "o11rOfgk_3VLsflFen6qZG1pAuUBqfh-vyBzUbuTqHk", "set": null, "tc": [false, null], "type_annot_cove": 0.05, "typed_seq": "", "untyped_seq": "", "variables": {"AIRFLOW_PROVIDERS_ROOT": "", "AIRFLOW_SOURCES_ROOT": "", "NO_DB_QUERY_EXCEPTION": ""}, "variables_p": {"AIRFLOW_PROVIDERS_ROOT": [["str", 0.9133197286477667], ["pathlib.Path", 0.08668027135223336]], "AIRFLOW_SOURCES_ROOT": [["pathlib.Path", 0.19164786761424218], ["Dict[str, str]", 0.13642247237278973], ["str", 0.12528405802488377], ["dep_check.models.SourceFile", 0.10553243358089873], ["dict", 0.09292863163458771]], "NO_DB_QUERY_EXCEPTION": [["str", 0.5427098403174955], ["IO[bytes]", 0.2672502759276998], ["int", 0.09724462052433545]]}}}