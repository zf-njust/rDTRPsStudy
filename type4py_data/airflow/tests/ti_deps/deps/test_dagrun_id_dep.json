{"error": null, "response": {"classes": [{"cls_lc": [[27, 0], [50, 51]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Task instances whose run_id is a backfill dagrun run_id should fail this dep.", "long_descr": null, "ret": null}, "fn_lc": [[28, 4], [36, 55]], "fn_var_ln": {"dagrun": [[32, 8], [32, 14]], "run_id": [[33, 8], [33, 21]], "run_type": [[34, 8], [34, 23]], "ti": [[35, 8], [35, 10]]}, "fn_var_occur": {"dagrun": [["dagrun", "DagRun"], ["dagrun", "run_id"], ["dagrun", "run_type", "DagRunType", "BACKFILL_JOB"], ["ti", "Mock", "get_dagrun", "Mock", "return_value", "dagrun"]], "run_id": [["dagrun", "run_id"]], "run_type": [["dagrun", "run_type", "DagRunType", "BACKFILL_JOB"]], "ti": [["ti", "Mock", "get_dagrun", "Mock", "return_value", "dagrun"], ["DagRunNotBackfillDep", "is_met", "ti", "ti"]]}, "name": "test_run_id_is_backfill", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagrunRunningDep.test_run_id_is_backfill", "ret_exprs": [], "ret_type": "", "variables": {"dagrun": "", "run_id": "", "run_type": "", "ti": ""}, "variables_p": {"dagrun": [["Optional[List[Any]]", 0.10927193879956863], ["legistar.models.MatterHistory", 0.09254566277272325]], "run_id": [["str", 0.5083413767668594], ["Pattern[str]", 0.19161612473005019], ["int", 0.11251558030134373], ["Dict[str, Dict[str, str]]", 0.09603921185481709], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.09148770634692956]], "run_type": [["str", 0.9151105056821095]], "ti": [["unittesmock.Mock", 0.10252821823007664], ["str", 0.08917299395076851], ["mock.MagicMock", 0.08334551871404423]]}}, {"docstring": {"func": "Task instances whose run_id is not a backfill run_id should pass this dep.", "long_descr": null, "ret": null}, "fn_lc": [[38, 4], [50, 51]], "fn_var_ln": {"dagrun": [[47, 8], [47, 14]], "run_id": [[48, 8], [48, 21]], "run_type": [[43, 8], [43, 23]], "ti": [[49, 8], [49, 10]]}, "fn_var_occur": {"dagrun": [["dagrun", "DagRun"], ["dagrun", "run_type"], ["ti", "Mock", "get_dagrun", "Mock", "return_value", "dagrun"], ["dagrun", "DagRun"], ["dagrun", "run_id", "None"], ["ti", "Mock", "get_dagrun", "Mock", "return_value", "dagrun"]], "run_id": [["dagrun", "run_id", "None"]], "run_type": [["dagrun", "run_type"]], "ti": [["ti", "Mock", "get_dagrun", "Mock", "return_value", "dagrun"], ["DagRunNotBackfillDep", "is_met", "ti", "ti"], ["ti", "Mock", "get_dagrun", "Mock", "return_value", "dagrun"], ["DagRunNotBackfillDep", "is_met", "ti", "ti"]]}, "name": "test_run_id_is_not_backfill", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagrunRunningDep.test_run_id_is_not_backfill", "ret_exprs": [], "ret_type": "", "variables": {"dagrun": "", "run_id": "", "run_type": "", "ti": ""}, "variables_p": {"dagrun": [["set", 0.10419331774167882]], "run_id": [["list", 0.42560829319667337], ["Dict[str, str]", 0.41906288074438736], ["int", 0.07892276958574707], ["Optional[str]", 0.07640605647319208]], "run_type": [["Dict[int, Set[str]]", 0.30887875902948625], ["list", 0.1920365236226783], ["List[str]", 0.17786648404302913], ["Dict[str, Dict[str, str]]", 0.09445537502977781]], "ti": [["bytes", 0.20359335655844218], ["mock.Mock", 0.19584386102916557], ["unittesmock.Mock", 0.19490010825914073], ["Dict[str, str]", 0.10591728356647298], ["str", 0.0902255721543138]]}}], "name": "TestDagrunRunningDep", "q_name": "TestDagrunRunningDep", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "Mock", "airflow", "models", "dagrun", "DagRun", "airflow", "ti_deps", "deps", "dagrun_backfill_dep", "DagRunNotBackfillDep", "airflow", "utils", "types", "DagRunType"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 10}, "session_id": "qV9d25AS5eE50FTrPNuWO3-shA8f1aZNdx6uynjOHoQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}