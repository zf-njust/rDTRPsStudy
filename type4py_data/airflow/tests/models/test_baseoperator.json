{"error": null, "response": {"classes": [{"cls_lc": [[51, 0], [68, 37]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [56, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"kwargs": "", "self": ""}, "params_descr": {"kwargs": "", "self": ""}, "params_occur": {"kwargs": [["kwargs", "items"]], "self": [["setattr", "self", "key", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ClassWithCustomAttributes.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [59, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__str__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ClassWithCustomAttributes", "__name__", "str", "self", "__dict__"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ClassWithCustomAttributes.__str__", "ret_exprs": ["return f\"{ClassWithCustomAttributes.__name__}({str(self.__dict__)})\""], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.1078499489911576], ["dict", 0.10668201027310432], ["str", 0.10604251157887606], ["Dict[str, int]", 0.09447192178947593], ["Mapping[str, Any]", 0.09438303244278855]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 4], [62, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "__str__"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ClassWithCustomAttributes.__repr__", "ret_exprs": ["return self.__str__()"], "ret_type": "", "ret_type_p": [["str", 0.8458824507089776]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [65, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__eq__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["self", "__dict__", "other", "__dict__"]], "self": [["self", "__dict__", "other", "__dict__"]]}, "params_p": {"args": [], "kwargs": [], "other": [["Union[str, \"Date\"]", 8.558199866586338e-11], ["Tuple[float, float]", 2.2038073904544742e-11], ["Type", 2.0881611798473296e-11]], "self": []}, "q_name": "ClassWithCustomAttributes.__eq__", "ret_exprs": ["return self.__dict__ == other.__dict__"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.4104400768074746], ["str", 0.10379057280959801], ["Dict[str, Dict[str, Any]]", 0.10261001920186864], ["dict", 0.09532005172718877], ["Dict[str, float]", 0.09394818650670235], ["Dict[str, models.DeviceRow]", 0.09128107374529894]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [68, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__ne__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["self", "__eq__", "other"]], "self": [["self", "__eq__", "other"]]}, "params_p": {"args": [], "kwargs": [], "other": [["dict", 0.24999999998650746], ["AbstractSet[T]", 9.152138678985443e-12], ["AbstractSet[T_co]", 9.152138678985443e-12], ["raiden.utils.Any", 6.887222363228575e-12]], "self": []}, "q_name": "ClassWithCustomAttributes.__ne__", "ret_exprs": ["return not self.__eq__(other)"], "ret_type": "", "ret_type_p": [["str", 0.13968937068109144], ["cmk.utils.type_defs.ServiceName", 0.10951851018970368], ["cmk.utils.type_defs.HostName", 0.10951851018970368], ["django.db.models.QuerySet", 0.06471841105226568]], "variables": {}, "variables_p": {}}], "name": "ClassWithCustomAttributes", "q_name": "ClassWithCustomAttributes", "variables": {}, "variables_p": {}}, {"cls_lc": [[78, 0], [83, 11]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [80, 36]], "fn_var_ln": {"test_param": [[80, 8], [80, 23]]}, "fn_var_occur": {"test_param": [["self", "test_param", "test_param"]]}, "name": "__init__", "params": {"default_args": "", "params": "", "self": "", "test_param": ""}, "params_descr": {"default_args": "", "params": "", "self": "", "test_param": ""}, "params_occur": {"default_args": [], "params": [], "self": [["self", "test_param", "test_param"]], "test_param": [["self", "test_param", "test_param"]]}, "params_p": {"args": [], "default_args": [["bool", 0.5069243902292352], ["str", 0.10389344700405961], ["int", 0.09634491683200874]], "kwargs": [], "params": [["bool", 0.5069243902292352], ["str", 0.10389344700405961], ["int", 0.09634491683200874]], "self": [], "test_param": [["Tuple[int]", 0.2695149439689084], ["bool", 0.2689270065168964], ["Callable", 0.11023407475485025], ["int", 0.08538630043926358]]}, "q_name": "DummyClass.__init__", "ret_exprs": [], "ret_type": "", "variables": {"test_param": ""}, "variables_p": {"test_param": [["int", 0.31430587844749386], ["Optional[Dict[str, Any]]", 0.0937010820239271], ["bool", 0.0906330413485191], ["str", 0.08998802570344942]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [83, 11]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "set_xcomargs_dependencies", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DummyClass.set_xcomargs_dependencies", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "DummyClass", "q_name": "DummyClass", "variables": {}, "variables_p": {}}, {"cls_lc": [[86, 0], [89, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [89, 44]], "fn_var_ln": {"test_sub_param": [[89, 8], [89, 27]]}, "fn_var_occur": {"test_sub_param": [["self", "test_sub_param", "test_sub_param"]]}, "name": "__init__", "params": {"kwargs": "", "self": "", "test_sub_param": ""}, "params_descr": {"kwargs": "", "self": "", "test_sub_param": ""}, "params_occur": {"kwargs": [["super", "__init__", "kwargs"]], "self": [["self", "test_sub_param", "test_sub_param"]], "test_sub_param": [["self", "test_sub_param", "test_sub_param"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_sub_param": [["bool", 0.41369914633862903], ["str", 0.10152149029386225], ["List[str]", 0.09845671416129127], ["Optional[List[int]]", 0.09672671213116239]]}, "q_name": "DummySubClass.__init__", "ret_exprs": [], "ret_type": "", "variables": {"test_sub_param": ""}, "variables_p": {"test_sub_param": [["int", 0.2756707071504636], ["str", 0.219116316658154], ["Dict[str, Union[float, str]]", 0.15644384575721426], ["List[str]", 0.10263225770936403]]}}], "name": "DummySubClass", "q_name": "DummySubClass", "variables": {}, "variables_p": {}}, {"cls_lc": [[92, 0], [94, 22]], "cls_var_ln": {"var1": [[93, 4], [93, 8]], "var2": [[94, 4], [94, 8]]}, "cls_var_occur": {"var1": [], "var2": []}, "funcs": [], "name": "MockNamedTuple", "q_name": "MockNamedTuple", "variables": {"var1": "builtins.str", "var2": "builtins.str"}, "variables_p": {"var1": [["int", 0.49999999999999994], ["List[str]", 0.09999999999999999], ["str", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]], "var2": [["int", 0.49999999999999994], ["List[str]", 0.09999999999999999], ["str", 0.09999999999999999], ["Dict[str, str]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999]]}}, {"cls_lc": [[323, 16], [329, 37]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[324, 20], [326, 50]], "fn_var_ln": {"x": [[325, 24], [325, 30]]}, "fn_var_occur": {"x": [["self", "x", "x"]]}, "name": "__init__", "params": {"kwargs": "", "self": "", "x": ""}, "params_descr": {"kwargs": "", "self": "", "x": ""}, "params_occur": {"kwargs": [["super", "__init__", "kwargs"]], "self": [["self", "x", "x"]], "x": [["self", "x", "x"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "x": [["float", 0.3479153117210161], ["int", 0.2515215930221082]]}, "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_classic.<locals>.MyOp.__init__", "ret_exprs": [], "ret_type": "", "variables": {"x": ""}, "variables_p": {"x": [["int", 1.754033666571266e-10], ["str", 7.17808363145737e-11], ["List[str]", 5.2957867076024703e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[328, 20], [329, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "execute", "params": {"context": "", "self": ""}, "params_descr": {"context": "", "self": ""}, "params_occur": {"context": [], "self": [["print", "self", "x"]]}, "params_p": {"args": [], "context": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_classic.<locals>.MyOp.execute", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "MyOp", "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_classic.<locals>.MyOp", "variables": {}, "variables_p": {}}, {"cls_lc": [[391, 8], [392, 40]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "StringTemplateFieldsOperator", "q_name": "TestBaseOperator.test_string_template_field_attr_is_converted_to_list.<locals>.StringTemplateFieldsOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[97, 0], [787, 42]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [103, 46]], "fn_var_ln": {"dummy": [[99, 8], [99, 13]]}, "fn_var_occur": {"dummy": [["dummy", "DummyClass", "test_param", "True"], ["dummy", "test_param"]]}, "name": "test_expand", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_expand", "ret_exprs": [], "ret_type": "", "variables": {"dummy": ""}, "variables_p": {"dummy": [["tests.test_optional.Person", 0.1943575930507687], ["tests.cli.test_docker_helper.SysCapWithCode", 0.09963766411141586], ["tests.test_parsers.LocalFileContentProvider", 0.08687888356633473]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [121, 52]], "fn_var_ln": {"default_args": [[115, 8], [115, 20]], "dummy_class": [[107, 8], [107, 19]], "dummy_subclass": [[116, 8], [116, 22]]}, "fn_var_occur": {"default_args": [["default_args", "True"], ["dummy_class", "DummyClass", "default_args", "default_args"], ["default_args", "True", "True"], ["dummy_subclass", "DummySubClass", "default_args", "default_args"], ["default_args", "True"], ["dummy_subclass", "DummySubClass", "default_args", "default_args", "test_sub_param", "True"], ["DummySubClass", "default_args", "default_args"]], "dummy_class": [["dummy_class", "DummyClass", "default_args", "default_args"], ["dummy_class", "test_param"], ["dummy_class", "test_param"], ["dummy_class", "test_param"]], "dummy_subclass": [["dummy_subclass", "DummySubClass", "default_args", "default_args"], ["dummy_subclass", "test_sub_param"], ["dummy_subclass", "DummySubClass", "default_args", "default_args", "test_sub_param", "True"], ["dummy_subclass", "test_sub_param"]]}, "name": "test_default_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_default_args", "ret_exprs": [], "ret_type": "", "variables": {"default_args": "", "dummy_class": "", "dummy_subclass": ""}, "variables_p": {"default_args": [["Union[Literal, Literal]", 0.12729918036571464], ["str", 0.12253609093402988], ["src.pip_shims.models.ShimmedPathCollection", 0.09675917367779391], ["Dict[str, Dict[str, Any]]", 0.09373924405601448]], "dummy_class": [["dict", 0.20923185225205948], ["str", 0.10722749241529761], ["Tuple[Any, Any, Any]", 0.10582542168040164], ["list", 0.0913141850492017]], "dummy_subclass": [["api.src.opentrons.config.robot_configs.HotSpot", 0.1727617170246565]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[123, 4], [132, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_execution_timeout_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_execution_timeout_type", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [141, 49]], "fn_var_ln": {"default_args": [[139, 8], [139, 20]], "dummy_class": [[136, 8], [136, 19]]}, "fn_var_occur": {"default_args": [["default_args", "True", "True"], ["dummy_class", "DummyClass", "default_args", "default_args"], ["default_args", "True"], ["DummyClass", "default_args", "default_args"]], "dummy_class": [["dummy_class", "DummyClass", "default_args", "default_args"], ["dummy_class", "test_param"]]}, "name": "test_incorrect_default_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_incorrect_default_args", "ret_exprs": [], "ret_type": "", "variables": {"default_args": "", "dummy_class": ""}, "variables_p": {"default_args": [["bool", 0.1975022652088922], ["str", 0.1880746372032367], ["OrderedDict[str, str]", 0.12282079085176752], ["Dict[str, Union[float, str]]", 0.11496169862249106], ["Dict[str, Union[dict, str]]", 0.09755751120804339], ["Dict[str, Dict[str, Any]]", 0.09521079277008], ["Dict[str, int]", 0.09273976153460509], ["List[Tuple[str, bytes]]", 0.09113254260088413]], "dummy_class": [["int", 0.373512285512509], ["Dict[str, Union[int, str]]", 0.12589001886418708], ["bool", 0.09286202468000378]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [146, 64]], "fn_var_ln": {"error_msg": [[144, 8], [144, 17]]}, "fn_var_occur": {"error_msg": [["pytest", "raises", "AirflowException", "match", "error_msg"]]}, "name": "test_incorrect_priority_weight", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_incorrect_priority_weight", "ret_exprs": [], "ret_type": "", "variables": {"error_msg": ""}, "variables_p": {"error_msg": [["Pattern[str]", 0.9999999999999998]]}}, {"docstring": {"func": "Tests that Operators reject illegal arguments", "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [158, 17]], "fn_var_ln": {"msg": [[152, 8], [152, 11]]}, "fn_var_occur": {"msg": [["pytest", "warns", "RemovedInAirflow3Warning", "match", "msg"]]}, "name": "test_illegal_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_illegal_args", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["Pattern[str]", 0.3883644956014618], ["List[str]", 0.2911520610287167], ["str", 0.2328722356314651], ["Pattern[bytes]", 0.08761120773835657]]}}, {"docstring": {"func": "Tests that operators raise exceptions on illegal arguments when", "long_descr": "illegal arguments are not allowed.", "ret": null}, "fn_lc": [[160, 4], [170, 13]], "fn_var_ln": {"msg": [[165, 8], [165, 11]]}, "fn_var_occur": {"msg": [["pytest", "raises", "AirflowException", "match", "msg"]]}, "name": "test_illegal_args_forbidden", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_illegal_args_forbidden", "ret_exprs": [], "ret_type": "", "variables": {"msg": ""}, "variables_p": {"msg": [["Pattern[str]", 0.6746962856788336], ["List[str]", 0.32530371432116634]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[172, 4], [206, 13]], "fn_var_ln": {"fail_stop_dag": [[175, 8], [175, 21]], "non_fail_stop_dag": [[178, 8], [178, 25]]}, "fn_var_occur": {"fail_stop_dag": [["fail_stop_dag", "DAG", "dag_id", "start_date", "DEFAULT_DATE", "fail_stop", "True"], ["BaseOperator", "task_id", "dag", "fail_stop_dag", "trigger_rule", "DEFAULT_TRIGGER_RULE"], ["BaseOperator", "task_id", "dag", "fail_stop_dag", "trigger_rule", "TriggerRule", "DUMMY"]], "non_fail_stop_dag": [["non_fail_stop_dag", "DAG", "dag_id", "start_date", "DEFAULT_DATE", "fail_stop", "False"], ["BaseOperator", "task_id", "dag", "non_fail_stop_dag", "trigger_rule", "TriggerRule", "DUMMY"]]}, "name": "test_trigger_rule_validation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_trigger_rule_validation", "ret_exprs": [], "ret_type": "", "variables": {"fail_stop_dag": "", "non_fail_stop_dag": ""}, "variables_p": {"fail_stop_dag": [["datetime.datetime", 0.17485621337296836], ["datetime.datetime.datetime", 0.1611171857571036], ["dict", 0.14314981883717345], ["Tuple[int, int]", 0.10971923413426345], ["str", 0.07984832917220641]], "non_fail_stop_dag": [["datetime.date.time.timedelta", 0.23610474941574283], ["deeplearning.ml4pl.models.checkpoints.CheckpointReference", 0.181516808257218], ["int", 0.08522048003459158], ["browse.services.database.models.MemberInstitutionIP", 0.08346843255704811]]}}, {"docstring": {"func": "Test render_template given various input types.", "long_descr": null, "ret": null}, "fn_lc": [[275, 4], [280, 40]], "fn_var_ln": {"result": [[279, 8], [279, 14]], "task": [[277, 8], [277, 12]]}, "fn_var_occur": {"result": [["result", "task", "render_template", "content", "context"], ["result", "expected_output"]], "task": [["task", "BaseOperator", "task_id"], ["result", "task", "render_template", "content", "context"]]}, "name": "test_render_template", "params": {"content": "", "context": "", "expected_output": "", "self": ""}, "params_descr": {"content": "", "context": "", "expected_output": "", "self": ""}, "params_occur": {"content": [["result", "task", "render_template", "content", "context"]], "context": [["result", "task", "render_template", "content", "context"]], "expected_output": [["result", "expected_output"]], "self": []}, "params_p": {"args": [], "content": [["str", 0.3256516932687048], ["bool", 0.09707075042758853], ["Iterable[models.Entry]", 0.09394865296277706]], "context": [["str", 0.3256516932687048], ["bool", 0.09707075042758853], ["Iterable[models.Entry]", 0.09394865296277706]], "expected_output": [["salon.models.Stylist", 0.12165457162902915], ["str", 0.09101117863332178], ["bool", 0.08686646490507945], ["Dict[str, Optional[str]]", 0.08646545923691552], ["List[mtg_ssm.scryfall.models.ScryCard]", 0.07945872601991555]], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_render_template", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "task": ""}, "variables_p": {"result": [["list", 0.31657184513184894], ["Dict[str, Any]", 0.30302938949022573], ["Dict[str, int]", 0.09534397178551116], ["str", 0.08909020154689813]], "task": [["str", 0.29941490049407105], ["Dict[str, str]", 0.22530511567536415], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10255264063198324], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.09649812755609136], ["Dict[str, Any]", 0.08996937573257247]]}}, {"docstring": {"func": "Test render_template given various input types with Native Python types", "long_descr": null, "ret": null}, "fn_lc": [[303, 4], [309, 40]], "fn_var_ln": {"result": [[308, 8], [308, 14]], "task": [[306, 12], [306, 16]]}, "fn_var_occur": {"result": [["result", "task", "render_template", "content", "context"], ["result", "expected_output"]], "task": [["task", "BaseOperator", "task_id"], ["result", "task", "render_template", "content", "context"]]}, "name": "test_render_template_with_native_envs", "params": {"content": "", "context": "", "expected_output": "", "self": ""}, "params_descr": {"content": "", "context": "", "expected_output": "", "self": ""}, "params_occur": {"content": [["result", "task", "render_template", "content", "context"]], "context": [["result", "task", "render_template", "content", "context"]], "expected_output": [["result", "expected_output"]], "self": []}, "params_p": {"args": [], "content": [["str", 0.3256516932687048], ["bool", 0.09707075042758853], ["Iterable[models.Entry]", 0.09394865296277706]], "context": [["str", 0.3256516932687048], ["bool", 0.09707075042758853], ["Iterable[models.Entry]", 0.09394865296277706]], "expected_output": [["salon.models.Stylist", 0.12165457162902915], ["str", 0.09101117863332178], ["bool", 0.08686646490507945], ["Dict[str, Optional[str]]", 0.08646545923691552], ["List[mtg_ssm.scryfall.models.ScryCard]", 0.07945872601991555]], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_render_template_with_native_envs", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "task": ""}, "variables_p": {"result": [["list", 0.31657184513184894], ["Dict[str, Any]", 0.30302938949022573], ["Dict[str, int]", 0.09534397178551116], ["str", 0.08909020154689813]], "task": [["str", 0.29941490049407105], ["Dict[str, str]", 0.22530511567536415], ["Dict[str, Union[Any, Any, Any, Any]]", 0.10255264063198324], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.09649812755609136], ["Dict[str, Any]", 0.08996937573257247]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[318, 16], [319, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_values", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_classic.<locals>.get_values", "ret_exprs": ["return [0, 1, 2]"], "ret_type": "", "ret_type_p": [["str", 0.5000000004730645], ["Tuple[int, int]", 0.49999999772419373], ["int", 2.742572820289064e-10]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[311, 4], [331, 58]], "fn_var_ln": {"task1": [[321, 16], [321, 21]]}, "fn_var_occur": {"task1": [["MyOp", "partial", "task_id", "expand", "x", "task1"]]}, "name": "test_mapped_dag_slas_disabled_classic", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_classic", "ret_exprs": [], "ret_type": "", "variables": {"task1": ""}, "variables_p": {"task1": [["list", 0.1999408712398118], ["List[List[Any]]", 0.18387588242540717], ["Dict[Any, int]", 0.1757768212167759], ["int", 0.13601350415961833], ["Tuple[Any, Any]", 0.11164037003687294], ["Counter[Any]", 0.09371372310475745]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[340, 16], [341, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_values", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_taskflow.<locals>.get_values", "ret_exprs": ["return [0, 1, 2]"], "ret_type": "", "ret_type_p": [["str", 0.5000000004730645], ["Tuple[int, int]", 0.49999999772419373], ["int", 2.742572820289064e-10]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[346, 16], [347, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "print_val", "params": {"x": ""}, "params_descr": {"x": ""}, "params_occur": {"x": [["print", "x"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "x": [["Union[str, int]", 0.9999999998850628], ["int", 4.0578941153763085e-11], ["str", 2.4543323194017176e-11], ["float", 1.1924666326269219e-11]]}, "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_taskflow.<locals>.print_val", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[333, 4], [349, 41]], "fn_var_ln": {"task1": [[343, 16], [343, 21]]}, "fn_var_occur": {"task1": [["print_val", "expand", "x", "task1"]]}, "name": "test_mapped_dag_slas_disabled_taskflow", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_mapped_dag_slas_disabled_taskflow", "ret_exprs": [], "ret_type": "", "variables": {"task1": ""}, "variables_p": {"task1": [["int", 0.609445358321097], ["str", 0.08535130381391635]]}}, {"docstring": {"func": "Verify if operator attributes are correctly templated.", "long_descr": null, "ret": null}, "fn_lc": [[351, 4], [362, 42]], "fn_var_ln": {"task": [[353, 8], [353, 12]]}, "fn_var_occur": {"task": [["task", "MockOperator", "task_id", "arg1", "arg2"], ["task", "arg1"], ["task", "arg2"], ["task", "render_template_fields", "context"], ["task", "arg1"], ["task", "arg2"]]}, "name": "test_render_template_fields", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_render_template_fields", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["nufb.task.Task", 0.1682351170278109], ["golem.task.taskcomputer.TaskComputer", 0.11058028462130062], ["Dict[str, Union[Any, Any]]", 0.10419791331561402], ["str", 0.10158665521973467], ["list", 0.08355540690363893], ["Dict[str, Dict[str, int]]", 0.0797754717735361], ["Set[str]", 0.07868785819308341]]}}, {"docstring": {"func": "Tests if non-templatable types remain unchanged.", "long_descr": null, "ret": null}, "fn_lc": [[365, 4], [370, 32]], "fn_var_ln": {"result": [[369, 8], [369, 14]], "task": [[367, 8], [367, 12]]}, "fn_var_occur": {"result": [["result", "task", "render_template", "content"], ["content", "result"]], "task": [["task", "BaseOperator", "task_id"], ["result", "task", "render_template", "content"]]}, "name": "test_render_template_fields_no_change", "params": {"content": "", "self": ""}, "params_descr": {"content": "", "self": ""}, "params_occur": {"content": [["result", "task", "render_template", "content"], ["content", "result"]], "self": []}, "params_p": {"args": [], "content": [["bytes", 0.09099723217349877]], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_render_template_fields_no_change", "ret_exprs": [], "ret_type": "", "variables": {"result": "", "task": ""}, "variables_p": {"result": [["list", 0.14242818377760724], ["Dict[str, Any]", 0.1375922280540712], ["KeysView[str]", 0.09759292650985436], ["Dict[str, Dict[str, Any]]", 0.09326031190136565], ["str", 0.08552577648574786], ["List[str]", 0.08486972399027058], ["mock.MagicMock", 0.08007730487858472]], "task": [["str", 0.27875526395585243], ["Dict[str, str]", 0.2205247965458164], ["List[str]", 0.19118419667685635], ["Dict[str, int]", 0.11151429929684388], ["KeysView[str]", 0.10369968213371875], ["dict", 0.09432176139091225]]}}, {"docstring": {"func": "Test render_template when a nested template field is missing.", "long_descr": null, "ret": null}, "fn_lc": [[372, 4], [386, 13]], "fn_var_ln": {"error_message": [[376, 8], [376, 21]], "task": [[374, 8], [374, 12]]}, "fn_var_occur": {"error_message": [["pytest", "raises", "AttributeError", "match", "error_message"]], "task": [["task", "BaseOperator", "task_id"], ["task", "render_template", "ClassWithCustomAttributes", "template_fields", "task_type"]]}, "name": "test_nested_template_fields_declared_must_exist", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_nested_template_fields_declared_must_exist", "ret_exprs": [], "ret_type": "", "variables": {"error_message": "", "task": ""}, "variables_p": {"error_message": [["str", 0.8754037310765084], ["Pattern[str]", 0.12459626892349142]], "task": [["Dict[str, Any]", 0.09883482399942937]]}}, {"docstring": {"func": "Verify template_fields attribute is converted to a list if declared as a string.", "long_descr": null, "ret": null}, "fn_lc": [[388, 4], [403, 57]], "fn_var_ln": {"task": [[400, 12], [400, 16]], "template_fields": [[392, 12], [392, 27]], "warning_message": [[394, 8], [394, 23]]}, "fn_var_occur": {"task": [["task", "StringTemplateFieldsOperator", "task_id"], ["isinstance", "task", "template_fields", "list"]], "template_fields": [["isinstance", "task", "template_fields", "list"]], "warning_message": [["pytest", "warns", "UserWarning", "match", "warning_message", "warnings"]]}, "name": "test_string_template_field_attr_is_converted_to_list", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_string_template_field_attr_is_converted_to_list", "ret_exprs": [], "ret_type": "", "variables": {"task": "", "template_fields": "", "warning_message": ""}, "variables_p": {"task": [["Dict[str, Union[Any, Any, str]]", 0.2247852552534578], ["int", 0.20425196428170198], ["o2a.converter.task.Task", 0.08828123906650084], ["restful_functions.modules.task.TaskStore", 0.08213739172015161]], "template_fields": [["str", 1.0]], "warning_message": [["str", 0.454658800522061], ["List[str]", 0.2788456985013123], ["int", 0.08710269649984069]]}}, {"docstring": {"func": "Test render_template propagates Jinja invalid expression errors.", "long_descr": null, "ret": null}, "fn_lc": [[405, 4], [410, 64]], "fn_var_ln": {"task": [[407, 8], [407, 12]]}, "fn_var_occur": {"task": [["task", "BaseOperator", "task_id"], ["task", "render_template"]]}, "name": "test_jinja_invalid_expression_is_just_propagated", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_jinja_invalid_expression_is_just_propagated", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["str", 0.40716070926070846], ["Dict[str, str]", 0.10986167920637634], ["List[str]", 0.09939164563200067], ["list", 0.09704053628540599], ["Dict[str, List[Any]]", 0.09630471829685175], ["Dict[str, Any]", 0.09105428344145348]]}}, {"docstring": {"func": "Verify if a Jinja environment is created only once when templating.", "long_descr": null, "ret": null}, "fn_lc": [[413, 4], [418, 45]], "fn_var_ln": {"task": [[415, 8], [415, 12]]}, "fn_var_occur": {"task": [["task", "MockOperator", "task_id", "arg1", "arg2"], ["task", "render_template_fields", "context"]]}, "name": "test_jinja_env_creation", "params": {"mock_jinja_env": "", "self": ""}, "params_descr": {"mock_jinja_env": "", "self": ""}, "params_occur": {"mock_jinja_env": [["mock_jinja_env", "call_count"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_jinja_env": [["mock.Mock", 0.08210071307787378], ["mock.MagicMock", 0.0637897004914082]], "self": []}, "q_name": "TestBaseOperator.test_jinja_env_creation", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["nufb.task.Task", 0.14825390587096055], ["Dict[str, Union[Any, Any]]", 0.09841004963403965], ["list", 0.09139735771907255], ["int", 0.08433174186331467], ["Dict[str, Dict[str, int]]", 0.08324319933530137]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[420, 4], [422, 37]], "fn_var_ln": {"task": [[421, 8], [421, 12]]}, "fn_var_occur": {"task": [["task", "BaseOperator", "task_id"], ["task", "resources", "None"]]}, "name": "test_default_resources", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_default_resources", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["Dict[str, Any]", 0.15843440656534086], ["Set[str]", 0.06672425321553155], ["List[Dict[str, Any]]", 0.06647998348617504], ["str", 0.06240454855366981]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[424, 4], [427, 45]], "fn_var_ln": {"task": [[425, 8], [425, 12]]}, "fn_var_occur": {"task": [["task", "BaseOperator", "task_id", "resources"], ["task", "resources", "cpus", "qty"], ["task", "resources", "ram", "qty"]]}, "name": "test_custom_resources", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_custom_resources", "ret_exprs": [], "ret_type": "", "variables": {"task": ""}, "variables_p": {"task": [["str", 0.42304534139689526], ["List[str]", 0.19680920077835176], ["List[Union[Any, Any, Any, Any]]", 0.09470976836021848], ["Dict[str, str]", 0.09335107611222306], ["list", 0.09228092939852489]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[429, 4], [432, 49]], "fn_var_ln": {"test_task": [[430, 8], [430, 17]]}, "fn_var_occur": {"test_task": [["test_task", "BaseOperator", "task_id"], ["test_task", "email_on_retry", "True"], ["test_task", "email_on_failure", "True"]]}, "name": "test_default_email_on_actions", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_default_email_on_actions", "ret_exprs": [], "ret_type": "", "variables": {"test_task": ""}, "variables_p": {"test_task": [["str", 0.3879164857368169], ["List[Dict[str, str]]", 0.3605065280084387], ["Dict[str, Union[float, str]]", 0.09112911941875444], ["List[Tuple[str, str, str, str]]", 0.07763497913559997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[434, 4], [439, 49]], "fn_var_ln": {"test_task": [[435, 8], [435, 17]]}, "fn_var_occur": {"test_task": [["test_task", "BaseOperator", "task_id", "email_on_retry", "False", "email_on_failure", "True"], ["test_task", "email_on_retry", "False"], ["test_task", "email_on_failure", "True"]]}, "name": "test_email_on_actions", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_email_on_actions", "ret_exprs": [], "ret_type": "", "variables": {"test_task": ""}, "variables_p": {"test_task": [["str", 0.6023256460818032], ["Dict[str, Union[float, str]]", 0.11424231245962739], ["Dict[str, str]", 0.10175949890873151], ["List[Dict[str, str]]", 0.08901013132615143]]}}, {"docstring": {"func": "Test if all dependencies between tasks are all set correctly.", "long_descr": null, "ret": null}, "fn_lc": [[441, 4], [465, 13]], "fn_var_ln": {"dag": [[443, 8], [443, 11]], "end_tasks": [[445, 8], [445, 17]], "start_tasks": [[444, 8], [444, 19]], "xend_tasks": [[456, 8], [456, 18]], "xstart_tasks": [[452, 8], [452, 20]]}, "fn_var_occur": {"dag": [["dag", "DAG", "dag_id", "start_date", "datetime", "now"], ["start_tasks", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["end_tasks", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["xstart_tasks", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["xend_tasks", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"]], "end_tasks": [["end_tasks", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["cross_downstream", "from_tasks", "start_tasks", "to_tasks", "end_tasks"], ["set", "start_task", "get_direct_relatives", "upstream", "False", "set", "end_tasks"]], "start_tasks": [["start_tasks", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["cross_downstream", "from_tasks", "start_tasks", "to_tasks", "end_tasks"]], "xend_tasks": [["xend_tasks", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["cross_downstream", "from_tasks", "xstart_tasks", "to_tasks", "xend_tasks"], ["set", "xstart_task", "operator", "get_direct_relatives", "upstream", "False", "xend_task", "operator", "xend_task", "xend_tasks"]], "xstart_tasks": [["xstart_tasks", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["cross_downstream", "from_tasks", "xstart_tasks", "to_tasks", "xend_tasks"]]}, "name": "test_cross_downstream", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_cross_downstream", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "end_tasks": "", "start_tasks": "", "xend_tasks": "", "xstart_tasks": ""}, "variables_p": {"dag": [["Type[backend.server.models.match.Match]", 0.20584571366006918], ["Tuple[int, int]", 0.11655866476752724], ["Dict[str, str]", 0.11336815071751402], ["List[str]", 0.10370546904649891], ["datetime.datetime", 0.09579509588699019], ["List[Tuple[Any, Any]]", 0.09421363955124075]], "end_tasks": [["int", 0.4925643741112589], ["List[List[int]]", 0.19827478758096767], ["List[str]", 0.10711033748105324], ["Dict[str, str]", 0.10134688144743528]], "start_tasks": [["str", 0.19701212884210495], ["List[List[int]]", 0.193267438126093], ["List[str]", 0.127143516221306], ["app.models.User", 0.11527370454469468], ["legistar.models.MatterStatus", 0.09847880977782325], ["Dict[str, List[Any]]", 0.09064414149570917]], "xend_tasks": [["int", 0.5203227134692494], ["List[List[int]]", 0.22033861555646383], ["List[str]", 0.12185431316064163]], "xstart_tasks": [["int", 0.5203227134692494], ["List[List[int]]", 0.22033861555646383], ["List[str]", 0.12185431316064163]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[467, 4], [522, 66]], "fn_var_ln": {"dag": [[468, 8], [468, 11]]}, "fn_var_occur": {"dag": [["dag", "DAG", "dag_id", "start_date", "datetime", "now"], ["op1", "op2", "op3", "op4", "op5", "op6", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["dag", "get_edge_info", "upstream_task_id", "op1", "task_id", "downstream_task_id", "op2", "task_id"], ["dag", "get_edge_info", "upstream_task_id", "op1", "task_id", "downstream_task_id", "op3", "task_id"], ["xop1", "xop2", "xop3", "xop4", "xop5", "xop6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["dag", "get_edge_info", "upstream_task_id", "xop1", "operator", "task_id", "downstream_task_id", "xop2", "operator", "task_id"], ["dag", "get_edge_info", "upstream_task_id", "xop1", "operator", "task_id", "downstream_task_id", "xop3", "operator", "task_id"], ["tg1", "tg2", "TaskGroup", "group_id", "i", "dag", "dag", "i", "range"], ["op1", "op2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["tgop1", "tgop2", "BaseOperator", "task_id", "i", "task_group", "tg1", "dag", "dag", "i", "range"], ["tgop3", "tgop4", "BaseOperator", "task_id", "i", "task_group", "tg2", "dag", "dag", "i", "range"]]}, "name": "test_chain", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_chain", "ret_exprs": [], "ret_type": "", "variables": {"dag": ""}, "variables_p": {"dag": [["str", 0.17742769276171258], ["int", 0.13469076667987323], ["datetime.date.time.timezone", 0.12627824674689192], ["Dict[str, str]", 0.10851530766884465], ["List[Tuple[str, Any]]", 0.10162658092382865], ["Optional[excars.models.profiles.Profile]", 0.09786870322983006], ["List[dict]", 0.09317318000761834], ["datetime.datetime.timedelta", 0.08020976099070025], ["datetime.datetime.datetime", 0.08020976099070025]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[524, 4], [571, 28]], "fn_var_ln": {"dag": [[525, 8], [525, 11]], "op1": [[548, 8], [548, 11]], "op2": [[548, 13], [548, 16]], "t1": [[563, 8], [563, 10]], "t2": [[563, 12], [563, 14]], "t3": [[535, 16], [535, 18]], "t4": [[535, 20], [535, 22]], "t5": [[535, 24], [535, 26]], "t6": [[535, 28], [535, 30]], "t7": [[527, 32], [527, 34]], "tg1": [[547, 8], [547, 11]], "tg2": [[547, 13], [547, 16]], "tgop1": [[549, 8], [549, 13]], "tgop2": [[549, 15], [549, 20]], "tgop3": [[552, 8], [552, 13]], "tgop4": [[552, 15], [552, 20]]}, "fn_var_occur": {"dag": [["dag", "DAG", "dag_id", "start_date", "datetime", "now"], ["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["t1", "t2", "t3", "t4", "t5", "t6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["tg1", "tg2", "TaskGroup", "group_id", "i", "dag", "dag", "i", "range"], ["op1", "op2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["tgop1", "tgop2", "BaseOperator", "task_id", "i", "task_group", "tg1", "dag", "dag", "i", "range"], ["tgop3", "tgop4", "BaseOperator", "task_id", "i", "task_group", "tg2", "dag", "dag", "i", "range"], ["t1", "t2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"]], "op1": [["op1", "op2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "op1", "tg1", "tg2", "op2"], ["set", "op1", "get_direct_relatives", "upstream", "False", "tgop1", "tgop2"]], "op2": [["op1", "op2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "op1", "tg1", "tg2", "op2"], ["set", "tgop3", "get_direct_relatives", "upstream", "False", "op2"], ["set", "tgop4", "get_direct_relatives", "upstream", "False", "op2"]], "t1": [["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6", "t7"], ["set", "t1", "get_direct_relatives", "upstream", "False", "t2", "t3", "t4"], ["t1", "t2", "t3", "t4", "t5", "t6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6"], ["set", "t1", "operator", "get_direct_relatives", "upstream", "False", "t2", "operator", "t3", "operator"], ["t1", "t2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "Label", "t2"], ["chain_linear", "t1"]], "t2": [["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6", "t7"], ["set", "t1", "get_direct_relatives", "upstream", "False", "t2", "t3", "t4"], ["set", "t2", "get_direct_relatives", "upstream", "False", "t5", "t6"], ["t1", "t2", "t3", "t4", "t5", "t6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6"], ["set", "t1", "operator", "get_direct_relatives", "upstream", "False", "t2", "operator", "t3", "operator"], ["set", "t2", "operator", "get_direct_relatives", "upstream", "False", "t4", "operator", "t5", "operator"], ["t1", "t2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "Label", "t2"]], "t3": [["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6", "t7"], ["set", "t1", "get_direct_relatives", "upstream", "False", "t2", "t3", "t4"], ["set", "t3", "get_direct_relatives", "upstream", "False", "t5", "t6"], ["t1", "t2", "t3", "t4", "t5", "t6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6"], ["set", "t1", "operator", "get_direct_relatives", "upstream", "False", "t2", "operator", "t3", "operator"], ["set", "t3", "operator", "get_direct_relatives", "upstream", "False", "t4", "operator", "t5", "operator"]], "t4": [["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6", "t7"], ["set", "t1", "get_direct_relatives", "upstream", "False", "t2", "t3", "t4"], ["t1", "t2", "t3", "t4", "t5", "t6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6"], ["set", "t2", "operator", "get_direct_relatives", "upstream", "False", "t4", "operator", "t5", "operator"], ["set", "t3", "operator", "get_direct_relatives", "upstream", "False", "t4", "operator", "t5", "operator"], ["set", "t6", "operator", "get_direct_relatives", "upstream", "True", "t4", "operator", "t5", "operator"]], "t5": [["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6", "t7"], ["set", "t2", "get_direct_relatives", "upstream", "False", "t5", "t6"], ["set", "t3", "get_direct_relatives", "upstream", "False", "t5", "t6"], ["set", "t7", "get_direct_relatives", "upstream", "True", "t5", "t6"], ["t1", "t2", "t3", "t4", "t5", "t6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6"], ["set", "t2", "operator", "get_direct_relatives", "upstream", "False", "t4", "operator", "t5", "operator"], ["set", "t3", "operator", "get_direct_relatives", "upstream", "False", "t4", "operator", "t5", "operator"], ["set", "t6", "operator", "get_direct_relatives", "upstream", "True", "t4", "operator", "t5", "operator"]], "t6": [["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6", "t7"], ["set", "t2", "get_direct_relatives", "upstream", "False", "t5", "t6"], ["set", "t3", "get_direct_relatives", "upstream", "False", "t5", "t6"], ["set", "t7", "get_direct_relatives", "upstream", "True", "t5", "t6"], ["t1", "t2", "t3", "t4", "t5", "t6", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6"], ["set", "t6", "operator", "get_direct_relatives", "upstream", "True", "t4", "operator", "t5", "operator"]], "t7": [["t1", "t2", "t3", "t4", "t5", "t6", "t7", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["chain_linear", "t1", "t2", "t3", "t4", "t5", "t6", "t7"], ["set", "t7", "get_direct_relatives", "upstream", "True", "t5", "t6"]], "tg1": [["tg1", "tg2", "TaskGroup", "group_id", "i", "dag", "dag", "i", "range"], ["tgop1", "tgop2", "BaseOperator", "task_id", "i", "task_group", "tg1", "dag", "dag", "i", "range"], ["chain_linear", "op1", "tg1", "tg2", "op2"]], "tg2": [["tg1", "tg2", "TaskGroup", "group_id", "i", "dag", "dag", "i", "range"], ["tgop3", "tgop4", "BaseOperator", "task_id", "i", "task_group", "tg2", "dag", "dag", "i", "range"], ["chain_linear", "op1", "tg1", "tg2", "op2"]], "tgop1": [["tgop1", "tgop2", "BaseOperator", "task_id", "i", "task_group", "tg1", "dag", "dag", "i", "range"], ["set", "op1", "get_direct_relatives", "upstream", "False", "tgop1", "tgop2"], ["set", "tgop1", "get_direct_relatives", "upstream", "False", "tgop3", "tgop4"]], "tgop2": [["tgop1", "tgop2", "BaseOperator", "task_id", "i", "task_group", "tg1", "dag", "dag", "i", "range"], ["set", "op1", "get_direct_relatives", "upstream", "False", "tgop1", "tgop2"], ["set", "tgop2", "get_direct_relatives", "upstream", "False", "tgop3", "tgop4"]], "tgop3": [["tgop3", "tgop4", "BaseOperator", "task_id", "i", "task_group", "tg2", "dag", "dag", "i", "range"], ["set", "tgop1", "get_direct_relatives", "upstream", "False", "tgop3", "tgop4"], ["set", "tgop2", "get_direct_relatives", "upstream", "False", "tgop3", "tgop4"], ["set", "tgop3", "get_direct_relatives", "upstream", "False", "op2"]], "tgop4": [["tgop3", "tgop4", "BaseOperator", "task_id", "i", "task_group", "tg2", "dag", "dag", "i", "range"], ["set", "tgop1", "get_direct_relatives", "upstream", "False", "tgop3", "tgop4"], ["set", "tgop2", "get_direct_relatives", "upstream", "False", "tgop3", "tgop4"], ["set", "tgop4", "get_direct_relatives", "upstream", "False", "op2"]]}, "name": "test_chain_linear", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_chain_linear", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "op1": "", "op2": "", "t1": "", "t2": "", "t3": "", "t4": "", "t5": "", "t6": "", "t7": "", "tg1": "", "tg2": "", "tgop1": "", "tgop2": "", "tgop3": "", "tgop4": ""}, "variables_p": {"dag": [["list", 0.3477579727592156], ["Tuple[Any, int]", 0.1083381440900226], ["int", 0.0874367463042809]], "op1": [["int", 0.49175343007010597], ["float", 0.13863482439188662], ["defaultdict", 0.09646556799037131], ["dict", 0.08882175038029165], ["Type[bootcamp.qa.models.Question]", 0.08573297930499535]], "op2": [["int", 0.5025798584104181], ["float", 0.13107832867098038], ["defaultdict", 0.09845698306749784], ["Type[bootcamp.qa.models.Question]", 0.08896386859565757], ["dict", 0.08810334606435528]], "t1": [["str", 0.5197703904430973], ["set", 0.08488443196289312]], "t2": [["str", 0.5197703904430973], ["set", 0.08488443196289312]], "t3": [["str", 0.5197703904430973], ["set", 0.08488443196289312]], "t4": [["str", 0.5197703904430973], ["set", 0.08488443196289312]], "t5": [["str", 0.5197703904430973], ["set", 0.08488443196289312]], "t6": [["str", 0.5197703904430973], ["set", 0.08488443196289312]], "t7": [["str", 0.5197703904430973], ["set", 0.08488443196289312]], "tg1": [["int", 0.7339194961247965], ["list", 0.18073316651487903]], "tg2": [["int", 0.7339194961247965], ["list", 0.18073316651487903]], "tgop1": [["int", 0.1609889495201001], ["alerta.models.alerAlert", 0.11088908485595218], ["Dict[str, str]", 0.08188593755129765]], "tgop2": [["int", 0.1609889495201001], ["alerta.models.alerAlert", 0.11088908485595218], ["Dict[str, str]", 0.08188593755129765]], "tgop3": [["int", 0.16369891482323368], ["alerta.models.alerAlert", 0.11432249160358807], ["Dict[str, str]", 0.07773250828861841], ["list", 0.0728943900139492]], "tgop4": [["int", 0.16369891482323368], ["alerta.models.alerAlert", 0.11432249160358807], ["Dict[str, str]", 0.07773250828861841], ["list", 0.0728943900139492]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[573, 4], [596, 32]], "fn_var_ln": {"dag": [[574, 8], [574, 11]]}, "fn_var_occur": {"dag": [["dag", "DAG", "dag_id", "start_date", "datetime", "now"], ["op1", "op2", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["xop1", "xop2", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["tg1", "tg2", "TaskGroup", "group_id", "i", "dag", "dag", "i", "range"]]}, "name": "test_chain_not_support_type", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_chain_not_support_type", "ret_exprs": [], "ret_type": "", "variables": {"dag": ""}, "variables_p": {"dag": [["int", 0.4132549305211856], ["str", 0.2263348255577529], ["Union[Literal, Literal]", 0.09617899011321272], ["list", 0.08797095053675419]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[598, 4], [626, 46]], "fn_var_ln": {"dag": [[599, 8], [599, 11]]}, "fn_var_occur": {"dag": [["dag", "DAG", "dag_id", "start_date", "datetime", "now"], ["op1", "op2", "op3", "op4", "op5", "BaseOperator", "task_id", "i", "dag", "dag", "i", "range"], ["xop1", "xop2", "xop3", "xop4", "xop5", "task_decorator", "task_id", "i", "python_callable", "None", "dag", "dag", "i", "range"], ["tg1", "tg2", "tg3", "tg4", "tg5", "TaskGroup", "group_id", "i", "dag", "dag", "i", "range"]]}, "name": "test_chain_different_length_iterable", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_chain_different_length_iterable", "ret_exprs": [], "ret_type": "", "variables": {"dag": ""}, "variables_p": {"dag": [["str", 0.4679332364745594], ["datetime.datetime.datetime", 0.14168084033376893], ["Dict[str, str]", 0.1293313329686632], ["List[str]", 0.1031695867985797], ["byceps.services.user.models.detail.UserDetail", 0.0790698992497591], ["Type[hypha.apply.projects.models.Report]", 0.07881510417466966]]}}, {"docstring": {"func": "Test composition with lineage", "long_descr": null, "ret": null}, "fn_lc": [[628, 4], [674, 64]], "fn_var_ln": {"dag": [[634, 8], [634, 11]], "extra": [[659, 8], [659, 13]], "fail": [[648, 8], [648, 12]], "inlet": [[632, 8], [632, 13]], "outlet": [[633, 8], [633, 14]], "supports_lineage": [[664, 8], [664, 30]], "task1": [[635, 8], [635, 13]], "task2": [[636, 8], [636, 13]], "task3": [[658, 8], [658, 13]], "task4": [[672, 8], [672, 13]]}, "fn_var_occur": {"dag": [["dag", "DAG", "start_date", "DEFAULT_DATE"], ["task1", "BaseOperator", "task_id", "dag", "dag"], ["task2", "BaseOperator", "task_id", "dag", "dag"], ["task3", "BaseOperator", "task_id", "dag", "dag"], ["task4", "BaseOperator", "task_id", "dag", "dag"]], "extra": [["extra", "File", "url"], ["inlet", "extra", "task3"], ["task3", "get_inlet_defs", "inlet", "extra"], ["task4", "inlet", "outlet", "extra"], ["task4", "get_outlet_defs", "inlet", "outlet", "extra"]], "fail": [["fail", "ClassWithCustomAttributes"], ["fail", "task1"], ["task1", "fail"], ["fail", "task1"], ["task1", "fail"]], "inlet": [["inlet", "File", "url"], ["inlet", "task1", "task2", "outlet"], ["task1", "get_inlet_defs", "inlet"], ["inlet", "extra", "task3"], ["task3", "get_inlet_defs", "inlet", "extra"], ["task4", "inlet", "outlet", "extra"], ["task4", "get_outlet_defs", "inlet", "outlet", "extra"]], "outlet": [["outlet", "File", "url"], ["inlet", "task1", "task2", "outlet"], ["task2", "get_outlet_defs", "outlet"], ["task4", "inlet", "outlet", "extra"], ["task4", "get_outlet_defs", "inlet", "outlet", "extra"]], "supports_lineage": [["task1", "supports_lineage", "True"], ["task1", "supports_lineage", "False"], ["task2", "supports_lineage", "False"]], "task1": [["task1", "BaseOperator", "task_id", "dag", "dag"], ["task1", "supports_lineage", "True"], ["inlet", "task1", "task2", "outlet"], ["task1", "get_inlet_defs", "inlet"], ["task2", "get_inlet_defs", "task1", "task_id"], ["fail", "task1"], ["task1", "fail"], ["fail", "task1"], ["task1", "fail"], ["task1", "supports_lineage", "False"], ["task1", "task3"]], "task2": [["task2", "BaseOperator", "task_id", "dag", "dag"], ["inlet", "task1", "task2", "outlet"], ["task2", "get_inlet_defs", "task1", "task_id"], ["task2", "get_outlet_defs", "outlet"], ["task2", "supports_lineage", "False"], ["task2", "task3"]], "task3": [["task3", "BaseOperator", "task_id", "dag", "dag"], ["inlet", "extra", "task3"], ["task3", "get_inlet_defs", "inlet", "extra"], ["task1", "task3"], ["task2", "task3"], ["len", "task3", "get_inlet_defs"]], "task4": [["task4", "BaseOperator", "task_id", "dag", "dag"], ["task4", "inlet", "outlet", "extra"], ["task4", "get_outlet_defs", "inlet", "outlet", "extra"]]}, "name": "test_lineage_composition", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_lineage_composition", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "extra": "", "fail": "", "inlet": "", "outlet": "", "supports_lineage": "", "task1": "", "task2": "", "task3": "", "task4": ""}, "variables_p": {"dag": [["int", 0.3907051518577455], ["list", 0.17718018454822443], ["str", 0.11527847194197653], ["dict", 0.08989413360138979]], "extra": [["str", 0.45848610360764175], ["List[str]", 0.28272893110546315], ["dict", 0.16413071328361736]], "fail": [["int", 0.4004217878770132], ["byceps.services.user.transfer.models.User", 0.1716667290209328], ["tests.factories.model.TaskPayment", 0.09252736889615783], ["list", 0.08660700054582439], ["str", 0.08221439599347782]], "inlet": [["dict", 0.11413406596359603], ["Tuple[int, int, int, int]", 0.10345763747401175], ["str", 0.09195202103527654]], "outlet": [["str", 0.3546921401853645], ["dict", 0.19036531827581313], ["Tuple[int, int, int, int]", 0.11684928836551807], ["int", 0.08161095096289192]], "supports_lineage": [["OrderedDict", 0.13024241605037223], ["str", 0.11145201882196772], ["alerta.models.alerAlert", 0.09209816237262325]], "task1": [["str", 0.600985390170273], ["golem.task.taskserver.TaskServer", 0.11988591914958115], ["Dict[str, Union[float, str]]", 0.09649975338968782]], "task2": [["apps.core.task.coretaskstate.TaskDefinition", 0.5387133049463672], ["golem.task.task_api.EnvironmentTaskApiService", 0.2132370246318726], ["annofabapi.dataclass.task.Task", 0.08427623161871314], ["taskiapplication.models.task.Task", 0.0771801630240963]], "task3": [["apps.rendering.task.renderingtaskstate.RenderingTaskDefinition", 0.3013605754370741], ["dict", 0.17574620117269507]], "task4": [["str", 0.1808972371503909], ["kippo.tasks.models.KippoTask", 0.08910179017837493], ["Dict[str, Any]", 0.0871188593290124]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[676, 4], [683, 47]], "fn_var_ln": {"warning": [[680, 12], [680, 19]]}, "fn_var_occur": {"warning": [["warning", "warnings"], ["warning", "filename", "__file__"]]}, "name": "test_warnings_are_properly_propagated", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_warnings_are_properly_propagated", "ret_exprs": [], "ret_type": "", "variables": {"warning": ""}, "variables_p": {"warning": [["str", 0.7602223290250819], ["Set[str]", 0.08206467528130347], ["Union[Literal, Literal]", 0.0780435804538363]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[685, 4], [691, 26]], "fn_var_ln": {"hook": [[686, 8], [686, 12]], "op": [[688, 8], [688, 10]], "op_copy": [[689, 8], [689, 15]]}, "fn_var_occur": {"hook": [["hook", "mock", "MagicMock"], ["op", "BaseOperator", "task_id", "pre_execute", "hook"], ["hook", "called"]], "op": [["op", "BaseOperator", "task_id", "pre_execute", "hook"], ["op_copy", "op", "prepare_for_execution"]], "op_copy": [["op_copy", "op", "prepare_for_execution"], ["op_copy", "pre_execute"]]}, "name": "test_pre_execute_hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_pre_execute_hook", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "op": "", "op_copy": ""}, "variables_p": {"hook": [["mock.Mock", 0.8070135193978745], ["mode.utils.mocks.Mock", 0.19298648060212542]], "op": [["str", 0.1958737080454041], ["Dict[str, str]", 0.18691298968383324], ["int", 0.11615958297809853], ["List[str]", 0.10154360792108935], ["Dict[str, int]", 0.09345649484191662]], "op_copy": [["Dict[int, str]", 2.5308182598039923e-12], ["dict", 2.526099855223863e-12], ["requests.models.Response", 2.474500140075141e-12], ["Dict[str, Union[Any, Any, Any]]", 2.311920428149016e-12], ["Dict[str, dict]", 2.165815422937654e-12]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[693, 4], [699, 26]], "fn_var_ln": {"hook": [[694, 8], [694, 12]], "op": [[696, 8], [696, 10]], "op_copy": [[697, 8], [697, 15]]}, "fn_var_occur": {"hook": [["hook", "mock", "MagicMock"], ["op", "BaseOperator", "task_id", "post_execute", "hook"], ["hook", "called"]], "op": [["op", "BaseOperator", "task_id", "post_execute", "hook"], ["op_copy", "op", "prepare_for_execution"]], "op_copy": [["op_copy", "op", "prepare_for_execution"], ["op_copy", "post_execute"]]}, "name": "test_post_execute_hook", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_post_execute_hook", "ret_exprs": [], "ret_type": "", "variables": {"hook": "", "op": "", "op_copy": ""}, "variables_p": {"hook": [["mock.Mock", 0.7962167005920195], ["mode.utils.mocks.Mock", 0.20378329940798062]], "op": [["Pattern[Any]", 0.4013201897329546], ["int", 0.202340992827927], ["str", 0.19335507471864477], ["List[float]", 0.09655638660830053]], "op_copy": [["Dict[str, int]", 0.10781366495617874], ["str", 0.09891228533310065], ["int", 0.09826674365475248]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[701, 4], [709, 40]], "fn_var_ln": {"naive_datetime": [[702, 8], [702, 22]], "op_no_dag": [[704, 8], [704, 17]]}, "fn_var_occur": {"naive_datetime": [["naive_datetime", "DEFAULT_DATE", "replace", "tzinfo", "None"], ["op_no_dag", "BaseOperator", "task_id", "start_date", "naive_datetime", "end_date", "naive_datetime"]], "op_no_dag": [["op_no_dag", "BaseOperator", "task_id", "start_date", "naive_datetime", "end_date", "naive_datetime"], ["op_no_dag", "start_date", "tzinfo"], ["op_no_dag", "end_date", "tzinfo"]]}, "name": "test_task_naive_datetime", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_task_naive_datetime", "ret_exprs": [], "ret_type": "", "variables": {"naive_datetime": "", "op_no_dag": ""}, "variables_p": {"naive_datetime": [["datetime.datetime", 0.4059212135761073], ["str", 0.2033390021365123], ["datetime.date", 0.1924231466835009], ["Dict[datetime.date, Dict[str, Any]]", 0.09621157334175046]], "op_no_dag": [["str", 0.3984710709279524], ["int", 0.18938748979108772], ["Dict[str, Dict[str, Any]]", 0.12355868069465803], ["datetime.datetime", 0.1043989245151578], ["list", 0.09505095422642568], ["Tuple[str, str]", 0.08913287984471828]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[711, 4], [717, 42]], "fn_var_ln": {"op": [[712, 8], [712, 10]], "op_copy": [[713, 8], [713, 15]]}, "fn_var_occur": {"op": [["op", "MockOperator", "task_id"], ["op_copy", "op", "prepare_for_execution"]], "op_copy": [["op_copy", "op", "prepare_for_execution"], ["op_copy", "execute"]]}, "name": "test_setattr_performs_no_custom_action_at_execute_time", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_setattr_performs_no_custom_action_at_execute_time", "ret_exprs": [], "ret_type": "", "variables": {"op": "", "op_copy": ""}, "variables_p": {"op": [["int", 0.30032554414785484], ["str", 0.12577462748517237], ["Tuple[str, str]", 0.10829071691730127], ["dict", 0.08976036559110205]], "op_copy": [["Dict[int, str]", 2.5308182598039923e-12], ["dict", 2.526099855223863e-12], ["requests.models.Response", 2.474500140075141e-12], ["Dict[str, Union[Any, Any, Any]]", 2.311920428149016e-12], ["Dict[str, dict]", 2.165815422937654e-12]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[719, 4], [725, 41]], "fn_var_ln": {"op1": [[721, 12], [721, 15]], "op2": [[722, 12], [722, 15]]}, "fn_var_occur": {"op1": [["op1", "BaseOperator", "task_id"], ["op2", "MockOperator", "task_id", "arg1", "op1", "output"], ["op1", "op2", "upstream_list"], ["op2", "op1", "downstream_list"]], "op2": [["op2", "MockOperator", "task_id", "arg1", "op1", "output"], ["op1", "op2", "upstream_list"], ["op2", "op1", "downstream_list"]]}, "name": "test_upstream_is_set_when_template_field_is_xcomarg", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_upstream_is_set_when_template_field_is_xcomarg", "ret_exprs": [], "ret_type": "", "variables": {"op1": "", "op2": ""}, "variables_p": {"op1": [["str", 0.6896369397636255], ["config.Config", 0.09780973319207935], ["List[dict]", 0.09411451193383703]], "op2": [["dict", 0.39688815125034477], ["str", 0.32494585107880103], ["Dict[str, Literal]", 0.10354896519701273], ["qcodes.utils.validators.Lists", 0.08241196809322558]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[727, 4], [737, 39]], "fn_var_ln": {"op1": [[729, 12], [729, 15]], "op2": [[730, 12], [730, 15]], "op3": [[731, 12], [731, 15]], "op4": [[732, 12], [732, 15]]}, "fn_var_occur": {"op1": [["op1", "BaseOperator", "task_id"], ["op3", "MockOperator", "task_id", "arg1", "op1", "output", "op2", "output"], ["op4", "MockOperator", "task_id", "arg1", "op1", "output", "op2", "output"], ["op1", "op3", "upstream_list"], ["op1", "op4", "upstream_list"]], "op2": [["op2", "BaseOperator", "task_id"], ["op3", "MockOperator", "task_id", "arg1", "op1", "output", "op2", "output"], ["op4", "MockOperator", "task_id", "arg1", "op1", "output", "op2", "output"], ["op2", "op3", "upstream_list"], ["op2", "op4", "upstream_list"]], "op3": [["op3", "MockOperator", "task_id", "arg1", "op1", "output", "op2", "output"], ["op1", "op3", "upstream_list"], ["op2", "op3", "upstream_list"]], "op4": [["op4", "MockOperator", "task_id", "arg1", "op1", "output", "op2", "output"], ["op1", "op4", "upstream_list"], ["op2", "op4", "upstream_list"]]}, "name": "test_set_xcomargs_dependencies_works_recursively", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_set_xcomargs_dependencies_works_recursively", "ret_exprs": [], "ret_type": "", "variables": {"op1": "", "op2": "", "op3": "", "op4": ""}, "variables_p": {"op1": [["str", 0.28216220248642876], ["config.Config", 0.09216656409621257], ["Tuple[Literal, Literal]", 0.09002993642753793], ["Dict[int, str]", 0.08515885049839941]], "op2": [["str", 0.28216220248642876], ["config.Config", 0.09216656409621257], ["Tuple[Literal, Literal]", 0.09002993642753793], ["Dict[int, str]", 0.08515885049839941]], "op3": [["dict", 0.3208246688245164], ["str", 0.31553339857616414], ["Dict[str, Literal]", 0.10949711352559999], ["qcodes.utils.validators.Lists", 0.08434603932202743], ["KeysView[str]", 0.07988125615261196]], "op4": [["dict", 0.3208246688245164], ["str", 0.31553339857616414], ["Dict[str, Literal]", 0.10949711352559999], ["qcodes.utils.validators.Lists", 0.08434603932202743], ["KeysView[str]", 0.07988125615261196]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[739, 4], [745, 39]], "fn_var_ln": {"arg1": [[743, 12], [743, 20]], "op1": [[741, 12], [741, 15]], "op2": [[742, 12], [742, 15]]}, "fn_var_occur": {"arg1": [["op2", "arg1", "op1", "output"]], "op1": [["op1", "BaseOperator", "task_id"], ["op2", "arg1", "op1", "output"], ["op1", "op2", "upstream_list"]], "op2": [["op2", "MockOperator", "task_id"], ["op2", "arg1", "op1", "output"], ["op1", "op2", "upstream_list"]]}, "name": "test_set_xcomargs_dependencies_works_when_set_after_init", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_set_xcomargs_dependencies_works_when_set_after_init", "ret_exprs": [], "ret_type": "", "variables": {"arg1": "", "op1": "", "op2": ""}, "variables_p": {"arg1": [["list", 0.2858860816537324], ["int", 0.20508279948841152], ["List[str]", 0.19742547199769378], ["bool", 0.19618206753306064], ["str", 0.11542357932710148]], "op1": [["dict", 0.8109233966557895], ["OrderedDict[str, int]", 0.10344211064409717]], "op2": [["str", 0.3858252197121473], ["int", 0.3198918100601551], ["List[str]", 0.09578850292475317], ["Dict[str, Any]", 0.09222834475898091]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[747, 4], [750, 56]], "fn_var_ln": {"op1": [[749, 12], [749, 15]]}, "fn_var_occur": {"op1": [["op1", "BaseOperator", "task_id"], ["MockOperator", "task_id", "arg1", "op1", "output"]]}, "name": "test_set_xcomargs_dependencies_error_when_outside_dag", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_set_xcomargs_dependencies_error_when_outside_dag", "ret_exprs": [], "ret_type": "", "variables": {"op1": ""}, "variables_p": {"op1": [["str", 0.29612309961401423], ["int", 0.2038563524028778], ["Dict[str, Dict[str, Any]]", 0.11382878420294278], ["bytes", 0.09653904469745238]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[752, 4], [760, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_invalid_trigger_rule", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_invalid_trigger_rule", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[763, 4], [769, 57]], "fn_var_ln": {"op1": [[767, 12], [767, 15]]}, "fn_var_occur": {"op1": [["op1", "BaseOperator", "task_id", "trigger_rule", "rule"], ["op1", "trigger_rule", "TriggerRule", "ALWAYS"]]}, "name": "test_replace_dummy_trigger_rule", "params": {"rule": "", "self": ""}, "params_descr": {"rule": "", "self": ""}, "params_occur": {"rule": [["op1", "BaseOperator", "task_id", "trigger_rule", "rule"]], "self": []}, "params_p": {"args": [], "kwargs": [], "rule": [["str", 0.09505743231878273]], "self": []}, "q_name": "TestBaseOperator.test_replace_dummy_trigger_rule", "ret_exprs": [], "ret_type": "", "variables": {"op1": ""}, "variables_p": {"op1": [["List[str]", 0.18333931636041675], ["frozenset[Any]", 0.17611788954999477], ["Set[str]", 0.13845552804217298], ["int", 0.12572015021209207], ["KeysView[str]", 0.10331432964678627], ["str", 0.093141350922184], ["Dict[str, Any]", 0.09142583627626016], ["Dict[str, Dict[str, Any]]", 0.08848559899009319]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[771, 4], [773, 54]], "fn_var_ln": {"op": [[772, 8], [772, 10]]}, "fn_var_occur": {"op": [["op", "BaseOperator", "task_id"], ["WeightRule", "DOWNSTREAM", "op", "weight_rule"]]}, "name": "test_weight_rule_default", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_weight_rule_default", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["List[str]", 0.18333931636041675], ["frozenset[Any]", 0.17611788954999477], ["Set[str]", 0.13845552804217298], ["int", 0.12572015021209207], ["KeysView[str]", 0.10331432964678627], ["str", 0.093141350922184], ["Dict[str, Any]", 0.09142583627626016], ["Dict[str, Dict[str, Any]]", 0.08848559899009319]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[775, 4], [777, 52]], "fn_var_ln": {"op": [[776, 8], [776, 10]]}, "fn_var_occur": {"op": [["op", "BaseOperator", "task_id", "weight_rule"], ["WeightRule", "UPSTREAM", "op", "weight_rule"]]}, "name": "test_weight_rule_override", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_weight_rule_override", "ret_exprs": [], "ret_type": "", "variables": {"op": ""}, "variables_p": {"op": [["str", 0.1958737080454041], ["Dict[str, str]", 0.18691298968383324], ["int", 0.11615958297809853], ["List[str]", 0.10154360792108935], ["Dict[str, int]", 0.09345649484191662]]}}, {"docstring": {"func": "Test that when set_context hasn't been called that log records are emitted", "long_descr": null, "ret": null}, "fn_lc": [[781, 4], [787, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_logging_propogated_by_default", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "messages"]], "self": []}, "params_p": {"args": [], "caplog": [["tests.basilisp.helpers.CompileFn", 0.151570259515031]], "kwargs": [], "self": []}, "q_name": "TestBaseOperator.test_logging_propogated_by_default", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestBaseOperator", "q_name": "TestBaseOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[791, 4], [799, 38]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[794, 8], [796, 39]], "fn_var_ln": {"_class_arg": [[795, 12], [795, 26]]}, "fn_var_occur": {"_class_arg": [["_class_arg", "typing", "Any"], ["cls", "_class_arg", "class_arg"]]}, "name": "__init_subclass__", "params": {"class_arg": "", "cls": "", "kwargs": ""}, "params_descr": {"class_arg": "", "cls": "", "kwargs": ""}, "params_occur": {"class_arg": [["cls", "_class_arg", "class_arg"]], "cls": [["cls", "_class_arg", "class_arg"]], "kwargs": []}, "params_p": {"args": [], "class_arg": [["int", 0.2575333120310075], ["Optional[List[str]]", 0.1984622664470249], ["str", 0.1984622664470249], ["List[str]", 0.09923113322351244], ["zerver.models.Realm", 0.07983513959612538]], "cls": [["int", 0.2575333120310075], ["Optional[List[str]]", 0.1984622664470249], ["str", 0.1984622664470249], ["List[str]", 0.09923113322351244], ["zerver.models.Realm", 0.07983513959612538]], "kwargs": [], "self": []}, "q_name": "test_init_subclass_args.<locals>.InitSubclassOp.__init_subclass__", "ret_exprs": [], "ret_type": "None", "variables": {"_class_arg": ""}, "variables_p": {"_class_arg": [["str", 0.7852624065517292], ["List[Dict[str, Any]]", 0.12234034895347459], ["List[int]", 0.09239724449479601]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[798, 8], [799, 38]], "fn_var_ln": {"context_arg": [[799, 12], [799, 28]]}, "fn_var_occur": {"context_arg": [["self", "context_arg", "context"]]}, "name": "execute", "params": {"context": "airflow.utils.context.Context", "self": ""}, "params_descr": {"context": "", "self": ""}, "params_occur": {"context": [["self", "context_arg", "context"]], "self": [["self", "context_arg", "context"]]}, "params_p": {"args": [], "context": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "kwargs": [], "self": []}, "q_name": "test_init_subclass_args.<locals>.InitSubclassOp.execute", "ret_exprs": [], "ret_type": "", "variables": {"context_arg": ""}, "variables_p": {"context_arg": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}], "name": "InitSubclassOp", "q_name": "test_init_subclass_args.<locals>.InitSubclassOp", "variables": {}, "variables_p": {}}, {"cls_lc": [[804, 4], [805, 12]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "ConcreteSubclassOp", "q_name": "test_init_subclass_args.<locals>.ConcreteSubclassOp", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[790, 0], [813, 43]], "fn_var_ln": {"_class_arg": [[792, 8], [792, 18]], "class_arg": [[801, 4], [801, 13]], "context": [[802, 4], [802, 11]], "task": [[807, 4], [807, 8]], "task_copy": [[808, 4], [808, 13]]}, "fn_var_occur": {"_class_arg": [["task_copy", "_class_arg", "class_arg"]], "class_arg": [["task_copy", "_class_arg", "class_arg"]], "context": [["task_copy", "execute", "context"], ["task_copy", "context_arg", "context"]], "task": [["task", "ConcreteSubclassOp", "task_id"], ["task_copy", "task", "prepare_for_execution"]], "task_copy": [["task_copy", "task", "prepare_for_execution"], ["task_copy", "execute", "context"], ["task_copy", "_class_arg", "class_arg"], ["task_copy", "context_arg", "context"]]}, "name": "test_init_subclass_args", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_init_subclass_args", "ret_exprs": [], "ret_type": "", "variables": {"_class_arg": "typing.Any", "class_arg": "", "context": "", "task": "", "task_copy": ""}, "variables_p": {"_class_arg": [["str", 0.18416002114427973], ["int", 0.16722178147101377], ["Set[str]", 0.10911188591972644], ["Dict[str, str]", 0.10907862035830747], ["Type[tuple]", 0.0919797127412976], ["List[str]", 0.08854850203776289], ["Dict[str, Tuple[Any, Any]]", 0.0829677863796273], ["list", 0.08101174122670136]], "class_arg": [["str", 0.18416002114427973], ["int", 0.16722178147101377], ["Set[str]", 0.10911188591972644], ["Dict[str, str]", 0.10907862035830747], ["Type[tuple]", 0.0919797127412976], ["List[str]", 0.08854850203776289], ["Dict[str, Tuple[Any, Any]]", 0.0829677863796273], ["list", 0.08101174122670136]], "context": [["alerta.models.alerAlert", 0.228002416128878], ["DefaultDict[Any, dict]", 0.19201995203365685], ["Dict[str, str]", 0.10799280890729665], ["Dict[str, Union[Any, Any, str]]", 0.10060277376840464], ["str", 0.09676152656584973], ["Optional[\"Lecture\"]", 0.09401108989910051], ["set", 0.09169229073586908], ["Dict[int, Set[Any]]", 0.08891714196094455]], "task": [["str", 0.1855018995039431], ["List[List[int]]", 0.1786205741577937], ["Dict[str, str]", 0.10476481543079211], ["legistar.models.MatterStatus", 0.10296830418469596], ["dict", 0.08413818605498814], ["List[str]", 0.08009002008771762]], "task_copy": [["kippo.tasks.models.KippoTask", 0.18302813032051132], ["taskiapplication.models.task.Task", 0.1645421143261763], ["golem.task.taskbase.Task", 0.10044511153731386]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[816, 0], [820, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_operator_retries_invalid", "params": {"dag_maker": ""}, "params_descr": {"dag_maker": ""}, "params_occur": {"dag_maker": []}, "params_p": {"args": [], "dag_maker": [["tests.basilisp.helpers.CompileFn", 0.2], ["str", 0.2], ["tests.async_mock.MagicMock", 0.1], ["tests.async_mock.Mock", 0.1], ["Mapping[str, Any]", 0.1]], "kwargs": []}, "q_name": "test_operator_retries_invalid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[841, 0], [848, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_operator_retries", "params": {"caplog": "", "dag_maker": "", "expected": "", "retries": ""}, "params_descr": {"caplog": "", "dag_maker": "", "expected": "", "retries": ""}, "params_occur": {"caplog": [["caplog", "at_level", "logging", "WARNING"], ["caplog", "record_tuples", "expected"]], "dag_maker": [], "expected": [["caplog", "record_tuples", "expected"]], "retries": [["BaseOperator", "task_id", "retries", "retries"]]}, "params_p": {"args": [], "caplog": [["str", 0.7806231247251169], ["bool", 0.14625125018325535], ["Optional[str]", 0.07312562509162768]], "dag_maker": [["str", 0.9999999993134242], ["bool", 1.1608248259644484e-10], ["List[Tuple[str, str]]", 9.976027240105069e-11]], "expected": [["str", 0.3013564382581263], ["Union[str, float]", 0.1713260553649802], ["tests.conftesWorker", 0.10591326908753279], ["bool", 0.0734852233742996], ["bytes", 0.06521762159462689], ["int", 0.05783021033278849], ["medtagger.database.models.Dataset", 0.05604953944196801]], "kwargs": [], "retries": [["int", 0.32639976315008434], ["str", 0.17076451994968195], ["bool", 0.12466558463420936], ["dict", 0.1075617343409741], ["datetime.datetime", 0.09525453933125982]]}, "q_name": "test_operator_retries", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[851, 0], [855, 58]], "fn_var_ln": {"task1": [[853, 8], [853, 13]]}, "fn_var_occur": {"task1": [["task1", "BaseOperator", "task_id"], ["task1", "retry_delay", "timedelta", "seconds"]]}, "name": "test_default_retry_delay", "params": {"dag_maker": ""}, "params_descr": {"dag_maker": ""}, "params_occur": {"dag_maker": [["dag_maker", "dag_id"]]}, "params_p": {"args": [], "dag_maker": [["lms.lmsdb.models.Comment", 0.16492902125960307], ["logging.LogRecord", 0.08996090147693324]], "kwargs": []}, "q_name": "test_default_retry_delay", "ret_exprs": [], "ret_type": "", "variables": {"task1": ""}, "variables_p": {"task1": [["str", 0.40716070926070846], ["Dict[str, str]", 0.10986167920637634], ["List[str]", 0.09939164563200067], ["list", 0.09704053628540599], ["Dict[str, List[Any]]", 0.09630471829685175], ["Dict[str, Any]", 0.09105428344145348]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[858, 0], [862, 58]], "fn_var_ln": {"task1": [[860, 8], [860, 13]]}, "fn_var_occur": {"task1": [["task1", "BaseOperator", "task_id"], ["task1", "retry_delay", "timedelta", "seconds"]]}, "name": "test_dag_level_retry_delay", "params": {"dag_maker": ""}, "params_descr": {"dag_maker": ""}, "params_occur": {"dag_maker": [["dag_maker", "dag_id", "default_args", "timedelta", "seconds"]]}, "params_p": {"args": [], "dag_maker": [["str", 0.22772439450419715], ["lms.lmsdb.models.Comment", 0.08048116307486033]], "kwargs": []}, "q_name": "test_dag_level_retry_delay", "ret_exprs": [], "ret_type": "", "variables": {"task1": ""}, "variables_p": {"task1": [["str", 0.40716070926070846], ["Dict[str, str]", 0.10986167920637634], ["List[str]", 0.09939164563200067], ["list", 0.09704053628540599], ["Dict[str, List[Any]]", 0.09630471829685175], ["Dict[str, Any]", 0.09105428344145348]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[865, 0], [871, 58]], "fn_var_ln": {"task1": [[869, 8], [869, 13]]}, "fn_var_occur": {"task1": [["task1", "BaseOperator", "task_id", "retry_delay", "timedelta", "seconds"], ["task1", "retry_delay", "timedelta", "seconds"]]}, "name": "test_task_level_retry_delay", "params": {"dag_maker": ""}, "params_descr": {"dag_maker": ""}, "params_occur": {"dag_maker": [["dag_maker", "dag_id", "default_args", "timedelta", "seconds"]]}, "params_p": {"args": [], "dag_maker": [["str", 0.10520014268749336], ["int", 0.09016259537511892], ["List[Callable]", 0.09016259537511892]], "kwargs": []}, "q_name": "test_task_level_retry_delay", "ret_exprs": [], "ret_type": "", "variables": {"task1": ""}, "variables_p": {"task1": [["Dict[int, str]", 0.5373010892464991], ["Dict[str, Any]", 0.10855076397751699], ["Pattern[Any]", 0.09871463717883634], ["reminders.task.Task", 0.0977687326246748]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[879, 8], [880, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task0", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_deepcopy.<locals>.task0", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[874, 0], [883, 22]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_deepcopy", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_deepcopy", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[923, 4], [924, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_do_render", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_render_template_fields_logging.<locals>._do_render", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Verify if operator attributes are correctly templated.", "long_descr": null, "ret": null}, "fn_lc": [[918, 0], [938, 50]], "fn_var_ln": {"logger": [[926, 4], [926, 10]]}, "fn_var_occur": {"logger": [["logger", "logging", "getLogger"], ["monkeypatch", "setattr", "logger", "True"]]}, "name": "test_render_template_fields_logging", "params": {"caplog": "", "context": "", "expected_exception": "", "expected_log": "", "expected_rendering": "", "monkeypatch": "", "not_expected_log": "", "task": ""}, "params_descr": {"caplog": "", "context": "", "expected_exception": "", "expected_log": "", "expected_rendering": "", "monkeypatch": "", "not_expected_log": "", "task": ""}, "params_occur": {"caplog": [["expected_log", "caplog", "text"], ["not_expected_log", "caplog", "text"]], "context": [], "expected_exception": [["pytest", "raises", "expected_exception"]], "expected_log": [["expected_log", "caplog", "text"]], "expected_rendering": [["expected_rendering", "items"]], "monkeypatch": [["monkeypatch", "setattr", "logger", "True"]], "not_expected_log": [["not_expected_log", "caplog", "text"]], "task": [["getattr", "task", "k", "v"]]}, "params_p": {"args": [], "caplog": [["str", 0.9009231944568546], ["bool", 0.0990768055431452]], "context": [["str", 0.30323517072932127], ["raiden.utils.List[raiden.utils.Address]", 0.21913089947121714], ["Sequence[Hashable]", 0.08719937953507015], ["List[Tuple[int, int]]", 0.08719937953507015]], "expected_exception": [["str", 0.33090469603996653], ["int", 0.1889788152869864], ["tuple", 0.09563996230844256]], "expected_log": [["tuple", 0.12927916022906774], ["cmk.utils.type_defs.ServiceName", 0.1070765780810599], ["str", 0.09359997231459022]], "expected_rendering": [["Dict[str, Any]", 0.23309045963389402], ["List[Tuple[bool, Any]]", 0.12657814526719097], ["str", 0.09324742609001138], ["Dict[str, str]", 0.09053509240416413], ["Optional[\"permissions_doc\"]", 0.0893177223217289]], "kwargs": [], "monkeypatch": [["bool", 0.30767890669946124], ["Collection[str]", 0.10914333334838354], ["int", 0.10143806591206944], ["Union[str, List[str]]", 0.09203201722163572], ["List[List[int]]", 0.08947447170338622]], "not_expected_log": [["tuple", 0.12927916022906774], ["cmk.utils.type_defs.ServiceName", 0.1070765780810599], ["str", 0.09359997231459022]], "task": [["str", 0.4578067498004822], ["bool", 0.12024040873457555], ["dict", 0.11088488101505777]]}, "q_name": "test_render_template_fields_logging", "ret_exprs": [], "ret_type": "", "variables": {"logger": ""}, "variables_p": {"logger": [["logging.Logger", 0.9999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[945, 4], [946, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "gen", "params": {"x": ""}, "params_descr": {"x": ""}, "params_occur": {"x": [["list", "range", "x"]]}, "params_p": {"args": [], "kwargs": [], "x": [["int", 0.139459206491473], ["Tuple[float, float]", 0.028799929796883405]]}, "q_name": "test_find_mapped_dependants_in_another_group.<locals>.gen", "ret_exprs": ["return list(range(x))"], "ret_type": "", "ret_type_p": [["List[Dict]", 0.3025314940304453], ["str", 0.26166218208662134], ["List[str]", 0.1977459850870577], ["List[int]", 0.0668699686174212]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[949, 4], [950, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add", "params": {"x": "", "y": ""}, "params_descr": {"x": "", "y": ""}, "params_occur": {"x": [["x", "y"]], "y": [["x", "y"]]}, "params_p": {"args": [], "kwargs": [], "x": [["int", 0.9999999999999999]], "y": [["int", 0.9999999999999999]]}, "q_name": "test_find_mapped_dependants_in_another_group.<locals>.add", "ret_exprs": ["return x + y"], "ret_type": "", "ret_type_p": [["str", 0.2322548068461218], ["int", 0.08605762079031587]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[941, 0], [959, 46]], "fn_var_ln": {"add_result": [[956, 12], [956, 22]], "dependants": [[958, 4], [958, 14]], "gen_result": [[954, 12], [954, 22]]}, "fn_var_occur": {"add_result": [["add_result", "add", "partial", "y", "expand", "x", "gen_result"], ["dependants", "add_result", "operator"]], "dependants": [["dependants", "list", "gen_result", "operator", "iter_mapped_dependants"], ["dependants", "add_result", "operator"]], "gen_result": [["gen_result", "gen"], ["add_result", "add", "partial", "y", "expand", "x", "gen_result"], ["dependants", "list", "gen_result", "operator", "iter_mapped_dependants"]]}, "name": "test_find_mapped_dependants_in_another_group", "params": {"dag_maker": ""}, "params_descr": {"dag_maker": ""}, "params_occur": {"dag_maker": []}, "params_p": {"args": [], "dag_maker": [["tests.basilisp.helpers.CompileFn", 0.5529318134200915], ["tests.setup.SetupTest", 0.12884601420980024]], "kwargs": []}, "q_name": "test_find_mapped_dependants_in_another_group", "ret_exprs": [], "ret_type": "", "variables": {"add_result": "", "dependants": "", "gen_result": ""}, "variables_p": {"add_result": [["Tuple[List[Any], Literal]", 0.2054339241989059], ["int", 0.18210681154824993], ["list", 0.11481065667800575], ["deque[Any]", 0.10446475669964671], ["List[str]", 0.10226571026505474], ["Set[int]", 0.10066345373657229], ["tuple", 0.09881936704063231], ["Dict[str, Union[bool, str]]", 0.09143531983293238]], "dependants": [["dict", 0.21552870212401323], ["List[str]", 0.17383309205221492], ["Dict[str, Any]", 0.12860903881194158], ["Tuple[Literal, Literal, Literal]", 0.10189555093887306], ["Dict[str, str]", 0.09789618059323361], ["str", 0.09456066190029926]], "gen_result": [["frozenset[Any]", 0.1956490697340761], ["float", 0.1024352690357594], ["list", 0.09985069668440033]]}}], "imports": ["__future__", "annotations", "copy", "logging", "uuid", "datetime", "date", "datetime", "timedelta", "typing", "Any", "NamedTuple", "unittest", "mock", "jinja2", "pytest", "airflow", "decorators", "task", "task_decorator", "airflow", "exceptions", "AirflowException", "DagInvalidTriggerRule", "RemovedInAirflow3Warning", "airflow", "lineage", "entities", "File", "airflow", "models", "DAG", "airflow", "models", "baseoperator", "BaseOperator", "BaseOperatorMeta", "chain", "chain_linear", "cross_downstream", "airflow", "utils", "context", "Context", "airflow", "utils", "edgemodifier", "Label", "airflow", "utils", "task_group", "TaskGroup", "airflow", "utils", "trigger_rule", "TriggerRule", "airflow", "utils", "weight_rule", "WeightRule", "tests", "models", "DEFAULT_DATE", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "mock_operators", "DeprecatedOperator", "MockOperator", "airflow", "models", "abstractoperator", "DEFAULT_TRIGGER_RULE", "airflow", "utils", "task_group", "TaskGroup"], "mod_var_ln": {"object1": [[72, 0], [72, 7]], "object2": [[73, 0], [73, 7]]}, "mod_var_occur": {"object1": [["object2", "ClassWithCustomAttributes", "attr", "ref", "object1", "template_fields"], ["setattr", "object1", "object2"]], "object2": [["setattr", "object1", "object2"]]}, "no_types_annot": {"D": 5, "I": 0, "U": 217}, "session_id": "g0pCsqcJcMvRBzm62vRvVyTAXRjElY-XmbjtanF3H2w", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"object1": "", "object2": ""}, "variables_p": {"object1": [["str", 0.2869572282756662], ["Union[Literal, Literal]", 0.10300036219561075], ["Set[str]", 0.08890093617656403]], "object2": [["List[str]", 0.4904827233947434], ["Tuple[str, str, str, str, str, str, str, str]", 0.10032404796193414], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10032404796193414], ["Dict[str, bool]", 0.07615649693909726]]}}}