{"error": null, "response": {"classes": [{"cls_lc": [[30, 0], [70, 56]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [32, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDagWarning.setup_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that the purge_inactive_dag_warnings method deletes inactive dag warnings", "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [54, 58]], "fn_var_ln": {"dag_warnings": [[43, 8], [43, 20]], "dags": [[39, 8], [39, 12]], "remaining_dag_warnings": [[52, 8], [52, 30]]}, "fn_var_occur": {"dag_warnings": [["dag_warnings", "DagWarning", "DagWarning"], ["session", "add_all", "dag_warnings"]], "dags": [["dags", "DagModel", "dag_id", "is_active", "False", "DagModel", "dag_id", "is_active", "True"], ["session", "add_all", "dags"]], "remaining_dag_warnings": [["remaining_dag_warnings", "session", "query", "DagWarning", "all"], ["len", "remaining_dag_warnings"], ["remaining_dag_warnings", "dag_id"]]}, "name": "test_purge_inactive_dag_warnings", "params": {"self": "", "session": ""}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [], "session": [["session", "add_all", "dags"], ["session", "commit"], ["session", "add_all", "dag_warnings"], ["session", "commit"], ["DagWarning", "purge_inactive_dag_warnings", "session"], ["remaining_dag_warnings", "session", "query", "DagWarning", "all"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.Session", 0.2325854136391059], ["sqlalchemy.orm.session.Session", 0.17825473097151134], ["Dict[str, Any]", 0.08751374585580558], ["zerver.models.UserProfile", 0.08724919740933763]]}, "q_name": "TestDagWarning.test_purge_inactive_dag_warnings", "ret_exprs": [], "ret_type": "", "variables": {"dag_warnings": "", "dags": "", "remaining_dag_warnings": ""}, "variables_p": {"dag_warnings": [["Dict[None, None]", 0.10878876021047006], ["dict", 0.10215902057716966], ["set", 0.08434073886943134], ["Set[taxonomy.db.models.name.Name]", 0.07990262172239608]], "dags": [["str", 0.08686969020765209]], "remaining_dag_warnings": [["set", 0.17065990788295812], ["int", 0.09373543090967283], ["tests.components.homekit_controller.common.FakeService", 0.0843843770411498], ["dict", 0.08356555712737297], ["Dict[str, List[Any]]", 0.08050954235906413]]}}, {"docstring": {"func": "Test that the purge_inactive_dag_warnings method calls the delete method twice", "long_descr": "if the query throws an operationalError on the first call and works on the second attempt", "ret": null}, "fn_lc": [[57, 4], [70, 56]], "fn_var_ln": {"session_mock": [[62, 8], [62, 25]]}, "fn_var_occur": {"session_mock": [["self", "session_mock", "MagicMock"], ["self", "session_mock", "execute", "side_effect", "OperationalError", "None", "None", "None"], ["DagWarning", "purge_inactive_dag_warnings", "self", "session_mock"], ["self", "session_mock", "execute", "call_count"]]}, "name": "test_retry_purge_inactive_dag_warnings", "params": {"delete_mock": "", "self": ""}, "params_descr": {"delete_mock": "", "self": ""}, "params_occur": {"delete_mock": [["delete_mock", "call_count"]], "self": [["self", "session_mock", "MagicMock"], ["self", "session_mock", "execute", "side_effect", "OperationalError", "None", "None", "None"], ["DagWarning", "purge_inactive_dag_warnings", "self", "session_mock"], ["self", "session_mock", "execute", "call_count"]]}, "params_p": {"args": [], "delete_mock": [["unittesmock.MagicMock", 0.08109268032393999]], "kwargs": [], "self": []}, "q_name": "TestDagWarning.test_retry_purge_inactive_dag_warnings", "ret_exprs": [], "ret_type": "", "variables": {"session_mock": ""}, "variables_p": {"session_mock": [["unittesmock.MagicMock", 0.10064689537534369]]}}], "name": "TestDagWarning", "q_name": "TestDagWarning", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "MagicMock", "sqlalchemy", "exc", "OperationalError", "airflow", "models", "DagModel", "airflow", "models", "dagwarning", "DagWarning", "tests", "test_utils", "db", "clear_db_dags"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 9}, "session_id": "amYqnSf0gUaIzjO_ZgmCV4Wx-hzRA5fXye0ni-leVPA", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}