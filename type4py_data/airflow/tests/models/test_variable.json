{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [260, 30]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [43, 29]], "fn_var_ln": {"_fernet": [[43, 8], [43, 22]], "mask_secret": [[40, 12], [40, 28]]}, "fn_var_occur": {"_fernet": [["crypto", "_fernet", "None"], ["crypto", "_fernet", "None"]], "mask_secret": [["self", "mask_secret", "m"]]}, "name": "setup_test_cases", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mask_secret", "m"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.setup_test_cases", "ret_exprs": [], "ret_type": "", "variables": {"_fernet": "", "mask_secret": ""}, "variables_p": {"_fernet": [["int", 0.1990316524258024], ["str", 0.1986324455650471], ["Optional[int]", 0.11640846985507315], ["Dict[str, Literal]", 0.10135646196197359], ["Dict[str, str]", 0.08301351535802627]], "mask_secret": [["str", 0.21663346900511926], ["Sequence['cirq.Qid']", 0.186240639034252], ["Tuple[float, float, float]", 0.1004655269734397], ["int", 0.09974841050720308], ["Hashable", 0.0985829125112305]]}}, {"docstring": {"func": "Test variables without encryption", "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [57, 64]], "fn_var_ln": {"session": [[51, 8], [51, 15]], "test_var": [[52, 8], [52, 16]]}, "fn_var_occur": {"session": [["session", "settings", "Session"], ["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"]], "test_var": [["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"], ["test_var", "is_encrypted"], ["test_var", "val"]]}, "name": "test_variable_no_encryption", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mask_secret", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_no_encryption", "ret_exprs": [], "ret_type": "", "variables": {"session": "", "test_var": ""}, "variables_p": {"session": [["Dict[str, Any]", 0.4286883287550844], ["dict", 0.0919734444508613], ["Dict[Any, dict]", 0.08608450361339508]], "test_var": [["list", 0.17723341541513668], ["str", 0.17460079489906027], ["Pattern[str]", 0.16791854949893673], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.11321625733743712], ["Dict[str, Union[int, str]]", 0.11207616686202367], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.08772196811087052], ["List[str]", 0.08041228997584281]]}}, {"docstring": {"func": "Test variables with encryption", "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [68, 38]], "fn_var_ln": {"session": [[65, 8], [65, 15]], "test_var": [[66, 8], [66, 16]]}, "fn_var_occur": {"session": [["session", "settings", "Session"], ["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"]], "test_var": [["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"], ["test_var", "is_encrypted"], ["test_var", "val"]]}, "name": "test_variable_with_encryption", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_with_encryption", "ret_exprs": [], "ret_type": "", "variables": {"session": "", "test_var": ""}, "variables_p": {"session": [["Dict[str, Any]", 0.4286883287550844], ["dict", 0.0919734444508613], ["Dict[Any, dict]", 0.08608450361339508]], "test_var": [["list", 0.17723341541513668], ["str", 0.17460079489906027], ["Pattern[str]", 0.16791854949893673], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.11321625733743712], ["Dict[str, Union[int, str]]", 0.11207616686202367], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.08772196811087052], ["List[str]", 0.08041228997584281]]}}, {"docstring": {"func": "Tests rotating encrypted variables.", "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [95, 86]], "fn_var_ln": {"_fernet": [[88, 12], [88, 26]], "key1": [[75, 8], [75, 12]], "key2": [[76, 8], [76, 12]], "session": [[80, 12], [80, 19]], "test_var": [[81, 12], [81, 20]]}, "fn_var_occur": {"_fernet": [["crypto", "_fernet", "None"]], "key1": [["key1", "Fernet", "generate_key"], ["conf_vars", "key1", "decode"], ["Fernet", "key1", "decrypt", "test_var", "_val", "encode", "test_value", "encode"], ["conf_vars", "join", "key2", "decode", "key1", "decode"]], "key2": [["key2", "Fernet", "generate_key"], ["conf_vars", "join", "key2", "decode", "key1", "decode"], ["Fernet", "key2", "decrypt", "test_var", "_val", "encode", "test_value", "encode"]], "session": [["session", "settings", "Session"], ["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"]], "test_var": [["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"], ["test_var", "is_encrypted"], ["test_var", "val", "test_value"], ["Fernet", "key1", "decrypt", "test_var", "_val", "encode", "test_value", "encode"], ["test_var", "val", "test_value"], ["test_var", "rotate_fernet_key"], ["test_var", "is_encrypted"], ["test_var", "val", "test_value"], ["Fernet", "key2", "decrypt", "test_var", "_val", "encode", "test_value", "encode"]]}, "name": "test_var_with_encryption_rotate_fernet_key", "params": {"self": "", "test_value": ""}, "params_descr": {"self": "", "test_value": ""}, "params_occur": {"self": [], "test_value": [["Variable", "set", "test_value"], ["test_var", "val", "test_value"], ["Fernet", "key1", "decrypt", "test_var", "_val", "encode", "test_value", "encode"], ["test_var", "val", "test_value"], ["test_var", "val", "test_value"], ["Fernet", "key2", "decrypt", "test_var", "_val", "encode", "test_value", "encode"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "test_value": [["str", 0.5987532115261279], ["dcpquery.db.models.Project", 0.10859622794778416], ["core_lib.core.models.Venue", 0.09893856753278288], ["cmk.gui.plugins.views.utils.Command", 0.09344394349733869]]}, "q_name": "TestVariable.test_var_with_encryption_rotate_fernet_key", "ret_exprs": [], "ret_type": "", "variables": {"_fernet": "", "key1": "", "key2": "", "session": "", "test_var": ""}, "variables_p": {"_fernet": [["Type[Optional[Any]]", 0.19999999999999998], ["list", 0.09999999999999999], ["str", 0.09999999999999999]], "key1": [["str", 0.3024413800553982]], "key2": [["str", 0.2881223712066674], ["List[str]", 0.17809696163018202]], "session": [["Dict[str, Any]", 0.4286883287550844], ["dict", 0.0919734444508613], ["Dict[Any, dict]", 0.08608450361339508]], "test_var": [["dict", 0.2429117050831583], ["str", 0.1954266408048237], ["Dict[str, int]", 0.1041487905890369], ["Dict[str, float]", 0.09413153696319812], ["Dict[str, dict]", 0.09266451265413474], ["Dict[str, Any]", 0.09157651501937954], ["Type[Dict[str, Any]]", 0.08817217596617695]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[97, 4], [99, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_variable_set_get_round_trip", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_set_get_round_trip", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [114, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_variable_set_with_env_variable", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "set_level", "logging", "WARNING", "logger", "variable", "log", "name"], ["caplog", "messages"]], "self": []}, "params_p": {"args": [], "caplog": [["logging.Logger", 0.6253729206317274]], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_set_with_env_variable", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[117, 4], [132, 9]], "fn_var_ln": {"mock_backend": [[119, 8], [119, 20]], "return_value": [[122, 8], [122, 40]]}, "fn_var_occur": {"mock_backend": [["mock_backend", "mock", "Mock"], ["mock_backend", "get_variable", "return_value"], ["mock_backend", "__class__", "__name__"], ["mock_ensure_secrets", "return_value", "mock_backend", "MetastoreBackend"]], "return_value": [["mock_backend", "get_variable", "return_value"], ["mock_ensure_secrets", "return_value", "mock_backend", "MetastoreBackend"]]}, "name": "test_variable_set_with_extra_secret_backend", "params": {"caplog": "", "mock_ensure_secrets": "", "self": ""}, "params_descr": {"caplog": "", "mock_ensure_secrets": "", "self": ""}, "params_occur": {"caplog": [["caplog", "set_level", "logging", "WARNING", "logger", "variable", "log", "name"], ["caplog", "messages"]], "mock_ensure_secrets": [["mock_ensure_secrets", "return_value", "mock_backend", "MetastoreBackend"]], "self": []}, "params_p": {"args": [], "caplog": [["logging.Logger", 0.6171118503931777]], "kwargs": [], "mock_ensure_secrets": [], "self": []}, "q_name": "TestVariable.test_variable_set_with_extra_secret_backend", "ret_exprs": [], "ret_type": "", "variables": {"mock_backend": "", "return_value": ""}, "variables_p": {"mock_backend": [["mock.Mock", 0.3787018086737015], ["Dict[Variable[_KT], Variable[_VT]]", 0.0986944771455709]], "return_value": [["str", 0.3129981621687167], ["Dict[str, Dict[str, Any]]", 0.13137709109056192], ["set", 0.0996784983772634], ["list", 0.09397493721767522], ["Optional[str]", 0.08080282399230389], ["raiden.utils.Any", 0.0733569323390346], ["Dict[str, Union[Any, int]]", 0.07169706617874189], ["List[str]", 0.06824827519950195], ["Dict[str, Optional[str]]", 0.06786621343620054]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [137, 80]], "fn_var_ln": {"value": [[135, 8], [135, 13]]}, "fn_var_occur": {"value": [["Variable", "set", "value", "serialize_json", "True"], ["value", "Variable", "get", "deserialize_json", "True"]]}, "name": "test_variable_set_get_round_trip_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_set_get_round_trip_json", "ret_exprs": [], "ret_type": "", "variables": {"value": ""}, "variables_p": {"value": [["Dict[str, bool]", 0.19645649346590235], ["dict", 0.1881107305951002], ["List[Tuple[str, str]]", 0.14693158938389256], ["qcodes.configuration.config.DotDict", 0.10828861964874927], ["Counter[Any]", 0.09684259715403366], ["List[Dict]", 0.08966900726767937], ["Dict[str, str]", 0.0849438558443456]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[139, 4], [143, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_variable_update", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_update", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [148, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_variable_update_fails_on_non_metastore_variable", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_update_fails_on_non_metastore_variable", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[150, 4], [157, 56]], "fn_var_ln": {"session": [[154, 8], [154, 15]], "test_var": [[155, 8], [155, 16]]}, "fn_var_occur": {"session": [["session", "settings", "Session"], ["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"]], "test_var": [["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"], ["test_var", "val"], ["test_var", "description"]]}, "name": "test_variable_update_preserves_description", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_update_preserves_description", "ret_exprs": [], "ret_type": "", "variables": {"session": "", "test_var": ""}, "variables_p": {"session": [["Dict[str, Any]", 0.4286883287550844], ["dict", 0.0919734444508613], ["Dict[Any, dict]", 0.08608450361339508]], "test_var": [["list", 0.17723341541513668], ["str", 0.17460079489906027], ["Pattern[str]", 0.16791854949893673], ["raiden_contracts.tests.test_channel_update_transfer.test_update_invalid_balance_proof_arguments.balance_proof", 0.11321625733743712], ["Dict[str, Union[int, str]]", 0.11207616686202367], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.08772196811087052], ["List[str]", 0.08041228997584281]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[159, 4], [164, 38]], "fn_var_ln": {"session": [[161, 8], [161, 15]], "test_var": [[162, 8], [162, 16]]}, "fn_var_occur": {"session": [["session", "settings", "Session"], ["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"]], "test_var": [["test_var", "session", "query", "Variable", "filter", "Variable", "key", "one"], ["test_var", "description"], ["test_var", "val"]]}, "name": "test_set_variable_sets_description", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_set_variable_sets_description", "ret_exprs": [], "ret_type": "", "variables": {"session": "", "test_var": ""}, "variables_p": {"session": [["Dict[str, Any]", 0.4286883287550844], ["dict", 0.0919734444508613], ["Dict[Any, dict]", 0.08608450361339508]], "test_var": [["str", 0.27711943509364645], ["list", 0.24199623177558544], ["Pattern[str]", 0.16847662963872595], ["Dict[str, Union[int, str]]", 0.1300274725437842], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.09048049583338122]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 4], [171, 45]], "fn_var_ln": {"test_key": [[168, 8], [168, 16]], "test_value": [[167, 8], [167, 18]]}, "fn_var_occur": {"test_key": [["Variable", "set", "test_key", "test_value"], ["Variable", "set", "test_key"]], "test_value": [["Variable", "set", "test_key", "test_value"]]}, "name": "test_variable_set_existing_value_to_blank", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_set_existing_value_to_blank", "ret_exprs": [], "ret_type": "", "variables": {"test_key": "", "test_value": ""}, "variables_p": {"test_key": [["List[str]", 0.3961637808712634], ["Set[str]", 0.2668597278316585], ["Optional[str]", 0.12012456944251858], ["str", 0.11238215207838435], ["Tuple[str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str, str]", 0.10446976977617499]], "test_value": [["str", 0.7359080211149068], ["Pattern[str]", 0.15400497965591306], ["List[str]", 0.11008699922918004]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [175, 93]], "fn_var_ln": {"default_value": [[174, 8], [174, 21]]}, "fn_var_occur": {"default_value": [["default_value", "Variable", "get", "default_var", "default_value"]]}, "name": "test_get_non_existing_var_should_return_default", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_get_non_existing_var_should_return_default", "ret_exprs": [], "ret_type": "", "variables": {"default_value": ""}, "variables_p": {"default_value": [["str", 0.8960773560546405], ["Dict[int, str]", 0.10392264394535956]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[177, 4], [179, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_non_existing_var_should_raise_key_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_get_non_existing_var_should_raise_key_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[181, 4], [183, 58]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_update_non_existing_var_should_raise_key_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_update_non_existing_var_should_raise_key_error", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 4], [186, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_get_non_existing_var_with_none_default_should_return_none", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_get_non_existing_var_with_none_default_should_return_none", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 4], [192, 9]], "fn_var_ln": {"default_value": [[189, 8], [189, 21]]}, "fn_var_occur": {"default_value": [["default_value", "Variable", "get", "default_var", "default_value", "deserialize_json", "True"]]}, "name": "test_get_non_existing_var_should_not_deserialize_json_default", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_get_non_existing_var_should_not_deserialize_json_default", "ret_exprs": [], "ret_type": "", "variables": {"default_value": ""}, "variables_p": {"default_value": [["str", 0.6738761015184935], ["Dict[str, Dict[str, Any]]", 0.09236512443765356], ["Dict[Any, str]", 0.09193386754216278], ["List[str]", 0.07291648982319486], ["Dict[str, str]", 0.06890841667849515]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[194, 4], [198, 41]], "fn_var_ln": {"key": [[195, 8], [195, 11]], "value": [[196, 8], [196, 13]]}, "fn_var_occur": {"key": [["Variable", "setdefault", "key", "value"], ["value", "Variable", "get", "key"]], "value": [["Variable", "setdefault", "key", "value"], ["value", "Variable", "get", "key"]]}, "name": "test_variable_setdefault_round_trip", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_setdefault_round_trip", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "value": ""}, "variables_p": {"key": [["str", 0.4258838347368196], ["Dict[str, str]", 0.24438586925961955], ["Dict[Any, str]", 0.08711926998656876], ["Set[str]", 0.08177959448147815], ["Tuple[Any, Any, Any, Any]", 0.08079523741199844]], "value": [["Dict[str, Callable[[], Any]]", 0.3853921871944477], ["Dict[str, bool]", 0.2330586081921582], ["Dict[str, Any]", 0.08627332969075498], ["str", 0.08359013813501474], ["int", 0.07102086852289774], ["Dict[str, str]", 0.07082531447299394], ["Dict[str, Union[Any, Any]]", 0.06983955379173269]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[200, 4], [204, 64]], "fn_var_ln": {"key": [[201, 8], [201, 11]], "value": [[202, 8], [202, 13]]}, "fn_var_occur": {"key": [["Variable", "setdefault", "key", "value", "deserialize_json", "True"], ["value", "Variable", "get", "key", "deserialize_json", "True"]], "value": [["value", "True"], ["Variable", "setdefault", "key", "value", "deserialize_json", "True"], ["value", "Variable", "get", "key", "deserialize_json", "True"]]}, "name": "test_variable_setdefault_round_trip_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_setdefault_round_trip_json", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "value": ""}, "variables_p": {"key": [["str", 0.5364649031862015], ["Tuple[str]", 0.10741444661022702], ["int", 0.09133544287819108]], "value": [["rl_algorithms.utils.config.ConfigDict", 0.28174883393801875], ["Dict[str, bool]", 0.25066649404352703], ["qcodes.configuration.config.DotDict", 0.09614646478444988]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[206, 4], [213, 64]], "fn_var_ln": {"key": [[207, 8], [207, 11]], "val": [[210, 8], [210, 11]], "value": [[208, 8], [208, 13]]}, "fn_var_occur": {"key": [["Variable", "set", "key", "value", "serialize_json", "True"], ["val", "Variable", "setdefault", "key", "value", "deserialize_json", "True"], ["value", "Variable", "get", "key", "deserialize_json", "True"]], "val": [["val", "Variable", "setdefault", "key", "value", "deserialize_json", "True"], ["value", "val"]], "value": [["value", "True"], ["Variable", "set", "key", "value", "serialize_json", "True"], ["val", "Variable", "setdefault", "key", "value", "deserialize_json", "True"], ["value", "val"], ["value", "Variable", "get", "key", "deserialize_json", "True"]]}, "name": "test_variable_setdefault_existing_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_setdefault_existing_json", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "val": "", "value": ""}, "variables_p": {"key": [["str", 0.39397182734951774], ["list", 0.34757614660128255], ["int", 0.08427646042001263]], "val": [["dict", 0.19792867523405694], ["tuple", 0.0986240554782058]], "value": [["rl_algorithms.utils.config.ConfigDict", 0.13217707825537867], ["qcodes.configuration.config.DotDict", 0.09253267467555339], ["Dict[str, Any]", 0.09245520342191736]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [231, 29]], "fn_var_ln": {"key": [[216, 8], [216, 11]], "value": [[217, 8], [217, 13]]}, "fn_var_occur": {"key": [["Variable", "delete", "key"], ["Variable", "get", "key"], ["Variable", "set", "key", "value"], ["value", "Variable", "get", "key"], ["Variable", "delete", "key"], ["Variable", "get", "key"]], "value": [["Variable", "set", "key", "value"], ["value", "Variable", "get", "key"]]}, "name": "test_variable_delete", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_variable_delete", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "value": ""}, "variables_p": {"key": [["str", 0.2339732135665595], ["Dict[str, Any]", 0.15065307084093085], ["Set[str]", 0.09350108108844633], ["Tuple[str]", 0.08621492034421216]], "value": [["int", 0.5061791256075457], ["Dict[str, str]", 0.20104345845137947], ["Dict[str, bool]", 0.19855422369401848], ["Dict[str, Union[Any, Any, Any]]", 0.09422319224705646]]}}, {"docstring": {"func": "Test secrets are masked when loaded directly from the DB", "long_descr": null, "ret": null}, "fn_lc": [[233, 4], [260, 30]], "fn_var_ln": {"session": [[238, 8], [238, 15]], "var": [[241, 12], [241, 15]]}, "fn_var_occur": {"session": [["session", "settings", "Session"], ["session", "add", "var"], ["session", "flush"], ["session", "expunge", "var"], ["session", "get", "Variable", "var", "id"], ["session", "rollback"]], "var": [["var", "Variable", "key", "os", "getpid", "val"], ["session", "add", "var"], ["session", "expunge", "var"], ["session", "get", "Variable", "var", "id"], ["self", "mask_secret", "mock_calls", "mock", "call", "var", "key"]]}, "name": "test_masking_from_db", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mask_secret", "reset_mock"], ["self", "mask_secret", "mock_calls", "mock", "call", "var", "key"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestVariable.test_masking_from_db", "ret_exprs": [], "ret_type": "", "variables": {"session": "", "var": ""}, "variables_p": {"session": [["SMSShell.models.session.Session", 0.06502644926727613]], "var": [["Dict[int, str]", 0.09646169467146608], ["abilian.core.models.subjects.User", 0.09292948052114801], ["str", 0.09122307071793843], ["legistar.models.MatterCodeSection", 0.08596231220477371]]}}], "name": "TestVariable", "q_name": "TestVariable", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[272, 0], [295, 31]], "fn_var_ln": {"session": [[275, 4], [275, 11]], "var": [[278, 8], [278, 11]]}, "fn_var_occur": {"session": [["session", "settings", "Session"], ["session", "add", "var"], ["session", "flush"], ["session", "expunge", "var"], ["session", "rollback"]], "var": [["var", "Variable", "key", "os", "getpid", "val", "variable_value"], ["session", "add", "var"], ["session", "expunge", "var"], ["Variable", "get", "var", "key", "deserialize_json", "deserialize_json"]]}, "name": "test_masking_only_secret_values", "params": {"deserialize_json": "", "expected_masked_values": "", "variable_value": ""}, "params_descr": {"deserialize_json": "", "expected_masked_values": "", "variable_value": ""}, "params_occur": {"deserialize_json": [["Variable", "get", "var", "key", "deserialize_json", "deserialize_json"]], "expected_masked_values": [], "variable_value": [["var", "Variable", "key", "os", "getpid", "val", "variable_value"]]}, "params_p": {"args": [], "deserialize_json": [["str", 0.20452913244484822], ["Dict[str, int]", 0.18515852613775452], ["int", 0.0999273901772195], ["bool", 0.08547547413380442], ["Dict[str, Any]", 0.08539951789676342], ["bytes", 0.08519977578657896]], "expected_masked_values": [["bool", 0.3733130135607959], ["int", 0.2852873706153723], ["List[str]", 0.09525957816120309]], "kwargs": [], "variable_value": [["int", 0.30424604257748333], ["Callable[[KT], VT]", 0.13057399690886456], ["Sequence[str]", 0.10979915228442141], ["str", 0.08520293552737837]]}, "q_name": "test_masking_only_secret_values", "ret_exprs": [], "ret_type": "", "variables": {"session": "", "var": ""}, "variables_p": {"session": [], "var": [["dict", 0.3136389732141628], ["str", 0.11999128828186202], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09139461541054127], ["Dict[Any, str]", 0.08816397240654004], ["Dict[str, Type[Any]]", 0.0878770907756977], ["list", 0.08711644840552553], ["Dict[str, str]", 0.0853102786587146]]}}], "imports": ["__future__", "annotations", "logging", "os", "unittest", "mock", "pytest", "cryptography", "fernet", "Fernet", "airflow", "settings", "airflow", "models", "Variable", "crypto", "variable", "airflow", "secrets", "metastore", "MetastoreBackend", "tests", "test_utils", "db", "tests", "test_utils", "config", "conf_vars", "airflow", "utils", "log", "secrets_masker", "_secrets_masker"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 66}, "session_id": "0-V_G0jQOP_oGAD-I5xSKC2Mwa0sFF7ZBpJgGxQmye4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}