{"error": null, "response": {"classes": [{"cls_lc": [[46, 0], [242, 50]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [60, 37]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_test_cases", "params": {"monkeypatch": "", "request": "", "self": ""}, "params_descr": {"monkeypatch": "", "request": "", "self": ""}, "params_occur": {"monkeypatch": [], "request": [["mock", "patch", "request", "param"]], "self": []}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [["int", 0.17310064388094956]], "request": [], "self": []}, "q_name": "TestSerializedDagModel.setup_test_cases", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Verifies the correctness of hashing file path.", "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [64, 89]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_dag_fileloc_hash", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_dag_fileloc_hash", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[66, 4], [70, 27]], "fn_var_ln": {"example_dags": [[67, 8], [67, 20]]}, "fn_var_occur": {"example_dags": [["example_dags", "make_example_dags", "example_dags_module"], ["example_dags", "values"]]}, "name": "_write_example_dags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel._write_example_dags", "ret_exprs": ["return example_dags"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"example_dags": ""}, "variables_p": {"example_dags": []}}, {"docstring": {"func": "DAGs can be written into database", "long_descr": null, "ret": null}, "fn_lc": [[72, 4], [83, 58]], "fn_var_ln": {"example_dags": [[74, 8], [74, 20]], "result": [[79, 16], [79, 22]]}, "fn_var_occur": {"example_dags": [["example_dags", "self", "_write_example_dags"], ["example_dags", "values"]], "result": [["result", "session", "query", "SDM", "filter", "SDM", "dag_id", "dag", "dag_id", "one"], ["result", "fileloc", "dag", "fileloc"], ["SerializedDAG", "validate_schema", "result", "data"]]}, "name": "test_write_dag", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["example_dags", "self", "_write_example_dags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_write_dag", "ret_exprs": [], "ret_type": "", "variables": {"example_dags": "", "result": ""}, "variables_p": {"example_dags": [["Dict[str, int]", 0.316094192248577], ["int", 0.2824205054696786], ["str", 0.27573200574594], ["Dict[str, str]", 0.12575329653580453]], "result": [["int", 0.2733338206794069], ["List[List[int]]", 0.17445935117592418], ["Counter[int]", 0.12115313360810141], ["Dict[str, List[Any]]", 0.11677839085554591], ["str", 0.11447350730125518], ["radio.models.PlaybackState", 0.08098207773947126]]}}, {"docstring": {"func": "Test Serialized DAG is updated if DAG is changed", "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [114, 38]], "fn_var_ln": {"dag_updated": [[108, 12], [108, 23]], "example_bash_op_dag": [[88, 8], [88, 27]], "example_dags": [[87, 8], [87, 20]], "s_dag": [[93, 12], [93, 17]], "s_dag_1": [[98, 12], [98, 19]], "s_dag_2": [[109, 12], [109, 19]]}, "fn_var_occur": {"dag_updated": [["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag"], ["dag_updated", "True"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag"], ["dag_updated", "False"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag"], ["dag_updated", "True"]], "example_bash_op_dag": [["example_bash_op_dag", "example_dags", "get"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag"], ["s_dag", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag"], ["s_dag_1", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["example_bash_op_dag", "tags"], ["set", "example_bash_op_dag", "tags"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag"], ["s_dag_2", "session", "get", "SDM", "example_bash_op_dag", "dag_id"]], "example_dags": [["example_dags", "make_example_dags", "example_dags_module"], ["example_bash_op_dag", "example_dags", "get"]], "s_dag": [["s_dag", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["s_dag_1", "dag_hash", "s_dag", "dag_hash"], ["s_dag", "last_updated", "s_dag_1", "last_updated"], ["s_dag", "last_updated", "s_dag_2", "last_updated"], ["s_dag", "dag_hash", "s_dag_2", "dag_hash"]], "s_dag_1": [["s_dag_1", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["s_dag_1", "dag_hash", "s_dag", "dag_hash"], ["s_dag", "last_updated", "s_dag_1", "last_updated"]], "s_dag_2": [["s_dag_2", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["s_dag", "last_updated", "s_dag_2", "last_updated"], ["s_dag", "dag_hash", "s_dag_2", "dag_hash"], ["s_dag_2", "data"]]}, "name": "test_serialized_dag_is_updated_if_dag_is_changed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_serialized_dag_is_updated_if_dag_is_changed", "ret_exprs": [], "ret_type": "", "variables": {"dag_updated": "", "example_bash_op_dag": "", "example_dags": "", "s_dag": "", "s_dag_1": "", "s_dag_2": ""}, "variables_p": {"dag_updated": [["str", 0.3127448246588781], ["bool", 0.09469831353769738], ["int", 0.08764745596005404]], "example_bash_op_dag": [["Dict[str, List[str]]", 0.25295806412462574], ["int", 0.23580930180905274], ["Dict[str, Union[int, str]]", 0.2127492483788725], ["List[float]", 0.1082836608295974], ["Dict[str, List[Any]]", 0.10414714795885388], ["Dict[str, List[int]]", 0.08605257689899762]], "example_dags": [["str", 0.09296935655177857], ["float", 0.07378665365811671], ["List[str]", 0.06955681236728668]], "s_dag": [["str", 1.0000000000000002]], "s_dag_1": [["str", 1.0000000000000002]], "s_dag_2": [["str", 1.0000000000000002]]}}, {"docstring": {"func": "Test Serialized DAG is updated if processor_subdir is changed", "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [141, 38]], "fn_var_ln": {"dag_updated": [[137, 12], [137, 23]], "example_bash_op_dag": [[119, 8], [119, 27]], "example_dags": [[118, 8], [118, 20]], "s_dag": [[124, 12], [124, 17]], "s_dag_1": [[129, 12], [129, 19]], "s_dag_2": [[138, 12], [138, 19]]}, "fn_var_occur": {"dag_updated": [["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag", "processor_subdir"], ["dag_updated", "True"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag", "processor_subdir"], ["dag_updated", "False"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag", "processor_subdir"], ["dag_updated", "True"]], "example_bash_op_dag": [["example_bash_op_dag", "example_dags", "get"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag", "processor_subdir"], ["s_dag", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag", "processor_subdir"], ["s_dag_1", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["dag_updated", "SDM", "write_dag", "dag", "example_bash_op_dag", "processor_subdir"], ["s_dag_2", "session", "get", "SDM", "example_bash_op_dag", "dag_id"]], "example_dags": [["example_dags", "make_example_dags", "example_dags_module"], ["example_bash_op_dag", "example_dags", "get"]], "s_dag": [["s_dag", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["s_dag_1", "dag_hash", "s_dag", "dag_hash"], ["s_dag", "last_updated", "s_dag_1", "last_updated"], ["s_dag", "processor_subdir", "s_dag_2", "processor_subdir"]], "s_dag_1": [["s_dag_1", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["s_dag_1", "dag_hash", "s_dag", "dag_hash"], ["s_dag", "last_updated", "s_dag_1", "last_updated"]], "s_dag_2": [["s_dag_2", "session", "get", "SDM", "example_bash_op_dag", "dag_id"], ["s_dag", "processor_subdir", "s_dag_2", "processor_subdir"]]}, "name": "test_serialized_dag_is_updated_if_processor_subdir_changed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_serialized_dag_is_updated_if_processor_subdir_changed", "ret_exprs": [], "ret_type": "", "variables": {"dag_updated": "", "example_bash_op_dag": "", "example_dags": "", "s_dag": "", "s_dag_1": "", "s_dag_2": ""}, "variables_p": {"dag_updated": [["str", 0.44411797394732566], ["Tuple[int, int]", 0.1824809498206068], ["int", 0.18210689800312188]], "example_bash_op_dag": [["Dict[str, List[str]]", 0.28040166501892894], ["Dict[str, Type[Any]]", 0.1773401913543149], ["Dict[str, Any]", 0.16811481090893865], ["Dict[str, str]", 0.10002500169506016], ["dict", 0.09555235882734843], ["int", 0.09232888685502087], ["Dict[Any, Dict[str, Any]]", 0.086237085340388]], "example_dags": [["str", 0.09296935655177857], ["float", 0.07378665365811671], ["List[str]", 0.06955681236728668]], "s_dag": [["str", 1.0000000000000002]], "s_dag_1": [["str", 1.0000000000000002]], "s_dag_2": [["str", 1.0000000000000002]]}}, {"docstring": {"func": "DAGs can be read from database.", "long_descr": null, "ret": null}, "fn_lc": [[143, 4], [152, 70]], "fn_var_ln": {"example_dags": [[145, 8], [145, 20]], "serialized_dag": [[149, 12], [149, 26]], "serialized_dags": [[146, 8], [146, 23]]}, "fn_var_occur": {"example_dags": [["example_dags", "self", "_write_example_dags"], ["len", "example_dags", "len", "serialized_dags"], ["example_dags", "items"]], "serialized_dag": [["serialized_dag", "serialized_dags", "dag_id"], ["serialized_dag", "dag_id", "dag", "dag_id"], ["set", "serialized_dag", "task_dict", "set", "dag", "task_dict"]], "serialized_dags": [["serialized_dags", "SDM", "read_all_dags"], ["len", "example_dags", "len", "serialized_dags"], ["serialized_dag", "serialized_dags", "dag_id"]]}, "name": "test_read_dags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["example_dags", "self", "_write_example_dags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_read_dags", "ret_exprs": [], "ret_type": "", "variables": {"example_dags": "", "serialized_dag": "", "serialized_dags": ""}, "variables_p": {"example_dags": [["float", 0.11708235023086011], ["List[str]", 0.11502344686064919], ["Dict[str, str]", 0.10151065237286523], ["bytes", 0.09769447942707168], ["list", 0.09051665083115151], ["int", 0.08603148196872691]], "serialized_dag": [["dict", 0.2117405560291519], ["int", 0.10110640093366646], ["List[str]", 0.09518713560994668], ["Tuple[str, str, str, str, str, str, str, str]", 0.09518713560994668]], "serialized_dags": [["List[List[str]]", 0.3150952604458774], ["list", 0.21553678772319504], ["str", 0.09688184092855699], ["List[str]", 0.09444547079123582], ["Union[bytes, str]", 0.09100904261853852]]}}, {"docstring": {"func": "DAGs can be removed from database.", "long_descr": null, "ret": null}, "fn_lc": [[154, 4], [163, 56]], "fn_var_ln": {"dag_removed_by_id": [[161, 8], [161, 25]], "example_dags_list": [[156, 8], [156, 25]], "filtered_example_dags_list": [[159, 8], [159, 34]]}, "fn_var_occur": {"dag_removed_by_id": [["dag_removed_by_id", "filtered_example_dags_list"], ["SDM", "remove_dag", "dag_removed_by_id", "dag_id"], ["SDM", "has_dag", "dag_removed_by_id", "dag_id"]], "example_dags_list": [["example_dags_list", "list", "self", "_write_example_dags", "values"], ["filtered_example_dags_list", "dag", "dag", "example_dags_list", "dag", "is_subdag"]], "filtered_example_dags_list": [["filtered_example_dags_list", "dag", "dag", "example_dags_list", "dag", "is_subdag"], ["dag_removed_by_id", "filtered_example_dags_list"]]}, "name": "test_remove_dags_by_id", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["example_dags_list", "list", "self", "_write_example_dags", "values"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_remove_dags_by_id", "ret_exprs": [], "ret_type": "", "variables": {"dag_removed_by_id": "", "example_dags_list": "", "filtered_example_dags_list": ""}, "variables_p": {"dag_removed_by_id": [["int", 0.38372102538657443], ["dict", 0.20691148363791056], ["Optional[int]", 0.09303895238812877], ["List[str]", 0.07957962781654207]], "example_dags_list": [["list", 0.7065146332340684], ["Dict[int, List[Any]]", 0.09607978159774888]], "filtered_example_dags_list": [["list", 0.48529036142066373], ["List[int]", 0.16241436992089792], ["int", 0.10304938660735968], ["Union[List[Any], List[Any]]", 0.08765125596853247], ["Dict[str, List[str]]", 0.07912194706028787]]}}, {"docstring": {"func": "DAGs can be removed from database.", "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [177, 58]], "fn_var_ln": {"dag_removed_by_file": [[172, 8], [172, 27]], "example_dag_files": [[174, 8], [174, 25]], "example_dags_list": [[167, 8], [167, 25]], "filtered_example_dags_list": [[170, 8], [170, 34]]}, "fn_var_occur": {"dag_removed_by_file": [["dag_removed_by_file", "filtered_example_dags_list"], ["example_dag_files", "remove", "dag_removed_by_file", "fileloc"], ["SDM", "has_dag", "dag_removed_by_file", "dag_id"]], "example_dag_files": [["example_dag_files", "list", "dag", "fileloc", "dag", "filtered_example_dags_list"], ["example_dag_files", "remove", "dag_removed_by_file", "fileloc"], ["SDM", "remove_deleted_dags", "example_dag_files", "processor_subdir"]], "example_dags_list": [["example_dags_list", "list", "self", "_write_example_dags", "values"], ["filtered_example_dags_list", "dag", "dag", "example_dags_list", "dag", "is_subdag"]], "filtered_example_dags_list": [["filtered_example_dags_list", "dag", "dag", "example_dags_list", "dag", "is_subdag"], ["dag_removed_by_file", "filtered_example_dags_list"], ["example_dag_files", "list", "dag", "fileloc", "dag", "filtered_example_dags_list"]]}, "name": "test_remove_dags_by_filepath", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["example_dags_list", "list", "self", "_write_example_dags", "values"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_remove_dags_by_filepath", "ret_exprs": [], "ret_type": "", "variables": {"dag_removed_by_file": "", "example_dag_files": "", "example_dags_list": "", "filtered_example_dags_list": ""}, "variables_p": {"dag_removed_by_file": [["List[str]", 0.18828239889464726]], "example_dag_files": [["List[str]", 0.6563842504759346], ["list", 0.2114889108177359], ["str", 0.1321268387063293]], "example_dags_list": [["list", 0.7065146332340684], ["Dict[int, List[Any]]", 0.09607978159774888]], "filtered_example_dags_list": [["list", 0.5967299541512069], ["str", 0.1064028200775371]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[179, 4], [186, 37]], "fn_var_ln": {"dags": [[180, 8], [180, 12]]}, "fn_var_occur": {"dags": [["dags", "DAG", "DAG", "DAG"], ["SDM", "bulk_sync_to_db", "dags"]]}, "name": "test_bulk_sync_to_db", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_bulk_sync_to_db", "ret_exprs": [], "ret_type": "", "variables": {"dags": ""}, "variables_p": {"dags": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": "Test a pre-2.1.0 serialized DAG can deserialize DAG dependencies.", "long_descr": null, "ret": null}, "fn_lc": [[189, 4], [202, 66]], "fn_var_ln": {"example_dags": [[191, 8], [191, 20]], "expected_dependencies": [[201, 8], [201, 29]], "sdms": [[194, 12], [194, 16]]}, "fn_var_occur": {"example_dags": [["example_dags", "make_example_dags", "example_dags_module"], ["sdms", "SDM", "dag", "dag", "example_dags", "values"], ["expected_dependencies", "dag_id", "dag_id", "example_dags"]], "expected_dependencies": [["expected_dependencies", "dag_id", "dag_id", "example_dags"], ["SDM", "get_dag_dependencies", "expected_dependencies"]], "sdms": [["sdms", "SDM", "dag", "dag", "example_dags", "values"], ["session", "bulk_save_objects", "sdms"]]}, "name": "test_get_dag_dependencies_default_to_empty", "params": {"dag_dependencies_fields": "", "self": ""}, "params_descr": {"dag_dependencies_fields": "", "self": ""}, "params_occur": {"dag_dependencies_fields": [["sdm", "data", "update", "dag_dependencies_fields"]], "self": []}, "params_p": {"args": [], "dag_dependencies_fields": [["core.models.Recipe", 0.3076904964473317], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.16453148915906324], ["str", 0.08599652802716369]], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_get_dag_dependencies_default_to_empty", "ret_exprs": [], "ret_type": "", "variables": {"example_dags": "", "expected_dependencies": "", "sdms": ""}, "variables_p": {"example_dags": [], "expected_dependencies": [["str", 0.551540340162276], ["List[Tuple[Any, str]]", 0.12928084311160631], ["int", 0.08674777529889426]], "sdms": [["cmk.utils.translations.TranslationOptions", 0.0977074831188494], ["str", 0.09744357818741059], ["dict", 0.09485970509004002], ["Dict[str, Dict[str, Any]]", 0.09387051535717107], ["list", 0.09314479262173898]]}}, {"docstring": {"func": "Previously the 'dag_dependencies' node in serialized dag was converted to list from set.", "long_descr": "This caused the order, and thus the hash value, to be unreliable, which could produce\nexcessive dag parsing.", "ret": null}, "fn_lc": [[204, 4], [242, 50]], "fn_var_ln": {"dag_json": [[234, 12], [234, 20]], "deps_order": [[228, 12], [228, 22]], "first_dag_hash": [[239, 16], [239, 30]], "this_dag_hash": [[235, 12], [235, 25]]}, "fn_var_occur": {"dag_json": [["dag_json", "json", "dumps", "SerializedDAG", "to_dict", "dag6", "sort_keys", "True", "encode"], ["this_dag_hash", "md5", "dag_json", "hexdigest"]], "deps_order": [["deps_order", "x", "x", "SerializedDAG", "serialize_dag", "dag6"]], "first_dag_hash": [["first_dag_hash", "None"], ["first_dag_hash", "None"], ["first_dag_hash", "this_dag_hash"], ["this_dag_hash", "first_dag_hash"]], "this_dag_hash": [["this_dag_hash", "md5", "dag_json", "hexdigest"], ["first_dag_hash", "this_dag_hash"], ["this_dag_hash", "first_dag_hash"]]}, "name": "test_order_of_deps_is_consistent", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSerializedDagModel.test_order_of_deps_is_consistent", "ret_exprs": [], "ret_type": "", "variables": {"dag_json": "", "deps_order": "", "first_dag_hash": "", "this_dag_hash": ""}, "variables_p": {"dag_json": [["dict", 0.9015358364362076]], "deps_order": [["Set[str]", 0.4999999999117408], ["List[str]", 0.4999999998872438], ["list", 4.777736023385436e-11], ["float", 3.310922554117052e-11], ["int", 3.310922554117052e-11], ["Dict[str, Union[int, str]]", 3.1359370430645944e-11], ["Set[Type[Any]]", 2.430068339201263e-11]], "first_dag_hash": [["str", 0.6164111232472046], ["int", 0.25087389367126967], ["List[None]", 0.07254118898445928], ["Type[List[Any]]", 0.060173794097066476]], "this_dag_hash": [["str", 0.9999999993118955], ["List[Dict[str, float]]", 2.5809018519486187e-10], ["int", 1.4382809931787217e-10], ["Dict[str, List[Any]]", 7.568274144693284e-11], ["bool", 7.016779088465196e-11]]}}], "name": "TestSerializedDagModel", "q_name": "TestSerializedDagModel", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Loads DAGs from a module for test.", "long_descr": null, "ret": null}, "fn_lc": [[40, 0], [43, 22]], "fn_var_ln": {"dagbag": [[42, 4], [42, 10]]}, "fn_var_occur": {"dagbag": [["dagbag", "DagBag", "module", "__path__"], ["dagbag", "dags"]]}, "name": "make_example_dags", "params": {"module": ""}, "params_descr": {"module": ""}, "params_occur": {"module": [["dagbag", "DagBag", "module", "__path__"]]}, "params_p": {"args": [], "kwargs": [], "module": [["str", 0.33331794142513543], ["dict", 0.10519334916621548]]}, "q_name": "make_example_dags", "ret_exprs": ["return dagbag.dags"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["models.Question", 0.1], ["str", 0.1]], "variables": {"dagbag": ""}, "variables_p": {"dagbag": [["str", 0.9076306509149353], ["list", 0.09236934908506463]]}}], "imports": ["__future__", "annotations", "unittest", "mock", "pendulum", "pytest", "airflow", "DAG", "Dataset", "example_dags", "example_dags_module", "airflow", "models", "DagBag", "airflow", "models", "dagcode", "DagCode", "airflow", "models", "serialized_dag", "SerializedDagModel", "SDM", "airflow", "operators", "bash", "BashOperator", "airflow", "serialization", "serialized_objects", "SerializedDAG", "airflow", "settings", "json", "airflow", "utils", "hashlib_wrapper", "md5", "airflow", "utils", "session", "create_session", "tests", "test_utils", "db", "tests", "test_utils", "asserts", "assert_queries_count"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 51}, "session_id": "zNN8Fg618KZETFLsmF5sJshSiJJbr2vhpoxqJ7btQgI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}