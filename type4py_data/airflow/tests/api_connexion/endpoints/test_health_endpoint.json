{"error": null, "response": {"classes": [{"cls_lc": [[34, 0], [44, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [40, 39]], "fn_var_ln": {"app": [[37, 8], [37, 16]], "client": [[38, 8], [38, 19]]}, "fn_var_occur": {"app": [["self", "app", "minimal_app_for_api"], ["self", "client", "self", "app", "test_client"]], "client": [["self", "client", "self", "app", "test_client"]]}, "name": "setup_attrs", "params": {"minimal_app_for_api": "", "self": ""}, "params_descr": {"minimal_app_for_api": "", "self": ""}, "params_occur": {"minimal_app_for_api": [["self", "app", "minimal_app_for_api"]], "self": [["self", "app", "minimal_app_for_api"], ["self", "client", "self", "app", "test_client"]]}, "params_p": {"args": [], "kwargs": [], "minimal_app_for_api": [["bool", 0.2855712824082786], ["List[str]", 0.11617701353741844], ["Optional[str]", 0.11327864481606437], ["str", 0.09029070163891674], ["int", 0.08525894853884217]], "self": []}, "q_name": "TestHealthTestBase.setup_attrs", "ret_exprs": [], "ret_type": "None", "variables": {"app": "", "client": ""}, "variables_p": {"app": [], "client": [["int", 0.75954940801549], ["Final", 0.1631853350242139]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [44, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHealthTestBase.teardown_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestHealthTestBase", "q_name": "TestHealthTestBase", "variables": {}, "variables_p": {}}, {"cls_lc": [[47, 0], [89, 75]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 4], [61, 9]], "fn_var_ln": {"job": [[51, 8], [51, 11]], "last_scheduler_heartbeat_for_testing_1": [[50, 8], [50, 46]], "resp_json": [[55, 8], [55, 17]]}, "fn_var_occur": {"job": [["job", "Job", "state", "State", "RUNNING", "latest_heartbeat", "last_scheduler_heartbeat_for_testing_1"], ["SchedulerJobRunner", "job", "job"], ["session", "add", "job"]], "last_scheduler_heartbeat_for_testing_1": [["last_scheduler_heartbeat_for_testing_1", "timezone", "utcnow"], ["job", "Job", "state", "State", "RUNNING", "latest_heartbeat", "last_scheduler_heartbeat_for_testing_1"], ["last_scheduler_heartbeat_for_testing_1", "isoformat", "resp_json"]], "resp_json": [["resp_json", "self", "client", "get", "json"], ["last_scheduler_heartbeat_for_testing_1", "isoformat", "resp_json"]]}, "name": "test_healthy_scheduler_status", "params": {"self": "", "session": ""}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["resp_json", "self", "client", "get", "json"]], "session": [["session", "add", "job"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.19721865139859207], ["recidiviz.persistence.database.session.Session", 0.1033441585924548]]}, "q_name": "TestGetHealth.test_healthy_scheduler_status", "ret_exprs": [], "ret_type": "", "variables": {"job": "", "last_scheduler_heartbeat_for_testing_1": "", "resp_json": ""}, "variables_p": {"job": [["worker.jobs.base.subprocess_job.SubprocessJob", 0.1253036961358873], ["str", 0.09675660960133949]], "last_scheduler_heartbeat_for_testing_1": [["frozenset[int]", 0.12529751087123103], ["Pattern[str]", 0.08881260741870452], ["int", 0.0843746770264645]], "resp_json": [["Dict[Any, str]", 0.27369949636138613], ["Dict[str, Any]", 0.1978077267686323], ["Dict[int, str]", 0.13630158181458057], ["Dict[Any, List[Any]]", 0.11010995289550278], ["dict", 0.09525605562553155], ["Dict[str, int]", 0.09419780045931565], ["Dict[str, Union[Any, str]]", 0.09262738607505093]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [76, 9]], "fn_var_ln": {"job": [[66, 8], [66, 11]], "last_scheduler_heartbeat_for_testing_2": [[65, 8], [65, 46]], "resp_json": [[70, 8], [70, 17]]}, "fn_var_occur": {"job": [["job", "Job", "state", "State", "RUNNING", "latest_heartbeat", "last_scheduler_heartbeat_for_testing_2"], ["SchedulerJobRunner", "job", "job"], ["session", "add", "job"]], "last_scheduler_heartbeat_for_testing_2": [["last_scheduler_heartbeat_for_testing_2", "timezone", "utcnow", "timedelta", "minutes"], ["job", "Job", "state", "State", "RUNNING", "latest_heartbeat", "last_scheduler_heartbeat_for_testing_2"], ["last_scheduler_heartbeat_for_testing_2", "isoformat", "resp_json"]], "resp_json": [["resp_json", "self", "client", "get", "json"], ["last_scheduler_heartbeat_for_testing_2", "isoformat", "resp_json"]]}, "name": "test_unhealthy_scheduler_is_slow", "params": {"self": "", "session": ""}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["resp_json", "self", "client", "get", "json"]], "session": [["session", "add", "job"], ["session", "commit"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["sqlalchemy.orm.session.Session", 0.20859010404477202], ["recidiviz.persistence.database.session.Session", 0.0961241296136855]]}, "q_name": "TestGetHealth.test_unhealthy_scheduler_is_slow", "ret_exprs": [], "ret_type": "", "variables": {"job": "", "last_scheduler_heartbeat_for_testing_2": "", "resp_json": ""}, "variables_p": {"job": [["worker.jobs.base.subprocess_job.SubprocessJob", 0.1253036961358873], ["str", 0.09675660960133949]], "last_scheduler_heartbeat_for_testing_2": [["int", 0.1271974204924659], ["List[Tuple[Any, Any]]", 0.08975456188416119]], "resp_json": [["Dict[Any, str]", 0.27369949636138613], ["Dict[str, Any]", 0.1978077267686323], ["Dict[int, str]", 0.13630158181458057], ["Dict[Any, List[Any]]", 0.11010995289550278], ["dict", 0.09525605562553155], ["Dict[str, int]", 0.09419780045931565], ["Dict[str, Union[Any, str]]", 0.09262738607505093]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [82, 75]], "fn_var_ln": {"resp_json": [[79, 8], [79, 17]]}, "fn_var_occur": {"resp_json": [["resp_json", "self", "client", "get", "json"], ["resp_json", "None"]]}, "name": "test_unhealthy_scheduler_no_job", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["resp_json", "self", "client", "get", "json"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetHealth.test_unhealthy_scheduler_no_job", "ret_exprs": [], "ret_type": "", "variables": {"resp_json": ""}, "variables_p": {"resp_json": [["dict", 0.9999999999999998]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [89, 75]], "fn_var_ln": {"resp_json": [[87, 8], [87, 17]], "side_effect": [[86, 8], [86, 40]]}, "fn_var_occur": {"resp_json": [["resp_json", "self", "client", "get", "json"], ["resp_json", "None"]], "side_effect": [["most_recent_job_mock", "side_effect", "Exception"]]}, "name": "test_unhealthy_metadatabase_status", "params": {"most_recent_job_mock": "", "self": ""}, "params_descr": {"most_recent_job_mock": "", "self": ""}, "params_occur": {"most_recent_job_mock": [["most_recent_job_mock", "side_effect", "Exception"]], "self": [["resp_json", "self", "client", "get", "json"]]}, "params_p": {"args": [], "kwargs": [], "most_recent_job_mock": [["Dict[str, Dict[str, str]]", 0.08718945809303398]], "self": []}, "q_name": "TestGetHealth.test_unhealthy_metadatabase_status", "ret_exprs": [], "ret_type": "", "variables": {"resp_json": "", "side_effect": ""}, "variables_p": {"resp_json": [["dict", 0.9999999999999998]], "side_effect": [["Dict[int, Dict[str, Any]]", 0.6666666663660823], ["str", 0.33333333318785713], ["Tuple[Literal, Literal, Literal]", 4.058338345055509e-10], ["List[str]", 1.83187435481213e-11], ["mock.MagicMock", 9.757514922112584e-12]]}}], "name": "TestGetHealth", "q_name": "TestGetHealth", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "datetime", "timedelta", "unittest", "mock", "pytest", "airflow", "jobs", "job", "Job", "airflow", "jobs", "scheduler_job_runner", "SchedulerJobRunner", "airflow", "utils", "timezone", "airflow", "utils", "session", "create_session", "provide_session", "airflow", "utils", "state", "State"], "mod_var_ln": {"HEALTHY": [[30, 0], [30, 7]], "UNHEALTHY": [[31, 0], [31, 9]]}, "mod_var_occur": {"HEALTHY": [], "UNHEALTHY": []}, "no_types_annot": {"D": 1, "I": 0, "U": 22}, "session_id": "fsqitvT-5EgxjH2CW0It7ZmT4ZT-f5suQJEoOrkjeVU", "set": null, "tc": [false, null], "type_annot_cove": 0.04, "typed_seq": "", "untyped_seq": "", "variables": {"HEALTHY": "", "UNHEALTHY": ""}, "variables_p": {"HEALTHY": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "UNHEALTHY": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}}