{"error": null, "response": {"classes": [{"cls_lc": [[82, 0], [92, 23]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[84, 4], [89, 73]], "fn_var_ln": {"app": [[85, 8], [85, 16]], "client": [[86, 8], [86, 19]], "default_time": [[88, 8], [88, 25]], "default_time_2": [[89, 8], [89, 27]]}, "fn_var_occur": {"app": [["self", "app", "configured_app"], ["self", "client", "self", "app", "test_client"]], "client": [["self", "client", "self", "app", "test_client"]], "default_time": [["self", "default_time", "timezone", "parse"]], "default_time_2": [["self", "default_time_2", "timezone", "parse"]]}, "name": "setup_attrs", "params": {"configured_app": "", "self": ""}, "params_descr": {"configured_app": "", "self": ""}, "params_occur": {"configured_app": [["self", "app", "configured_app"]], "self": [["self", "app", "configured_app"], ["self", "client", "self", "app", "test_client"], ["self", "default_time", "timezone", "parse"], ["self", "default_time_2", "timezone", "parse"]]}, "params_p": {"args": [], "configured_app": [], "kwargs": [], "self": []}, "q_name": "TestEventLogEndpoint.setup_attrs", "ret_exprs": [], "ret_type": "None", "variables": {"app": "", "client": "", "default_time": "", "default_time_2": ""}, "variables_p": {"app": [["Dict[str, str]", 0.07009332417168512]], "client": [["int", 0.75954940801549], ["Final", 0.1631853350242139], ["Type[nextcloudappstore.core.models.AppRating]", 0.0772652569602961]], "default_time": [["int", 0.5397398319965684], ["float", 0.36502720471428657]], "default_time_2": [["int", 0.5397398319965684], ["float", 0.36502720471428657]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 4], [92, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestEventLogEndpoint.teardown_method", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestEventLogEndpoint", "q_name": "TestEventLogEndpoint", "variables": {}, "variables_p": {}}, {"cls_lc": [[95, 0], [134, 42]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[96, 4], [111, 9]], "fn_var_ln": {"event_log_id": [[97, 8], [97, 20]], "response": [[98, 8], [98, 16]]}, "fn_var_occur": {"event_log_id": [["event_log_id", "log_model", "id"], ["response", "self", "client", "get", "event_log_id", "environ_overrides"], ["response", "json", "event_log_id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]], "response": [["response", "self", "client", "get", "event_log_id", "environ_overrides"], ["response", "status_code"], ["response", "json", "event_log_id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]]}, "name": "test_should_respond_200", "params": {"log_model": "", "self": ""}, "params_descr": {"log_model": "", "self": ""}, "params_occur": {"log_model": [["event_log_id", "log_model", "id"]], "self": [["response", "self", "client", "get", "event_log_id", "environ_overrides"], ["response", "json", "event_log_id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]]}, "params_p": {"args": [], "kwargs": [], "log_model": [["str", 0.21021334266993497], ["abilian.core.models.subjects.User", 0.08964876890446877]], "self": []}, "q_name": "TestGetEventLog.test_should_respond_200", "ret_exprs": [], "ret_type": "", "variables": {"event_log_id": "", "response": ""}, "variables_p": {"event_log_id": [["str", 0.21811834237611766]], "response": [["dict", 0.1523195700573718], ["Generator[Any, None, None]", 0.09246614335326953], ["Dict[str, str]", 0.07614909653474236]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [121, 26]], "fn_var_ln": {"response": [[114, 8], [114, 16]]}, "fn_var_occur": {"response": [["response", "self", "client", "get", "environ_overrides"], ["response", "status_code"], ["None", "EXCEPTIONS_LINK_MAP", "response", "json"]]}, "name": "test_should_respond_404", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["response", "self", "client", "get", "environ_overrides"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetEventLog.test_should_respond_404", "ret_exprs": [], "ret_type": "", "variables": {"response": ""}, "variables_p": {"response": [["dict", 0.534371426532494], ["Dict[str, Any]", 0.17785115190968823], ["Dict[str, Dict[str, Any]]", 0.11044641934677588], ["Dict[str, str]", 0.09305421745342157], ["Dict[Any, dict]", 0.08427678475762022]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[123, 4], [128, 28]], "fn_var_ln": {"event_log_id": [[124, 8], [124, 20]], "response": [[126, 8], [126, 16]]}, "fn_var_occur": {"event_log_id": [["event_log_id", "log_model", "id"], ["response", "self", "client", "get", "event_log_id"]], "response": [["response", "self", "client", "get", "event_log_id"], ["assert_401", "response"]]}, "name": "test_should_raises_401_unauthenticated", "params": {"log_model": "", "self": ""}, "params_descr": {"log_model": "", "self": ""}, "params_occur": {"log_model": [["event_log_id", "log_model", "id"]], "self": [["response", "self", "client", "get", "event_log_id"]]}, "params_p": {"args": [], "kwargs": [], "log_model": [["str", 0.21021334266993497], ["abilian.core.models.subjects.User", 0.08964876890446877]], "self": []}, "q_name": "TestGetEventLog.test_should_raises_401_unauthenticated", "ret_exprs": [], "ret_type": "", "variables": {"event_log_id": "", "response": ""}, "variables_p": {"event_log_id": [["str", 0.807306610130176], ["Tuple[str, str]", 0.09810378149545197], ["Dict[int, str]", 0.09458960837437207]], "response": [["Dict[Any, int]", 0.5004176068371704], ["Dict[Any, Dict[str, Any]]", 0.0989924993618326], ["Dict[str, Union[Any, Any]]", 0.09423513504499012]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[130, 4], [134, 42]], "fn_var_ln": {"response": [[131, 8], [131, 16]]}, "fn_var_occur": {"response": [["response", "self", "client", "get", "environ_overrides"], ["response", "status_code"]]}, "name": "test_should_raise_403_forbidden", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["response", "self", "client", "get", "environ_overrides"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGetEventLog.test_should_raise_403_forbidden", "ret_exprs": [], "ret_type": "", "variables": {"response": ""}, "variables_p": {"response": [["Dict[str, str]", 0.11463885879705198], ["requests.models.Response", 0.09157010011454825], ["dict", 0.09122336511143442]]}}], "name": "TestGetEventLog", "q_name": "TestGetEventLog", "variables": {}, "variables_p": {}}, {"cls_lc": [[137, 0], [234, 28]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[138, 4], [182, 9]], "fn_var_ln": {"dttm": [[142, 8], [142, 24]], "log_model_1": [[139, 8], [139, 19]], "log_model_2": [[140, 8], [140, 19]], "log_model_3": [[141, 8], [141, 19]], "response": [[146, 8], [146, 16]]}, "fn_var_occur": {"dttm": [["log_model_3", "dttm", "self", "default_time_2"]], "log_model_1": [["log_model_1", "create_log_model", "event", "when", "self", "default_time"], ["response", "json", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat"]], "log_model_2": [["log_model_2", "create_log_model", "event", "when", "self", "default_time_2"], ["response", "json", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat"]], "log_model_3": [["log_model_3", "Log", "event", "owner", "extra"], ["log_model_3", "dttm", "self", "default_time_2"], ["session", "add", "log_model_3"], ["response", "json", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat"]], "response": [["response", "self", "client", "get", "environ_overrides"], ["response", "status_code"], ["response", "json", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat"]]}, "name": "test_should_respond_200", "params": {"create_log_model": "", "self": "", "session": ""}, "params_descr": {"create_log_model": "", "self": "", "session": ""}, "params_occur": {"create_log_model": [["log_model_1", "create_log_model", "event", "when", "self", "default_time"], ["log_model_2", "create_log_model", "event", "when", "self", "default_time_2"]], "self": [["log_model_1", "create_log_model", "event", "when", "self", "default_time"], ["log_model_2", "create_log_model", "event", "when", "self", "default_time_2"], ["log_model_3", "dttm", "self", "default_time_2"], ["response", "self", "client", "get", "environ_overrides"], ["response", "json", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat"]], "session": [["session", "add", "log_model_3"], ["session", "flush"]]}, "params_p": {"args": [], "create_log_model": [["str", 0.39344808210628324]], "kwargs": [], "self": [], "session": [["deeplearning.ml4pl.models.log_database.Database", 0.22494340722724493]]}, "q_name": "TestGetEventLogs.test_should_respond_200", "ret_exprs": [], "ret_type": "", "variables": {"dttm": "", "log_model_1": "", "log_model_2": "", "log_model_3": "", "response": ""}, "variables_p": {"dttm": [["str", 0.551211708656612], ["Dict[str, str]", 0.17201126721971044], ["int", 0.08549719344578319], ["Iterator[Any]", 0.08521619186893954]], "log_model_1": [["str", 0.41848515863176905], ["List[str]", 0.19188293161536518], ["int", 0.09012134770343788]], "log_model_2": [["str", 0.41848515863176905], ["List[str]", 0.19188293161536518], ["int", 0.09012134770343788]], "log_model_3": [["str", 0.7945551504036861], ["Dict[str, str]", 0.1075758326750248]], "response": [["Dict[str, str]", 0.10836323601360211]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [229, 9]], "fn_var_ln": {"dttm": [[188, 8], [188, 24]], "log_model_1": [[185, 8], [185, 19]], "log_model_2": [[186, 8], [186, 19]], "log_model_3": [[187, 8], [187, 19]], "response": [[191, 8], [191, 16]]}, "fn_var_occur": {"dttm": [["log_model_3", "dttm", "self", "default_time_2"]], "log_model_1": [["log_model_1", "create_log_model", "event", "when", "self", "default_time"], ["response", "json", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]], "log_model_2": [["log_model_2", "create_log_model", "event", "when", "self", "default_time_2", "owner"], ["response", "json", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]], "log_model_3": [["log_model_3", "Log", "event", "owner", "extra"], ["log_model_3", "dttm", "self", "default_time_2"], ["session", "add", "log_model_3"], ["response", "json", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]], "response": [["response", "self", "client", "get", "environ_overrides"], ["response", "status_code"], ["response", "json", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]]}, "name": "test_order_eventlogs_by_owner", "params": {"create_log_model": "", "self": "", "session": ""}, "params_descr": {"create_log_model": "", "self": "", "session": ""}, "params_occur": {"create_log_model": [["log_model_1", "create_log_model", "event", "when", "self", "default_time"], ["log_model_2", "create_log_model", "event", "when", "self", "default_time_2", "owner"]], "self": [["log_model_1", "create_log_model", "event", "when", "self", "default_time"], ["log_model_2", "create_log_model", "event", "when", "self", "default_time_2", "owner"], ["log_model_3", "dttm", "self", "default_time_2"], ["response", "self", "client", "get", "environ_overrides"], ["response", "json", "log_model_2", "id", "self", "default_time", "isoformat", "self", "default_time_2", "isoformat", "None", "log_model_3", "id", "None", "None", "None", "self", "default_time_2", "isoformat", "log_model_1", "id", "self", "default_time", "isoformat", "self", "default_time", "isoformat", "None"]], "session": [["session", "add", "log_model_3"], ["session", "flush"]]}, "params_p": {"args": [], "create_log_model": [["bool", 0.2000753598503545], ["Literal", 0.16912531703162065], ["Optional[str]", 0.0803753514045587], ["int", 0.0775239070154657]], "kwargs": [], "self": [], "session": [["deeplearning.ml4pl.models.log_database.Database", 0.3108740768746894]]}, "q_name": "TestGetEventLogs.test_order_eventlogs_by_owner", "ret_exprs": [], "ret_type": "", "variables": {"dttm": "", "log_model_1": "", "log_model_2": "", "log_model_3": "", "response": ""}, "variables_p": {"dttm": [["str", 0.551211708656612], ["Dict[str, str]", 0.17201126721971044], ["int", 0.08549719344578319], ["Iterator[Any]", 0.08521619186893954]], "log_model_1": [["str", 0.41848515863176905], ["List[str]", 0.19188293161536518], ["int", 0.09012134770343788]], "log_model_2": [["str", 0.279406834891618], ["List[int]", 0.20879645734623187], ["Optional[Iterable[str]]", 0.10434344763225396]], "log_model_3": [["str", 0.7945551504036861], ["Dict[str, str]", 0.1075758326750248]], "response": [["Dict[str, str]", 0.10836323601360211]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[231, 4], [234, 28]], "fn_var_ln": {"response": [[232, 8], [232, 16]]}, "fn_var_occur": {"response": [["response", "self", "client", "get"], ["assert_401", "response"]]}, "name": "test_should_raises_401_unauthenticated", "params": {"log_model": "", "self": ""}, "params_descr": {"log_model": "", "self": ""}, "params_occur": {"log_model": [], "self": [["response", "self", "client", "get"]]}, "params_p": {"args": [], "kwargs": [], "log_model": [["str", 0.20990466225382276], ["tests.testmodels.Signals", 0.11582538533690806], ["bool", 0.0913551617867889], ["List[str]", 0.08578163856307751]], "self": []}, "q_name": "TestGetEventLogs.test_should_raises_401_unauthenticated", "ret_exprs": [], "ret_type": "", "variables": {"response": ""}, "variables_p": {"response": [["Dict[int, Any]", 0.6863972665804636], ["Dict[str, Union[Any, Any]]", 0.12425022214555917], ["Dict[str, str]", 0.0970807003934105], ["Dict[str, tuple]", 0.09227181088056673]]}}], "name": "TestGetEventLogs", "q_name": "TestGetEventLogs", "variables": {}, "variables_p": {}}, {"cls_lc": [[237, 0], [322, 108]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[276, 4], [286, 40]], "fn_var_ln": {"events": [[285, 8], [285, 14]], "log_models": [[277, 8], [277, 18]], "response": [[281, 8], [281, 16]]}, "fn_var_occur": {"events": [["events", "event_log", "event_log", "response", "json"], ["events", "expected_events"]], "log_models": [["log_models", "self", "_create_event_logs", "task_instance"], ["session", "add_all", "log_models"]], "response": [["response", "self", "client", "get", "url", "environ_overrides"], ["response", "status_code"], ["response", "json"], ["events", "event_log", "event_log", "response", "json"]]}, "name": "test_handle_limit_and_offset", "params": {"expected_events": "", "self": "", "session": "", "task_instance": "", "url": ""}, "params_descr": {"expected_events": "", "self": "", "session": "", "task_instance": "", "url": ""}, "params_occur": {"expected_events": [["events", "expected_events"]], "self": [["log_models", "self", "_create_event_logs", "task_instance"], ["response", "self", "client", "get", "url", "environ_overrides"]], "session": [["session", "add_all", "log_models"], ["session", "commit"]], "task_instance": [["log_models", "self", "_create_event_logs", "task_instance"]], "url": [["response", "self", "client", "get", "url", "environ_overrides"]]}, "params_p": {"args": [], "expected_events": [["int", 0.1011346938336448]], "kwargs": [], "self": [], "session": [["estimark.application.domain.models.Entity", 0.10185273544036157]], "task_instance": [["Callable", 0.11866937596363074], ["aiohttp.test_utils.TestServer", 0.08981775372986324]], "url": [["aiohttp.test_utils.TestClient", 0.5249204416679826], ["core.models.Recipe", 0.09879324634710432]]}, "q_name": "TestGetEventLogPagination.test_handle_limit_and_offset", "ret_exprs": [], "ret_type": "", "variables": {"events": "", "log_models": "", "response": ""}, "variables_p": {"events": [["str", 0.42015723491055595], ["Counter[str]", 0.1000812906524571], ["list", 0.09348180189701924], ["Dict[str, Union[bool, str]]", 0.09231408425900059], ["List[List[int]]", 0.0913257295899246]], "log_models": [["int", 0.5982425837863303], ["str", 0.1001432369851344], ["List[str]", 0.09745283436144739], ["range", 0.09278895445491363]], "response": [["requests.models.Response", 0.08001304650234811]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[288, 4], [297, 54]], "fn_var_ln": {"log_models": [[289, 8], [289, 18]], "response": [[293, 8], [293, 16]]}, "fn_var_occur": {"log_models": [["log_models", "self", "_create_event_logs", "task_instance"], ["session", "add_all", "log_models"]], "response": [["response", "self", "client", "get", "environ_overrides"], ["response", "status_code"], ["response", "json"], ["len", "response", "json"]]}, "name": "test_should_respect_page_size_limit_default", "params": {"self": "", "session": "", "task_instance": ""}, "params_descr": {"self": "", "session": "", "task_instance": ""}, "params_occur": {"self": [["log_models", "self", "_create_event_logs", "task_instance"], ["response", "self", "client", "get", "environ_overrides"]], "session": [["session", "add_all", "log_models"], ["session", "flush"]], "task_instance": [["log_models", "self", "_create_event_logs", "task_instance"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["estimark.application.domain.models.Entity", 0.07790480574852529], ["abilian.core.models.subjects.User", 0.07643763625003162]], "task_instance": [["list", 0.12387715863075256], ["aiohttp.test_utils.TestServer", 0.10287568304925648], ["Callable", 0.1017941171288116]]}, "q_name": "TestGetEventLogPagination.test_should_respect_page_size_limit_default", "ret_exprs": [], "ret_type": "", "variables": {"log_models": "", "response": ""}, "variables_p": {"log_models": [["int", 0.5982425837863303], ["str", 0.1001432369851344], ["List[str]", 0.09745283436144739], ["range", 0.09278895445491363]], "response": [["Dict[str, str]", 0.10476389031229316], ["requests.models.Response", 0.10261734675005395]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [309, 45]], "fn_var_ln": {"log_models": [[300, 8], [300, 18]], "msg": [[308, 8], [308, 11]], "response": [[304, 8], [304, 16]]}, "fn_var_occur": {"log_models": [["log_models", "self", "_create_event_logs", "task_instance"], ["session", "add_all", "log_models"]], "msg": [["response", "json", "msg"]], "response": [["response", "self", "client", "get", "environ_overrides"], ["response", "status_code"], ["response", "json", "msg"]]}, "name": "test_should_raise_400_for_invalid_order_by_name", "params": {"self": "", "session": "", "task_instance": ""}, "params_descr": {"self": "", "session": "", "task_instance": ""}, "params_occur": {"self": [["log_models", "self", "_create_event_logs", "task_instance"], ["response", "self", "client", "get", "environ_overrides"]], "session": [["session", "add_all", "log_models"], ["session", "flush"]], "task_instance": [["log_models", "self", "_create_event_logs", "task_instance"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["deeplearning.ml4pl.models.log_database.Database", 0.18231387741271515]], "task_instance": [["str", 0.16951812023125412], ["list", 0.11643943428440787], ["aiohttp.test_utils.TestServer", 0.10565280071440866]]}, "q_name": "TestGetEventLogPagination.test_should_raise_400_for_invalid_order_by_name", "ret_exprs": [], "ret_type": "", "variables": {"log_models": "", "msg": "", "response": ""}, "variables_p": {"log_models": [["int", 0.5982425837863303], ["str", 0.1001432369851344], ["List[str]", 0.09745283436144739], ["range", 0.09278895445491363]], "msg": [["Dict[str, Union[Any, Any, Any]]", 0.16081759959548833], ["List[str]", 0.1474524363620391], ["Dict[str, str]", 0.14416712282581612], ["Dict[Any, str]", 0.10057888507522847], ["Dict[str, bool]", 0.09529776481930552], ["str", 0.08987463929603287], ["Dict[str, None]", 0.08972124070549489], ["list", 0.08871269540571486], ["Dict[Any, Union[Any, Any]]", 0.0833776159148799]], "response": [["Dict[str, str]", 0.20454178267778328]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[312, 4], [319, 54]], "fn_var_ln": {"log_models": [[313, 8], [313, 18]], "response": [[317, 8], [317, 16]]}, "fn_var_occur": {"log_models": [["log_models", "self", "_create_event_logs", "task_instance"], ["session", "add_all", "log_models"]], "response": [["response", "self", "client", "get", "environ_overrides"], ["response", "status_code"], ["len", "response", "json"]]}, "name": "test_should_return_conf_max_if_req_max_above_conf", "params": {"self": "", "session": "", "task_instance": ""}, "params_descr": {"self": "", "session": "", "task_instance": ""}, "params_occur": {"self": [["log_models", "self", "_create_event_logs", "task_instance"], ["response", "self", "client", "get", "environ_overrides"]], "session": [["session", "add_all", "log_models"], ["session", "flush"]], "task_instance": [["log_models", "self", "_create_event_logs", "task_instance"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["deeplearning.ml4pl.models.log_database.Database", 0.1535224883485135], ["abilian.core.models.subjects.User", 0.0719265884506956]], "task_instance": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.17134123182480532], ["list", 0.12392433015059375], ["aiohttp.test_utils.TestServer", 0.10394042945745204], ["Callable", 0.10359983455658785]]}, "q_name": "TestGetEventLogPagination.test_should_return_conf_max_if_req_max_above_conf", "ret_exprs": [], "ret_type": "", "variables": {"log_models": "", "response": ""}, "variables_p": {"log_models": [["int", 0.5982425837863303], ["str", 0.1001432369851344], ["List[str]", 0.09745283436144739], ["range", 0.09278895445491363]], "response": [["Dict[str, str]", 0.1831531011703243], ["list", 0.09496903093425607], ["dict", 0.09185663171466667]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[321, 4], [322, 108]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_create_event_logs", "params": {"count": "", "self": "", "task_instance": ""}, "params_descr": {"count": "", "self": "", "task_instance": ""}, "params_occur": {"count": [["Log", "event", "str", "i", "task_instance", "task_instance", "i", "range", "count"]], "self": [], "task_instance": [["Log", "event", "str", "i", "task_instance", "task_instance", "i", "range", "count"]]}, "params_p": {"args": [], "count": [["Dict[str, Any]", 0.0961561634095973], ["str", 0.07858107739842979]], "kwargs": [], "self": [], "task_instance": [["Dict[str, Any]", 0.0961561634095973], ["str", 0.07858107739842979]]}, "q_name": "TestGetEventLogPagination._create_event_logs", "ret_exprs": ["return [Log(event=\"TEST_EVENT_\" + str(i), task_instance=task_instance) for i in range(1, count + 1)]"], "ret_type": "", "ret_type_p": [["Dict[str, Any]", 0.22058140758290856], ["Dict[str, Dict[str, Any]]", 0.18535909395765537], ["jumeaux.models.Reqs2ReqsAddOnPayload", 0.10452243855851162], ["dict", 0.09500412549062538], ["services.ticketing.models.ticket_evenTicketEvent", 0.09282153844711956]], "variables": {}, "variables_p": {}}], "name": "TestGetEventLogPagination", "q_name": "TestGetEventLogPagination", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 0], [44, 52]], "fn_var_ln": {"app": [[32, 4], [32, 7]]}, "fn_var_occur": {"app": [["app", "minimal_app_for_api"], ["create_user", "app", "username", "role_name", "permissions", "permissions", "ACTION_CAN_READ", "permissions", "RESOURCE_AUDIT_LOG"], ["create_user", "app", "username", "role_name"], ["delete_user", "app", "username"], ["delete_user", "app", "username"]]}, "name": "configured_app", "params": {"minimal_app_for_api": ""}, "params_descr": {"minimal_app_for_api": ""}, "params_occur": {"minimal_app_for_api": [["app", "minimal_app_for_api"]]}, "params_p": {"args": [], "kwargs": [], "minimal_app_for_api": [["bool", 0.18142612862882707], ["Dict[str, Any]", 0.10163263773129934], ["cmk.utils.type_defs.HostName", 0.08256763785591577]]}, "q_name": "configured_app", "ret_exprs": [], "ret_type": "", "variables": {"app": ""}, "variables_p": {"app": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[48, 0], [54, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task_instance", "params": {"create_task_instance": "", "request": "", "session": ""}, "params_descr": {"create_task_instance": "", "request": "", "session": ""}, "params_occur": {"create_task_instance": [["create_task_instance", "session", "session", "dag_id", "task_id", "execution_date", "request", "instance", "default_time"]], "request": [["create_task_instance", "session", "session", "dag_id", "task_id", "execution_date", "request", "instance", "default_time"]], "session": [["create_task_instance", "session", "session", "dag_id", "task_id", "execution_date", "request", "instance", "default_time"]]}, "params_p": {"args": [], "create_task_instance": [["zerver.models.UserProfile", 0.19519553346463409], ["int", 0.09500167942517569], ["bytes", 0.09500167942517569]], "kwargs": [], "request": [["zerver.models.UserProfile", 0.19519553346463409], ["int", 0.09500167942517569], ["bytes", 0.09500167942517569]], "session": [["zerver.models.UserProfile", 0.19519553346463409], ["int", 0.09500167942517569], ["bytes", 0.09500167942517569]]}, "q_name": "task_instance", "ret_exprs": ["return create_task_instance( session=session, dag_id=\"TEST_DAG_ID\", task_id=\"TEST_TASK_ID\", execution_date=request.instance.default_time,)"], "ret_type": "", "ret_type_p": [["str", 0.22543483984268653], ["Callable", 0.10658356091828156], ["dict", 0.09364610384401353], ["Mapping[str, Any]", 0.09224420798007121], ["Dict[str, Any]", 0.09140511920556016], ["Dict[str, Set[str]]", 0.091324632570191]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 0], [62, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "log_model", "params": {"create_log_model": "", "request": ""}, "params_descr": {"create_log_model": "", "request": ""}, "params_occur": {"create_log_model": [["create_log_model", "event", "when", "request", "instance", "default_time"]], "request": [["create_log_model", "event", "when", "request", "instance", "default_time"]]}, "params_p": {"args": [], "create_log_model": [["dict", 0.19546695009962842]], "kwargs": [], "request": [["dict", 0.19546695009962842]]}, "q_name": "log_model", "ret_exprs": ["return create_log_model( event=\"TEST_EVENT\", when=request.instance.default_time,)"], "ret_type": "", "ret_type_p": [["Optional[int]", 0.18542758152651878], ["cmk.utils.type_defs.EventRule", 0.12523977511226536], ["int", 0.09271379076325939], ["str", 0.09271379076325939]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [77, 24]], "fn_var_ln": {"dttm": [[73, 8], [73, 22]], "log_model": [[68, 8], [68, 17]]}, "fn_var_occur": {"dttm": [["log_model", "dttm", "when"]], "log_model": [["log_model", "Log", "event", "event", "task_instance", "task_instance", "kwargs"], ["log_model", "dttm", "when"], ["session", "add", "log_model"]]}, "name": "maker", "params": {"event": "", "kwargs": "", "when": ""}, "params_descr": {"event": "", "kwargs": "", "when": ""}, "params_occur": {"event": [["log_model", "Log", "event", "event", "task_instance", "task_instance", "kwargs"]], "kwargs": [["log_model", "Log", "event", "event", "task_instance", "task_instance", "kwargs"]], "when": [["log_model", "dttm", "when"]]}, "params_p": {"args": [], "event": [["Dict[str, Any]", 0.2750905325968831], ["dict", 0.09424918400445025]], "kwargs": [], "when": [["dict", 0.1196494329584715], ["Dict[str, Any]", 0.10065489862067022], ["List[zerver.models.Stream]", 0.0962593594114249]]}, "q_name": "create_log_model.<locals>.maker", "ret_exprs": ["return log_model"], "ret_type": "", "ret_type_p": [["str", 0.27635873633941477], ["int", 0.19407702275117295], ["List[str]", 0.0996442397779207], ["utils.CWLObjectType", 0.08662781212048763]], "variables": {"dttm": "", "log_model": ""}, "variables_p": {"dttm": [["Dict[Tuple[Any, Any], Any]", 0.3196523703675296], ["Dict[str, Union[Any, bytes]]", 0.27401570307625694], ["int", 0.11803199316076288], ["Dict[str, Union[Any, str]]", 0.09133856769208565], ["Dict[str, Union[Any, Any, bytes]]", 0.09133856769208565]], "log_model": [["str", 0.4356614320547126], ["int", 0.3785488225829915], ["dict", 0.09654571851211446], ["List[Tuple[str, int]]", 0.08924402685018129]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[66, 0], [79, 16]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_log_model", "params": {"create_task_instance": "", "request": "", "session": "", "task_instance": ""}, "params_descr": {"create_task_instance": "", "request": "", "session": "", "task_instance": ""}, "params_occur": {"create_task_instance": [], "request": [], "session": [], "task_instance": []}, "params_p": {"args": [], "create_task_instance": [["dict", 0.3351492444925589], ["bool", 0.17615917954078897], ["Dict[str, Any]", 0.15746051368762817]], "kwargs": [], "request": [["dict", 0.3351492444925589], ["bool", 0.17615917954078897], ["Dict[str, Any]", 0.15746051368762817]], "session": [["dict", 0.3351492444925589], ["bool", 0.17615917954078897], ["Dict[str, Any]", 0.15746051368762817]], "task_instance": [["dict", 0.3351492444925589], ["bool", 0.17615917954078897], ["Dict[str, Any]", 0.15746051368762817]]}, "q_name": "create_log_model", "ret_exprs": ["return maker"], "ret_type": "", "ret_type_p": [["int", 0.7005970930960372], ["Tuple[int, int, int, int]", 0.11676618218267287], ["float", 0.06087890824042996]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "pytest", "airflow", "api_connexion", "exceptions", "EXCEPTIONS_LINK_MAP", "airflow", "models", "Log", "airflow", "security", "permissions", "airflow", "utils", "timezone", "tests", "test_utils", "api_connexion_utils", "assert_401", "create_user", "delete_user", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_logs"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 2, "I": 0, "U": 84}, "session_id": "99OpoDIYF5Vrm_JjjmggTVFJe1KyD0sX6QSG8wA23dU", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}