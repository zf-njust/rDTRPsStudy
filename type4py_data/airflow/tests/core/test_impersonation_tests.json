{"error": null, "response": {"classes": [{"cls_lc": [[91, 0], [123, 40]], "cls_var_ln": {"dagbag": [[92, 4], [92, 10]]}, "cls_var_occur": {"dagbag": []}, "funcs": [{"docstring": {"func": "Setup test cases for all impersonation tests.", "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [102, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_impersonation_tests", "params": {"create_user": "", "self": "", "set_permissions": ""}, "params_descr": {"create_user": "", "self": "", "set_permissions": ""}, "params_occur": {"create_user": [], "self": [], "set_permissions": []}, "params_p": {"args": [], "create_user": [["str", 0.1850654399015993], ["List[Dict]", 0.11737449201786872], ["List[str]", 0.10010530723975701], ["Type[T]", 0.09292618989926578], ["Optional[str]", 0.09213925000233353], ["Optional[Dict[str, Any]]", 0.09159212215243123]], "kwargs": [], "self": [], "set_permissions": [["str", 0.1850654399015993], ["List[Dict]", 0.11737449201786872], ["List[str]", 0.10010530723975701], ["Type[T]", 0.09292618989926578], ["Optional[str]", 0.09213925000233353], ["Optional[Dict[str, Any]]", 0.09159212215243123]]}, "q_name": "BaseImpersonationTest.setup_impersonation_tests", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Get DagBag and print statistic into the log.", "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [110, 21]], "fn_var_ln": {"dagbag": [[107, 8], [107, 14]]}, "fn_var_occur": {"dagbag": [["dagbag", "DagBag", "dag_folder", "dag_folder", "include_examples", "False"], ["logger", "info", "dagbag", "dagbag_report"]]}, "name": "get_dagbag", "params": {"dag_folder": ""}, "params_descr": {"dag_folder": ""}, "params_occur": {"dag_folder": [["dagbag", "DagBag", "dag_folder", "dag_folder", "include_examples", "False"]]}, "params_p": {"args": [], "dag_folder": [["bool", 0.1109987302770198], ["annofabapi.models.Inspection", 0.09066605800566561]], "kwargs": [], "self": []}, "q_name": "BaseImpersonationTest.get_dagbag", "ret_exprs": ["return dagbag"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"dagbag": ""}, "variables_p": {"dagbag": [["qutebrowser.qutebrowser.utils.log.LogFilter", 0.19053050779445838], ["dict", 0.16526427693238183], ["logging.Formatter", 0.08881067886042146], ["Anaconda3.Lib.site-packages.conda.gateways.logging.StdStreamHandler", 0.08626243094147987], ["float", 0.08226513610299087]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [123, 40]], "fn_var_ln": {"dag": [[113, 8], [113, 11]], "job": [[116, 8], [116, 11]], "job_runner": [[117, 8], [117, 18]], "run_id": [[119, 8], [119, 14]], "ti": [[120, 8], [120, 10]]}, "fn_var_occur": {"dag": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["dag", "clear"], ["job_runner", "BackfillJobRunner", "job", "job", "dag", "dag", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["ti", "TaskInstance", "task", "dag", "get_task", "task_id", "run_id", "run_id"]], "job": [["job", "Job"], ["job_runner", "BackfillJobRunner", "job", "job", "dag", "dag", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["run_job", "job", "job", "execute_callable", "job_runner", "_execute"]], "job_runner": [["job_runner", "BackfillJobRunner", "job", "job", "dag", "dag", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["run_job", "job", "job", "execute_callable", "job_runner", "_execute"]], "run_id": [["run_id", "DagRun", "generate_run_id", "DagRunType", "BACKFILL_JOB", "execution_date", "DEFAULT_DATE"], ["ti", "TaskInstance", "task", "dag", "get_task", "task_id", "run_id", "run_id"]], "ti": [["ti", "TaskInstance", "task", "dag", "get_task", "task_id", "run_id", "run_id"], ["ti", "refresh_from_db"], ["ti", "state", "State", "SUCCESS"]]}, "name": "run_backfill", "params": {"dag_id": "", "self": "", "task_id": ""}, "params_descr": {"dag_id": "", "self": "", "task_id": ""}, "params_occur": {"dag_id": [["dag", "self", "dagbag", "get_dag", "dag_id"]], "self": [["dag", "self", "dagbag", "get_dag", "dag_id"]], "task_id": [["ti", "TaskInstance", "task", "dag", "get_task", "task_id", "run_id", "run_id"]]}, "params_p": {"args": [], "dag_id": [["int", 0.8897456494542159], ["medtagger.types.ActionID", 0.11025435054578396]], "kwargs": [], "self": [], "task_id": [["str", 0.5913928924542922], ["List[str]", 0.2023871175741124]]}, "q_name": "BaseImpersonationTest.run_backfill", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "job": "", "job_runner": "", "run_id": "", "ti": ""}, "variables_p": {"dag": [["str", 0.31018897645088067], ["DefaultDict[Any, dict]", 0.20088449272861048], ["int", 0.1032176679742061], ["List[Tuple[int, str, str, str, int]]", 0.1032176679742061], ["datetime.datetime.timedelta", 0.09300905636651682], ["float", 0.09087343376010842]], "job": [["models.groups.Groups", 0.20759240250041328], ["int", 0.12054772767876826], ["dict", 0.10452201107100018], ["list", 0.08787284072284698], ["models.profiles.Profiles", 0.08157110957408717]], "job_runner": [["Dict[Any, str]", 0.10238998589499847]], "run_id": [["str", 0.6530194537854027], ["Set[int]", 0.2235066763788319], ["Dict[str, int]", 0.12347386983576533]], "ti": [["str", 0.3733147092272419], ["int", 0.0925324906207112], ["Dict[int, str]", 0.09018491422148482]]}}], "name": "BaseImpersonationTest", "q_name": "BaseImpersonationTest", "variables": {"dagbag": "airflow.models.DagBag"}, "variables_p": {"dagbag": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[126, 0], [158, 74]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [129, 52]], "fn_var_ln": {"dagbag": [[129, 8], [129, 18]]}, "fn_var_occur": {"dagbag": [["cls", "dagbag", "cls", "get_dagbag", "TEST_DAG_FOLDER"]]}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["cls", "dagbag", "cls", "get_dagbag", "TEST_DAG_FOLDER"]]}, "params_p": {"args": [], "cls": [["Type", 0.1100109671996133], ["int", 0.09526900745422512]], "kwargs": [], "self": []}, "q_name": "TestImpersonation.setup_class", "ret_exprs": [], "ret_type": "", "variables": {"dagbag": ""}, "variables_p": {"dagbag": [["List[str]", 0.36689232604983163], ["int", 0.09579716419397213], ["str", 0.09437800244687945], ["bool", 0.08423012508602351]]}}, {"docstring": {"func": "Tests that impersonating a unix user works", "long_descr": null, "ret": null}, "fn_lc": [[131, 4], [135, 73]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_impersonation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_backfill"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestImpersonation.test_impersonation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "If default_impersonation=None, tests that the job is run", "long_descr": "as the current user (which will be a sudoer)", "ret": null}, "fn_lc": [[137, 4], [145, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_no_impersonation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_backfill"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestImpersonation.test_no_impersonation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "If default_impersonation=TEST_USER, tests that the job defaults", "long_descr": "to running as TEST_USER for a test without 'run_as_user' set.", "ret": null}, "fn_lc": [[147, 4], [153, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_default_impersonation", "params": {"monkeypatch": "", "self": ""}, "params_descr": {"monkeypatch": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "setenv", "TEST_USER"]], "self": [["self", "run_backfill"]]}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [["Dict[str, Sequence[str]]", 0.05458911057450407]], "self": []}, "q_name": "TestImpersonation.test_default_impersonation", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Tests that impersonation using a subdag correctly passes the right configuration.", "long_descr": null, "ret": null}, "fn_lc": [[156, 4], [158, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_impersonation_subdag", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "run_backfill"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestImpersonation.test_impersonation_subdag", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestImpersonation", "q_name": "TestImpersonation", "variables": {}, "variables_p": {}}, {"cls_lc": [[161, 0], [176, 76]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 4], [168, 13]], "fn_var_ln": {"dagbag": [[166, 8], [166, 19]]}, "fn_var_occur": {"dagbag": [["self", "dagbag", "self", "get_dagbag", "TEST_DAG_CORRUPTED_FOLDER"]]}, "name": "setup_dagbag", "params": {"monkeypatch": "", "self": ""}, "params_descr": {"monkeypatch": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "syspath_prepend", "TEST_UTILS_FOLDER"], ["monkeypatch", "undo"]], "self": [["self", "dagbag", "self", "get_dagbag", "TEST_DAG_CORRUPTED_FOLDER"]]}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [["str", 0.183525943645345], ["Iterable[T]", 0.09622103626636413]], "self": []}, "q_name": "TestImpersonationWithCustomPythonPath.setup_dagbag", "ret_exprs": [], "ret_type": "", "variables": {"dagbag": ""}, "variables_p": {"dagbag": [["list", 0.3361795349505507], ["int", 0.1578147319461928], ["set", 0.13438491823146148], ["List[str]", 0.12423443597847474], ["Dict[str, Union[Any, Any]]", 0.08681780505514836], ["Tuple[str, str, str, str, str, str]", 0.0809612312975675], ["Dict[str, Union[Any, Any, Any, Any]]", 0.07960734254060448]]}}, {"docstring": {"func": "Tests that impersonation using a unix user works with custom packages in PYTHONPATH.", "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [176, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_impersonation_custom", "params": {"monkeypatch": "", "self": ""}, "params_descr": {"monkeypatch": "", "self": ""}, "params_occur": {"monkeypatch": [["monkeypatch", "setenv", "TEST_UTILS_FOLDER"]], "self": [["self", "run_backfill"]]}, "params_p": {"args": [], "kwargs": [], "monkeypatch": [["Dict[str, Sequence[str]]", 0.060965641615317465], ["bool", 0.04739232274655214]], "self": []}, "q_name": "TestImpersonationWithCustomPythonPath.test_impersonation_custom", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestImpersonationWithCustomPythonPath", "q_name": "TestImpersonationWithCustomPythonPath", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 0], [57, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_original_docker_image", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "check_original_docker_image", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 0], [69, 5]], "fn_var_ln": {"airflow_home": [[62, 4], [62, 16]]}, "fn_var_occur": {"airflow_home": [["airflow_home", "os", "environ"], ["subprocess", "check_call", "airflow_home", "shell", "True"], ["subprocess", "check_call", "airflow_home", "shell", "True"]]}, "name": "set_permissions", "params": {"check_original_docker_image": ""}, "params_descr": {"check_original_docker_image": ""}, "params_occur": {"check_original_docker_image": []}, "params_p": {"args": [], "check_original_docker_image": [["bool", 0.5164215543100351], ["List[str]", 0.08671837295411068], ["List[Dict[str, Any]]", 0.0841687138605278]], "kwargs": []}, "q_name": "set_permissions", "ret_exprs": [], "ret_type": "", "variables": {"airflow_home": ""}, "variables_p": {"airflow_home": [["str", 0.8842933637721561], ["os._ScandirIterator[str]", 0.11570663622784383]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 0], [88, 63]], "fn_var_ln": {"command": [[79, 8], [79, 15]]}, "fn_var_occur": {"command": [["command", "e", "cmd"], ["pytest", "skip", "e", "command", "command", "e", "stdout", "decode", "e", "stdout"]]}, "name": "create_user", "params": {"check_original_docker_image": ""}, "params_descr": {"check_original_docker_image": ""}, "params_occur": {"check_original_docker_image": []}, "params_p": {"args": [], "check_original_docker_image": [["str", 0.2721657991340363], ["bool", 0.16568156872000733], ["Callable", 0.0902659688505442]], "kwargs": []}, "q_name": "create_user", "ret_exprs": [], "ret_type": "", "variables": {"command": ""}, "variables_p": {"command": [["str", 0.795679519577051], ["list", 0.10285924771582199], ["Final[Dict[str, Any]]", 0.10146123270712727]]}}], "imports": ["__future__", "annotations", "logging", "os", "subprocess", "sys", "pytest", "airflow", "jobs", "backfill_job_runner", "BackfillJobRunner", "airflow", "jobs", "job", "Job", "run_job", "airflow", "models", "DagBag", "DagRun", "TaskInstance", "airflow", "utils", "db", "add_default_pool_if_not_exists", "airflow", "utils", "state", "State", "airflow", "utils", "timezone", "datetime", "airflow", "utils", "types", "DagRunType", "tests", "test_utils", "db"], "mod_var_ln": {"DEFAULT_DATE": [[41, 0], [41, 12]], "DEV_NULL": [[36, 0], [36, 8]], "TEST_DAG_CORRUPTED_FOLDER": [[39, 0], [39, 25]], "TEST_DAG_FOLDER": [[38, 0], [38, 15]], "TEST_ROOT_FOLDER": [[37, 0], [37, 16]], "TEST_USER": [[42, 0], [42, 9]], "TEST_UTILS_FOLDER": [[40, 0], [40, 17]], "logger": [[45, 0], [45, 6]]}, "mod_var_occur": {"DEFAULT_DATE": [["job_runner", "BackfillJobRunner", "job", "job", "dag", "dag", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE"], ["run_id", "DagRun", "generate_run_id", "DagRunType", "BACKFILL_JOB", "execution_date", "DEFAULT_DATE"]], "DEV_NULL": [], "TEST_DAG_CORRUPTED_FOLDER": [["self", "dagbag", "self", "get_dagbag", "TEST_DAG_CORRUPTED_FOLDER"]], "TEST_DAG_FOLDER": [["cls", "dagbag", "cls", "get_dagbag", "TEST_DAG_FOLDER"]], "TEST_ROOT_FOLDER": [["TEST_DAG_FOLDER", "os", "path", "join", "TEST_ROOT_FOLDER"], ["TEST_DAG_CORRUPTED_FOLDER", "os", "path", "join", "TEST_ROOT_FOLDER"], ["TEST_UTILS_FOLDER", "os", "path", "join", "TEST_ROOT_FOLDER"]], "TEST_USER": [["subprocess", "check_output", "TEST_USER", "str", "os", "getegid", "stderr", "subprocess", "STDOUT"], ["subprocess", "check_call", "TEST_USER"], ["monkeypatch", "setenv", "TEST_USER"]], "TEST_UTILS_FOLDER": [["monkeypatch", "syspath_prepend", "TEST_UTILS_FOLDER"], ["monkeypatch", "setenv", "TEST_UTILS_FOLDER"], ["TEST_UTILS_FOLDER", "sys", "path"]], "logger": [["logger", "info"], ["logger", "info", "dagbag", "dagbag_report"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 42}, "session_id": "LouCEkjVEPas2_0r6Jm5RzeigmK9r0Q4dX7h-KdalQ0", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "DEV_NULL": "", "TEST_DAG_CORRUPTED_FOLDER": "", "TEST_DAG_FOLDER": "", "TEST_ROOT_FOLDER": "", "TEST_USER": "", "TEST_UTILS_FOLDER": "", "logger": ""}, "variables_p": {"DEFAULT_DATE": [["raiden_contracts.tests.utils.channel.ChannelValues", 0.7245895165366989], ["raiden.transfer.state.BalanceProofSignedState", 0.08787369756452672], ["datetime.datetime", 0.08728763337535517]], "DEV_NULL": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "TEST_DAG_CORRUPTED_FOLDER": [["int", 0.1046449490760107], ["dict", 0.09580905353212969], ["Dict[Any, Dict[str, int]]", 0.09579259645659415], ["list", 0.08741506232092361], ["Dict[str, Union[Any, Any, Any]]", 0.08542739570064123]], "TEST_DAG_FOLDER": [["str", 0.5830973840038787], ["List[str]", 0.1214115392264978], ["bool", 0.10323201919512283], ["Dict[str, Union[Any, Any, Any]]", 0.09630393918503782], ["src.pip_shims.models.ShimmedPathCollection", 0.09595511838946272]], "TEST_ROOT_FOLDER": [["str", 1.0]], "TEST_USER": [["str", 0.4675730162200299], ["subprocess.CalledProcessError", 0.17114388048081236], ["Dict[str, Dict[str, Any]]", 0.09669925915293529], ["List[Union[Any, Any]]", 0.08487174159483475], ["Optional[str]", 0.08157318220006732]], "TEST_UTILS_FOLDER": [["str", 0.6773570199034836], ["List[str]", 0.11722233356703692], ["TextIO", 0.10212456277370949]], "logger": [["logging.Logger", 1.0000000000000002]]}}}