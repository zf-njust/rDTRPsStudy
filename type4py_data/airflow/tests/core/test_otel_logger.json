{"error": null, "response": {"classes": [{"cls_lc": [[53, 0], [309, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [58, 49]], "fn_var_ln": {"logger": [[58, 8], [58, 19]], "map": [[57, 8], [57, 16]], "meter": [[55, 8], [55, 18]], "stats": [[56, 8], [56, 18]]}, "fn_var_occur": {"logger": [["self", "logger", "logging", "getLogger", "__name__"]], "map": [["self", "map", "self", "stats", "metrics_map", "map"]], "meter": [["self", "meter", "mock", "Mock", "MeterProvider"], ["self", "stats", "SafeOtelLogger", "otel_provider", "self", "meter"]], "stats": [["self", "stats", "SafeOtelLogger", "otel_provider", "self", "meter"], ["self", "map", "self", "stats", "metrics_map", "map"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "meter", "mock", "Mock", "MeterProvider"], ["self", "stats", "SafeOtelLogger", "otel_provider", "self", "meter"], ["self", "map", "self", "stats", "metrics_map", "map"], ["self", "logger", "logging", "getLogger", "__name__"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOtelMetrics.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"logger": "", "map": "", "meter": "", "stats": ""}, "variables_p": {"logger": [["logging.Logger", 0.9020529486557634], ["pineboolib.core.utils.logging.Logger", 0.09794705134423674]], "map": [["str", 0.30000000000000004], ["Set[str]", 0.30000000000000004], ["List[int]", 0.1], ["int", 0.1]], "meter": [["str", 0.4420815981504413], ["list", 0.15837447225680168], ["property", 0.12794226751775106], ["List[Dict[str, str]]", 0.10592750987833957]], "stats": [["str", 0.2157868252342346], ["float", 0.1591993632302153], ["Dict[Any, str]", 0.09163230118505208], ["Dict[str, List[str]]", 0.08234360359047993], ["Dict[str, str]", 0.0771508961181605]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [63, 39]], "fn_var_ln": {"udc": [[61, 8], [61, 11]]}, "fn_var_occur": {"udc": [["udc", "next", "iter", "UP_DOWN_COUNTERS"], ["_is_up_down_counter", "udc"]]}, "name": "test_is_up_down_counter_positive", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOtelMetrics.test_is_up_down_counter_positive", "ret_exprs": [], "ret_type": "", "variables": {"udc": ""}, "variables_p": {"udc": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [66, 59]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_up_down_counter_negative", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOtelMetrics.test_is_up_down_counter_negative", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [74, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_exemption_list_has_not_grown", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestOtelMetrics.test_exemption_list_has_not_grown", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [91, 38]], "fn_var_ln": {"name": [[85, 8], [85, 12]], "prefix": [[84, 8], [84, 14]]}, "fn_var_occur": {"name": [["name", "invalid_stat_combo"], ["self", "stats", "incr", "name"]], "prefix": [["prefix", "invalid_stat_combo"], ["self", "stats", "prefix", "prefix"]]}, "name": "test_invalid_stat_names_are_caught", "params": {"invalid_stat_combo": "", "self": ""}, "params_descr": {"invalid_stat_combo": "", "self": ""}, "params_occur": {"invalid_stat_combo": [["prefix", "invalid_stat_combo"], ["name", "invalid_stat_combo"]], "self": [["self", "stats", "prefix", "prefix"], ["self", "stats", "incr", "name"], ["self", "meter", "assert_not_called"]]}, "params_p": {"args": [], "invalid_stat_combo": [["str", 0.6738882105286518], ["dict", 0.10430307692736447], ["Set[str]", 0.09498843581416977]], "kwargs": [], "self": []}, "q_name": "TestOtelMetrics.test_invalid_stat_names_are_caught", "ret_exprs": [], "ret_type": "", "variables": {"name": "", "prefix": ""}, "variables_p": {"name": [["str", 0.5083692443880368], ["Dict[str, str]", 0.2970714518491995], ["Tuple[str, str, str]", 0.10448477086105744], ["List[str]", 0.09007453290170643]], "prefix": [["str", 0.36636881335015337], ["Dict[str, List[str]]", 0.2240354071081099], ["List[str]", 0.2240354071081099], ["Type[str]", 0.09528782404644065], ["Tuple[str, str]", 0.09027254838718632]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [102, 9]], "fn_var_ln": {"name": [[94, 8], [94, 12]]}, "fn_var_occur": {"name": [["len", "name", "OTEL_NAME_MAX_LENGTH"], ["self", "stats", "incr", "name"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name", "OTEL_NAME_MAX_LENGTH"]]}, "name": "test_old_name_exception_works", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [], "self": [["self", "stats", "incr", "name"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name", "OTEL_NAME_MAX_LENGTH"]]}, "params_p": {"args": [], "caplog": [["bool", 0.1712166932681567]], "kwargs": [], "self": []}, "q_name": "TestOtelMetrics.test_old_name_exception_works", "ret_exprs": [], "ret_type": "", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.8135067253943937], ["dict", 0.09812226295645388], ["List[Tuple[str, str, Any]]", 0.08837101164915254]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [107, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_incr_new_metric", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "incr", "name"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name"]], "self": [["self", "stats", "incr", "name"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7734224615804156], ["Optional[str]", 0.22657753841958442]], "self": []}, "q_name": "TestOtelMetrics.test_incr_new_metric", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [116, 69]], "fn_var_ln": {"key": [[111, 8], [111, 11]], "tags": [[110, 8], [110, 12]]}, "fn_var_occur": {"key": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "map", "key", "add", "assert_called_once_with", "attributes", "tags"]], "tags": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "stats", "incr", "name", "tags", "tags"], ["self", "map", "key", "add", "assert_called_once_with", "attributes", "tags"]]}, "name": "test_incr_new_metric_with_tags", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "stats", "incr", "name", "tags", "tags"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name"]], "self": [["self", "stats", "incr", "name", "tags", "tags"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name"], ["self", "map", "key", "add", "assert_called_once_with", "attributes", "tags"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.8056627999021024], ["bool", 0.09901715695767069], ["Container[str]", 0.095320043140227]], "self": []}, "q_name": "TestOtelMetrics.test_incr_new_metric_with_tags", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "tags": ""}, "variables_p": {"key": [["str", 0.6226564836686823], ["Dict[int, Type[Any]]", 0.09357265252251805]], "tags": [["str", 0.8251751804272327], ["dict", 0.09836831806439202], ["List[str]", 0.07645650150837544]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [125, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_incr_existing_metric", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "incr", "name"], ["self", "stats", "incr", "name"], ["self", "map", "full_name", "name", "add", "call_count"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name"]], "self": [["self", "stats", "incr", "name"], ["self", "stats", "incr", "name"], ["self", "map", "full_name", "name", "add", "call_count"], ["self", "meter", "get_meter", "create_counter", "assert_called_once_with", "name", "full_name", "name"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.6067394933705028], ["Set[str]", 0.11706499825378511], ["Dict[str, str]", 0.09347899832226479], ["List[str]", 0.09129382618906526]], "self": []}, "q_name": "TestOtelMetrics.test_incr_existing_metric", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [138, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_incr_with_rate_limit_works", "params": {"mock_random": "", "name": "", "self": ""}, "params_descr": {"mock_random": "", "name": "", "self": ""}, "params_occur": {"mock_random": [["mock_random", "call_count"]], "name": [["self", "stats", "incr", "name", "rate"], ["self", "stats", "incr", "name", "rate"], ["self", "stats", "incr", "name", "rate"], ["self", "map", "full_name", "name", "add", "call_count"]], "self": [["self", "stats", "incr", "name", "rate"], ["self", "stats", "incr", "name", "rate"], ["self", "stats", "incr", "name", "rate"], ["self", "map", "full_name", "name", "add", "call_count"]]}, "params_p": {"args": [], "kwargs": [], "mock_random": [], "name": [["Dict[str, Any]", 0.10517908934624831]], "self": []}, "q_name": "TestOtelMetrics.test_incr_with_rate_limit_works", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[140, 4], [152, 78]], "fn_var_ln": {"expected_calls": [[141, 8], [141, 22]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "attributes", "None", "mock", "call", "attributes", "None"], ["self", "map", "full_name", "name", "add", "assert_has_calls", "expected_calls"], ["self", "map", "full_name", "name", "add", "call_count", "len", "expected_calls"]]}, "name": "test_decr_existing_metric", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "incr", "name"], ["self", "stats", "decr", "name"], ["self", "map", "full_name", "name", "add", "assert_has_calls", "expected_calls"], ["self", "map", "full_name", "name", "add", "call_count", "len", "expected_calls"]], "self": [["self", "stats", "incr", "name"], ["self", "stats", "decr", "name"], ["self", "map", "full_name", "name", "add", "assert_has_calls", "expected_calls"], ["self", "map", "full_name", "name", "add", "call_count", "len", "expected_calls"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7395298503319396], ["Set[str]", 0.09406721722898904], ["List[str]", 0.08548727123922849], ["Dict[str, str]", 0.08091566119984274]], "self": []}, "q_name": "TestOtelMetrics.test_decr_existing_metric", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": ""}, "variables_p": {"expected_calls": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[155, 4], [174, 53]], "fn_var_ln": {"expected_calls": [[156, 8], [156, 22]]}, "fn_var_occur": {"expected_calls": [["expected_calls", "mock", "call", "attributes", "None", "mock", "call", "attributes", "None"], ["self", "map", "full_name", "name", "add", "assert_has_calls", "expected_calls"]]}, "name": "test_decr_with_rate_limit_works", "params": {"mock_random": "", "name": "", "self": ""}, "params_descr": {"mock_random": "", "name": "", "self": ""}, "params_occur": {"mock_random": [["mock_random", "call_count"]], "name": [["self", "stats", "incr", "name"], ["self", "stats", "decr", "name", "rate"], ["self", "stats", "decr", "name", "rate"], ["self", "stats", "decr", "name", "rate"], ["self", "map", "full_name", "name", "add", "assert_has_calls", "expected_calls"], ["self", "map", "full_name", "name", "add", "call_count"]], "self": [["self", "stats", "incr", "name"], ["self", "stats", "decr", "name", "rate"], ["self", "stats", "decr", "name", "rate"], ["self", "stats", "decr", "name", "rate"], ["self", "map", "full_name", "name", "add", "assert_has_calls", "expected_calls"], ["self", "map", "full_name", "name", "add", "call_count"]]}, "params_p": {"args": [], "kwargs": [], "mock_random": [], "name": [["MutableMapping[str, Any]", 0.08961470250122953], ["baseplate.lib.metrics.Client", 0.08460296291257131]], "self": []}, "q_name": "TestOtelMetrics.test_decr_with_rate_limit_works", "ret_exprs": [], "ret_type": "", "variables": {"expected_calls": ""}, "variables_p": {"expected_calls": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [182, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_gauge_new_metric", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "gauge", "name", "value"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]], "self": [["self", "stats", "gauge", "name", "value"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.4775722612415244], ["List[str]", 0.1451182664600649], ["Dict[str, str]", 0.09821096243371648], ["Dict[str, Any]", 0.08850068289017478]], "self": []}, "q_name": "TestOtelMetrics.test_gauge_new_metric", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [193, 40]], "fn_var_ln": {"key": [[186, 8], [186, 11]], "tags": [[185, 8], [185, 12]]}, "fn_var_occur": {"key": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "map", "key", "attributes", "tags"]], "tags": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "stats", "gauge", "name", "value", "tags", "tags"], ["self", "map", "key", "attributes", "tags"]]}, "name": "test_gauge_new_metric_with_tags", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "stats", "gauge", "name", "value", "tags", "tags"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]], "self": [["self", "stats", "gauge", "name", "value", "tags", "tags"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "key", "attributes", "tags"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.9999999999999999]], "self": []}, "q_name": "TestOtelMetrics.test_gauge_new_metric_with_tags", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "tags": ""}, "variables_p": {"key": [["str", 0.8081249163062973]], "tags": [["str", 0.8189917037171703], ["dict", 0.10088551073344948], ["List[str]", 0.08012278554937995]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[195, 4], [202, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_gauge_existing_metric", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "gauge", "name", "value"], ["self", "stats", "gauge", "name", "value"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]], "self": [["self", "stats", "gauge", "name", "value"], ["self", "stats", "gauge", "name", "value"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.4032830736997664], ["list", 0.10032810498922246], ["type", 0.09567414491374428]], "self": []}, "q_name": "TestOtelMetrics.test_gauge_existing_metric", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[204, 4], [211, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_gauge_existing_metric_with_delta", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "gauge", "name", "value"], ["self", "stats", "gauge", "name", "value", "delta", "True"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]], "self": [["self", "stats", "gauge", "name", "value"], ["self", "stats", "gauge", "name", "value", "delta", "True"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7201602276748122], ["dict", 0.09375857186130464]], "self": []}, "q_name": "TestOtelMetrics.test_gauge_existing_metric_with_delta", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [225, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_gauge_with_rate_limit_works", "params": {"mock_random": "", "mock_set_value": "", "name": "", "self": ""}, "params_descr": {"mock_random": "", "mock_set_value": "", "name": "", "self": ""}, "params_occur": {"mock_random": [["mock_random", "call_count"]], "mock_set_value": [["mock_set_value", "call_count"]], "name": [["self", "stats", "gauge", "name", "value", "rate"], ["self", "stats", "gauge", "name", "value", "rate"], ["self", "stats", "gauge", "name", "value", "rate"]], "self": [["self", "stats", "gauge", "name", "value", "rate"], ["self", "stats", "gauge", "name", "value", "rate"], ["self", "stats", "gauge", "name", "value", "rate"]]}, "params_p": {"args": [], "kwargs": [], "mock_random": [["mock.Mock", 0.20132161173788626]], "mock_set_value": [["mock.Mock", 0.088300296189635]], "name": [], "self": []}, "q_name": "TestOtelMetrics.test_gauge_with_rate_limit_works", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[227, 4], [230, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_gauge_value_is_correct", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "gauge", "name", "value"], ["self", "map", "full_name", "name", "value"]], "self": [["self", "stats", "gauge", "name", "value"], ["self", "map", "full_name", "name", "value"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7006644796073477], ["List[str]", 0.09422361839744932], ["dict", 0.09388000669715407]], "self": []}, "q_name": "TestOtelMetrics.test_gauge_value_is_correct", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[232, 4], [237, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timing_new_metric", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "timing", "name", "dt"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]], "self": [["self", "stats", "timing", "name", "dt"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.686964537020944], ["float", 0.11428251538274242], ["List[str]", 0.09544221289558658]], "self": []}, "q_name": "TestOtelMetrics.test_timing_new_metric", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[239, 4], [248, 40]], "fn_var_ln": {"key": [[241, 8], [241, 11]], "tags": [[240, 8], [240, 12]]}, "fn_var_occur": {"key": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "map", "key", "attributes", "tags"]], "tags": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "stats", "timing", "name", "dt", "tags", "tags"], ["self", "map", "key", "attributes", "tags"]]}, "name": "test_timing_new_metric_with_tags", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["key", "_generate_key_name", "full_name", "name", "tags"], ["self", "stats", "timing", "name", "dt", "tags", "tags"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]], "self": [["self", "stats", "timing", "name", "dt", "tags", "tags"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "key", "attributes", "tags"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.9999999999999999]], "self": []}, "q_name": "TestOtelMetrics.test_timing_new_metric_with_tags", "ret_exprs": [], "ret_type": "", "variables": {"key": "", "tags": ""}, "variables_p": {"key": [["str", 0.8081249163062973]], "tags": [["str", 0.7557103721029308], ["dict", 0.10029286667935525], ["List[str]", 0.07655395823629255], ["Optional[str]", 0.06744280298142133]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[250, 4], [257, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timing_existing_metric", "params": {"name": "", "self": ""}, "params_descr": {"name": "", "self": ""}, "params_occur": {"name": [["self", "stats", "timing", "name", "dt"], ["self", "stats", "timing", "name", "dt"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]], "self": [["self", "stats", "timing", "name", "dt"], ["self", "stats", "timing", "name", "dt"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"], ["self", "map", "full_name", "name", "value"]]}, "params_p": {"args": [], "kwargs": [], "name": [["str", 0.7911272913843732]], "self": []}, "q_name": "TestOtelMetrics.test_timing_existing_metric", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[264, 4], [273, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timer_with_name_returns_float_and_stores_value", "params": {"mock_time": "", "name": "", "self": ""}, "params_descr": {"mock_time": "", "name": "", "self": ""}, "params_occur": {"mock_time": [["mock_time", "call_count"]], "name": [["self", "stats", "timer", "name", "timer"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]], "self": [["self", "stats", "timer", "name", "timer"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]]}, "params_p": {"args": [], "kwargs": [], "mock_time": [], "name": [["str", 0.3277036640089879], ["Tuple[str]", 0.0963965521293309], ["Optional[str]", 0.0859431427333165]], "self": []}, "q_name": "TestOtelMetrics.test_timer_with_name_returns_float_and_stores_value", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[276, 4], [283, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timer_no_name_returns_float_but_does_not_store_value", "params": {"mock_time": "", "name": "", "self": ""}, "params_descr": {"mock_time": "", "name": "", "self": ""}, "params_occur": {"mock_time": [["mock_time", "call_count"]], "name": [], "self": [["self", "stats", "timer", "timer"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "mock_time": [], "name": [["str", 0.28553626341963495], ["List[int]", 0.27392788888537334], ["bool", 0.12839976283529694]], "self": []}, "q_name": "TestOtelMetrics.test_timer_no_name_returns_float_but_does_not_store_value", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[286, 4], [295, 74]], "fn_var_ln": {"timer": [[287, 8], [287, 13]]}, "fn_var_occur": {"timer": [["timer", "self", "stats", "timer", "name"], ["timer", "start"], ["timer", "stop", "send", "False"], ["isinstance", "timer", "duration", "float"], ["timer", "duration"]]}, "name": "test_timer_start_and_stop_manually_send_false", "params": {"mock_time": "", "name": "", "self": ""}, "params_descr": {"mock_time": "", "name": "", "self": ""}, "params_occur": {"mock_time": [["mock_time", "call_count"]], "name": [["timer", "self", "stats", "timer", "name"]], "self": [["timer", "self", "stats", "timer", "name"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "mock_time": [], "name": [["str", 0.7682023811202963]], "self": []}, "q_name": "TestOtelMetrics.test_timer_start_and_stop_manually_send_false", "ret_exprs": [], "ret_type": "", "variables": {"timer": ""}, "variables_p": {"timer": [["str", 0.28404117450213706], ["Callable[[], Any]", 0.10034471259211747]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[298, 4], [309, 9]], "fn_var_ln": {"timer": [[299, 8], [299, 13]]}, "fn_var_occur": {"timer": [["timer", "self", "stats", "timer", "name"], ["timer", "start"], ["timer", "stop", "send", "True"], ["isinstance", "timer", "duration", "float"], ["timer", "duration"]]}, "name": "test_timer_start_and_stop_manually_send_true", "params": {"mock_time": "", "name": "", "self": ""}, "params_descr": {"mock_time": "", "name": "", "self": ""}, "params_occur": {"mock_time": [["mock_time", "call_count"]], "name": [["timer", "self", "stats", "timer", "name"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]], "self": [["timer", "self", "stats", "timer", "name"], ["self", "meter", "get_meter", "create_observable_gauge", "assert_called_once_with", "name", "full_name", "name", "callbacks", "ANY"]]}, "params_p": {"args": [], "kwargs": [], "mock_time": [], "name": [["str", 0.6997872784873578], ["Mapping[str, Any]", 0.09738420086784877], ["List[str]", 0.09674347473857874]], "self": []}, "q_name": "TestOtelMetrics.test_timer_start_and_stop_manually_send_true", "ret_exprs": [], "ret_type": "", "variables": {"timer": ""}, "variables_p": {"timer": [["tuple", 0.10840353254816686], ["str", 0.10672305791701221], ["property", 0.09573624480001378], ["List[List[Any]]", 0.0898149977654338]]}}], "name": "TestOtelMetrics", "q_name": "TestOtelMetrics", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 0], [50, 27]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "name", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "name", "ret_exprs": ["return \"test_stats_run\""], "ret_type": "", "ret_type_p": [["Callable[..., None]", 0.20534314538715967], ["str", 0.19868569058368443], ["List[str]", 0.09934284529184222]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "logging", "time", "unittest", "mock", "unittest", "mock", "ANY", "pytest", "opentelemetry", "metrics", "MeterProvider", "pytest", "param", "airflow", "exceptions", "InvalidStatsNameException", "airflow", "metrics", "otel_logger", "OTEL_NAME_MAX_LENGTH", "UP_DOWN_COUNTERS", "MetricsMap", "SafeOtelLogger", "_generate_key_name", "_is_up_down_counter", "full_name", "airflow", "metrics", "validators", "BACK_COMPAT_METRIC_NAMES", "MetricNameLengthExemptionWarning"], "mod_var_ln": {"INVALID_STAT_NAME_CASES": [[40, 0], [40, 23]]}, "mod_var_occur": {"INVALID_STAT_NAME_CASES": []}, "no_types_annot": {"D": 0, "I": 0, "U": 74}, "session_id": "PTyTsDeDi1VjZPrQ3kkWsoA7L9SiFT2sO8i7Zus4jCM", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"INVALID_STAT_NAME_CASES": ""}, "variables_p": {"INVALID_STAT_NAME_CASES": [["Set[str]", 0.319985773968488], ["int", 0.30159992076361436], ["str", 0.264381973440754], ["Union[Literal, Literal]", 0.11403233182714356]]}}}