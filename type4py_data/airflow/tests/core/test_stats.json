{"error": null, "response": {"classes": [{"cls_lc": [[36, 0], [37, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "CustomStatsd", "q_name": "CustomStatsd", "variables": {}, "variables_p": {}}, {"cls_lc": [[40, 0], [47, 12]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [47, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"host": "", "port": "", "prefix": "", "self": ""}, "params_descr": {"host": "", "port": "", "prefix": "", "self": ""}, "params_occur": {"host": [], "port": [], "prefix": [], "self": []}, "params_p": {"args": [], "host": [["int", 0.19999999999999998], ["Dict[str, Any]", 0.09999999999999999], ["Union[str, int]", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": [], "port": [["int", 0.19999999999999998], ["Dict[str, Any]", 0.09999999999999999], ["Union[str, int]", 0.09999999999999999], ["bool", 0.09999999999999999]], "prefix": [["int", 0.19999999999999998], ["Dict[str, Any]", 0.09999999999999999], ["Union[str, int]", 0.09999999999999999], ["bool", 0.09999999999999999]], "self": []}, "q_name": "InvalidCustomStatsd.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "InvalidCustomStatsd", "q_name": "InvalidCustomStatsd", "variables": {}, "variables_p": {}}, {"cls_lc": [[50, 0], [170, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [53, 57]], "fn_var_ln": {"stats": [[53, 8], [53, 18]], "statsd_client": [[52, 8], [52, 26]]}, "fn_var_occur": {"stats": [["self", "stats", "SafeStatsdLogger", "self", "statsd_client"]], "statsd_client": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"stats": "", "statsd_client": ""}, "variables_p": {"stats": [["str", 0.29685970319630917], ["int", 0.18932584681552467], ["Set[str]", 0.14011969125381823], ["List[str]", 0.11971053774771104]], "statsd_client": [["str", 0.29522535681191003], ["bool", 0.20025348327312703]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 4], [57, 79]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_valid_name", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "incr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_increment_counter_with_valid_name", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [61, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_stat_name_must_be_a_string", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_stat_name_must_be_a_string", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [65, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_stat_name_must_not_exceed_max_length", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_stat_name_must_not_exceed_max_length", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [69, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_stat_name_must_only_include_allowed_characters", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_stat_name_must_only_include_allowed_characters", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [75, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timer", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "timer", "t"], ["self", "statsd_client", "timer", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_timer", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[77, 4], [80, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_empty_timer", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "timer"], ["self", "statsd_client", "timer", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_empty_timer", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [84, 77]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timing", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "timing"], ["self", "statsd_client", "timing", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_timing", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 4], [88, 80]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_gauge", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "gauge"], ["self", "statsd_client", "gauge", "assert_called_once_with", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_gauge", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 4], [92, 70]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_decr", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "decr"], ["self", "statsd_client", "decr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_decr", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that enabling this sets the right instance properties", "long_descr": null, "ret": null}, "fn_lc": [[94, 4], [101, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_enabled_by_config", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_enabled_by_config", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [113, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_load_custom_statsd_client", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_load_custom_statsd_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [130, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_load_invalid_custom_stats_client", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_load_invalid_custom_stats_client", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[132, 4], [143, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_load_allow_list_validator", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_load_allow_list_validator", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [156, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_load_block_list_validator", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_load_block_list_validator", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [170, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_load_allow_and_block_list_validator_loads_only_allow_list_validator", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStats.test_load_allow_and_block_list_validator_loads_only_allow_list_validator", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestStats", "q_name": "TestStats", "variables": {}, "variables_p": {}}, {"cls_lc": [[173, 0], [265, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[174, 4], [179, 67]], "fn_var_ln": {"dogstatsd": [[179, 8], [179, 22]], "dogstatsd_client": [[178, 8], [178, 29]]}, "fn_var_occur": {"dogstatsd": [["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client"]], "dogstatsd_client": [["self", "dogstatsd_client", "Mock", "spec", "DogStatsd"], ["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd_client", "Mock", "spec", "DogStatsd"], ["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dogstatsd": "", "dogstatsd_client": ""}, "variables_p": {"dogstatsd": [["int", 0.21909504926024528], ["Set[str]", 0.198162732854489], ["List[str]", 0.14307264814230872], ["Tuple[float, float, float, Literal]", 0.07281224242131562], ["Optional[int]", 0.06983906063722886]], "dogstatsd_client": [["str", 0.7272894251073879], ["Dict[str, str]", 0.07411541170315475]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[181, 4], [185, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_valid_name_with_dogstatsd", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_increment_counter_with_valid_name_with_dogstatsd", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[187, 4], [189, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_stat_name_must_be_a_string_with_dogstatsd", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr"], ["self", "dogstatsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_stat_name_must_be_a_string_with_dogstatsd", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[191, 4], [193, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_stat_name_must_not_exceed_max_length_with_dogstatsd", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr"], ["self", "dogstatsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_stat_name_must_not_exceed_max_length_with_dogstatsd", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[195, 4], [197, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_stat_name_must_only_include_allowed_characters_with_dogstatsd", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr"], ["self", "dogstatsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_stat_name_must_only_include_allowed_characters_with_dogstatsd", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[199, 4], [203, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_send_stats_using_dogstatsd_when_dogstatsd_on", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_does_send_stats_using_dogstatsd_when_dogstatsd_on", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[205, 4], [209, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_send_stats_using_dogstatsd_with_tags_without_enabled_metrics_tags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr", "tags"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_does_send_stats_using_dogstatsd_with_tags_without_enabled_metrics_tags", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[211, 4], [216, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_send_stats_using_dogstatsd_when_statsd_and_dogstatsd_both_on", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_does_send_stats_using_dogstatsd_when_statsd_and_dogstatsd_both_on", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[218, 4], [221, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timer", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "timer"], ["self", "dogstatsd_client", "timed", "assert_called_once_with", "tags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_timer", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[223, 4], [226, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_empty_timer", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "timer"], ["self", "dogstatsd_client", "timed", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_empty_timer", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[228, 4], [235, 99]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_timing", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "timing"], ["self", "dogstatsd_client", "timing", "assert_called_once_with", "metric", "value", "tags"], ["self", "dogstatsd", "timing", "datetime", "timedelta", "seconds"], ["self", "dogstatsd_client", "timing", "assert_called_with", "metric", "value", "tags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_timing", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[237, 4], [239, 110]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_gauge", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "gauge"], ["self", "dogstatsd_client", "gauge", "assert_called_once_with", "metric", "sample_rate", "value", "tags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_gauge", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[241, 4], [245, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_decr", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "decr"], ["self", "dogstatsd_client", "decrement", "assert_called_once_with", "metric", "sample_rate", "value", "tags"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_decr", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Test that enabling this sets the right instance properties", "long_descr": null, "ret": null}, "fn_lc": [[247, 4], [256, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_enabled_by_config", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_enabled_by_config", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[258, 4], [265, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_not_send_stats_using_statsd_when_statsd_and_dogstatsd_both_on", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStats.test_does_not_send_stats_using_statsd_when_statsd_and_dogstatsd_both_on", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDogStats", "q_name": "TestDogStats", "variables": {}, "variables_p": {}}, {"cls_lc": [[268, 0], [283, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[269, 4], [271, 101]], "fn_var_ln": {"stats": [[271, 8], [271, 18]], "statsd_client": [[270, 8], [270, 26]]}, "fn_var_occur": {"stats": [["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "AllowListValidator"]], "statsd_client": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "AllowListValidator"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "AllowListValidator"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithAllowList.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"stats": "", "statsd_client": ""}, "variables_p": {"stats": [["str", 0.3824701968524934], ["Dict[str, Union[bool, str]]", 0.09492919226224691], ["Dict[str, str]", 0.08303800840328082]], "statsd_client": [["str", 0.4903172657864525], ["set", 0.1148677707712831], ["Dict[str, str]", 0.09941599523685002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[273, 4], [275, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_allowed_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "incr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithAllowList.test_increment_counter_with_allowed_key", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[277, 4], [279, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_allowed_prefix", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "incr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithAllowList.test_increment_counter_with_allowed_prefix", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[281, 4], [283, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_not_increment_counter_if_not_allowed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithAllowList.test_not_increment_counter_if_not_allowed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestStatsWithAllowList", "q_name": "TestStatsWithAllowList", "variables": {}, "variables_p": {}}, {"cls_lc": [[286, 0], [301, 76]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[287, 4], [289, 101]], "fn_var_ln": {"stats": [[289, 8], [289, 18]], "statsd_client": [[288, 8], [288, 26]]}, "fn_var_occur": {"stats": [["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "BlockListValidator"]], "statsd_client": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "BlockListValidator"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "BlockListValidator"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithBlockList.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"stats": "", "statsd_client": ""}, "variables_p": {"stats": [["str", 0.3824701968524934], ["Dict[str, Union[bool, str]]", 0.09492919226224691], ["Dict[str, str]", 0.08303800840328082]], "statsd_client": [["str", 0.4903172657864525], ["set", 0.1148677707712831], ["Dict[str, str]", 0.09941599523685002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 4], [293, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_allowed_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithBlockList.test_increment_counter_with_allowed_key", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[295, 4], [297, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_allowed_prefix", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithBlockList.test_increment_counter_with_allowed_prefix", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [301, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_not_increment_counter_if_not_allowed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "incr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithBlockList.test_not_increment_counter_if_not_allowed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestStatsWithBlockList", "q_name": "TestStatsWithBlockList", "variables": {}, "variables_p": {}}, {"cls_lc": [[304, 0], [326, 49]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[305, 4], [310, 110]], "fn_var_ln": {"dogstats": [[310, 8], [310, 21]], "dogstatsd_client": [[309, 8], [309, 29]]}, "fn_var_occur": {"dogstats": [["self", "dogstats", "SafeDogStatsdLogger", "self", "dogstatsd_client", "AllowListValidator"]], "dogstatsd_client": [["self", "dogstatsd_client", "Mock", "speck", "DogStatsd"], ["self", "dogstats", "SafeDogStatsdLogger", "self", "dogstatsd_client", "AllowListValidator"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd_client", "Mock", "speck", "DogStatsd"], ["self", "dogstats", "SafeDogStatsdLogger", "self", "dogstatsd_client", "AllowListValidator"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithAllowList.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dogstats": "", "dogstatsd_client": ""}, "variables_p": {"dogstats": [["str", 0.11391909284226798], ["Dict[str, Dict[str, Any]]", 0.09666312198013578], ["tests.tx_cache.TxCache", 0.08938538323932217]], "dogstatsd_client": [["str", 0.8944118698116443]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[312, 4], [316, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_allowed_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstats", "incr"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithAllowList.test_increment_counter_with_allowed_key", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[318, 4], [322, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_allowed_prefix", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstats", "incr"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithAllowList.test_increment_counter_with_allowed_prefix", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[324, 4], [326, 49]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_not_increment_counter_if_not_allowed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstats", "incr"], ["self", "dogstatsd_client", "assert_not_called"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithAllowList.test_not_increment_counter_if_not_allowed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDogStatsWithAllowList", "q_name": "TestDogStatsWithAllowList", "variables": {}, "variables_p": {}}, {"cls_lc": [[329, 0], [341, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[330, 4], [335, 86]], "fn_var_ln": {"dogstatsd": [[335, 8], [335, 22]], "dogstatsd_client": [[334, 8], [334, 29]]}, "fn_var_occur": {"dogstatsd": [["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client", "metrics_tags", "True"]], "dogstatsd_client": [["self", "dogstatsd_client", "Mock", "speck", "DogStatsd"], ["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client", "metrics_tags", "True"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd_client", "Mock", "speck", "DogStatsd"], ["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client", "metrics_tags", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithMetricsTags.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dogstatsd": "", "dogstatsd_client": ""}, "variables_p": {"dogstatsd": [], "dogstatsd_client": [["str", 0.9000847227399422]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[337, 4], [341, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_send_stats_using_dogstatsd_with_tags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr", "tags"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithMetricsTags.test_does_send_stats_using_dogstatsd_with_tags", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDogStatsWithMetricsTags", "q_name": "TestDogStatsWithMetricsTags", "variables": {}, "variables_p": {}}, {"cls_lc": [[344, 0], [360, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[345, 4], [354, 9]], "fn_var_ln": {"dogstatsd": [[350, 8], [350, 22]], "dogstatsd_client": [[349, 8], [349, 29]]}, "fn_var_occur": {"dogstatsd": [["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client", "metrics_tags", "True", "metric_tags_validator", "BlockListValidator"]], "dogstatsd_client": [["self", "dogstatsd_client", "Mock", "speck", "DogStatsd"], ["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client", "metrics_tags", "True", "metric_tags_validator", "BlockListValidator"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd_client", "Mock", "speck", "DogStatsd"], ["self", "dogstatsd", "SafeDogStatsdLogger", "self", "dogstatsd_client", "metrics_tags", "True", "metric_tags_validator", "BlockListValidator"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithDisabledMetricsTags.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"dogstatsd": "", "dogstatsd_client": ""}, "variables_p": {"dogstatsd": [["dict", 0.2702731374828703]], "dogstatsd_client": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[356, 4], [360, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_send_stats_using_dogstatsd_with_tags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dogstatsd", "incr", "tags"], ["self", "dogstatsd_client", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDogStatsWithDisabledMetricsTags.test_does_send_stats_using_dogstatsd_with_tags", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDogStatsWithDisabledMetricsTags", "q_name": "TestDogStatsWithDisabledMetricsTags", "variables": {}, "variables_p": {}}, {"cls_lc": [[363, 0], [396, 95]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[364, 4], [376, 13]], "fn_var_ln": {"stats": [[372, 12], [372, 22]], "statsd_client": [[371, 12], [371, 30]]}, "fn_var_occur": {"stats": [["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "influxdb_tags_enabled", "True", "metric_tags_validator", "BlockListValidator"]], "statsd_client": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "influxdb_tags_enabled", "True", "metric_tags_validator", "BlockListValidator"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "statsd_client", "Mock", "spec", "statsd", "StatsClient"], ["self", "stats", "SafeStatsdLogger", "self", "statsd_client", "influxdb_tags_enabled", "True", "metric_tags_validator", "BlockListValidator"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithInfluxDBEnabled.setup_method", "ret_exprs": [], "ret_type": "", "variables": {"stats": "", "statsd_client": ""}, "variables_p": {"stats": [["str", 0.5818498889092555], ["Optional[str]", 0.10368079847830217], ["int", 0.10211664361139465], ["Dict[str, str]", 0.09477558206186776]], "statsd_client": [["str", 0.3100407793179154], ["Dict[str, Dict[str, Any]]", 0.10085966851464866], ["dict", 0.08669228321650835], ["bool", 0.08556183261158996]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[378, 4], [382, 85]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr"], ["self", "statsd_client", "incr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithInfluxDBEnabled.test_increment_counter", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[384, 4], [389, 105]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_increment_counter_with_tags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr", "tags"], ["self", "statsd_client", "incr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithInfluxDBEnabled.test_increment_counter_with_tags", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[391, 4], [396, 95]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_not_increment_counter_drops_invalid_tags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "stats", "incr", "tags"], ["self", "statsd_client", "incr", "assert_called_once_with"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestStatsWithInfluxDBEnabled.test_does_not_increment_counter_drops_invalid_tags", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestStatsWithInfluxDBEnabled", "q_name": "TestStatsWithInfluxDBEnabled", "variables": {}, "variables_p": {}}, {"cls_lc": [[407, 0], [460, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[415, 4], [418, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_not_send_stats_using_statsd_when_the_name_is_not_valid", "params": {"mock_statsd": "", "self": ""}, "params_descr": {"mock_statsd": "", "self": ""}, "params_occur": {"mock_statsd": [["mock_statsd", "return_value", "assert_not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_statsd": [["unittesmock.Mock", 0.1902003601283477]], "self": []}, "q_name": "TestCustomStatsName.test_does_not_send_stats_using_statsd_when_the_name_is_not_valid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[427, 4], [430, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_not_send_stats_using_dogstatsd_when_the_name_is_not_valid", "params": {"mock_dogstatsd": "", "self": ""}, "params_descr": {"mock_dogstatsd": "", "self": ""}, "params_occur": {"mock_dogstatsd": [["mock_dogstatsd", "return_value", "assert_not_called"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_dogstatsd": [["unittesmock.Mock", 0.1902003601283477]], "self": []}, "q_name": "TestCustomStatsName.test_does_not_send_stats_using_dogstatsd_when_the_name_is_not_valid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[439, 4], [442, 80]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_send_stats_using_statsd_when_the_name_is_valid", "params": {"mock_statsd": "", "self": ""}, "params_descr": {"mock_statsd": "", "self": ""}, "params_occur": {"mock_statsd": [["mock_statsd", "return_value", "incr", "assert_called_once_with"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_statsd": [["unittesmock.Mock", 0.4948201004652276], ["mock.MagicMock", 0.250765213385915]], "self": []}, "q_name": "TestCustomStatsName.test_does_send_stats_using_statsd_when_the_name_is_valid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[451, 4], [456, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_does_send_stats_using_dogstatsd_when_the_name_is_valid", "params": {"mock_dogstatsd": "", "self": ""}, "params_descr": {"mock_dogstatsd": "", "self": ""}, "params_occur": {"mock_dogstatsd": [["mock_dogstatsd", "return_value", "increment", "assert_called_once_with", "metric", "sample_rate", "tags", "value"]], "self": []}, "params_p": {"args": [], "kwargs": [], "mock_dogstatsd": [["unittesmock.Mock", 0.09555627162248388]], "self": []}, "q_name": "TestCustomStatsName.test_does_send_stats_using_dogstatsd_when_the_name_is_valid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[458, 4], [460, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCustomStatsName.teardown_method", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "TestCustomStatsName", "q_name": "TestCustomStatsName", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[399, 0], [400, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "always_invalid", "params": {"stat_name": ""}, "params_descr": {"stat_name": ""}, "params_occur": {"stat_name": [["InvalidStatsNameException", "stat_name"]]}, "params_p": {"args": [], "kwargs": [], "stat_name": [["str", 1.0]]}, "q_name": "always_invalid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[403, 0], [404, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "always_valid", "params": {"stat_name": ""}, "params_descr": {"stat_name": ""}, "params_occur": {"stat_name": []}, "params_p": {"args": [], "kwargs": [], "stat_name": [["str", 0.7863113019853936], ["Set[str]", 0.11918313778676548]]}, "q_name": "always_valid", "ret_exprs": ["return stat_name"], "ret_type": "", "ret_type_p": [["str", 0.9999999999999998]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "importlib", "re", "unittest", "mock", "unittest", "mock", "Mock", "pytest", "statsd", "airflow", "airflow", "exceptions", "AirflowConfigException", "InvalidStatsNameException", "airflow", "metrics", "datadog_logger", "SafeDogStatsdLogger", "airflow", "metrics", "statsd_logger", "SafeStatsdLogger", "airflow", "metrics", "validators", "AllowListValidator", "BlockListValidator", "tests", "test_utils", "config", "conf_vars", "datadog", "DogStatsd", "datetime", "datadog", "DogStatsd", "datadog", "DogStatsd", "datadog", "DogStatsd", "datadog", "DogStatsd", "datadog", "DogStatsd"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 1, "I": 0, "U": 83}, "session_id": "1M2l1SpEmIEhU2G2RwBT_NtAi--jBTx-ub-jI0RAleo", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}