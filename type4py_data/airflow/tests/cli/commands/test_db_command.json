{"error": null, "response": {"classes": [{"cls_lc": [[33, 0], [294, 63]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 4], [36, 44]], "fn_var_ln": {"parser": [[36, 8], [36, 18]]}, "fn_var_occur": {"parser": [["cls", "parser", "cli_parser", "get_parser"]]}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["cls", "parser", "cli_parser", "get_parser"]]}, "params_p": {"args": [], "cls": [["Callable", 0.2043654510322698], ["List[str]", 0.15935622434553923], ["dict", 0.08429449144280911]], "kwargs": [], "self": []}, "q_name": "TestCliDb.setup_class", "ret_exprs": [], "ret_type": "", "variables": {"parser": ""}, "variables_p": {"parser": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 4], [42, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_initdb", "params": {"mock_initdb": "", "self": ""}, "params_descr": {"mock_initdb": "", "self": ""}, "params_occur": {"mock_initdb": [["mock_initdb", "assert_called_once_with"]], "self": [["db_command", "initdb", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_initdb": [["unittesmock.MagicMock", 1.0]], "self": []}, "q_name": "TestCliDb.test_cli_initdb", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [48, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_resetdb", "params": {"mock_resetdb": "", "self": ""}, "params_descr": {"mock_resetdb": "", "self": ""}, "params_occur": {"mock_resetdb": [["mock_resetdb", "assert_called_once_with", "skip_init", "False"]], "self": [["db_command", "resetdb", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_resetdb": [["unittesmock.MagicMock", 0.8100164900292627], ["unittesmock.Mock", 0.1899835099707372]], "self": []}, "q_name": "TestCliDb.test_cli_resetdb", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [53, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_resetdb_skip_init", "params": {"mock_resetdb": "", "self": ""}, "params_descr": {"mock_resetdb": "", "self": ""}, "params_occur": {"mock_resetdb": [["mock_resetdb", "assert_called_once_with", "skip_init", "True"]], "self": [["db_command", "resetdb", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_resetdb": [["unittesmock.MagicMock", 0.7999911820995521], ["unittesmock.Mock", 0.20000881790044805]], "self": []}, "q_name": "TestCliDb.test_cli_resetdb_skip_init", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [59, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_check_migrations", "params": {"mock_wait_for_migrations": "", "self": ""}, "params_descr": {"mock_wait_for_migrations": "", "self": ""}, "params_occur": {"mock_wait_for_migrations": [["mock_wait_for_migrations", "assert_called_once_with", "timeout"]], "self": [["db_command", "check_migrations", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_wait_for_migrations": [["unittesmock.MagicMock", 0.7469197335327488], ["unittesmock.Mock", 0.17472514742623202], ["mock.Mock", 0.07835511904101929]], "self": []}, "q_name": "TestCliDb.test_cli_check_migrations", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[98, 4], [100, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_upgrade_success", "params": {"args": "", "called_with": "", "mock_upgradedb": "", "self": ""}, "params_descr": {"args": "", "called_with": "", "mock_upgradedb": "", "self": ""}, "params_occur": {"args": [["db_command", "upgradedb", "self", "parser", "parse_args", "args"]], "called_with": [["mock_upgradedb", "assert_called_once_with", "called_with", "reserialize_dags", "True"]], "mock_upgradedb": [["mock_upgradedb", "assert_called_once_with", "called_with", "reserialize_dags", "True"]], "self": [["db_command", "upgradedb", "self", "parser", "parse_args", "args"]]}, "params_p": {"args": [], "called_with": [["unittesmock.MagicMock", 0.6424821826218126], ["unittesmock.Mock", 0.3575178173781874]], "kwargs": [], "mock_upgradedb": [["unittesmock.MagicMock", 0.6424821826218126], ["unittesmock.Mock", 0.3575178173781874]], "self": []}, "q_name": "TestCliDb.test_cli_upgrade_success", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [126, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_upgrade_failure", "params": {"args": "", "mock_upgradedb": "", "pattern": "", "self": ""}, "params_descr": {"args": "", "mock_upgradedb": "", "pattern": "", "self": ""}, "params_occur": {"args": [["db_command", "upgradedb", "self", "parser", "parse_args", "args"]], "mock_upgradedb": [], "pattern": [["pytest", "raises", "SystemExit", "match", "pattern"]], "self": [["db_command", "upgradedb", "self", "parser", "parse_args", "args"]]}, "params_p": {"args": [], "kwargs": [], "mock_upgradedb": [["mock.Mock", 0.7777777782457801], ["unittesmock.Mock", 0.11111111087711001]], "pattern": [["Pattern", 0.14232314566995702], ["Dict[str, Union[Any, Any]]", 0.09287735995621878], ["Pattern[str]", 0.09205115242966236], ["str", 0.09135309033542952]], "self": []}, "q_name": "TestCliDb.test_cli_upgrade_failure", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 4], [140, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_shell_mysql", "params": {"mock_execute_interactive": "", "mock_tmp_file": "", "self": ""}, "params_descr": {"mock_execute_interactive": "", "mock_tmp_file": "", "self": ""}, "params_occur": {"mock_execute_interactive": [["mock_execute_interactive", "assert_called_once_with"]], "mock_tmp_file": [["mock_tmp_file", "return_value", "__enter__", "return_value", "name"], ["mock_tmp_file", "return_value", "__enter__", "return_value", "write", "assert_called_once_with"]], "self": [["db_command", "shell", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_execute_interactive": [["unittesmock.MagicMock", 0.9015389159146195], ["unittesmock.Mock", 0.09846108408538018]], "mock_tmp_file": [["unittesmock.MagicMock", 0.598048507933886], ["mock.Mock", 0.1334289903827436], ["unittesmock.Mock", 0.08659133165526323]], "self": []}, "q_name": "TestCliDb.test_cli_shell_mysql", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [152, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_shell_mysql_without_port", "params": {"mock_execute_interactive": "", "mock_tmp_file": "", "self": ""}, "params_descr": {"mock_execute_interactive": "", "mock_tmp_file": "", "self": ""}, "params_occur": {"mock_execute_interactive": [["mock_execute_interactive", "assert_called_once_with"]], "mock_tmp_file": [["mock_tmp_file", "return_value", "__enter__", "return_value", "name"], ["mock_tmp_file", "return_value", "__enter__", "return_value", "write", "assert_called_once_with"]], "self": [["db_command", "shell", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_execute_interactive": [["unittesmock.MagicMock", 0.9015389159146195], ["unittesmock.Mock", 0.09846108408538018]], "mock_tmp_file": [["unittesmock.MagicMock", 0.598048507933886], ["mock.Mock", 0.1334289903827436], ["unittesmock.Mock", 0.08659133165526323]], "self": []}, "q_name": "TestCliDb.test_cli_shell_mysql_without_port", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [160, 97]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_shell_sqlite", "params": {"mock_execute_interactive": "", "self": ""}, "params_descr": {"mock_execute_interactive": "", "self": ""}, "params_occur": {"mock_execute_interactive": [["mock_execute_interactive", "assert_called_once_with"]], "self": [["db_command", "shell", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_execute_interactive": [["unittesmock.MagicMock", 0.9505042123492602], ["unittesmock.Mock", 0.049495787650739816]], "self": []}, "q_name": "TestCliDb.test_cli_shell_sqlite", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[167, 4], [179, 25]], "fn_var_ln": {"_": [[170, 8], [170, 9]], "env": [[171, 8], [171, 11]], "kwargs": [[170, 11], [170, 17]], "postgres_env": [[172, 8], [172, 20]]}, "fn_var_occur": {"_": [["_", "kwargs", "mock_execute_interactive", "call_args"]], "env": [["mock_execute_interactive", "assert_called_once_with", "env", "mock", "ANY"], ["env", "kwargs"], ["postgres_env", "k", "v", "k", "v", "env", "items", "k", "startswith"]], "kwargs": [["_", "kwargs", "mock_execute_interactive", "call_args"], ["env", "kwargs"]], "postgres_env": [["postgres_env", "k", "v", "k", "v", "env", "items", "k", "startswith"]]}, "name": "test_cli_shell_postgres", "params": {"mock_execute_interactive": "", "self": ""}, "params_descr": {"mock_execute_interactive": "", "self": ""}, "params_occur": {"mock_execute_interactive": [["mock_execute_interactive", "assert_called_once_with", "env", "mock", "ANY"], ["_", "kwargs", "mock_execute_interactive", "call_args"]], "self": [["db_command", "shell", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_execute_interactive": [["unittesmock.MagicMock", 0.5995728784297152], ["mock.Mock", 0.4004271215702848]], "self": []}, "q_name": "TestCliDb.test_cli_shell_postgres", "ret_exprs": [], "ret_type": "", "variables": {"_": "", "env": "", "kwargs": "", "postgres_env": ""}, "variables_p": {"_": [["int", 0.4669408736715376], ["float", 0.1313579639742823], ["List[Tuple[str, Any]]", 0.0860449579552835], ["Tuple[str, str, str]", 0.08572523183507004]], "env": [["unittesmock.MagicMock", 0.092660859783798]], "kwargs": [["Union[dict, Dict[str, int]]", 0.21694592906355578], ["str", 0.20749987462269934], ["List[int]", 0.10815771485281925], ["list", 0.10617294429228775], ["int", 0.0991195649881992], ["staticmethod", 0.08865922773659277], ["List[Type[Any]]", 0.0874412646757234], ["List[str]", 0.08600347976812255]], "postgres_env": [["list", 0.2670181236138158], ["Dict[str, str]", 0.2148345420811059], ["dict", 0.13903516522106424], ["Dict[Tuple[str, str], str]", 0.11892367681205437], ["Dict[str, Union[int, str, Any]]", 0.09053509948166022], ["MutableMapping[str, Any]", 0.08774314518242925], ["Dict[str, Union[Any, int]]", 0.08191024760787012]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[186, 4], [198, 25]], "fn_var_ln": {"_": [[189, 8], [189, 9]], "env": [[190, 8], [190, 11]], "kwargs": [[189, 11], [189, 17]], "postgres_env": [[191, 8], [191, 20]]}, "fn_var_occur": {"_": [["_", "kwargs", "mock_execute_interactive", "call_args"]], "env": [["mock_execute_interactive", "assert_called_once_with", "env", "mock", "ANY"], ["env", "kwargs"], ["postgres_env", "k", "v", "k", "v", "env", "items", "k", "startswith"]], "kwargs": [["_", "kwargs", "mock_execute_interactive", "call_args"], ["env", "kwargs"]], "postgres_env": [["postgres_env", "k", "v", "k", "v", "env", "items", "k", "startswith"]]}, "name": "test_cli_shell_postgres_without_port", "params": {"mock_execute_interactive": "", "self": ""}, "params_descr": {"mock_execute_interactive": "", "self": ""}, "params_occur": {"mock_execute_interactive": [["mock_execute_interactive", "assert_called_once_with", "env", "mock", "ANY"], ["_", "kwargs", "mock_execute_interactive", "call_args"]], "self": [["db_command", "shell", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_execute_interactive": [["unittesmock.MagicMock", 0.5995728784297152], ["mock.Mock", 0.4004271215702848]], "self": []}, "q_name": "TestCliDb.test_cli_shell_postgres_without_port", "ret_exprs": [], "ret_type": "", "variables": {"_": "", "env": "", "kwargs": "", "postgres_env": ""}, "variables_p": {"_": [["int", 0.4669408736715376], ["float", 0.1313579639742823], ["List[Tuple[str, Any]]", 0.0860449579552835], ["Tuple[str, str, str]", 0.08572523183507004]], "env": [["unittesmock.MagicMock", 0.092660859783798]], "kwargs": [["Union[dict, Dict[str, int]]", 0.21694592906355578], ["str", 0.20749987462269934], ["List[int]", 0.10815771485281925], ["list", 0.10617294429228775], ["int", 0.0991195649881992], ["staticmethod", 0.08865922773659277], ["List[Type[Any]]", 0.0874412646757234], ["List[str]", 0.08600347976812255]], "postgres_env": [["list", 0.2670181236138158], ["Dict[str, str]", 0.2148345420811059], ["dict", 0.13903516522106424], ["Dict[Tuple[str, str], str]", 0.11892367681205437], ["Dict[str, Union[int, str, Any]]", 0.09053509948166022], ["MutableMapping[str, Any]", 0.08774314518242925], ["Dict[str, Union[Any, int]]", 0.08191024760787012]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[204, 4], [206, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_shell_invalid", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["db_command", "shell", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDb.test_cli_shell_invalid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "We test some options that should produce an error", "long_descr": null, "ret": null}, "fn_lc": [[224, 4], [228, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_downgrade_invalid", "params": {"args": "", "match": "", "mock_dg": "", "self": ""}, "params_descr": {"args": "", "match": "", "mock_dg": "", "self": ""}, "params_occur": {"args": [["db_command", "downgrade", "self", "parser", "parse_args", "args"]], "match": [["pytest", "raises", "SystemExit", "match", "match"]], "mock_dg": [], "self": [["db_command", "downgrade", "self", "parser", "parse_args", "args"]]}, "params_p": {"args": [], "kwargs": [], "match": [["List[Dict[str, Any]]", 0.0846836155511434], ["int", 0.061932358383252416]], "mock_dg": [["mock.Mock", 0.6725239991719225], ["mock.MagicMock", 0.14621097890458973], ["unittesmock.Mock", 0.06521175168849831]], "self": []}, "q_name": "TestCliDb.test_cli_downgrade_invalid", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[250, 4], [253, 62]], "fn_var_ln": {"defaults": [[251, 8], [251, 16]]}, "fn_var_occur": {"defaults": [["defaults", "dict", "from_revision", "None", "show_sql_only", "False"], ["mock_dg", "assert_called_with", "defaults", "expected"]]}, "name": "test_cli_downgrade_good", "params": {"args": "", "expected": "", "mock_dg": "", "self": ""}, "params_descr": {"args": "", "expected": "", "mock_dg": "", "self": ""}, "params_occur": {"args": [["db_command", "downgrade", "self", "parser", "parse_args", "args"]], "expected": [["mock_dg", "assert_called_with", "defaults", "expected"]], "mock_dg": [["mock_dg", "assert_called_with", "defaults", "expected"]], "self": [["db_command", "downgrade", "self", "parser", "parse_args", "args"]]}, "params_p": {"args": [], "expected": [["unittesmock.MagicMock", 0.9139900199068791], ["unittesmock.Mock", 0.08600998009312091]], "kwargs": [], "mock_dg": [["unittesmock.MagicMock", 0.9139900199068791], ["unittesmock.Mock", 0.08600998009312091]], "self": []}, "q_name": "TestCliDb.test_cli_downgrade_good", "ret_exprs": [], "ret_type": "", "variables": {"defaults": ""}, "variables_p": {"defaults": [["str", 0.7247212294098654], ["Dict[int, str]", 0.09381002882392184], ["Dict[str, str]", 0.0911300490413561]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[266, 4], [273, 98]], "fn_var_ln": {"return_value": [[267, 8], [267, 31]]}, "fn_var_occur": {"return_value": [["mock_input", "return_value", "resp"]]}, "name": "test_cli_downgrade_confirm", "params": {"mock_dg": "", "mock_input": "", "raise_": "", "resp": "", "self": ""}, "params_descr": {"mock_dg": "", "mock_input": "", "raise_": "", "resp": "", "self": ""}, "params_occur": {"mock_dg": [["mock_dg", "assert_called_with", "to_revision", "from_revision", "None", "show_sql_only", "False"]], "mock_input": [["mock_input", "return_value", "resp"]], "raise_": [], "resp": [["mock_input", "return_value", "resp"]], "self": [["db_command", "downgrade", "self", "parser", "parse_args"], ["db_command", "downgrade", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_dg": [["unittesmock.MagicMock", 0.9187852736050346], ["unittesmock.Mock", 0.08121472639496535]], "mock_input": [["unittesmock.Mock", 1.0]], "raise_": [["unittesmock.Mock", 0.5224685737505099], ["mock.Mock", 0.1969769920387618], ["unittesmock.MagicMock", 0.07937086042452851]], "resp": [["unittesmock.Mock", 1.0]], "self": []}, "q_name": "TestCliDb.test_cli_downgrade_confirm", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["unittesmock.Mock", 0.3250385305217157], ["int", 0.2854560711354669], ["str", 0.22297769573804777], ["Dict[str, Dict[str, Any]]", 0.09353613298236951], ["List[Dict[str, str]]", 0.07299156962240015]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[275, 4], [294, 63]], "fn_var_ln": {"always_fail": [[282, 8], [282, 19]], "always_pass": [[281, 8], [281, 19]], "args": [[277, 8], [277, 12]], "retry": [[276, 8], [276, 13]], "retry_delay": [[276, 15], [276, 26]], "sleep": [[280, 8], [280, 13]]}, "fn_var_occur": {"always_fail": [["always_fail", "Mock", "side_effect", "OperationalError", "None", "None"], ["always_fail", "assert_has_calls", "call", "retry"]], "always_pass": [["always_pass", "Mock"], ["always_pass", "assert_called_once"]], "args": [["args", "self", "parser", "parse_args", "str", "retry", "str", "retry_delay"], ["db_command", "check", "args"], ["db_command", "check", "args"]], "retry": [["retry", "retry_delay"], ["args", "self", "parser", "parse_args", "str", "retry", "str", "retry_delay"], ["always_fail", "assert_has_calls", "call", "retry"], ["sleep", "assert_has_calls", "call", "retry_delay", "retry"]], "retry_delay": [["retry", "retry_delay"], ["args", "self", "parser", "parse_args", "str", "retry", "str", "retry_delay"], ["sleep", "assert_has_calls", "call", "retry_delay", "retry"]], "sleep": [["sleep", "MagicMock"], ["patch", "new", "sleep"], ["sleep", "assert_not_called"], ["patch", "new", "sleep"], ["sleep", "assert_has_calls", "call", "retry_delay", "retry"]]}, "name": "test_check", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args", "str", "retry", "str", "retry_delay"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDb.test_check", "ret_exprs": [], "ret_type": "", "variables": {"always_fail": "", "always_pass": "", "args": "", "retry": "", "retry_delay": "", "sleep": ""}, "variables_p": {"always_fail": [["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.09095868248767869]], "always_pass": [["unittesmock._patch[Union[unittesmock.AsyncMock, unittesmock.MagicMock]]", 0.48122813238165096], ["int", 0.11380415577684355], ["List[str]", 0.10079500246257457], ["Dict[int, Dict[str, Any]]", 0.09648223046218722]], "args": [["List[str]", 0.29411165424511815], ["Optional[tuple]", 0.08373126661942684]], "retry": [], "retry_delay": [], "sleep": [["mock.Mock", 0.9054263914176254], ["unittesmock.Mock", 0.09457360858237476]]}}], "name": "TestCliDb", "q_name": "TestCliDb", "variables": {}, "variables_p": {}}, {"cls_lc": [[297, 0], [567, 100]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[299, 4], [300, 44]], "fn_var_ln": {"parser": [[300, 8], [300, 18]]}, "fn_var_occur": {"parser": [["cls", "parser", "cli_parser", "get_parser"]]}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["cls", "parser", "cli_parser", "get_parser"]]}, "params_p": {"args": [], "cls": [["Callable", 0.2043654510322698], ["List[str]", 0.15935622434553923], ["dict", 0.08429449144280911]], "kwargs": [], "self": []}, "q_name": "TestCLIDBClean.setup_class", "ret_exprs": [], "ret_type": "", "variables": {"parser": ""}, "variables_p": {"parser": []}}, {"docstring": {"func": "When timezone omitted we should always expect that the timestamp is", "long_descr": "coerced to tz-aware with default timezone", "ret": null}, "fn_lc": [[304, 4], [320, 9]], "fn_var_ln": {"args": [[311, 12], [311, 16]], "timestamp": [[309, 8], [309, 17]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "timestamp"], ["db_command", "cleanup_tables", "args"]], "timestamp": [["args", "self", "parser", "parse_args", "timestamp"], ["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "timestamp", "tz", "timezone", "verbose", "False", "confirm", "False", "skip_archive", "False"]]}, "name": "test_date_timezone_omitted", "params": {"run_cleanup_mock": "", "self": "", "timezone": ""}, "params_descr": {"run_cleanup_mock": "", "self": "", "timezone": ""}, "params_occur": {"run_cleanup_mock": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "timestamp", "tz", "timezone", "verbose", "False", "confirm", "False", "skip_archive", "False"]], "self": [["args", "self", "parser", "parse_args", "timestamp"]], "timezone": [["patch", "pendulum", "timezone", "timezone"], ["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "timestamp", "tz", "timezone", "verbose", "False", "confirm", "False", "skip_archive", "False"]]}, "params_p": {"args": [], "kwargs": [], "run_cleanup_mock": [["str", 0.2834899547114006], ["Dict[str, str]", 0.0969474448364148]], "self": [], "timezone": [["Dict[str, str]", 0.11101841309434222], ["bool", 0.10389174563106789]]}, "q_name": "TestCLIDBClean.test_date_timezone_omitted", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "timestamp": ""}, "variables_p": {"args": [], "timestamp": [["List[Optional[str]]", 0.14091199552993489], ["List[str]", 0.13528457071671254], ["Dict[str, Tuple[Any, Any]]", 0.11227971765115939], ["Dict[str, str]", 0.08601808296042852], ["Type[Dict[str, Any]]", 0.08480410371772827], ["dict", 0.08248698044202232], ["list", 0.08042825768579358], ["str", 0.08006948913676952]]}}, {"docstring": {"func": "When tz included in the string then default timezone should not be used.", "long_descr": null, "ret": null}, "fn_lc": [[324, 4], [340, 9]], "fn_var_ln": {"args": [[330, 12], [330, 16]], "timestamp": [[328, 8], [328, 17]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "timestamp"], ["db_command", "cleanup_tables", "args"]], "timestamp": [["args", "self", "parser", "parse_args", "timestamp"], ["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "timestamp", "verbose", "False", "confirm", "False", "skip_archive", "False"]]}, "name": "test_date_timezone_supplied", "params": {"run_cleanup_mock": "", "self": "", "timezone": ""}, "params_descr": {"run_cleanup_mock": "", "self": "", "timezone": ""}, "params_occur": {"run_cleanup_mock": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "timestamp", "verbose", "False", "confirm", "False", "skip_archive", "False"]], "self": [["args", "self", "parser", "parse_args", "timestamp"]], "timezone": [["patch", "pendulum", "timezone", "timezone"]]}, "params_p": {"args": [], "kwargs": [], "run_cleanup_mock": [["str", 0.19690528415024738], ["Dict[str, str]", 0.09932397901045185], ["List[str]", 0.09270142095439507]], "self": [], "timezone": [["int", 0.17749345688317258], ["dict", 0.09475966297750087], ["str", 0.09475966297750087], ["Optional[bool]", 0.08874672844158629]]}, "q_name": "TestCLIDBClean.test_date_timezone_supplied", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "timestamp": ""}, "variables_p": {"args": [], "timestamp": [["List[Optional[str]]", 0.14091199552993489], ["List[str]", 0.13528457071671254], ["Dict[str, Tuple[Any, Any]]", 0.11227971765115939], ["Dict[str, str]", 0.08601808296042852], ["Type[Dict[str, Any]]", 0.08480410371772827], ["dict", 0.08248698044202232], ["list", 0.08042825768579358], ["str", 0.08006948913676952]]}}, {"docstring": {"func": "When ``-y`` provided, ``confirm`` should be false.", "long_descr": null, "ret": null}, "fn_lc": [[344, 4], [366, 9]], "fn_var_ln": {"args": [[348, 8], [348, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "confirm_arg"], ["db_command", "cleanup_tables", "args"]]}, "name": "test_confirm", "params": {"confirm_arg": "", "expected": "", "run_cleanup_mock": "", "self": ""}, "params_descr": {"confirm_arg": "", "expected": "", "run_cleanup_mock": "", "self": ""}, "params_occur": {"confirm_arg": [["args", "self", "parser", "parse_args", "confirm_arg"]], "expected": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "expected", "skip_archive", "False"]], "run_cleanup_mock": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "expected", "skip_archive", "False"]], "self": [["args", "self", "parser", "parse_args", "confirm_arg"]]}, "params_p": {"args": [], "confirm_arg": [], "expected": [["unittesmock.MagicMock", 0.33636826624289673], ["unittesmock.Mock", 0.08870016998354148]], "kwargs": [], "run_cleanup_mock": [["unittesmock.MagicMock", 0.33636826624289673], ["unittesmock.Mock", 0.08870016998354148]], "self": []}, "q_name": "TestCLIDBClean.test_confirm", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": []}}, {"docstring": {"func": "When ``--skip-archive`` provided, ``skip_archive`` should be True (False otherwise).", "long_descr": null, "ret": null}, "fn_lc": [[370, 4], [392, 9]], "fn_var_ln": {"args": [[374, 8], [374, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "extra_arg"], ["db_command", "cleanup_tables", "args"]]}, "name": "test_skip_archive", "params": {"expected": "", "extra_arg": "", "run_cleanup_mock": "", "self": ""}, "params_descr": {"expected": "", "extra_arg": "", "run_cleanup_mock": "", "self": ""}, "params_occur": {"expected": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "True", "skip_archive", "expected"]], "extra_arg": [["args", "self", "parser", "parse_args", "extra_arg"]], "run_cleanup_mock": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "True", "skip_archive", "expected"]], "self": [["args", "self", "parser", "parse_args", "extra_arg"]]}, "params_p": {"args": [], "expected": [["unittesmock.MagicMock", 0.20074983944450703], ["str", 0.19357510320702817], ["unittesmock.Mock", 0.18690130364910945]], "extra_arg": [], "kwargs": [], "run_cleanup_mock": [["unittesmock.MagicMock", 0.20074983944450703], ["str", 0.19357510320702817], ["unittesmock.Mock", 0.18690130364910945]], "self": []}, "q_name": "TestCLIDBClean.test_skip_archive", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": []}}, {"docstring": {"func": "When tz included in the string then default timezone should not be used.", "long_descr": null, "ret": null}, "fn_lc": [[396, 4], [418, 9]], "fn_var_ln": {"args": [[400, 8], [400, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "dry_run_arg"], ["db_command", "cleanup_tables", "args"]]}, "name": "test_dry_run", "params": {"dry_run_arg": "", "expected": "", "run_cleanup_mock": "", "self": ""}, "params_descr": {"dry_run_arg": "", "expected": "", "run_cleanup_mock": "", "self": ""}, "params_occur": {"dry_run_arg": [["args", "self", "parser", "parse_args", "dry_run_arg"]], "expected": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "expected", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "True", "skip_archive", "False"]], "run_cleanup_mock": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "expected", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "True", "skip_archive", "False"]], "self": [["args", "self", "parser", "parse_args", "dry_run_arg"]]}, "params_p": {"args": [], "dry_run_arg": [["List[str]", 0.29234983874524006], ["bool", 0.2503611042799245], ["Optional[Sequence[str]]", 0.08732351474928557]], "expected": [["Callable", 0.1933075419357764], ["unittesmock.Mock", 0.11001365395478276]], "kwargs": [], "run_cleanup_mock": [["Callable", 0.1933075419357764], ["unittesmock.Mock", 0.11001365395478276]], "self": []}, "q_name": "TestCLIDBClean.test_dry_run", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["Tuple[Any, Any]", 0.0930662993368075]]}}, {"docstring": {"func": "When tz included in the string then default timezone should not be used.", "long_descr": null, "ret": null}, "fn_lc": [[424, 4], [446, 9]], "fn_var_ln": {"args": [[428, 8], [428, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "extra_args"], ["db_command", "cleanup_tables", "args"]]}, "name": "test_tables", "params": {"expected": "", "extra_args": "", "run_cleanup_mock": "", "self": ""}, "params_descr": {"expected": "", "extra_args": "", "run_cleanup_mock": "", "self": ""}, "params_occur": {"expected": [["run_cleanup_mock", "assert_called_once_with", "table_names", "expected", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "True", "skip_archive", "False"]], "extra_args": [["args", "self", "parser", "parse_args", "extra_args"]], "run_cleanup_mock": [["run_cleanup_mock", "assert_called_once_with", "table_names", "expected", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "False", "confirm", "True", "skip_archive", "False"]], "self": [["args", "self", "parser", "parse_args", "extra_args"]]}, "params_p": {"args": [], "expected": [["str", 0.30594635939233533], ["unittesmock.MagicMock", 0.19133625061624016], ["Optional[str]", 0.11834746641764939]], "extra_args": [["tuple", 0.13317271341827688], ["Dict[str, Any]", 0.08131342193034], ["str", 0.08131342193034]], "kwargs": [], "run_cleanup_mock": [["str", 0.30594635939233533], ["unittesmock.MagicMock", 0.19133625061624016], ["Optional[str]", 0.11834746641764939]], "self": []}, "q_name": "TestCLIDBClean.test_tables", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": []}}, {"docstring": {"func": "When tz included in the string then default timezone should not be used.", "long_descr": null, "ret": null}, "fn_lc": [[450, 4], [472, 9]], "fn_var_ln": {"args": [[454, 8], [454, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "extra_args"], ["db_command", "cleanup_tables", "args"]]}, "name": "test_verbose", "params": {"expected": "", "extra_args": "", "run_cleanup_mock": "", "self": ""}, "params_descr": {"expected": "", "extra_args": "", "run_cleanup_mock": "", "self": ""}, "params_occur": {"expected": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "expected", "confirm", "True", "skip_archive", "False"]], "extra_args": [["args", "self", "parser", "parse_args", "extra_args"]], "run_cleanup_mock": [["run_cleanup_mock", "assert_called_once_with", "table_names", "None", "dry_run", "False", "clean_before_timestamp", "pendulum", "parse", "verbose", "expected", "confirm", "True", "skip_archive", "False"]], "self": [["args", "self", "parser", "parse_args", "extra_args"]]}, "params_p": {"args": [], "expected": [["str", 0.30422747721367327]], "extra_args": [["tuple", 0.1033662541380664], ["str", 0.08699025509802231]], "kwargs": [], "run_cleanup_mock": [["str", 0.30422747721367327]], "self": []}, "q_name": "TestCLIDBClean.test_verbose", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[476, 4], [489, 9]], "fn_var_ln": {"args": [[477, 8], [477, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["db_command", "export_archived", "args"]]}, "name": "test_export_archived_records", "params": {"export_archived_mock": "", "os_mock": "", "self": ""}, "params_descr": {"export_archived_mock": "", "os_mock": "", "self": ""}, "params_occur": {"export_archived_mock": [["export_archived_mock", "assert_called_once_with", "export_format", "output_path", "table_names", "None", "drop_archives", "False", "needs_confirm", "True"]], "os_mock": [], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "export_archived_mock": [["unittesmock.MagicMock", 0.7576445208961601], ["unittesmock.Mock", 0.24235547910383962]], "kwargs": [], "os_mock": [["unittesmock.MagicMock", 1.4358172206738637e-09], ["unittesmock.Mock", 1.1266205714620269e-09], ["mock.Mock", 3.8140451505878467e-10], ["mock.MagicMock", 3.444332170450218e-10]], "self": []}, "q_name": "TestCLIDBClean.test_export_archived_records", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["tuple", 0.1681481642069882], ["List[str]", 0.10132683472143578]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[496, 4], [515, 9]], "fn_var_ln": {"args": [[499, 8], [499, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "extra_args"], ["db_command", "export_archived", "args"]]}, "name": "test_tables_in_export_archived_records_command", "params": {"expected": "", "export_archived_mock": "", "extra_args": "", "os_mock": "", "self": ""}, "params_descr": {"expected": "", "export_archived_mock": "", "extra_args": "", "os_mock": "", "self": ""}, "params_occur": {"expected": [["export_archived_mock", "assert_called_once_with", "export_format", "output_path", "table_names", "expected", "drop_archives", "False", "needs_confirm", "True"]], "export_archived_mock": [["export_archived_mock", "assert_called_once_with", "export_format", "output_path", "table_names", "expected", "drop_archives", "False", "needs_confirm", "True"]], "extra_args": [["args", "self", "parser", "parse_args", "extra_args"]], "os_mock": [], "self": [["args", "self", "parser", "parse_args", "extra_args"]]}, "params_p": {"args": [], "expected": [["unittesmock.MagicMock", 0.8072904634465662], ["unittesmock.Mock", 0.09881155950670945]], "export_archived_mock": [["unittesmock.MagicMock", 0.8072904634465662], ["unittesmock.Mock", 0.09881155950670945]], "extra_args": [["str", 0.18594752378251989], ["List[str]", 0.1025328985888976]], "kwargs": [], "os_mock": [["unittesmock.MagicMock", 0.6206483159107259], ["unittesmock.Mock", 0.13164501048696733], ["Generator[None, Any, None]", 0.0807854175439389]], "self": []}, "q_name": "TestCLIDBClean.test_tables_in_export_archived_records_command", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21616262259049338], ["tuple", 0.15540716815616526], ["Dict[str, Any]", 0.11061873262579627], ["list", 0.08108358709682857]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[520, 4], [539, 9]], "fn_var_ln": {"args": [[523, 8], [523, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "extra_args"], ["db_command", "export_archived", "args"]]}, "name": "test_drop_archives_in_export_archived_records_command", "params": {"expected": "", "export_archived_mock": "", "extra_args": "", "os_mock": "", "self": ""}, "params_descr": {"expected": "", "export_archived_mock": "", "extra_args": "", "os_mock": "", "self": ""}, "params_occur": {"expected": [["export_archived_mock", "assert_called_once_with", "export_format", "output_path", "table_names", "None", "drop_archives", "expected", "needs_confirm", "True"]], "export_archived_mock": [["export_archived_mock", "assert_called_once_with", "export_format", "output_path", "table_names", "None", "drop_archives", "expected", "needs_confirm", "True"]], "extra_args": [["args", "self", "parser", "parse_args", "extra_args"]], "os_mock": [], "self": [["args", "self", "parser", "parse_args", "extra_args"]]}, "params_p": {"args": [], "expected": [["unittesmock.MagicMock", 0.46570117649792453], ["unittesmock.Mock", 0.34322802240954753]], "export_archived_mock": [["unittesmock.MagicMock", 0.46570117649792453], ["unittesmock.Mock", 0.34322802240954753]], "extra_args": [["str", 0.2950199520006006], ["List[str]", 0.09736105442424184]], "kwargs": [], "os_mock": [["unittesmock.MagicMock", 0.6016434989407207], ["unittesmock.Mock", 0.16579913456089534]], "self": []}, "q_name": "TestCLIDBClean.test_drop_archives_in_export_archived_records_command", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21616262259049338], ["tuple", 0.15540716815616526], ["Dict[str, Any]", 0.11061873262579627], ["list", 0.08108358709682857]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[545, 4], [554, 100]], "fn_var_ln": {"args": [[546, 8], [546, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "extra_args"], ["db_command", "drop_archived", "args"]]}, "name": "test_tables_in_drop_archived_records_command", "params": {"expected": "", "extra_args": "", "mock_drop_archived_records": "", "self": ""}, "params_descr": {"expected": "", "extra_args": "", "mock_drop_archived_records": "", "self": ""}, "params_occur": {"expected": [["mock_drop_archived_records", "assert_called_once_with", "table_names", "expected", "needs_confirm", "True"]], "extra_args": [["args", "self", "parser", "parse_args", "extra_args"]], "mock_drop_archived_records": [["mock_drop_archived_records", "assert_called_once_with", "table_names", "expected", "needs_confirm", "True"]], "self": [["args", "self", "parser", "parse_args", "extra_args"]]}, "params_p": {"args": [], "expected": [["str", 0.08002802419251184]], "extra_args": [["str", 0.19849228670850297], ["List[str]", 0.11535017692105065], ["list", 0.09207926441772434]], "kwargs": [], "mock_drop_archived_records": [["str", 0.08002802419251184]], "self": []}, "q_name": "TestCLIDBClean.test_tables_in_drop_archived_records_command", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21616262259049338], ["tuple", 0.15540716815616526], ["Dict[str, Any]", 0.11061873262579627], ["list", 0.08108358709682857]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[558, 4], [567, 100]], "fn_var_ln": {"args": [[559, 8], [559, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "extra_args"], ["db_command", "drop_archived", "args"]]}, "name": "test_confirm_in_drop_archived_records_command", "params": {"expected": "", "extra_args": "", "mock_drop_archived_records": "", "self": ""}, "params_descr": {"expected": "", "extra_args": "", "mock_drop_archived_records": "", "self": ""}, "params_occur": {"expected": [["mock_drop_archived_records", "assert_called_once_with", "table_names", "None", "needs_confirm", "expected"]], "extra_args": [["args", "self", "parser", "parse_args", "extra_args"]], "mock_drop_archived_records": [["mock_drop_archived_records", "assert_called_once_with", "table_names", "None", "needs_confirm", "expected"]], "self": [["args", "self", "parser", "parse_args", "extra_args"]]}, "params_p": {"args": [], "expected": [["unittesmock.Mock", 0.18304754935125805], ["unittesmock.MagicMock", 0.09217479095517517]], "extra_args": [["str", 0.19413960048135892], ["List[str]", 0.10875338261975571]], "kwargs": [], "mock_drop_archived_records": [["unittesmock.Mock", 0.18304754935125805], ["unittesmock.MagicMock", 0.09217479095517517]], "self": []}, "q_name": "TestCLIDBClean.test_confirm_in_drop_archived_records_command", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["List[str]", 0.21616262259049338], ["tuple", 0.15540716815616526], ["Dict[str, Any]", 0.11061873262579627], ["list", 0.08108358709682857]]}}], "name": "TestCLIDBClean", "q_name": "TestCLIDBClean", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "unittest", "mock", "unittest", "mock", "MagicMock", "Mock", "call", "patch", "pendulum", "pytest", "pytest", "param", "sqlalchemy", "engine", "url", "make_url", "sqlalchemy", "exc", "OperationalError", "airflow", "cli", "cli_parser", "airflow", "cli", "commands", "db_command", "airflow", "exceptions", "AirflowException"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 126}, "session_id": "SEiKrghe3o_UEXtuApT2Y_nP1_LlCFKQpmwvOlKu2pg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}