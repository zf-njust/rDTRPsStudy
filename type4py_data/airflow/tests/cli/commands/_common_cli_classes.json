{"error": null, "response": {"classes": [{"cls_lc": [[35, 0], [145, 19]], "cls_var_ln": {"main_process_regexp": [[37, 4], [37, 23]]}, "cls_var_occur": {"main_process_regexp": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[40, 4], [41, 45]], "fn_var_ln": {"parser": [[41, 8], [41, 19]]}, "fn_var_occur": {"parser": [["self", "parser", "cli_parser", "get_parser"]]}, "name": "_make_parser", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "parser", "cli_parser", "get_parser"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "_ComonCLIGunicornTestClass._make_parser", "ret_exprs": [], "ret_type": "", "variables": {"parser": ""}, "variables_p": {"parser": [["Dict[str, Union[Any, Any]]", 0.09984435457208517]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [71, 17]], "fn_var_ln": {"airflow_internal_api_pids": [[53, 8], [53, 33]], "gunicorn_pids": [[54, 8], [54, 21]]}, "fn_var_occur": {"airflow_internal_api_pids": [["airflow_internal_api_pids", "self", "_find_all_processes", "self", "main_process_regexp"], ["airflow_internal_api_pids", "gunicorn_pids"], ["gunicorn_pids", "airflow_internal_api_pids"]], "gunicorn_pids": [["gunicorn_pids", "self", "_find_all_processes"], ["airflow_internal_api_pids", "gunicorn_pids"], ["gunicorn_pids", "airflow_internal_api_pids"]]}, "name": "_check_processes", "params": {"ignore_running": "builtins.bool", "self": ""}, "params_descr": {"ignore_running": "", "self": ""}, "params_occur": {"ignore_running": [], "self": [["self", "main_process_regexp"], ["airflow_internal_api_pids", "self", "_find_all_processes", "self", "main_process_regexp"], ["gunicorn_pids", "self", "_find_all_processes"], ["console", "print", "self", "main_process_regexp"]]}, "params_p": {"args": [], "ignore_running": [["bool", 0.9999999999999999]], "kwargs": [], "self": []}, "q_name": "_ComonCLIGunicornTestClass._check_processes", "ret_exprs": [], "ret_type": "", "variables": {"airflow_internal_api_pids": "", "gunicorn_pids": ""}, "variables_p": {"airflow_internal_api_pids": [["int", 0.5239586419462484]], "gunicorn_pids": [["int", 0.34599815595760497], ["str", 0.1671954940980967], ["Dict[str, Union[None, Any, Any]]", 0.08915612333809288], ["Pattern[str]", 0.08703148249226678], ["bool", 0.07792918147176633]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[74, 4], [81, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_cleanup", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_check_processes", "ignore_running", "True"], ["self", "_clean_pidfiles"], ["self", "_check_processes", "ignore_running", "True"], ["self", "_clean_pidfiles"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "_ComonCLIGunicornTestClass._cleanup", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [91, 38]], "fn_var_ln": {"pidfile_internal_api": [[84, 8], [84, 28]], "pidfile_monitor": [[85, 8], [85, 23]]}, "fn_var_occur": {"pidfile_internal_api": [["pidfile_internal_api", "setup_locations"], ["os", "path", "exists", "pidfile_internal_api"], ["console", "print", "pidfile_internal_api"], ["os", "remove", "pidfile_internal_api"]], "pidfile_monitor": [["pidfile_monitor", "setup_locations"], ["os", "path", "exists", "pidfile_monitor"], ["console", "print", "pidfile_monitor"], ["os", "remove", "pidfile_monitor"]]}, "name": "_clean_pidfiles", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "_ComonCLIGunicornTestClass._clean_pidfiles", "ret_exprs": [], "ret_type": "", "variables": {"pidfile_internal_api": "", "pidfile_monitor": ""}, "variables_p": {"pidfile_internal_api": [["str", 0.4959845840072894], ["List[str]", 0.20564986160276474], ["float", 0.099050119162472], ["Dict[str, List[str]]", 0.08794940734690146]], "pidfile_monitor": [["List[str]", 0.19605365181326992], ["str", 0.18199276643760068]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [103, 29]], "fn_var_ln": {"start_time": [[94, 8], [94, 18]]}, "fn_var_occur": {"start_time": [["start_time", "time", "monotonic"], ["start_time", "time", "monotonic"]]}, "name": "_wait_pidfile", "params": {"pidfile": "", "self": ""}, "params_descr": {"pidfile": "", "self": ""}, "params_occur": {"pidfile": [["open", "pidfile", "file"], ["console", "print", "pidfile"]], "self": []}, "params_p": {"args": [], "kwargs": [], "pidfile": [["str", 0.06109083612876181]], "self": []}, "q_name": "_ComonCLIGunicornTestClass._wait_pidfile", "ret_exprs": ["return int(file.read())"], "ret_type": "", "ret_type_p": [["str", 0.8925237020643879], ["Callable", 0.10747629793561236]], "variables": {"start_time": ""}, "variables_p": {"start_time": [["float", 0.5397038839796534], ["time.struct_time", 0.4602961160203466]]}}, {"docstring": {"func": "Find if process is running by matching its command line with a regexp.", "long_descr": null, "ret": "PID of the process if found, None otherwise"}, "fn_lc": [[105, 4], [123, 19]], "fn_var_ln": {"matcher": [[112, 8], [112, 15]], "proc_cmdline": [[115, 16], [115, 28]]}, "fn_var_occur": {"matcher": [["matcher", "re", "compile", "regexp_match"], ["matcher", "search", "proc_cmdline"]], "proc_cmdline": [["proc_cmdline", "join", "proc", "cmdline"], ["matcher", "search", "proc_cmdline"]]}, "name": "_find_process", "params": {"print_found_process": "", "regexp_match": "builtins.str", "self": ""}, "params_descr": {"print_found_process": "if True, print the process found", "regexp_match": "regexp to match the command line of the process", "self": ""}, "params_occur": {"print_found_process": [], "regexp_match": [["matcher", "re", "compile", "regexp_match"]], "self": []}, "params_p": {"args": [], "kwargs": [], "print_found_process": [["str", 0.2943510386838128], ["Optional[str]", 0.2943510386838128], ["BinaryIO", 0.19623402578920854], ["Optional[bool]", 0.11694688394856138], ["Optional[int]", 0.09811701289460427]], "regexp_match": [["str", 0.6114705599958685], ["Optional[str]", 0.3885294400041317]], "self": []}, "q_name": "_ComonCLIGunicornTestClass._find_process", "ret_exprs": ["return proc.pid", "return None"], "ret_type": "int | None", "ret_type_p": [["Optional[str]", 0.43454991916627156], ["Optional[float]", 0.09753784358681494], ["Optional[int]", 0.08839403127227126], ["str", 0.08743192582166709], ["int", 0.08645677678678679]], "variables": {"matcher": "", "proc_cmdline": ""}, "variables_p": {"matcher": [["str", 1.0000000000000002]], "proc_cmdline": [["Dict[str, str]", 0.20679125766894], ["str", 0.20679125766894], ["Dict[str, List[str]]", 0.10339562883447], ["cmk.gui.utils.html.HTML", 0.10339562883447], ["bytes", 0.10339562883447], ["list", 0.1003040464007045]]}}, {"docstring": {"func": "Find all running process matching their command line with a regexp and return the list of pids", "long_descr": "of the processes. found", "ret": "list of PID of the processes matching the regexp"}, "fn_lc": [[125, 4], [145, 19]], "fn_var_ln": {"matcher": [[133, 8], [133, 15]], "pids": [[134, 8], [134, 12]], "proc_cmdline": [[137, 16], [137, 28]]}, "fn_var_occur": {"matcher": [["matcher", "re", "compile", "regexp_match"], ["matcher", "match", "proc_cmdline"]], "pids": [["pids", "builtins", "list", "builtins", "int"], ["pids", "append", "proc", "pid"]], "proc_cmdline": [["proc_cmdline", "join", "proc", "cmdline"], ["matcher", "match", "proc_cmdline"]]}, "name": "_find_all_processes", "params": {"print_found_process": "", "regexp_match": "builtins.str", "self": ""}, "params_descr": {"print_found_process": "if True, print the processes found", "regexp_match": "regexp to match the command line of the processes", "self": ""}, "params_occur": {"print_found_process": [], "regexp_match": [["matcher", "re", "compile", "regexp_match"]], "self": []}, "params_p": {"args": [], "kwargs": [], "print_found_process": [["bool", 0.2862225637294181], ["str", 0.18131047397006422], ["int", 0.09560081089301653], ["List[str]", 0.08862838022153312]], "regexp_match": [["str", 1.0]], "self": []}, "q_name": "_ComonCLIGunicornTestClass._find_all_processes", "ret_exprs": ["return pids"], "ret_type": "builtins.list[builtins.int]", "ret_type_p": [["int", 0.36718209372764093], ["Tuple[bytes]", 0.12630430982832436], ["Dict[str, Any]", 0.12630430982832436], ["bool", 0.06592509057295931]], "variables": {"matcher": "", "pids": "builtins.list[builtins.int]", "proc_cmdline": ""}, "variables_p": {"matcher": [["str", 1.0]], "pids": [["int", 0.6128076487366764], ["list", 0.26946513782380344], ["Union[List[Any], List[int]]", 0.11772721343952022]], "proc_cmdline": [["list", 0.23230386647952542], ["Dict[str, str]", 0.17947627798038768], ["str", 0.17947627798038768], ["Dict[str, List[str]]", 0.08973813899019384], ["cmk.gui.utils.html.HTML", 0.08973813899019384]]}}], "name": "_ComonCLIGunicornTestClass", "q_name": "_ComonCLIGunicornTestClass", "variables": {"main_process_regexp": "builtins.str"}, "variables_p": {"main_process_regexp": [["str", 0.49999999945900286], ["bool", 6.300709559840085e-11], ["List[str]", 5.4999900323546466e-11]]}}], "funcs": [], "imports": ["__future__", "annotations", "os", "re", "time", "psutil", "pytest", "psutil", "Error", "rich", "console", "Console", "airflow", "cli", "cli_parser", "airflow", "utils", "cli", "setup_locations"], "mod_var_ln": {"console": [[32, 0], [32, 7]]}, "mod_var_occur": {"console": [["console", "print"], ["console", "print", "psutil", "Process", "pid", "as_dict", "attrs"], ["console", "print"], ["console", "print", "self", "main_process_regexp"], ["console", "print"], ["console", "print", "pidfile_internal_api"], ["console", "print", "pidfile_monitor"], ["console", "print", "pidfile"], ["console", "print", "proc", "as_dict", "attrs"], ["console", "print", "proc", "as_dict", "attrs"]]}, "no_types_annot": {"D": 7, "I": 0, "U": 19}, "session_id": "NIcl02icmHJHsfhWizbzCMfLPjqZSDCVtbqxUqYhn4A", "set": null, "tc": [false, null], "type_annot_cove": 0.27, "typed_seq": "", "untyped_seq": "", "variables": {"console": ""}, "variables_p": {"console": [["str", 0.22161819414202089], ["Dict[Any, List[int]]", 0.19997648637529647], ["int", 0.17505184252170586], ["Tuple[Any, Any]", 0.11360669403913938]]}}}