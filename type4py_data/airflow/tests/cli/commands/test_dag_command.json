{"error": null, "response": {"classes": [{"cls_lc": [[52, 0], [780, 33]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [57, 44]], "fn_var_ln": {"dagbag": [[55, 8], [55, 18]], "parser": [[57, 8], [57, 18]]}, "fn_var_occur": {"dagbag": [["cls", "dagbag", "DagBag", "include_examples", "True"], ["cls", "dagbag", "sync_to_db"]], "parser": [["cls", "parser", "cli_parser", "get_parser"]]}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["cls", "dagbag", "DagBag", "include_examples", "True"], ["cls", "dagbag", "sync_to_db"], ["cls", "parser", "cli_parser", "get_parser"]]}, "params_p": {"args": [], "cls": [["str", 0.10426416752348903], ["Callable", 0.1005317061403655], ["cmk.base.config.ConfigCache", 0.0907570953551037]], "kwargs": [], "self": []}, "q_name": "TestCliDags.setup_class", "ret_exprs": [], "ret_type": "", "variables": {"dagbag": "", "parser": ""}, "variables_p": {"dagbag": [["Tuple[Any, Any, Any, Any]", 0.11427772272131435], ["Tuple[Any, None]", 0.100641068517723], ["Tuple[List[Any], Literal]", 0.100641068517723]], "parser": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [62, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestCliDags.teardown_class", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[64, 4], [65, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.setup_method", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[67, 4], [86, 59]], "fn_var_ln": {"serialized_dags_after_clear": [[77, 12], [77, 39]], "serialized_dags_after_reserialize": [[85, 12], [85, 45]], "serialized_dags_before_command": [[70, 12], [70, 42]]}, "fn_var_occur": {"serialized_dags_after_clear": [["serialized_dags_after_clear", "session", "query", "SerializedDagModel", "all"], ["len", "serialized_dags_after_clear"]], "serialized_dags_after_reserialize": [["serialized_dags_after_reserialize", "session", "query", "SerializedDagModel", "all"], ["len", "serialized_dags_after_reserialize"]], "serialized_dags_before_command": [["serialized_dags_before_command", "session", "query", "SerializedDagModel", "all"], ["len", "serialized_dags_before_command"]]}, "name": "test_reserialize", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_reserialize", "self", "parser", "parse_args"], ["dag_command", "dag_reserialize", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_reserialize", "ret_exprs": [], "ret_type": "", "variables": {"serialized_dags_after_clear": "", "serialized_dags_after_reserialize": "", "serialized_dags_before_command": ""}, "variables_p": {"serialized_dags_after_clear": [["dict", 0.3717458082461582], ["List[str]", 0.09742405661875818], ["tests.components.homekit_controller.common.FakeService", 0.09174111749377184], ["Dict[str, Any]", 0.08661330172271194]], "serialized_dags_after_reserialize": [["dict", 0.3717458082461582], ["List[str]", 0.09742405661875818], ["tests.components.homekit_controller.common.FakeService", 0.09174111749377184], ["Dict[str, Any]", 0.08661330172271194]], "serialized_dags_before_command": [["set", 0.28412546617581935], ["int", 0.19416994109679775], ["List[str]", 0.1424217553956485], ["dict", 0.10480600077072795], ["Dict[str, List[str]]", 0.0952738034002095], ["tuple", 0.0939074513801539]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[88, 4], [110, 58]], "fn_var_ln": {"dag_path": [[98, 8], [98, 16]], "dagbag_default": [[100, 8], [100, 22]], "serialized_dags_after_clear": [[94, 12], [94, 39]], "serialized_dags_after_reserialize": [[109, 12], [109, 45]]}, "fn_var_occur": {"dag_path": [["dag_path", "self", "dagbag", "dags", "fileloc"], ["dag_command", "dag_reserialize", "self", "parser", "parse_args", "dag_path"]], "dagbag_default": [["dagbag_default", "list", "DagBag", "__init__", "__defaults__"], ["dagbag_default", "False"], ["mock", "patch", "tuple", "dagbag_default"]], "serialized_dags_after_clear": [["serialized_dags_after_clear", "session", "query", "SerializedDagModel", "all"], ["len", "serialized_dags_after_clear"]], "serialized_dags_after_reserialize": [["serialized_dags_after_reserialize", "session", "query", "SerializedDagModel", "all"], ["len", "serialized_dags_after_reserialize"]]}, "name": "test_reserialize_should_support_subdir_argument", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_reserialize", "self", "parser", "parse_args"], ["dag_path", "self", "dagbag", "dags", "fileloc"], ["dag_command", "dag_reserialize", "self", "parser", "parse_args", "dag_path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_reserialize_should_support_subdir_argument", "ret_exprs": [], "ret_type": "", "variables": {"dag_path": "", "dagbag_default": "", "serialized_dags_after_clear": "", "serialized_dags_after_reserialize": ""}, "variables_p": {"dag_path": [["str", 0.7877716092024871]], "dagbag_default": [["Dict[str, Literal[False]]", 0.16974018902854088], ["dict", 0.16718701690063276], ["Dict[str, bool]", 0.10360659421331547], ["Dict[str, dict]", 0.09908595600547475], ["Type[List[Any]]", 0.08621794146107974]], "serialized_dags_after_clear": [["dict", 0.3717458082461582], ["List[str]", 0.09742405661875818], ["tests.components.homekit_controller.common.FakeService", 0.09174111749377184], ["Dict[str, Any]", 0.08661330172271194]], "serialized_dags_after_reserialize": [["dict", 0.3717458082461582], ["List[str]", 0.09742405661875818], ["tests.components.homekit_controller.common.FakeService", 0.09174111749377184], ["Dict[str, Any]", 0.08661330172271194]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [237, 87]], "fn_var_ln": {"dag": [[138, 8], [138, 11]], "output": [[229, 8], [229, 14]]}, "fn_var_occur": {"dag": [["dag", "self", "dagbag", "get_dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"]], "output": [["output", "stdout", "getvalue"], ["DEFAULT_DATE", "isoformat", "output"], ["output", "stdout", "getvalue"], ["DEFAULT_DATE", "isoformat", "output"], ["DEFAULT_DATE", "isoformat", "output"]]}, "name": "test_backfill", "params": {"mock_run": "", "self": ""}, "params_descr": {"mock_run": "", "self": ""}, "params_occur": {"mock_run": [["mock_run", "assert_called_once_with", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "False", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "False", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"], ["mock_run", "reset_mock"], ["mock_run", "assert_not_called"], ["mock_run", "assert_not_called"], ["mock_run", "assert_called_once_with", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "True", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "False", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"], ["mock_run", "reset_mock"]], "self": [["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["dag", "self", "dagbag", "get_dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "mock_run": [["str", 0.2930539034802326], ["models.user.User", 0.10502022100907168], ["Iterator[Tuple[hermes.types.UserType, hermes.types.EmailAddressType]]", 0.10232893242992823], ["unittesmock.MagicMock", 0.09561957369713457]], "self": []}, "q_name": "TestCliDags.test_backfill", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "output": ""}, "variables_p": {"dag": [["str", 0.27738250724111074], ["api.schemas.HistorySchema", 0.09723730554911875], ["float", 0.09636221256813628], ["utils.mssql_counters.Section", 0.09281875717908816], ["Dict[str, Any]", 0.09048590733810778], ["Set[str]", 0.0792460012907897]], "output": [["int", 0.0921078776012277], ["Dict[str, Any]", 0.08628434031312664]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[240, 4], [246, 40]], "fn_var_ln": {"cli_args": [[241, 8], [241, 16]]}, "fn_var_occur": {"cli_args": [["cli_args", "self", "parser", "parse_args"], ["dag_command", "dag_backfill", "cli_args"]]}, "name": "test_backfill_fails_without_loading_dags", "params": {"mock_get_dag": "", "self": ""}, "params_descr": {"mock_get_dag": "", "self": ""}, "params_occur": {"mock_get_dag": [["mock_get_dag", "assert_not_called"]], "self": [["cli_args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_dag": [], "self": []}, "q_name": "TestCliDags.test_backfill_fails_without_loading_dags", "ret_exprs": [], "ret_type": "", "variables": {"cli_args": ""}, "variables_p": {"cli_args": [["List[str]", 0.4998417003651302], ["list", 0.09378367555833232], ["Dict[str, Union[Any, Any]]", 0.08912156787002229], ["io.TextIOWrapper", 0.08848979775611503]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[248, 4], [253, 42]], "fn_var_ln": {"out": [[251, 8], [251, 11]]}, "fn_var_occur": {"out": [["out", "temp_stdout", "getvalue"]]}, "name": "test_show_dag_dependencies_print", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_dependencies_show", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_show_dag_dependencies_print", "ret_exprs": [], "ret_type": "", "variables": {"out": ""}, "variables_p": {"out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[256, 4], [265, 45]], "fn_var_ln": {"out": [[261, 8], [261, 11]]}, "fn_var_occur": {"out": [["out", "temp_stdout", "getvalue"]]}, "name": "test_show_dag_dependencies_save", "params": {"mock_render_dag_dependencies": "", "self": ""}, "params_descr": {"mock_render_dag_dependencies": "", "self": ""}, "params_occur": {"mock_render_dag_dependencies": [["mock_render_dag_dependencies", "return_value", "render", "assert_called_once_with", "cleanup", "True", "filename", "format"]], "self": [["dag_command", "dag_dependencies_show", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_render_dag_dependencies": [["unittesmock.MagicMock", 0.7071793868506218], ["mock.MagicMock", 0.09707057765047963]], "self": []}, "q_name": "TestCliDags.test_show_dag_dependencies_save", "ret_exprs": [], "ret_type": "", "variables": {"out": ""}, "variables_p": {"out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[267, 4], [273, 49]], "fn_var_ln": {"out": [[270, 8], [270, 11]]}, "fn_var_occur": {"out": [["out", "temp_stdout", "getvalue"]]}, "name": "test_show_dag_print", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_show", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_show_dag_print", "ret_exprs": [], "ret_type": "", "variables": {"out": ""}, "variables_p": {"out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[276, 4], [285, 46]], "fn_var_ln": {"out": [[281, 8], [281, 11]]}, "fn_var_occur": {"out": [["out", "temp_stdout", "getvalue"]]}, "name": "test_show_dag_save", "params": {"mock_render_dag": "", "self": ""}, "params_descr": {"mock_render_dag": "", "self": ""}, "params_occur": {"mock_render_dag": [["mock_render_dag", "return_value", "render", "assert_called_once_with", "cleanup", "True", "filename", "format"]], "self": [["dag_command", "dag_show", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_render_dag": [["unittesmock.MagicMock", 0.731013457361921]], "self": []}, "q_name": "TestCliDags.test_show_dag_save", "ret_exprs": [], "ret_type": "", "variables": {"out": ""}, "variables_p": {"out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[289, 4], [303, 27]], "fn_var_ln": {"mock_proc": [[291, 8], [291, 17]], "out": [[299, 8], [299, 11]], "returncode": [[292, 8], [292, 28]]}, "fn_var_occur": {"mock_proc": [["mock_proc", "mock", "MagicMock"], ["mock_proc", "returncode"], ["mock_proc", "communicate", "return_value"], ["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"], ["mock_proc", "communicate", "assert_called_once_with"]], "out": [["out", "temp_stdout", "getvalue"]], "returncode": [["mock_proc", "returncode"]]}, "name": "test_show_dag_imgcat", "params": {"mock_popen": "", "mock_render_dag": "", "self": ""}, "params_descr": {"mock_popen": "", "mock_render_dag": "", "self": ""}, "params_occur": {"mock_popen": [["mock_popen", "return_value", "__enter__", "return_value", "mock_proc"]], "mock_render_dag": [["mock_render_dag", "return_value", "pipe", "return_value"], ["mock_render_dag", "return_value", "pipe", "assert_called_once_with", "format"]], "self": [["dag_command", "dag_show", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_popen": [["unittesmock.MagicMock", 0.6525422387432332]], "mock_render_dag": [["unittesmock.MagicMock", 0.3523083323466176], ["mock.MagicMock", 0.09603266064911364]], "self": []}, "q_name": "TestCliDags.test_show_dag_imgcat", "ret_exprs": [], "ret_type": "", "variables": {"mock_proc": "", "out": "", "returncode": ""}, "variables_p": {"mock_proc": [["unittesmock.MagicMock", 0.3097125000238798], ["mock.Mock", 0.10691836243222702]], "out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]], "returncode": [["str", 0.46146968833119484], ["List[Dict[str, float]]", 0.10543346334745063], ["Dict[str, Dict[str, str]]", 0.0831681400737581]]}}, {"docstring": {"func": "Test that CLI respects -I argument", "long_descr": "We just check we call dag.run() right. The behaviour of that kwarg is\ntested in test_jobs", "ret": null}, "fn_lc": [[306, 4], [344, 9]], "fn_var_ln": {"args": [[315, 8], [315, 12]], "dag": [[324, 8], [324, 11]], "dag_id": [[313, 8], [313, 14]], "run_date": [[314, 8], [314, 16]]}, "fn_var_occur": {"args": [["args", "dag_id", "run_date", "isoformat"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "args", "dag", "dag"]], "dag": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "args", "dag", "dag"]], "dag_id": [["args", "dag_id", "run_date", "isoformat"], ["dag", "self", "dagbag", "get_dag", "dag_id"]], "run_date": [["run_date", "DEFAULT_DATE", "timedelta", "days"], ["args", "dag_id", "run_date", "isoformat"], ["mock_run", "assert_called_once_with", "start_date", "run_date", "end_date", "run_date", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "True", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "False", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"]]}, "name": "test_cli_backfill_depends_on_past", "params": {"mock_run": "", "self": ""}, "params_descr": {"mock_run": "", "self": ""}, "params_occur": {"mock_run": [["mock_run", "assert_called_once_with", "start_date", "run_date", "end_date", "run_date", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "True", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "False", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"]], "self": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "args", "dag", "dag"]]}, "params_p": {"args": [], "kwargs": [], "mock_run": [["str", 0.3001423859433849]], "self": []}, "q_name": "TestCliDags.test_cli_backfill_depends_on_past", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag": "", "dag_id": "", "run_date": ""}, "variables_p": {"args": [], "dag": [["list", 0.39148540654908603], ["int", 0.10083634016258747], ["Dict[str, Dict[str, Any]]", 0.08752961048099783]], "dag_id": [["int", 0.2981885245986474], ["str", 0.1991480567760256], ["Pattern[Any]", 0.09155167874615823]], "run_date": [["datetime.datetime.datetime", 0.28634372424085053], ["datetime.datetime", 0.20258478465347082], ["datetime.datetime.time", 0.11421699061776125], ["datetime.date.time.timedelta", 0.1044754678419551], ["datetime.datetime.timedelta", 0.10344011073486944], ["datetime.date.time.datetime", 0.09640373790521008], ["str", 0.09253518400588277]]}}, {"docstring": {"func": "Test that CLI respects -B argument and raises on interaction with depends_on_past", "long_descr": null, "ret": null}, "fn_lc": [[347, 4], [385, 9]], "fn_var_ln": {"args": [[354, 8], [354, 12]], "dag": [[366, 8], [366, 11]], "dag_id": [[351, 8], [351, 14]], "end_date": [[353, 8], [353, 16]], "start_date": [[352, 8], [352, 18]]}, "fn_var_occur": {"args": [["args", "dag_id", "start_date", "isoformat", "end_date", "isoformat"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "args", "dag", "dag"]], "dag": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "args", "dag", "dag"]], "dag_id": [["args", "dag_id", "start_date", "isoformat", "end_date", "isoformat"], ["dag", "self", "dagbag", "get_dag", "dag_id"]], "end_date": [["end_date", "start_date", "timedelta", "days"], ["args", "dag_id", "start_date", "isoformat", "end_date", "isoformat"], ["mock_run", "assert_called_once_with", "start_date", "start_date", "end_date", "end_date", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "True", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "True", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"]], "start_date": [["start_date", "DEFAULT_DATE", "timedelta", "days"], ["end_date", "start_date", "timedelta", "days"], ["args", "dag_id", "start_date", "isoformat", "end_date", "isoformat"], ["mock_run", "assert_called_once_with", "start_date", "start_date", "end_date", "end_date", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "True", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "True", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"]]}, "name": "test_cli_backfill_depends_on_past_backwards", "params": {"mock_run": "", "self": ""}, "params_descr": {"mock_run": "", "self": ""}, "params_occur": {"mock_run": [["mock_run", "assert_called_once_with", "start_date", "start_date", "end_date", "end_date", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "True", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "True", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"]], "self": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "args", "dag", "dag"]]}, "params_p": {"args": [], "kwargs": [], "mock_run": [["str", 0.19288079403873137], ["models.user.User", 0.11150430162885731], ["Iterator[Tuple[hermes.types.UserType, hermes.types.EmailAddressType]]", 0.11060674544189421], ["unittesmock.MagicMock", 0.09420836339235247]], "self": []}, "q_name": "TestCliDags.test_cli_backfill_depends_on_past_backwards", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag": "", "dag_id": "", "end_date": "", "start_date": ""}, "variables_p": {"args": [["Dict[str, Union[None, Any, float, int, str]]", 0.19738015525268082], ["Dict[str, Union[None, Any, int, str]]", 0.19463444889242343], ["str", 0.11681781049570694], ["Dict[str, Union[None, float, int, str]]", 0.10644882288418456], ["List[str]", 0.10181486640374628], ["list", 0.10176068837432409]], "dag": [["list", 0.39148540654908603], ["int", 0.10083634016258747], ["Dict[str, Dict[str, Any]]", 0.08752961048099783]], "dag_id": [["str", 0.4832552736318757], ["Optional[str]", 0.24284430945124275], ["datetime.date", 0.0941570450855307], ["int", 0.081745555550043]], "end_date": [["datetime.date", 0.6230740039298424], ["datetime.date.time.date", 0.19756662137229736], ["Type[leasing.models.vaVat]", 0.09040346356188092], ["datetime.datetime.datetime", 0.08895591113597945]], "start_date": [["datetime.date", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[387, 4], [462, 39]], "fn_var_ln": {"args": [[451, 12], [451, 16]], "dag_file": [[408, 12], [408, 20]], "dag_test_list": [[388, 8], [388, 21]], "dagbag": [[461, 8], [461, 26]], "default_run": [[416, 8], [416, 19]], "expected_output": [[420, 8], [420, 23]], "file_content": [[399, 12], [399, 24]], "future_run": [[417, 8], [417, 18]], "out": [[456, 16], [456, 19]], "past_run": [[418, 8], [418, 16]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "dag_id", "str", "tmp_path"], ["dag_command", "dag_next_execution", "args"], ["args", "self", "parser", "parse_args", "dag_id", "str", "tmp_path"], ["dag_command", "dag_next_execution", "args"]], "dag_file": [["dag_file", "tmp_path", "f"], ["dag_file", "write_text", "file_content"]], "dag_test_list": [], "dagbag": [["self", "dagbag", "DagBag", "dag_folder", "tmp_path", "include_examples", "False"], ["self", "dagbag", "sync_to_db"], ["TestCliDags", "dagbag", "DagBag", "include_examples", "True"], ["TestCliDags", "dagbag", "sync_to_db"]], "default_run": [["default_run", "DEFAULT_DATE"], ["future_run", "default_run", "timedelta", "days"], ["past_run", "default_run", "timedelta", "days"], ["expected_output", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "days", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "hours", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "past_run", "isoformat", "past_run", "isoformat", "past_run", "isoformat", "os", "linesep", "past_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "os", "linesep", "default_run", "isoformat"]], "expected_output": [["expected_output", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "days", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "hours", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "past_run", "isoformat", "past_run", "isoformat", "past_run", "isoformat", "os", "linesep", "past_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "os", "linesep", "default_run", "isoformat"], ["expected_output", "dag_id", "out"], ["expected_output", "dag_id", "out"]], "file_content": [["file_content", "os", "linesep", "join", "f", "f", "f", "f"], ["dag_file", "write_text", "file_content"]], "future_run": [["future_run", "default_run", "timedelta", "days"], ["expected_output", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "days", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "hours", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "past_run", "isoformat", "past_run", "isoformat", "past_run", "isoformat", "os", "linesep", "past_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "os", "linesep", "default_run", "isoformat"]], "out": [["out", "temp_stdout", "getvalue"], ["expected_output", "dag_id", "out"], ["out", "temp_stdout", "getvalue"], ["expected_output", "dag_id", "out"]], "past_run": [["past_run", "default_run", "timedelta", "days"], ["expected_output", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "days", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "future_run", "timedelta", "hours", "isoformat", "future_run", "isoformat", "future_run", "isoformat", "os", "linesep", "past_run", "isoformat", "past_run", "isoformat", "past_run", "isoformat", "os", "linesep", "past_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "default_run", "timedelta", "days", "isoformat", "os", "linesep", "default_run", "isoformat"]]}, "name": "test_next_execution", "params": {"self": "", "tmp_path": ""}, "params_descr": {"self": "", "tmp_path": ""}, "params_occur": {"self": [["self", "dagbag", "DagBag", "dag_folder", "tmp_path", "include_examples", "False"], ["self", "dagbag", "sync_to_db"], ["args", "self", "parser", "parse_args", "dag_id", "str", "tmp_path"], ["args", "self", "parser", "parse_args", "dag_id", "str", "tmp_path"]], "tmp_path": [["dag_file", "tmp_path", "f"], ["self", "dagbag", "DagBag", "dag_folder", "tmp_path", "include_examples", "False"], ["args", "self", "parser", "parse_args", "dag_id", "str", "tmp_path"], ["args", "self", "parser", "parse_args", "dag_id", "str", "tmp_path"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tmp_path": [["str", 0.1819366821647625], ["bool", 0.11680344101044916]]}, "q_name": "TestCliDags.test_next_execution", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag_file": "", "dag_test_list": "", "dagbag": "", "default_run": "", "expected_output": "", "file_content": "", "future_run": "", "out": "", "past_run": ""}, "variables_p": {"args": [], "dag_file": [["str", 0.7107519707543751]], "dag_test_list": [["int", 0.4220668323886434], ["bool", 0.26459334640407184], ["str", 0.2272130571511078], ["List[str]", 0.08612676405617706]], "dagbag": [["str", 0.9999999999999998]], "default_run": [["int", 0.10600765477208257], ["raiden.tests.integration.network.proxies.BalanceProof", 0.08323111246588459]], "expected_output": [["str", 1.0]], "file_content": [["str", 0.694263169469657], ["io.BufferedReader", 0.12017376869801014], ["Pattern[str]", 0.09660393431234868], ["io.TextIOWrapper", 0.08895912751998428]], "future_run": [["int", 0.6726169827195786]], "out": [["str", 0.1184229029399094], ["float", 0.10668891800015594]], "past_run": [["int", 0.6726169827195786]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[465, 4], [472, 39]], "fn_var_ln": {"args": [[466, 8], [466, 12]], "out": [[469, 12], [469, 15]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["dag_command", "dag_report", "args"]], "out": [["out", "temp_stdout", "getvalue"]]}, "name": "test_cli_report", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_report", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "out": ""}, "variables_p": {"args": [["tuple", 0.1681481642069882], ["List[str]", 0.10132683472143578]], "out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[475, 4], [491, 31]], "fn_var_ln": {"args": [[476, 8], [476, 12]], "dag_detail_fields": [[481, 8], [481, 25]], "dag_details_values": [[488, 8], [488, 26]], "out": [[479, 12], [479, 15]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["dag_command", "dag_details", "args"]], "dag_detail_fields": [["dag_detail_fields", "DAGSchema", "fields", "keys"]], "dag_details_values": [], "out": [["out", "temp_stdout", "getvalue"], ["field", "out"], ["value", "out"]]}, "name": "test_cli_get_dag_details", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_get_dag_details", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag_detail_fields": "", "dag_details_values": "", "out": ""}, "variables_p": {"args": [["tuple", 0.1681481642069882], ["List[str]", 0.10132683472143578]], "dag_detail_fields": [["int", 0.19076642577521427], ["dict", 0.18299215384725354], ["List[str]", 0.1401622613106755], ["List[Tuple[Any, Any, Any]]", 0.11416492716301403], ["Type[Dict[str, str]]", 0.09845390077417646], ["frozenset[str]", 0.09097175591122628], ["tuple", 0.08384554337418114]], "dag_details_values": [["int", 0.39999999999999997], ["Tuple[str, str, str]", 0.19999999999999998], ["bool", 0.09999999999999999], ["str", 0.09999999999999999], ["float", 0.09999999999999999], ["Dict[str, Union[Any, Any]]", 0.09999999999999999]], "out": [["Dict[str, str]", 0.15087414165314272], ["str", 0.11321378619822238], ["Tuple[Any, Any]", 0.10875591442943593], ["property", 0.10326387606734125]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[494, 4], [503, 33]], "fn_var_ln": {"args": [[495, 8], [495, 12]], "out": [[498, 12], [498, 15]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["dag_command", "dag_list_dags", "args"]], "out": [["out", "temp_stdout", "getvalue"]]}, "name": "test_cli_list_dags", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_list_dags", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "out": ""}, "variables_p": {"args": [["tuple", 0.3697846147799203]], "out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[506, 4], [512, 49]], "fn_var_ln": {"args": [[508, 8], [508, 12]], "dag_path": [[507, 8], [507, 16]], "out": [[511, 12], [511, 15]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "dag_path"], ["dag_command", "dag_list_dags", "args"]], "dag_path": [["dag_path", "os", "path", "join", "TEST_DAGS_FOLDER"], ["args", "self", "parser", "parse_args", "dag_path"]], "out": [["out", "temp_stderr", "getvalue"]]}, "name": "test_cli_list_dags_prints_import_errors", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args", "dag_path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_list_dags_prints_import_errors", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag_path": "", "out": ""}, "variables_p": {"args": [["List[str]", 0.5023935915578213], ["Dict[str, Any]", 0.0835821738026395]], "dag_path": [["str", 0.7987871064918008], ["Tuple[str]", 0.08580993748546939]], "out": [["io.StringIO", 0.49999999995020333], ["int", 2.078650353497116e-11], ["bool", 1.247932310695279e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 1.1523535588909472e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[515, 4], [522, 30]], "fn_var_ln": {"args": [[517, 8], [517, 12]], "dag_path": [[516, 8], [516, 16]], "out": [[520, 12], [520, 15]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "dag_path"], ["dag_command", "dag_list_import_errors", "args"]], "dag_path": [["dag_path", "os", "path", "join", "TEST_DAGS_FOLDER"], ["args", "self", "parser", "parse_args", "dag_path"], ["dag_path", "out"]], "out": [["out", "temp_stdout", "getvalue"], ["dag_path", "out"]]}, "name": "test_cli_list_import_errors", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args", "dag_path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_list_import_errors", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "dag_path": "", "out": ""}, "variables_p": {"args": [["List[str]", 0.4864986877992778]], "dag_path": [["str", 0.6024509623925334], ["Tuple[str]", 0.1029580831343441]], "out": [["Optional[Match[str]]", 0.0977651028804802], ["int", 0.09639782160843972], ["str", 0.09367664825056381], ["[str]", 0.08736581933824639], ["list", 0.07684611105307546]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[524, 4], [547, 43]], "fn_var_ln": {"args": [[534, 8], [534, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "timezone", "make_aware", "datetime", "max", "isoformat"], ["dag_command", "dag_list_dag_runs", "args"]]}, "name": "test_cli_list_dag_runs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_trigger", "self", "parser", "parse_args"], ["args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "timezone", "make_aware", "datetime", "max", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_list_dag_runs", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.29794366256004723], ["Dict[str, Any]", 0.09865275597304102], ["List[str]", 0.09609217812618218], ["Set[str]", 0.09537883209959883], ["str", 0.0944379182588468]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[549, 4], [564, 39]], "fn_var_ln": {"args": [[550, 8], [550, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["dag_command", "dag_list_jobs", "args"]]}, "name": "test_cli_list_jobs_with_args", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_list_jobs_with_args", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["tuple", 0.3697846147799203]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[566, 4], [573, 86]], "fn_var_ln": {"args": [[571, 8], [571, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["dag_command", "dag_pause", "args"], ["args", "self", "parser", "parse_args"], ["dag_command", "dag_unpause", "args"]]}, "name": "test_pause", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"], ["self", "dagbag", "dags", "get_is_paused", "True"], ["args", "self", "parser", "parse_args"], ["self", "dagbag", "dags", "get_is_paused", "False"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_pause", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[575, 4], [602, 100]], "fn_var_ln": {"dagrun": [[589, 12], [589, 18]]}, "fn_var_occur": {"dagrun": [["dagrun", "session", "query", "DagRun", "filter", "DagRun", "run_id", "one"], ["dagrun", "run_type", "DagRunType", "MANUAL"], ["dagrun", "external_trigger"], ["dagrun", "conf"], ["dagrun", "execution_date", "isoformat", "timespec"], ["dagrun", "data_interval_start", "isoformat", "timespec"], ["dagrun", "data_interval_end", "isoformat", "timespec"]]}, "name": "test_trigger_dag", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_trigger", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_trigger_dag", "ret_exprs": [], "ret_type": "", "variables": {"dagrun": ""}, "variables_p": {"dagrun": [["str", 0.37905589282267743], ["int", 0.36732191472789916]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[604, 4], [624, 109]], "fn_var_ln": {"dagrun": [[619, 12], [619, 18]]}, "fn_var_occur": {"dagrun": [["dagrun", "session", "query", "DagRun", "filter", "DagRun", "run_id", "one"], ["dagrun", "run_type", "DagRunType", "MANUAL"], ["dagrun", "external_trigger"], ["dagrun", "execution_date", "isoformat", "timespec"]]}, "name": "test_trigger_dag_with_microseconds", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_trigger", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_trigger_dag_with_microseconds", "ret_exprs": [], "ret_type": "", "variables": {"dagrun": ""}, "variables_p": {"dagrun": [["str", 0.37905589282267743], ["int", 0.36732191472789916]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[626, 4], [640, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_trigger_dag_invalid_conf", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_trigger", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_trigger_dag_invalid_conf", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[642, 4], [664, 74]], "fn_var_ln": {"args": [[643, 8], [643, 12]], "out": [[658, 12], [658, 15]], "parsed_out": [[659, 8], [659, 18]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["dag_command", "dag_trigger", "args"]], "out": [["out", "temp_stdout", "getvalue", "strip", "split"], ["parsed_out", "json", "loads", "out"]], "parsed_out": [["parsed_out", "json", "loads", "out"], ["len", "parsed_out"]]}, "name": "test_trigger_dag_output_as_json", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_trigger_dag_output_as_json", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "out": "", "parsed_out": ""}, "variables_p": {"args": [["tuple", 0.1681481642069882], ["List[str]", 0.10132683472143578]], "out": [["tuple", 0.29144563564908604], ["Dict[Tuple[int, int], str]", 0.10168109600322951], ["List[str]", 0.09451894596194249], ["dict", 0.08757340525845103], ["Pattern[str]", 0.08555823624148064]], "parsed_out": [["Set[str]", 0.3208043226414825], ["str", 0.22678192588565899], ["Dict[str, Union[Any, Any]]", 0.09816726816110793], ["Dict[str, str]", 0.0955086448475894], ["int", 0.09031466242948007], ["List[str]", 0.0848341805096142], ["Tuple[str]", 0.0835889955250669]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[666, 4], [677, 13]], "fn_var_ln": {"DM": [[667, 8], [667, 10]], "key": [[668, 8], [668, 11]], "session": [[669, 8], [669, 15]]}, "fn_var_occur": {"DM": [["DM", "DagModel"], ["session", "add", "DM", "dag_id", "key"], ["session", "query", "DM", "filter_by", "dag_id", "key", "count"]], "key": [["session", "add", "DM", "dag_id", "key"], ["dag_command", "dag_delete", "self", "parser", "parse_args", "key"], ["session", "query", "DM", "filter_by", "dag_id", "key", "count"]], "session": [["session", "settings", "Session"], ["session", "add", "DM", "dag_id", "key"], ["session", "commit"], ["session", "query", "DM", "filter_by", "dag_id", "key", "count"]]}, "name": "test_delete_dag", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_delete", "self", "parser", "parse_args", "key"], ["dag_command", "dag_delete", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_delete_dag", "ret_exprs": [], "ret_type": "", "variables": {"DM": "", "key": "", "session": ""}, "variables_p": {"DM": [["str", 0.22985341159087164], ["list", 0.13648264328819468], ["golem.rpc.session.WebSocketAddress", 0.10554790382985747], ["dict", 0.09221012093593495]], "key": [["list", 0.2729215416293098], ["Type[osmapp.models.Tag]", 0.2272127106783355], ["int", 0.19022373234017076], ["dict", 0.1303550288147828]], "session": [["sqlalchemy.orm.session.Session", 0.0908150789665875]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[679, 4], [689, 71]], "fn_var_ln": {"DM": [[682, 8], [682, 10]], "key": [[683, 8], [683, 11]], "session": [[684, 8], [684, 15]]}, "fn_var_occur": {"DM": [["DM", "DagModel"], ["session", "add", "DM", "dag_id", "key", "fileloc", "f", "name"], ["session", "query", "DM", "filter_by", "dag_id", "key", "count"]], "key": [["session", "add", "DM", "dag_id", "key", "fileloc", "f", "name"], ["dag_command", "dag_delete", "self", "parser", "parse_args", "key"], ["session", "query", "DM", "filter_by", "dag_id", "key", "count"]], "session": [["session", "settings", "Session"], ["session", "add", "DM", "dag_id", "key", "fileloc", "f", "name"], ["session", "commit"], ["session", "query", "DM", "filter_by", "dag_id", "key", "count"]]}, "name": "test_delete_dag_existing_file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_delete", "self", "parser", "parse_args", "key"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_delete_dag_existing_file", "ret_exprs": [], "ret_type": "", "variables": {"DM": "", "key": "", "session": ""}, "variables_p": {"DM": [["str", 0.248154784823565], ["dict", 0.20921360699533462], ["Optional[\"Lecture\"]", 0.07909540396263372]], "key": [["int", 0.2366110807743103], ["dict", 0.10788194225130043], ["Tuple[Any, Any, Any, Any]", 0.08354495324742739]], "session": [["Dict[str, Union[Any, Any, Any]]", 0.08822197589180858]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[691, 4], [693, 39]], "fn_var_ln": {"args": [[692, 8], [692, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["dag_command", "dag_list_jobs", "args"]]}, "name": "test_cli_list_jobs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_cli_list_jobs", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["tuple", 0.3697846147799203]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[695, 4], [701, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_dag_state", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["dag_command", "dag_state", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliDags.test_dag_state", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[704, 4], [715, 9]], "fn_var_ln": {"cli_args": [[705, 8], [705, 16]]}, "fn_var_occur": {"cli_args": [["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["dag_command", "dag_test", "cli_args"], ["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "None", "session", "mock", "ANY"]]}, "name": "test_dag_test", "params": {"mock_get_dag": "", "self": ""}, "params_descr": {"mock_get_dag": "", "self": ""}, "params_occur": {"mock_get_dag": [["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "None", "session", "mock", "ANY"]], "self": [["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_dag": [["unittesmock.MagicMock", 0.7650580821072095]], "self": []}, "q_name": "TestCliDags.test_dag_test", "ret_exprs": [], "ret_type": "", "variables": {"cli_args": ""}, "variables_p": {"cli_args": [["List[str]", 0.44417343281252825], ["Dict[str, Any]", 0.085563553462941], ["str", 0.08044108438479344], ["Type[Tuple[str, Any]]", 0.08013411563675402]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[719, 4], [733, 9]], "fn_var_ln": {"cli_args": [[722, 8], [722, 16]], "now": [[720, 8], [720, 11]], "return_value": [[721, 8], [721, 32]]}, "fn_var_occur": {"cli_args": [["cli_args", "self", "parser", "parse_args"], ["cli_args", "execution_date", "None"], ["dag_command", "dag_test", "cli_args"], ["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "mock", "ANY", "run_conf", "None", "session", "mock", "ANY"]], "now": [["now", "pendulum", "now"], ["mock_utcnow", "return_value", "now"]], "return_value": [["mock_utcnow", "return_value", "now"]]}, "name": "test_dag_test_no_execution_date", "params": {"mock_get_dag": "", "mock_utcnow": "", "self": ""}, "params_descr": {"mock_get_dag": "", "mock_utcnow": "", "self": ""}, "params_occur": {"mock_get_dag": [["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "mock", "ANY", "run_conf", "None", "session", "mock", "ANY"]], "mock_utcnow": [["mock_utcnow", "return_value", "now"]], "self": [["cli_args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_dag": [["unittesmock.MagicMock", 0.8215296525771544]], "mock_utcnow": [["unittesmock.MagicMock", 0.09262559243756514]], "self": []}, "q_name": "TestCliDags.test_dag_test_no_execution_date", "ret_exprs": [], "ret_type": "", "variables": {"cli_args": "", "now": "", "return_value": ""}, "variables_p": {"cli_args": [["List[str]", 0.0798848186204708]], "now": [["list", 0.2905696572420666], ["Type[Tuple[str, Any]]", 0.1229722869585867], ["Dict[str, float]", 0.10820267754316319], ["Coroutine[Any, Any, None]", 0.09757675052882524], ["int", 0.09461513246311919]], "return_value": [["str", 0.2510891219614315], ["int", 0.13944714883834364], ["Dict[str, Dict[str, Any]]", 0.07257600176012703], ["Dict[str, Union[Any, Any, Any, Any]]", 0.07173410146114423], ["List[Union[Any, Any, Any]]", 0.07173410146114423]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[736, 4], [758, 9]], "fn_var_ln": {"cli_args": [[737, 8], [737, 16]]}, "fn_var_occur": {"cli_args": [["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["dag_command", "dag_test", "cli_args"], ["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "session", "mock", "ANY"]]}, "name": "test_dag_test_conf", "params": {"mock_get_dag": "", "self": ""}, "params_descr": {"mock_get_dag": "", "self": ""}, "params_occur": {"mock_get_dag": [["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "session", "mock", "ANY"]], "self": [["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_dag": [["unittesmock.MagicMock", 0.7650580821072095]], "self": []}, "q_name": "TestCliDags.test_dag_test_conf", "ret_exprs": [], "ret_type": "", "variables": {"cli_args": ""}, "variables_p": {"cli_args": [["List[str]", 0.44417343281252825], ["Dict[str, Any]", 0.085563553462941], ["str", 0.08044108438479344], ["Type[Tuple[str, Any]]", 0.08013411563675402]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[762, 4], [780, 33]], "fn_var_ln": {"cli_args": [[763, 8], [763, 16]], "output": [[769, 8], [769, 14]]}, "fn_var_occur": {"cli_args": [["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["dag_command", "dag_test", "cli_args"], ["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "None", "session", "mock", "ANY"]], "output": [["output", "stdout", "getvalue"]]}, "name": "test_dag_test_show_dag", "params": {"mock_get_dag": "", "mock_render_dag": "", "self": ""}, "params_descr": {"mock_get_dag": "", "mock_render_dag": "", "self": ""}, "params_occur": {"mock_get_dag": [["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "None", "session", "mock", "ANY"], ["mock_render_dag", "assert_has_calls", "mock", "call", "mock_get_dag", "return_value", "tis"]], "mock_render_dag": [["mock_render_dag", "assert_has_calls", "mock", "call", "mock_get_dag", "return_value", "tis"]], "self": [["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "mock_get_dag": [["unittesmock.MagicMock", 0.6431308931056698], ["mock.Mock", 0.08538601818135433]], "mock_render_dag": [["unittesmock.MagicMock", 0.7965955527685917]], "self": []}, "q_name": "TestCliDags.test_dag_test_show_dag", "ret_exprs": [], "ret_type": "", "variables": {"cli_args": "", "output": ""}, "variables_p": {"cli_args": [["List[str]", 0.44417343281252825], ["Dict[str, Any]", 0.085563553462941], ["str", 0.08044108438479344], ["Type[Tuple[str, Any]]", 0.08013411563675402]], "output": [["io.TextIOWrapper", 0.6027861268650375], ["io.StringIO", 0.3972138731349623]]}}], "name": "TestCliDags", "q_name": "TestCliDags", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "contextlib", "io", "json", "os", "tempfile", "datetime", "datetime", "timedelta", "unittest", "mock", "unittest", "mock", "MagicMock", "pendulum", "pytest", "time_machine", "airflow", "settings", "airflow", "api_connexion", "schemas", "dag_schema", "DAGSchema", "airflow", "cli", "cli_parser", "airflow", "cli", "commands", "dag_command", "airflow", "exceptions", "AirflowException", "airflow", "models", "DagBag", "DagModel", "DagRun", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "utils", "timezone", "airflow", "utils", "session", "create_session", "airflow", "utils", "types", "DagRunType", "tests", "models", "TEST_DAGS_FOLDER", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_dags", "clear_db_runs"], "mod_var_ln": {"DEFAULT_DATE": [[47, 0], [47, 12]]}, "mod_var_occur": {"DEFAULT_DATE": [["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["mock_run", "assert_called_once_with", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "False", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "False", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["DEFAULT_DATE", "isoformat", "output"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "dag", "dag"], ["mock_run", "assert_called_once_with", "start_date", "DEFAULT_DATE", "end_date", "DEFAULT_DATE", "conf", "None", "delay_on_limit_secs", "donot_pickle", "False", "ignore_first_depends_on_past", "True", "ignore_task_deps", "False", "local", "True", "mark_success", "False", "pool", "None", "rerun_failed_tasks", "False", "run_backwards", "False", "verbose", "False", "continue_on_failures", "False", "disable_retry", "False"], ["dag_command", "dag_backfill", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["DEFAULT_DATE", "isoformat", "output"], ["DEFAULT_DATE", "isoformat", "output"], ["run_date", "DEFAULT_DATE", "timedelta", "days"], ["start_date", "DEFAULT_DATE", "timedelta", "days"], ["time_machine", "travel", "DEFAULT_DATE"], ["default_run", "DEFAULT_DATE"], ["args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "timezone", "make_aware", "datetime", "max", "isoformat"], ["dag_command", "dag_state", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "None"], ["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "None", "session", "mock", "ANY"], ["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "session", "mock", "ANY"], ["cli_args", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["mock_get_dag", "assert_has_calls", "mock", "call", "subdir", "cli_args", "subdir", "dag_id", "mock", "call", "test", "execution_date", "timezone", "parse", "DEFAULT_DATE", "isoformat", "run_conf", "None", "session", "mock", "ANY"]]}, "no_types_annot": {"D": 1, "I": 0, "U": 126}, "session_id": "XJ9imkYUNsKxsHF49-ZLNaodZjLnPpOV-CjRm3n4iTE", "set": null, "tc": [false, null], "type_annot_cove": 0.01, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": ""}, "variables_p": {"DEFAULT_DATE": [["str", 0.6301977717110961], ["datetime.datetime.datetime", 0.09308735207218868], ["bool", 0.09215053578693215], ["Optional[str]", 0.08864145466180341]]}}}