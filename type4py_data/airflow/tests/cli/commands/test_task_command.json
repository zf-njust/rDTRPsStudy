{"error": null, "response": {"classes": [{"cls_lc": [[75, 0], [611, 37]], "cls_var_ln": {"dag": [[80, 4], [80, 7]], "dag_id": [[77, 4], [77, 10]], "dag_run": [[81, 4], [81, 11]], "dagbag": [[79, 4], [79, 10]], "parser": [[78, 4], [78, 10]], "run_id": [[76, 4], [76, 10]]}, "cls_var_occur": {"dag": [], "dag_id": [], "dag_run": [], "dagbag": [], "parser": [], "run_id": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[84, 4], [98, 9]], "fn_var_ln": {"dag": [[89, 8], [89, 15]], "dag_run": [[92, 8], [92, 19]], "dagbag": [[85, 8], [85, 18]], "data_interval": [[91, 8], [91, 21]], "parser": [[86, 8], [86, 18]]}, "fn_var_occur": {"dag": [["cls", "dag", "cls", "dagbag", "get_dag", "cls", "dag_id"], ["data_interval", "cls", "dag", "timetable", "infer_manual_data_interval", "run_after", "DEFAULT_DATE"], ["cls", "dag_run", "cls", "dag", "create_dagrun", "state", "State", "NONE", "run_id", "cls", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "DEFAULT_DATE", "data_interval", "data_interval"]], "dag_run": [["cls", "dag_run", "cls", "dag", "create_dagrun", "state", "State", "NONE", "run_id", "cls", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "DEFAULT_DATE", "data_interval", "data_interval"]], "dagbag": [["cls", "dagbag", "DagBag", "include_examples", "True"], ["cls", "dag", "cls", "dagbag", "get_dag", "cls", "dag_id"], ["cls", "dagbag", "sync_to_db"]], "data_interval": [["data_interval", "cls", "dag", "timetable", "infer_manual_data_interval", "run_after", "DEFAULT_DATE"], ["cls", "dag_run", "cls", "dag", "create_dagrun", "state", "State", "NONE", "run_id", "cls", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "DEFAULT_DATE", "data_interval", "data_interval"]], "parser": [["cls", "parser", "cli_parser", "get_parser"]]}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["cls", "dagbag", "DagBag", "include_examples", "True"], ["cls", "parser", "cli_parser", "get_parser"], ["cls", "dag", "cls", "dagbag", "get_dag", "cls", "dag_id"], ["cls", "dagbag", "sync_to_db"], ["data_interval", "cls", "dag", "timetable", "infer_manual_data_interval", "run_after", "DEFAULT_DATE"], ["cls", "dag_run", "cls", "dag", "create_dagrun", "state", "State", "NONE", "run_id", "cls", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "DEFAULT_DATE", "data_interval", "data_interval"]]}, "params_p": {"args": [], "cls": [["pathlib.Path", 0.10093921367354598], ["models.Form700Filing", 0.09189242304867816], ["dep_check.models.Rules", 0.09144588303986409]], "kwargs": [], "self": []}, "q_name": "TestCliTasks.setup_class", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "dag_run": "", "dagbag": "", "data_interval": "", "parser": ""}, "variables_p": {"dag": [["str", 0.9061527376521135]], "dag_run": [["vjemmie.utils.voting.VotingSession", 0.11535368197811044]], "dagbag": [["qutebrowser.utils.objreg.ObjectRegistry", 0.11679226584174968], ["cmk.utils.rulesets.ruleset_matcher.RulesetMatchObject", 0.08747255444938346]], "data_interval": [["str", 0.22946790709112674], ["Dict[bytes, Optional[bytes]]", 0.09820982394833501], ["list", 0.09633167475238016], ["Tuple[None, Tuple[None, None]]", 0.09030199550626986]], "parser": [["argparse.ArgumentParser", 0.21070795635731943], ["shared.configuration.configuration_parser.Parser", 0.11823783625099267]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [102, 23]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "teardown_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": []}, "params_p": {"args": [], "cls": [["Tuple[str]", 0.49999999978930826], ["Type", 0.49999999978930826], ["bool", 1.2432275369423927e-10], ["int", 6.761356990136683e-11], ["Optional[str]", 6.761356990136683e-11], ["Type[Any]", 4.801814051136299e-11], ["Optional[List]", 4.157460403209174e-11]], "kwargs": [], "self": []}, "q_name": "TestCliTasks.teardown_class", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[105, 4], [111, 36]], "fn_var_ln": {"args": [[110, 8], [110, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "dag_id"], ["task_command", "task_list", "args"], ["args", "self", "parser", "parse_args"], ["task_command", "task_list", "args"]]}, "name": "test_cli_list_tasks", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dagbag", "dags"], ["args", "self", "parser", "parse_args", "dag_id"], ["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_cli_list_tasks", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["argparse.Namespace", 0.8016015646180472], ["List[bytes]", 0.11026380651129324], ["list", 0.08813462887065951]]}}, {"docstring": {"func": "Test the `airflow test` command", "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [124, 92]], "fn_var_ln": {"args": [[116, 8], [116, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["task_command", "task_test", "args"]]}, "name": "test_test", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_test", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["str", 0.20759312077033332], ["Dict[str, Any]", 0.19533006486571847], ["argparse.Namespace", 0.11754849167880926], ["int", 0.1150443034230663], ["Dict[str, List[str]]", 0.10014961144516606], ["Tuple[Any, Literal]", 0.08881080022891027]]}}, {"docstring": {"func": "Test the `airflow test` command", "long_descr": null, "ret": null}, "fn_lc": [[128, 4], [139, 89]], "fn_var_ln": {"args": [[133, 8], [133, 12]], "ds": [[132, 8], [132, 10]], "now": [[130, 8], [130, 11]], "return_value": [[131, 8], [131, 32]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["task_command", "task_test", "args"]], "ds": [["ds", "now", "strftime"], ["ds", "stdout", "getvalue"]], "now": [["now", "pendulum", "now"], ["mock_utcnow", "return_value", "now"], ["ds", "now", "strftime"]], "return_value": [["mock_utcnow", "return_value", "now"]]}, "name": "test_test_no_execution_date", "params": {"mock_utcnow": "", "self": ""}, "params_descr": {"mock_utcnow": "", "self": ""}, "params_occur": {"mock_utcnow": [["mock_utcnow", "return_value", "now"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_utcnow": [["mock.MagicMock", 0.1749584126694935]], "self": []}, "q_name": "TestCliTasks.test_test_no_execution_date", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "ds": "", "now": "", "return_value": ""}, "variables_p": {"args": [["str", 0.20759312077033332], ["Dict[str, Any]", 0.19533006486571847], ["argparse.Namespace", 0.11754849167880926], ["int", 0.1150443034230663], ["Dict[str, List[str]]", 0.10014961144516606], ["Tuple[Any, Literal]", 0.08881080022891027]], "ds": [["int", 0.21006877859817424]], "now": [["Optional[types.TracebackType]", 0.5025124200558062], ["list", 0.14716287048293544], ["int", 0.07977005287827728], ["Optional[types.FrameType]", 0.07292937455417639]], "return_value": [["str", 0.2510891219614315], ["int", 0.13944714883834364], ["Dict[str, Dict[str, Any]]", 0.07257600176012703], ["Dict[str, Union[Any, Any, Any, Any]]", 0.07173410146114423], ["List[Union[Any, Any, Any]]", 0.07173410146114423]]}}, {"docstring": {"func": "Test the `airflow test` command", "long_descr": null, "ret": null}, "fn_lc": [[142, 4], [148, 97]], "fn_var_ln": {"args": [[145, 8], [145, 12]], "task_id": [[144, 8], [144, 15]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "self", "dag_id", "task_id", "DEFAULT_DATE", "isoformat"], ["task_command", "task_test", "args"]], "task_id": [["args", "self", "parser", "parse_args", "self", "dag_id", "task_id", "DEFAULT_DATE", "isoformat"], ["self", "dag_id", "task_id", "caplog", "text"]]}, "name": "test_test_with_existing_dag_run", "params": {"caplog": "", "self": ""}, "params_descr": {"caplog": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "logger"], ["self", "dag_id", "task_id", "caplog", "text"]], "self": [["args", "self", "parser", "parse_args", "self", "dag_id", "task_id", "DEFAULT_DATE", "isoformat"], ["self", "dag_id", "task_id", "caplog", "text"]]}, "params_p": {"args": [], "caplog": [["str", 0.28552890574823425], ["lms.lmsdb.models.Comment", 0.10475810614110165]], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_test_with_existing_dag_run", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "task_id": ""}, "variables_p": {"args": [["dict", 0.37715416498126697], ["argparse.Namespace", 0.10801516223466179], ["werkzeug.exceptions.InternalServerError", 0.10772413221196421], ["Dict[str, Any]", 0.10375691167767881], ["nucypher.config.node.CharacterConfiguration", 0.09983626805959203]], "task_id": [["str", 0.5218893926772191], ["int", 0.290001701386441], ["Set[int]", 0.18810890593633983]]}}, {"docstring": {"func": "Test ``airflow test`` does not print secrets to stdout.", "long_descr": "Output should be filtered by SecretsMasker.", "ret": null}, "fn_lc": [[151, 4], [169, 68]], "fn_var_ln": {"args": [[158, 8], [158, 12]], "not_password": [[166, 8], [166, 20]], "password": [[156, 8], [156, 16]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["task_command", "task_test", "args"], ["task_command", "task_test", "args"]], "not_password": [["mock", "patch", "new", "_", "__", "print", "not_password"], ["capsys", "readouterr", "out", "endswith", "not_password"]], "password": [["logging", "getLogger", "filters", "add_mask", "password"], ["mock", "patch", "new", "_", "__", "print", "password"]]}, "name": "test_test_filters_secrets", "params": {"capsys": "", "self": ""}, "params_descr": {"capsys": "", "self": ""}, "params_occur": {"capsys": [["capsys", "readouterr", "out", "endswith"], ["capsys", "readouterr", "out", "endswith", "not_password"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "capsys": [["float", 0.10625491541544152], ["bool", 0.09216840715537696], ["str", 0.08843388527446444], ["int", 0.08740618127418445]], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_test_filters_secrets", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "not_password": "", "password": ""}, "variables_p": {"args": [["argparse.Namespace", 0.6187591769500738], ["Set[str]", 0.09323096508657501]], "not_password": [["str", 0.4886028609937988], ["int", 0.16922422173790988], ["Pattern[str]", 0.1367294632596028], ["tuple", 0.12101730270126977], ["Pattern[bytes]", 0.08442615130741873]], "password": [["str", 0.3958819427920884], ["int", 0.22033613916656775], ["set", 0.19558857042840133]]}}, {"docstring": {"func": "When thedag processor has a different dags folder", "long_descr": "from the worker, ``airflow tasks run --local`` should still work.", "ret": null}, "fn_lc": [[171, 4], [246, 71]], "fn_var_ln": {"dag": [[183, 12], [183, 15]], "dagbag": [[182, 12], [182, 18]], "data_interval": [[187, 8], [187, 21]], "execution_date": [[186, 8], [186, 22]], "new_dags_folder": [[204, 12], [204, 27]], "new_file_path": [[203, 12], [203, 25]], "orig_dags_folder": [[178, 8], [178, 24]], "orig_file_path": [[177, 8], [177, 22]], "repo_root": [[176, 8], [176, 17]], "ser_dag": [[208, 16], [208, 23]], "ti": [[234, 12], [234, 14]]}, "fn_var_occur": {"dag": [["dag", "dagbag", "get_dag"], ["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "execution_date"], ["dag", "create_dagrun", "state", "State", "NONE", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "execution_date", "data_interval", "data_interval", "session", "session"], ["ser_dag", "dag", "_processor_dags_folder", "orig_dags_folder", "as_posix"]], "dagbag": [["dagbag", "DagBag", "include_examples", "False"], ["dag", "dagbag", "get_dag"], ["dagbag", "sync_to_db", "session", "session"]], "data_interval": [["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "execution_date"], ["dag", "create_dagrun", "state", "State", "NONE", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "execution_date", "data_interval", "data_interval", "session", "session"]], "execution_date": [["execution_date", "pendulum", "now"], ["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "execution_date"], ["dag", "create_dagrun", "state", "State", "NONE", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "execution_date", "data_interval", "data_interval", "session", "session"]], "new_dags_folder": [["new_dags_folder", "new_file_path", "parent"], ["DAGS_FOLDER", "new_dags_folder", "as_posix", "orig_dags_folder", "as_posix"]], "new_file_path": [["new_file_path", "Path", "td", "Path", "orig_file_path", "name"], ["new_dags_folder", "new_file_path", "parent"], ["move_back", "orig_file_path", "new_file_path"], ["ti", "xcom_pull", "ti", "task_id", "new_file_path", "as_posix"]], "orig_dags_folder": [["orig_dags_folder", "orig_file_path", "parent"], ["conf_vars", "orig_dags_folder", "as_posix"], ["ser_dag", "data", "orig_dags_folder", "as_posix"], ["ser_dag", "dag", "_processor_dags_folder", "orig_dags_folder", "as_posix"], ["DAGS_FOLDER", "new_dags_folder", "as_posix", "orig_dags_folder", "as_posix"]], "orig_file_path": [["orig_file_path", "repo_root"], ["orig_dags_folder", "orig_file_path", "parent"], ["new_file_path", "Path", "td", "Path", "orig_file_path", "name"], ["move_back", "orig_file_path", "new_file_path"], ["ser_dag", "fileloc", "orig_file_path", "as_posix"], ["ser_dag", "data", "orig_file_path", "as_posix"]], "repo_root": [["repo_root", "Path", "__file__", "parent", "parent", "parent", "parent"], ["orig_file_path", "repo_root"]], "ser_dag": [["ser_dag", "session", "query", "SerializedDagModel", "filter", "SerializedDagModel", "dag_id", "one"], ["ser_dag", "fileloc", "orig_file_path", "as_posix"], ["ser_dag", "data", "orig_dags_folder", "as_posix"], ["ser_dag", "data", "orig_file_path", "as_posix"], ["ser_dag", "dag", "_processor_dags_folder", "orig_dags_folder", "as_posix"]], "ti": [["ti", "session", "query", "TaskInstance", "filter", "TaskInstance", "task_id", "TaskInstance", "dag_id", "TaskInstance", "run_id", "TaskInstance", "map_index", "one"], ["ti", "state"], ["ti", "xcom_pull", "ti", "task_id", "new_file_path", "as_posix"]]}, "name": "test_cli_test_different_path", "params": {"self": "", "session": ""}, "params_descr": {"self": "", "session": ""}, "params_occur": {"self": [["task_command", "task_run", "self", "parser", "parse_args"]], "session": [["dagbag", "sync_to_db", "session", "session"], ["dag", "create_dagrun", "state", "State", "NONE", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "execution_date", "data_interval", "data_interval", "session", "session"], ["session", "commit"], ["ser_dag", "session", "query", "SerializedDagModel", "filter", "SerializedDagModel", "dag_id", "one"], ["ti", "session", "query", "TaskInstance", "filter", "TaskInstance", "task_id", "TaskInstance", "dag_id", "TaskInstance", "run_id", "TaskInstance", "map_index", "one"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "session": [["grouper.models.user.User", 0.3973392620732922], ["grouper.models.base.session.Session", 0.1986696310366461], ["Dict[str, Any]", 0.16745485790262607]]}, "q_name": "TestCliTasks.test_cli_test_different_path", "ret_exprs": [], "ret_type": "", "variables": {"dag": "", "dagbag": "", "data_interval": "", "execution_date": "", "new_dags_folder": "", "new_file_path": "", "orig_dags_folder": "", "orig_file_path": "", "repo_root": "", "ser_dag": "", "ti": ""}, "variables_p": {"dag": [], "dagbag": [["dict", 0.21482327611498864]], "data_interval": [["Dict[str, Any]", 0.10793262849467432], ["accounts.tests.factories.AccountTestFactory", 0.09629225186527049]], "execution_date": [["List[Union[Any, Any]]", 0.10388260045373084], ["float", 0.08762459360321087]], "new_dags_folder": [["str", 0.5040308707826743], ["bool", 0.29580072516289924], ["List[str]", 0.10022919691205379], ["PyLibs.tensorflow.python.debug.cli.debugger_cli_common.RichTextLines", 0.0999392071423726]], "new_file_path": [["pathlib.Path", 0.6899839291068427], ["paradigm.catalog.Path", 0.10832255389441617], ["pathman.path.Path", 0.09559998913292023]], "orig_dags_folder": [["str", 0.6262182265463799], ["int", 0.27644504012572746], ["Final", 0.09733673332789257]], "orig_file_path": [["pathlib.Path", 0.9999999999999999]], "repo_root": [["pathlib.Path", 0.3691904999086041], ["str", 0.34742034173344116]], "ser_dag": [["str", 0.30226873716608316], ["Dict[str, str]", 0.11419386680668502]], "ti": [["int", 0.40662045706720373]]}}, {"docstring": {"func": "Test that we can run with existing dag_run_id", "long_descr": null, "ret": null}, "fn_lc": [[249, 4], [277, 9]], "fn_var_ln": {"args0": [[254, 8], [254, 13]], "task0_id": [[253, 8], [253, 16]]}, "fn_var_occur": {"args0": [["args0", "self", "dag_id", "task0_id", "self", "run_id"], ["task_command", "task_run", "self", "parser", "parse_args", "args0", "dag", "self", "dag"]], "task0_id": [["task0_id", "self", "dag", "task_ids"], ["args0", "self", "dag_id", "task0_id", "self", "run_id"]]}, "name": "test_run_with_existing_dag_run_id", "params": {"mock_local_job_runner": "", "self": ""}, "params_descr": {"mock_local_job_runner": "", "self": ""}, "params_occur": {"mock_local_job_runner": [["mock_local_job_runner", "return_value", "job_type"], ["mock_local_job_runner", "assert_called_once_with", "job", "mock", "ANY", "task_instance", "mock", "ANY", "mark_success", "False", "ignore_all_deps", "True", "ignore_depends_on_past", "False", "wait_for_past_depends_before_skipping", "False", "ignore_task_deps", "False", "ignore_ti_state", "False", "pickle_id", "None", "pool", "None", "external_executor_id", "None"]], "self": [["task0_id", "self", "dag", "task_ids"], ["args0", "self", "dag_id", "task0_id", "self", "run_id"], ["task_command", "task_run", "self", "parser", "parse_args", "args0", "dag", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "mock_local_job_runner": [["core_lib.core.models.Venue", 0.15931335430243104], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09598835566549294]], "self": []}, "q_name": "TestCliTasks.test_run_with_existing_dag_run_id", "ret_exprs": [], "ret_type": "", "variables": {"args0": "", "task0_id": ""}, "variables_p": {"args0": [["list", 0.9999999999999999]], "task0_id": [["str", 0.5821637450481489], ["ClassVar[str]", 0.10623831790611203], ["Dict[int, List[str]]", 0.07966249333174702], ["Dict[int, Type[Any]]", 0.0780974673995174], ["List[bytes]", 0.07783773211267386], ["Set[str]", 0.07600024420180071]]}}, {"docstring": {"func": "Test that we can run with read from db", "long_descr": null, "ret": null}, "fn_lc": [[284, 4], [313, 71]], "fn_var_ln": {"args0": [[289, 8], [289, 13]], "task0_id": [[288, 8], [288, 16]]}, "fn_var_occur": {"args0": [["args0", "self", "dag_id", "task0_id", "self", "run_id", "from_db"], ["task_command", "task_run", "self", "parser", "parse_args", "args0"]], "task0_id": [["task0_id", "self", "dag", "task_ids"], ["args0", "self", "dag_id", "task0_id", "self", "run_id", "from_db"]]}, "name": "test_run_with_read_from_db", "params": {"caplog": "", "from_db": "", "mock_local_job_runner": "", "self": ""}, "params_descr": {"caplog": "", "from_db": "", "mock_local_job_runner": "", "self": ""}, "params_occur": {"caplog": [["caplog", "text", "from_db"]], "from_db": [["args0", "self", "dag_id", "task0_id", "self", "run_id", "from_db"], ["caplog", "text", "from_db"]], "mock_local_job_runner": [["mock_local_job_runner", "return_value", "job_type"], ["mock_local_job_runner", "assert_called_once_with", "job", "mock", "ANY", "task_instance", "mock", "ANY", "mark_success", "False", "ignore_all_deps", "True", "ignore_depends_on_past", "False", "wait_for_past_depends_before_skipping", "False", "ignore_task_deps", "False", "ignore_ti_state", "False", "pickle_id", "None", "pool", "None", "external_executor_id", "None"]], "self": [["task0_id", "self", "dag", "task_ids"], ["args0", "self", "dag_id", "task0_id", "self", "run_id", "from_db"], ["task_command", "task_run", "self", "parser", "parse_args", "args0"]]}, "params_p": {"args": [], "caplog": [["core.models.Recipe", 0.09381085112900313]], "from_db": [["dict", 0.0969666016626121], ["str", 0.0969666016626121], ["tracim.models.data.Content", 0.0969666016626121], ["tracim.models.data.User", 0.0969666016626121]], "kwargs": [], "mock_local_job_runner": [["core_lib.core.models.Venue", 0.116814890532757], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09156583278356757]], "self": []}, "q_name": "TestCliTasks.test_run_with_read_from_db", "ret_exprs": [], "ret_type": "", "variables": {"args0": "", "task0_id": ""}, "variables_p": {"args0": [["list", 0.9999999999999998]], "task0_id": [["str", 0.8123003565533375], ["ClassVar[str]", 0.11250655025695364], ["Dict[int, List[str]]", 0.07519309318970867]]}}, {"docstring": {"func": "Test that run raises when there's run_id but no dag_run", "long_descr": null, "ret": null}, "fn_lc": [[316, 4], [334, 73]], "fn_var_ln": {"args0": [[324, 8], [324, 13]], "dag": [[321, 8], [321, 11]], "dag_id": [[320, 8], [320, 14]], "run_id": [[323, 8], [323, 14]], "task0_id": [[322, 8], [322, 16]]}, "fn_var_occur": {"args0": [["args0", "dag_id", "task0_id", "run_id"], ["task_command", "task_run", "self", "parser", "parse_args", "args0", "dag", "dag"]], "dag": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["task_command", "task_run", "self", "parser", "parse_args", "args0", "dag", "dag"]], "dag_id": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["args0", "dag_id", "task0_id", "run_id"]], "run_id": [["args0", "dag_id", "task0_id", "run_id"]], "task0_id": [["args0", "dag_id", "task0_id", "run_id"]]}, "name": "test_run_raises_when_theres_no_dagrun", "params": {"mock_local_job": "", "self": ""}, "params_descr": {"mock_local_job": "", "self": ""}, "params_occur": {"mock_local_job": [], "self": [["dag", "self", "dagbag", "get_dag", "dag_id"], ["task_command", "task_run", "self", "parser", "parse_args", "args0", "dag", "dag"]]}, "params_p": {"args": [], "kwargs": [], "mock_local_job": [["mock.Mock", 1.0]], "self": []}, "q_name": "TestCliTasks.test_run_raises_when_theres_no_dagrun", "ret_exprs": [], "ret_type": "", "variables": {"args0": "", "dag": "", "dag_id": "", "run_id": "", "task0_id": ""}, "variables_p": {"args0": [["list", 0.5336951865160316], ["Dict[int, Any]", 0.18914202883403902]], "dag": [["tests.control.Entity", 0.2882806213893715], ["Tuple[Any, Any]", 0.16594798415084502], ["list", 0.10371521637068566]], "dag_id": [["str", 0.21963275898736268], ["dict", 0.12771781457728051], ["list", 0.09906523271060926], ["int", 0.09555958708057982], ["Dict[str, Dict[str, str]]", 0.09322730476146664], ["Dict[str, str]", 0.09316136214744729], ["Tuple[Any, Any]", 0.09125535345700451], ["Type[Dict[str, Any]]", 0.09006170791033975]], "run_id": [["tagstore.models.entity.EntityId", 0.2072219472770971], ["List[str]", 0.193758803601305], ["list", 0.13252602054864485], ["List[libqtile.config.Key]", 0.0951459013608308], ["str", 0.08089389825008685]], "task0_id": [["list", 0.6330865484594007], ["str", 0.27946756089562896], ["Optional[str]", 0.08744589064497059]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[336, 4], [362, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_test_with_params", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_test", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["task_command", "task_test", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_cli_test_with_params", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[364, 4], [381, 49]], "fn_var_ln": {"output": [[379, 8], [379, 14]]}, "fn_var_occur": {"output": [["output", "stdout", "getvalue"]]}, "name": "test_cli_test_with_env_vars", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_test", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_cli_test_with_env_vars", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["io.TextIOWrapper", 0.6027861268650375], ["io.StringIO", 0.3972138731349623]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[392, 4], [409, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_run_invalid_raw_option", "params": {"option": "builtins.str", "self": ""}, "params_descr": {"option": "", "self": ""}, "params_occur": {"option": [["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "option"]], "self": [["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "option"]]}, "params_p": {"args": [], "kwargs": [], "option": [["neuromation.cli.rooRoot", 0.2788371403886805], ["tracim.models.data.User", 0.08746128497291775], ["dict", 0.08746128497291775]], "self": []}, "q_name": "TestCliTasks.test_cli_run_invalid_raw_option", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[411, 4], [425, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cli_run_mutually_exclusive", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_cli_run_mutually_exclusive", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "tasks render should render and displays templated fields for a given task", "long_descr": null, "ret": null}, "fn_lc": [[427, 4], [439, 44]], "fn_var_ln": {"output": [[436, 8], [436, 14]]}, "fn_var_occur": {"output": [["output", "stdout", "getvalue"]]}, "name": "test_task_render", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_render", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_task_render", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["io.TextIOWrapper", 0.6027861268650375], ["io.StringIO", 0.3972138731349623]]}}, {"docstring": {"func": "tasks render should render and displays templated fields for a given mapping task", "long_descr": null, "ret": null}, "fn_lc": [[441, 4], [465, 44]], "fn_var_ln": {"output": [[461, 8], [461, 14]]}, "fn_var_occur": {"output": [["output", "stdout", "getvalue"]]}, "name": "test_mapped_task_render", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_render", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_mapped_task_render", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["io.TextIOWrapper", 0.6027861268650375], ["io.StringIO", 0.3972138731349623]]}}, {"docstring": {"func": "tasks render should render and displays templated fields for a given mapping task", "long_descr": null, "ret": null}, "fn_lc": [[467, 4], [500, 44]], "fn_var_ln": {"commands": [[478, 12], [478, 20]], "output": [[498, 8], [498, 14]], "templated_command": [[472, 12], [472, 29]]}, "fn_var_occur": {"commands": [["commands", "templated_command"], ["BashOperator", "partial", "task_id", "expand", "bash_command", "commands"]], "output": [["output", "stdout", "getvalue"]], "templated_command": [["commands", "templated_command"]]}, "name": "test_mapped_task_render_with_template", "params": {"dag_maker": "", "self": ""}, "params_descr": {"dag_maker": "", "self": ""}, "params_occur": {"dag_maker": [["dag_maker", "dag"]], "self": [["task_command", "task_render", "self", "parser", "parse_args", "dag", "dag"]]}, "params_p": {"args": [], "dag_maker": [["tests.async_mock.Mock", 0.2118358215560812], ["str", 0.20118410461535924], ["tests.basilisp.helpers.CompileFn", 0.07297968385328428]], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_mapped_task_render_with_template", "ret_exprs": [], "ret_type": "", "variables": {"commands": "", "output": "", "templated_command": ""}, "variables_p": {"commands": [["List[Tuple[Any, str]]", 0.21232932876772082], ["Dict[str, Any]", 0.1251662874469227], ["str", 0.1026771598556957], ["Dict[str, str]", 0.09491216590344831], ["abilian.core.models.subjects.User", 0.0880482326947915]], "output": [["io.TextIOWrapper", 0.6027861268650375], ["io.StringIO", 0.3972138731349623]], "templated_command": [["List[str]", 0.3999999972508715], ["str", 0.20000000549825708], ["List[Tuple[str, str]]", 0.19999999862543574], ["List[Dict[str, Any]]", 0.19999999862543574]]}}, {"docstring": {"func": "tasks run should return an AirflowException when invalid pickle_id is passed", "long_descr": null, "ret": null}, "fn_lc": [[502, 4], [525, 13]], "fn_var_ln": {"pickle_id": [[506, 8], [506, 17]]}, "fn_var_occur": {"pickle_id": [["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "pickle_id", "self", "dag"]]}, "name": "test_cli_run_when_pickle_and_dag_cli_method_selected", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "pickle_id", "self", "dag"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_cli_run_when_pickle_and_dag_cli_method_selected", "ret_exprs": [], "ret_type": "", "variables": {"pickle_id": ""}, "variables_p": {"pickle_id": [["str", 0.4652739713376407], ["Optional[str]", 0.25263242444349854], ["Set[int]", 0.10289313169189651], ["cmk.utils.type_defs.UserId", 0.09175428842001546]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[527, 4], [532, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_task_state", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_state", "self", "parser", "parse_args", "self", "dag_id", "DEFAULT_DATE", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_task_state", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[534, 4], [576, 9]], "fn_var_ln": {"actual_out": [[566, 8], [566, 18]], "dag2": [[536, 8], [536, 12]], "dagrun": [[541, 8], [541, 14]], "data_interval": [[540, 8], [540, 21]], "default_date2": [[538, 8], [538, 21]], "task2": [[537, 8], [537, 13]], "ti2": [[548, 8], [548, 11]], "ti_end": [[551, 8], [551, 14]], "ti_start": [[550, 8], [550, 16]]}, "fn_var_occur": {"actual_out": [["actual_out", "json", "loads", "stdout", "getvalue"], ["len", "actual_out"], ["actual_out", "ti_start", "isoformat", "ti_end", "isoformat"]], "dag2": [["dag2", "DagBag", "dags"], ["task2", "dag2", "get_task", "task_id"], ["dag2", "clear"], ["data_interval", "dag2", "timetable", "infer_manual_data_interval", "run_after", "default_date2"], ["dagrun", "dag2", "create_dagrun", "state", "State", "RUNNING", "execution_date", "default_date2", "data_interval", "data_interval", "run_type", "DagRunType", "MANUAL", "external_trigger", "True"]], "dagrun": [["dagrun", "dag2", "create_dagrun", "state", "State", "RUNNING", "execution_date", "default_date2", "data_interval", "data_interval", "run_type", "DagRunType", "MANUAL", "external_trigger", "True"], ["ti2", "TaskInstance", "task2", "dagrun", "execution_date"]], "data_interval": [["data_interval", "dag2", "timetable", "infer_manual_data_interval", "run_after", "default_date2"], ["dagrun", "dag2", "create_dagrun", "state", "State", "RUNNING", "execution_date", "default_date2", "data_interval", "data_interval", "run_type", "DagRunType", "MANUAL", "external_trigger", "True"]], "default_date2": [["default_date2", "timezone", "datetime"], ["data_interval", "dag2", "timetable", "infer_manual_data_interval", "run_after", "default_date2"], ["dagrun", "dag2", "create_dagrun", "state", "State", "RUNNING", "execution_date", "default_date2", "data_interval", "data_interval", "run_type", "DagRunType", "MANUAL", "external_trigger", "True"], ["task_command", "task_states_for_dag_run", "self", "parser", "parse_args", "default_date2", "isoformat"]], "task2": [["task2", "dag2", "get_task", "task_id"], ["ti2", "TaskInstance", "task2", "dagrun", "execution_date"]], "ti2": [["ti2", "TaskInstance", "task2", "dagrun", "execution_date"], ["ti2", "set_state", "State", "SUCCESS"], ["ti_start", "ti2", "start_date"], ["ti_end", "ti2", "end_date"]], "ti_end": [["ti_end", "ti2", "end_date"], ["actual_out", "ti_start", "isoformat", "ti_end", "isoformat"]], "ti_start": [["ti_start", "ti2", "start_date"], ["actual_out", "ti_start", "isoformat", "ti_end", "isoformat"]]}, "name": "test_task_states_for_dag_run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_states_for_dag_run", "self", "parser", "parse_args", "default_date2", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_task_states_for_dag_run", "ret_exprs": [], "ret_type": "", "variables": {"actual_out": "", "dag2": "", "dagrun": "", "data_interval": "", "default_date2": "", "task2": "", "ti2": "", "ti_end": "", "ti_start": ""}, "variables_p": {"actual_out": [["int", 0.550604928403598], ["str", 0.27015374886913124], ["dict", 0.08990787447610733], ["bytes", 0.08933344825116354]], "dag2": [["list", 0.11333148679009389], ["correios.models.posting.TrackingCode", 0.08153058848371807]], "dagrun": [["list", 0.20471183744032742], ["str", 0.1821387022206986], ["Dict[str, Any]", 0.12162300177403258], ["byceps.services.user.models.detail.UserDetail", 0.09957953149404795], ["dict", 0.09320587994022682]], "data_interval": [["int", 0.1105086714166321], ["hypha.apply.users.tests.factories.UserFactory", 0.09275895376886924]], "default_date2": [["Dict[Any, List[str]]", 0.11348086455794278], ["datetime.datetime.timezone", 0.08439225758859115]], "task2": [["kippo.tasks.models.KippoTask", 0.2042611968450122], ["dict", 0.14274853733535203], ["taskiapplication.models.task.Task", 0.09949312268531148], ["Dict[str, str]", 0.08555533206515274]], "ti2": [["backend.api.models.group.Group", 0.10991237652322794], ["byceps.services.user.transfer.models.User", 0.10633774193531702], ["int", 0.10402737492136624], ["Dict[str, Any]", 0.09646648966675637], ["List[Dict[str, Any]]", 0.09637799436973037], ["str", 0.08754712245114625], ["geode.models.common.Address", 0.08239634989199952], ["tuple", 0.0784509704892507]], "ti_end": [["str", 0.5556870982862187], ["Tuple[int, int]", 0.10290565960232718], ["list", 0.09246489164219303], ["dict", 0.07447795309198434]], "ti_start": [["str", 0.1226105133760316], ["int", 0.10094204033808353], ["float", 0.08823711423559065], ["Type[prm.journals.models.moods.Mood]", 0.08125883341098455]]}}, {"docstring": {"func": "task_states_for_dag_run should return an AirflowException when invalid dag id is passed", "long_descr": null, "ret": null}, "fn_lc": [[578, 4], [595, 13]], "fn_var_ln": {"default_date2": [[583, 12], [583, 25]]}, "fn_var_occur": {"default_date2": [["default_date2", "timezone", "datetime"], ["task_command", "task_states_for_dag_run", "self", "parser", "parse_args", "default_date2", "isoformat"]]}, "name": "test_task_states_for_dag_run_when_dag_run_not_exists", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_states_for_dag_run", "self", "parser", "parse_args", "default_date2", "isoformat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_task_states_for_dag_run_when_dag_run_not_exists", "ret_exprs": [], "ret_type": "", "variables": {"default_date2": ""}, "variables_p": {"default_date2": [["employees.models.Report", 0.17872026322880546], ["zerver.models.UserProfile", 0.13587402340519414], ["int", 0.09925982217494096], ["raiden.utils.List[raiden.utils.ChannelID]", 0.08822306756862533], ["str", 0.08707507594668576]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[597, 4], [603, 37]], "fn_var_ln": {"args": [[600, 8], [600, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["task_command", "task_clear", "args"], ["args", "self", "parser", "parse_args"], ["task_command", "task_clear", "args"]]}, "name": "test_subdag_clear", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"], ["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_subdag_clear", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["argparse.Namespace", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[605, 4], [611, 37]], "fn_var_ln": {"args": [[608, 8], [608, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["task_command", "task_clear", "args"], ["args", "self", "parser", "parse_args"], ["task_command", "task_clear", "args"]]}, "name": "test_parentdag_downstream_clear", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["args", "self", "parser", "parse_args"], ["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCliTasks.test_parentdag_downstream_clear", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["argparse.Namespace", 1.0000000000000002]]}}], "name": "TestCliTasks", "q_name": "TestCliTasks", "variables": {"dag": "airflow.DAG", "dag_id": "", "dag_run": "airflow.models.DagRun", "dagbag": "airflow.models.DagBag", "parser": "argparse.ArgumentParser", "run_id": ""}, "variables_p": {"dag": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "dag_id": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999], ["services.ticketing.transfer.models.TicketID", 0.09999999999999999], ["Type[models.User]", 0.09999999999999999], ["shop.transfer.models.ShopID", 0.09999999999999999], ["Type[pipeline.netfile.models.AbstractSchedule]", 0.09999999999999999]], "dag_run": [["str", 0.4], ["bool", 0.2], ["int", 0.1], ["set", 0.1]], "dagbag": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "parser": [["argparse.ArgumentParser", 0.6000000000000001], ["Tuple[Literal, Literal]", 0.10000000000000002], ["Callable[[argparse.ArgumentParser], None]", 0.10000000000000002]], "run_id": [["str", 0.4], ["int", 0.2]]}}, {"cls_lc": [[614, 0], [905, 62]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[615, 4], [648, 16]], "fn_var_ln": {"dag": [[629, 8], [629, 11]], "dag_id": [[616, 8], [616, 19]], "dag_path": [[619, 8], [619, 21]], "data_interval": [[630, 8], [630, 21]], "execution_date": [[621, 8], [621, 27]], "execution_date_str": [[622, 8], [622, 31]], "log_dir": [[624, 8], [624, 20]], "log_filename": [[625, 8], [625, 25]], "parser": [[627, 8], [627, 19]], "root": [[640, 8], [640, 12]], "root_filters": [[642, 8], [642, 25]], "root_handlers": [[641, 8], [641, 26]], "root_level": [[643, 8], [643, 23]], "root_logger": [[640, 15], [640, 31]], "run_id": [[618, 8], [618, 19]], "task_args": [[623, 8], [623, 22]], "task_id": [[617, 8], [617, 20]], "ti_log_file_path": [[626, 8], [626, 29]]}, "fn_var_occur": {"dag": [["dag", "DagBag", "get_dag", "self", "dag_id"], ["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "self", "execution_date"], ["dag", "create_dagrun", "run_id", "self", "run_id", "execution_date", "self", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "dag_id": [["self", "dag_id"], ["reset", "self", "dag_id"], ["self", "task_args", "self", "dag_id", "self", "task_id", "self", "execution_date_str"], ["self", "log_filename", "self", "dag_id", "self", "run_id", "self", "task_id"], ["dag", "DagBag", "get_dag", "self", "dag_id"]], "dag_path": [["self", "dag_path", "os", "path", "join", "ROOT_FOLDER"]], "data_interval": [["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "self", "execution_date"], ["dag", "create_dagrun", "run_id", "self", "run_id", "execution_date", "self", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "execution_date": [["self", "execution_date", "timezone", "datetime"], ["self", "execution_date_str", "self", "execution_date", "isoformat"], ["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "self", "execution_date"], ["dag", "create_dagrun", "run_id", "self", "run_id", "execution_date", "self", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "execution_date_str": [["self", "execution_date_str", "self", "execution_date", "isoformat"], ["self", "task_args", "self", "dag_id", "self", "task_id", "self", "execution_date_str"]], "log_dir": [["self", "log_dir", "conf", "get_mandatory_value"], ["self", "ti_log_file_path", "os", "path", "join", "self", "log_dir", "self", "log_filename"]], "log_filename": [["self", "log_filename", "self", "dag_id", "self", "run_id", "self", "task_id"], ["self", "ti_log_file_path", "os", "path", "join", "self", "log_dir", "self", "log_filename"]], "parser": [["self", "parser", "cli_parser", "get_parser"]], "root": [["root", "self", "root_logger", "logging", "getLogger"], ["self", "root_handlers", "root", "handlers", "copy"], ["self", "root_filters", "root", "filters", "copy"], ["self", "root_level", "root", "level"]], "root_filters": [["self", "root_filters", "root", "filters", "copy"]], "root_handlers": [["self", "root_handlers", "root", "handlers", "copy"]], "root_level": [["self", "root_level", "root", "level"]], "root_logger": [["root", "self", "root_logger", "logging", "getLogger"]], "run_id": [["self", "run_id"], ["self", "log_filename", "self", "dag_id", "self", "run_id", "self", "task_id"], ["dag", "create_dagrun", "run_id", "self", "run_id", "execution_date", "self", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "task_args": [["self", "task_args", "self", "dag_id", "self", "task_id", "self", "execution_date_str"]], "task_id": [["self", "task_id"], ["self", "task_args", "self", "dag_id", "self", "task_id", "self", "execution_date_str"], ["self", "log_filename", "self", "dag_id", "self", "run_id", "self", "task_id"]], "ti_log_file_path": [["self", "ti_log_file_path", "os", "path", "join", "self", "log_dir", "self", "log_filename"], ["os", "remove", "self", "ti_log_file_path"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "dag_id"], ["self", "task_id"], ["self", "run_id"], ["self", "dag_path", "os", "path", "join", "ROOT_FOLDER"], ["reset", "self", "dag_id"], ["self", "execution_date", "timezone", "datetime"], ["self", "execution_date_str", "self", "execution_date", "isoformat"], ["self", "task_args", "self", "dag_id", "self", "task_id", "self", "execution_date_str"], ["self", "log_dir", "conf", "get_mandatory_value"], ["self", "log_filename", "self", "dag_id", "self", "run_id", "self", "task_id"], ["self", "ti_log_file_path", "os", "path", "join", "self", "log_dir", "self", "log_filename"], ["self", "parser", "cli_parser", "get_parser"], ["dag", "DagBag", "get_dag", "self", "dag_id"], ["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "self", "execution_date"], ["dag", "create_dagrun", "run_id", "self", "run_id", "execution_date", "self", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"], ["root", "self", "root_logger", "logging", "getLogger"], ["self", "root_handlers", "root", "handlers", "copy"], ["self", "root_filters", "root", "filters", "copy"], ["self", "root_level", "root", "level"], ["os", "remove", "self", "ti_log_file_path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.setup_method", "ret_exprs": [], "ret_type": "None", "variables": {"dag": "", "dag_id": "", "dag_path": "", "data_interval": "", "execution_date": "", "execution_date_str": "", "log_dir": "", "log_filename": "", "parser": "", "root": "", "root_filters": "", "root_handlers": "", "root_level": "", "root_logger": "", "run_id": "", "task_args": "", "task_id": "", "ti_log_file_path": ""}, "variables_p": {"dag": [["quantumflow.states.State", 0.07749019268309298]], "dag_id": [["str", 0.900768001992608], ["int", 0.09923199800739191]], "dag_path": [["str", 0.9999999999999999]], "data_interval": [], "execution_date": [["int", 0.2070947020826457], ["str", 0.1952992532615396], ["Type[prm.journals.models.moods.Mood]", 0.10624350034468949], ["List[Union[Any, Any]]", 0.09259410984957633]], "execution_date_str": [["str", 1.0]], "log_dir": [["str", 1.0]], "log_filename": [["str", 0.8920756893339538], ["NameError", 0.10792431066604642]], "parser": [["Dict[str, Union[Any, Any]]", 0.09984435457208517]], "root": [["str", 1.0]], "root_filters": [["T", 0.21062828434564665], ["str", 0.18575881203006744], ["dict", 0.17927819212376062], ["Iterable[str]", 0.09588324046312292], ["Optional[ics.types.ContextDict]", 0.09562375456093555], ["Dict[str, Any]", 0.0893211406067537]], "root_handlers": [["str", 0.32621915203987617], ["logging.Logger", 0.09886135190673476], ["logging.handlers.RotatingFileHandler", 0.09684950570192818], ["pineboolib.application.types.Dir", 0.09424783142496809], ["logging.Formatter", 0.08952080511093163], ["logging.Handler", 0.08515822596044952], ["logging.RootLogger", 0.08502753486353468]], "root_level": [["dict", 0.17701858142185672], ["docker.models.containers.Container", 0.09638735616374518], ["salon.models.Stylist", 0.08745592913674062], ["str", 0.08458119220679504], ["Optional[str]", 0.0837181317489891], ["Mapping", 0.08307400993082976]], "root_logger": [["str", 0.6114964173945608], ["logging.Formatter", 0.2907666545554898], ["Dict[str, str]", 0.09773692804994917]], "run_id": [["str", 0.6872896328114414], ["int", 0.31271036718855844]], "task_args": [["int", 0.40070319546255434], ["float", 0.3798560661515129], ["Dict[str, str]", 0.2194407383859328]], "task_id": [["str", 0.9061778707647067], ["int", 0.09382212923529312]], "ti_log_file_path": [["str", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[650, 4], [660, 16]], "fn_var_ln": {"root": [[651, 8], [651, 12]]}, "fn_var_occur": {"root": [["root", "self", "root_logger"], ["root", "setLevel", "self", "root_level"], ["root", "handlers", "self", "root_handlers"], ["root", "filters", "self", "root_filters"]]}, "name": "teardown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["root", "self", "root_logger"], ["root", "setLevel", "self", "root_level"], ["root", "handlers", "self", "root_handlers"], ["root", "filters", "self", "root_filters"], ["reset", "self", "dag_id"], ["os", "remove", "self", "ti_log_file_path"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.teardown_method", "ret_exprs": [], "ret_type": "None", "variables": {"root": ""}, "variables_p": {"root": [["str", 0.6993560912497212], ["pathlib.Path", 0.09851399652977506], ["bytes", 0.0918655802883122]]}}, {"docstring": {"func": "Get Log Line and assert only 1 Entry exists with the given text. Also check that", "long_descr": "\"logging_mixin\" line does not appear in that log line to avoid duplicate logging as below:\n\n[2020-06-24 16:47:23,537] {logging_mixin.py:91} INFO - [2020-06-24 16:47:23,536] {python.py:135}", "ret": null}, "fn_lc": [[662, 4], [676, 23]], "fn_var_ln": {"log_line": [[671, 8], [671, 16]], "log_lines": [[669, 8], [669, 17]]}, "fn_var_occur": {"log_line": [["log_line", "log_lines"]], "log_lines": [["log_lines", "log", "log", "logs_list", "text", "log"], ["len", "log_lines"], ["log_line", "log_lines"]]}, "name": "assert_log_line", "params": {"expect_from_logging_mixin": "", "logs_list": "", "self": "", "text": ""}, "params_descr": {"expect_from_logging_mixin": "", "logs_list": "", "self": "", "text": ""}, "params_occur": {"expect_from_logging_mixin": [], "logs_list": [["log_lines", "log", "log", "logs_list", "text", "log"]], "self": [], "text": [["log_lines", "log", "log", "logs_list", "text", "log"]]}, "params_p": {"args": [], "expect_from_logging_mixin": [["bool", 0.30363028000741826], ["Optional[Dict[str, Any]]", 0.10626125469622373], ["Callable", 0.10007158142194297], ["Dict[str, Any]", 0.10007158142194297], ["str", 0.10007158142194297], ["dict", 0.09591742558890085]], "kwargs": [], "logs_list": [["str", 0.8341859766168926]], "self": [], "text": [["str", 0.8341859766168926]]}, "q_name": "TestLogsfromTaskRunCommand.assert_log_line", "ret_exprs": ["return log_line"], "ret_type": "", "ret_type_p": [["str", 0.6236095409702579], ["bool", 0.10027499260671163], ["int", 0.08886205301930016], ["Type", 0.0884388644820463]], "variables": {"log_line": "", "log_lines": ""}, "variables_p": {"log_line": [["str", 0.9061222443158207], ["bool", 0.09387775568417914]], "log_lines": [["dict", 0.20289102408622603], ["int", 0.10409480658639712], ["bytes", 0.10030162238996847], ["Dict[str, int]", 0.0938617926728228]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[679, 4], [697, 9]], "fn_var_ln": {"args": [[681, 8], [681, 12]], "external_executor_id": [[682, 8], [682, 33]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "self", "task_args"], ["args", "external_executor_id"], ["task_command", "task_run", "args"]], "external_executor_id": [["args", "external_executor_id"], ["mock_local_job", "assert_called_once_with", "job", "mock", "ANY", "task_instance", "mock", "ANY", "mark_success", "False", "pickle_id", "None", "ignore_all_deps", "False", "ignore_depends_on_past", "False", "wait_for_past_depends_before_skipping", "False", "ignore_task_deps", "False", "ignore_ti_state", "False", "pool", "None", "external_executor_id"]]}, "name": "test_external_executor_id_present_for_fork_run_task", "params": {"mock_local_job": "", "self": ""}, "params_descr": {"mock_local_job": "", "self": ""}, "params_occur": {"mock_local_job": [["mock_local_job", "return_value", "job_type"], ["mock_local_job", "assert_called_once_with", "job", "mock", "ANY", "task_instance", "mock", "ANY", "mark_success", "False", "pickle_id", "None", "ignore_all_deps", "False", "ignore_depends_on_past", "False", "wait_for_past_depends_before_skipping", "False", "ignore_task_deps", "False", "ignore_ti_state", "False", "pool", "None", "external_executor_id"]], "self": [["args", "self", "parser", "parse_args", "self", "task_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_local_job": [["mock.Mock", 0.2976705481747573]], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_external_executor_id_present_for_fork_run_task", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "external_executor_id": ""}, "variables_p": {"args": [["argparse.Namespace", 1.0]], "external_executor_id": [["str", 0.7903636548818863], ["Optional[str]", 0.10699026923118471]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[700, 4], [719, 13]], "fn_var_ln": {"args": [[702, 8], [702, 12]], "external_executor_id": [[703, 8], [703, 33]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args", "self", "task_args"], ["args", "external_executor_id"], ["task_command", "task_run", "args"]], "external_executor_id": [["args", "external_executor_id"], ["mock_local_job", "assert_called_once_with", "job", "mock", "ANY", "task_instance", "mock", "ANY", "mark_success", "False", "pickle_id", "None", "ignore_all_deps", "False", "ignore_depends_on_past", "False", "wait_for_past_depends_before_skipping", "False", "ignore_task_deps", "False", "ignore_ti_state", "False", "pool", "None", "external_executor_id"]]}, "name": "test_external_executor_id_present_for_process_run_task", "params": {"mock_local_job": "", "self": ""}, "params_descr": {"mock_local_job": "", "self": ""}, "params_occur": {"mock_local_job": [["mock_local_job", "return_value", "job_type"], ["mock_local_job", "assert_called_once_with", "job", "mock", "ANY", "task_instance", "mock", "ANY", "mark_success", "False", "pickle_id", "None", "ignore_all_deps", "False", "ignore_depends_on_past", "False", "wait_for_past_depends_before_skipping", "False", "ignore_task_deps", "False", "ignore_ti_state", "False", "pool", "None", "external_executor_id"]], "self": [["args", "self", "parser", "parse_args", "self", "task_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_local_job": [["mock.Mock", 0.2976705481747573]], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_external_executor_id_present_for_process_run_task", "ret_exprs": [], "ret_type": "", "variables": {"args": "", "external_executor_id": ""}, "variables_p": {"args": [["argparse.Namespace", 1.0]], "external_executor_id": [["str", 0.7903636548818863], ["Optional[str]", 0.10699026923118471]]}}, {"docstring": {"func": "When running task --local as k8s executor pod, all logging should make it to stdout.", "long_descr": "Otherwise, all logging after \"running TI\" is redirected to logs (and the actual log\nfile content is tested elsewhere in this module).\n\nUnfortunately, to test stdout, we have to test this by running as a subprocess because\nthe stdout redirection & log capturing behavior is not compatible with pytest's stdout\ncapturing behavior.  Running as subprocess takes pytest out of the equation and\nverifies with certainty the behavior.", "ret": null}, "fn_lc": [[722, 4], [761, 34]], "fn_var_ln": {"err": [[741, 24], [741, 27]], "found_start": [[747, 16], [747, 27]], "line": [[745, 12], [745, 16]], "lines": [[742, 8], [742, 13]], "output": [[741, 16], [741, 22]]}, "fn_var_occur": {"err": [["output", "err", "process", "communicate"]], "found_start": [["found_start", "False"], ["found_start", "True"]], "line": [["line", "line_", "decode"], ["lines", "append", "line"]], "lines": [["lines", "append", "line"], ["len", "lines"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines", "expect_from_logging_mixin", "True"], ["self", "assert_log_line", "lines"], ["len", "lines"]], "output": [["output", "err", "process", "communicate"], ["output", "splitlines"]]}, "name": "test_logging_with_run_task_stdout_k8s_executor_pod", "params": {"is_k8s": "", "self": ""}, "params_descr": {"is_k8s": "", "self": ""}, "params_occur": {"is_k8s": [["mock", "patch", "dict", "AIRFLOW_IS_K8S_EXECUTOR_POD", "is_k8s"]], "self": [["subprocess", "Popen", "args", "self", "task_args", "self", "dag_path", "stdout", "subprocess", "PIPE", "stderr", "subprocess", "PIPE", "process"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines"], ["self", "assert_log_line", "lines", "expect_from_logging_mixin", "True"], ["self", "assert_log_line", "lines"]]}, "params_p": {"args": [], "is_k8s": [["Dict[int, str]", 0.11611262555401006], ["Dict[str, str]", 0.1088653398970368], ["Optional[Dict[object, Any]]", 0.10590208413016738], ["flask_appbuilder.models.sqla.Model", 0.08941709104111858], ["str", 0.08681164301449353], ["dict", 0.08453045367724732]], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_logging_with_run_task_stdout_k8s_executor_pod", "ret_exprs": [], "ret_type": "", "variables": {"err": "", "found_start": "", "line": "", "lines": "", "output": ""}, "variables_p": {"err": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "found_start": [["int", 0.10414496918343992], ["list", 0.10406519817132545], ["Dict[int, float]", 0.09759059048169294], ["float", 0.0963619566623709], ["Dict[Any, set]", 0.09600925475997489], ["Counter[Any]", 0.09587401953983614], ["Type[List[Any]]", 0.09539778612762491]], "line": [["str", 0.6764807209443281], ["List[str]", 0.12460156874590139], ["bytes", 0.10980985462373506], ["Tuple[str]", 0.08910785568603555]], "lines": [["list", 0.45402367420834894], ["Tuple[str, str, str, str]", 0.23361335785380777], ["str", 0.21171212127830108], ["List[str]", 0.10065084665954221]], "output": [["str", 0.22562211562253914], ["Tuple[str, str]", 0.17068636253172081], ["mock.Mock", 0.11802446415773166], ["Iterator[Any]", 0.11091501441617489], ["List[float]", 0.10096925818246409], ["List[int]", 0.09492061752154153]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[764, 4], [789, 9]], "fn_var_ln": {"logs": [[769, 12], [769, 16]], "logs_list": [[772, 8], [772, 17]]}, "fn_var_occur": {"logs": [["logs", "l_file", "read"], ["print", "logs"], ["logs_list", "logs", "splitlines"], ["self", "task_id", "logs"], ["self", "dag_id", "self", "task_id", "self", "run_id", "logs"], ["self", "dag_id", "self", "task_id", "logs"]], "logs_list": [["logs_list", "logs", "splitlines"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list", "expect_from_logging_mixin", "True"]]}, "name": "test_logging_with_run_task", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["conf_vars", "self", "dag_path"], ["task_command", "task_run", "self", "parser", "parse_args", "self", "task_args"], ["open", "self", "ti_log_file_path", "l_file"], ["self", "task_id", "logs"], ["self", "dag_id", "self", "task_id", "self", "run_id", "logs"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list", "expect_from_logging_mixin", "True"], ["self", "dag_id", "self", "task_id", "logs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_logging_with_run_task", "ret_exprs": [], "ret_type": "", "variables": {"logs": "", "logs_list": ""}, "variables_p": {"logs": [["logging.Logger", 0.4855355691124794], ["logging.Formatter", 0.42767002760714984], ["dict", 0.08679440328037094]], "logs_list": [["List[str]", 0.2003346920161644], ["List[slice]", 0.1205560233678976], ["List[Dict[str, Any]]", 0.09695926847997229], ["str", 0.09211665176319787], ["Tuple[Literal, Literal, Literal]", 0.09011260399877914], ["list", 0.08926039314115607]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[792, 4], [806, 28]], "fn_var_ln": {"pool": [[797, 12], [797, 16]], "pool_name": [[793, 8], [793, 17]]}, "fn_var_occur": {"pool": [["pool", "Pool", "pool", "pool_name", "slots"], ["session", "add", "pool"], ["session", "query", "TaskInstance", "filter_by", "pool", "pool_name", "first", "None"], ["session", "query", "TaskInstance", "filter_by", "pool", "pool_name", "first", "None"], ["session", "delete", "pool"]], "pool_name": [["pool", "Pool", "pool", "pool_name", "slots"], ["session", "query", "TaskInstance", "filter_by", "pool", "pool_name", "first", "None"], ["task_command", "task_run", "self", "parser", "parse_args", "self", "task_args", "pool_name"], ["session", "query", "TaskInstance", "filter_by", "pool", "pool_name", "first", "None"]]}, "name": "test_run_task_with_pool", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["task_command", "task_run", "self", "parser", "parse_args", "self", "task_args", "pool_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_run_task_with_pool", "ret_exprs": [], "ret_type": "", "variables": {"pool": "", "pool_name": ""}, "variables_p": {"pool": [["grpy.core.models.Grouping", 0.1936184341112542], ["golem.rpc.session.WebSocketAddress", 0.141887013569573], ["Dict[str, str]", 0.09466258144373653], ["dict", 0.09174295346092218], ["int", 0.08875258163735655]], "pool_name": [["str", 0.8103374843372302], ["dict", 0.09696373514993224]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[809, 4], [829, 9]], "fn_var_ln": {"logs": [[814, 12], [814, 16]], "logs_list": [[817, 8], [817, 17]]}, "fn_var_occur": {"logs": [["logs", "l_file", "read"], ["print", "logs"], ["logs_list", "logs", "splitlines"], ["self", "task_id", "logs"], ["self", "dag_id", "self", "task_id", "logs"], ["self", "dag_id", "self", "task_id", "logs"]], "logs_list": [["logs_list", "logs", "splitlines"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list", "expect_from_logging_mixin", "True"]]}, "name": "test_logging_with_run_task_subprocess", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["conf_vars", "self", "dag_path"], ["task_command", "task_run", "self", "parser", "parse_args", "self", "task_args"], ["open", "self", "ti_log_file_path", "l_file"], ["self", "task_id", "logs"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list"], ["self", "assert_log_line", "logs_list", "expect_from_logging_mixin", "True"], ["self", "dag_id", "self", "task_id", "logs"], ["self", "dag_id", "self", "task_id", "logs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_logging_with_run_task_subprocess", "ret_exprs": [], "ret_type": "", "variables": {"logs": "", "logs_list": ""}, "variables_p": {"logs": [["logging.Logger", 0.4878593532530145], ["logging.Formatter", 0.42626248040203935], ["dict", 0.08587816634494602]], "logs_list": [["List[str]", 0.2003346920161644], ["List[slice]", 0.1205560233678976], ["List[Dict[str, Any]]", 0.09695926847997229], ["str", 0.09211665176319787], ["Tuple[Literal, Literal, Literal]", 0.09011260399877914], ["list", 0.08926039314115607]]}}, {"docstring": {"func": "Verify that the taskinstance has the right context for log_filename_template", "long_descr": null, "ret": null}, "fn_lc": [[831, 4], [850, 24]], "fn_var_ln": {"log_file_path": [[840, 12], [840, 25]], "ti": [[837, 16], [837, 18]], "try_number": [[838, 16], [838, 29]]}, "fn_var_occur": {"log_file_path": [["log_file_path", "os", "path", "join", "os", "path", "dirname", "self", "ti_log_file_path"], ["os", "path", "exists", "log_file_path"], ["os", "remove", "log_file_path"]], "ti": [["ti", "session", "query", "TaskInstance", "filter_by", "run_id", "self", "run_id", "first"], ["ti", "try_number"]], "try_number": [["ti", "try_number"]]}, "name": "test_log_file_template_with_run_task", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["conf_vars", "self", "dag_path"], ["ti", "session", "query", "TaskInstance", "filter_by", "run_id", "self", "run_id", "first"], ["log_file_path", "os", "path", "join", "os", "path", "dirname", "self", "ti_log_file_path"], ["task_command", "task_run", "self", "parser", "parse_args", "self", "task_args"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_log_file_template_with_run_task", "ret_exprs": [], "ret_type": "", "variables": {"log_file_path": "", "ti": "", "try_number": ""}, "variables_p": {"log_file_path": [["str", 0.9999999999999998]], "ti": [["int", 0.28461096262026514], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.1030094044657272], ["app.models.Tweet", 0.0875268406756594], ["byceps.util.image.models.Dimensions", 0.084258741575586]], "try_number": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[858, 8], [859, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task_inner", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_root_logger_restored.<locals>.task_inner", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Verify that the root logging context is restored", "long_descr": null, "ret": null}, "fn_lc": [[853, 4], [875, 62]], "fn_var_ln": {"config": [[863, 8], [863, 14]], "logger": [[856, 8], [856, 14]], "side_effect": [[861, 8], [861, 33]]}, "fn_var_occur": {"config": [["config", "self", "dag_path"], ["conf_vars", "config"]], "logger": [["logger", "warning"]], "side_effect": [["run_task_mock", "side_effect", "task_inner"]]}, "name": "test_root_logger_restored", "params": {"caplog": "", "run_task_mock": "", "self": ""}, "params_descr": {"caplog": "", "run_task_mock": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "level", "logging", "WARNING"], ["caplog", "text"]], "run_task_mock": [["run_task_mock", "side_effect", "task_inner"]], "self": [["config", "self", "dag_path"], ["task_command", "task_run", "self", "parser", "parse_args", "self", "task_args"], ["self", "root_logger", "level", "logging", "WARNING"], ["self", "root_logger", "handlers", "self", "root_handlers"]]}, "params_p": {"args": [], "caplog": [["str", 0.7105138584689261]], "kwargs": [], "run_task_mock": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.2882788324647237]], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_root_logger_restored", "ret_exprs": [], "ret_type": "", "variables": {"config": "", "logger": "", "side_effect": ""}, "variables_p": {"config": [["str", 0.391297254474676], ["Type[Sequence[Any]]", 0.2390582142144576], ["dict", 0.20012659003210043], ["Dict[str, Dict[Any, str]]", 0.08625408998777165], ["parsl.config.Config", 0.08326385129099437]], "logger": [["logging.Logger", 0.9999999999999999]], "side_effect": [["str", 0.28310781743330043], ["Dict[str, str]", 0.13860626313839206], ["List[Dict[str, Any]]", 0.10157262361867764], ["Dict[str, List[str]]", 0.09657049049071068], ["List[int]", 0.09211657323499955], ["float", 0.08995818434102879]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[885, 8], [886, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task_inner", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [], "kwargs": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_disable_handler_modifying.<locals>.task_inner", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "If [core] donot_modify_handlers is set to True, the root logger is untouched", "long_descr": null, "ret": null}, "fn_lc": [[879, 4], [905, 62]], "fn_var_ln": {"DONOT_MODIFY_HANDLERS": [[905, 20], [905, 50]], "config": [[890, 8], [890, 14]], "logger": [[883, 8], [883, 14]], "old_value": [[896, 16], [896, 25]], "side_effect": [[888, 8], [888, 33]]}, "fn_var_occur": {"DONOT_MODIFY_HANDLERS": [["old_value", "settings", "DONOT_MODIFY_HANDLERS"], ["settings", "DONOT_MODIFY_HANDLERS", "do_not_modify_handler"], ["settings", "DONOT_MODIFY_HANDLERS", "old_value"]], "config": [["config", "self", "dag_path"], ["conf_vars", "config"]], "logger": [["caplog", "at_level", "logging", "WARNING", "logger"]], "old_value": [["old_value", "settings", "DONOT_MODIFY_HANDLERS"], ["settings", "DONOT_MODIFY_HANDLERS", "old_value"]], "side_effect": [["run_task_mock", "side_effect", "task_inner"]]}, "name": "test_disable_handler_modifying", "params": {"caplog": "", "do_not_modify_handler": "", "run_task_mock": "", "self": ""}, "params_descr": {"caplog": "", "do_not_modify_handler": "", "run_task_mock": "", "self": ""}, "params_occur": {"caplog": [["caplog", "at_level", "logging", "WARNING", "logger"], ["caplog", "text"], ["caplog", "text"]], "do_not_modify_handler": [["settings", "DONOT_MODIFY_HANDLERS", "do_not_modify_handler"]], "run_task_mock": [["run_task_mock", "side_effect", "task_inner"]], "self": [["config", "self", "dag_path"], ["task_command", "task_run", "self", "parser", "parse_args", "self", "task_args"]]}, "params_p": {"args": [], "caplog": [["logging.Logger", 0.7813602765276134], ["TextIO", 0.07195763439128972], ["str", 0.06827882765996206]], "do_not_modify_handler": [], "kwargs": [], "run_task_mock": [["str", 0.10455405288158794], ["Optional[str]", 0.09801050137345184], ["kata.data.io.network.GithubApi", 0.09653812545661887], ["tests.test_util.aiohttp.AiohttpClientMocker", 0.09181663972631138], ["contextlib.contextmanager", 0.08652189908834988]], "self": []}, "q_name": "TestLogsfromTaskRunCommand.test_disable_handler_modifying", "ret_exprs": [], "ret_type": "", "variables": {"DONOT_MODIFY_HANDLERS": "", "config": "", "logger": "", "old_value": "", "side_effect": ""}, "variables_p": {"DONOT_MODIFY_HANDLERS": [["bool", 0.22805803526272928], ["str", 0.19317819203298633], ["astrality.tests.utils.Retry", 0.08424692138529163]], "config": [["str", 0.391297254474676], ["Type[Sequence[Any]]", 0.2390582142144576], ["dict", 0.20012659003210043], ["Dict[str, Dict[Any, str]]", 0.08625408998777165], ["parsl.config.Config", 0.08326385129099437]], "logger": [["logging.Logger", 0.9010588225050644], ["common.logging.Logger", 0.09894117749493574]], "old_value": [["str", 0.3419586248212638], ["Tuple[Literal, Literal]", 0.1228175794745683], ["int", 0.09343264899707134], ["Union[Literal[False], str]", 0.09175854019340583], ["list", 0.09174505976649856], ["pathlib.Path", 0.09035169107406392], ["List[str]", 0.08514633121614715], ["bytes", 0.08278952445698107]], "side_effect": [["str", 0.28310781743330043], ["Dict[str, str]", 0.13860626313839206], ["List[Dict[str, Any]]", 0.10157262361867764], ["Dict[str, List[str]]", 0.09657049049071068], ["List[int]", 0.09211657323499955], ["float", 0.08995818434102879]]}}], "name": "TestLogsfromTaskRunCommand", "q_name": "TestLogsfromTaskRunCommand", "variables": {}, "variables_p": {}}, {"cls_lc": [[940, 0], [1002, 30]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Handlers, level and propagate should be applied on target.", "long_descr": null, "ret": null}, "fn_lc": [[942, 4], [955, 30]], "fn_var_ln": {"obj": [[950, 8], [950, 11]], "propagate": [[947, 8], [947, 21]], "src": [[946, 8], [946, 11]], "tgt": [[951, 8], [951, 11]]}, "fn_var_occur": {"obj": [["obj", "LoggerMutationHelper", "src"], ["obj", "apply", "tgt"]], "propagate": [["src", "propagate", "False"], ["tgt", "propagate", "False", "target_name", "True"]], "src": [["src", "logging", "getLogger", "target_name"], ["src", "propagate", "False"], ["src", "addHandler", "sentinel", "handler"], ["src", "setLevel"], ["obj", "LoggerMutationHelper", "src"]], "tgt": [["tgt", "logging", "getLogger"], ["obj", "apply", "tgt"], ["tgt", "handlers", "sentinel", "handler"], ["tgt", "propagate", "False", "target_name", "True"], ["tgt", "level"]]}, "name": "test_apply", "params": {"self": "", "target_name": ""}, "params_descr": {"self": "", "target_name": ""}, "params_occur": {"self": [], "target_name": [["src", "logging", "getLogger", "target_name"], ["tgt", "propagate", "False", "target_name", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "target_name": [["str", 0.39782327724087074], ["logging.Logger", 0.35974635498577967], ["pathlib.Path", 0.10318266689520299]]}, "q_name": "TestLoggerMutationHelper.test_apply", "ret_exprs": [], "ret_type": "", "variables": {"obj": "", "propagate": "", "src": "", "tgt": ""}, "variables_p": {"obj": [["int", 0.1815921716318628], ["src.core.utility.configuration.Configuration", 0.10400282382044404], ["float", 0.08584620138595536], ["Tuple[str, int]", 0.08295996103010751]], "propagate": [["str", 0.5255150074477312], ["set", 0.10494435551991747], ["list", 0.09344782829767666], ["dict", 0.09233973128190681], ["List[int]", 0.09208501690915735], ["pathlib.Path", 0.09166806054361062]], "src": [["logging.Logger", 0.4164433395689986], ["logging.Formatter", 0.28185732736009866], ["str", 0.18651462580752465], ["logging.LoggerAdapter", 0.11518470726337812]], "tgt": [["logging.Logger", 0.8603684382993401], ["pineboolib.core.utils.logging.Logger", 0.13963156170065988]]}}, {"docstring": {"func": "Handlers, level and propagate should be applied on target.", "long_descr": null, "ret": null}, "fn_lc": [[957, 4], [972, 43]], "fn_var_ln": {"h1": [[963, 8], [963, 10]], "h2": [[965, 8], [965, 10]], "h3": [[967, 8], [967, 10]], "name": [[968, 8], [968, 15]], "src": [[961, 8], [961, 11]], "tgt": [[962, 8], [962, 11]]}, "fn_var_occur": {"h1": [["h1", "logging", "Handler"], ["h1", "name"], ["src", "handlers", "h1", "h2"], ["tgt", "handlers", "h2", "h3", "h1"]], "h2": [["h2", "logging", "Handler"], ["h2", "name"], ["src", "handlers", "h1", "h2"], ["tgt", "handlers", "h2", "h3"], ["tgt", "handlers", "h2", "h3", "h1"]], "h3": [["h3", "logging", "Handler"], ["h3", "name"], ["tgt", "handlers", "h2", "h3"], ["tgt", "handlers", "h2", "h3", "h1"]], "name": [["h1", "name"], ["h2", "name"], ["h3", "name"]], "src": [["src", "logging", "getLogger"], ["src", "handlers", "h1", "h2"], ["LoggerMutationHelper", "src", "apply", "tgt", "replace", "False"]], "tgt": [["tgt", "logging", "getLogger"], ["tgt", "handlers", "h2", "h3"], ["LoggerMutationHelper", "src", "apply", "tgt", "replace", "False"], ["tgt", "handlers", "h2", "h3", "h1"]]}, "name": "test_apply_no_replace", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLoggerMutationHelper.test_apply_no_replace", "ret_exprs": [], "ret_type": "", "variables": {"h1": "", "h2": "", "h3": "", "name": "", "src": "", "tgt": ""}, "variables_p": {"h1": [["str", 0.1578462307064007], ["Exception", 0.15549997140836977], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.11740807946506317], ["logging.Logger", 0.11331111758834854], ["bytes", 0.08069958065611185]], "h2": [["str", 0.49272280807131436], ["list", 0.20657899340401847], ["Exception", 0.1031841626928768]], "h3": [["logging.Logger", 0.11818803967178591], ["logging.handlers.QueueListener", 0.06713792792008336], ["logging.StreamHandler", 0.06352337296077021]], "name": [["str", 0.4818701926032722], ["Set[str]", 0.16077296257197923], ["Generator[str, None, None]", 0.10585419265251228], ["list", 0.0986639380137104], ["List[str]", 0.0764113863873265]], "src": [["dict", 0.20386585112143546], ["Optional[str]", 0.19992833531886928], ["logging.Logger", 0.19440512199510937], ["logging.Formatter", 0.11021368883803713], ["logging.LogRecord", 0.09791669215378876], ["Anaconda3.Lib.logging.Formatter", 0.09749116691362145], ["bool", 0.09617914365913854]], "tgt": [["logging.Logger", 0.8720185326015008], ["pineboolib.core.utils.logging.Logger", 0.12798146739849933]]}}, {"docstring": {"func": "Move should apply plus remove source handler, set propagate to True", "long_descr": null, "ret": null}, "fn_lc": [[974, 4], [988, 66]], "fn_var_ln": {"obj": [[980, 8], [980, 11]], "propagate": [[977, 8], [977, 21]], "src": [[976, 8], [976, 11]], "tgt": [[981, 8], [981, 11]]}, "fn_var_occur": {"obj": [["obj", "LoggerMutationHelper", "src"], ["obj", "move", "tgt"], ["src", "propagate", "True", "obj", "propagate", "False"], ["src", "level", "obj", "level"], ["src", "handlers", "obj", "handlers", "tgt", "handlers"]], "propagate": [["src", "propagate", "False"], ["tgt", "propagate", "False"], ["src", "propagate", "True", "obj", "propagate", "False"]], "src": [["src", "logging", "getLogger"], ["src", "propagate", "False"], ["src", "addHandler", "sentinel", "handler"], ["src", "setLevel"], ["obj", "LoggerMutationHelper", "src"], ["src", "propagate", "True", "obj", "propagate", "False"], ["src", "level", "obj", "level"], ["src", "handlers", "obj", "handlers", "tgt", "handlers"]], "tgt": [["tgt", "logging", "getLogger"], ["obj", "move", "tgt"], ["tgt", "handlers", "sentinel", "handler"], ["tgt", "propagate", "False"], ["tgt", "level"], ["src", "handlers", "obj", "handlers", "tgt", "handlers"]]}, "name": "test_move", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLoggerMutationHelper.test_move", "ret_exprs": [], "ret_type": "", "variables": {"obj": "", "propagate": "", "src": "", "tgt": ""}, "variables_p": {"obj": [["tests.e2e.conftesSysCap", 0.10020244564468593], ["grouper.fe.settings.FrontendSettings", 0.09312717950597914]], "propagate": [["int", 0.1933278297302799], ["list", 0.13158594052540024], ["str", 0.110242793040234], ["bool", 0.09410081591383938], ["Dict[str, List[Any]]", 0.08725123921824426]], "src": [["dict", 0.3040805748051325], ["bool", 0.2723311529942759], ["str", 0.1253290805602378], ["tf_encrypted.config.LocalConfig", 0.12358563914052989], ["Dict[str, str]", 0.08771980455703948]], "tgt": [["logging.Logger", 0.8236024167709964], ["pineboolib.core.utils.logging.Logger", 0.17639758322900342]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[990, 4], [1002, 30]], "fn_var_ln": {"obj": [[995, 8], [995, 11]], "propagate": [[996, 8], [996, 21]], "src": [[991, 8], [991, 11]]}, "fn_var_occur": {"obj": [["obj", "LoggerMutationHelper", "src"], ["obj", "reset"]], "propagate": [["src", "propagate", "True"], ["src", "propagate", "False"], ["src", "propagate", "True"]], "src": [["src", "logging", "getLogger"], ["src", "propagate", "True"], ["src", "addHandler", "sentinel", "h1"], ["src", "setLevel"], ["obj", "LoggerMutationHelper", "src"], ["src", "propagate", "False"], ["src", "addHandler", "sentinel", "h2"], ["src", "setLevel"], ["src", "propagate", "True"], ["src", "handlers", "sentinel", "h1"], ["src", "level"]]}, "name": "test_reset", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLoggerMutationHelper.test_reset", "ret_exprs": [], "ret_type": "", "variables": {"obj": "", "propagate": "", "src": ""}, "variables_p": {"obj": [["str", 0.4202554769578041], ["int", 0.3421721954254649], ["Dict[starfish.core.types._constants.Axes, int]", 0.0766317436458964]], "propagate": [["grouper.api.settings.ApiSettings", 0.11768187981368551], ["dict", 0.10939606118340924], ["pathlib.PurePosixPath", 0.10936528400352347], ["pathlib.Path", 0.08761572996253143], ["multiprocessing.pool.Pool", 0.0845197784490892]], "src": [["dict", 0.3863519788652953], ["str", 0.31872666055229903], ["tf_encrypted.config.LocalConfig", 0.11901978565532034]]}}], "name": "TestLoggerMutationHelper", "q_name": "TestLoggerMutationHelper", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 0], [64, 21]], "fn_var_ln": {"runs": [[63, 8], [63, 12]], "tis": [[61, 8], [61, 11]]}, "fn_var_occur": {"runs": [["runs", "session", "query", "DagRun", "filter_by", "dag_id", "dag_id"], ["runs", "delete"]], "tis": [["tis", "session", "query", "TaskInstance", "filter_by", "dag_id", "dag_id"], ["tis", "delete"]]}, "name": "reset", "params": {"dag_id": ""}, "params_descr": {"dag_id": ""}, "params_occur": {"dag_id": [["tis", "session", "query", "TaskInstance", "filter_by", "dag_id", "dag_id"], ["runs", "session", "query", "DagRun", "filter_by", "dag_id", "dag_id"]]}, "params_p": {"args": [], "dag_id": [["transfer.models.StorefronID", 0.10131953806839382], ["transfer.models.ArticleID", 0.10131953806839382], ["transfer.models.ShopID", 0.10131953806839382], ["transfer.models.ItemID", 0.09374244710109789], ["transfer.models.OrderID", 0.08595505102764335]], "kwargs": []}, "q_name": "reset", "ret_exprs": [], "ret_type": "", "variables": {"runs": "", "tis": ""}, "variables_p": {"runs": [["int", 0.9120220708638543], ["List[int]", 0.08797792913614556]], "tis": [["int", 0.9999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 0], [71, 35]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "move_back", "params": {"new_path": "", "old_path": ""}, "params_descr": {"new_path": "", "old_path": ""}, "params_occur": {"new_path": [["shutil", "move", "old_path", "new_path"], ["shutil", "move", "new_path", "old_path"]], "old_path": [["shutil", "move", "old_path", "new_path"], ["shutil", "move", "new_path", "old_path"]]}, "params_p": {"args": [], "kwargs": [], "new_path": [["str", 0.790639358726463], ["types.Path", 0.12410656581903229], ["norfs.fs.base.Path", 0.08525407545450497]], "old_path": [["str", 0.790639358726463], ["types.Path", 0.12410656581903229], ["norfs.fs.base.Path", 0.08525407545450497]]}, "q_name": "move_back", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[908, 0], [937, 5]], "fn_var_ln": {"context_file": [[932, 4], [932, 16]], "dag": [[919, 4], [919, 7]], "dag_id": [[909, 4], [909, 10]], "dag_path": [[912, 4], [912, 12]], "data_interval": [[920, 4], [920, 17]], "execution_date": [[914, 4], [914, 18]], "execution_date_str": [[915, 4], [915, 22]], "parser": [[917, 4], [917, 10]], "run_id": [[911, 4], [911, 10]], "task_args": [[916, 4], [916, 13]], "task_id": [[910, 4], [910, 11]], "text": [[933, 4], [933, 8]]}, "fn_var_occur": {"context_file": [["context_file", "Path"], ["text", "context_file", "read_text"]], "dag": [["dag", "DagBag", "get_dag", "dag_id"], ["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "execution_date"], ["dag", "create_dagrun", "run_id", "run_id", "execution_date", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "dag_id": [["reset", "dag_id"], ["task_args", "dag_id", "task_id", "execution_date_str"], ["dag", "DagBag", "get_dag", "dag_id"]], "dag_path": [["dag_path", "os", "path", "join", "ROOT_FOLDER"], ["conf_vars", "dag_path"]], "data_interval": [["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "execution_date"], ["dag", "create_dagrun", "run_id", "run_id", "execution_date", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "execution_date": [["execution_date", "timezone", "datetime"], ["execution_date_str", "execution_date", "isoformat"], ["data_interval", "dag", "timetable", "infer_manual_data_interval", "run_after", "execution_date"], ["dag", "create_dagrun", "run_id", "run_id", "execution_date", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "execution_date_str": [["execution_date_str", "execution_date", "isoformat"], ["task_args", "dag_id", "task_id", "execution_date_str"]], "parser": [["parser", "cli_parser", "get_parser"], ["task_command", "task_run", "parser", "parse_args", "task_args"]], "run_id": [["dag", "create_dagrun", "run_id", "run_id", "execution_date", "execution_date", "data_interval", "data_interval", "start_date", "timezone", "utcnow", "state", "State", "RUNNING", "run_type", "DagRunType", "MANUAL"]], "task_args": [["task_args", "dag_id", "task_id", "execution_date_str"], ["task_command", "task_run", "parser", "parse_args", "task_args"]], "task_id": [["task_args", "dag_id", "task_id", "execution_date_str"]], "text": [["text", "context_file", "read_text"]]}, "name": "test_context_with_run", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_context_with_run", "ret_exprs": [], "ret_type": "", "variables": {"context_file": "", "dag": "", "dag_id": "", "dag_path": "", "data_interval": "", "execution_date": "", "execution_date_str": "", "parser": "", "run_id": "", "task_args": "", "task_id": "", "text": ""}, "variables_p": {"context_file": [["pathlib.Path", 0.5662709490851949], ["cerulean.path.Path", 0.22477786084953946], ["io.StringIO", 0.11081474476503168], ["List[pathlib.Path]", 0.09813644530023402]], "dag": [], "dag_id": [["str", 0.1712342089990404], ["Optional[str]", 0.11054635863685554], ["int", 0.094786772232192], ["Pattern[Any]", 0.09437567114220911]], "dag_path": [["str", 1.0]], "data_interval": [["str", 0.1005747156410109]], "execution_date": [["int", 0.29735093329472756], ["Type[prm.journals.models.moods.Mood]", 0.0959732372946489]], "execution_date_str": [["str", 0.8486094014930738], ["list", 0.15139059850692632]], "parser": [["shared.configuration.configuration_parser.Parser", 0.10015392190253526], ["pymatgen.io.cif.CifParser", 0.0941802066485984]], "run_id": [["int", 0.1772980866159243], ["transfer.models.TicketBundleID", 0.10101833555830557], ["Optional[cmk.utils.type_defs.UserId]", 0.09874390505814966], ["str", 0.0930432313136153], ["Optional[str]", 0.08622805146941859]], "task_args": [["str", 0.5905690149927955], ["Dict[str, Any]", 0.1353291049894598], ["Dict[str, str]", 0.09628293335790193], ["int", 0.08837162373239921]], "task_id": [["str", 0.8934045868981765], ["int", 0.10659541310182359]], "text": [["str", 0.9033477878784317], ["Set[str]", 0.09665221212156819]]}}], "imports": ["__future__", "annotations", "io", "json", "logging", "os", "re", "shutil", "tempfile", "unittest", "argparse", "ArgumentParser", "contextlib", "contextmanager", "redirect_stdout", "pathlib", "Path", "unittest", "mock", "unittest", "mock", "sentinel", "pendulum", "pytest", "airflow", "DAG", "airflow", "cli", "cli_parser", "airflow", "cli", "commands", "task_command", "airflow", "cli", "commands", "task_command", "LoggerMutationHelper", "airflow", "configuration", "conf", "airflow", "exceptions", "AirflowException", "DagRunNotFound", "airflow", "models", "DagBag", "DagRun", "Pool", "TaskInstance", "airflow", "models", "serialized_dag", "SerializedDagModel", "airflow", "operators", "bash", "BashOperator", "airflow", "utils", "timezone", "airflow", "utils", "session", "create_session", "airflow", "utils", "state", "State", "airflow", "utils", "types", "DagRunType", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "db", "clear_db_pools", "clear_db_runs", "airflow", "settings", "DAGS_FOLDER", "subprocess", "airflow", "settings"], "mod_var_ln": {"DEFAULT_DATE": [[53, 0], [53, 12]], "ROOT_FOLDER": [[54, 0], [54, 11]]}, "mod_var_occur": {"DEFAULT_DATE": [["data_interval", "cls", "dag", "timetable", "infer_manual_data_interval", "run_after", "DEFAULT_DATE"], ["cls", "dag_run", "cls", "dag", "create_dagrun", "state", "State", "NONE", "run_id", "cls", "run_id", "run_type", "DagRunType", "MANUAL", "execution_date", "DEFAULT_DATE", "data_interval", "data_interval"], ["args", "self", "parser", "parse_args", "self", "dag_id", "task_id", "DEFAULT_DATE", "isoformat"], ["task_command", "task_test", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["task_command", "task_test", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["task_command", "task_test", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "option"], ["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat"], ["task_command", "task_run", "self", "parser", "parse_args", "DEFAULT_DATE", "isoformat", "pickle_id", "self", "dag"], ["task_command", "task_state", "self", "parser", "parse_args", "self", "dag_id", "DEFAULT_DATE", "isoformat"]], "ROOT_FOLDER": [["self", "dag_path", "os", "path", "join", "ROOT_FOLDER"], ["dag_path", "os", "path", "join", "ROOT_FOLDER"]]}, "no_types_annot": {"D": 8, "I": 0, "U": 207}, "session_id": "0fKmGVyPIrmvRV8nDvdiLgyFdbMdj9v59zKRheAjDKg", "set": null, "tc": [false, null], "type_annot_cove": 0.04, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "ROOT_FOLDER": ""}, "variables_p": {"DEFAULT_DATE": [["myia.utils.misc.Named", 0.14624587199297112], ["dict", 0.13994457874732222], ["str", 0.10484457694020768], ["multinedb.models.table.Table", 0.10251707687801226], ["int", 0.09304089886776253]], "ROOT_FOLDER": [["str", 1.0]]}}}