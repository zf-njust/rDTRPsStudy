{"error": null, "response": {"classes": [{"cls_lc": [[33, 0], [140, 81]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 4], [36, 44]], "fn_var_ln": {"parser": [[36, 8], [36, 18]]}, "fn_var_occur": {"parser": [["cls", "parser", "cli_parser", "get_parser"]]}, "name": "setup_class", "params": {"cls": ""}, "params_descr": {"cls": ""}, "params_occur": {"cls": [["cls", "parser", "cli_parser", "get_parser"]]}, "params_p": {"args": [], "cls": [["Callable", 0.2043654510322698], ["List[str]", 0.15935622434553923], ["dict", 0.08429449144280911]], "kwargs": [], "self": []}, "q_name": "TestSchedulerCommand.setup_class", "ret_exprs": [], "ret_type": "", "variables": {"parser": ""}, "variables_p": {"parser": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[50, 4], [66, 81]], "fn_var_ln": {"args": [[58, 8], [58, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["scheduler_command", "scheduler", "args"]]}, "name": "test_serve_logs_on_scheduler", "params": {"executor": "", "expect_serve_logs": "", "mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_descr": {"executor": "", "expect_serve_logs": "", "mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_occur": {"executor": [["conf_vars", "executor"]], "expect_serve_logs": [], "mock_process": [["mock_process", "assert_has_calls", "mock", "call", "target", "serve_logs"], ["mock_process", "assert_has_calls", "mock", "call", "target", "serve_logs"]], "mock_scheduler_job": [["mock_scheduler_job", "return_value", "job_type"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "executor": [["int", 0.19019453953159685], ["str", 0.1851713431852501]], "expect_serve_logs": [["mock.MagicMock", 0.4245850269455635], ["unittesmock.MagicMock", 0.389733862331092], ["mock.Mock", 0.07618452923051411]], "kwargs": [], "mock_process": [["unittesmock.MagicMock", 0.8757000683241897]], "mock_scheduler_job": [], "self": []}, "q_name": "TestSchedulerCommand.test_serve_logs_on_scheduler", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.18711608449417655], ["List[str]", 0.09507841910365493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[71, 4], [77, 77]], "fn_var_ln": {"args": [[73, 8], [73, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["scheduler_command", "scheduler", "args"]]}, "name": "test_skip_serve_logs", "params": {"executor": "", "mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_descr": {"executor": "", "mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_occur": {"executor": [["conf_vars", "executor"]], "mock_process": [["mock_process", "assert_has_calls", "mock", "call", "target", "serve_logs"]], "mock_scheduler_job": [["mock_scheduler_job", "return_value", "job_type"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "executor": [["int", 0.1928293065444649], ["str", 0.186942150353658], ["unittesmock.MagicMock", 0.10888882918922592]], "kwargs": [], "mock_process": [["unittesmock.MagicMock", 0.6921301533221085]], "mock_scheduler_job": [["mock.MagicMock", 0.1943862960038486], ["unittesmock.MagicMock", 0.18197344575803567]], "self": []}, "q_name": "TestSchedulerCommand.test_skip_serve_logs", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.18711608449417655], ["List[str]", 0.09507841910365493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [89, 41]], "fn_var_ln": {"args": [[85, 8], [85, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["scheduler_command", "scheduler", "args"]]}, "name": "test_check_migrations_is_false", "params": {"mock_log": "", "mock_process": "", "mock_run_migration": "", "mock_scheduler_job": "", "self": ""}, "params_descr": {"mock_log": "", "mock_process": "", "mock_run_migration": "", "mock_scheduler_job": "", "self": ""}, "params_occur": {"mock_log": [["mock_log", "assert_called_once"]], "mock_process": [], "mock_run_migration": [["mock_run_migration", "assert_not_called"]], "mock_scheduler_job": [["mock_scheduler_job", "return_value", "job_type"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_log": [["unittesmock.MagicMock", 0.19452034384512684]], "mock_process": [["mock.Mock", 0.2599857462249253], ["mock.MagicMock", 0.08063959185872589]], "mock_run_migration": [["unittesmock.MagicMock", 0.44598976516999234]], "mock_scheduler_job": [["unittesmock.MagicMock", 0.09891487302202458]], "self": []}, "q_name": "TestSchedulerCommand.test_check_migrations_is_false", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.18711608449417655], ["List[str]", 0.09507841910365493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[95, 4], [101, 41]], "fn_var_ln": {"args": [[97, 8], [97, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["scheduler_command", "scheduler", "args"]]}, "name": "test_check_migrations_is_true", "params": {"mock_log": "", "mock_process": "", "mock_run_migration": "", "mock_scheduler_job": "", "self": ""}, "params_descr": {"mock_log": "", "mock_process": "", "mock_run_migration": "", "mock_scheduler_job": "", "self": ""}, "params_occur": {"mock_log": [["mock_log", "assert_called_once"]], "mock_process": [], "mock_run_migration": [["mock_run_migration", "assert_called_once"]], "mock_scheduler_job": [["mock_scheduler_job", "return_value", "job_type"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_log": [["unittesmock.MagicMock", 0.28382153112959974]], "mock_process": [["mock.Mock", 0.25700181761086494], ["mock.MagicMock", 0.2512202705422202]], "mock_run_migration": [["unittesmock.MagicMock", 0.36063100493482675]], "mock_scheduler_job": [["unittesmock.MagicMock", 0.1010616829466821]], "self": []}, "q_name": "TestSchedulerCommand.test_check_migrations_is_true", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.18711608449417655], ["List[str]", 0.09507841910365493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [114, 56]], "fn_var_ln": {"args": [[108, 8], [108, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["scheduler_command", "scheduler", "args"]]}, "name": "test_graceful_shutdown", "params": {"executor": "", "mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_descr": {"executor": "", "mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_occur": {"executor": [["conf_vars", "executor"]], "mock_process": [["mock_process", "terminate", "assert_called"]], "mock_scheduler_job": [["mock_scheduler_job", "return_value", "job_type"], ["mock_scheduler_job", "run", "side_effect", "Exception"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "executor": [["unittesmock.MagicMock", 0.09589776872034037]], "kwargs": [], "mock_process": [["unittesmock.MagicMock", 0.8162835452998727], ["mock.MagicMock", 0.062271171169789884]], "mock_scheduler_job": [["unittesmock.MagicMock", 0.48896012751516194]], "self": []}, "q_name": "TestSchedulerCommand.test_graceful_shutdown", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.18711608449417655], ["List[str]", 0.09507841910365493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[118, 4], [127, 81]], "fn_var_ln": {"args": [[125, 12], [125, 16]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["scheduler_command", "scheduler", "args"]]}, "name": "test_enable_scheduler_health", "params": {"mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_descr": {"mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_occur": {"mock_process": [["mock_process", "assert_has_calls", "mock", "call", "target", "serve_health_check"]], "mock_scheduler_job": [["mock_scheduler_job", "return_value", "job_type"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_process": [["unittesmock.MagicMock", 0.5172823703479248]], "mock_scheduler_job": [["unittesmock.MagicMock", 0.48466275331538045], ["mock.MagicMock", 0.2103486609186876]], "self": []}, "q_name": "TestSchedulerCommand.test_enable_scheduler_health", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.18711608449417655], ["List[str]", 0.09507841910365493]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[131, 4], [140, 81]], "fn_var_ln": {"args": [[137, 8], [137, 12]]}, "fn_var_occur": {"args": [["args", "self", "parser", "parse_args"], ["scheduler_command", "scheduler", "args"]]}, "name": "test_disable_scheduler_health", "params": {"mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_descr": {"mock_process": "", "mock_scheduler_job": "", "self": ""}, "params_occur": {"mock_process": [["mock_process", "assert_has_calls", "mock", "call", "target", "serve_health_check"]], "mock_scheduler_job": [["mock_scheduler_job", "return_value", "job_type"]], "self": [["args", "self", "parser", "parse_args"]]}, "params_p": {"args": [], "kwargs": [], "mock_process": [["unittesmock.MagicMock", 0.5172823703479248]], "mock_scheduler_job": [["unittesmock.MagicMock", 0.48466275331538045], ["mock.MagicMock", 0.2103486609186876]], "self": []}, "q_name": "TestSchedulerCommand.test_disable_scheduler_health", "ret_exprs": [], "ret_type": "", "variables": {"args": ""}, "variables_p": {"args": [["int", 0.18711608449417655], ["List[str]", 0.09507841910365493]]}}], "name": "TestSchedulerCommand", "q_name": "TestSchedulerCommand", "variables": {}, "variables_p": {}}, {"cls_lc": [[144, 0], [151, 24]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [147, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MockServer.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [151, 24]], "fn_var_ln": {"path": [[150, 8], [150, 17]]}, "fn_var_occur": {"path": [["self", "path", "path"]]}, "name": "do_GET", "params": {"path": "", "self": ""}, "params_descr": {"path": "", "self": ""}, "params_occur": {"path": [["self", "path", "path"]], "self": [["self", "path", "path"]]}, "params_p": {"args": [], "kwargs": [], "path": [["str", 0.7039771302870576], ["int", 0.1066748112945881]], "self": []}, "q_name": "MockServer.do_GET", "ret_exprs": [], "ret_type": "", "variables": {"path": ""}, "variables_p": {"path": [["Optional[str]", 0.700692041553244], ["Optional[Union[str, Any]]", 0.10119513428078915]]}}], "name": "MockServer", "q_name": "MockServer", "variables": {}, "variables_p": {}}, {"cls_lc": [[154, 0], [188, 47]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[155, 4], [156, 39]], "fn_var_ln": {"mock_server": [[156, 8], [156, 24]]}, "fn_var_occur": {"mock_server": [["self", "mock_server", "MockServer"]]}, "name": "setup_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "mock_server", "MockServer"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSchedulerHealthServer.setup_method", "ret_exprs": [], "ret_type": "None", "variables": {"mock_server": ""}, "variables_p": {"mock_server": [["unittesmock.MagicMock", 0.49871632777732144], ["str", 0.23880694866486632], ["Dict[str, Any]", 0.08845425597224944]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[159, 4], [161, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_incorrect_endpoint", "params": {"mock_send_error": "", "self": ""}, "params_descr": {"mock_send_error": "", "self": ""}, "params_occur": {"mock_send_error": [["mock_send_error", "assert_called_with"]], "self": [["self", "mock_server", "do_GET"]]}, "params_p": {"args": [], "kwargs": [], "mock_send_error": [["unittesmock.MagicMock", 0.5519943847297843], ["mock.Mock", 0.2776020978267016]], "self": []}, "q_name": "TestSchedulerHealthServer.test_incorrect_endpoint", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 4], [172, 45]], "fn_var_ln": {"mock_scheduler_job": [[167, 8], [167, 26]]}, "fn_var_occur": {"mock_scheduler_job": [["mock_scheduler_job", "MagicMock"], ["mock_scheduler_job", "is_alive", "return_value", "True"], ["mock_session", "return_value", "__enter__", "return_value", "query", "return_value", "mock_scheduler_job"]]}, "name": "test_healthy_scheduler", "params": {"mock_end_headers": "", "mock_send_response": "", "mock_session": "", "self": ""}, "params_descr": {"mock_end_headers": "", "mock_send_response": "", "mock_session": "", "self": ""}, "params_occur": {"mock_end_headers": [["mock_end_headers", "assert_called_once"]], "mock_send_response": [["mock_send_response", "assert_called_once_with"]], "mock_session": [["mock_session", "return_value", "__enter__", "return_value", "query", "return_value", "mock_scheduler_job"]], "self": [["self", "mock_server", "do_GET"]]}, "params_p": {"args": [], "kwargs": [], "mock_end_headers": [["unittesmock.MagicMock", 0.10243391359465465], ["mock.Mock", 0.08371366555545043]], "mock_send_response": [["unittesmock.MagicMock", 0.5759944509966965], ["mock.Mock", 0.4240055490033037]], "mock_session": [["unittesmock.MagicMock", 0.09170989384624487]], "self": []}, "q_name": "TestSchedulerHealthServer.test_healthy_scheduler", "ret_exprs": [], "ret_type": "", "variables": {"mock_scheduler_job": ""}, "variables_p": {"mock_scheduler_job": [["unittesmock.MagicMock", 0.30929330082872897], ["str", 0.13125095121473812], ["mock.MagicMock", 0.08797119647179848], ["mock.Mock", 0.08757736683079415]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[176, 4], [181, 47]], "fn_var_ln": {"mock_scheduler_job": [[177, 8], [177, 26]]}, "fn_var_occur": {"mock_scheduler_job": [["mock_scheduler_job", "MagicMock"], ["mock_scheduler_job", "is_alive", "return_value", "False"], ["mock_session", "return_value", "__enter__", "return_value", "query", "return_value", "mock_scheduler_job"]]}, "name": "test_unhealthy_scheduler", "params": {"mock_send_error": "", "mock_session": "", "self": ""}, "params_descr": {"mock_send_error": "", "mock_session": "", "self": ""}, "params_occur": {"mock_send_error": [["mock_send_error", "assert_called_with"]], "mock_session": [["mock_session", "return_value", "__enter__", "return_value", "query", "return_value", "mock_scheduler_job"]], "self": [["self", "mock_server", "do_GET"]]}, "params_p": {"args": [], "kwargs": [], "mock_send_error": [["mock.Mock", 0.5786965586426359], ["unittesmock.MagicMock", 0.337730920475372], ["mock.MagicMock", 0.08357252088199213]], "mock_session": [["unittesmock.MagicMock", 0.0794597065285888]], "self": []}, "q_name": "TestSchedulerHealthServer.test_unhealthy_scheduler", "ret_exprs": [], "ret_type": "", "variables": {"mock_scheduler_job": ""}, "variables_p": {"mock_scheduler_job": [["unittesmock.MagicMock", 0.2281817891440529], ["Union[mock.AsyncMock, mock.MagicMock]", 0.16922340755726425], ["str", 0.12112573849499228]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 4], [188, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_missing_scheduler", "params": {"mock_send_error": "", "mock_session": "", "self": ""}, "params_descr": {"mock_send_error": "", "mock_session": "", "self": ""}, "params_occur": {"mock_send_error": [["mock_send_error", "assert_called_with"]], "mock_session": [["mock_session", "return_value", "__enter__", "return_value", "query", "return_value", "None"]], "self": [["self", "mock_server", "do_GET"]]}, "params_p": {"args": [], "kwargs": [], "mock_send_error": [["mock.Mock", 0.5786965586426359], ["unittesmock.MagicMock", 0.337730920475372], ["mock.MagicMock", 0.08357252088199213]], "mock_session": [["unittesmock.MagicMock", 0.1918047976854544]], "self": []}, "q_name": "TestSchedulerHealthServer.test_missing_scheduler", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestSchedulerHealthServer", "q_name": "TestSchedulerHealthServer", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "http", "server", "BaseHTTPRequestHandler", "unittest", "mock", "unittest", "mock", "MagicMock", "pytest", "airflow", "cli", "cli_parser", "airflow", "cli", "commands", "scheduler_command", "airflow", "utils", "scheduler_health", "HealthServer", "serve_health_check", "airflow", "utils", "serve_logs", "serve_logs", "tests", "test_utils", "config", "conf_vars"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 1, "I": 0, "U": 57}, "session_id": "wXDTP1V5mIqHUF0FdbyzV5ZFeE2nQg5Cvv7mJENIyOU", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}