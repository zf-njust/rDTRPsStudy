{"error": null, "response": {"classes": [{"cls_lc": [[60, 0], [172, 55]], "cls_var_ln": {"log": [[61, 4], [61, 7]]}, "cls_var_occur": {"log": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [67, 78]], "fn_var_ln": {"klass": [[66, 8], [66, 13]], "log": [[67, 8], [67, 17]]}, "fn_var_occur": {"klass": [["klass", "request", "cls"], ["klass", "log", "logging", "getLogger", "klass", "__module__", "klass", "__name__"]], "log": [["klass", "log", "logging", "getLogger", "klass", "__module__", "klass", "__name__"]]}, "name": "setup_logger", "params": {"request": ""}, "params_descr": {"request": ""}, "params_occur": {"request": [["klass", "request", "cls"]]}, "params_p": {"args": [], "kwargs": [], "request": [], "self": []}, "q_name": "SystemTest.setup_logger", "ret_exprs": [], "ret_type": "", "variables": {"klass": "", "log": ""}, "variables_p": {"klass": [["str", 0.7628925301491386], ["int", 0.12584244834251754], ["list", 0.11126502150834384]], "log": [["logging.Logger", 1.0]]}}, {"docstring": {"func": "We want to avoid random errors while database got reset - those", "long_descr": "Are apparently triggered by parser trying to parse DAGs while\nThe tables are dropped. We move the dags temporarily out of the dags folder\nand move them back after reset.\n\nWe also remove all logs from logs directory to have a clear log state and see only logs from this\ntest.", "ret": null}, "fn_lc": [[70, 4], [104, 50]], "fn_var_ln": {"date_str": [[93, 8], [93, 16]], "file_path": [[103, 16], [103, 25]], "files": [[100, 8], [100, 13]], "logs_folder": [[94, 8], [94, 19]], "target_dir": [[98, 8], [98, 18]]}, "fn_var_occur": {"date_str": [["date_str", "datetime", "now", "strftime"], ["print", "logs_folder", "date_str"], ["target_dir", "os", "path", "join", "logs_folder", "date_str"]], "file_path": [["file_path", "os", "path", "join", "logs_folder", "file"], ["os", "path", "isfile", "file_path"], ["os", "remove", "file_path"], ["shutil", "rmtree", "file_path", "ignore_errors", "True"], ["file_path", "os", "path", "join", "logs_folder", "file"], ["shutil", "move", "file_path", "target_dir"]], "files": [["files", "os", "listdir", "logs_folder"], ["files", "os", "listdir", "logs_folder"]], "logs_folder": [["logs_folder", "resolve_logs_folder"], ["files", "os", "listdir", "logs_folder"], ["file_path", "os", "path", "join", "logs_folder", "file"], ["logs_folder", "resolve_logs_folder"], ["print", "logs_folder", "date_str"], ["target_dir", "os", "path", "join", "logs_folder", "date_str"], ["files", "os", "listdir", "logs_folder"], ["file_path", "os", "path", "join", "logs_folder", "file"]], "target_dir": [["target_dir", "os", "path", "join", "logs_folder", "date_str"], ["Path", "target_dir", "mkdir", "parents", "True", "exist_ok", "True", "mode"], ["shutil", "move", "file_path", "target_dir"]]}, "name": "setup_system", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SystemTest.setup_system", "ret_exprs": [], "ret_type": "", "variables": {"date_str": "", "file_path": "", "files": "", "logs_folder": "", "target_dir": ""}, "variables_p": {"date_str": [["str", 0.8073852691956104], ["int", 0.10037196417806536], ["datetime.timedelta", 0.09224276662632408]], "file_path": [["str", 0.8897554932858452]], "files": [["str", 0.5581812895058103], ["List[str]", 0.09034483279186048], ["list", 0.07136444013714825]], "logs_folder": [["str", 0.29055807494695485], ["List[str]", 0.1295479959773067], ["TextIO", 0.10606669671621897], ["logging.LogRecord", 0.08875146647147773], ["Union[Literal, str]", 0.0798190630191957]], "target_dir": [["str", 1.0000000000000002]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 4], [109, 52]], "fn_var_ln": {"executor": [[108, 8], [108, 16]]}, "fn_var_occur": {"executor": [["executor", "get_executor"], ["executor", "execute_cmd", "args", "kwargs"]]}, "name": "execute_cmd", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [["executor", "execute_cmd", "args", "kwargs"]], "kwargs": [["executor", "execute_cmd", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SystemTest.execute_cmd", "ret_exprs": ["return executor.execute_cmd(*args, **kwargs)"], "ret_type": "", "ret_type_p": [["List[str]", 0.11990607504045485], ["logging.LogRecord", 0.1129469053829782], ["int", 0.11267480472100751], ["List[List[str]]", 0.09855382602169997], ["bool", 0.09689217160784773]], "variables": {"executor": ""}, "variables_p": {"executor": [["int", 0.19190980005108957], ["Optional[Dict[str, Any]]", 0.11360841099614366], ["List[int]", 0.10737215876411053], ["list", 0.1010201116076671]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [114, 53]], "fn_var_ln": {"executor": [[113, 8], [113, 16]]}, "fn_var_occur": {"executor": [["executor", "get_executor"], ["executor", "check_output", "args", "kwargs"]]}, "name": "check_output", "params": {"args": "", "kwargs": ""}, "params_descr": {"args": "", "kwargs": ""}, "params_occur": {"args": [["executor", "check_output", "args", "kwargs"]], "kwargs": [["executor", "check_output", "args", "kwargs"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SystemTest.check_output", "ret_exprs": ["return executor.check_output(*args, **kwargs)"], "ret_type": "", "ret_type_p": [["float", 0.10093722589181442], ["int", 0.09834071811731099]], "variables": {"executor": ""}, "variables_p": {"executor": [["str", 0.48850716511404413], ["List[str]", 0.1598562979157459], ["int", 0.1328111055077874]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[117, 4], [130, 39]], "fn_var_ln": {"filepath": [[125, 20], [125, 28]], "logs_folder": [[121, 8], [121, 19]]}, "fn_var_occur": {"filepath": [["filepath", "os", "path", "join", "dirpath", "name"], ["print", "filepath"], ["open", "filepath", "f"]], "logs_folder": [["logs_folder", "resolve_logs_folder"], ["os", "walk", "logs_folder"]]}, "name": "_print_all_log_files", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "SystemTest._print_all_log_files", "ret_exprs": [], "ret_type": "", "variables": {"filepath": "", "logs_folder": ""}, "variables_p": {"filepath": [["str", 0.47166119639332904], ["pathlib.Path", 0.271705008527766], ["Pattern[str]", 0.12532857662716465]], "logs_folder": [["bool", 0.24437451019279102], ["List[str]", 0.21584900715999591], ["str", 0.1949052375870963], ["logging.Logger", 0.13176184064527574], ["Union[Literal, str]", 0.11226057608139563], ["dict", 0.10084882833344527]]}}, {"docstring": {"func": "Runs example dag by it's ID.", "long_descr": null, "ret": null}, "fn_lc": [[132, 4], [155, 17]], "fn_var_ln": {"dag": [[141, 8], [141, 11]], "dag_bag": [[140, 8], [140, 15]]}, "fn_var_occur": {"dag": [["dag", "dag_bag", "get_dag", "dag_id"], ["dag", "None"], ["dag", "clear"], ["dag", "run", "ignore_first_depends_on_past", "True", "verbose", "True"]], "dag_bag": [["dag_bag", "DagBag", "dag_folder", "dag_folder", "include_examples", "False"], ["dag", "dag_bag", "get_dag", "dag_id"]]}, "name": "run_dag", "params": {"dag_folder": "builtins.str", "dag_id": "builtins.str", "self": ""}, "params_descr": {"dag_folder": "directory where to look for the specific DAG. Relative to AIRFLOW_HOME.", "dag_id": "id of a DAG to be run", "self": ""}, "params_occur": {"dag_folder": [["self", "log", "info", "dag_id", "dag_folder"], ["dag_bag", "DagBag", "dag_folder", "dag_folder", "include_examples", "False"], ["AirflowException", "dag_id", "dag_folder", "os", "listdir", "dag_folder"]], "dag_id": [["self", "log", "info", "dag_id", "dag_folder"], ["dag", "dag_bag", "get_dag", "dag_id"], ["AirflowException", "dag_id", "dag_folder", "os", "listdir", "dag_folder"], ["self", "log", "info", "dag_id"]], "self": [["self", "log", "info", "dag_id", "dag_folder"], ["self", "log", "info", "dag_id"], ["self", "_print_all_log_files"]]}, "params_p": {"args": [], "dag_folder": [["str", 0.8919404308042707]], "dag_id": [["str", 0.9072426267286716], ["bytes", 0.0927573732713283]], "kwargs": [], "self": []}, "q_name": "SystemTest.run_dag", "ret_exprs": [], "ret_type": "None", "variables": {"dag": "", "dag_bag": ""}, "variables_p": {"dag": [["bytes", 0.10268952804240512], ["List[str]", 0.09276943488209922]], "dag_bag": [["float", 0.10975089094811208]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[158, 4], [162, 48]], "fn_var_ln": {"full_path": [[160, 8], [160, 17]]}, "fn_var_occur": {"full_path": [["full_path", "os", "path", "join", "dir_path", "filename"], ["open", "full_path", "f"]]}, "name": "create_dummy_file", "params": {"dir_path": "", "filename": ""}, "params_descr": {"dir_path": "", "filename": ""}, "params_occur": {"dir_path": [["os", "makedirs", "dir_path", "exist_ok", "True"], ["full_path", "os", "path", "join", "dir_path", "filename"]], "filename": [["full_path", "os", "path", "join", "dir_path", "filename"]]}, "params_p": {"args": [], "dir_path": [["str", 0.88662619447536], ["pathlib.Path", 0.11337380552463988]], "filename": [["str", 0.9999999999999999]], "kwargs": [], "self": []}, "q_name": "SystemTest.create_dummy_file", "ret_exprs": [], "ret_type": "", "variables": {"full_path": ""}, "variables_p": {"full_path": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[165, 4], [172, 55]], "fn_var_ln": {"full_path": [[166, 8], [166, 17]]}, "fn_var_occur": {"full_path": [["full_path", "os", "path", "join", "dir_path", "filename"], ["os", "remove", "full_path"]]}, "name": "delete_dummy_file", "params": {"dir_path": "", "filename": ""}, "params_descr": {"dir_path": "", "filename": ""}, "params_occur": {"dir_path": [["full_path", "os", "path", "join", "dir_path", "filename"], ["shutil", "rmtree", "dir_path", "ignore_errors", "True"]], "filename": [["full_path", "os", "path", "join", "dir_path", "filename"]]}, "params_p": {"args": [], "dir_path": [["str", 0.6790875906442783], ["Union[str, pathlib.Path]", 0.12656753769589782], ["Optional[str]", 0.09022669778139569]], "filename": [["str", 0.9014072783158039], ["pathlib.Path", 0.09859272168419597]], "kwargs": [], "self": []}, "q_name": "SystemTest.delete_dummy_file", "ret_exprs": [], "ret_type": "", "variables": {"full_path": ""}, "variables_p": {"full_path": [["str", 1.0]]}}], "name": "SystemTest", "q_name": "SystemTest", "variables": {"log": "logging.Logger"}, "variables_p": {"log": [["str", 0.30000000000000004], ["logging.Logger", 0.2], ["bool", 0.1], ["Dict[str, Union[Any, Any, Any]]", 0.1], ["Dict[str, Union[Any, Any, Any, Any]]", 0.1], ["Dict[str, Union[dict, Any, Any, Any, Any]]", 0.1]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 0], [40, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_default_logs_if_none", "params": {"logs": "str | None"}, "params_descr": {"logs": ""}, "params_occur": {"logs": [["logs", "None"]]}, "params_p": {"args": [], "kwargs": [], "logs": [["str", 0.3344021899680918], ["Dict[scripts.node_integration_tests.playbooks.test_config_base.NodeId, pathlib.Path]", 0.15050759906033487], ["Dict[str, Any]", 0.09203440707197089], ["Optional[Dict[str, str]]", 0.08580646288529942], ["list", 0.07896943964970216]]}, "q_name": "get_default_logs_if_none", "ret_exprs": ["return os.path.join(AIRFLOW_HOME, \"logs\")", "return logs"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.9999999999999998]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns LOGS folder specified in current Airflow config.", "long_descr": null, "ret": null}, "fn_lc": [[43, 0], [57, 41]], "fn_var_ln": {"conf": [[48, 4], [48, 8]], "config_file": [[47, 4], [47, 15]]}, "fn_var_occur": {"conf": [["conf", "AirflowConfigParser"], ["conf", "read", "config_file"], ["get_default_logs_if_none", "conf", "get"], ["get_default_logs_if_none", "conf", "get"]], "config_file": [["config_file", "get_airflow_config", "AIRFLOW_HOME"], ["conf", "read", "config_file"]]}, "name": "resolve_logs_folder", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "resolve_logs_folder", "ret_exprs": ["return get_default_logs_if_none(conf.get(\"logging\", \"base_log_folder\"))", "return get_default_logs_if_none(conf.get(\"core\", \"base_log_folder\"))", "return get_default_logs_if_none(None)"], "ret_type": "builtins.str", "ret_type_p": [["bool", 0.3020095376839206], ["List[str]", 0.19110893301032367], ["List[float]", 0.09376598579102255], ["Dict[str, Any]", 0.09234611276365608]], "variables": {"conf": "", "config_file": ""}, "variables_p": {"conf": [], "config_file": [["str", 0.6104922923668318], ["dep_check.models.SourceFile", 0.17996137590393585], ["pathlib.Path", 0.10791461696928094], ["path.Path", 0.10163171475995164]]}}], "imports": ["__future__", "annotations", "logging", "os", "shutil", "datetime", "datetime", "pathlib", "Path", "pytest", "airflow", "configuration", "AIRFLOW_HOME", "AirflowConfigParser", "get_airflow_config", "airflow", "exceptions", "AirflowException", "airflow", "models", "dagbag", "DagBag", "tests", "test_utils", "AIRFLOW_MAIN_FOLDER", "tests", "test_utils", "logging_command_executor", "get_executor"], "mod_var_ln": {"DEFAULT_DAG_FOLDER": [[34, 0], [34, 18]]}, "mod_var_occur": {"DEFAULT_DAG_FOLDER": []}, "no_types_annot": {"D": 7, "I": 0, "U": 34}, "session_id": "FSwSjGuc0FCCqnObFQ8XDzDGTT-PU_BysEA72aFknA8", "set": null, "tc": [false, null], "type_annot_cove": 0.17, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DAG_FOLDER": ""}, "variables_p": {"DEFAULT_DAG_FOLDER": [["str", 0.4], ["int", 0.30000000000000004], ["List[Tuple[str, int]]", 0.1], ["datetime.timedelta", 0.1]]}}}