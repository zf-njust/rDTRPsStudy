{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Replaces last n occurrences of the old string with the new one within the string provided", "long_descr": null, "ret": "string with last n occurrences replaced"}, "fn_lc": [[28, 0], [39, 39]], "fn_var_ln": {"list_of_components": [[38, 4], [38, 22]]}, "fn_var_occur": {"list_of_components": [["list_of_components", "s", "rsplit", "old", "number_of_occurrences"], ["new", "join", "list_of_components"]]}, "name": "last_replace", "params": {"new": "", "number_of_occurrences": "", "old": "", "s": ""}, "params_descr": {"new": "new string", "number_of_occurrences": "how many occurrences should be replaced", "old": "old string", "s": "string to replace occurrences with"}, "params_occur": {"new": [["new", "join", "list_of_components"]], "number_of_occurrences": [["list_of_components", "s", "rsplit", "old", "number_of_occurrences"]], "old": [["list_of_components", "s", "rsplit", "old", "number_of_occurrences"]], "s": [["list_of_components", "s", "rsplit", "old", "number_of_occurrences"]]}, "params_p": {"args": [], "kwargs": [], "new": [["List[str]", 0.3781116016609375], ["str", 0.33830469709335925]], "number_of_occurrences": [["str", 0.5942086554073462], ["float", 0.12438413494498526], ["List[str]", 0.09020052368776256], ["int", 0.09007976369059191]], "old": [["str", 0.5942086554073462], ["float", 0.12438413494498526], ["List[str]", 0.09020052368776256], ["int", 0.09007976369059191]], "s": [["str", 0.5942086554073462], ["float", 0.12438413494498526], ["List[str]", 0.09020052368776256], ["int", 0.09007976369059191]]}, "q_name": "last_replace", "ret_exprs": ["return new.join(list_of_components)"], "ret_type": "", "ret_type_p": [["Dict[str, Dict[str, int]]", 0.20825851888887262], ["str", 0.20786336930827848], ["Dict[str, Any]", 0.1933449420881498], ["bool", 0.08882848176328968]], "variables": {"list_of_components": ""}, "variables_p": {"list_of_components": [["str", 0.27886436677098814], ["List[str]", 0.2256406753114279], ["list", 0.2146600059095326], ["bool", 0.1071345491611414], ["xml.etree.ElementTree.Element", 0.08714313875242324], ["OrderedDict[str, int]", 0.08655726409448668]]}}, {"docstring": {"func": "Prints all test cases read from the xunit test file", "long_descr": null, "ret": "None"}, "fn_lc": [[42, 0], [70, 25]], "fn_var_ln": {"classes": [[55, 4], [55, 11]], "modules": [[56, 4], [56, 11]], "root": [[52, 4], [52, 8]], "test_cases": [[54, 4], [54, 14]], "test_method": [[61, 8], [61, 19]], "text": [[50, 8], [50, 12]], "the_class": [[60, 8], [60, 17]], "the_module": [[59, 8], [59, 18]]}, "fn_var_occur": {"classes": [["classes", "set"], ["classes", "add", "the_class"]], "modules": [["modules", "set"], ["modules", "add", "the_module"]], "root": [["root", "ElementTree", "fromstring", "text"], ["test_cases", "root", "findall"]], "test_cases": [["test_cases", "root", "findall"]], "test_method": [["test_method", "test_case", "get"], ["print", "the_class", "test_method"]], "text": [["text", "file", "read"], ["root", "ElementTree", "fromstring", "text"]], "the_class": [["the_class", "last_replace", "test_case", "get"], ["classes", "add", "the_class"], ["print", "the_class", "test_method"], ["print", "the_class"]], "the_module": [["the_module", "join", "test_case", "get", "split"], ["modules", "add", "the_module"], ["print", "the_module"]]}, "name": "print_all_cases", "params": {"xunit_test_file_path": ""}, "params_descr": {"xunit_test_file_path": "path of the xunit file"}, "params_occur": {"xunit_test_file_path": [["open", "xunit_test_file_path", "file"]]}, "params_p": {"args": [], "kwargs": [], "xunit_test_file_path": [["str", 0.5891576231349167], ["Optional[str]", 0.1940459049097042]]}, "q_name": "print_all_cases", "ret_exprs": [], "ret_type": "", "variables": {"classes": "", "modules": "", "root": "", "test_cases": "", "test_method": "", "text": "", "the_class": "", "the_module": ""}, "variables_p": {"classes": [["Set[str]", 0.2806144190406158], ["str", 0.23537923201744249], ["Pattern[str]", 0.10274417535056557], ["Dict[str, str]", 0.09491776714321244]], "modules": [["set", 0.6832109156897825], ["List[str]", 0.121024041734078], ["Dict[str, Set[str]]", 0.11235568188370713]], "root": [["str", 0.1810464508416565], ["xml.etree.ElementTree.Element", 0.13111455361820135]], "test_cases": [["List[Tuple[str, int]]", 0.23235497322943874], ["List[Dict[str, int]]", 0.22682828257343943], ["Type[Dict[str, Any]]", 0.16736278769862423], ["Final", 0.1170964713538892], ["Set[str]", 0.10159842229044985], ["list", 0.07978498901783262], ["Optional[xml.etree.ElementTree.Element]", 0.074974073836326]], "test_method": [["str", 0.7357747939050965], ["List[str]", 0.08905210546065191], ["list", 0.08806645334793388]], "text": [["str", 0.4920224140078196], ["ElementTree", 0.20587826125891875], ["dict", 0.17790042542843837], ["List[str]", 0.12419889930482346]], "the_class": [["Set[Tuple[Any, Any]]", 0.2259185660297433], ["Pattern[str]", 0.10485784991345128], ["ValuesView[str]", 0.10237984878498538], ["Dict[Any, int]", 0.0950480550864649], ["dict", 0.0919974128951543], ["Dict[str, Any]", 0.09022264434513991]], "the_module": [["str", 0.44171181230851114], ["Tuple[str]", 0.10536599471264264], ["List[str]", 0.08936602602940495], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.08820334707792259], ["dict", 0.08761661062144131], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.08540557222862652]]}}], "imports": ["__future__", "annotations", "sys", "xml", "etree", "ElementTree"], "mod_var_ln": {"file_name": [[77, 4], [77, 13]]}, "mod_var_occur": {"file_name": [["print_all_cases", "file_name"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 17}, "session_id": "nMAVs78UgcNo3FRFiNO2SSEB4o22pIFqx3ZE5q3w6MI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"file_name": ""}, "variables_p": {"file_name": [["str", 0.9259648505336407]]}}}