{"error": null, "response": {"classes": [{"cls_lc": [[42, 0], [46, 44]], "cls_var_ln": {"name": [[43, 4], [43, 8]]}, "cls_var_occur": {"name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [46, 44]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_link", "params": {"operator": "", "self": "", "ti_key": ""}, "params_descr": {"operator": "", "self": "", "ti_key": ""}, "params_occur": {"operator": [], "self": [], "ti_key": []}, "params_p": {"args": [], "kwargs": [], "operator": [["str", 0.33886720881380017], ["float", 0.2561409321293139], ["bool", 0.15925936691613482], ["Iterable[str]", 0.12807046606465694], ["Iterable[Any]", 0.11766202607609424]], "self": [], "ti_key": [["str", 0.33886720881380017], ["float", 0.2561409321293139], ["bool", 0.15925936691613482], ["Iterable[str]", 0.12807046606465694], ["Iterable[Any]", 0.11766202607609424]]}, "q_name": "RaiseErrorLink.get_link", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "RaiseErrorLink", "q_name": "RaiseErrorLink", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.8999999999999999]]}}, {"cls_lc": [[49, 0], [53, 19]], "cls_var_ln": {"name": [[50, 4], [50, 8]]}, "cls_var_occur": {"name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [53, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_link", "params": {"operator": "", "self": "", "ti_key": ""}, "params_descr": {"operator": "", "self": "", "ti_key": ""}, "params_occur": {"operator": [], "self": [], "ti_key": []}, "params_p": {"args": [], "kwargs": [], "operator": [["str", 0.33886720881380017], ["float", 0.2561409321293139], ["bool", 0.15925936691613482], ["Iterable[str]", 0.12807046606465694], ["Iterable[Any]", 0.11766202607609424]], "self": [], "ti_key": [["str", 0.33886720881380017], ["float", 0.2561409321293139], ["bool", 0.15925936691613482], ["Iterable[str]", 0.12807046606465694], ["Iterable[Any]", 0.11766202607609424]]}, "q_name": "NoResponseLink.get_link", "ret_exprs": ["return None"], "ret_type": "", "ret_type_p": [["str", 0.22108855921569165], ["Optional[str]", 0.2075956247682565], ["types.CommandCoroutine", 0.10798136398532603], ["Optional[List[str]]", 0.09667306406339655], ["Optional[Dict]", 0.09513965745076634]], "variables": {}, "variables_p": {}}], "name": "NoResponseLink", "q_name": "NoResponseLink", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.8999999999999999]]}}, {"cls_lc": [[56, 0], [60, 83]], "cls_var_ln": {"name": [[57, 4], [57, 8]]}, "cls_var_occur": {"name": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [60, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_link", "params": {"operator": "", "self": "", "ti_key": ""}, "params_descr": {"operator": "", "self": "", "ti_key": ""}, "params_occur": {"operator": [["operator", "task_id", "ti_key", "run_id"]], "self": [], "ti_key": [["operator", "task_id", "ti_key", "run_id"]]}, "params_p": {"args": [], "kwargs": [], "operator": [["str", 0.52495054630428], ["List[str]", 0.09845431547210222], ["int", 0.09636482140850736], ["Tuple[str]", 0.0942686736298379], ["bool", 0.09188758166196408]], "self": [], "ti_key": [["str", 0.52495054630428], ["List[str]", 0.09845431547210222], ["int", 0.09636482140850736], ["Tuple[str]", 0.0942686736298379], ["bool", 0.09188758166196408]]}, "q_name": "FooBarLink.get_link", "ret_exprs": ["return f\"http://www.example.com/{operator.task_id}/foo-bar/{ti_key.run_id}\""], "ret_type": "", "ret_type_p": [["str", 1.0]], "variables": {}, "variables_p": {}}], "name": "FooBarLink", "q_name": "FooBarLink", "variables": {"name": ""}, "variables_p": {"name": [["str", 0.8999999999999999]]}}, {"cls_lc": [[63, 0], [69, 5]], "cls_var_ln": {"operator_extra_links": [[64, 4], [64, 24]]}, "cls_var_occur": {"operator_extra_links": []}, "funcs": [], "name": "DummyTestOperator", "q_name": "DummyTestOperator", "variables": {"operator_extra_links": ""}, "variables_p": {"operator_extra_links": [["bool", 0.49999999999999994], ["str", 0.19999999999999998], ["Type[ajapaik.ajapaik.models.Profile]", 0.09999999999999999], ["int", 0.09999999999999999], ["Optional[str]", 0.09999999999999999]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 0], [74, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dag", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "dag", "ret_exprs": ["return DAG(\"dag\", start_date=DEFAULT_DATE)"], "ret_type": "", "ret_type_p": [["str", 0.34254196535043124], ["List[recidiviz.persistence.entity.state.entities.StateIncarcerationPeriod]", 0.17388392029174685], ["dict", 0.10469059740056413]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[79, 4], [86, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_create_dag_run", "params": {"execution_date": "", "session": ""}, "params_descr": {"execution_date": "", "session": ""}, "params_occur": {"execution_date": [["dag", "create_dagrun", "state", "DagRunState", "RUNNING", "execution_date", "execution_date", "data_interval", "execution_date", "execution_date", "run_type", "DagRunType", "MANUAL", "session", "session"]], "session": [["dag", "create_dagrun", "state", "DagRunState", "RUNNING", "execution_date", "execution_date", "data_interval", "execution_date", "execution_date", "run_type", "DagRunType", "MANUAL", "session", "session"]]}, "params_p": {"args": [], "execution_date": [["datetime.date", 0.22946003505326498], ["str", 0.18343081295319769], ["Set[str]", 0.10881457644819456], ["int", 0.09860716849197382], ["Dict[datetime.date, Dict[str, Any]]", 0.09598908468261907], ["list", 0.0952518414194617]], "kwargs": [], "session": [["datetime.date", 0.22946003505326498], ["str", 0.18343081295319769], ["Set[str]", 0.10881457644819456], ["int", 0.09860716849197382], ["Dict[datetime.date, Dict[str, Any]]", 0.09598908468261907], ["list", 0.0952518414194617]]}, "q_name": "create_dag_run.<locals>._create_dag_run", "ret_exprs": ["return dag.create_dagrun( state=DagRunState.RUNNING, execution_date=execution_date, data_interval=(execution_date, execution_date), run_type=DagRunType.MANUAL, session=session,)"], "ret_type": "", "ret_type_p": [["cmk.utils.type_defs.UserId", 0.11783041012953803], ["bool", 0.09476596561663761], ["List[str]", 0.08928086809199484]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 0], [88, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "create_dag_run", "params": {"dag": ""}, "params_descr": {"dag": ""}, "params_occur": {"dag": []}, "params_p": {"args": [], "dag": [["str", 0.30674437286749573], ["List[int]", 0.10439895827376196], ["bool", 0.08615539838644763]], "kwargs": []}, "q_name": "create_dag_run", "ret_exprs": ["return _create_dag_run"], "ret_type": "", "ret_type_p": [["bool", 0.21376918948087573], ["str", 0.10622436536583775], ["Optional[Any]", 0.10463506559873813], ["int", 0.09491618300334097]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 0], [93, 71]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dag_run", "params": {"create_dag_run": "", "session": ""}, "params_descr": {"create_dag_run": "", "session": ""}, "params_occur": {"create_dag_run": [["create_dag_run", "execution_date", "DEFAULT_DATE", "session", "session"]], "session": [["create_dag_run", "execution_date", "DEFAULT_DATE", "session", "session"]]}, "params_p": {"args": [], "create_dag_run": [["int", 0.21799541412992152], ["bool", 0.12923105365965404], ["Optional[List[Any]]", 0.12923105365965404], ["dict", 0.08876436047026748], ["str", 0.08876436047026748], ["Dict[str, Dict[str, Any]]", 0.0705897125421545], ["Dict[str, Any]", 0.0705897125421545]], "kwargs": [], "session": [["int", 0.21799541412992152], ["bool", 0.12923105365965404], ["Optional[List[Any]]", 0.12923105365965404], ["dict", 0.08876436047026748], ["str", 0.08876436047026748], ["Dict[str, Dict[str, Any]]", 0.0705897125421545], ["Dict[str, Any]", 0.0705897125421545]]}, "q_name": "dag_run", "ret_exprs": ["return create_dag_run(execution_date=DEFAULT_DATE, session=session)"], "ret_type": "", "ret_type_p": [["str", 0.3215179734439274], ["datetime.datetime", 0.18883493731470483], ["int", 0.10125128687580298]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[97, 0], [100, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "patched_app", "params": {"app": "", "dag": ""}, "params_descr": {"app": "", "dag": ""}, "params_occur": {"app": [["mock", "patch", "object", "app", "mock_dag_bag"]], "dag": [["mock_dag_bag", "get_dag", "return_value", "dag"]]}, "params_p": {"app": [], "args": [], "dag": [], "kwargs": []}, "q_name": "patched_app", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 0], [105, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task_1", "params": {"dag": ""}, "params_descr": {"dag": ""}, "params_occur": {"dag": [["DummyTestOperator", "task_id", "dag", "dag"]]}, "params_p": {"args": [], "dag": [["Optional[str]", 0.45690279978399756], ["str", 0.30202792216060187]], "kwargs": []}, "q_name": "task_1", "ret_exprs": ["return DummyTestOperator(task_id=\"some_dummy_task\", dag=dag)"], "ret_type": "", "ret_type_p": [["Sequence[str]", 0.2893579450234787], ["audiopyle.lib.models.plugin.VampyPlugin", 0.1207897909714872], ["List[str]", 0.11123183997394426], ["List[int]", 0.08541257323834005]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[109, 0], [110, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task_2", "params": {"dag": ""}, "params_descr": {"dag": ""}, "params_occur": {"dag": [["Dummy2TestOperator", "task_id", "dag", "dag"]]}, "params_p": {"args": [], "dag": [["Optional[str]", 0.45690279978399756], ["str", 0.30202792216060187]], "kwargs": []}, "q_name": "task_2", "ret_exprs": ["return Dummy2TestOperator(task_id=\"some_dummy_task_2\", dag=dag)"], "ret_type": "", "ret_type_p": [["Sequence[str]", 0.2893579450234787], ["audiopyle.lib.models.plugin.VampyPlugin", 0.1207897909714872], ["List[str]", 0.11123183997394426], ["List[int]", 0.08541257323834005]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 0], [115, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "task_3", "params": {"dag": ""}, "params_descr": {"dag": ""}, "params_occur": {"dag": [["Dummy3TestOperator", "task_id", "dag", "dag"]]}, "params_p": {"args": [], "dag": [["Optional[str]", 0.45690279978399756], ["str", 0.30202792216060187]], "kwargs": []}, "q_name": "task_3", "ret_exprs": ["return Dummy3TestOperator(task_id=\"some_dummy_task_3\", dag=dag)"], "ret_type": "", "ret_type_p": [["Sequence[str]", 0.2893579450234787], ["audiopyle.lib.models.plugin.VampyPlugin", 0.1207897909714872], ["List[str]", 0.11123183997394426], ["List[int]", 0.08541257323834005]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Make sure there are no runs before we test anything.", "long_descr": "This really shouldn't be needed, but tests elsewhere leave the db dirty.", "ret": null}, "fn_lc": [[119, 0], [124, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "init_blank_task_instances", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "init_blank_task_instances", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[128, 0], [130, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "reset_task_instances", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "reset_task_instances", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[133, 0], [144, 5]], "fn_var_ln": {"response": [[134, 4], [134, 12]]}, "fn_var_occur": {"response": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["json", "loads", "response", "data", "decode", "None"]]}, "name": "test_extra_links_works", "params": {"dag_run": "", "session": "", "task_1": "", "viewer_client": ""}, "params_descr": {"dag_run": "", "session": "", "task_1": "", "viewer_client": ""}, "params_occur": {"dag_run": [], "session": [], "task_1": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "viewer_client": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "params_p": {"args": [], "dag_run": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.08983249385464777], ["pybuses.types.Subscribable", 0.08973167608310613]], "kwargs": [], "session": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.08983249385464777], ["pybuses.types.Subscribable", 0.08973167608310613]], "task_1": [["aiohttp.test_utils.TestClient", 0.09401795196777427]], "viewer_client": [["aiohttp.test_utils.TestClient", 0.09401795196777427]]}, "q_name": "test_extra_links_works", "ret_exprs": [], "ret_type": "", "variables": {"response": ""}, "variables_p": {"response": [["requests.models.Response", 0.41491114240566795], ["str", 0.1843555863028761], ["Dict[str, str]", 0.09484629674533834]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[147, 0], [158, 5]], "fn_var_ln": {"response": [[148, 4], [148, 12]]}, "fn_var_occur": {"response": [["response", "viewer_client", "get", "ENDPOINT", "dag_run", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["json", "loads", "response", "data", "decode", "None"]]}, "name": "test_global_extra_links_works", "params": {"dag_run": "", "session": "", "task_1": "", "viewer_client": ""}, "params_descr": {"dag_run": "", "session": "", "task_1": "", "viewer_client": ""}, "params_occur": {"dag_run": [["response", "viewer_client", "get", "ENDPOINT", "dag_run", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "session": [], "task_1": [["response", "viewer_client", "get", "ENDPOINT", "dag_run", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "viewer_client": [["response", "viewer_client", "get", "ENDPOINT", "dag_run", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "params_p": {"args": [], "dag_run": [["aiohttp.test_utils.TestServer", 0.09182447776022368], ["taskiinfrastructure.data.json.repositories.task_repository.JsonTaskRepository", 0.09057916666010817]], "kwargs": [], "session": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.08457352774086933], ["tests.async_mock.MagicMock", 0.08457352774086933]], "task_1": [["aiohttp.test_utils.TestServer", 0.09182447776022368], ["taskiinfrastructure.data.json.repositories.task_repository.JsonTaskRepository", 0.09057916666010817]], "viewer_client": [["aiohttp.test_utils.TestServer", 0.09182447776022368], ["taskiinfrastructure.data.json.repositories.task_repository.JsonTaskRepository", 0.09057916666010817]]}, "q_name": "test_global_extra_links_works", "ret_exprs": [], "ret_type": "", "variables": {"response": ""}, "variables_p": {"response": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[161, 0], [182, 34]], "fn_var_ln": {"dag_run": [[166, 8], [166, 15]], "end_date": [[171, 12], [171, 23]], "exec_date": [[162, 4], [162, 13]], "extra_links": [[180, 4], [180, 15]], "extra_links_grps": [[179, 4], [179, 20]], "resp": [[175, 4], [175, 8]], "start_date": [[170, 12], [170, 25]], "state": [[169, 12], [169, 20]], "url": [[174, 4], [174, 7]]}, "fn_var_occur": {"dag_run": [["dag_run", "create_dag_run", "execution_date", "exec_date", "session", "session"], ["dag_run", "task_instances"]], "end_date": [["ti", "end_date", "start_date", "datetime", "timedelta", "seconds"]], "exec_date": [["exec_date", "timezone", "datetime"], ["dag_run", "create_dag_run", "execution_date", "exec_date", "session", "session"], ["url", "dag", "dag_id", "exec_date"]], "extra_links": [["extra_links", "extra_links_grps", "group"]], "extra_links_grps": [["extra_links_grps", "re", "search", "resp", "get_data", "as_text", "True"], ["extra_links", "extra_links_grps", "group"]], "resp": [["resp", "viewer_client", "get", "url", "follow_redirects", "True"], ["check_content_in_response", "resp"], ["extra_links_grps", "re", "search", "resp", "get_data", "as_text", "True"]], "start_date": [["start_date", "timezone", "datetime"], ["ti", "start_date", "start_date"], ["ti", "end_date", "start_date", "datetime", "timedelta", "seconds"]], "state": [["ti", "state", "TaskInstanceState", "SUCCESS"]], "url": [["url", "dag", "dag_id", "exec_date"], ["resp", "viewer_client", "get", "url", "follow_redirects", "True"]]}, "name": "test_extra_link_in_gantt_view", "params": {"create_dag_run": "", "dag": "", "viewer_client": ""}, "params_descr": {"create_dag_run": "", "dag": "", "viewer_client": ""}, "params_occur": {"create_dag_run": [["dag_run", "create_dag_run", "execution_date", "exec_date", "session", "session"]], "dag": [["ti", "refresh_from_task", "dag", "get_task", "ti", "task_id"], ["url", "dag", "dag_id", "exec_date"]], "viewer_client": [["resp", "viewer_client", "get", "url", "follow_redirects", "True"]]}, "params_p": {"args": [], "create_dag_run": [["Iterator[Tuple[hermes.types.UserType, hermes.types.EmailAddressType]]", 0.22817652071431238], ["models.User", 0.09899195506554528], ["models.RepoInterface", 0.09899195506554528]], "dag": [["taskiinfrastructure.data.json.repositories.task_repository.JsonTaskRepository", 0.10104060885509998], ["lunch_buddies.types.GroupsToNotifyMessage", 0.09812068185826248], ["List[src.main.core.models.area.Area]", 0.09619795685632232]], "kwargs": [], "viewer_client": []}, "q_name": "test_extra_link_in_gantt_view", "ret_exprs": [], "ret_type": "", "variables": {"dag_run": "", "end_date": "", "exec_date": "", "extra_links": "", "extra_links_grps": "", "resp": "", "start_date": "", "state": "", "url": ""}, "variables_p": {"dag_run": [["List[List[int]]", 0.18276497255929494], ["Dict[str, str]", 0.13009060809859796], ["int", 0.10623014270229654], ["Callable(json.dumps)[[Named(obj, Any), KeywordOnly(skipkeys, bool, default), KeywordOnly(ensure_ascii, bool, default), KeywordOnly(check_circular, bool, default), KeywordOnly(allow_nan, bool, default), KeywordOnly(cls, Optional[Any], default), KeywordOnly(indent, Union[None, int, str], default), KeywordOnly(separators, Optional[Any], default), KeywordOnly(default, Optional[Any], default), KeywordOnly(sort_keys, bool, default), Keywords(Any)], str]", 0.10302420348646965], ["List[str]", 0.09695314023528878], ["Pattern[str]", 0.09203805751417894], ["legistar.models.MatterStatus", 0.09180219934370681]], "end_date": [["datetime.datetime", 0.42365557119976804], ["datetime.date", 0.22999520622513692], ["Pattern[str]", 0.10007178349766414], ["int", 0.08799903639721908], ["datetime.date.time.date", 0.08015914178114217], ["Dict[Any, List[str]]", 0.07811926089906968]], "exec_date": [["datetime.datetime", 0.3632322993378172], ["str", 0.12220491059929814], ["datetime.date", 0.09756879363826647], ["datetime.datetime.timedelta", 0.0845359795806689]], "extra_links": [["List[str]", 0.3076880939014832], ["str", 0.27918106169204365], ["List[List[int]]", 0.1481516167766037], ["Pattern[str]", 0.1263975019473163], ["Tuple[Literal, Literal, Literal, Literal]", 0.06214347544220587]], "extra_links_grps": [["str", 0.9114729628563809]], "resp": [["requests.models.Response", 1.0000000000000002]], "start_date": [["datetime.date", 0.5813448586863379], ["datetime.timedelta", 0.322533561866084], ["datetime.datetime.datetime", 0.09612157944757821]], "state": [["grpy.core.models.GroupingState", 0.2929065693635843], ["alerta.models.user.User", 0.18660478735256608], ["Dict[str, str]", 0.1019191404207408]], "url": [["str", 0.9039905927854669], ["property", 0.0960094072145333]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 0], [196, 91]], "fn_var_ln": {"response": [[186, 4], [186, 12]], "response_str": [[195, 8], [195, 20]]}, "fn_var_occur": {"response": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["response_str", "response", "data"], ["isinstance", "response", "data", "bytes"]], "response_str": [["response_str", "response", "data"], ["response_str", "response_str", "decode"], ["json", "loads", "response_str", "None"]]}, "name": "test_operator_extra_link_override_global_extra_link", "params": {"dag_run": "", "task_1": "", "viewer_client": ""}, "params_descr": {"dag_run": "", "task_1": "", "viewer_client": ""}, "params_occur": {"dag_run": [], "task_1": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "viewer_client": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "params_p": {"args": [], "dag_run": [["tests._TestServerFactory", 0.2067779392451657], ["Callable[[], int]", 0.20414477570027356], ["bool", 0.08739081570235882]], "kwargs": [], "task_1": [["aiohttp.test_utils.TestClient", 0.2771453679621745]], "viewer_client": [["aiohttp.test_utils.TestClient", 0.2771453679621745]]}, "q_name": "test_operator_extra_link_override_global_extra_link", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "response_str": ""}, "variables_p": {"response": [["requests.models.Response", 0.3091873751768427], ["bytes", 0.12648031066528762], ["Dict[str, str]", 0.09412527076404231]], "response_str": [["Dict[int, str]", 0.1066061532935839], ["Dict[str, Union[int, str]]", 0.09902907192025243], ["Optional[str]", 0.09411754817455158], ["str", 0.09275682109215481], ["requests.models.Response", 0.09114566226659386], ["Dict[str, str]", 0.09075633858925279]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[199, 0], [210, 81]], "fn_var_ln": {"response": [[200, 4], [200, 12]], "response_str": [[209, 8], [209, 20]]}, "fn_var_occur": {"response": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["response_str", "response", "data"], ["isinstance", "response", "data", "bytes"]], "response_str": [["response_str", "response", "data"], ["response_str", "response_str", "decode"], ["json", "loads", "response_str", "None"]]}, "name": "test_extra_links_error_raised", "params": {"dag_run": "", "task_1": "", "viewer_client": ""}, "params_descr": {"dag_run": "", "task_1": "", "viewer_client": ""}, "params_occur": {"dag_run": [], "task_1": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "viewer_client": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "params_p": {"args": [], "dag_run": [["Callable[[], int]", 0.1881092626499476], ["tests._TestServerFactory", 0.1776868272887706], ["bool", 0.10383923982696665]], "kwargs": [], "task_1": [["aiohttp.test_utils.TestClient", 0.27672562860461153]], "viewer_client": [["aiohttp.test_utils.TestClient", 0.27672562860461153]]}, "q_name": "test_extra_links_error_raised", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "response_str": ""}, "variables_p": {"response": [["requests.models.Response", 0.3091873751768427], ["bytes", 0.12648031066528762], ["Dict[str, str]", 0.09412527076404231]], "response_str": [["Dict[int, str]", 0.1066061532935839], ["Dict[str, Union[int, str]]", 0.09902907192025243], ["Optional[str]", 0.09411754817455158], ["str", 0.09275682109215481], ["requests.models.Response", 0.09114566226659386], ["Dict[str, str]", 0.09075633858925279]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[213, 0], [224, 93]], "fn_var_ln": {"response": [[214, 4], [214, 12]], "response_str": [[223, 8], [223, 20]]}, "fn_var_occur": {"response": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["response_str", "response", "data"], ["isinstance", "response", "data", "bytes"]], "response_str": [["response_str", "response", "data"], ["response_str", "response_str", "decode"], ["json", "loads", "response_str", "None"]]}, "name": "test_extra_links_no_response", "params": {"dag_run": "", "task_1": "", "viewer_client": ""}, "params_descr": {"dag_run": "", "task_1": "", "viewer_client": ""}, "params_occur": {"dag_run": [], "task_1": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "viewer_client": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "params_p": {"args": [], "dag_run": [["tests._TestServerFactory", 0.23453851989262064], ["Callable[[], int]", 0.22769781908434633], ["bool", 0.08089064696722488]], "kwargs": [], "task_1": [["aiohttp.test_utils.TestClient", 0.27904036003814475]], "viewer_client": [["aiohttp.test_utils.TestClient", 0.27904036003814475]]}, "q_name": "test_extra_links_no_response", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "response_str": ""}, "variables_p": {"response": [["requests.models.Response", 0.3091873751768427], ["bytes", 0.12648031066528762], ["Dict[str, str]", 0.09412527076404231]], "response_str": [["Dict[int, str]", 0.1066061532935839], ["Dict[str, Union[int, str]]", 0.09902907192025243], ["Optional[str]", 0.09411754817455158], ["str", 0.09275682109215481], ["requests.models.Response", 0.09114566226659386], ["Dict[str, str]", 0.09075633858925279]]}}, {"docstring": {"func": "This tests checks if Operator Link (AirflowLink) defined in the Dummy2TestOperator", "long_descr": "is overridden by Airflow Plugin (AirflowLink2).\n\nAirflowLink returns 'https://airflow.apache.org/' link\nAirflowLink2 returns 'https://airflow.apache.org/1.10.5/' link", "ret": null}, "fn_lc": [[227, 0], [245, 99]], "fn_var_ln": {"response": [[235, 4], [235, 12]], "response_str": [[244, 8], [244, 20]]}, "fn_var_occur": {"response": [["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["response_str", "response", "data"], ["isinstance", "response", "data", "bytes"]], "response_str": [["response_str", "response", "data"], ["response_str", "response_str", "decode"], ["json", "loads", "response_str", "None"]]}, "name": "test_operator_extra_link_override_plugin", "params": {"dag_run": "", "task_2": "", "viewer_client": ""}, "params_descr": {"dag_run": "", "task_2": "", "viewer_client": ""}, "params_occur": {"dag_run": [], "task_2": [["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "viewer_client": [["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "params_p": {"args": [], "dag_run": [["Callable[[], int]", 0.1984933603303941], ["tests._TestServerFactory", 0.1945408136843173], ["bool", 0.09749598599578578]], "kwargs": [], "task_2": [["aiohttp.test_utils.TestClient", 0.27772596706427516]], "viewer_client": [["aiohttp.test_utils.TestClient", 0.27772596706427516]]}, "q_name": "test_operator_extra_link_override_plugin", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "response_str": ""}, "variables_p": {"response": [["requests.models.Response", 0.3091873751768427], ["bytes", 0.12648031066528762], ["Dict[str, str]", 0.09412527076404231]], "response_str": [["Dict[int, str]", 0.1066061532935839], ["Dict[str, Union[int, str]]", 0.09902907192025243], ["Optional[str]", 0.09411754817455158], ["str", 0.09275682109215481], ["requests.models.Response", 0.09114566226659386], ["Dict[str, str]", 0.09075633858925279]]}}, {"docstring": {"func": "This tests checks if Operator Link (AirflowLink2) defined in", "long_descr": "Airflow Plugin (AirflowLink2) is attached to all the list of\noperators defined in the AirflowLink2().operators property\n\nAirflowLink2 returns 'https://airflow.apache.org/1.10.5/' link\nGoogleLink returns 'https://www.google.com'", "ret": null}, "fn_lc": [[248, 0], [292, 87]], "fn_var_ln": {"response": [[282, 4], [282, 12]], "response_str": [[291, 8], [291, 20]]}, "fn_var_occur": {"response": [["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["response_str", "response", "data"], ["isinstance", "response", "data", "bytes"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["response_str", "response", "data"], ["isinstance", "response", "data", "bytes"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "status_code"], ["response_str", "response", "data"], ["isinstance", "response", "data", "bytes"]], "response_str": [["response_str", "response", "data"], ["response_str", "response_str", "decode"], ["json", "loads", "response_str", "None"], ["response_str", "response", "data"], ["response_str", "response_str", "decode"], ["json", "loads", "response_str", "None"], ["response_str", "response", "data"], ["response_str", "response_str", "decode"], ["json", "loads", "response_str", "None"]]}, "name": "test_operator_extra_link_multiple_operators", "params": {"dag_run": "", "task_2": "", "task_3": "", "viewer_client": ""}, "params_descr": {"dag_run": "", "task_2": "", "task_3": "", "viewer_client": ""}, "params_occur": {"dag_run": [], "task_2": [["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "task_3": [["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "viewer_client": [["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "params_p": {"args": [], "dag_run": [["Callable[[], int]", 0.18586828709663583], ["tests._TestServerFactory", 0.18524875759421433], ["mock.Mock", 0.0791774848326809]], "kwargs": [], "task_2": [["str", 0.29456958882796536], ["Optional[float]", 0.19300957215019982]], "task_3": [["Optional[float]", 0.2018152551849001], ["str", 0.2018152551849001], ["aiohttp.test_utils.TestClient", 0.10169820959752719]], "viewer_client": [["Optional[float]", 0.2018152551849001], ["str", 0.2018152551849001], ["aiohttp.test_utils.TestClient", 0.10169820959752719]]}, "q_name": "test_operator_extra_link_multiple_operators", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "response_str": ""}, "variables_p": {"response": [["requests.models.Response", 0.3091873751768427], ["bytes", 0.12648031066528762], ["Dict[str, str]", 0.09412527076404231]], "response_str": [["requests.models.Response", 0.4685838146549945], ["str", 0.19986867569726396]]}}], "imports": ["__future__", "annotations", "datetime", "json", "re", "unittest", "mock", "pytest", "airflow", "models", "DAG", "airflow", "models", "baseoperator", "BaseOperator", "BaseOperatorLink", "airflow", "utils", "timezone", "airflow", "utils", "session", "create_session", "airflow", "utils", "state", "DagRunState", "TaskInstanceState", "airflow", "utils", "types", "DagRunType", "tests", "test_utils", "db", "clear_db_runs", "tests", "test_utils", "mock_operators", "AirflowLink", "Dummy2TestOperator", "Dummy3TestOperator", "tests", "test_utils", "www", "check_content_in_response"], "mod_var_ln": {"DEFAULT_DATE": [[37, 0], [37, 12]], "ENDPOINT": [[39, 0], [39, 8]]}, "mod_var_occur": {"DEFAULT_DATE": [["DAG", "start_date", "DEFAULT_DATE"], ["create_dag_run", "execution_date", "DEFAULT_DATE", "session", "session"], ["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "dag_run", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]], "ENDPOINT": [["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "dag_run", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_1", "dag_id", "task_1", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_2", "dag_id", "task_2", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"], ["response", "viewer_client", "get", "ENDPOINT", "task_3", "dag_id", "task_3", "task_id", "DEFAULT_DATE", "follow_redirects", "True"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 91}, "session_id": "KVvfdqSnV8Pw9HsyKu5BF5p4jqWDhth_fT8QCSotLi0", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"DEFAULT_DATE": "", "ENDPOINT": ""}, "variables_p": {"DEFAULT_DATE": [["datetime.datetime", 0.4890645489879779], ["datetime.datetime.date", 0.17720902633511304], ["list", 0.1355829132139909], ["str", 0.08844648996622118]], "ENDPOINT": [["str", 0.20994941798402064], ["int", 0.08397337185755377]]}}}