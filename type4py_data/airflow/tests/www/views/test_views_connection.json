{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[44, 0], [45, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "conn_with_extra", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "conn_with_extra", "ret_exprs": ["return {**CONNECTION, \"extra\": '{\"x_secret\": \"testsecret\",\"y_secret\": \"test\"}'}"], "ret_type": "builtins.dict[builtins.str, typing.Any]", "ret_type_p": [["Iterable[str]", 0.17056990129579], ["raiden.utils.signer.Signer", 0.16850749245386928], ["salon.models.Stylist", 0.10748891097379346], ["str", 0.10429178474617251]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[49, 0], [51, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "clear_connections", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "clear_connections", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[55, 0], [58, 89]], "fn_var_ln": {"resp": [[56, 4], [56, 8]]}, "fn_var_occur": {"resp": [["resp", "admin_client", "post", "data", "CONNECTION", "follow_redirects", "True"], ["check_content_in_response", "resp"]]}, "name": "test_create_connection", "params": {"admin_client": "", "session": ""}, "params_descr": {"admin_client": "", "session": ""}, "params_occur": {"admin_client": [["resp", "admin_client", "post", "data", "CONNECTION", "follow_redirects", "True"]], "session": [["_check_last_log", "session", "dag_id", "None", "event", "execution_date", "None"]]}, "params_p": {"admin_client": [["dict", 0.09231390089285137], ["aiohttp.test_utils.TestClient", 0.0905427289905098]], "args": [], "kwargs": [], "session": [["estimark.application.domain.models.Entity", 0.10372988469080821], ["models.User", 0.09214663354309242], ["models.RepoInterface", 0.09214663354309242]]}, "q_name": "test_create_connection", "ret_exprs": [], "ret_type": "", "variables": {"resp": ""}, "variables_p": {"resp": [["str", 0.1413804828052531], ["bytes", 0.0835869815086258]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[61, 0], [69, 5]], "fn_var_ln": {"invalid_conn_id": [[62, 4], [62, 19]], "invalid_connection": [[63, 4], [63, 22]], "resp": [[64, 4], [64, 8]]}, "fn_var_occur": {"invalid_conn_id": [["invalid_connection", "CONNECTION", "invalid_conn_id"], ["check_content_in_response", "invalid_conn_id", "resp"]], "invalid_connection": [["invalid_connection", "CONNECTION", "invalid_conn_id"], ["resp", "admin_client", "post", "data", "invalid_connection", "follow_redirects", "True"]], "resp": [["resp", "admin_client", "post", "data", "invalid_connection", "follow_redirects", "True"], ["check_content_in_response", "invalid_conn_id", "resp"]]}, "name": "test_invalid_connection_id_trailing_blanks", "params": {"admin_client": "", "session": ""}, "params_descr": {"admin_client": "", "session": ""}, "params_occur": {"admin_client": [["resp", "admin_client", "post", "data", "invalid_connection", "follow_redirects", "True"]], "session": []}, "params_p": {"admin_client": [["aiohttp.test_utils.TestServer", 0.3404049238109834]], "args": [], "kwargs": [], "session": [["bool", 0.09098319366069163]]}, "q_name": "test_invalid_connection_id_trailing_blanks", "ret_exprs": [], "ret_type": "", "variables": {"invalid_conn_id": "", "invalid_connection": "", "resp": ""}, "variables_p": {"invalid_conn_id": [["int", 0.5331735720151979], ["Pattern[Any]", 0.10268093900097437], ["List[str]", 0.10203092164952812], ["str", 0.08678499161014434], ["transfer.models.StorefronID", 0.08526153427541339]], "invalid_connection": [["str", 0.36721278371259286], ["int", 0.13138352634584385], ["Dict[str, Any]", 0.07960966517880474], ["golem.rpc.session.WebSocketAddress", 0.07841805943096702], ["kedro.framework.session.store.ShelveStore", 0.07749971043642986]], "resp": [["dict", 0.0936482272796214], ["float", 0.0873368839422437]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[72, 0], [74, 107]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_action_logging_connection_masked_secrets", "params": {"admin_client": "", "session": ""}, "params_descr": {"admin_client": "", "session": ""}, "params_occur": {"admin_client": [["admin_client", "post", "data", "conn_with_extra", "follow_redirects", "True"]], "session": [["_check_last_log_masked_connection", "session", "dag_id", "None", "event", "execution_date", "None"]]}, "params_p": {"admin_client": [["str", 0.10725989822735957]], "args": [], "kwargs": [], "session": []}, "q_name": "test_action_logging_connection_masked_secrets", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[77, 0], [83, 42]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[82, 4], [82, 47]], "cmv": [[81, 4], [81, 7]], "data": [[79, 4], [79, 18]], "mock_form": [[78, 4], [78, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value"], ["cmv", "prefill_form", "form", "mock_form", "pk"]], "data": [["mock_form", "data", "None"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data", "None"], ["cmv", "prefill_form", "form", "mock_form", "pk"]]}, "name": "test_prefill_form_null_extra", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_prefill_form_null_extra", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.798824771782956], ["List[str]", 0.12184574125267497]], "cmv": [["str", 0.4948774863945473], ["bool", 0.1714350398211957], ["Dict[str, Union[Any, Any]]", 0.08192017204906353], ["Dict[str, Dict[str, Any]]", 0.08169781883109933]], "data": [["Tuple[List[int], List[int]]", 0.3724047329391869], ["list", 0.10533948887204969], ["Dict[str, None]", 0.10533948887204969], ["str", 0.09310118323479673]], "mock_form": [["str", 0.4060648237087009], ["mock.Mock", 0.16912943960539212], ["mock.MagicMock", 0.06579949299181156], ["mock._patch[Union[mock.AsyncMock, mock.MagicMock]]", 0.06565384976155991]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[86, 0], [102, 5]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[95, 4], [95, 47]], "cmv": [[94, 4], [94, 7]], "data": [[88, 4], [88, 18]], "mock_form": [[87, 4], [87, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "True"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "True"], ["cmv", "prefill_form", "form", "mock_form", "pk"]], "data": [["mock_form", "data", "json", "dumps"], ["json", "loads", "mock_form", "extra", "data"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data", "json", "dumps"], ["cmv", "prefill_form", "form", "mock_form", "pk"], ["json", "loads", "mock_form", "extra", "data"]]}, "name": "test_prefill_form_sensitive_fields_extra", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_prefill_form_sensitive_fields_extra", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.5866396773958868], ["List[str]", 0.10573692991908573]], "cmv": [["str", 0.90637582186744], ["Dict[str, Dict[str, Any]]", 0.09362417813255984]], "data": [["str", 0.5771746536827432], ["Dict[str, Any]", 0.12359417253961939], ["Dict[str, Union[dict, Any, Any]]", 0.1223676883152353], ["Type[Dict[str, Any]]", 0.09419080149768434]], "mock_form": [["str", 0.4494170438172759], ["mock.Mock", 0.1614004827047255]]}}, {"docstring": {"func": "When populating custom fields in the connection form we should first check for the non-prefixed", "long_descr": "value (since prefixes in extra are deprecated) and then fallback to the prefixed value.\n\nEither way, the field is known internally to the model view as the prefixed value.", "ret": null}, "fn_lc": [[117, 0], [132, 59]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[128, 4], [128, 47]], "cmv": [[127, 4], [127, 7]], "data": [[125, 4], [125, 18]], "mock_form": [[124, 4], [124, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "False"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "False"], ["cmv", "prefill_form", "form", "mock_form", "pk"]], "data": [["mock_form", "data", "json", "dumps", "extras"], ["mock_form", "extra__test__my_param", "data", "expected"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data", "json", "dumps", "extras"], ["cmv", "prefill_form", "form", "mock_form", "pk"], ["mock_form", "extra__test__my_param", "data", "expected"]]}, "name": "test_prefill_form_backcompat", "params": {"expected": "", "extras": ""}, "params_descr": {"expected": "", "extras": ""}, "params_occur": {"expected": [["mock_form", "extra__test__my_param", "data", "expected"]], "extras": [["mock_form", "data", "json", "dumps", "extras"]]}, "params_p": {"args": [], "expected": [["str", 0.7250240159655581], ["list", 0.09034497935694934]], "extras": [["str", 0.778234486550058], ["Dict[str, Any]", 0.08600883349915396]], "kwargs": []}, "q_name": "test_prefill_form_backcompat", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.22807772643006657]], "cmv": [["str", 0.6036064505220646], ["bool", 0.12048691663806362], ["Dict[str, Dict[str, Any]]", 0.09629931173545721], ["Dict[str, Union[Any, Any]]", 0.09501426404208126], ["Tuple[Literal, Literal]", 0.08459305706233335]], "data": [["str", 0.6786349835737808], ["Dict[str, str]", 0.11081753986639628]], "mock_form": [["str", 0.32382285154345636], ["Dict[str, Any]", 0.0725293927532707]]}}, {"docstring": {"func": "Test the handling of connection parameters set with the classic `Extra` field as well as custom fields.", "long_descr": "The key used in the field definition returned by `get_connection_form_widgets` is stored in\nattr `extra_field_name_mapping`.  Whatever is defined there is what should end up in `extra` when\nthe form is processed.", "ret": null}, "fn_lc": [[138, 0], [165, 5]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[158, 4], [158, 47]], "cmv": [[157, 4], [157, 7]], "data": [[149, 4], [149, 18]], "mock_form": [[148, 4], [148, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"]], "data": [["mock_form", "data"], ["json", "loads", "mock_form", "extra", "data", "field_name"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"], ["json", "loads", "mock_form", "extra", "data", "field_name"]]}, "name": "test_process_form_extras_both", "params": {"field_name": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_descr": {"field_name": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_occur": {"field_name": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False"], ["json", "loads", "mock_form", "extra", "data", "field_name"]], "mock_import_str": [], "mock_pm_hooks": [["mock_pm_hooks", "get", "return_value", "True"]]}, "params_p": {"args": [], "field_name": [], "kwargs": [], "mock_import_str": [["str", 0.3132208897149836], ["List[int]", 0.2954719934842792], ["Dict[str, Any]", 0.09729426107269307], ["Iterable[str]", 0.09561249766960098], ["tests.async_mock.MagicMock", 0.0918445183649408]], "mock_pm_hooks": []}, "q_name": "test_process_form_extras_both", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.6495092025004015]], "cmv": [["str", 0.8223610465483953], ["Dict[str, Dict[str, Any]]", 0.0920310366593391], ["bool", 0.08560791679226595]], "data": [["str", 0.36418161920043984], ["Dict[str, Any]", 0.2170137150238133], ["Dict[str, str]", 0.08228700994443526], ["Type[Dict[str, Any]]", 0.07528367208017782]], "mock_form": [["mock.MagicMock", 0.15120240979637978]]}}, {"docstring": {"func": "Test the handling of connection parameters set with the classic `Extra` field as well as custom fields.", "long_descr": "The key used in the field definition returned by `get_connection_form_widgets` is stored in\nattr `extra_field_name_mapping`.  Whatever is defined there is what should end up in `extra` when\nthe form is processed.", "ret": null}, "fn_lc": [[170, 0], [188, 71]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[186, 4], [186, 47]], "cmv": [[185, 4], [185, 7]], "data": [[179, 4], [179, 18]], "mock_form": [[178, 4], [178, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"]], "data": [["mock_form", "data"], ["json", "loads", "mock_form", "extra", "data"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"], ["json", "loads", "mock_form", "extra", "data"]]}, "name": "test_process_form_extras_extra_only", "params": {"mock_import_str": "", "mock_pm_hooks": ""}, "params_descr": {"mock_import_str": "", "mock_pm_hooks": ""}, "params_occur": {"mock_import_str": [], "mock_pm_hooks": []}, "params_p": {"args": [], "kwargs": [], "mock_import_str": [["mock.Mock", 0.629179870060589]], "mock_pm_hooks": [["mock.Mock", 0.629179870060589]]}, "q_name": "test_process_form_extras_extra_only", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.798824771782956], ["List[str]", 0.12184574125267497]], "cmv": [["str", 0.4948774863945473], ["bool", 0.1714350398211957], ["Dict[str, Union[Any, Any]]", 0.08192017204906353], ["Dict[str, Dict[str, Any]]", 0.08169781883109933]], "data": [["str", 0.29240746679712826], ["Dict[str, Any]", 0.22955362092735282], ["dict", 0.19916043885562335]], "mock_form": [["mock.Mock", 0.4398521961174403], ["mock.MagicMock", 0.10199848116829563]]}}, {"docstring": {"func": "Test the handling of connection parameters set with the classic `Extra` field as well as custom fields.", "long_descr": "The key used in the field definition returned by `get_connection_form_widgets` is stored in\nattr `extra_field_name_mapping`.  Whatever is defined there is what should end up in `extra` when\nthe form is processed.", "ret": null}, "fn_lc": [[194, 0], [219, 66]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[212, 4], [212, 47]], "cmv": [[211, 4], [211, 7]], "data": [[204, 4], [204, 18]], "mock_form": [[203, 4], [203, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False", "False", "False"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False", "False", "False"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"]], "data": [["mock_form", "data", "False"], ["json", "loads", "mock_form", "extra", "data", "field_name", "False"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data", "False"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"], ["json", "loads", "mock_form", "extra", "data", "field_name", "False"]]}, "name": "test_process_form_extras_custom_only", "params": {"field_name": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_descr": {"field_name": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_occur": {"field_name": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False", "False", "False"], ["json", "loads", "mock_form", "extra", "data", "field_name", "False"]], "mock_import_str": [], "mock_pm_hooks": []}, "params_p": {"args": [], "field_name": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.20703496036236735]], "kwargs": [], "mock_import_str": [["str", 0.3132208897149836], ["List[int]", 0.2954719934842792], ["Dict[str, Any]", 0.09729426107269307], ["Iterable[str]", 0.09561249766960098], ["tests.async_mock.MagicMock", 0.0918445183649408]], "mock_pm_hooks": [["str", 0.3132208897149836], ["List[int]", 0.2954719934842792], ["Dict[str, Any]", 0.09729426107269307], ["Iterable[str]", 0.09561249766960098], ["tests.async_mock.MagicMock", 0.0918445183649408]]}, "q_name": "test_process_form_extras_custom_only", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.5682323180443886], ["List[str]", 0.10227036926577969]], "cmv": [["str", 0.8175503914237786], ["Dict[str, Dict[str, Any]]", 0.09451551757102625], ["Tuple[Literal, Literal]", 0.08793409100519516]], "data": [["str", 0.7720131158933176], ["Dict[str, Dict[str, Any]]", 0.11610569826659518]], "mock_form": [["mock.MagicMock", 0.2895370428715934], ["mock.Mock", 0.24746543299491697]]}}, {"docstring": {"func": "Test the handling of connection parameters set with the classic `Extra` field as well as custom fields.", "long_descr": "The key used in the field definition returned by `get_connection_form_widgets` is stored in\nattr `extra_field_name_mapping`.  Whatever is defined there is what should end up in `extra` when\nthe form is processed.", "ret": null}, "fn_lc": [[225, 0], [254, 102]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[243, 4], [243, 47]], "cmv": [[242, 4], [242, 7]], "data": [[235, 4], [235, 18]], "mock_form": [[234, 4], [234, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"]], "data": [["mock_form", "data"], ["json", "loads", "mock_form", "extra", "data"], ["json", "loads", "mock_form", "extra", "data"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"], ["json", "loads", "mock_form", "extra", "data"], ["json", "loads", "mock_form", "extra", "data"]]}, "name": "test_process_form_extras_updates", "params": {"field_name": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_descr": {"field_name": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_occur": {"field_name": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "field_name", "False"]], "mock_import_str": [], "mock_pm_hooks": []}, "params_p": {"args": [], "field_name": [["tests.test_util.aiohttp.AiohttpClientMocker", 0.32040901900405905], ["Dict[str, Dict[str, str]]", 0.08849697737681021]], "kwargs": [], "mock_import_str": [["str", 0.4743244273635945], ["List[int]", 0.3312042427505641], ["tests.async_mock.MagicMock", 0.09020709797785746]], "mock_pm_hooks": [["str", 0.4743244273635945], ["List[int]", 0.3312042427505641], ["tests.async_mock.MagicMock", 0.09020709797785746]]}, "q_name": "test_process_form_extras_updates", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.6495092025004015]], "cmv": [["str", 0.8223610465483953], ["Dict[str, Dict[str, Any]]", 0.0920310366593391], ["bool", 0.08560791679226595]], "data": [["str", 0.2944200107291334], ["List[Dict[str, str]]", 0.2453989559123962], ["dict", 0.16437510819822285], ["Dict[str, Any]", 0.11053428016443279], ["Dict[str, str]", 0.09753829617347684], ["list", 0.08773334882233805]], "mock_form": [["mock.MagicMock", 0.15120240979637978]]}}, {"docstring": {"func": "Test the handling of sensitive unchanged field (where placeholder has not been modified).", "long_descr": null, "ret": null}, "fn_lc": [[260, 0], [284, 5]], "fn_var_ln": {"_iter_extra_field_names_and_sensitivity": [[276, 4], [276, 47]], "cmv": [[275, 4], [275, 7]], "data": [[269, 4], [269, 18]], "mock_form": [[268, 4], [268, 13]]}, "fn_var_occur": {"_iter_extra_field_names_and_sensitivity": [["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "True"]], "cmv": [["cmv", "ConnectionModelView"], ["cmv", "_iter_extra_field_names_and_sensitivity", "mock", "Mock", "return_value", "True"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"]], "data": [["mock_form", "data"], ["json", "loads", "mock_form", "extra", "data"]], "mock_form": [["mock_form", "mock", "Mock"], ["mock_form", "data"], ["cmv", "process_form", "form", "mock_form", "is_created", "True"], ["json", "loads", "mock_form", "extra", "data"]]}, "name": "test_process_form_extras_updates_sensitive_placeholder_unchanged", "params": {"mock_base_hook": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_descr": {"mock_base_hook": "", "mock_import_str": "", "mock_pm_hooks": ""}, "params_occur": {"mock_base_hook": [["mock_base_hook", "get_connection", "return_value", "Connection", "extra"]], "mock_import_str": [], "mock_pm_hooks": []}, "params_p": {"args": [], "kwargs": [], "mock_base_hook": [], "mock_import_str": [["mock.Mock", 0.7418057005485286]], "mock_pm_hooks": [["mock.Mock", 0.7418057005485286]]}, "q_name": "test_process_form_extras_updates_sensitive_placeholder_unchanged", "ret_exprs": [], "ret_type": "", "variables": {"_iter_extra_field_names_and_sensitivity": "", "cmv": "", "data": "", "mock_form": ""}, "variables_p": {"_iter_extra_field_names_and_sensitivity": [["str", 0.5866396773958868], ["List[str]", 0.10573692991908573]], "cmv": [["str", 0.90637582186744], ["Dict[str, Dict[str, Any]]", 0.09362417813255984]], "data": [["str", 0.29240746679712826], ["Dict[str, Any]", 0.22955362092735282], ["dict", 0.19916043885562335]], "mock_form": [["mock.Mock", 0.4398521961174403], ["mock.MagicMock", 0.10199848116829563]]}}, {"docstring": {"func": "Test Duplicate multiple connection with suffix", "long_descr": null, "ret": null}, "fn_lc": [[287, 0], [326, 38]], "fn_var_ln": {"conn1": [[289, 4], [289, 9]], "conn2": [[294, 4], [294, 9]], "conn3": [[302, 4], [302, 9]], "data": [[315, 4], [315, 8]], "expected_result": [[317, 4], [317, 19]], "resp": [[316, 4], [316, 8]], "response": [[324, 4], [324, 12]]}, "fn_var_occur": {"conn1": [["conn1", "Connection", "conn_id", "conn_type", "description"], ["session", "add_all", "conn1", "conn2", "conn3"], ["data", "conn1", "id", "conn3", "id"]], "conn2": [["conn2", "Connection", "conn_id", "conn_type", "description", "host", "schema", "port"], ["session", "add_all", "conn1", "conn2", "conn3"]], "conn3": [["conn3", "Connection", "conn_id", "conn_type", "description", "host", "schema", "port"], ["session", "add_all", "conn1", "conn2", "conn3"], ["data", "conn1", "id", "conn3", "id"]], "data": [["data", "conn1", "id", "conn3", "id"], ["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]], "expected_result": [["expected_result", "response"]], "resp": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"], ["resp", "status_code"]], "response": [["response", "conn", "conn", "session", "query", "Connection", "conn_id", "all"], ["expected_result", "response"]]}, "name": "test_duplicate_connection", "params": {"admin_client": ""}, "params_descr": {"admin_client": ""}, "params_occur": {"admin_client": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]]}, "params_p": {"admin_client": [["str", 0.17126465378052788]], "args": [], "kwargs": []}, "q_name": "test_duplicate_connection", "ret_exprs": [], "ret_type": "", "variables": {"conn1": "", "conn2": "", "conn3": "", "data": "", "expected_result": "", "resp": "", "response": ""}, "variables_p": {"conn1": [["Dict[str, str]", 0.17903044614130184], ["dict", 0.11244185466234823], ["golem.rpc.session.Publisher", 0.09637990848268782], ["float", 0.08175513697578835], ["grpy.core.models.Grouping", 0.08105624781126498]], "conn2": [["str", 0.2533174859426842], ["geode.models.common.Address", 0.1151638168406204], ["List[int]", 0.11276619061479724], ["float", 0.09191069729166637]], "conn3": [["str", 0.31929255595392453], ["Dict[str, str]", 0.15332353006237462], ["geode.models.common.Address", 0.10617557354997394], ["Optional[hpaction.models.HPActionDocuments]", 0.09841596364890148], ["fal.models.Season", 0.09341155456858435], ["list", 0.08027729227848768], ["List[str]", 0.07467218736672224], ["grpy.core.models.Grouping", 0.07443134257103111]], "data": [["str", 0.20928320675375195], ["int", 0.19868749355562043], ["Dict[str, str]", 0.10327766387878902], ["raiden.utils.Dict[str, raiden.utils.Any]", 0.09374211228975414]], "expected_result": [["str", 0.22507394357445096], ["List[str]", 0.15302858317752824], ["frozenset[str]", 0.15124889828862065], ["Dict[Any, set]", 0.10507378431484159], ["dict", 0.08583538150849161], ["Set[int]", 0.07959060487307487]], "resp": [["requests.models.Response", 0.7449239071153861], ["Generator[Any, None, None]", 0.13015547295636118]], "response": [["str", 0.2708816504668435], ["int", 0.13512139160178432], ["dict", 0.12299316678371257], ["jumeaux.models.DiffKeys", 0.09788724847859265], ["Dict[str, Any]", 0.0800651338978033]]}}, {"docstring": {"func": "Test Duplicate multiple connection with suffix", "long_descr": "when there are already 10 copies, no new copy\nshould be created", "ret": null}, "fn_lc": [[329, 0], [358, 38]], "fn_var_ln": {"connection_ids": [[334, 4], [334, 18]], "connections": [[335, 4], [335, 15]], "data": [[351, 4], [351, 8]], "expected_result": [[354, 4], [354, 19]], "resp": [[352, 4], [352, 8]], "response": [[357, 4], [357, 12]]}, "fn_var_occur": {"connection_ids": [["connection_ids", "i", "i", "range"], ["connections", "Connection", "conn_id", "connection_id", "conn_type", "description", "host", "schema", "port", "connection_id", "connection_ids"]], "connections": [["connections", "Connection", "conn_id", "connection_id", "conn_type", "description", "host", "schema", "port", "connection_id", "connection_ids"], ["session", "add_all", "connections"], ["data", "connections", "id"]], "data": [["data", "connections", "id"], ["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]], "expected_result": [["expected_result", "i", "i", "range"], ["expected_result", "response"]], "resp": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"], ["resp", "status_code"]], "response": [["response", "conn", "conn", "session", "query", "Connection", "conn_id", "all"], ["expected_result", "response"]]}, "name": "test_duplicate_connection_error", "params": {"admin_client": ""}, "params_descr": {"admin_client": ""}, "params_occur": {"admin_client": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]]}, "params_p": {"admin_client": [["str", 0.16852711791759792]], "args": [], "kwargs": []}, "q_name": "test_duplicate_connection_error", "ret_exprs": [], "ret_type": "", "variables": {"connection_ids": "", "connections": "", "data": "", "expected_result": "", "resp": "", "response": ""}, "variables_p": {"connection_ids": [["str", 0.5998468140540116], ["int", 0.17687839887347304]], "connections": [["str", 0.4899068953301662], ["int", 0.13782191895140677], ["dict", 0.09943035135861063], ["Dict[str, str]", 0.09073010379416414], ["viewer.models.Gallery", 0.08846164046539495]], "data": [["str", 0.47361300124335926], ["Dict[str, int]", 0.2116459649958999], ["Dict[str, Any]", 0.10887441918845144], ["dict", 0.0901929784841978]], "expected_result": [["int", 0.9048132214766146], ["List[int]", 0.09518677852338533]], "resp": [["requests.models.Response", 0.7449239071153861], ["Generator[Any, None, None]", 0.13015547295636118]], "response": [["str", 0.2708816504668435], ["int", 0.13512139160178432], ["dict", 0.12299316678371257], ["jumeaux.models.DiffKeys", 0.09788724847859265], ["Dict[str, Any]", 0.0800651338978033]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[362, 0], [372, 94]], "fn_var_ln": {"connection": [[363, 4], [363, 14]]}, "fn_var_occur": {"connection": [["connection", "Connection", "conn_id", "conn_type", "description"], ["session", "add", "connection"]]}, "name": "connection", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "connection", "ret_exprs": [], "ret_type": "", "variables": {"connection": ""}, "variables_p": {"connection": [["dict", 0.2724446311502581], ["List[Tuple[str, int]]", 0.25433528952249224], ["Optional[\"Lecture\"]", 0.11505857070720248], ["Dict[str, Any]", 0.10218036925763543], ["golem.rpc.session.Publisher", 0.10038343162737962], ["Dict[str, Union[Any, Any, str]]", 0.08172555533113407], ["list", 0.07387215240389791]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[375, 0], [381, 86]], "fn_var_ln": {"conn_id": [[376, 4], [376, 11]], "data": [[377, 4], [377, 8]], "resp": [[378, 4], [378, 8]]}, "fn_var_occur": {"conn_id": [["conn_id", "connection", "id"], ["data", "conn_id"], ["session", "query", "Connection", "filter", "Connection", "id", "conn_id", "count"]], "data": [["data", "conn_id"], ["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]], "resp": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"], ["resp", "status_code"]]}, "name": "test_connection_muldelete", "params": {"admin_client": "", "connection": ""}, "params_descr": {"admin_client": "", "connection": ""}, "params_occur": {"admin_client": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]], "connection": [["conn_id", "connection", "id"]]}, "params_p": {"admin_client": [["str", 0.17126465378052788]], "args": [], "connection": [["tests.e2e.Helper", 0.45561454451711614], ["str", 0.08600419608037342]], "kwargs": []}, "q_name": "test_connection_muldelete", "ret_exprs": [], "ret_type": "", "variables": {"conn_id": "", "data": "", "resp": ""}, "variables_p": {"conn_id": [["int", 0.18142057951251456]], "data": [["str", 0.3099570316270572], ["Tuple[int]", 0.09669918095418532], ["Dict[str, Any]", 0.07927778322038408]], "resp": [["requests.models.Response", 0.7449239071153861], ["Generator[Any, None, None]", 0.13015547295636118]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[385, 0], [392, 72]], "fn_var_ln": {"return_value": [[386, 4], [386, 30]]}, "fn_var_occur": {"return_value": [["mock_pm_hooks", "return_value", "mock", "MagicMock", "connection_testable", "True", "mock", "MagicMock", "connection_testable", "False", "None"]]}, "name": "test_connection_form_widgets_testable_types", "params": {"admin_client": "", "mock_pm_hooks": ""}, "params_descr": {"admin_client": "", "mock_pm_hooks": ""}, "params_occur": {"admin_client": [], "mock_pm_hooks": [["mock_pm_hooks", "return_value", "mock", "MagicMock", "connection_testable", "True", "mock", "MagicMock", "connection_testable", "False", "None"]]}, "params_p": {"admin_client": [["mock.Mock", 0.3152921800064975], ["tests.async_mock.MagicMock", 0.09692223232582359], ["mock.MagicMock", 0.09610931390721436], ["Callable", 0.08988343070433874]], "args": [], "kwargs": [], "mock_pm_hooks": [["Dict[str, Any]", 0.42764327490256704]]}, "q_name": "test_connection_form_widgets_testable_types", "ret_exprs": [], "ret_type": "", "variables": {"return_value": ""}, "variables_p": {"return_value": [["mock.Mock", 0.09750782665159338]]}}, {"docstring": {"func": "Test that when an invalid json `extra` is passed in the form, it is removed and _not_", "long_descr": "saved over the existing extras.", "ret": null}, "fn_lc": [[395, 0], [414, 41]], "fn_var_ln": {"conn": [[412, 8], [412, 12]], "conn_details": [[400, 4], [400, 16]], "data": [[407, 4], [407, 8]], "id": [[402, 4], [402, 11]], "resp": [[408, 4], [408, 8]]}, "fn_var_occur": {"conn": [["conn", "Connection", "conn_details", "extra"], ["conn", "id"], ["session", "add", "conn"], ["conn", "session", "get", "Connection"], ["conn", "extra"]], "conn_details": [["conn", "Connection", "conn_details", "extra"], ["data", "conn_details"]], "data": [["data", "conn_details"], ["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]], "id": [["conn", "id"]], "resp": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"], ["resp", "status_code"]]}, "name": "test_process_form_invalid_extra_removed", "params": {"admin_client": ""}, "params_descr": {"admin_client": ""}, "params_occur": {"admin_client": [["resp", "admin_client", "post", "data", "data", "follow_redirects", "True"]]}, "params_p": {"admin_client": [["str", 0.17126465378052788]], "args": [], "kwargs": []}, "q_name": "test_process_form_invalid_extra_removed", "ret_exprs": [], "ret_type": "", "variables": {"conn": "", "conn_details": "", "data": "", "id": "", "resp": ""}, "variables_p": {"conn": [["dict", 0.2535884145655808], ["str", 0.21078466444916227], ["golem.rpc.session.WebSocketAddress", 0.10041276355135056]], "conn_details": [["int", 0.3133628843046735], ["str", 0.18507029504213227], ["dict", 0.09667158388156057], ["bool", 0.09559470688584913]], "data": [["str", 0.20665711443188678], ["dict", 0.09472176313059091], ["Dict[str, Union[bool, str]]", 0.08733854460310336], ["Type[Dict[str, Any]]", 0.08564923691804392]], "id": [["List[str]", 0.49999999998069394], ["str", 0.49999999998069394], ["list", 1.8840229684596427e-11], ["List[Tuple[str, bool, Any]]", 6.229818200335967e-12], ["Tuple[float, float]", 4.848766274469788e-12], ["int", 4.416867014354685e-12]], "resp": [["requests.models.Response", 0.7449239071153861], ["Generator[Any, None, None]", 0.13015547295636118]]}}], "imports": ["__future__", "annotations", "json", "typing", "Any", "unittest", "mock", "unittest", "mock", "PropertyMock", "pytest", "pytest", "param", "airflow", "models", "Connection", "airflow", "utils", "session", "create_session", "airflow", "www", "views", "ConnectionFormWidget", "ConnectionModelView", "tests", "test_utils", "www", "_check_last_log", "_check_last_log_masked_connection", "check_content_in_response"], "mod_var_ln": {"CONNECTION": [[33, 0], [33, 10]]}, "mod_var_occur": {"CONNECTION": [["CONNECTION"], ["resp", "admin_client", "post", "data", "CONNECTION", "follow_redirects", "True"], ["invalid_connection", "CONNECTION", "invalid_conn_id"], ["session", "query", "Connection", "filter", "Connection", "conn_id", "CONNECTION", "delete"]]}, "no_types_annot": {"D": 2, "I": 0, "U": 106}, "session_id": "WDLIgodBjFu2kDimsl5z5MeA7ieouzF-mhOlde1BYEM", "set": null, "tc": [false, null], "type_annot_cove": 0.02, "typed_seq": "", "untyped_seq": "", "variables": {"CONNECTION": "builtins.dict[builtins.str, typing.Any]"}, "variables_p": {"CONNECTION": [["Dict[str, Union[float, str]]", 0.17833801666010474]]}}}