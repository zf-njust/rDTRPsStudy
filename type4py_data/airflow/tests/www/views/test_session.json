{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[29, 0], [30, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_session_cookie", "params": {"client": ""}, "params_descr": {"client": ""}, "params_occur": {"client": [["next", "cookie", "cookie", "client", "cookie_jar", "cookie", "name", "None"]]}, "params_p": {"args": [], "client": [["str", 0.15552781733686688]], "kwargs": []}, "q_name": "get_session_cookie", "ret_exprs": ["return next((cookie for cookie in client.cookie_jar if cookie.name == \"session\"), None)"], "ret_type": "", "ret_type_p": [["str", 0.5940269511525197], ["List[str]", 0.40597304884748037]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[33, 0], [34, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_session_cookie_created_on_login", "params": {"user_client": ""}, "params_descr": {"user_client": ""}, "params_occur": {"user_client": [["get_session_cookie", "user_client", "None"]]}, "params_p": {"args": [], "kwargs": [], "user_client": []}, "q_name": "test_session_cookie_created_on_login", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 0], [47, 34]], "fn_var_ln": {"resp": [[41, 4], [41, 8]], "session_cookie": [[38, 4], [38, 18]]}, "fn_var_occur": {"resp": [["resp", "user_client", "get"], ["resp", "status_code"], ["resp", "status_code"]], "session_cookie": [["session_cookie", "get_session_cookie", "user_client"], ["session_cookie", "None"], ["user_client", "set_cookie", "session_cookie", "value"]]}, "name": "test_session_inaccessible_after_logout", "params": {"user_client": ""}, "params_descr": {"user_client": ""}, "params_occur": {"user_client": [["session_cookie", "get_session_cookie", "user_client"], ["resp", "user_client", "get"], ["user_client", "set_cookie", "session_cookie", "value"], ["user_client", "get"]]}, "params_p": {"args": [], "kwargs": [], "user_client": [["app.GrpyApp", 0.1321684592310464], ["aioapp.app.Application", 0.09713958443540088]]}, "q_name": "test_session_inaccessible_after_logout", "ret_exprs": [], "ret_type": "", "variables": {"resp": "", "session_cookie": ""}, "variables_p": {"resp": [["Dict[str, Union[int, str]]", 0.2928805876700619], ["int", 0.204247078920714], ["DefaultDict[Any, int]", 0.11026702394144368], ["dict", 0.1003697263625473], ["Dict[Any, float]", 0.09154454929211013]], "session_cookie": [["int", 0.11491491189147485], ["Dict[str, Any]", 0.08744744790909048]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[63, 4], [65, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "poorly_configured_app_factory", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_invalid_session_backend_option.<locals>.poorly_configured_app_factory", "ret_exprs": ["return app.create_app(testing=True)"], "ret_type": "", "ret_type_p": [["str", 0.1528333250470204], ["routemaster.app.App", 0.1052960824524826]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[50, 0], [72, 39]], "fn_var_ln": {"expected_exc_regex": [[67, 4], [67, 22]]}, "fn_var_occur": {"expected_exc_regex": [["pytest", "raises", "AirflowConfigException", "match", "expected_exc_regex"]]}, "name": "test_invalid_session_backend_option", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "test_invalid_session_backend_option", "ret_exprs": [], "ret_type": "", "variables": {"expected_exc_regex": ""}, "variables_p": {"expected_exc_regex": [["Pattern[str]", 0.7053776054406098], ["List[str]", 0.29462239455939015]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 0], [90, 63]], "fn_var_ln": {"new_session_cookie": [[88, 4], [88, 22]], "old_session_cookie": [[76, 4], [76, 22]], "patch_path": [[82, 4], [82, 14]], "resp": [[85, 8], [85, 12]], "return_value": [[84, 8], [84, 40]]}, "fn_var_occur": {"new_session_cookie": [["new_session_cookie", "get_session_cookie", "user_client"], ["new_session_cookie", "None"], ["old_session_cookie", "value", "new_session_cookie", "value"]], "old_session_cookie": [["old_session_cookie", "get_session_cookie", "user_client"], ["old_session_cookie", "None"], ["old_session_cookie", "value", "new_session_cookie", "value"]], "patch_path": [["mock", "patch", "patch_path", "check_password_hash"]], "resp": [["resp", "user_client", "get"], ["resp", "status_code"], ["resp", "user_client", "post", "data"], ["resp", "status_code"]], "return_value": [["check_password_hash", "return_value", "True"]]}, "name": "test_session_id_rotates", "params": {"app": "", "user_client": ""}, "params_descr": {"app": "", "user_client": ""}, "params_occur": {"app": [], "user_client": [["old_session_cookie", "get_session_cookie", "user_client"], ["resp", "user_client", "get"], ["resp", "user_client", "post", "data"], ["new_session_cookie", "get_session_cookie", "user_client"]]}, "params_p": {"app": [], "args": [], "kwargs": [], "user_client": [["dict", 0.0981798249863061], ["aiohttp.test_utils.TestClient", 0.09259505378041405]]}, "q_name": "test_session_id_rotates", "ret_exprs": [], "ret_type": "", "variables": {"new_session_cookie": "", "old_session_cookie": "", "patch_path": "", "resp": "", "return_value": ""}, "variables_p": {"new_session_cookie": [["Dict[str, str]", 0.17970340189398662], ["int", 0.1226694628538021], ["dict", 0.10855090486213505], ["Dict[str, Any]", 0.104626827316935], ["Optional[Dict[str, Any]]", 0.09302030556295142], ["Dict[str, int]", 0.08985170094699331]], "old_session_cookie": [["str", 0.7086840056064748], ["Dict[str, str]", 0.19148947290304874], ["Dict[str, Union[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]]", 0.09982652149047645]], "patch_path": [["str", 0.3972269186295865], ["Optional[str]", 0.16475626362963844], ["Pattern", 0.12919462124309783], ["Callable[[str], str]", 0.1051036415201529], ["List[str]", 0.1041351254403195], ["bool", 0.09958342953720505]], "resp": [], "return_value": [["list", 0.1910591689858058], ["str", 0.16956864708300412], ["Optional[bytes]", 0.11636573774517078], ["tests.utils.MockCoroutine", 0.09397749336018367], ["Dict[str, Any]", 0.08824840140777393], ["List[Tuple[str, str]]", 0.08640895356458872], ["Dict[str, Union[int, str]]", 0.08365234876521685]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 0], [104, 51]], "fn_var_ln": {"active": [[101, 4], [101, 15]], "resp": [[102, 4], [102, 8]], "user": [[94, 4], [94, 8]]}, "fn_var_occur": {"active": [["user", "active", "False"], ["user", "active", "True"]], "resp": [["resp", "user_client", "get"], ["resp", "status_code"], ["resp", "headers", "get"], ["resp", "user_client", "get"], ["resp", "status_code"], ["resp", "headers", "get"]], "user": [["user", "app", "appbuilder", "sm", "find_user", "username"], ["user", "active", "False"], ["user", "active", "True"]]}, "name": "test_check_active_user", "params": {"app": "", "user_client": ""}, "params_descr": {"app": "", "user_client": ""}, "params_occur": {"app": [["user", "app", "appbuilder", "sm", "find_user", "username"]], "user_client": [["resp", "user_client", "get"], ["resp", "user_client", "get"]]}, "params_p": {"app": [["abilian.app.Application", 0.4434384185409248]], "args": [], "kwargs": [], "user_client": [["app.GrpyApp", 0.09142427895001633]]}, "q_name": "test_check_active_user", "ret_exprs": [], "ret_type": "", "variables": {"active": "", "resp": "", "user": ""}, "variables_p": {"active": [["str", 0.9999999999611], ["bool", 1.532265898604227e-11], ["List[str]", 6.44039265227209e-12], ["Dict[str, Any]", 5.622763118943203e-12], ["int", 4.7988303773374e-12]], "resp": [["chalice.app.AuthResponse", 0.21096255384099588]], "user": [["str", 0.19676041117640536], ["Dict[str, str]", 0.1889103780082239], ["Dict[str, Union[int, str]]", 0.09148008467774622]]}}], "imports": ["__future__", "annotations", "unittest", "mock", "pytest", "airflow", "exceptions", "AirflowConfigException", "airflow", "www", "app", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "decorators", "dont_initialize_flask_app_submodules"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 25}, "session_id": "KxA4M4ICv_AF4A1aIWJ0c2gdX6AdEnxbC7hDtnZShhs", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}