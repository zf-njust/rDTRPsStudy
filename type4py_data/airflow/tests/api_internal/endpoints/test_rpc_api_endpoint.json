{"error": null, "response": {"classes": [{"cls_lc": [[58, 0], [163, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[60, 4], [71, 37]], "fn_var_ln": {"app": [[61, 8], [61, 16]], "client": [[62, 8], [62, 19]], "return_value": [[68, 12], [68, 44]], "side_effect": [[64, 8], [64, 36]]}, "fn_var_occur": {"app": [["self", "app", "minimal_app_for_internal_api"], ["self", "client", "self", "app", "test_client"]], "client": [["self", "client", "self", "app", "test_client"]], "return_value": [["mock_initialize_map", "return_value", "TEST_METHOD_NAME", "mock_test_method"]], "side_effect": [["mock_test_method", "side_effect", "None"]]}, "name": "setup_attrs", "params": {"minimal_app_for_internal_api": "flask.Flask", "self": ""}, "params_descr": {"minimal_app_for_internal_api": "", "self": ""}, "params_occur": {"minimal_app_for_internal_api": [["self", "app", "minimal_app_for_internal_api"]], "self": [["self", "app", "minimal_app_for_internal_api"], ["self", "client", "self", "app", "test_client"]]}, "params_p": {"args": [], "kwargs": [], "minimal_app_for_internal_api": [["bool", 0.2855712824082786], ["List[str]", 0.11617701353741844], ["Optional[str]", 0.11327864481606437], ["str", 0.09029070163891674], ["int", 0.08525894853884217]], "self": []}, "q_name": "TestRpcApiEndpoint.setup_attrs", "ret_exprs": [], "ret_type": "typing.Generator", "variables": {"app": "", "client": "", "return_value": "", "side_effect": ""}, "variables_p": {"app": [["flask.app.Flask", 1.0000000000000002]], "client": [["int", 0.75954940801549], ["Final", 0.1631853350242139], ["Type[nextcloudappstore.core.models.AppRating]", 0.0772652569602961]], "return_value": [["str", 0.19065449671913343], ["Dict[str, Dict[str, Any]]", 0.1684837593502965], ["Dict[str, str]", 0.1637711640815387], ["Dict[str, Optional[str]]", 0.08714987073666963], ["Dict[str, Union[Any, Any, Any]]", 0.0826243726291307], ["Dict[str, Union[Any, Any]]", 0.08254948390870498]], "side_effect": [["flask.blueprints.Blueprint", 0.34288578196100444], ["str", 0.3053494217160155], ["Dict[str, Dict[str, str]]", 0.08946105788625719], ["Dict[str, Any]", 0.07844132392274843], ["mock._patch[Literal]", 0.07324874952761026]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [117, 62]], "fn_var_ln": {"response": [[107, 8], [107, 16]], "response_data": [[114, 12], [114, 25]], "return_value": [[105, 12], [105, 38]]}, "fn_var_occur": {"response": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "input_data"], ["response", "status_code", "expected_code"], ["response_data", "BaseSerialization", "deserialize", "json", "loads", "response", "data"]], "response_data": [["response_data", "BaseSerialization", "deserialize", "json", "loads", "response", "data"], ["response_data", "method_result"]], "return_value": [["expected_mock", "return_value", "method_result"]]}, "name": "test_method", "params": {"expected_code": "", "expected_mock": "", "input_data": "", "method_params": "", "method_result": "", "self": ""}, "params_descr": {"expected_code": "", "expected_mock": "", "input_data": "", "method_params": "", "method_result": "", "self": ""}, "params_occur": {"expected_code": [["response", "status_code", "expected_code"]], "expected_mock": [["expected_mock", "return_value", "method_result"], ["expected_mock", "assert_called_once_with", "method_params"]], "input_data": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "input_data"]], "method_params": [["expected_mock", "assert_called_once_with", "method_params"]], "method_result": [["expected_mock", "return_value", "method_result"], ["response_data", "method_result"]], "self": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "input_data"]]}, "params_p": {"args": [], "expected_code": [["str", 0.30084994072788773], ["int", 0.2823576287822207], ["float", 0.11054124671698043], ["Callable", 0.1088415082406986], ["List[float]", 0.10396448514769144], ["List[str]", 0.09344519038452113]], "expected_mock": [["str", 0.5055071081066028], ["List[str]", 0.09414956973092478]], "input_data": [["str", 0.410041537346681], ["dict", 0.3680731235776521], ["Optional[Dict[str, Any]]", 0.22188533907566696]], "kwargs": [], "method_params": [], "method_result": [["str", 0.4161418248804263], ["int", 0.1951317562917376], ["bool", 0.0975658781458688], ["Optional[int]", 0.08551679934638005]], "self": []}, "q_name": "TestRpcApiEndpoint.test_method", "ret_exprs": [], "ret_type": "", "variables": {"response": "", "response_data": "", "return_value": ""}, "variables_p": {"response": [["requests.models.Response", 0.16924699140540342], ["Dict[str, Union[Any, Any, str]]", 0.08869208316712178], ["Dict[str, str]", 0.0826215133466969]], "response_data": [["dict", 0.5186528528861999], ["str", 0.20235137140484724], ["Dict[str, str]", 0.19343558734014626]], "return_value": [["str", 0.26065788997268946], ["int", 0.17636277016045782], ["List[Dict[str, Any]]", 0.150967937497336], ["Dict[str, Union[Any, Any]]", 0.14274591454162955], ["Optional[bytes]", 0.06864419001515835]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[119, 4], [132, 45]], "fn_var_ln": {"expected_data": [[131, 8], [131, 21]], "response": [[123, 8], [123, 16]], "response_data": [[130, 8], [130, 21]], "return_value": [[121, 8], [121, 37]], "ti": [[120, 8], [120, 10]]}, "fn_var_occur": {"expected_data": [["expected_data", "TaskInstancePydantic", "from_orm", "ti"], ["response_data", "expected_data"]], "response": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "TEST_METHOD_NAME"], ["response", "status_code"], ["print", "response", "data"], ["response_data", "BaseSerialization", "deserialize", "json", "loads", "response", "data", "use_pydantic_models", "True"]], "response_data": [["response_data", "BaseSerialization", "deserialize", "json", "loads", "response", "data", "use_pydantic_models", "True"], ["response_data", "expected_data"]], "return_value": [["mock_test_method", "return_value", "ti"]], "ti": [["ti", "TaskInstance", "task", "EmptyOperator", "task_id", "run_id", "state", "State", "RUNNING"], ["mock_test_method", "return_value", "ti"], ["expected_data", "TaskInstancePydantic", "from_orm", "ti"]]}, "name": "test_method_with_pydantic_serialized_object", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "TEST_METHOD_NAME"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRpcApiEndpoint.test_method_with_pydantic_serialized_object", "ret_exprs": [], "ret_type": "", "variables": {"expected_data": "", "response": "", "response_data": "", "return_value": "", "ti": ""}, "variables_p": {"expected_data": [["Dict[int, Any]", 0.3674430466594465], ["Dict[str, Any]", 0.24040181025101723], ["Dict[str, str]", 0.20897322346054115]], "response": [["Dict[str, str]", 0.3069986465219854], ["Dict[str, Any]", 0.11462064266911684], ["Generator[Any, None, None]", 0.08605599530971267], ["Dict[str, Union[Any, Any]]", 0.08551387565547379]], "response_data": [["dict", 0.40775637596862735], ["Union[Literal, str]", 0.24496557954982714], ["Dict[str, str]", 0.09716200101327516], ["List[str]", 0.09217883758982176], ["str", 0.0798107868022332]], "return_value": [["int", 0.3232117817917023], ["str", 0.2668276049112866], ["Dict[str, Dict[str, Any]]", 0.09748634548531249], ["Dict[str, Union[Any, Any, Any, Any]]", 0.06331418362850845]], "ti": [["str", 0.28970926533198726], ["raiden.utils.PaymentID", 0.0917857204090029]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [143, 45]], "fn_var_ln": {"data": [[136, 8], [136, 12]], "response": [[138, 8], [138, 16]], "side_effect": [[135, 8], [135, 36]]}, "fn_var_occur": {"data": [["data", "TEST_METHOD_NAME"], ["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"], ["response", "data"]], "response": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"], ["response", "status_code"], ["response", "data"]], "side_effect": [["mock_test_method", "side_effect", "ValueError"]]}, "name": "test_method_with_exception", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRpcApiEndpoint.test_method_with_exception", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "response": "", "side_effect": ""}, "variables_p": {"data": [["Dict[str, Union[Any, str]]", 0.38145859460937104], ["dict", 0.16288701196307798], ["bytes", 0.10951720050460213], ["Dict[str, Callable[..., Any]]", 0.10651858401382204], ["Dict[Any, dict]", 0.08164864623821701], ["Dict[Any, Union[int, str]]", 0.08066718736932188], ["Pattern[str]", 0.07730277530158798]], "response": [["requests.models.Response", 0.27850638226270324], ["tests.mock_navitia.navitia_response.NavitiaResponse", 0.2729031236539007], ["Dict[str, str]", 0.10974714154339688]], "side_effect": [["str", 0.3598019102215797], ["flask.blueprints.Blueprint", 0.2774998519868878], ["mock._patch[Literal]", 0.07449418936703867], ["Dict[str, Dict[str, str]]", 0.06937496299672195]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [153, 44]], "fn_var_ln": {"data": [[146, 8], [146, 12]], "response": [[148, 8], [148, 16]]}, "fn_var_occur": {"data": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"], ["response", "data"]], "response": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"], ["response", "status_code"], ["response", "data"]]}, "name": "test_unknown_method", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRpcApiEndpoint.test_unknown_method", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "response": ""}, "variables_p": {"data": [["Dict[str, Union[Any, str]]", 0.2677086567404118], ["dict", 0.18597440842225277], ["bytes", 0.167946269328767], ["Dict[str, Callable[..., Any]]", 0.11579478712301658], ["Pattern[str]", 0.0937483289438375]], "response": [["requests.models.Response", 0.27850638226270324], ["tests.mock_navitia.navitia_response.NavitiaResponse", 0.2729031236539007], ["Dict[str, str]", 0.10974714154339688]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[155, 4], [163, 44]], "fn_var_ln": {"data": [[156, 8], [156, 12]], "response": [[158, 8], [158, 16]]}, "fn_var_occur": {"data": [["data", "TEST_METHOD_NAME"], ["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"], ["response", "data"]], "response": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"], ["response", "status_code"], ["response", "data"]]}, "name": "test_invalid_jsonrpc", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["response", "self", "client", "post", "headers", "data", "json", "dumps", "data"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRpcApiEndpoint.test_invalid_jsonrpc", "ret_exprs": [], "ret_type": "", "variables": {"data": "", "response": ""}, "variables_p": {"data": [["Dict[str, Union[Any, str]]", 0.38145859460937104], ["dict", 0.16288701196307798], ["bytes", 0.10951720050460213], ["Dict[str, Callable[..., Any]]", 0.10651858401382204], ["Dict[Any, dict]", 0.08164864623821701], ["Dict[Any, Union[int, str]]", 0.08066718736932188], ["Pattern[str]", 0.07730277530158798]], "response": [["requests.models.Response", 0.27850638226270324], ["tests.mock_navitia.navitia_response.NavitiaResponse", 0.2729031236539007], ["Dict[str, str]", 0.10974714154339688]]}}], "name": "TestRpcApiEndpoint", "q_name": "TestRpcApiEndpoint", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[50, 4], [52, 83]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "factory", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "minimal_app_for_internal_api.<locals>.factory", "ret_exprs": ["return app.create_app(testing=True, config={\"WTF_CSRF_ENABLED\": False})"], "ret_type": "flask.Flask", "ret_type_p": [["cmk.utils.type_defs.HostName", 0.1134126997999784], ["cmk.utils.type_defs.ServiceName", 0.1134126997999784], ["Mapping[str, str]", 0.09750455567438575], ["purplship.core.utils.xml.Element", 0.0910470015294707], ["str", 0.08742188210773064], ["List[cmk.utils.type_defs.HostName]", 0.08262279107244509]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 0], [54, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "minimal_app_for_internal_api", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "minimal_app_for_internal_api", "ret_exprs": ["return factory()"], "ret_type": "flask.Flask", "ret_type_p": [["str", 0.6193951249058345], ["cmk.utils.type_defs.EventRule", 0.14054811608414217]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "json", "typing", "Generator", "unittest", "mock", "pytest", "flask", "Flask", "airflow", "models", "taskinstance", "TaskInstance", "airflow", "operators", "empty", "EmptyOperator", "airflow", "serialization", "pydantic", "taskinstance", "TaskInstancePydantic", "airflow", "serialization", "serialized_objects", "BaseSerialization", "airflow", "settings", "_ENABLE_AIP_44", "airflow", "utils", "state", "State", "airflow", "www", "app", "tests", "test_utils", "config", "conf_vars", "tests", "test_utils", "decorators", "dont_initialize_flask_app_submodules"], "mod_var_ln": {"TEST_METHOD_NAME": [[36, 0], [36, 16]], "TEST_METHOD_WITH_LOG_NAME": [[37, 0], [37, 25]], "mock_test_method": [[39, 0], [39, 16]]}, "mod_var_occur": {"TEST_METHOD_NAME": [["mock_initialize_map", "return_value", "TEST_METHOD_NAME", "mock_test_method"], ["response", "self", "client", "post", "headers", "data", "json", "dumps", "TEST_METHOD_NAME"], ["data", "TEST_METHOD_NAME"], ["data", "TEST_METHOD_NAME"]], "TEST_METHOD_WITH_LOG_NAME": [], "mock_test_method": [["mock_test_method", "reset_mock"], ["mock_test_method", "side_effect", "None"], ["mock_initialize_map", "return_value", "TEST_METHOD_NAME", "mock_test_method"], ["mock_test_method", "return_value", "ti"], ["mock_test_method", "side_effect", "ValueError"], ["mock_test_method", "assert_called_once"], ["mock_test_method", "assert_not_called"], ["mock_test_method", "assert_not_called"]]}, "no_types_annot": {"D": 4, "I": 0, "U": 32}, "session_id": "p72U2dvG49-eZOJyOqSNUaWOV_0QP1IAT1Vdrw_f3oY", "set": null, "tc": [false, null], "type_annot_cove": 0.11, "typed_seq": "", "untyped_seq": "", "variables": {"TEST_METHOD_NAME": "", "TEST_METHOD_WITH_LOG_NAME": "", "mock_test_method": ""}, "variables_p": {"TEST_METHOD_NAME": [["str", 0.9999999999999999]], "TEST_METHOD_WITH_LOG_NAME": [["str", 0.9999999999999998]], "mock_test_method": [["str", 0.5305907494737285], ["Dict[str, str]", 0.399027569637602], ["int", 0.07038168088866954]]}}}