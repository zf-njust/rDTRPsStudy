{"error": null, "response": {"classes": [{"cls_lc": [[100, 0], [133, 68]], "cls_var_ln": {"description": [[106, 4], [106, 15]], "user_options": [[107, 4], [107, 16]]}, "cls_var_occur": {"description": [], "user_options": []}, "funcs": [{"docstring": {"func": "Set default values for options.", "long_descr": null, "ret": null}, "fn_lc": [[109, 4], [110, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "initialize_options", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CleanCommand.initialize_options", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Set final values for options.", "long_descr": null, "ret": null}, "fn_lc": [[112, 4], [113, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "finalize_options", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CleanCommand.finalize_options", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Remove all files from the list.", "long_descr": null, "ret": null}, "fn_lc": [[116, 4], [122, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "rm_all_files", "params": {"files": "builtins.list[builtins.str]"}, "params_descr": {"files": ""}, "params_occur": {"files": []}, "params_p": {"args": [], "files": [["List[str]", 0.23725194578857609], ["Sequence[str]", 0.20835477815781156], ["IO[str]", 0.2003795635229469], ["Iterable[pathlib.Path]", 0.13930014056981097], ["IO[Any]", 0.12296785095099882], ["List[Callable]", 0.030678056458497246]], "kwargs": [], "self": []}, "q_name": "CleanCommand.rm_all_files", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Remove temporary files and directories.", "long_descr": null, "ret": null}, "fn_lc": [[124, 4], [133, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "rm_all_files", "glob", "glob"], ["self", "rm_all_files", "glob", "glob", "recursive", "True"], ["self", "rm_all_files", "glob", "glob", "recursive", "True"], ["self", "rm_all_files", "glob", "glob"], ["self", "rm_all_files", "glob", "glob"], ["self", "rm_all_files", "glob", "glob"], ["self", "rm_all_files", "glob", "glob"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CleanCommand.run", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "CleanCommand", "q_name": "CleanCommand", "variables": {"description": "", "user_options": "builtins.list[builtins.str]"}, "variables_p": {"description": [["str", 0.6999999999999998], ["Optional[\"LocalizedString\"]", 0.09999999999999998], ["\"LocalizedString\"", 0.09999999999999998], ["Optional[str]", 0.09999999999999998]], "user_options": [["List[Tuple[str, str, str]]", 0.8999999999999999], ["List[Tuple]", 0.1]]}}, {"cls_lc": [[136, 0], [155, 73]], "cls_var_ln": {"description": [[142, 4], [142, 15]], "user_options": [[143, 4], [143, 16]]}, "cls_var_occur": {"description": [], "user_options": []}, "funcs": [{"docstring": {"func": "Set default values for options.", "long_descr": null, "ret": null}, "fn_lc": [[145, 4], [146, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "initialize_options", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CompileAssets.initialize_options", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Set final values for options.", "long_descr": null, "ret": null}, "fn_lc": [[148, 4], [149, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "finalize_options", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CompileAssets.finalize_options", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Run a command to compile and build assets.", "long_descr": null, "ret": null}, "fn_lc": [[151, 4], [155, 73]], "fn_var_ln": {"www_dir": [[153, 8], [153, 15]]}, "fn_var_occur": {"www_dir": [["www_dir", "AIRFLOW_SOURCES_ROOT"], ["subprocess", "check_call", "cwd", "str", "www_dir"], ["subprocess", "check_call", "cwd", "str", "www_dir"]]}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "CompileAssets.run", "ret_exprs": [], "ret_type": "None", "variables": {"www_dir": ""}, "variables_p": {"www_dir": [["str", 0.7597624130671788], ["pathlib.Path", 0.1432478909339517]]}}], "name": "CompileAssets", "q_name": "CompileAssets", "variables": {"description": "", "user_options": "builtins.list[builtins.str]"}, "variables_p": {"description": [["str", 0.6999999999999998], ["Optional[\"LocalizedString\"]", 0.09999999999999998], ["\"LocalizedString\"", 0.09999999999999998], ["Optional[str]", 0.09999999999999998]], "user_options": [["List[Tuple[str, str, str]]", 0.8999999999999999], ["List[Tuple]", 0.1]]}}, {"cls_lc": [[158, 0], [175, 74]], "cls_var_ln": {"description": [[164, 4], [164, 15]], "user_options": [[165, 4], [165, 16]]}, "cls_var_occur": {"description": [], "user_options": []}, "funcs": [{"docstring": {"func": "Set default values for options.", "long_descr": null, "ret": null}, "fn_lc": [[167, 4], [168, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "initialize_options", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ListExtras.initialize_options", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Set final values for options.", "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [171, 43]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "finalize_options", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ListExtras.finalize_options", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "List extras.", "long_descr": null, "ret": null}, "fn_lc": [[173, 4], [175, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ListExtras.run", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "ListExtras", "q_name": "ListExtras", "variables": {"description": "", "user_options": "builtins.list[builtins.str]"}, "variables_p": {"description": [["str", 0.6999999999999998], ["Optional[\"LocalizedString\"]", 0.09999999999999998], ["\"LocalizedString\"", 0.09999999999999998], ["Optional[str]", 0.09999999999999998]], "user_options": [["List[Tuple[str, str, str]]", 0.8999999999999999], ["List[Tuple]", 0.1]]}}, {"cls_lc": [[766, 0], [795, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[769, 4], [771, 36]], "fn_var_ln": {"install_requires": [[771, 8], [771, 29]]}, "fn_var_occur": {"install_requires": [["self", "install_requires", "None"]]}, "name": "__init__", "params": {"attrs": "", "self": ""}, "params_descr": {"attrs": "", "self": ""}, "params_occur": {"attrs": [["super", "__init__", "attrs"]], "self": [["self", "install_requires", "None"]]}, "params_p": {"args": [], "attrs": [["bool", 0.1], ["Dict[str, Any]", 0.1], ["Callable[[Any, Any], bool]", 0.1]], "kwargs": [], "self": []}, "q_name": "AirflowDistribution.__init__", "ret_exprs": [], "ret_type": "", "variables": {"install_requires": ""}, "variables_p": {"install_requires": [["bool", 0.9999999997638014], ["int", 3.020395889648087e-11]]}}, {"docstring": {"func": "Ensure that when we have been asked to install providers from sources", "long_descr": "that we don't *also* try to install those providers from PyPI.\nAlso we should make sure that in this case we copy provider.yaml files so that\nProviders manager can find package information.", "ret": null}, "fn_lc": [[773, 4], [795, 13]], "fn_var_ln": {"install_requires": [[782, 12], [782, 33]], "provider_relative_path": [[787, 16], [787, 38]], "provider_yaml_files": [[785, 12], [785, 31]]}, "fn_var_occur": {"install_requires": [["self", "install_requires", "req", "req", "self", "install_requires", "req", "startswith"], ["self", "install_requires", "extend", "get_provider_package_name_from_package_id", "package_id", "package_id", "PREINSTALLED_PROVIDERS"]], "provider_relative_path": [["provider_relative_path", "relpath", "provider_yaml_file", "str", "AIRFLOW_SOURCES_ROOT"], ["self", "package_data", "append", "provider_relative_path"]], "provider_yaml_files": [["provider_yaml_files", "glob", "glob", "recursive", "True"]]}, "name": "parse_config_files", "params": {"args": "", "kwargs": "", "self": ""}, "params_descr": {"args": "", "kwargs": "", "self": ""}, "params_occur": {"args": [["super", "parse_config_files", "args", "kwargs"]], "kwargs": [["super", "parse_config_files", "args", "kwargs"]], "self": [["self", "install_requires", "req", "req", "self", "install_requires", "req", "startswith"], ["self", "package_data", "append", "provider_relative_path"], ["self", "install_requires", "extend", "get_provider_package_name_from_package_id", "package_id", "package_id", "PREINSTALLED_PROVIDERS"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AirflowDistribution.parse_config_files", "ret_exprs": [], "ret_type": "None", "variables": {"install_requires": "", "provider_relative_path": "", "provider_yaml_files": ""}, "variables_p": {"install_requires": [["str", 0.4301645311819251], ["int", 0.18089923804383196]], "provider_relative_path": [["pathlib.Path", 0.46997481469254987], ["list", 0.24506659424641686], ["Optional[pathlib.Path]", 0.11241769432317124], ["str", 0.09693960897967735]], "provider_yaml_files": [["str", 0.9042256961865524], ["pathlib.Path", 0.09577430381344754]]}}], "name": "AirflowDistribution", "q_name": "AirflowDistribution", "variables": {}, "variables_p": {}}, {"cls_lc": [[885, 0], [906, 21]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[888, 4], [906, 21]], "fn_var_ln": {"airflow_provider_packages": [[897, 12], [897, 37]], "installed_packages": [[894, 12], [894, 30]]}, "fn_var_occur": {"airflow_provider_packages": [["airflow_provider_packages", "package_line", "split", "package_line", "installed_packages", "package_line", "startswith"], ["self", "announce", "airflow_provider_packages", "level", "log", "INFO"], ["subprocess", "check_call", "airflow_provider_packages"]], "installed_packages": [["installed_packages", "subprocess", "check_output", "decode", "splitlines"], ["airflow_provider_packages", "package_line", "split", "package_line", "installed_packages", "package_line", "startswith"]]}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "announce", "level", "log", "INFO"], ["self", "announce", "airflow_provider_packages", "level", "log", "INFO"], ["self", "announce", "e", "level", "log", "WARN"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Develop.run", "ret_exprs": [], "ret_type": "None", "variables": {"airflow_provider_packages": "", "installed_packages": ""}, "variables_p": {"airflow_provider_packages": [["str", 0.8073475061396229], ["Dict[str, bool]", 0.09150927569459916]], "installed_packages": [["str", 0.9098819378086381], ["Optional[str]", 0.09011806219136186]]}}], "name": "Develop", "q_name": "Develop", "variables": {}, "variables_p": {}}, {"cls_lc": [[909, 0], [914, 21]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[912, 4], [914, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "announce", "level", "log", "INFO"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Install.run", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}], "name": "Install", "q_name": "Install", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 0], [87, 17]], "fn_var_ln": {"dependencies": [[76, 12], [76, 24]], "skip_python_version_check": [[73, 4], [73, 29]]}, "fn_var_occur": {"dependencies": [["dependencies", "json", "load", "f"], ["key", "value", "key", "value", "dependencies", "items", "CURRENT_PYTHON_VERSION", "value", "skip_python_version_check"]], "skip_python_version_check": [["skip_python_version_check", "os", "environ", "get"], ["key", "value", "key", "value", "dependencies", "items", "CURRENT_PYTHON_VERSION", "value", "skip_python_version_check"]]}, "name": "fill_provider_dependencies", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "fill_provider_dependencies", "ret_exprs": ["return { key: value for key, value in dependencies.items() if CURRENT_PYTHON_VERSION not in value[\"excluded-python-versions\"] or skip_python_version_check}", "return {}"], "ret_type": "builtins.dict[builtins.str, builtins.dict[builtins.str, builtins.list[builtins.str]]]", "ret_type_p": [["Mapping", 0.5912466381788548], ["Dict[str, str]", 0.10743787759312141], ["Dict[str, float]", 0.10254789965270743], ["Dict[str, List[Any]]", 0.10105694841005786]], "variables": {"dependencies": "", "skip_python_version_check": ""}, "variables_p": {"dependencies": [["dict", 0.2787792658680196], ["str", 0.27083201218419384], ["Dict[str, str]", 0.0944814405733264]], "skip_python_version_check": [["Type[Dict[Any, str]]", 0.22270169991734895], ["str", 0.2153809583739059], ["Dict[bytes, str]", 0.09961346631607419], ["dict", 0.09535312335405816], ["Optional[str]", 0.09376259871343823], ["Tuple[str, int]", 0.09346526510628589], ["Dict[str, Any]", 0.09294842419098655], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.08677446402790197]]}}, {"docstring": {"func": "Test suite for Airflow tests.", "long_descr": null, "ret": null}, "fn_lc": [[93, 0], [97, 21]], "fn_var_ln": {"test_loader": [[95, 4], [95, 15]], "test_suite": [[96, 4], [96, 14]]}, "fn_var_occur": {"test_loader": [["test_loader", "unittest", "TestLoader"], ["test_suite", "test_loader", "discover", "str", "AIRFLOW_SOURCES_ROOT", "pattern"]], "test_suite": [["test_suite", "test_loader", "discover", "str", "AIRFLOW_SOURCES_ROOT", "pattern"]]}, "name": "airflow_test_suite", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "airflow_test_suite", "ret_exprs": ["return test_suite"], "ret_type": "unittest.TestSuite", "ret_type_p": [["str", 0.1826803383056556], ["bool", 0.09634372125261505], ["int", 0.08917042489186383]], "variables": {"test_loader": "", "test_suite": ""}, "variables_p": {"test_loader": [], "test_suite": [["str", 0.6059503552694857], ["List[str]", 0.11480183187196585]]}}, {"docstring": {"func": "Return a version to identify the state of the underlying git repo. The version will", "long_descr": "indicate whether the head of the current git-backed working directory is tied to a\nrelease tag or not : it will indicate the former with a 'release:{version}' prefix\nand the latter with a '.dev0' suffix. Following the prefix will be a sha of the current\nbranch head. Finally, a \"dirty\" suffix is appended to indicate that uncommitted\nchanges are present.", "ret": "Found Airflow version in Git repo"}, "fn_lc": [[178, 0], [209, 27]], "fn_var_ln": {"repo": [[193, 12], [193, 16]], "sha": [[204, 8], [204, 11]]}, "fn_var_occur": {"repo": [["repo", "git", "Repo", "str", "AIRFLOW_SOURCES_ROOT"], ["sha", "repo", "head", "commit", "hexsha"], ["repo", "is_dirty"]], "sha": [["sha", "repo", "head", "commit", "hexsha"]]}, "name": "git_version", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "git_version", "ret_exprs": ["return \"\"", "return \"\"", "return \"\"", "return f\".dev0+{sha}.dirty\"", "return f\".release:{sha}\"", "return \"no_git_version\""], "ret_type": "builtins.str", "ret_type_p": [["str", 0.8018775197657468], ["Tuple[Tuple[int, ...]]", 0.08846009214476076]], "variables": {"repo": "", "sha": ""}, "variables_p": {"repo": [["str", 0.22415990797520527], ["Dict[str, Optional[str]]", 0.08632524369538806]], "sha": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": "Write the Semver version + git hash to file, e.g. \".dev0+2f635dc265e78db6708f59f68e8009abb92c1e65\".", "long_descr": null, "ret": null}, "fn_lc": [[212, 0], [220, 24]], "fn_var_ln": {"text": [[218, 4], [218, 8]]}, "fn_var_occur": {"text": [["text", "git_version"], ["file", "write", "text"]]}, "name": "write_version", "params": {"filename": "builtins.str"}, "params_descr": {"filename": "Destination file to write."}, "params_occur": {"filename": [["open", "filename", "file"]]}, "params_p": {"args": [], "filename": [["str", 1.0]], "kwargs": []}, "q_name": "write_version", "ret_exprs": [], "ret_type": "None", "variables": {"text": ""}, "variables_p": {"text": [["str", 0.9999999999999997]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[428, 0], [431, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_provider_dependencies", "params": {"provider_name": "builtins.str"}, "params_descr": {"provider_name": ""}, "params_occur": {"provider_name": [["provider_name", "PROVIDER_DEPENDENCIES"], ["PROVIDER_DEPENDENCIES", "provider_name", "DEPS"]]}, "params_p": {"args": [], "kwargs": [], "provider_name": [["str", 0.6730325927851423], ["pathlib.Path", 0.09203699304264365], ["int", 0.0830084541954206]]}, "q_name": "get_provider_dependencies", "ret_exprs": ["return []", "return PROVIDER_DEPENDENCIES[provider_name][DEPS]"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.31014574567924585], ["bool", 0.2435170904228038], ["Optional[str]", 0.08784839982908442], ["int", 0.08549484759439668]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[434, 0], [439, 26]], "fn_var_ln": {"_all_reqs": [[435, 4], [435, 13]]}, "fn_var_occur": {"_all_reqs": [["_all_reqs", "builtins", "set", "builtins", "str", "set"], ["_all_reqs", "add", "req"], ["list", "_all_reqs"]]}, "name": "get_unique_dependency_list", "params": {"req_list_iterable": "typing.Iterable[builtins.list[builtins.str]]"}, "params_descr": {"req_list_iterable": ""}, "params_occur": {"req_list_iterable": []}, "params_p": {"args": [], "kwargs": [], "req_list_iterable": [["Iterable[int]", 0.1952359703311761], ["bool", 0.10135296217752686], ["list", 0.09544950681199967], ["Iterator[int]", 0.07185116079384937]]}, "q_name": "get_unique_dependency_list", "ret_exprs": ["return list(_all_reqs)"], "ret_type": "", "ret_type_p": [["List[str]", 0.3863622803774973], ["str", 0.23810626788248093], ["List[Dict]", 0.14431437100687047], ["List[int]", 0.08003821826180477]], "variables": {"_all_reqs": "builtins.set[builtins.str]"}, "variables_p": {"_all_reqs": [["Set[str]", 0.9030307060236535], ["List[str]", 0.09696929397634646]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[504, 0], [509, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "filter_out_excluded_extras", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "filter_out_excluded_extras", "ret_exprs": [], "ret_type": "typing.Iterable[builtins.tuple[builtins.str, builtins.list[builtins.str]]]", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[517, 0], [519, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_extras_for_all_providers", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "add_extras_for_all_providers", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[522, 0], [524, 60]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_additional_extras", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "add_additional_extras", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Add extras for all deprecated aliases. Requirements for those deprecated aliases are the same", "long_descr": "as the extras they are replaced with.\nThe dependencies are not copies - those are the same lists as for the new extras. This is intended.\nThanks to that if the original extras are later extended with providers, aliases are extended as well.", "ret": null}, "fn_lc": [[566, 0], [577, 49]], "fn_var_ln": {"dependencies": [[574, 8], [574, 20]]}, "fn_var_occur": {"dependencies": [["dependencies", "EXTRAS_DEPENDENCIES", "get", "extra", "extra"], ["dependencies", "None"], ["EXTRAS_DEPENDENCIES", "alias", "dependencies"]]}, "name": "add_extras_for_all_deprecated_aliases", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "add_extras_for_all_deprecated_aliases", "ret_exprs": [], "ret_type": "None", "variables": {"dependencies": ""}, "variables_p": {"dependencies": [["dict", 0.2546781344773833], ["Dict[str, str]", 0.1945857961765129], ["Dict[Tuple[str, str], int]", 0.17220076150054445], ["Tuple[Type[str], Type[bytes]]", 0.16236527340896797]]}}, {"docstring": {"func": "For deprecated aliases that are providers, we will swap the providers dependencies to instead", "long_descr": "be the provider itself.\n\ne.g. {\"kubernetes\": [\"kubernetes>=3.0.0, <12.0.0\", ...]} becomes\n{\"kubernetes\": [\"apache-airflow-provider-cncf-kubernetes\"]}", "ret": null}, "fn_lc": [[580, 0], [591, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_all_deprecated_provider_packages", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "add_all_deprecated_provider_packages", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[628, 0], [635, 29]], "fn_var_ln": {"_all_db_reqs": [[629, 4], [629, 16]]}, "fn_var_occur": {"_all_db_reqs": [["_all_db_reqs", "builtins", "set", "builtins", "str", "set"], ["_all_db_reqs", "add", "req"], ["list", "_all_db_reqs"]]}, "name": "get_all_db_dependencies", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_all_db_dependencies", "ret_exprs": ["return list(_all_db_reqs)"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["dict", 0.2082183522036009], ["List[Dict[str, str]]", 0.09413220311482032], ["Sequence[Tuple[str, Any]]", 0.08965780174471953], ["list", 0.0875224312104871]], "variables": {"_all_db_reqs": "builtins.set[builtins.str]"}, "variables_p": {"_all_db_reqs": [["Set[str]", 0.5134904243618122], ["Dict[str, Union[Any, Any]]", 0.19519150453027806], ["Final", 0.19155223633529014], ["Dict[str, str]", 0.0997658347726196]]}}, {"docstring": {"func": "Checks if package should be excluded.", "long_descr": null, "ret": "true if package should be excluded"}, "fn_lc": [[668, 0], [676, 91]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "is_package_excluded", "params": {"exclusion_list": "builtins.list[builtins.str]", "package": "builtins.str"}, "params_descr": {"exclusion_list": "list of excluded packages", "package": "package name (beginning of it)"}, "params_occur": {"exclusion_list": [["any", "package", "startswith", "excluded_package", "excluded_package", "exclusion_list"]], "package": [["any", "package", "startswith", "excluded_package", "excluded_package", "exclusion_list"]]}, "params_p": {"args": [], "exclusion_list": [["Optional[str]", 0.3159417320263036], ["Tuple[str, str]", 0.2921105226320536], ["list", 0.09584126276264764], ["bool", 0.09473660839659143]], "kwargs": [], "package": [["Optional[str]", 0.3159417320263036], ["Tuple[str, str]", 0.2921105226320536], ["list", 0.09584126276264764], ["bool", 0.09473660839659143]]}, "q_name": "is_package_excluded", "ret_exprs": ["return any(package.startswith(excluded_package) for excluded_package in exclusion_list)"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.7129317263394449], ["TextIO", 0.09151174435469296], ["Union[str, pathlib.Path]", 0.08939921521402816]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Removes the limit for providers in devel_all to account for pre-release and development packages.", "long_descr": null, "ret": "true if package should be excluded"}, "fn_lc": [[679, 0], [690, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "remove_provider_limits", "params": {"package": "builtins.str"}, "params_descr": {"package": "package name (beginning of it)"}, "params_occur": {"package": [["package", "split", "package", "startswith", "package", "package"]]}, "params_p": {"args": [], "kwargs": [], "package": [["str", 1.0]]}, "q_name": "remove_provider_limits", "ret_exprs": ["return ( package.split(\">=\")[0] if package.startswith(\"apache-airflow-providers\") and \">=\" in package else package)"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.3748069746325332], ["Iterator[str]", 0.1055966879824464]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "The dictionary order remains when keys() are retrieved.", "long_descr": "Sort both: extras and list of dependencies to make it easier to analyse problems\nexternal packages will be first, then if providers are added they are added at the end of the lists.", "ret": null}, "fn_lc": [[713, 0], [723, 30]], "fn_var_ln": {"sorted_dependencies": [[719, 4], [719, 23]], "sorted_extra_ids": [[720, 4], [720, 20]]}, "fn_var_occur": {"sorted_dependencies": [["sorted_dependencies", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str"], ["sorted_dependencies", "extra_id", "sorted", "EXTRAS_DEPENDENCIES", "extra_id"]], "sorted_extra_ids": [["sorted_extra_ids", "sorted", "EXTRAS_DEPENDENCIES", "keys"]]}, "name": "sort_extras_dependencies", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "sort_extras_dependencies", "ret_exprs": ["return sorted_dependencies"], "ret_type": "builtins.dict[builtins.str, builtins.list[builtins.str]]", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"sorted_dependencies": "builtins.dict[builtins.str, builtins.list[builtins.str]]", "sorted_extra_ids": ""}, "variables_p": {"sorted_dependencies": [["Dict[str, str]", 0.3010662716710234], ["str", 0.1900371068850914], ["List[str]", 0.16972773284484072], ["Dict[str, Union[Any, Any]]", 0.1272369472677443], ["Dict[str, List[str]]", 0.1184519218817859], ["dict", 0.09348001944951417]], "sorted_extra_ids": [["Dict[str, str]", 0.8869396033266261], ["int", 0.11306039667337374]]}}, {"docstring": {"func": "Builds the name of provider package out of the package id provided/.", "long_descr": null, "ret": "full name of package in PyPI"}, "fn_lc": [[740, 0], [748, 55]], "fn_var_ln": {"package_suffix": [[747, 4], [747, 18]]}, "fn_var_occur": {"package_suffix": [["package_suffix", "package_id", "replace"]]}, "name": "get_provider_package_name_from_package_id", "params": {"package_id": "builtins.str"}, "params_descr": {"package_id": "id of the package (like amazon or microsoft.azure)"}, "params_occur": {"package_id": [["package_suffix", "package_id", "replace"]]}, "params_p": {"args": [], "kwargs": [], "package_id": [["str", 0.4192410647601752], ["int", 0.30132944813815277], ["List[str]", 0.09262423209901577]]}, "q_name": "get_provider_package_name_from_package_id", "ret_exprs": ["return f\"apache-airflow-providers-{package_suffix}\""], "ret_type": "builtins.str", "ret_type_p": [["str", 0.9999999999999998]], "variables": {"package_suffix": ""}, "variables_p": {"package_suffix": [["str", 0.6869653837443712], ["int", 0.22462509780957618], ["Tuple[Literal]", 0.08840951844605263]]}}, {"docstring": {"func": "Returns packages excluded for the current python version.", "long_descr": null, "ret": null}, "fn_lc": [[751, 0], [753, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_excluded_providers", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_excluded_providers", "ret_exprs": ["return []"], "ret_type": "builtins.list[builtins.str]", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Returns all provider packages configured in setup.py.", "long_descr": null, "ret": null}, "fn_lc": [[756, 0], [763, 5]], "fn_var_ln": {"excluded_providers": [[758, 4], [758, 22]]}, "fn_var_occur": {"excluded_providers": [["excluded_providers", "get_excluded_providers"], ["join", "get_provider_package_name_from_package_id", "package", "package", "ALL_PROVIDERS", "package", "excluded_providers"]]}, "name": "get_all_provider_packages", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_all_provider_packages", "ret_exprs": ["return \" \".join( get_provider_package_name_from_package_id(package) for package in ALL_PROVIDERS if package not in excluded_providers)"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.5103798031908249], ["Optional[str]", 0.31291796159563817], ["dict", 0.17670223521353695]], "variables": {"excluded_providers": ""}, "variables_p": {"excluded_providers": [["str", 0.43857287915751636], ["List[str]", 0.08936915881312762]]}}, {"docstring": {"func": "Replaces extra dependencies with provider package. The intention here is that when", "long_descr": "the provider is added as dependency of extra, there is no need to add the dependencies\nseparately. This is not needed and even harmful, because in case of future versions of\nthe provider, the dependencies might change, so hard-coding dependencies from the version\nthat was available at the release time might cause dependency conflicts in the future.\n\nSay for example that you have salesforce provider with those deps:\n\n{ 'salesforce': ['simple-salesforce>=1.0.0', 'tableauserverclient'] }\n\nInitially ['salesforce'] extra has those dependencies, and it works like that when you install\nit when INSTALL_PROVIDERS_FROM_SOURCES is set to `true` (during the development). However, when\nthe production installation is used, The dependencies are changed:\n\n{ 'salesforce': ['apache-airflow-providers-salesforce'] }\n\nAnd then, 'apache-airflow-providers-salesforce' package has those 'install_requires' dependencies:\n        ['simple-salesforce>=1.0.0', 'tableauserverclient']\n\nSo transitively 'salesforce' extra has all the dependencies it needs and in case the provider\nchanges its dependencies, they will transitively change as well.\n\nIn the constraint mechanism we save both - provider versions and it's dependencies\nversion, which means that installation using constraints is repeatable.\n\nFor K8s and Celery which are both \"Core executors\" and \"Providers\" we have to\nadd the base dependencies to core as well, in order to mitigate problems where\nnewer version of provider will have less strict limits. This should be done for both\nextras and their deprecated aliases. This is not a full protection however, the way\nextras work, this will not add \"hard\" limits for Airflow and the user who does not use\nconstraints.", "ret": null}, "fn_lc": [[798, 0], [846, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "replace_extra_dependencies_with_provider_packages", "params": {"extra": "builtins.str", "providers": "builtins.list[builtins.str]"}, "params_descr": {"extra": "Name of the extra to add providers to", "providers": "list of provider ids"}, "params_occur": {"extra": [["EXTRAS_DEPENDENCIES", "extra", "extend", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"], ["EXTRAS_DEPENDENCIES", "extra"], ["EXTRAS_DEPENDENCIES", "extra", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"]], "providers": [["EXTRAS_DEPENDENCIES", "extra", "extend", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"], ["EXTRAS_DEPENDENCIES", "extra", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"]]}, "params_p": {"args": [], "extra": [["bool", 0.23604866383080214], ["Mapping[str, Any]", 0.10173000778084447], ["List[Tuple[str, int]]", 0.09341864905538676], ["str", 0.09017264644354737]], "kwargs": [], "providers": [["bool", 0.12794019628617773], ["Mapping[str, Any]", 0.09228349329160324], ["Dict[str, pathlib.Path]", 0.09214933795865253]]}, "q_name": "replace_extra_dependencies_with_provider_packages", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Adds provider packages as dependencies to extra. This is used to add provider packages as dependencies", "long_descr": "to the \"bulk\" kind of extras. Those bulk extras do not have the detailed 'extra' dependencies as\ninitial values, so instead of replacing them (see previous function) we can extend them.", "ret": null}, "fn_lc": [[849, 0], [860, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_provider_packages_to_extra_dependencies", "params": {"extra": "builtins.str", "providers": "builtins.list[builtins.str]"}, "params_descr": {"extra": "Name of the extra to add providers to", "providers": "list of provider ids"}, "params_occur": {"extra": [["EXTRAS_DEPENDENCIES", "extra", "extend", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"]], "providers": [["EXTRAS_DEPENDENCIES", "extra", "extend", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"]]}, "params_p": {"args": [], "extra": [["str", 0.41997818308172563], ["bool", 0.10891336356818143], ["Dict[str, Any]", 0.10755839467259236]], "kwargs": [], "providers": [["str", 0.41997818308172563], ["bool", 0.10891336356818143], ["Dict[str, Any]", 0.10755839467259236]]}, "q_name": "add_provider_packages_to_extra_dependencies", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "In case of regular installation (providers installed from packages), we should add extra dependencies to", "long_descr": "Airflow - to get the providers automatically installed when those extras are installed.\n\nFor providers installed from sources we skip that step. That helps to test and install airflow with\nall packages in CI - for example when new providers are added, otherwise the installation would fail\nas the new provider is not yet in PyPI.", "ret": null}, "fn_lc": [[863, 0], [882, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_all_provider_packages", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "add_all_provider_packages", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "When installing providers from sources we install all namespace packages found below airflow,", "long_descr": "including airflow and provider packages, otherwise defaults from setup.cfg control this.\nThe kwargs in setup() call override those that are specified in setup.cfg.", "ret": null}, "fn_lc": [[926, 4], [933, 84]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "include_provider_namespace_packages_when_installing_from_sources", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "do_setup.<locals>.include_provider_namespace_packages_when_installing_from_sources", "ret_exprs": [], "ret_type": "None", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Perform the Airflow package setup.", "long_descr": "Most values come from setup.cfg, only the dynamically calculated ones are passed to setup\nfunction call. See https://setuptools.readthedocs.io/en/latest/userguide/declarative_config.html", "ret": null}, "fn_lc": [[917, 0], [954, 5]], "fn_var_ln": {"setup_kwargs": [[924, 4], [924, 16]]}, "fn_var_occur": {"setup_kwargs": [["setup", "distclass", "AirflowDistribution", "extras_require", "EXTRAS_DEPENDENCIES", "cmdclass", "CleanCommand", "CompileAssets", "ListExtras", "Install", "Develop", "test_suite", "setup_kwargs"]]}, "name": "do_setup", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "do_setup", "ret_exprs": [], "ret_type": "None", "variables": {"setup_kwargs": ""}, "variables_p": {"setup_kwargs": [["str", 0.09883535986535165]]}}], "imports": ["__future__", "annotations", "glob", "json", "logging", "os", "subprocess", "sys", "unittest", "copy", "deepcopy", "os", "path", "relpath", "pathlib", "Path", "textwrap", "wrap", "typing", "Iterable", "setuptools", "Command", "Distribution", "find_namespace_packages", "setup", "setuptools", "command", "develop", "develop", "develop_orig", "setuptools", "command", "install", "install", "install_orig", "distutils", "log", "git"], "mod_var_ln": {"ADDITIONAL_EXTRAS_DEPENDENCIES": [[474, 0], [474, 30]], "AIRFLOW_SOURCES_ROOT": [[56, 0], [56, 20]], "ALL_DB_PROVIDERS": [[604, 0], [604, 16]], "ALL_PROVIDERS": [[602, 0], [602, 13]], "CORE_EXTRAS_DEPENDENCIES": [[512, 0], [512, 24]], "CROSS_PROVIDERS_DEPS": [[59, 0], [59, 20]], "CURRENT_PYTHON_VERSION": [[61, 0], [61, 22]], "DEPS": [[60, 0], [60, 4]], "EXTRAS_DEPENDENCIES": [[726, 0], [726, 19]], "EXTRAS_DEPRECATED_ALIASES": [[535, 0], [535, 25]], "EXTRAS_DEPRECATED_ALIASES_IGNORED_FROM_REF_DOCS": [[561, 0], [561, 47]], "EXTRAS_DEPRECATED_ALIASES_NOT_PROVIDERS": [[556, 0], [556, 39]], "INSTALL_PROVIDERS_FROM_SOURCES": [[51, 0], [51, 30]], "PACKAGES_EXCLUDED_FOR_ALL": [[665, 0], [665, 25]], "PREINSTALLED_PROVIDERS": [[731, 0], [731, 22]], "PROVIDERS_ROOT": [[57, 0], [57, 14]], "PROVIDER_DEPENDENCIES": [[90, 0], [90, 21]], "PY39": [[52, 0], [52, 4]], "_all_dependencies": [[646, 0], [646, 17]], "_all_dependencies_without_airflow_providers": [[648, 0], [648, 43]], "aiobotocore": [[419, 0], [419, 11]], "all_dbs": [[639, 0], [639, 7]], "async_packages": [[230, 0], [230, 14]], "atlas": [[235, 0], [235, 5]], "celery": [[238, 0], [238, 6]], "cgroups": [[250, 0], [250, 7]], "dask": [[254, 0], [254, 4]], "deprecated_api": [[263, 0], [263, 14]], "devel": [[693, 0], [693, 5]], "devel_all": [[694, 0], [694, 9]], "devel_ci": [[700, 0], [700, 8]], "devel_hadoop": [[699, 0], [699, 12]], "devel_only": [[373, 0], [373, 10]], "doc": [[266, 0], [266, 3]], "doc_gen": [[288, 0], [288, 7]], "flask_appbuilder_oauth": [[291, 0], [291, 22]], "kerberos": [[296, 0], [296, 8]], "kubernetes": [[301, 0], [301, 10]], "ldap": [[313, 0], [313, 4]], "leveldb": [[317, 0], [317, 7]], "logger": [[54, 0], [54, 6]], "mypy_dependencies": [[346, 0], [346, 17]], "otel": [[318, 0], [318, 4]], "pandas": [[319, 0], [319, 6]], "password": [[320, 0], [320, 8]], "rabbitmq": [[324, 0], [324, 8]], "sentry": [[327, 0], [327, 6]], "statsd": [[331, 0], [331, 6]], "virtualenv": [[334, 0], [334, 10]], "webhdfs": [[337, 0], [337, 7]]}, "mod_var_occur": {"ADDITIONAL_EXTRAS_DEPENDENCIES": [["ADDITIONAL_EXTRAS_DEPENDENCIES", "items"]], "AIRFLOW_SOURCES_ROOT": [["PROVIDERS_ROOT", "AIRFLOW_SOURCES_ROOT"], ["AIRFLOW_SOURCES_ROOT", "joinpath", "open", "f"], ["test_suite", "test_loader", "discover", "str", "AIRFLOW_SOURCES_ROOT", "pattern"], ["os", "chdir", "str", "AIRFLOW_SOURCES_ROOT"], ["www_dir", "AIRFLOW_SOURCES_ROOT"], ["repo", "git", "Repo", "str", "AIRFLOW_SOURCES_ROOT"], ["provider_relative_path", "relpath", "provider_yaml_file", "str", "AIRFLOW_SOURCES_ROOT"]], "ALL_DB_PROVIDERS": [["ALL_DB_PROVIDERS"], ["add_provider_packages_to_extra_dependencies", "ALL_DB_PROVIDERS"]], "ALL_PROVIDERS": [["join", "get_provider_package_name_from_package_id", "package", "package", "ALL_PROVIDERS", "package", "excluded_providers"], ["ALL_PROVIDERS"], ["add_provider_packages_to_extra_dependencies", "ALL_PROVIDERS"], ["add_provider_packages_to_extra_dependencies", "ALL_PROVIDERS"], ["add_provider_packages_to_extra_dependencies", "ALL_PROVIDERS"]], "CORE_EXTRAS_DEPENDENCIES": [["EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "deepcopy", "CORE_EXTRAS_DEPENDENCIES"]], "CROSS_PROVIDERS_DEPS": [], "CURRENT_PYTHON_VERSION": [["key", "value", "key", "value", "dependencies", "items", "CURRENT_PYTHON_VERSION", "value", "skip_python_version_check"]], "DEPS": [["PROVIDER_DEPENDENCIES", "provider_name", "DEPS"], ["EXTRAS_DEPENDENCIES", "provider_name", "provider_dict", "DEPS"], ["PROVIDER_DEPENDENCIES", "provider", "DEPS"]], "EXTRAS_DEPENDENCIES": [["EXTRAS_DEPENDENCIES", "extra", "extend", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"], ["EXTRAS_DEPENDENCIES", "extra"], ["EXTRAS_DEPENDENCIES", "extra", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"], ["EXTRAS_DEPENDENCIES", "extra", "extend", "get_provider_package_name_from_package_id", "package_name", "package_name", "providers"], ["setup", "distclass", "AirflowDistribution", "extras_require", "EXTRAS_DEPENDENCIES", "cmdclass", "CleanCommand", "CompileAssets", "ListExtras", "Install", "Develop", "test_suite", "setup_kwargs"]], "EXTRAS_DEPRECATED_ALIASES": [["EXTRAS_DEPRECATED_ALIASES", "items"], ["EXTRAS_DEPRECATED_ALIASES", "items"]], "EXTRAS_DEPRECATED_ALIASES_IGNORED_FROM_REF_DOCS": [], "EXTRAS_DEPRECATED_ALIASES_NOT_PROVIDERS": [["alias", "EXTRAS_DEPRECATED_ALIASES_NOT_PROVIDERS"]], "INSTALL_PROVIDERS_FROM_SOURCES": [["os", "getenv", "INSTALL_PROVIDERS_FROM_SOURCES"], ["os", "getenv", "INSTALL_PROVIDERS_FROM_SOURCES"], ["os", "getenv", "INSTALL_PROVIDERS_FROM_SOURCES"]], "PACKAGES_EXCLUDED_FOR_ALL": [["devel_all", "remove_provider_limits", "package", "package", "devel_all", "is_package_excluded", "package", "package", "exclusion_list", "PACKAGES_EXCLUDED_FOR_ALL"]], "PREINSTALLED_PROVIDERS": [["self", "install_requires", "extend", "get_provider_package_name_from_package_id", "package_id", "package_id", "PREINSTALLED_PROVIDERS"]], "PROVIDERS_ROOT": [], "PROVIDER_DEPENDENCIES": [["provider_name", "PROVIDER_DEPENDENCIES"], ["PROVIDER_DEPENDENCIES", "provider_name", "DEPS"], ["PROVIDER_DEPENDENCIES", "items"], ["ALL_PROVIDERS", "list", "PROVIDER_DEPENDENCIES", "keys"], ["provider", "PROVIDER_DEPENDENCIES"], ["PROVIDER_DEPENDENCIES", "provider", "DEPS"]], "PY39": [], "_all_dependencies": [["_all_dependencies_without_airflow_providers", "list", "filter", "k", "k", "_all_dependencies"]], "_all_dependencies_without_airflow_providers": [["EXTRAS_DEPENDENCIES", "_all_dependencies_without_airflow_providers"], ["devel_all", "get_unique_dependency_list", "_all_dependencies_without_airflow_providers", "doc", "doc_gen", "devel", "devel_hadoop"]], "aiobotocore": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"], ["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "all_dbs": [["EXTRAS_DEPENDENCIES", "all_dbs"]], "async_packages": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "atlas": [["ADDITIONAL_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "atlas", "webhdfs"]], "celery": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "cgroups": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"], ["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "dask": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "deprecated_api": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "devel": [["EXTRAS_DEPENDENCIES", "devel"]], "devel_all": [["devel_ci", "devel_all"], ["EXTRAS_DEPENDENCIES", "devel_all"]], "devel_ci": [["EXTRAS_DEPENDENCIES", "devel_ci"]], "devel_hadoop": [["EXTRAS_DEPENDENCIES", "devel_hadoop"]], "devel_only": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"]], "doc": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"], ["devel_all", "get_unique_dependency_list", "_all_dependencies_without_airflow_providers", "doc", "doc_gen", "devel", "devel_hadoop"], ["EXTRAS_DEPENDENCIES", "doc"]], "doc_gen": [["devel_all", "get_unique_dependency_list", "_all_dependencies_without_airflow_providers", "doc", "doc_gen", "devel", "devel_hadoop"], ["EXTRAS_DEPENDENCIES", "doc_gen"]], "flask_appbuilder_oauth": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "kerberos": [["devel_hadoop", "get_unique_dependency_list", "devel", "get_provider_dependencies", "get_provider_dependencies", "get_provider_dependencies", "get_provider_dependencies", "get_provider_dependencies", "kerberos", "get_provider_dependencies", "webhdfs"], ["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "kubernetes": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"], ["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "ldap": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "leveldb": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "logger": [["logger", "warning", "file", "e"], ["logger", "warning"], ["logger", "warning"], ["logger", "warning"]], "mypy_dependencies": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"]], "otel": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "pandas": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"], ["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "password": [["devel", "get_unique_dependency_list", "aiobotocore", "cgroups", "devel_only", "doc", "kubernetes", "mypy_dependencies", "get_provider_dependencies", "pandas", "password"], ["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "rabbitmq": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "sentry": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "statsd": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "virtualenv": [["CORE_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "aiobotocore", "async_packages", "celery", "cgroups", "kubernetes", "dask", "deprecated_api", "flask_appbuilder_oauth", "flask_appbuilder_oauth", "kerberos", "ldap", "leveldb", "otel", "pandas", "password", "rabbitmq", "sentry", "statsd", "virtualenv"]], "webhdfs": [["devel_hadoop", "get_unique_dependency_list", "devel", "get_provider_dependencies", "get_provider_dependencies", "get_provider_dependencies", "get_provider_dependencies", "get_provider_dependencies", "kerberos", "get_provider_dependencies", "webhdfs"], ["ADDITIONAL_EXTRAS_DEPENDENCIES", "builtins", "dict", "builtins", "str", "builtins", "list", "builtins", "str", "atlas", "webhdfs"]]}, "no_types_annot": {"D": 58, "I": 0, "U": 72}, "session_id": "1yDAxQN1iY8Rsl0SMT-ZVxHSYSVV1vLIbI6gMM-cIec", "set": null, "tc": [false, null], "type_annot_cove": 0.45, "typed_seq": "", "untyped_seq": "", "variables": {"ADDITIONAL_EXTRAS_DEPENDENCIES": "builtins.dict[builtins.str, builtins.list[builtins.str]]", "AIRFLOW_SOURCES_ROOT": "", "ALL_DB_PROVIDERS": "", "ALL_PROVIDERS": "", "CORE_EXTRAS_DEPENDENCIES": "", "CROSS_PROVIDERS_DEPS": "", "CURRENT_PYTHON_VERSION": "", "DEPS": "", "EXTRAS_DEPENDENCIES": "", "EXTRAS_DEPRECATED_ALIASES": "builtins.dict[builtins.str, builtins.str]", "EXTRAS_DEPRECATED_ALIASES_IGNORED_FROM_REF_DOCS": "builtins.list[builtins.str]", "EXTRAS_DEPRECATED_ALIASES_NOT_PROVIDERS": "builtins.list[builtins.str]", "INSTALL_PROVIDERS_FROM_SOURCES": "", "PACKAGES_EXCLUDED_FOR_ALL": "builtins.list[builtins.str]", "PREINSTALLED_PROVIDERS": "", "PROVIDERS_ROOT": "", "PROVIDER_DEPENDENCIES": "", "PY39": "", "_all_dependencies": "", "_all_dependencies_without_airflow_providers": "", "aiobotocore": "", "all_dbs": "", "async_packages": "", "atlas": "", "celery": "", "cgroups": "", "dask": "", "deprecated_api": "", "devel": "", "devel_all": "", "devel_ci": "", "devel_hadoop": "", "devel_only": "", "doc": "", "doc_gen": "", "flask_appbuilder_oauth": "", "kerberos": "", "kubernetes": "", "ldap": "", "leveldb": "", "logger": "", "mypy_dependencies": "", "otel": "", "pandas": "", "password": "", "rabbitmq": "", "sentry": "", "statsd": "", "virtualenv": "", "webhdfs": ""}, "variables_p": {"ADDITIONAL_EXTRAS_DEPENDENCIES": [["Dict[str, Union[Any, Any]]", 0.30000000000000004], ["Dict[str, str]", 0.2], ["Dict[Any, int]", 0.1], ["dict", 0.1], ["Dict[str, List[int]]", 0.1]], "AIRFLOW_SOURCES_ROOT": [["str", 0.726142737407184], ["pathlib.Path", 0.17929713864626248], ["Dict[str, str]", 0.09456012394655328]], "ALL_DB_PROVIDERS": [["int", 0.28092246280958166], ["list", 0.06762087549042094]], "ALL_PROVIDERS": [["List[str]", 0.4432875551993369], ["distutils.disDistribution", 0.09337282198593894], ["Dict[str, Union[Any, Any]]", 0.09081174707090106], ["Dict[int, List[int]]", 0.08730764581113644], ["dict", 0.0865578988504582]], "CORE_EXTRAS_DEPENDENCIES": [["Dict[str, str]", 0.5743657228845462], ["Dict[str, List[str]]", 0.12016307266249719], ["Dict[str, Union[Any, Any]]", 0.10529952801593224], ["str", 0.10443892537074433], ["dict", 0.09573275106628026]], "CROSS_PROVIDERS_DEPS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "CURRENT_PYTHON_VERSION": [["int", 0.3088581865039143], ["str", 0.20965152025147898], ["Tuple[str, str, str, str, str, str, str, str]", 0.11288907871514181], ["Tuple[Any, Any]", 0.09701866236430927], ["Dict[str, List[str]]", 0.09236644780778662], ["Dict[str, int]", 0.08928502117468937]], "DEPS": [["str", 0.3498938798561247], ["Dict[str, OrderedDict[str, Any]]", 0.21879221551256242], ["Dict[str, Any]", 0.15711628639752004], ["Dict[str, str]", 0.09781973751751649], ["Dict[str, Union[Any, bool, str]]", 0.09781973751751649], ["dict", 0.07855814319876002]], "EXTRAS_DEPENDENCIES": [["str", 0.4080440073154672], ["Dict[str, Any]", 0.10177785363001088], ["List[str]", 0.09930712468301908], ["int", 0.09669080330794194]], "EXTRAS_DEPRECATED_ALIASES": [["Dict[str, Any]", 0.9999999996347855], ["Dict[str, Type[Any]]", 1.3193668556114985e-10], ["Dict[Any, int]", 8.21375579456185e-11], ["str", 3.778508380837008e-11], ["Set[str]", 3.778508380837008e-11], ["Dict[Any, Union[int, str]]", 3.778508380837008e-11], ["Dict[Any, float]", 3.778508380837008e-11]], "EXTRAS_DEPRECATED_ALIASES_IGNORED_FROM_REF_DOCS": [["int", 0.5714405103266698], ["List[str]", 0.1205165275434363], ["str", 0.11138001089384503], ["List[Tuple[str, str]]", 0.10052445565250237], ["Optional[str]", 0.0961384955835467]], "EXTRAS_DEPRECATED_ALIASES_NOT_PROVIDERS": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "INSTALL_PROVIDERS_FROM_SOURCES": [["int", 0.6243080056383149], ["str", 0.19392157152616307], ["slice", 0.08920277685513707]], "PACKAGES_EXCLUDED_FOR_ALL": [["int", 0.2815060607809098], ["set", 0.08535738557988748]], "PREINSTALLED_PROVIDERS": [["int", 0.6044457223703461], ["str", 0.3955542776296539]], "PROVIDERS_ROOT": [["str", 0.9999999999999999]], "PROVIDER_DEPENDENCIES": [["Dict[str, int]", 0.329238377898801], ["Dict[str, List[str]]", 0.13176526074361883], ["str", 0.10731841376978626], ["KeysView[str]", 0.08734160000711964], ["Tuple[Any, Literal]", 0.08654489853933298], ["OrderedDict", 0.08294359917063636], ["Dict[str, str]", 0.08022137109591693]], "PY39": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "_all_dependencies": [["list", 0.5207259709937913], ["Tuple[Literal, Literal, Literal, Literal]", 0.09431754849088583], ["List[str]", 0.09336672237189113], ["tuple", 0.08727552085510251], ["List[int]", 0.08727552085510251]], "_all_dependencies_without_airflow_providers": [["int", 0.0965681828921589]], "aiobotocore": [["list", 0.4879641522345199], ["str", 0.21553132592105667], ["set", 0.09689106203413561]], "all_dbs": [["int", 0.30762150942722616], ["list", 0.20508100628481743], ["str", 0.10254050314240871], ["set", 0.10013765657182679], ["List[Dict[str, str]]", 0.09524069144478588], ["List[Dict[str, Any]]", 0.09524069144478588], ["float", 0.09413794168414917]], "async_packages": [["str", 0.4012794085735705], ["OrderedDict[str, Any]", 0.19289470757978192], ["DefaultDict[Any, dict]", 0.09750499328309106], ["Dict[str, str]", 0.09219614533569219], ["Set[str]", 0.08623928991397417]], "atlas": [["Dict[str, str]", 0.19885060635721502], ["int", 0.19105594650471144], ["Dict[str, List[str]]", 0.1240392568338768], ["OrderedDict[str, Any]", 0.1042518345008115], ["Dict[str, Union[Any, Any]]", 0.10096097194527198], ["dict", 0.09590378598860451], ["Dict[str, Union[Any, Any, Any, Any]]", 0.09411469595505098], ["str", 0.09082290191445772]], "celery": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "cgroups": [["list", 0.4879641522345199], ["str", 0.21553132592105667], ["set", 0.09689106203413561]], "dask": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "deprecated_api": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "devel": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "devel_all": [["bool", 0.19999999999999998], ["int", 0.19999999999999998], ["slice", 0.09999999999999999]], "devel_ci": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "devel_hadoop": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "devel_only": [["List[Dict[str, Any]]", 0.2088315992814689], ["list", 0.18714259900992725], ["dict", 0.09616740456354085]], "doc": [["list", 0.19580911019860237], ["List[Dict[str, Any]]", 0.09941478018755308], ["List[str]", 0.09274459153611339], ["dict", 0.09130532250969212], ["List[int]", 0.08831003336889279]], "doc_gen": [["List[Dict[str, Any]]", 0.19432615487792787], ["str", 0.11125668144414393], ["list", 0.09458489905360624], ["Type[List[Any]]", 0.09458489905360624], ["List[Tuple[Any, Any]]", 0.08692041989799658], ["set", 0.08689489489267517]], "flask_appbuilder_oauth": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "kerberos": [["Dict[str, Callable]", 0.11340674838509698], ["Dict[str, str]", 0.09763367007129352], ["str", 0.09250052537550259]], "kubernetes": [["list", 0.4879641522345199], ["str", 0.21553132592105667], ["set", 0.09689106203413561]], "ldap": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "leveldb": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "logger": [["logging.Logger", 1.0]], "mypy_dependencies": [["List[Dict[str, Any]]", 0.2088315992814689], ["list", 0.18714259900992725], ["dict", 0.09616740456354085]], "otel": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "pandas": [["list", 0.4879641522345199], ["str", 0.21553132592105667], ["set", 0.09689106203413561]], "password": [["str", 0.3893672040721481], ["List[int]", 0.13106668373937605], ["Generator[Any, None, None]", 0.09655669545616102], ["tuple", 0.09655669545616102], ["list", 0.09501700805806174], ["List[None]", 0.09437663624705153]], "rabbitmq": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "sentry": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "statsd": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "virtualenv": [["Dict[str, Union[Any, Any]]", 0.285163033813787], ["str", 0.2078364395097529], ["Dict[str, str]", 0.1994388172780085], ["OrderedDict[str, Any]", 0.11072126714937922], ["Dict[str, List[str]]", 0.10562982002846388], ["int", 0.09121062222060862]], "webhdfs": [["Dict[str, Callable]", 0.11340674838509698], ["Dict[str, str]", 0.09763367007129352], ["str", 0.09250052537550259]]}}}