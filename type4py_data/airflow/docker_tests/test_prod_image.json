{"error": null, "response": {"classes": [{"cls_lc": [[44, 0], [79, 36]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Checking the image without a command. It should return non-zero exit code.", "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [49, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_without_command", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCommands.test_without_command", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Checking 'airflow' command  It should return non-zero exit code.", "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [55, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_airflow_command", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCommands.test_airflow_command", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Checking 'airflow version' command  It should return zero exit code.", "long_descr": null, "ret": null}, "fn_lc": [[57, 4], [63, 29]], "fn_var_ln": {"output": [[59, 8], [59, 14]]}, "fn_var_occur": {"output": [["output", "run_command", "docker_image", "return_output", "True"]]}, "name": "test_airflow_version", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCommands.test_airflow_version", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.5990679101240749], ["pathlib.Path", 0.3155958422203816], ["Type[Path]", 0.08533624765554362]]}}, {"docstring": {"func": "Checking 'python --version' command  It should return zero exit code.", "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [71, 36]], "fn_var_ln": {"output": [[67, 8], [67, 14]]}, "fn_var_occur": {"output": [["output", "run_command", "docker_image", "return_output", "True"]]}, "name": "test_python_version", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCommands.test_python_version", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.5990679101240749], ["pathlib.Path", 0.3155958422203816], ["Type[Path]", 0.08533624765554362]]}}, {"docstring": {"func": "Checking 'bash --version' command  It should return zero exit code.", "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [79, 36]], "fn_var_ln": {"output": [[75, 8], [75, 14]]}, "fn_var_occur": {"output": [["output", "run_command", "docker_image", "return_output", "True"]]}, "name": "test_bash_version", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCommands.test_bash_version", "ret_exprs": [], "ret_type": "", "variables": {"output": ""}, "variables_p": {"output": [["str", 0.5990679101240749], ["pathlib.Path", 0.3155958422203816], ["Type[Path]", 0.08533624765554362]]}}], "name": "TestCommands", "q_name": "TestCommands", "variables": {}, "variables_p": {}}, {"cls_lc": [[82, 0], [180, 64]], "cls_var_ln": {"PACKAGE_IMPORTS": [[111, 4], [111, 19]]}, "cls_var_occur": {"PACKAGE_IMPORTS": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [102, 9]], "fn_var_ln": {"lines": [[88, 12], [88, 17]], "output": [[92, 8], [92, 14]], "packages_installed": [[96, 8], [96, 26]], "packages_to_install": [[89, 8], [89, 27]], "providers": [[95, 8], [95, 17]]}, "fn_var_occur": {"lines": [["lines", "PREINSTALLED_PROVIDERS"], ["lines", "d", "strip", "d", "INSTALLED_PROVIDER_PATH", "read_text", "splitlines"], ["lines", "d", "d", "lines"], ["packages_to_install", "d", "replace", "d", "lines"]], "output": [["output", "run_bash_in_docker", "stderr", "subprocess", "DEVNULL", "return_output", "True"], ["providers", "json", "loads", "output"]], "packages_installed": [["packages_installed", "d", "d", "providers"], ["len", "packages_installed"], ["packages_to_install", "packages_installed", "INSTALLED_PROVIDER_PATH"]], "packages_to_install": [["packages_to_install", "d", "replace", "d", "lines"], ["len", "packages_to_install"], ["packages_to_install", "packages_installed", "INSTALLED_PROVIDER_PATH"]], "providers": [["providers", "json", "loads", "output"], ["packages_installed", "d", "d", "providers"]]}, "name": "test_required_providers_are_installed", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonPackages.test_required_providers_are_installed", "ret_exprs": [], "ret_type": "", "variables": {"lines": "", "output": "", "packages_installed": "", "packages_to_install": "", "providers": ""}, "variables_p": {"lines": [["list", 0.20835410397639878], ["str", 0.19631012159517225], ["Callable[[bytes], bytes]", 0.09379026094967782], ["bool", 0.09047374846585653], ["List[str]", 0.09047374846585653], ["float", 0.08502026429445846]], "output": [["List[str]", 0.284737088104417], ["set", 0.09706554630887157]], "packages_installed": [["list", 0.2919625244283772], ["str", 0.27389274351799564], ["List[str]", 0.23436546371176264]], "packages_to_install": [["str", 0.8061481178637767], ["Tuple[Union[float, str], Union[float, str], Union[float, str], Union[float, str], str]", 0.09692594106811167], ["List[str]", 0.09692594106811167]], "providers": [["Dict[str, Any]", 0.31137566141527695], ["Dict[str, Union[Any, Any, Any]]", 0.23101999528518413], ["Dict[str, Callable[[Any, Any], Any]]", 0.14501963785849326], ["DefaultDict[Any, dict]", 0.0824532516558567], ["Dict[str, int]", 0.08202100505501539], ["dict", 0.0741730953278249], ["List[Dict[str, Any]]", 0.07393735340234855]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [109, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_pip_dependencies_conflict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPythonPackages.test_pip_dependencies_conflict", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[179, 4], [180, 64]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_check_dependencies_imports", "params": {"import_names": "", "package_name": "", "self": ""}, "params_descr": {"import_names": "", "package_name": "", "self": ""}, "params_occur": {"import_names": [["run_python_in_docker", "join", "import_names"]], "package_name": [], "self": []}, "params_p": {"args": [], "import_names": [["str", 0.8899123690245488], ["pathlib.Path", 0.11008763097545109]], "kwargs": [], "package_name": [["str", 0.7142170440006006], ["int", 0.20406201257160017], ["bool", 0.08172094342779927]], "self": []}, "q_name": "TestPythonPackages.test_check_dependencies_imports", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestPythonPackages", "q_name": "TestPythonPackages", "variables": {"PACKAGE_IMPORTS": ""}, "variables_p": {"PACKAGE_IMPORTS": [["str", 0.5999999999999999], ["Dict[str, Any]", 0.09999999999999998], ["Tuple[str, str]", 0.09999999999999998]]}}, {"cls_lc": [[183, 0], [223, 13]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[184, 4], [198, 9]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_execute_airflow_as_root", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExecuteAsRoot.test_execute_airflow_as_root", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[200, 4], [223, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_run_custom_python_packages_as_root", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestExecuteAsRoot.test_run_custom_python_packages_as_root", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestExecuteAsRoot", "q_name": "TestExecuteAsRoot", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["__future__", "annotations", "json", "os", "subprocess", "tempfile", "importlib", "util", "find_spec", "pathlib", "Path", "pytest", "docker_tests", "command_utils", "run_command", "docker_tests", "constants", "SOURCE_ROOT", "docker_tests", "docker_tests_utils", "display_dependency_conflict_message", "docker_image", "run_bash_in_docker", "run_python_in_docker", "setup", "PREINSTALLED_PROVIDERS"], "mod_var_ln": {"INSTALLED_PROVIDER_PATH": [[41, 0], [41, 23]]}, "mod_var_occur": {"INSTALLED_PROVIDER_PATH": [["lines", "d", "strip", "d", "INSTALLED_PROVIDER_PATH", "read_text", "splitlines"], ["packages_to_install", "packages_installed", "INSTALLED_PROVIDER_PATH"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 22}, "session_id": "QrmgXU2Wk40x0Mkq0ZHFDDvLfJtoZk67UStBECVgUHI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"INSTALLED_PROVIDER_PATH": ""}, "variables_p": {"INSTALLED_PROVIDER_PATH": [["Optional[str]", 0.5092555377836749], ["str", 0.24669686686424047], ["pathlib.Path", 0.15368687800556138], ["List[str]", 0.09036071734652318]]}}}