{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 0], [36, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_if_cache_exists", "params": {"param_name": "builtins.str"}, "params_descr": {"param_name": ""}, "params_occur": {"param_name": [["Path", "BUILD_CACHE_DIR", "param_name", "exists"]]}, "params_p": {"args": [], "kwargs": [], "param_name": [["str", 0.8231578368604318], ["Optional[str]", 0.0956966603717814], ["pathlib.Path", 0.08114550276778712]]}, "q_name": "check_if_cache_exists", "ret_exprs": ["return (Path(BUILD_CACHE_DIR) / f\".{param_name}\").exists()"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.4975612336901971], ["Optional[pathlib.Path]", 0.10105240749491257]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[39, 0], [44, 19]], "fn_var_ln": {"cache_exists": [[40, 4], [40, 16]]}, "fn_var_occur": {"cache_exists": [["cache_exists", "check_if_cache_exists", "param_name"]]}, "name": "read_from_cache_file", "params": {"param_name": "builtins.str"}, "params_descr": {"param_name": ""}, "params_occur": {"param_name": [["cache_exists", "check_if_cache_exists", "param_name"], ["Path", "BUILD_CACHE_DIR", "param_name", "read_text", "strip"]]}, "params_p": {"args": [], "kwargs": [], "param_name": [["str", 0.5941447361731556], ["Callable[[str], None]", 0.1116337339224586], ["pathlib.Path", 0.09914077326204813], ["Union[str, pathlib.Path]", 0.09393233172492244]]}, "q_name": "read_from_cache_file", "ret_exprs": ["return (Path(BUILD_CACHE_DIR) / f\".{param_name}\").read_text().strip()", "return None"], "ret_type": "str | None", "ret_type_p": [["pathlib.Path", 0.7044114674155452], ["str", 0.10278700611036026]], "variables": {"cache_exists": ""}, "variables_p": {"cache_exists": [["str", 0.6108036947306803], ["int", 0.18935387986475666]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 0], [48, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "touch_cache_file", "params": {"param_name": "builtins.str", "root_dir": "pathlib.Path"}, "params_descr": {"param_name": "", "root_dir": ""}, "params_occur": {"param_name": [["Path", "root_dir", "param_name", "touch"]], "root_dir": [["Path", "root_dir", "param_name", "touch"]]}, "params_p": {"args": [], "kwargs": [], "param_name": [["str", 0.88616650028964], ["pathlib.Path", 0.11383349971035998]], "root_dir": [["str", 0.88616650028964], ["pathlib.Path", 0.11383349971035998]]}, "q_name": "touch_cache_file", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Writs value to cache. If asked it can also check if the value is allowed for the parameter. and exit", "long_descr": "in case the value is not allowed for that parameter instead of writing it.", "ret": null}, "fn_lc": [[51, 0], [71, 19]], "fn_var_ln": {"allowed": [[62, 8], [62, 15]], "allowed_values": [[62, 17], [62, 31]], "cache_path": [[64, 8], [64, 18]]}, "fn_var_occur": {"allowed": [["allowed", "False"], ["allowed", "allowed_values", "check_if_values_allowed", "param_name", "param_value"], ["allowed", "check_allowed_values"]], "allowed_values": [["allowed_values", "None"], ["allowed", "allowed_values", "check_if_values_allowed", "param_name", "param_value"], ["get_console", "print", "param_name", "allowed_values"]], "cache_path": [["cache_path", "Path", "BUILD_CACHE_DIR", "param_name"], ["cache_path", "parent", "mkdir", "parents", "True", "exist_ok", "True"], ["cache_path", "write_text", "param_value"]]}, "name": "write_to_cache_file", "params": {"check_allowed_values": "builtins.bool", "param_name": "builtins.str", "param_value": "builtins.str"}, "params_descr": {"check_allowed_values": "whether to fail if the parameter value is not allowed for that name.", "param_name": "name of the parameter", "param_value": "new value for the parameter"}, "params_occur": {"check_allowed_values": [["allowed", "check_allowed_values"]], "param_name": [["allowed", "allowed_values", "check_if_values_allowed", "param_name", "param_value"], ["cache_path", "Path", "BUILD_CACHE_DIR", "param_name"], ["get_console", "print", "param_value", "param_name"], ["get_console", "print", "param_name", "allowed_values"]], "param_value": [["allowed", "allowed_values", "check_if_values_allowed", "param_name", "param_value"], ["cache_path", "write_text", "param_value"], ["get_console", "print", "param_value", "param_name"]]}, "params_p": {"args": [], "check_allowed_values": [["str", 0.9999999999999999]], "kwargs": [], "param_name": [["str", 0.39153968285200536], ["Dict[str, Any]", 0.20240723034909888], ["bool", 0.20240723034909888], ["BinaryIO", 0.10120361517454944]], "param_value": [["str", 0.7111053650891693], ["Optional[Union[int, Any]]", 0.1925964232738872]]}, "q_name": "write_to_cache_file", "ret_exprs": [], "ret_type": "None", "variables": {"allowed": "", "allowed_values": "", "cache_path": ""}, "variables_p": {"allowed": [["Dict[str, bool]", 0.1860087175947402], ["Dict[str, List[str]]", 0.12622762183174013], ["Union[List[str], bool]", 0.11823459831760036], ["str", 0.10565159745895951], ["List[bool]", 0.10427142972419857], ["Tuple[str]", 0.09121702645439791], ["List[str]", 0.09059710542690154], ["bool", 0.09014088777660315], ["int", 0.08765101541485872]], "allowed_values": [["Optional[List[str]]", 0.19092915304527008], ["Optional[bool]", 0.10751842892885233], ["str", 0.10712332382929869], ["Optional[List[dict]]", 0.09546457652263504], ["Optional[str]", 0.09546457652263504], ["int", 0.09546457652263504]], "cache_path": [["str", 0.5944868146880778], ["pathlib.Path", 0.21067585304411013]]}}, {"docstring": {"func": "Reads and validates value from cache is present and whether its value is valid according to current rules.", "long_descr": "It could happen that the allowed values have been modified since the last time cached value was set,\nso this check is crucial to check outdated values.\nIf the value is not set or in case the cached value stored is not currently allowed,\nthe default value is stored in the cache and returned instead.", "ret": "Tuple informing whether the value was read from cache and the parameter value that is\nset in the cache after this method returns."}, "fn_lc": [[74, 0], [99, 38]], "fn_var_ln": {"allowed": [[93, 8], [93, 15]], "allowed_values": [[93, 17], [93, 31]], "cached_value": [[98, 12], [98, 24]], "is_from_cache": [[95, 12], [95, 25]]}, "fn_var_occur": {"allowed": [["allowed", "allowed_values", "check_if_values_allowed", "param_name", "cached_value"]], "allowed_values": [["allowed", "allowed_values", "check_if_values_allowed", "param_name", "cached_value"]], "cached_value": [["cached_value", "read_from_cache_file", "param_name"], ["cached_value", "None"], ["cached_value", "default_param_value"], ["allowed", "allowed_values", "check_if_values_allowed", "param_name", "cached_value"], ["cached_value", "default_param_value"], ["is_from_cache", "cached_value"]], "is_from_cache": [["is_from_cache", "False"], ["is_from_cache", "True"], ["is_from_cache", "cached_value"]]}, "name": "read_and_validate_value_from_cache", "params": {"default_param_value": "builtins.str", "param_name": "builtins.str"}, "params_descr": {"default_param_value": "default value of the parameter", "param_name": "name of the parameter"}, "params_occur": {"default_param_value": [["write_to_cache_file", "param_name", "default_param_value"], ["cached_value", "default_param_value"], ["write_to_cache_file", "param_name", "default_param_value"], ["cached_value", "default_param_value"]], "param_name": [["cached_value", "read_from_cache_file", "param_name"], ["write_to_cache_file", "param_name", "default_param_value"], ["allowed", "allowed_values", "check_if_values_allowed", "param_name", "cached_value"], ["write_to_cache_file", "param_name", "default_param_value"]]}, "params_p": {"args": [], "default_param_value": [["Optional[Dict[str, Any]]", 0.11881452813137651], ["Optional[bool]", 0.09673833133272616], ["Optional[int]", 0.09455177147842726], ["float", 0.08832499651618442]], "kwargs": [], "param_name": [["str", 0.9081553252703098], ["List[str]", 0.09184467472969018]]}, "q_name": "read_and_validate_value_from_cache", "ret_exprs": ["return is_from_cache, cached_value"], "ret_type": "builtins.tuple[builtins.bool, str | None]", "ret_type_p": [["bool", 0.6235760779307044]], "variables": {"allowed": "", "allowed_values": "", "cached_value": "", "is_from_cache": ""}, "variables_p": {"allowed": [["List[str]", 0.6872895110865007], ["Tuple[Any, Any, Any, Any, Any, Any, Any, Any]", 0.184559363458491], ["bool", 0.12815112545500842]], "allowed_values": [["bool", 0.2722931178962209], ["int", 0.2440886353657133], ["Dict[Tuple[str, str], int]", 0.11265773731004425], ["str", 0.09483408275010206], ["Dict[str, List[str]]", 0.0941281793937048], ["List[Tuple[str, str]]", 0.0842962728999885]], "cached_value": [["str", 0.29177959203153225], ["List[str]", 0.10012287551109501], ["list", 0.09398777084781201]], "is_from_cache": [["bool", 0.5832580300138568], ["dict", 0.15452008769765807], ["Set[str]", 0.10423626900400387]]}}, {"docstring": {"func": "Checks if parameter value is allowed by looking at global constants.", "long_descr": null, "ret": null}, "fn_lc": [[102, 0], [108, 34]], "fn_var_ln": {"allowed": [[107, 8], [107, 15]], "allowed_values": [[105, 4], [105, 18]]}, "fn_var_occur": {"allowed": [["allowed", "False"], ["allowed", "True"], ["allowed", "allowed_values"]], "allowed_values": [["allowed_values", "getattr", "global_constants", "param_name", "upper"], ["param_value", "allowed_values"], ["allowed", "allowed_values"]]}, "name": "check_if_values_allowed", "params": {"param_name": "builtins.str", "param_value": "builtins.str"}, "params_descr": {"param_name": "", "param_value": ""}, "params_occur": {"param_name": [["allowed_values", "getattr", "global_constants", "param_name", "upper"]], "param_value": [["param_value", "allowed_values"]]}, "params_p": {"args": [], "kwargs": [], "param_name": [["str", 0.6286964227155011]], "param_value": [["str", 0.6427396014995546], ["int", 0.2695742407715165], ["Sequence[Dict[str, str]]", 0.08768615772892883]]}, "q_name": "check_if_values_allowed", "ret_exprs": ["return allowed, allowed_values"], "ret_type": "builtins.tuple[builtins.bool, builtins.list[typing.Any]]", "ret_type_p": [["str", 0.25417785730889675], ["dict", 0.0893285064676479]], "variables": {"allowed": "", "allowed_values": ""}, "variables_p": {"allowed": [["list", 0.3056142302487092], ["List[str]", 0.21148144132376076], ["List[Union[Any, str]]", 0.11394636675736321], ["Dict[str, Union[Any, Any]]", 0.09881805262175453], ["int", 0.0921613270450421], ["Dict[str, List[str]]", 0.09170376485025128], ["List[Pattern[Any]]", 0.08627481715311884]], "allowed_values": [["Dict[str, str]", 0.19383286236864566], ["List[Union[Any, Any, Any]]", 0.11084447290273963], ["bool", 0.10176217266884857], ["frozenset[Union[bytes, str]]", 0.09542643464195671], ["Dict[str, List[str]]", 0.09497756649913437], ["List[Union[Any, Any, Any, Any]]", 0.0880886345236707], ["str", 0.08764101362955405], ["list", 0.08757721689888101]]}}, {"docstring": {"func": "Deletes value from cache. Returns true if the delete operation happened (i.e. cache was present).", "long_descr": null, "ret": null}, "fn_lc": [[111, 0], [117, 18]], "fn_var_ln": {"deleted": [[116, 8], [116, 15]]}, "fn_var_occur": {"deleted": [["deleted", "False"], ["deleted", "True"]]}, "name": "delete_cache", "params": {"param_name": "builtins.str"}, "params_descr": {"param_name": ""}, "params_occur": {"param_name": [["check_if_cache_exists", "param_name"], ["Path", "BUILD_CACHE_DIR", "param_name", "unlink"]]}, "params_p": {"args": [], "kwargs": [], "param_name": [["str", 0.8035590163319252], ["bool", 0.10280357164329398], ["Callable[[str], None]", 0.09363741202478061]]}, "q_name": "delete_cache", "ret_exprs": ["return deleted"], "ret_type": "builtins.bool", "ret_type_p": [["str", 0.20380439455703941], ["bool", 0.10436020661986231], ["Dict[str, Any]", 0.10262208955677389], ["int", 0.09996139078502314], ["Tuple[int, str]", 0.0913388601552854], ["float", 0.0867060382490333]], "variables": {"deleted": ""}, "variables_p": {"deleted": [["bool", 0.7934281784271258], ["List[bool]", 0.11830031506391678], ["Dict[str, Tuple[str, int, int]]", 0.08827150650895747]]}}], "imports": ["__future__", "annotations", "sys", "pathlib", "Path", "typing", "Any", "airflow_breeze", "global_constants", "airflow_breeze", "utils", "console", "get_console", "airflow_breeze", "utils", "path_utils", "BUILD_CACHE_DIR"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 18, "I": 0, "U": 12}, "session_id": "vORUDO2zt_V0h4my4MR9QVJH-N5hPeQcfzE0S9iGXJw", "set": null, "tc": [false, null], "type_annot_cove": 0.6, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}