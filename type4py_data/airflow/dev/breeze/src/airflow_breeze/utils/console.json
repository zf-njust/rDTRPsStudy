{"error": null, "response": {"classes": [{"cls_lc": [[63, 0], [67, 19]], "cls_var_ln": {"ERROR": [[67, 4], [67, 9]], "INFO": [[65, 4], [65, 8]], "SUCCESS": [[64, 4], [64, 11]], "WARNING": [[66, 4], [66, 11]]}, "cls_var_occur": {"ERROR": [], "INFO": [], "SUCCESS": [], "WARNING": []}, "funcs": [], "name": "MessageType", "q_name": "MessageType", "variables": {"ERROR": "", "INFO": "", "SUCCESS": "", "WARNING": ""}, "variables_p": {"ERROR": [["str", 0.3], ["int", 0.19999999999999998], ["Dict[str, str]", 0.09999999999999999], ["Optional[List[str]]", 0.09999999999999999]], "INFO": [["List[List[str]]", 0.7999999999999999], ["str", 0.09999999999999999], ["staticmethod", 0.09999999999999999]], "SUCCESS": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "WARNING": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"cls_lc": [[76, 0], [86, 45]], "cls_var_ln": {"file_name": [[78, 4], [78, 13]], "title": [[77, 4], [77, 9]]}, "cls_var_occur": {"file_name": [], "title": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[81, 4], [82, 42]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "file", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["open", "self", "file_name"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Output.file", "ret_exprs": ["return open(self.file_name, \"a+t\")"], "ret_type": "typing.TextIO", "ret_type_p": [["str", 0.19740439785092978], ["Dict[str, str]", 0.15227198098614425], ["Optional[str]", 0.08623917244240795], ["Dict[str, Any]", 0.0729112473643892]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[85, 4], [86, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "escaped_title", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "title", "replace"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Output.escaped_title", "ret_exprs": ["return self.title.replace(\"[\", \"[\")"], "ret_type": "builtins.str", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}], "name": "Output", "q_name": "Output", "variables": {"file_name": "builtins.str", "title": "builtins.str"}, "variables_p": {"file_name": [["str", 0.7999999999999999], ["Optional[str]", 0.09999999999999999]], "title": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["raiden.utils.WithdrawAmount", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[35, 0], [60, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_theme", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "get_theme", "ret_exprs": ["return Theme( { \"success\": \"bold italic\", \"info\": \"bold\", \"warning\": \"italic\", \"error\": \"italic underline\", })", "return Theme( { \"success\": \"green\", \"info\": \"bright_blue\", \"warning\": \"bright_yellow\", \"error\": \"red\", })"], "ret_type": "rich.theme.Theme", "ret_type_p": [["Callable", 0.14802005170157692], ["List[dict]", 0.09514129637059536], ["bytes", 0.07380321192573834], ["int", 0.07254508416502399]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[70, 0], [73, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "message_type_from_return_code", "params": {"return_code": "builtins.int"}, "params_descr": {"return_code": ""}, "params_occur": {"return_code": []}, "params_p": {"args": [], "kwargs": [], "return_code": [["str", 0.6945841686093839], ["list", 0.1203010158855667], ["bool", 0.10229641429481377], ["Tuple[str]", 0.08281840121023558]]}, "q_name": "message_type_from_return_code", "ret_exprs": ["return MessageType.SUCCESS", "return MessageType.ERROR"], "ret_type": "MessageType", "ret_type_p": [], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[90, 0], [98, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_console", "params": {"output": "Output | None"}, "params_descr": {"output": ""}, "params_occur": {"output": [["Console", "force_terminal", "True", "color_system", "width", "recording_width", "int", "recording_width", "file", "output", "file", "output", "None", "theme", "get_theme", "record", "True", "recording_file", "False"]]}, "params_p": {"args": [], "kwargs": [], "output": [["int", 0.29987520197560474], ["str", 0.19681050179406578], ["List[str]", 0.10892695120135984], ["bool", 0.10001636818791383], ["bytes", 0.09954685849624269]]}, "q_name": "get_console", "ret_exprs": ["return Console( force_terminal=True, color_system=\"standard\", width=202 if not recording_width else int(recording_width), file=output.file if output else None, theme=get_theme(), record=True if recording_file else False,)"], "ret_type": "rich.console.Console", "ret_type_p": [["str", 0.45880431098290025], ["bool", 0.3589984290652798]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[102, 0], [111, 5]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_stderr_console", "params": {"output": "Output | None"}, "params_descr": {"output": ""}, "params_occur": {"output": [["Console", "force_terminal", "True", "color_system", "stderr", "True", "file", "output", "file", "output", "None", "width", "recording_width", "int", "recording_width", "theme", "get_theme", "record", "True", "recording_file", "False"]]}, "params_p": {"args": [], "kwargs": [], "output": [["Iterable[str]", 0.2089841670747124], ["bytes", 0.09739327860365343]]}, "q_name": "get_stderr_console", "ret_exprs": ["return Console( force_terminal=True, color_system=\"standard\", stderr=True, file=output.file if output else None, width=202 if not recording_width else int(recording_width), theme=get_theme(), record=True if recording_file else False,)"], "ret_type": "rich.console.Console", "ret_type_p": [["str", 0.45880431098290025], ["bool", 0.3589984290652798]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 0], [115, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "console_print", "params": {"message": ""}, "params_descr": {"message": ""}, "params_occur": {"message": [["get_console", "print", "message"]]}, "params_p": {"args": [], "kwargs": [], "message": [["int", 0.6228386014662626], ["List[Tuple[int, int]]", 0.1063468345484616]]}, "q_name": "console_print", "ret_exprs": ["return get_console().print(*message)"], "ret_type": "None", "ret_type_p": [["int", 0.30507176519492285], ["str", 0.30155569145666233], ["bool", 0.09789640643310017], ["Optional[BaseException]", 0.09789640643310017], ["Union[str, Tuple[str, ...]]", 0.09789640643310017]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "os", "enum", "Enum", "functools", "lru_cache", "typing", "NamedTuple", "TextIO", "rich", "console", "Console", "rich", "theme", "Theme", "airflow_breeze", "utils", "cache", "read_from_cache_file"], "mod_var_ln": {"recording_file": [[32, 0], [32, 14]], "recording_width": [[31, 0], [31, 15]]}, "mod_var_occur": {"recording_file": [["Console", "force_terminal", "True", "color_system", "width", "recording_width", "int", "recording_width", "file", "output", "file", "output", "None", "theme", "get_theme", "record", "True", "recording_file", "False"], ["Console", "force_terminal", "True", "color_system", "stderr", "True", "file", "output", "file", "output", "None", "width", "recording_width", "int", "recording_width", "theme", "get_theme", "record", "True", "recording_file", "False"]], "recording_width": [["Console", "force_terminal", "True", "color_system", "width", "recording_width", "int", "recording_width", "file", "output", "file", "output", "None", "theme", "get_theme", "record", "True", "recording_file", "False"], ["Console", "force_terminal", "True", "color_system", "stderr", "True", "file", "output", "file", "output", "None", "width", "recording_width", "int", "recording_width", "theme", "get_theme", "record", "True", "recording_file", "False"]]}, "no_types_annot": {"D": 12, "I": 0, "U": 7}, "session_id": "h_XVv0J5Lz4__5uflGQu9mJoUl2DcmfdgXDtMO0sL38", "set": null, "tc": [false, null], "type_annot_cove": 0.63, "typed_seq": "", "untyped_seq": "", "variables": {"recording_file": "", "recording_width": ""}, "variables_p": {"recording_file": [["str", 0.23420754023255597], ["int", 0.19020366573197414], ["float", 0.19011001810460743], ["bool", 0.10600665489051973]], "recording_width": [["int", 0.5413066683784118], ["dict", 0.09389171779519455]]}}}