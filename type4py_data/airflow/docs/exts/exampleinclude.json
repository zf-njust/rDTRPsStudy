{"error": null, "response": {"classes": [{"cls_lc": [[48, 0], [49, 30]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "ExampleHeader", "q_name": "ExampleHeader", "variables": {}, "variables_p": {}}, {"cls_lc": [[52, 0], [131, 74]], "cls_var_ln": {"final_argument_whitespace": [[64, 4], [64, 29]], "has_content": [[61, 4], [61, 15]], "option_spec": [[65, 4], [65, 15]], "optional_arguments": [[63, 4], [63, 22]], "required_arguments": [[62, 4], [62, 22]]}, "cls_var_occur": {"final_argument_whitespace": [], "has_content": [], "option_spec": [], "optional_arguments": [], "required_arguments": []}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [131, 74]], "fn_var_ln": {"_": [[93, 12], [93, 13]], "a_path": [[93, 15], [93, 21]], "container_node": [[124, 12], [124, 26]], "document": [[88, 8], [88, 16]], "extra_args": [[114, 12], [114, 22]], "filename": [[98, 26], [98, 34]], "hl_lines": [[116, 16], [116, 24]], "lines": [[102, 18], [102, 23]], "location": [[97, 12], [97, 20]], "reader": [[101, 12], [101, 18]], "rel_filename": [[98, 12], [98, 24]], "retnode": [[127, 12], [127, 19]], "text": [[102, 12], [102, 16]]}, "fn_var_occur": {"_": [["_", "a_path", "self", "env", "relfn2path", "self", "options"]], "a_path": [["_", "a_path", "self", "env", "relfn2path", "self", "options"], ["self", "options", "a_path"]], "container_node": [["container_node", "nodes", "compound", "classes"], ["container_node", "ExampleHeader", "filename", "filename"], ["container_node", "retnode"], ["retnode", "container_node"]], "document": [["document", "self", "state", "document"], ["document", "settings", "file_insertion_enabled"], ["document", "reporter", "warning", "line", "self", "lineno"], ["document", "reporter", "warning", "str", "exc", "line", "self", "lineno"]], "extra_args": [["extra_args", "retnode"], ["extra_args", "x", "x", "hl_lines", "x", "lines"], ["extra_args", "reader", "lineno_start"]], "filename": [["rel_filename", "filename", "self", "env", "relfn2path", "self", "arguments"], ["reader", "LiteralIncludeReader", "filename", "self", "options", "self", "config"], ["retnode", "nodes", "literal_block", "text", "text", "source", "filename"], ["container_node", "ExampleHeader", "filename", "filename"]], "hl_lines": [["hl_lines", "parselinenos", "self", "options", "lines"], ["any", "i", "lines", "i", "hl_lines"], ["extra_args", "x", "x", "hl_lines", "x", "lines"]], "lines": [["text", "lines", "reader", "read", "location", "location"], ["hl_lines", "parselinenos", "self", "options", "lines"], ["any", "i", "lines", "i", "hl_lines"], ["logger", "warning", "lines", "self", "options"], ["extra_args", "x", "x", "hl_lines", "x", "lines"]], "location": [["location", "self", "state_machine", "get_source_and_line", "self", "lineno"], ["text", "lines", "reader", "read", "location", "location"]], "reader": [["reader", "LiteralIncludeReader", "filename", "self", "options", "self", "config"], ["text", "lines", "reader", "read", "location", "location"], ["extra_args", "reader", "lineno_start"]], "rel_filename": [["rel_filename", "filename", "self", "env", "relfn2path", "self", "arguments"], ["self", "env", "note_dependency", "rel_filename"]], "retnode": [["retnode", "nodes", "literal_block", "text", "text", "source", "filename"], ["set_source_info", "self", "retnode"], ["retnode", "self", "options"], ["retnode", "self", "options", "self", "options", "self", "options"], ["retnode", "self", "options", "get"], ["extra_args", "retnode"], ["container_node", "retnode"], ["retnode", "container_node"]], "text": [["text", "lines", "reader", "read", "location", "location"], ["retnode", "nodes", "literal_block", "text", "text", "source", "filename"]]}, "name": "run", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["document", "self", "state", "document"], ["document", "reporter", "warning", "line", "self", "lineno"], ["self", "options"], ["_", "a_path", "self", "env", "relfn2path", "self", "options"], ["self", "options", "a_path"], ["location", "self", "state_machine", "get_source_and_line", "self", "lineno"], ["rel_filename", "filename", "self", "env", "relfn2path", "self", "arguments"], ["self", "env", "note_dependency", "rel_filename"], ["reader", "LiteralIncludeReader", "filename", "self", "options", "self", "config"], ["set_source_info", "self", "retnode"], ["self", "options", "get"], ["self", "options"], ["retnode", "self", "options"], ["retnode", "self", "options", "self", "options", "self", "options"], ["retnode", "self", "options", "get"], ["self", "options"], ["hl_lines", "parselinenos", "self", "options", "lines"], ["logger", "warning", "lines", "self", "options"], ["document", "reporter", "warning", "str", "exc", "line", "self", "lineno"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ExampleInclude.run", "ret_exprs": ["return [document.reporter.warning(\"File insertion disabled\", line=self.lineno)]", "return [retnode]", "return [document.reporter.warning(str(exc), line=self.lineno)]"], "ret_type": "", "ret_type_p": [["str", 0.2106130913105601], ["bool", 0.11246206230265426], ["bytes", 0.08225250826639377]], "variables": {"_": "", "a_path": "", "container_node": "", "document": "", "extra_args": "", "filename": "", "hl_lines": "", "lines": "", "location": "", "reader": "", "rel_filename": "", "retnode": "", "text": ""}, "variables_p": {"_": [["str", 1.0]], "a_path": [["str", 0.7833451447284996], ["list", 0.09984291730379044]], "container_node": [["str", 0.259511449898306], ["ChainMap", 0.15843256154844002], ["dict", 0.10732909147781747], ["Dict[str, str]", 0.10494888938664994], ["Dict[str, Union[float, str]]", 0.09615265240357124]], "document": [["str", 0.5898337123972663], ["int", 0.4101662876027338]], "extra_args": [["list", 0.9200961338989284], ["Set[str]", 0.07990386610107175]], "filename": [["str", 0.9096040714067709], ["Optional[str]", 0.0903959285932289]], "hl_lines": [["str", 0.2194682905467512], ["int", 0.19063934970135427], ["Set[str]", 0.11030202139861785], ["Callable", 0.09963047943000193], ["List[Tuple[str, Any]]", 0.09630943663441127], ["Container[int]", 0.09592627471320594], ["set", 0.09392706782605222], ["list", 0.09379707974960529]], "lines": [["str", 0.2903559107224245], ["Tuple[Literal, Literal, Literal]", 0.09156837355805818]], "location": [["str", 0.6438528562950099], ["Dict[str, str]", 0.17691520978777606], ["Dict[Any, str]", 0.08983527573091629], ["list", 0.0893966581862978]], "reader": [], "rel_filename": [["str", 1.0000000000000002]], "retnode": [["str", 0.0899580790113088]], "text": [["str", 0.6906208710047126]]}}], "name": "ExampleInclude", "q_name": "ExampleInclude", "variables": {"final_argument_whitespace": "", "has_content": "", "option_spec": "", "optional_arguments": "", "required_arguments": ""}, "variables_p": {"final_argument_whitespace": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "has_content": [["str", 0.49999999999999994], ["bool", 0.39999999999999997], ["bytearray", 0.09999999999999999]], "option_spec": [["Type[List[Any]]", 0.1], ["Dict[str, Dict[str, int]]", 0.1], ["Dict[str, Type[bool]]", 0.1], ["Dict[str, Dict[str, str]]", 0.1], ["str", 0.1], ["dict", 0.1], ["Dict[str, dict]", 0.1]], "optional_arguments": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "required_arguments": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}], "funcs": [{"docstring": {"func": "Registers source code.", "long_descr": null, "ret": "True if the code is registered successfully, False otherwise"}, "fn_lc": [[134, 0], [179, 15]], "fn_var_ln": {"analyzer": [[151, 12], [151, 20]], "code": [[173, 8], [173, 12]], "code_tags": [[148, 4], [148, 13]], "entry": [[176, 8], [176, 13]], "tags": [[173, 14], [173, 18]], "tb": [[159, 12], [159, 14]]}, "fn_var_occur": {"analyzer": [["analyzer", "ModuleAnalyzer", "for_module", "modname"], ["isinstance", "analyzer", "code", "str"], ["code", "analyzer", "code", "decode", "analyzer", "encoding"], ["code", "analyzer", "code"], ["analyzer", "find_tags"], ["tags", "analyzer", "tags"]], "code": [["isinstance", "analyzer", "code", "str"], ["code", "analyzer", "code", "decode", "analyzer", "encoding"], ["code", "analyzer", "code"], ["code", "tags", "code_tags"], ["entry", "None", "entry", "code"], ["entry", "code", "tags"]], "code_tags": [["code_tags", "app", "emit_firstresult", "modname"], ["code_tags", "None"], ["code", "tags", "code_tags"]], "entry": [["entry", "env", "_viewcode_modules", "get", "modname", "None"], ["entry", "False"], ["entry", "None", "entry", "code"], ["entry", "code", "tags"], ["env", "_viewcode_modules", "modname", "entry"]], "tags": [["tags", "analyzer", "tags"], ["code", "tags", "code_tags"], ["entry", "code", "tags"]], "tb": [["tb", "traceback", "format_exc"], ["logger", "info", "tb"]]}, "name": "register_source", "params": {"app": "", "env": "", "modname": ""}, "params_descr": {"app": "application", "env": "environment of the plugin", "modname": "name of the module to load"}, "params_occur": {"app": [["code_tags", "app", "emit_firstresult", "modname"]], "env": [["entry", "env", "_viewcode_modules", "get", "modname", "None"], ["env", "_viewcode_modules", "modname", "False"], ["env", "_viewcode_modules", "modname", "entry"]], "modname": [["entry", "env", "_viewcode_modules", "get", "modname", "None"], ["print", "modname"], ["code_tags", "app", "emit_firstresult", "modname"], ["analyzer", "ModuleAnalyzer", "for_module", "modname"], ["logger", "info", "modname", "ex"], ["env", "_viewcode_modules", "modname", "False"], ["env", "_viewcode_modules", "modname", "entry"]]}, "params_p": {"app": [["str", 0.28509459108282065], ["saucerboutils.parsers.HtmlContentProvider", 0.09396138960839985]], "args": [], "env": [["dict", 0.19897795176313957], ["str", 0.10181740352748937]], "kwargs": [], "modname": [["dict", 0.176962436756726], ["str", 0.12540767995305757]]}, "q_name": "register_source", "ret_exprs": ["return False", "return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {"analyzer": "", "code": "", "code_tags": "", "entry": "", "tags": "", "tb": ""}, "variables_p": {"analyzer": [], "code": [["str", 0.5114706007839079], ["List[Tuple[str, str]]", 0.19881914165262618], ["Type[str]", 0.09807443401551222], ["Pattern[str]", 0.09641826229718224], ["Dict[Any, Dict[str, str]]", 0.0952175612507715]], "code_tags": [["Set[str]", 0.47195808413797], ["str", 0.2084984368329254]], "entry": [["dict", 0.19292308285081522], ["Dict[str, Union[float, str]]", 0.14773068949335766]], "tags": [["Dict[str, str]", 0.7976450838480953], ["Tuple[Any, Any, Any, Any]", 0.09919754995023702]], "tb": [["int", 0.793290590380241], ["str", 0.08530924644985921]]}}, {"docstring": {"func": "Creates documentation node for example include.", "long_descr": ":param env: environment of the documentation\n:param relative_path: path of the code\n:param show_button: whether to show \"view code\" button\n:return paragraph with the node", "ret": null}, "fn_lc": [[182, 0], [208, 20]], "fn_var_ln": {"header_classes": [[193, 4], [193, 18]], "pagename": [[191, 4], [191, 12]], "paragraph": [[196, 4], [196, 13]], "pending_ref": [[199, 8], [199, 19]]}, "fn_var_occur": {"header_classes": [["paragraph", "nodes", "paragraph", "relative_path", "classes", "header_classes"]], "pagename": [["pagename", "relative_path"], ["pending_ref", "viewcode_anchor", "reftarget", "pagename", "refid", "refdoc", "env", "docname", "classes"]], "paragraph": [["paragraph", "nodes", "paragraph", "relative_path", "classes", "header_classes"], ["paragraph", "nodes", "inline", "relative_path", "classes"], ["paragraph", "pending_ref"]], "pending_ref": [["pending_ref", "viewcode_anchor", "reftarget", "pagename", "refid", "refdoc", "env", "docname", "classes"], ["pending_ref", "nodes", "inline", "_"], ["paragraph", "pending_ref"]]}, "name": "create_node", "params": {"env": "", "relative_path": "", "show_button": ""}, "params_descr": {"env": "", "relative_path": "", "show_button": ""}, "params_occur": {"env": [["pending_ref", "viewcode_anchor", "reftarget", "pagename", "refid", "refdoc", "env", "docname", "classes"]], "relative_path": [["pagename", "relative_path"], ["paragraph", "nodes", "paragraph", "relative_path", "classes", "header_classes"], ["paragraph", "nodes", "inline", "relative_path", "classes"]], "show_button": []}, "params_p": {"args": [], "env": [["bool", 0.1801284335153451], ["str", 0.1589285593164026], ["type", 0.12327020862819314], ["Optional[str]", 0.1077065000906768]], "kwargs": [], "relative_path": [["Optional[Callable]", 0.1115151312268833], ["str", 0.1010710835133405], ["Union[str, bytes, IO[bytes]]", 0.09926553787402523], ["Union[str, bytes]", 0.09926553787402523]], "show_button": [["Optional[List[str]]", 0.2750127865540557], ["Optional[str]", 0.2750127865540557], ["bool", 0.20107057083244717], ["Iterable[str]", 0.15472564715877252], ["str", 0.09417820890066902]]}, "q_name": "create_node", "ret_exprs": ["return paragraph"], "ret_type": "", "ret_type_p": [["str", 0.15629664583108083], ["int", 0.08027923007008622], ["bool", 0.07526911215679623]], "variables": {"header_classes": "", "pagename": "", "paragraph": "", "pending_ref": ""}, "variables_p": {"header_classes": [["Final", 0.1095721044914428], ["int", 0.09736445915594932], ["dict", 0.09483385696259776], ["str", 0.08611397331927576], ["bytes", 0.08591262245332994]], "pagename": [["Type[str]", 0.6666666665580067], ["List[List[int]]", 0.33333333327900333], ["str", 1.1134024878453702e-10], ["List[str]", 2.5824846478600996e-11]], "paragraph": [["Optional[str]", 0.08995068667314364], ["list", 0.08919720133081191]], "pending_ref": [["List[str]", 0.22683144160977908], ["dict", 0.1106151426457219]]}}, {"docstring": {"func": "Reads documentation tree for the application and register sources in the generated documentation.", "long_descr": ":param app: application\n:param doctree: documentation tree\n\n:return None", "ret": null}, "fn_lc": [[211, 0], [237, 38]], "fn_var_ln": {"_viewcode_modules": [[223, 8], [223, 29]], "env": [[221, 4], [221, 7]], "filepath": [[229, 8], [229, 16]], "modname": [[233, 8], [233, 15]], "onlynode": [[235, 8], [235, 16]], "relative_path": [[230, 8], [230, 21]], "show_button": [[234, 8], [234, 19]]}, "fn_var_occur": {"_viewcode_modules": [["env", "_viewcode_modules"]], "env": [["env", "app", "builder", "env"], ["hasattr", "env"], ["env", "_viewcode_modules"], ["show_button", "register_source", "app", "env", "modname"], ["onlynode", "create_node", "env", "relative_path", "show_button"]], "filepath": [["filepath", "objnode", "get"], ["relative_path", "path", "relpath", "filepath", "path", "commonprefix", "app", "config", "exampleinclude_sourceroot", "filepath"]], "modname": [["modname", "relative_path", "replace"], ["show_button", "register_source", "app", "env", "modname"]], "onlynode": [["onlynode", "create_node", "env", "relative_path", "show_button"], ["objnode", "replace_self", "onlynode"]], "relative_path": [["relative_path", "path", "relpath", "filepath", "path", "commonprefix", "app", "config", "exampleinclude_sourceroot", "filepath"], ["modname", "relative_path", "replace"], ["onlynode", "create_node", "env", "relative_path", "show_button"]], "show_button": [["show_button", "register_source", "app", "env", "modname"], ["onlynode", "create_node", "env", "relative_path", "show_button"]]}, "name": "doctree_read", "params": {"app": "", "doctree": ""}, "params_descr": {"app": "", "doctree": ""}, "params_occur": {"app": [["env", "app", "builder", "env"], ["app", "builder", "name"], ["relative_path", "path", "relpath", "filepath", "path", "commonprefix", "app", "config", "exampleinclude_sourceroot", "filepath"], ["show_button", "register_source", "app", "env", "modname"]], "doctree": [["doctree", "traverse", "ExampleHeader"]]}, "params_p": {"app": [["sphinx.application.Sphinx", 0.3415657146845138], ["str", 0.09084120532588971]], "args": [], "doctree": [["docutils.nodes.document", 0.37499999994915667], ["str", 0.12499999998305222], ["docutils.nodes.Node", 0.12499999998305222]], "kwargs": []}, "q_name": "doctree_read", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"_viewcode_modules": "", "env": "", "filepath": "", "modname": "", "onlynode": "", "relative_path": "", "show_button": ""}, "variables_p": {"_viewcode_modules": [["str", 0.4], ["Tuple[Any, Any, Any, Any, Any, Any, Any]", 0.1], ["Dict[str, Literal[True]]", 0.1]], "env": [["str", 0.4205097001929115], ["dict", 0.09324708792623243], ["Dict[str, Any]", 0.08310175845332543], ["Dict[str, Union[int, str]]", 0.0762162910371444]], "filepath": [["Dict[str, Dict[str, str]]", 0.2]], "modname": [["str", 0.39727863614365083]], "onlynode": [["str", 0.35375032283374247], ["Type[str]", 0.1795481401539523], ["list", 0.17791260424384997], ["Dict[int, List[int]]", 0.09113036043799164], ["List[List[int]]", 0.08977407007697615]], "relative_path": [["str", 0.44487233505160495]], "show_button": []}}, {"docstring": {"func": "Sets the plugin up and returns configuration of the plugin.", "long_descr": ":param app: application.\n:return json description of the configuration that is needed by the plugin.", "ret": null}, "fn_lc": [[240, 0], [253, 90]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "setup", "params": {"app": ""}, "params_descr": {"app": ""}, "params_occur": {"app": [["app", "connect", "doctree_read"], ["app", "add_config_value", "None"], ["app", "add_css_file"]]}, "params_p": {"app": [["sphinx.application.Sphinx", 0.21138884433931301]], "args": [], "kwargs": []}, "q_name": "setup", "ret_exprs": ["return {\"version\": \"builtin\", \"parallel_read_safe\": True, \"parallel_write_safe\": True}"], "ret_type": "", "ret_type_p": [["dict", 0.29104580005531033], ["Dict[str, float]", 0.1046122984976499], ["str", 0.09909286149256577]], "variables": {}, "variables_p": {}}], "imports": ["__future__", "annotations", "traceback", "os", "path", "docutils", "nodes", "docutils", "parsers", "rst", "directives", "sphinx", "directives", "code", "LiteralIncludeReader", "sphinx", "ext", "viewcode", "viewcode_anchor", "sphinx", "locale", "_", "sphinx", "pycode", "ModuleAnalyzer", "sphinx", "util", "logging", "parselinenos", "sphinx", "util", "docutils", "SphinxDirective", "sphinx", "util", "nodes", "set_source_info", "sphinx_airflow_theme"], "mod_var_ln": {"airflow_theme_is_available": [[43, 4], [43, 30]], "logger": [[45, 0], [45, 6]]}, "mod_var_occur": {"airflow_theme_is_available": [["airflow_theme_is_available"]], "logger": [["logger", "warning", "lines", "self", "options"], ["logger", "info", "modname", "ex"], ["logger", "info", "tb"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 51}, "session_id": "lA0F8vHvwO5XSzTAbhGHv-M5KQomtQTCKdMOXz3EnBQ", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"airflow_theme_is_available": "", "logger": ""}, "variables_p": {"airflow_theme_is_available": [["bool", 0.6666666665387252], ["List[str]", 0.33333333340473925], ["str", 5.6535636729108387e-11]], "logger": [["logging.Logger", 0.9302905996213846]]}}}