{"error": null, "response": {"classes": [{"cls_lc": [[127, 0], [145, 22]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Constructs a InputExample.", "long_descr": null, "ret": null}, "fn_lc": [[130, 2], [145, 22]], "fn_var_ln": {"guid": [[142, 4], [142, 13]], "label": [[145, 4], [145, 14]], "text_a": [[143, 4], [143, 15]], "text_b": [[144, 4], [144, 15]]}, "fn_var_occur": {"guid": [["self", "guid", "guid"]], "label": [["self", "label", "label"]], "text_a": [["self", "text_a", "text_a"]], "text_b": [["self", "text_b", "text_b"]]}, "name": "__init__", "params": {"guid": "", "label": "", "self": "", "text_a": "", "text_b": ""}, "params_descr": {"guid": "Unique id for the example.", "label": "(Optional) string. The label of the example. This should be\nspecified for train and dev examples, but not for test examples.", "self": "", "text_a": "string. The untokenized text of the first sequence. For single\nsequence tasks, only this sequence must be specified.", "text_b": "(Optional) string. The untokenized text of the second sequence.\nOnly must be specified for sequence pair tasks."}, "params_occur": {"guid": [["self", "guid", "guid"]], "label": [["self", "label", "label"]], "self": [["self", "guid", "guid"], ["self", "text_a", "text_a"], ["self", "text_b", "text_b"], ["self", "label", "label"]], "text_a": [["self", "text_a", "text_a"]], "text_b": [["self", "text_b", "text_b"]]}, "params_p": {"args": [], "guid": [["bool", 0.26426958095267683], ["int", 0.22688323984015035], ["List['cirq.Circuit']", 0.093916094160314], ["str", 0.08382407969764398]], "kwargs": [], "label": [["bool", 0.26426958095267683], ["int", 0.22688323984015035], ["List['cirq.Circuit']", 0.093916094160314], ["str", 0.08382407969764398]], "self": [], "text_a": [["bool", 0.26426958095267683], ["int", 0.22688323984015035], ["List['cirq.Circuit']", 0.093916094160314], ["str", 0.08382407969764398]], "text_b": [["bool", 0.5165676257066827], ["int", 0.4010627026304789]]}, "q_name": "InputExample.__init__", "ret_exprs": [], "ret_type": "", "variables": {"guid": "", "label": "", "text_a": "", "text_b": ""}, "variables_p": {"guid": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "label": [["str", 2.4554366895986118e-11], ["list", 9.447397668369758e-12], ["Dict[str, Any]", 8.0947768741197e-12], ["bytes", 7.988066609799174e-12]], "text_a": [["int", 0.27826780779567567], ["Set[str]", 0.2050080800803507], ["Tuple[str, str, str]", 0.14589504622821162], ["Tuple[str, str, str, str]", 0.14589504622821162], ["str", 0.07528100706894589]], "text_b": [["int", 0.4149858441147918], ["str", 0.33970077589337455], ["Union[int, str]", 0.07963867112562094], ["List[Union[int, str]]", 0.07333916620281739]]}}], "name": "InputExample", "q_name": "InputExample", "variables": {}, "variables_p": {}}, {"cls_lc": [[148, 0], [158, 5]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [], "name": "PaddingInputExample", "q_name": "PaddingInputExample", "variables": {}, "variables_p": {}}, {"cls_lc": [[161, 0], [174, 42]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[164, 2], [174, 42]], "fn_var_ln": {"input_ids": [[170, 4], [170, 18]], "input_mask": [[171, 4], [171, 19]], "is_real_example": [[174, 4], [174, 24]], "label_id": [[173, 4], [173, 17]], "segment_ids": [[172, 4], [172, 20]]}, "fn_var_occur": {"input_ids": [["self", "input_ids", "input_ids"]], "input_mask": [["self", "input_mask", "input_mask"]], "is_real_example": [["self", "is_real_example", "is_real_example"]], "label_id": [["self", "label_id", "label_id"]], "segment_ids": [["self", "segment_ids", "segment_ids"]]}, "name": "__init__", "params": {"input_ids": "", "input_mask": "", "is_real_example": "", "label_id": "", "segment_ids": "", "self": ""}, "params_descr": {"input_ids": "", "input_mask": "", "is_real_example": "", "label_id": "", "segment_ids": "", "self": ""}, "params_occur": {"input_ids": [["self", "input_ids", "input_ids"]], "input_mask": [["self", "input_mask", "input_mask"]], "is_real_example": [["self", "is_real_example", "is_real_example"]], "label_id": [["self", "label_id", "label_id"]], "segment_ids": [["self", "segment_ids", "segment_ids"]], "self": [["self", "input_ids", "input_ids"], ["self", "input_mask", "input_mask"], ["self", "segment_ids", "segment_ids"], ["self", "label_id", "label_id"], ["self", "is_real_example", "is_real_example"]]}, "params_p": {"args": [], "input_ids": [["str", 0.44497286552450244], ["int", 0.1835719382743144], ["Optional[int]", 0.12552386011924066]], "input_mask": [["str", 0.2018155472503663], ["bool", 0.2018155472503663], ["int", 0.1286971471479173], ["Optional[bool]", 0.08878906635462408], ["Optional[str]", 0.08878906635462408]], "is_real_example": [["str", 0.2018155472503663], ["bool", 0.2018155472503663], ["int", 0.1286971471479173], ["Optional[bool]", 0.08878906635462408], ["Optional[str]", 0.08878906635462408]], "kwargs": [], "label_id": [["str", 0.44497286552450244], ["int", 0.1835719382743144], ["Optional[int]", 0.12552386011924066]], "segment_ids": [["str", 0.44497286552450244], ["int", 0.1835719382743144], ["Optional[int]", 0.12552386011924066]], "self": []}, "q_name": "InputFeatures.__init__", "ret_exprs": [], "ret_type": "", "variables": {"input_ids": "", "input_mask": "", "is_real_example": "", "label_id": "", "segment_ids": ""}, "variables_p": {"input_ids": [["str", 0.47047988680775443], ["int", 0.33625919028958395]], "input_mask": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "is_real_example": [["bool", 0.999999999910124], ["str", 3.306462738767837e-11], ["List[str]", 2.1317488485887237e-11]], "label_id": [["int", 0.5130366665744437], ["str", 0.2948212065316624]], "segment_ids": [["str", 0.47047988680775443], ["int", 0.33625919028958395]]}}], "name": "InputFeatures", "q_name": "InputFeatures", "variables": {}, "variables_p": {}}, {"cls_lc": [[177, 0], [204, 18]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Gets a collection of `InputExample`s for the train set.", "long_descr": null, "ret": null}, "fn_lc": [[180, 2], [182, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_train_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [], "self": []}, "params_p": {"args": [], "data_dir": [["str", 0.14311806639891148], ["Optional[str]", 0.09830092824809349], ["bool", 0.09461871676424514], ["Dict[str, Any]", 0.06283161920580067]], "kwargs": [], "self": []}, "q_name": "DataProcessor.get_train_examples", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Gets a collection of `InputExample`s for the dev set.", "long_descr": null, "ret": null}, "fn_lc": [[184, 2], [186, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_dev_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [], "self": []}, "params_p": {"args": [], "data_dir": [["str", 0.14311806639891148], ["Optional[str]", 0.09830092824809349], ["bool", 0.09461871676424514], ["Dict[str, Any]", 0.06283161920580067]], "kwargs": [], "self": []}, "q_name": "DataProcessor.get_dev_examples", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Gets a collection of `InputExample`s for prediction.", "long_descr": null, "ret": null}, "fn_lc": [[188, 2], [190, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_test_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [], "self": []}, "params_p": {"args": [], "data_dir": [["bool", 0.16876522278842082], ["List[str]", 0.11321100678259235], ["str", 0.06863016509807282], ["Dict[str, Any]", 0.06863016509807282]], "kwargs": [], "self": []}, "q_name": "DataProcessor.get_test_examples", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Gets the list of labels for this data set.", "long_descr": null, "ret": null}, "fn_lc": [[192, 2], [194, 31]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_labels", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "DataProcessor.get_labels", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Reads a tab separated value file.", "long_descr": null, "ret": null}, "fn_lc": [[197, 2], [204, 18]], "fn_var_ln": {"lines": [[201, 6], [201, 11]], "reader": [[200, 6], [200, 12]]}, "fn_var_occur": {"lines": [["lines", "append", "line"]], "reader": [["reader", "csv", "reader", "f", "delimiter", "quotechar", "quotechar"]]}, "name": "_read_tsv", "params": {"cls": "", "input_file": "", "quotechar": ""}, "params_descr": {"cls": "", "input_file": "", "quotechar": ""}, "params_occur": {"cls": [], "input_file": [["tf", "gfile", "Open", "input_file", "f"]], "quotechar": [["reader", "csv", "reader", "f", "delimiter", "quotechar", "quotechar"]]}, "params_p": {"args": [], "cls": [["bool", 0.3128677309175981], ["str", 0.20268783429659062], ["List[Dict[str, Any]]", 0.12578054901859834], ["List[str]", 0.07654475209556182]], "input_file": [["str", 0.33513709252210355], ["IO", 0.32336075273905684], ["Optional[str]", 0.25591270435760327]], "kwargs": [], "quotechar": [["str", 0.21282818406996942], ["bool", 0.09875714375286489]], "self": []}, "q_name": "DataProcessor._read_tsv", "ret_exprs": ["return lines"], "ret_type": "", "ret_type_p": [["str", 0.21985940695780343], ["list", 0.19945117837043674], ["Sequence[str]", 0.18926452981824313], ["List[str]", 0.1887995627517146], ["Set[str]", 0.0954061369312398]], "variables": {"lines": "", "reader": ""}, "variables_p": {"lines": [["str", 0.8314674072902215], ["Dict[str, List[str]]", 0.09219523277835703], ["list", 0.07633735993142134]], "reader": [["str", 0.220785510793901], ["dict", 0.14172880489954956], ["Dict[str, Union[Any, Any]]", 0.14172880489954956], ["int", 0.08629842397956233], ["float", 0.0840652003788662]]}}], "name": "DataProcessor", "q_name": "DataProcessor", "variables": {}, "variables_p": {}}, {"cls_lc": [[207, 0], [252, 53]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[210, 2], [211, 24]], "fn_var_ln": {"language": [[211, 4], [211, 17]]}, "fn_var_occur": {"language": [["self", "language"]]}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "language"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "XnliProcessor.__init__", "ret_exprs": [], "ret_type": "", "variables": {"language": ""}, "variables_p": {"language": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[213, 2], [230, 19]], "fn_var_ln": {"examples": [[218, 4], [218, 12]], "guid": [[222, 6], [222, 10]], "label": [[227, 8], [227, 13]], "lines": [[215, 4], [215, 9]], "text_a": [[223, 6], [223, 12]], "text_b": [[224, 6], [224, 12]]}, "fn_var_occur": {"examples": [["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "guid": [["guid", "i"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "label": [["label", "tokenization", "convert_to_unicode", "line"], ["label", "tokenization", "convert_to_unicode"], ["label", "tokenization", "convert_to_unicode"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "lines": [["lines", "self", "_read_tsv", "os", "path", "join", "data_dir", "self", "language"], ["enumerate", "lines"]], "text_a": [["text_a", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "text_b": [["text_b", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]]}, "name": "get_train_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["lines", "self", "_read_tsv", "os", "path", "join", "data_dir", "self", "language"]], "self": [["lines", "self", "_read_tsv", "os", "path", "join", "data_dir", "self", "language"]]}, "params_p": {"args": [], "data_dir": [["str", 1.0]], "kwargs": [], "self": []}, "q_name": "XnliProcessor.get_train_examples", "ret_exprs": ["return examples"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"examples": "", "guid": "", "label": "", "lines": "", "text_a": "", "text_b": ""}, "variables_p": {"examples": [["List[str]", 0.2803546531890288], ["dict", 0.09586020502501848], ["list", 0.09115190796638224], ["int", 0.08948180107777752], ["str", 0.08939600637342936]], "guid": [["str", 0.3522833249850718], ["Tuple[Literal, Literal]", 0.3019521159190873], ["set", 0.08831133638502635]], "label": [["List[str]", 0.27149506647732513], ["str", 0.171318234605758], ["List[Tuple[Any, str]]", 0.11746751244385355], ["List[int]", 0.09067249152492662], ["List[Union[Any, Any]]", 0.08681888602871077], ["Tuple[Any, Any, Any, Any, Any, Any]", 0.08543765021774676]], "lines": [["str", 0.9999999999999999]], "text_a": [["frozenset[str]", 0.28486478060720705], ["Pattern[str]", 0.19081306858977046], ["Dict[Any, set]", 0.09537318722084812], ["list", 0.08534041930867303]], "text_b": [["int", 0.9027309684388668]]}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[232, 2], [248, 19]], "fn_var_ln": {"examples": [[235, 4], [235, 12]], "guid": [[239, 6], [239, 10]], "label": [[245, 6], [245, 11]], "language": [[240, 6], [240, 14]], "lines": [[234, 4], [234, 9]], "text_a": [[243, 6], [243, 12]], "text_b": [[244, 6], [244, 12]]}, "fn_var_occur": {"examples": [["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "guid": [["guid", "i"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "label": [["label", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "language": [["language", "tokenization", "convert_to_unicode", "line"], ["language", "tokenization", "convert_to_unicode", "self", "language"]], "lines": [["lines", "self", "_read_tsv", "os", "path", "join", "data_dir"], ["enumerate", "lines"]], "text_a": [["text_a", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "text_b": [["text_b", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]]}, "name": "get_dev_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["lines", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["lines", "self", "_read_tsv", "os", "path", "join", "data_dir"], ["language", "tokenization", "convert_to_unicode", "self", "language"]]}, "params_p": {"args": [], "data_dir": [["str", 0.9999999999999999]], "kwargs": [], "self": []}, "q_name": "XnliProcessor.get_dev_examples", "ret_exprs": ["return examples"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"examples": "", "guid": "", "label": "", "language": "", "lines": "", "text_a": "", "text_b": ""}, "variables_p": {"examples": [["List[str]", 0.2803546531890288], ["dict", 0.09586020502501848], ["list", 0.09115190796638224], ["int", 0.08948180107777752], ["str", 0.08939600637342936]], "guid": [["str", 0.3522833249850718], ["Tuple[Literal, Literal]", 0.3019521159190873], ["set", 0.08831133638502635]], "label": [["str", 0.22392071428830468], ["List[float]", 0.10791283895611119], ["Dict[Any, Tuple[str, str]]", 0.10740713144343257], ["dict", 0.10019777210790881], ["Dict[str, Dict[str, str]]", 0.09443459239553972], ["int", 0.08880147163184911]], "language": [["str", 0.2529979033780629], ["Dict[Any, int]", 0.14181472285773006], ["float", 0.11410964982684284], ["int", 0.09093645332825691], ["set", 0.08464640784510136]], "lines": [["str", 0.7832539026371754], ["List[str]", 0.08804679457222024]], "text_a": [["frozenset[str]", 0.28486478060720705], ["Pattern[str]", 0.19081306858977046], ["Dict[Any, set]", 0.09537318722084812], ["list", 0.08534041930867303]], "text_b": [["int", 0.9027309684388668]]}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[250, 2], [252, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_labels", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "XnliProcessor.get_labels", "ret_exprs": ["return [\"contradiction\", \"entailment\", \"neutral\"]"], "ret_type": "", "ret_type_p": [["str", 0.300516740389593], ["float", 0.0791355717401589], ["bool", 0.0791355717401589]], "variables": {}, "variables_p": {}}], "name": "XnliProcessor", "q_name": "XnliProcessor", "variables": {}, "variables_p": {}}, {"cls_lc": [[255, 0], [293, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[258, 2], [261, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_train_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.9131291791102887]], "kwargs": [], "self": []}, "q_name": "MnliProcessor.get_train_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"train.tsv\")), \"train\")"], "ret_type": "", "ret_type_p": [["str", 0.4439775413830561], ["bool", 0.10475256300249636], ["os.PathLike", 0.09048889326449007], ["int", 0.08889425161450577], ["Tuple[str, str]", 0.08794470691923846]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[263, 2], [267, 22]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_dev_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.9131291791102887]], "kwargs": [], "self": []}, "q_name": "MnliProcessor.get_dev_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"dev_matched.tsv\")), \"dev_matched\")"], "ret_type": "", "ret_type_p": [["str", 0.4439775413830561], ["bool", 0.10475256300249636], ["os.PathLike", 0.09048889326449007], ["int", 0.08889425161450577], ["Tuple[str, str]", 0.08794470691923846]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[269, 2], [272, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_test_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.8155938079454119], ["bool", 0.18440619205458825]], "kwargs": [], "self": []}, "q_name": "MnliProcessor.get_test_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"test_matched.tsv\")), \"test\")"], "ret_type": "", "ret_type_p": [["str", 0.4922267439185877], ["Dict[str, Any]", 0.13913745385471243]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[274, 2], [276, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_labels", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MnliProcessor.get_labels", "ret_exprs": ["return [\"contradiction\", \"entailment\", \"neutral\"]"], "ret_type": "", "ret_type_p": [["str", 0.300516740389593], ["float", 0.0791355717401589], ["bool", 0.0791355717401589]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates examples for the training and dev sets.", "long_descr": null, "ret": null}, "fn_lc": [[278, 2], [293, 19]], "fn_var_ln": {"examples": [[280, 4], [280, 12]], "guid": [[284, 6], [284, 10]], "label": [[290, 8], [290, 13]], "text_a": [[285, 6], [285, 12]], "text_b": [[286, 6], [286, 12]]}, "fn_var_occur": {"examples": [["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "guid": [["guid", "set_type", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "label": [["label", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "text_a": [["text_a", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "text_b": [["text_b", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]]}, "name": "_create_examples", "params": {"lines": "", "self": "", "set_type": ""}, "params_descr": {"lines": "", "self": "", "set_type": ""}, "params_occur": {"lines": [["enumerate", "lines"]], "self": [], "set_type": [["guid", "set_type", "tokenization", "convert_to_unicode", "line"]]}, "params_p": {"args": [], "kwargs": [], "lines": [["str", 0.6413548089124591], ["List[str]", 0.11317787101377476], ["Iterator[str]", 0.0817661338124854]], "self": [], "set_type": [["str", 0.6897772452813603], ["OrderedDict", 0.11471066962937361], ["bytes", 0.10038108280458893], ["Callable", 0.09513100228467739]]}, "q_name": "MnliProcessor._create_examples", "ret_exprs": ["return examples"], "ret_type": "", "ret_type_p": [["bool", 0.5], ["float", 0.1]], "variables": {"examples": "", "guid": "", "label": "", "text_a": "", "text_b": ""}, "variables_p": {"examples": [["List[str]", 0.2803546531890288], ["dict", 0.09586020502501848], ["list", 0.09115190796638224], ["int", 0.08948180107777752], ["str", 0.08939600637342936]], "guid": [["dict", 0.2088021631773822], ["List[int]", 0.1897753256795638], ["str", 0.10262975617267213], ["Set[str]", 0.10186833614578891], ["int", 0.10186833614578891]], "label": [["str", 0.22392071428830468], ["List[float]", 0.10791283895611119], ["Dict[Any, Tuple[str, str]]", 0.10740713144343257], ["dict", 0.10019777210790881], ["Dict[str, Dict[str, str]]", 0.09443459239553972], ["int", 0.08880147163184911]], "text_a": [["frozenset[str]", 0.28486478060720705], ["Pattern[str]", 0.19081306858977046], ["Dict[Any, set]", 0.09537318722084812], ["list", 0.08534041930867303]], "text_b": [["int", 0.9027309684388668]]}}], "name": "MnliProcessor", "q_name": "MnliProcessor", "variables": {}, "variables_p": {}}, {"cls_lc": [[296, 0], [333, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[299, 2], [302, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_train_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.9131291791102887]], "kwargs": [], "self": []}, "q_name": "MrpcProcessor.get_train_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"train.tsv\")), \"train\")"], "ret_type": "", "ret_type_p": [["str", 0.4439775413830561], ["bool", 0.10475256300249636], ["os.PathLike", 0.09048889326449007], ["int", 0.08889425161450577], ["Tuple[str, str]", 0.08794470691923846]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[304, 2], [307, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_dev_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.9131291791102887]], "kwargs": [], "self": []}, "q_name": "MrpcProcessor.get_dev_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"dev.tsv\")), \"dev\")"], "ret_type": "", "ret_type_p": [["str", 0.4439775413830561], ["bool", 0.10475256300249636], ["os.PathLike", 0.09048889326449007], ["int", 0.08889425161450577], ["Tuple[str, str]", 0.08794470691923846]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[309, 2], [312, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_test_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.8155938079454119], ["bool", 0.18440619205458825]], "kwargs": [], "self": []}, "q_name": "MrpcProcessor.get_test_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"test.tsv\")), \"test\")"], "ret_type": "", "ret_type_p": [["str", 0.4922267439185877], ["Dict[str, Any]", 0.13913745385471243]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[314, 2], [316, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_labels", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "MrpcProcessor.get_labels", "ret_exprs": ["return [\"0\", \"1\"]"], "ret_type": "", "ret_type_p": [["str", 0.300516740389593], ["float", 0.0791355717401589], ["bool", 0.0791355717401589]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates examples for the training and dev sets.", "long_descr": null, "ret": null}, "fn_lc": [[318, 2], [333, 19]], "fn_var_ln": {"examples": [[320, 4], [320, 12]], "guid": [[324, 6], [324, 10]], "label": [[330, 8], [330, 13]], "text_a": [[325, 6], [325, 12]], "text_b": [[326, 6], [326, 12]]}, "fn_var_occur": {"examples": [["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "guid": [["guid", "set_type", "i"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "label": [["label", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "text_a": [["text_a", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]], "text_b": [["text_b", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "text_b", "label", "label"]]}, "name": "_create_examples", "params": {"lines": "", "self": "", "set_type": ""}, "params_descr": {"lines": "", "self": "", "set_type": ""}, "params_occur": {"lines": [["enumerate", "lines"]], "self": [], "set_type": [["guid", "set_type", "i"]]}, "params_p": {"args": [], "kwargs": [], "lines": [["str", 0.6413548089124591], ["List[str]", 0.11317787101377476], ["Iterator[str]", 0.0817661338124854]], "self": [], "set_type": [["str", 0.2999373695753188], ["bool", 0.09556215758594605], ["Optional[Any]", 0.09556215758594605], ["int", 0.08765370230571366]]}, "q_name": "MrpcProcessor._create_examples", "ret_exprs": ["return examples"], "ret_type": "", "ret_type_p": [["bool", 0.5], ["float", 0.1]], "variables": {"examples": "", "guid": "", "label": "", "text_a": "", "text_b": ""}, "variables_p": {"examples": [["List[str]", 0.2803546531890288], ["dict", 0.09586020502501848], ["list", 0.09115190796638224], ["int", 0.08948180107777752], ["str", 0.08939600637342936]], "guid": [["int", 0.3028512211512763], ["str", 0.272455399957103], ["List[str]", 0.24764414848273214], ["List[Tuple[Any, bool]]", 0.09455545037177789]], "label": [["str", 0.22392071428830468], ["List[float]", 0.10791283895611119], ["Dict[Any, Tuple[str, str]]", 0.10740713144343257], ["dict", 0.10019777210790881], ["Dict[str, Dict[str, str]]", 0.09443459239553972], ["int", 0.08880147163184911]], "text_a": [["frozenset[str]", 0.28486478060720705], ["Pattern[str]", 0.19081306858977046], ["Dict[Any, set]", 0.09537318722084812], ["list", 0.08534041930867303]], "text_b": [["int", 0.9027309684388668]]}}], "name": "MrpcProcessor", "q_name": "MrpcProcessor", "variables": {}, "variables_p": {}}, {"cls_lc": [[336, 0], [374, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[339, 2], [342, 69]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_train_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.9131291791102887]], "kwargs": [], "self": []}, "q_name": "ColaProcessor.get_train_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"train.tsv\")), \"train\")"], "ret_type": "", "ret_type_p": [["str", 0.4439775413830561], ["bool", 0.10475256300249636], ["os.PathLike", 0.09048889326449007], ["int", 0.08889425161450577], ["Tuple[str, str]", 0.08794470691923846]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[344, 2], [347, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_dev_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.9131291791102887]], "kwargs": [], "self": []}, "q_name": "ColaProcessor.get_dev_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"dev.tsv\")), \"dev\")"], "ret_type": "", "ret_type_p": [["str", 0.4439775413830561], ["bool", 0.10475256300249636], ["os.PathLike", 0.09048889326449007], ["int", 0.08889425161450577], ["Tuple[str, str]", 0.08794470691923846]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[349, 2], [352, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_test_examples", "params": {"data_dir": "", "self": ""}, "params_descr": {"data_dir": "", "self": ""}, "params_occur": {"data_dir": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]], "self": [["self", "_create_examples", "self", "_read_tsv", "os", "path", "join", "data_dir"]]}, "params_p": {"args": [], "data_dir": [["str", 0.8155938079454119], ["bool", 0.18440619205458825]], "kwargs": [], "self": []}, "q_name": "ColaProcessor.get_test_examples", "ret_exprs": ["return self._create_examples( self._read_tsv(os.path.join(data_dir, \"test.tsv\")), \"test\")"], "ret_type": "", "ret_type_p": [["str", 0.4922267439185877], ["Dict[str, Any]", 0.13913745385471243]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "See base class.", "long_descr": null, "ret": null}, "fn_lc": [[354, 2], [356, 21]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_labels", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "ColaProcessor.get_labels", "ret_exprs": ["return [\"0\", \"1\"]"], "ret_type": "", "ret_type_p": [["str", 0.300516740389593], ["float", 0.0791355717401589], ["bool", 0.0791355717401589]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Creates examples for the training and dev sets.", "long_descr": null, "ret": null}, "fn_lc": [[358, 2], [374, 19]], "fn_var_ln": {"examples": [[360, 4], [360, 12]], "guid": [[365, 6], [365, 10]], "label": [[371, 8], [371, 13]], "text_a": [[370, 8], [370, 14]]}, "fn_var_occur": {"examples": [["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "None", "label", "label"]], "guid": [["guid", "set_type", "i"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "None", "label", "label"]], "label": [["label", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "None", "label", "label"]], "text_a": [["text_a", "tokenization", "convert_to_unicode", "line"], ["text_a", "tokenization", "convert_to_unicode", "line"], ["examples", "append", "InputExample", "guid", "guid", "text_a", "text_a", "text_b", "None", "label", "label"]]}, "name": "_create_examples", "params": {"lines": "", "self": "", "set_type": ""}, "params_descr": {"lines": "", "self": "", "set_type": ""}, "params_occur": {"lines": [["enumerate", "lines"]], "self": [], "set_type": [["set_type", "i"], ["guid", "set_type", "i"]]}, "params_p": {"args": [], "kwargs": [], "lines": [["str", 0.6413548089124591], ["List[str]", 0.11317787101377476], ["Iterator[str]", 0.0817661338124854]], "self": [], "set_type": [["str", 0.41284593772613254], ["Union[str, int]", 0.10286143617975084], ["Type[T]", 0.09581652974269224]]}, "q_name": "ColaProcessor._create_examples", "ret_exprs": ["return examples"], "ret_type": "", "ret_type_p": [["bool", 0.5], ["float", 0.1]], "variables": {"examples": "", "guid": "", "label": "", "text_a": ""}, "variables_p": {"examples": [["str", 0.20896883360421722], ["List[str]", 0.19004846090866934], ["dict", 0.12986026140925405], ["Dict[str, List[str]]", 0.11538976340640081], ["list", 0.10883021646571785], ["Dict[str, Any]", 0.08395016462133965]], "guid": [["str", 0.2908858847661205], ["list", 0.23681807364540702], ["List[str]", 0.1906054048164771]], "label": [["str", 0.1864462317383852], ["Dict[Any, Tuple[str, str]]", 0.12068228750879195], ["list", 0.09234318126611532]], "text_a": [["str", 0.5237226354964497], ["list", 0.18848883161728996], ["int", 0.10032653658326313], ["List[str]", 0.09431868701045446], ["Pattern", 0.09314330929254284]]}}], "name": "ColaProcessor", "q_name": "ColaProcessor", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": "Converts a single `InputExample` into a single `InputFeatures`.", "long_descr": null, "ret": null}, "fn_lc": [[377, 0], [476, 16]], "fn_var_ln": {"feature": [[470, 2], [470, 9]], "input_ids": [[443, 2], [443, 11]], "input_mask": [[447, 2], [447, 12]], "label_id": [[459, 2], [459, 10]], "label_map": [[389, 2], [389, 11]], "segment_ids": [[427, 2], [427, 13]], "tokens": [[426, 2], [426, 8]], "tokens_a": [[406, 6], [406, 14]], "tokens_b": [[396, 4], [396, 12]]}, "fn_var_occur": {"feature": [["feature", "InputFeatures", "input_ids", "input_ids", "input_mask", "input_mask", "segment_ids", "segment_ids", "label_id", "label_id", "is_real_example", "True"]], "input_ids": [["InputFeatures", "input_ids", "max_seq_length", "input_mask", "max_seq_length", "segment_ids", "max_seq_length", "label_id", "is_real_example", "False"], ["input_ids", "tokenizer", "convert_tokens_to_ids", "tokens"], ["input_mask", "len", "input_ids"], ["len", "input_ids", "max_seq_length"], ["input_ids", "append"], ["len", "input_ids", "max_seq_length"], ["tf", "logging", "info", "join", "str", "x", "x", "input_ids"], ["feature", "InputFeatures", "input_ids", "input_ids", "input_mask", "input_mask", "segment_ids", "segment_ids", "label_id", "label_id", "is_real_example", "True"]], "input_mask": [["InputFeatures", "input_ids", "max_seq_length", "input_mask", "max_seq_length", "segment_ids", "max_seq_length", "label_id", "is_real_example", "False"], ["input_mask", "len", "input_ids"], ["input_mask", "append"], ["len", "input_mask", "max_seq_length"], ["tf", "logging", "info", "join", "str", "x", "x", "input_mask"], ["feature", "InputFeatures", "input_ids", "input_ids", "input_mask", "input_mask", "segment_ids", "segment_ids", "label_id", "label_id", "is_real_example", "True"]], "label_id": [["InputFeatures", "input_ids", "max_seq_length", "input_mask", "max_seq_length", "segment_ids", "max_seq_length", "label_id", "is_real_example", "False"], ["label_id", "label_map", "example", "label"], ["tf", "logging", "info", "example", "label", "label_id"], ["feature", "InputFeatures", "input_ids", "input_ids", "input_mask", "input_mask", "segment_ids", "segment_ids", "label_id", "label_id", "is_real_example", "True"]], "label_map": [["label_map", "label", "i"], ["label_id", "label_map", "example", "label"]], "segment_ids": [["InputFeatures", "input_ids", "max_seq_length", "input_mask", "max_seq_length", "segment_ids", "max_seq_length", "label_id", "is_real_example", "False"], ["segment_ids", "append"], ["segment_ids", "append"], ["segment_ids", "append"], ["segment_ids", "append"], ["segment_ids", "append"], ["segment_ids", "append"], ["len", "segment_ids", "max_seq_length"], ["tf", "logging", "info", "join", "str", "x", "x", "segment_ids"], ["feature", "InputFeatures", "input_ids", "input_ids", "input_mask", "input_mask", "segment_ids", "segment_ids", "label_id", "label_id", "is_real_example", "True"]], "tokens": [["tokens", "append"], ["tokens", "append", "token"], ["tokens", "append"], ["tokens", "append", "token"], ["tokens", "append"], ["input_ids", "tokenizer", "convert_tokens_to_ids", "tokens"], ["tf", "logging", "info", "join", "tokenization", "printable_text", "x", "x", "tokens"]], "tokens_a": [["tokens_a", "tokenizer", "tokenize", "example", "text_a"], ["_truncate_seq_pair", "tokens_a", "tokens_b", "max_seq_length"], ["len", "tokens_a", "max_seq_length"], ["tokens_a", "tokens_a", "max_seq_length"]], "tokens_b": [["tokens_b", "None"], ["tokens_b", "tokenizer", "tokenize", "example", "text_b"], ["_truncate_seq_pair", "tokens_a", "tokens_b", "max_seq_length"]]}, "name": "convert_single_example", "params": {"ex_index": "", "example": "", "label_list": "", "max_seq_length": "", "tokenizer": ""}, "params_descr": {"ex_index": "", "example": "", "label_list": "", "max_seq_length": "", "tokenizer": ""}, "params_occur": {"ex_index": [], "example": [["isinstance", "example", "PaddingInputExample"], ["tokens_a", "tokenizer", "tokenize", "example", "text_a"], ["example", "text_b"], ["tokens_b", "tokenizer", "tokenize", "example", "text_b"], ["label_id", "label_map", "example", "label"], ["tf", "logging", "info", "example", "guid"], ["tf", "logging", "info", "example", "label", "label_id"]], "label_list": [["enumerate", "label_list"]], "max_seq_length": [["InputFeatures", "input_ids", "max_seq_length", "input_mask", "max_seq_length", "segment_ids", "max_seq_length", "label_id", "is_real_example", "False"], ["_truncate_seq_pair", "tokens_a", "tokens_b", "max_seq_length"], ["len", "tokens_a", "max_seq_length"], ["tokens_a", "tokens_a", "max_seq_length"], ["len", "input_ids", "max_seq_length"], ["len", "input_ids", "max_seq_length"], ["len", "input_mask", "max_seq_length"], ["len", "segment_ids", "max_seq_length"]], "tokenizer": [["tokens_a", "tokenizer", "tokenize", "example", "text_a"], ["tokens_b", "tokenizer", "tokenize", "example", "text_b"], ["input_ids", "tokenizer", "convert_tokens_to_ids", "tokens"]]}, "params_p": {"args": [], "ex_index": [["bool", 0.30346082465391905], ["Union[None, str, Iterable[str]]", 0.18028703013543768], ["Optional[bool]", 0.15599956501086518], ["list", 0.0934142147048256]], "example": [["bool", 0.1924248449720425], ["int", 0.13554692805678054], ["str", 0.09621242248602126]], "kwargs": [], "label_list": [["float", 0.18155044052643773], ["int", 0.18155044052643773], ["str", 0.11116579414089973], ["bool", 0.09601441273969664], ["bytes", 0.09136364515664154], ["Union[float, int]", 0.09077522026321887]], "max_seq_length": [["int", 0.7960802716407487], ["Optional[int]", 0.08642560556875921]], "tokenizer": [["str", 0.3193925520135992], ["bool", 0.292462727134566]]}, "q_name": "convert_single_example", "ret_exprs": ["return InputFeatures( input_ids=[0] * max_seq_length, input_mask=[0] * max_seq_length, segment_ids=[0] * max_seq_length, label_id=0, is_real_example=False)", "return feature"], "ret_type": "", "ret_type_p": [["Iterable[int]", 0.0975342444762832], ["str", 0.0905212995726345]], "variables": {"feature": "", "input_ids": "", "input_mask": "", "label_id": "", "label_map": "", "segment_ids": "", "tokens": "", "tokens_a": "", "tokens_b": ""}, "variables_p": {"feature": [["list", 0.17797418481588695], ["dict", 0.10353135687336024], ["Dict[str, Any]", 0.10329502818167878], ["str", 0.08811101256039908], ["float", 0.07797777219239796]], "input_ids": [["list", 0.9999999997499662], ["int", 1.587153751422944e-10], ["List[int]", 9.131847480440963e-11]], "input_mask": [["List[int]", 0.9999999995942213], ["int", 2.7428538335943254e-10], ["str", 8.010191586373844e-11]], "label_id": [["list", 0.5894434976586028], ["int", 0.20993978407711714], ["List[int]", 0.15754495872274818]], "label_map": [["int", 0.1978059709596529], ["Dict[str, Optional[str]]", 0.12738042379238199], ["List[Tuple[Any, str]]", 0.11104546647971324], ["List[None]", 0.09534044598161398], ["str", 0.0948365489415514]], "segment_ids": [["list", 0.9999999997499662], ["int", 1.587153751422944e-10], ["List[int]", 9.131847480440963e-11]], "tokens": [["list", 1.0]], "tokens_a": [["int", 0.3119556194494211], ["str", 0.1336519746917375], ["dict", 0.0999440854294114], ["Dict[str, Union[Any, Any, Any, Any, Any]]", 0.09717633160875284], ["List[float]", 0.09658246653962806], ["list", 0.093145608571421], ["Optional[int]", 0.08346504220592893]], "tokens_b": [["int", 0.7920641688024243], ["Optional[int]", 0.11235452444758166]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[492, 4], [494, 14]], "fn_var_ln": {"f": [[493, 6], [493, 7]]}, "fn_var_occur": {"f": [["f", "tf", "train", "Feature", "int64_list", "tf", "train", "Int64List", "value", "list", "values"]]}, "name": "create_int_feature", "params": {"values": ""}, "params_descr": {"values": ""}, "params_occur": {"values": [["f", "tf", "train", "Feature", "int64_list", "tf", "train", "Int64List", "value", "list", "values"]]}, "params_p": {"args": [], "kwargs": [], "values": [["float", 0.2773482346558448], ["bool", 0.16991250763993698]]}, "q_name": "file_based_convert_examples_to_features.<locals>.create_int_feature", "ret_exprs": ["return f"], "ret_type": "", "ret_type_p": [["str", 0.48512456455848496], ["Optional[str]", 0.10827910589488982], ["int", 0.10633167963351409], ["Iterable[str]", 0.09611076312674685]], "variables": {"f": ""}, "variables_p": {"f": [["list", 0.19529040149897708], ["Type[range]", 0.11851501351894404], ["float", 0.10322029203218476], ["List[slice]", 0.09841088194330566]]}}, {"docstring": {"func": "Convert a set of `InputExample`s to a TFRecord file.", "long_descr": null, "ret": null}, "fn_lc": [[479, 0], [506, 16]], "fn_var_ln": {"feature": [[489, 4], [489, 11]], "features": [[496, 4], [496, 12]], "tf_example": [[504, 4], [504, 14]], "writer": [[483, 2], [483, 8]]}, "fn_var_occur": {"feature": [["features", "create_int_feature", "feature", "input_ids"], ["features", "create_int_feature", "feature", "input_mask"], ["features", "create_int_feature", "feature", "segment_ids"], ["features", "create_int_feature", "feature", "label_id"], ["features", "create_int_feature", "int", "feature", "is_real_example"], ["tf_example", "tf", "train", "Example", "features", "tf", "train", "Features", "feature", "features"]], "features": [["features", "collections", "OrderedDict"], ["features", "create_int_feature", "feature", "input_ids"], ["features", "create_int_feature", "feature", "input_mask"], ["features", "create_int_feature", "feature", "segment_ids"], ["features", "create_int_feature", "feature", "label_id"], ["features", "create_int_feature", "int", "feature", "is_real_example"], ["tf_example", "tf", "train", "Example", "features", "tf", "train", "Features", "feature", "features"]], "tf_example": [["tf_example", "tf", "train", "Example", "features", "tf", "train", "Features", "feature", "features"], ["writer", "write", "tf_example", "SerializeToString"]], "writer": [["writer", "write", "tf_example", "SerializeToString"], ["writer", "close"]]}, "name": "file_based_convert_examples_to_features", "params": {"examples": "", "label_list": "", "max_seq_length": "", "output_file": "", "tokenizer": ""}, "params_descr": {"examples": "", "label_list": "", "max_seq_length": "", "output_file": "", "tokenizer": ""}, "params_occur": {"examples": [], "label_list": [], "max_seq_length": [], "output_file": [], "tokenizer": []}, "params_p": {"args": [], "examples": [["bool", 0.9009146467988385], ["str", 0.09908535320116121]], "kwargs": [], "label_list": [["bool", 0.9009146467988385], ["str", 0.09908535320116121]], "max_seq_length": [["bool", 0.9009146467988385], ["str", 0.09908535320116121]], "output_file": [["bool", 0.9009146467988385], ["str", 0.09908535320116121]], "tokenizer": [["bool", 0.9009146467988385], ["str", 0.09908535320116121]]}, "q_name": "file_based_convert_examples_to_features", "ret_exprs": [], "ret_type": "", "variables": {"feature": "", "features": "", "tf_example": "", "writer": ""}, "variables_p": {"feature": [["str", 0.5880802239511135], ["Dict[Any, str]", 0.15316663114626272], ["int", 0.08522252209476748], ["Dict[str, Dict[str, int]]", 0.08431420487316746]], "features": [["int", 0.15940743259122647]], "tf_example": [["str", 0.0883566194720073], ["List[str]", 0.07881126020012681], ["dict", 0.07236871233914727]], "writer": [["str", 0.6371378241621232], ["bool", 0.26680427107619786], ["int", 0.09605790476167882]]}}, {"docstring": {"func": "Decodes a record to a TensorFlow example.", "long_descr": null, "ret": null}, "fn_lc": [[521, 2], [533, 18]], "fn_var_ln": {"example": [[523, 4], [523, 11]], "t": [[530, 8], [530, 9]]}, "fn_var_occur": {"example": [["example", "tf", "parse_single_example", "record", "name_to_features"], ["list", "example", "keys"], ["t", "example", "name"], ["example", "name", "t"]], "t": [["t", "example", "name"], ["t", "dtype", "tf", "int64"], ["t", "tf", "to_int32", "t"], ["example", "name", "t"]]}, "name": "_decode_record", "params": {"name_to_features": "", "record": ""}, "params_descr": {"name_to_features": "", "record": ""}, "params_occur": {"name_to_features": [["name_to_features", "tf", "FixedLenFeature", "seq_length", "tf", "int64", "tf", "FixedLenFeature", "seq_length", "tf", "int64", "tf", "FixedLenFeature", "seq_length", "tf", "int64", "tf", "FixedLenFeature", "tf", "int64", "tf", "FixedLenFeature", "tf", "int64"], ["example", "tf", "parse_single_example", "record", "name_to_features"]], "record": [["example", "tf", "parse_single_example", "record", "name_to_features"]]}, "params_p": {"args": [], "kwargs": [], "name_to_features": [["int", 0.5859606661634627], ["str", 0.29396372014864025]], "record": [["List[str]", 0.5808273028091755], ["bool", 0.19897225137398106], ["str", 0.12554595634993526]]}, "q_name": "file_based_input_fn_builder.<locals>._decode_record", "ret_exprs": ["return example"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"example": "", "t": ""}, "variables_p": {"example": [["dict", 0.48412367675183743], ["list", 0.08501279162381728]], "t": [["T", 0.123470190675182], ["float", 0.10422734402144247], ["Type[T]", 0.1009569837518597], ["List[str]", 0.08935244936152673]]}}, {"docstring": {"func": "The actual input function.", "long_descr": null, "ret": null}, "fn_lc": [[535, 2], [552, 12]], "fn_var_ln": {"batch_size": [[537, 4], [537, 14]], "d": [[546, 4], [546, 5]]}, "fn_var_occur": {"batch_size": [["batch_size", "params"], ["d", "d", "apply", "tf", "contrib", "data", "map_and_batch", "record", "_decode_record", "record", "name_to_features", "batch_size", "batch_size", "drop_remainder", "drop_remainder"]], "d": [["d", "tf", "data", "TFRecordDataset", "input_file"], ["d", "d", "repeat"], ["d", "d", "shuffle", "buffer_size"], ["d", "d", "apply", "tf", "contrib", "data", "map_and_batch", "record", "_decode_record", "record", "name_to_features", "batch_size", "batch_size", "drop_remainder", "drop_remainder"]]}, "name": "input_fn", "params": {"params": ""}, "params_descr": {"params": ""}, "params_occur": {"params": [["batch_size", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["float", 0.4999999998944645], ["int", 5.3667308480448e-11], ["List[Tuple[int, int]]", 2.218973759525547e-11]]}, "q_name": "file_based_input_fn_builder.<locals>.input_fn", "ret_exprs": ["return d"], "ret_type": "", "ret_type_p": [["dict", 0.2155356325793273], ["Dict[str, bool]", 0.20233908460619224], ["Union[Dict, str]", 0.10244554214035077], ["Dict[str, Any]", 0.09693415778986708], ["int", 0.0959184973223934]], "variables": {"batch_size": "", "d": ""}, "variables_p": {"batch_size": [["int", 0.8194939727242131], ["str", 0.08004325178153153]], "d": [["float", 0.12025063493606598], ["int", 0.09956034572960984], ["Iterator[float]", 0.09677141526672127]]}}, {"docstring": {"func": "Creates an `input_fn` closure to be passed to TPUEstimator.", "long_descr": null, "ret": null}, "fn_lc": [[509, 0], [554, 17]], "fn_var_ln": {"name_to_features": [[513, 2], [513, 18]]}, "fn_var_occur": {"name_to_features": []}, "name": "file_based_input_fn_builder", "params": {"drop_remainder": "", "input_file": "", "is_training": "", "seq_length": ""}, "params_descr": {"drop_remainder": "", "input_file": "", "is_training": "", "seq_length": ""}, "params_occur": {"drop_remainder": [], "input_file": [], "is_training": [], "seq_length": []}, "params_p": {"args": [], "drop_remainder": [["bool", 0.7156180903299778], ["int", 0.20349688011268702], ["str", 0.08088502955733516]], "input_file": [["bool", 0.7156180903299778], ["int", 0.20349688011268702], ["str", 0.08088502955733516]], "is_training": [["bool", 0.7156180903299778], ["int", 0.20349688011268702], ["str", 0.08088502955733516]], "kwargs": [], "seq_length": [["bool", 0.7156180903299778], ["int", 0.20349688011268702], ["str", 0.08088502955733516]]}, "q_name": "file_based_input_fn_builder", "ret_exprs": ["return input_fn"], "ret_type": "", "ret_type_p": [["str", 0.371776934492124], ["Sequence", 0.09595966260423701], ["List[str]", 0.08722676844193558]], "variables": {"name_to_features": ""}, "variables_p": {"name_to_features": [["Dict[str, Any]", 0.9999999976769121], ["str", 1.2838586500570595e-09], ["Dict[str, Union[dict, str]]", 4.0673589817432374e-10], ["Dict[str, Union[Any, Any, str]]", 4.0673589817432374e-10], ["Tuple[Literal, Literal, Literal]", 2.2575750397504053e-10]]}}, {"docstring": {"func": "Truncates a sequence pair in place to the maximum length.", "long_descr": null, "ret": null}, "fn_lc": [[557, 0], [571, 20]], "fn_var_ln": {"total_length": [[565, 4], [565, 16]]}, "fn_var_occur": {"total_length": [["total_length", "len", "tokens_a", "len", "tokens_b"], ["total_length", "max_length"]]}, "name": "_truncate_seq_pair", "params": {"max_length": "", "tokens_a": "", "tokens_b": ""}, "params_descr": {"max_length": "", "tokens_a": "", "tokens_b": ""}, "params_occur": {"max_length": [["total_length", "max_length"]], "tokens_a": [["total_length", "len", "tokens_a", "len", "tokens_b"], ["len", "tokens_a", "len", "tokens_b"], ["tokens_a", "pop"]], "tokens_b": [["total_length", "len", "tokens_a", "len", "tokens_b"], ["len", "tokens_a", "len", "tokens_b"], ["tokens_b", "pop"]]}, "params_p": {"args": [], "kwargs": [], "max_length": [["int", 0.900959967718565], ["float", 0.09904003228143496]], "tokens_a": [["List[int]", 0.6729426254044122], ["List[str]", 0.2120128668821897], ["str", 0.11504450771339825]], "tokens_b": [["List[int]", 0.9029465358322984], ["int", 0.09705346416770164]]}, "q_name": "_truncate_seq_pair", "ret_exprs": [], "ret_type": "", "variables": {"total_length": ""}, "variables_p": {"total_length": [["int", 0.7102447980422352], ["List[int]", 0.2897552019577647]]}}, {"docstring": {"func": "Creates a classification model.", "long_descr": null, "ret": null}, "fn_lc": [[574, 0], [616, 58]], "fn_var_ln": {"hidden_size": [[592, 2], [592, 13]], "log_probs": [[609, 4], [609, 13]], "logits": [[607, 4], [607, 10]], "loss": [[614, 4], [614, 8]], "model": [[577, 2], [577, 7]], "one_hot_labels": [[611, 4], [611, 18]], "output_bias": [[598, 2], [598, 13]], "output_layer": [[604, 6], [604, 18]], "output_weights": [[594, 2], [594, 16]], "per_example_loss": [[613, 4], [613, 20]], "probabilities": [[608, 4], [608, 17]]}, "fn_var_occur": {"hidden_size": [["hidden_size", "output_layer", "shape", "value"], ["output_weights", "tf", "get_variable", "num_labels", "hidden_size", "initializer", "tf", "truncated_normal_initializer", "stddev"]], "log_probs": [["log_probs", "tf", "nn", "log_softmax", "logits", "axis"], ["per_example_loss", "tf", "reduce_sum", "one_hot_labels", "log_probs", "axis"]], "logits": [["logits", "tf", "matmul", "output_layer", "output_weights", "transpose_b", "True"], ["logits", "tf", "nn", "bias_add", "logits", "output_bias"], ["probabilities", "tf", "nn", "softmax", "logits", "axis"], ["log_probs", "tf", "nn", "log_softmax", "logits", "axis"], ["loss", "per_example_loss", "logits", "probabilities"]], "loss": [["loss", "tf", "reduce_mean", "per_example_loss"], ["loss", "per_example_loss", "logits", "probabilities"]], "model": [["model", "modeling", "BertModel", "config", "bert_config", "is_training", "is_training", "input_ids", "input_ids", "input_mask", "input_mask", "token_type_ids", "segment_ids", "use_one_hot_embeddings", "use_one_hot_embeddings"], ["output_layer", "model", "get_pooled_output"]], "one_hot_labels": [["one_hot_labels", "tf", "one_hot", "labels", "depth", "num_labels", "dtype", "tf", "float32"], ["per_example_loss", "tf", "reduce_sum", "one_hot_labels", "log_probs", "axis"]], "output_bias": [["output_bias", "tf", "get_variable", "num_labels", "initializer", "tf", "zeros_initializer"], ["logits", "tf", "nn", "bias_add", "logits", "output_bias"]], "output_layer": [["output_layer", "model", "get_pooled_output"], ["hidden_size", "output_layer", "shape", "value"], ["output_layer", "tf", "nn", "dropout", "output_layer", "keep_prob"], ["logits", "tf", "matmul", "output_layer", "output_weights", "transpose_b", "True"]], "output_weights": [["output_weights", "tf", "get_variable", "num_labels", "hidden_size", "initializer", "tf", "truncated_normal_initializer", "stddev"], ["logits", "tf", "matmul", "output_layer", "output_weights", "transpose_b", "True"]], "per_example_loss": [["per_example_loss", "tf", "reduce_sum", "one_hot_labels", "log_probs", "axis"], ["loss", "tf", "reduce_mean", "per_example_loss"], ["loss", "per_example_loss", "logits", "probabilities"]], "probabilities": [["probabilities", "tf", "nn", "softmax", "logits", "axis"], ["loss", "per_example_loss", "logits", "probabilities"]]}, "name": "create_model", "params": {"bert_config": "", "input_ids": "", "input_mask": "", "is_training": "", "labels": "", "num_labels": "", "segment_ids": "", "use_one_hot_embeddings": ""}, "params_descr": {"bert_config": "", "input_ids": "", "input_mask": "", "is_training": "", "labels": "", "num_labels": "", "segment_ids": "", "use_one_hot_embeddings": ""}, "params_occur": {"bert_config": [["model", "modeling", "BertModel", "config", "bert_config", "is_training", "is_training", "input_ids", "input_ids", "input_mask", "input_mask", "token_type_ids", "segment_ids", "use_one_hot_embeddings", "use_one_hot_embeddings"]], "input_ids": [["model", "modeling", "BertModel", "config", "bert_config", "is_training", "is_training", "input_ids", "input_ids", "input_mask", "input_mask", "token_type_ids", "segment_ids", "use_one_hot_embeddings", "use_one_hot_embeddings"]], "input_mask": [["model", "modeling", "BertModel", "config", "bert_config", "is_training", "is_training", "input_ids", "input_ids", "input_mask", "input_mask", "token_type_ids", "segment_ids", "use_one_hot_embeddings", "use_one_hot_embeddings"]], "is_training": [["model", "modeling", "BertModel", "config", "bert_config", "is_training", "is_training", "input_ids", "input_ids", "input_mask", "input_mask", "token_type_ids", "segment_ids", "use_one_hot_embeddings", "use_one_hot_embeddings"]], "labels": [["one_hot_labels", "tf", "one_hot", "labels", "depth", "num_labels", "dtype", "tf", "float32"]], "num_labels": [["output_weights", "tf", "get_variable", "num_labels", "hidden_size", "initializer", "tf", "truncated_normal_initializer", "stddev"], ["output_bias", "tf", "get_variable", "num_labels", "initializer", "tf", "zeros_initializer"], ["one_hot_labels", "tf", "one_hot", "labels", "depth", "num_labels", "dtype", "tf", "float32"]], "segment_ids": [["model", "modeling", "BertModel", "config", "bert_config", "is_training", "is_training", "input_ids", "input_ids", "input_mask", "input_mask", "token_type_ids", "segment_ids", "use_one_hot_embeddings", "use_one_hot_embeddings"]], "use_one_hot_embeddings": [["model", "modeling", "BertModel", "config", "bert_config", "is_training", "is_training", "input_ids", "input_ids", "input_mask", "input_mask", "token_type_ids", "segment_ids", "use_one_hot_embeddings", "use_one_hot_embeddings"]]}, "params_p": {"args": [], "bert_config": [], "input_ids": [], "input_mask": [], "is_training": [], "kwargs": [], "labels": [["str", 0.2865668278352814], ["int", 0.19240179032337], ["List[str]", 0.10985555342061087]], "num_labels": [["str", 0.3167334589156867], ["int", 0.25956548744358116], ["Optional[str]", 0.08082938224035387]], "segment_ids": [], "use_one_hot_embeddings": []}, "q_name": "create_model", "ret_exprs": ["return (loss, per_example_loss, logits, probabilities)"], "ret_type": "", "ret_type_p": [["int", 0.37932295097446284], ["Tuple[bytes]", 0.10897916784898352], ["Dict[str, Any]", 0.10897916784898352], ["str", 0.07629306173421999]], "variables": {"hidden_size": "", "log_probs": "", "logits": "", "loss": "", "model": "", "one_hot_labels": "", "output_bias": "", "output_layer": "", "output_weights": "", "per_example_loss": "", "probabilities": ""}, "variables_p": {"hidden_size": [["int", 0.8871505417144601]], "log_probs": [["int", 0.19475350512821873], ["bool", 0.14058684029052454], ["List[float]", 0.1088830086698001], ["list", 0.10521802120606284]], "logits": [["list", 0.31629391542620855], ["range", 0.1384134551024631], ["Dict[str, Any]", 0.08831567209435191]], "loss": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["csv.DictWriter", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "model": [["str", 0.13246504442469886]], "one_hot_labels": [["Pattern[str]", 0.26128318286376667], ["int", 0.2321215261283461], ["List[Tuple[int, Any]]", 0.0807199595957727]], "output_bias": [["List[int]", 0.20234812626886017], ["str", 0.18571017296338782], ["Dict[int, str]", 0.11864626638945773], ["bool", 0.1153664146853092], ["Dict[int, bytes]", 0.08965721100087028]], "output_layer": [["set", 0.16511883566639962], ["int", 0.113531037422755], ["List[float]", 0.07871838315962976]], "output_weights": [["int", 0.3898070667140235], ["str", 0.209246370177409], ["List[Tuple[str, Any]]", 0.10591133308118336], ["List[str]", 0.09558700256503075], ["Type[DefaultDict[int, Any]]", 0.09059020635350296]], "per_example_loss": [["List[str]", 0.15917498506368943], ["str", 0.14450230536416855], ["Type[str]", 0.11310685229629859], ["csv.DictWriter", 0.07101582361336403]], "probabilities": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["csv.DictWriter", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[655, 8], [657, 36]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "tpu_scaffold", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "model_fn_builder.<locals>.model_fn.<locals>.tpu_scaffold", "ret_exprs": ["return tf.train.Scaffold()"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[684, 6], [692, 9]], "fn_var_ln": {"accuracy": [[686, 8], [686, 16]], "loss": [[688, 8], [688, 12]], "predictions": [[685, 8], [685, 19]]}, "fn_var_occur": {"accuracy": [["accuracy", "tf", "metrics", "accuracy", "labels", "label_ids", "predictions", "predictions", "weights", "is_real_example"], ["accuracy", "loss"]], "loss": [["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "loss", "total_loss", "train_op", "train_op", "scaffold_fn", "scaffold_fn"], ["loss", "tf", "metrics", "mean", "values", "per_example_loss", "weights", "is_real_example"], ["accuracy", "loss"]], "predictions": [["predictions", "tf", "argmax", "logits", "axis", "output_type", "tf", "int32"], ["accuracy", "tf", "metrics", "accuracy", "labels", "label_ids", "predictions", "predictions", "weights", "is_real_example"]]}, "name": "metric_fn", "params": {"is_real_example": "", "label_ids": "", "logits": "", "per_example_loss": ""}, "params_descr": {"is_real_example": "", "label_ids": "", "logits": "", "per_example_loss": ""}, "params_occur": {"is_real_example": [["accuracy", "tf", "metrics", "accuracy", "labels", "label_ids", "predictions", "predictions", "weights", "is_real_example"], ["loss", "tf", "metrics", "mean", "values", "per_example_loss", "weights", "is_real_example"]], "label_ids": [["accuracy", "tf", "metrics", "accuracy", "labels", "label_ids", "predictions", "predictions", "weights", "is_real_example"]], "logits": [["predictions", "tf", "argmax", "logits", "axis", "output_type", "tf", "int32"]], "per_example_loss": [["loss", "tf", "metrics", "mean", "values", "per_example_loss", "weights", "is_real_example"]]}, "params_p": {"args": [], "is_real_example": [["str", 0.28392029667599417], ["int", 0.19174372728862088]], "kwargs": [], "label_ids": [["str", 0.30856487896932516], ["int", 0.30234223096629287]], "logits": [["str", 0.8089368597513807]], "per_example_loss": [["int", 0.4131411059021987], ["bytes", 0.21475011187465118], ["Dict[str, Any]", 0.09468172127157802]]}, "q_name": "model_fn_builder.<locals>.model_fn.<locals>.metric_fn", "ret_exprs": ["return { \"eval_accuracy\": accuracy, \"eval_loss\": loss,}"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"accuracy": "", "loss": "", "predictions": ""}, "variables_p": {"accuracy": [["str", 0.27038973555906576], ["list", 0.10471325720361974], ["Dict[Any, str]", 0.0914711429319913], ["int", 0.08774813616008313]], "loss": [["str", 5.487060028804559e-11], ["int", 3.0383651764605475e-11], ["List[Tuple[int, int]]", 1.510689345148451e-11], ["List[str]", 1.4364996824581076e-11], ["Set[str]", 1.3865284998225552e-11]], "predictions": [["list", 0.10446271034499888], ["float", 0.09523396442051801], ["int", 0.09453159251827332]]}}, {"docstring": {"func": "The `model_fn` for TPUEstimator.", "long_descr": null, "ret": null}, "fn_lc": [[624, 2], [706, 22]], "fn_var_ln": {"assignment_map": [[651, 7], [651, 21]], "eval_metrics": [[694, 6], [694, 18]], "init_string": [[667, 8], [667, 19]], "initialized_variable_names": [[651, 23], [651, 49]], "input_ids": [[631, 4], [631, 13]], "input_mask": [[632, 4], [632, 14]], "is_real_example": [[639, 6], [639, 21]], "is_training": [[641, 4], [641, 15]], "label_ids": [[634, 4], [634, 13]], "logits": [[643, 35], [643, 41]], "output_spec": [[702, 6], [702, 17]], "per_example_loss": [[643, 17], [643, 33]], "probabilities": [[643, 43], [643, 56]], "scaffold_fn": [[659, 8], [659, 19]], "segment_ids": [[633, 4], [633, 15]], "total_loss": [[643, 5], [643, 15]], "train_op": [[674, 6], [674, 14]], "tvars": [[647, 4], [647, 9]]}, "fn_var_occur": {"assignment_map": [], "eval_metrics": [["eval_metrics", "metric_fn", "per_example_loss", "label_ids", "logits", "is_real_example"], ["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "loss", "total_loss", "eval_metrics", "eval_metrics", "scaffold_fn", "scaffold_fn"]], "init_string": [], "initialized_variable_names": [], "input_ids": [], "input_mask": [], "is_real_example": [["eval_metrics", "metric_fn", "per_example_loss", "label_ids", "logits", "is_real_example"]], "is_training": [], "label_ids": [["eval_metrics", "metric_fn", "per_example_loss", "label_ids", "logits", "is_real_example"]], "logits": [["eval_metrics", "metric_fn", "per_example_loss", "label_ids", "logits", "is_real_example"]], "output_spec": [["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "loss", "total_loss", "eval_metrics", "eval_metrics", "scaffold_fn", "scaffold_fn"], ["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "predictions", "probabilities", "scaffold_fn", "scaffold_fn"]], "per_example_loss": [["eval_metrics", "metric_fn", "per_example_loss", "label_ids", "logits", "is_real_example"]], "probabilities": [["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "predictions", "probabilities", "scaffold_fn", "scaffold_fn"]], "scaffold_fn": [["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "loss", "total_loss", "eval_metrics", "eval_metrics", "scaffold_fn", "scaffold_fn"], ["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "predictions", "probabilities", "scaffold_fn", "scaffold_fn"]], "segment_ids": [], "total_loss": [["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "loss", "total_loss", "eval_metrics", "eval_metrics", "scaffold_fn", "scaffold_fn"]], "train_op": [], "tvars": []}, "name": "model_fn", "params": {"features": "", "labels": "", "mode": "", "params": ""}, "params_descr": {"features": "", "labels": "", "mode": "", "params": ""}, "params_occur": {"features": [], "labels": [], "mode": [["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "loss", "total_loss", "eval_metrics", "eval_metrics", "scaffold_fn", "scaffold_fn"], ["output_spec", "tf", "contrib", "tpu", "TPUEstimatorSpec", "mode", "mode", "predictions", "probabilities", "scaffold_fn", "scaffold_fn"]], "params": []}, "params_p": {"args": [], "features": [["str", 0.3333333332913216], ["Dict[str, tensorflow.Tensor]", 0.33333333326614006], ["tensorflow.Tensor", 0.33333333326614006], ["bool", 1.0467246626985074e-10], ["List[dict]", 3.5414203485342744e-11]], "kwargs": [], "labels": [["str", 0.3333333332913216], ["Dict[str, tensorflow.Tensor]", 0.33333333326614006], ["tensorflow.Tensor", 0.33333333326614006], ["bool", 1.0467246626985074e-10], ["List[dict]", 3.5414203485342744e-11]], "mode": [["bytes", 0.11133190409188903], ["List[str]", 0.10292934609924814], ["str", 0.10137785653346038], ["int", 0.09331553659982791], ["bool", 0.09103927553235866]], "params": [["str", 0.3333333332913216], ["Dict[str, tensorflow.Tensor]", 0.33333333326614006], ["tensorflow.Tensor", 0.33333333326614006], ["bool", 1.0467246626985074e-10], ["List[dict]", 3.5414203485342744e-11]]}, "q_name": "model_fn_builder.<locals>.model_fn", "ret_exprs": ["return output_spec"], "ret_type": "", "ret_type_p": [["str", 0.6256956291922424], ["Optional[str]", 0.10807271365816276], ["Set[str]", 0.10048801147829596], ["Dict[str, str]", 0.0841487131975795], ["int", 0.08159493247371935]], "variables": {"assignment_map": "", "eval_metrics": "", "init_string": "", "initialized_variable_names": "", "input_ids": "", "input_mask": "", "is_real_example": "", "is_training": "", "label_ids": "", "logits": "", "output_spec": "", "per_example_loss": "", "probabilities": "", "scaffold_fn": "", "segment_ids": "", "total_loss": "", "train_op": "", "tvars": ""}, "variables_p": {"assignment_map": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "eval_metrics": [["Tuple[Literal]", 0.11065116813561095]], "init_string": [["int", 0.6], ["str", 0.30000000000000004], ["list", 0.1]], "initialized_variable_names": [["list", 0.24999999945293058], ["Optional[Match[str]]", 0.24999999945293058], ["str", 1.885659670064516e-09], ["List[str]", 3.0261803458856793e-10]], "input_ids": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]], "input_mask": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "is_real_example": [["str", 0.3164119534325797], ["bool", 0.19184413935928696], ["Optional[int]", 0.10547065114419324], ["List[str]", 0.10547065114419324], ["int", 0.10288567379882704], ["Dict[str, Tuple[str, int, int]]", 0.08895846556045992], ["Dict[str, Tuple[str, str, Any]]", 0.08895846556045992]], "is_training": [["bool", 0.6], ["int", 0.2]], "label_ids": [["str", 0.7730264681218272], ["int", 0.08140812907454877]], "logits": [["Tuple[Literal]", 5.113883403483825e-11], ["int", 3.654241021491155e-11], ["str", 3.654241021491155e-11]], "output_spec": [["List[str]", 0.41182584662461447], ["bool", 0.09233998708529365], ["Iterator[str]", 0.08719324220170128], ["Dict[str, int]", 0.08127481723546252], ["Dict[str, str]", 0.06739998928500265]], "per_example_loss": [["Tuple[Literal]", 5.113883403483825e-11], ["int", 3.654241021491155e-11], ["str", 3.654241021491155e-11]], "probabilities": [["str", 5.487060028804559e-11], ["int", 3.0383651764605475e-11], ["List[Tuple[int, int]]", 1.510689345148451e-11], ["List[str]", 1.4364996824581076e-11], ["Set[str]", 1.3865284998225552e-11]], "scaffold_fn": [["str", 5.487060028804559e-11], ["int", 3.0383651764605475e-11], ["List[Tuple[int, int]]", 1.510689345148451e-11], ["List[str]", 1.4364996824581076e-11], ["Set[str]", 1.3865284998225552e-11]], "segment_ids": [["Optional[str]", 0.09999999999999999], ["int", 0.09999999999999999], ["List[int]", 0.09999999999999999]], "total_loss": [["str", 5.487060028804559e-11], ["int", 3.0383651764605475e-11], ["List[Tuple[int, int]]", 1.510689345148451e-11], ["List[str]", 1.4364996824581076e-11], ["Set[str]", 1.3865284998225552e-11]], "train_op": [["int", 0.9999999999999999]], "tvars": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]]}}, {"docstring": {"func": "Returns `model_fn` closure for TPUEstimator.", "long_descr": null, "ret": null}, "fn_lc": [[619, 0], [708, 17]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "model_fn_builder", "params": {"bert_config": "", "init_checkpoint": "", "learning_rate": "", "num_labels": "", "num_train_steps": "", "num_warmup_steps": "", "use_one_hot_embeddings": "", "use_tpu": ""}, "params_descr": {"bert_config": "", "init_checkpoint": "", "learning_rate": "", "num_labels": "", "num_train_steps": "", "num_warmup_steps": "", "use_one_hot_embeddings": "", "use_tpu": ""}, "params_occur": {"bert_config": [], "init_checkpoint": [], "learning_rate": [], "num_labels": [], "num_train_steps": [], "num_warmup_steps": [], "use_one_hot_embeddings": [], "use_tpu": []}, "params_p": {"args": [], "bert_config": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]], "init_checkpoint": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]], "kwargs": [], "learning_rate": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]], "num_labels": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]], "num_train_steps": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]], "num_warmup_steps": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]], "use_one_hot_embeddings": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]], "use_tpu": [["str", 0.28742822300567344], ["bool", 0.18538441564157118], ["List[Tuple[str, int]]", 0.10669901640509886], ["dict", 0.09363877302194434], ["Mapping[str, Any]", 0.07239687128185313]]}, "q_name": "model_fn_builder", "ret_exprs": ["return model_fn"], "ret_type": "", "ret_type_p": [], "variables": {}, "variables_p": {}}, {"docstring": {"func": "The actual input function.", "long_descr": null, "ret": null}, "fn_lc": [[727, 2], [760, 12]], "fn_var_ln": {"batch_size": [[729, 4], [729, 14]], "d": [[759, 4], [759, 5]], "num_examples": [[731, 4], [731, 16]]}, "fn_var_occur": {"batch_size": [["batch_size", "params"], ["d", "d", "batch", "batch_size", "batch_size", "drop_remainder", "drop_remainder"]], "d": [["d", "tf", "data", "Dataset", "from_tensor_slices", "tf", "constant", "all_input_ids", "shape", "num_examples", "seq_length", "dtype", "tf", "int32", "tf", "constant", "all_input_mask", "shape", "num_examples", "seq_length", "dtype", "tf", "int32", "tf", "constant", "all_segment_ids", "shape", "num_examples", "seq_length", "dtype", "tf", "int32", "tf", "constant", "all_label_ids", "shape", "num_examples", "dtype", "tf", "int32"], ["d", "d", "repeat"], ["d", "d", "shuffle", "buffer_size"], ["d", "d", "batch", "batch_size", "batch_size", "drop_remainder", "drop_remainder"]], "num_examples": [["num_examples", "len", "features"], ["d", "tf", "data", "Dataset", "from_tensor_slices", "tf", "constant", "all_input_ids", "shape", "num_examples", "seq_length", "dtype", "tf", "int32", "tf", "constant", "all_input_mask", "shape", "num_examples", "seq_length", "dtype", "tf", "int32", "tf", "constant", "all_segment_ids", "shape", "num_examples", "seq_length", "dtype", "tf", "int32", "tf", "constant", "all_label_ids", "shape", "num_examples", "dtype", "tf", "int32"]]}, "name": "input_fn", "params": {"params": ""}, "params_descr": {"params": ""}, "params_occur": {"params": [["batch_size", "params"]]}, "params_p": {"args": [], "kwargs": [], "params": [["float", 0.4999999998944645], ["int", 5.3667308480448e-11], ["List[Tuple[int, int]]", 2.218973759525547e-11]]}, "q_name": "input_fn_builder.<locals>.input_fn", "ret_exprs": ["return d"], "ret_type": "", "ret_type_p": [["dict", 0.2155356325793273], ["Dict[str, bool]", 0.20233908460619224], ["Union[Dict, str]", 0.10244554214035077], ["Dict[str, Any]", 0.09693415778986708], ["int", 0.0959184973223934]], "variables": {"batch_size": "", "d": "", "num_examples": ""}, "variables_p": {"batch_size": [["int", 0.48649820912846425], ["List[int]", 0.2178358829478565], ["Final", 0.11102618575134096], ["Dict[str, int]", 0.09315212549978028], ["float", 0.09148759667255807]], "d": [["List[int]", 0.14861541272658702], ["float", 0.11195878943113388]], "num_examples": [["int", 0.3748166732048572], ["str", 0.26128626445044845], ["List[str]", 0.1017161177119962], ["list", 0.08854821121627922], ["Dict[str, Any]", 0.08587245779949823]]}}, {"docstring": {"func": "Creates an `input_fn` closure to be passed to TPUEstimator.", "long_descr": null, "ret": null}, "fn_lc": [[713, 0], [762, 17]], "fn_var_ln": {"all_input_ids": [[716, 2], [716, 15]], "all_input_mask": [[717, 2], [717, 16]], "all_label_ids": [[719, 2], [719, 15]], "all_segment_ids": [[718, 2], [718, 17]]}, "fn_var_occur": {"all_input_ids": [], "all_input_mask": [], "all_label_ids": [], "all_segment_ids": []}, "name": "input_fn_builder", "params": {"drop_remainder": "", "features": "", "is_training": "", "seq_length": ""}, "params_descr": {"drop_remainder": "", "features": "", "is_training": "", "seq_length": ""}, "params_occur": {"drop_remainder": [], "features": [], "is_training": [], "seq_length": []}, "params_p": {"args": [], "drop_remainder": [["bool", 1.0]], "features": [["bool", 1.0]], "is_training": [["bool", 1.0]], "kwargs": [], "seq_length": [["bool", 1.0]]}, "q_name": "input_fn_builder", "ret_exprs": ["return input_fn"], "ret_type": "", "ret_type_p": [["Sequence", 0.0954529807059512], ["str", 0.09128778041179392], ["Callable[[T], bool]", 0.09108460492370701]], "variables": {"all_input_ids": "", "all_input_mask": "", "all_label_ids": "", "all_segment_ids": ""}, "variables_p": {"all_input_ids": [["list", 0.9999999997627793], ["int", 8.959228263085052e-11], ["Dict[str, str]", 3.227918511870714e-11], ["List[str]", 2.2925552192659748e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 2.2925552192659748e-11], ["float", 2.2925552192659748e-11]], "all_input_mask": [["List[str]", 0.7999999999999999], ["Tuple[str]", 0.09999999999999999], ["Tuple[str, str, str]", 0.09999999999999999]], "all_label_ids": [["list", 0.9999999918021258], ["Optional[str]", 2.7326246999888797e-09], ["str", 2.7326246999888797e-09], ["int", 9.108748999962932e-10]], "all_segment_ids": [["list", 0.9999999997627793], ["int", 8.959228263085052e-11], ["Dict[str, str]", 3.227918511870714e-11], ["List[str]", 2.2925552192659748e-11], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 2.2925552192659748e-11], ["float", 2.2925552192659748e-11]]}}, {"docstring": {"func": "Convert a set of `InputExample`s to a list of `InputFeatures`.", "long_descr": null, "ret": null}, "fn_lc": [[767, 0], [780, 17]], "fn_var_ln": {"feature": [[776, 4], [776, 11]], "features": [[771, 2], [771, 10]]}, "fn_var_occur": {"feature": [["feature", "convert_single_example", "ex_index", "example", "label_list", "max_seq_length", "tokenizer"], ["features", "append", "feature"]], "features": [["features", "append", "feature"]]}, "name": "convert_examples_to_features", "params": {"examples": "", "label_list": "", "max_seq_length": "", "tokenizer": ""}, "params_descr": {"examples": "", "label_list": "", "max_seq_length": "", "tokenizer": ""}, "params_occur": {"examples": [["enumerate", "examples"], ["tf", "logging", "info", "ex_index", "len", "examples"]], "label_list": [["feature", "convert_single_example", "ex_index", "example", "label_list", "max_seq_length", "tokenizer"]], "max_seq_length": [["feature", "convert_single_example", "ex_index", "example", "label_list", "max_seq_length", "tokenizer"]], "tokenizer": [["feature", "convert_single_example", "ex_index", "example", "label_list", "max_seq_length", "tokenizer"]]}, "params_p": {"args": [], "examples": [["str", 0.29791601206747825], ["int", 0.10832119259739295]], "kwargs": [], "label_list": [["tuple", 0.10439835159941957], ["List[Tuple[int, int]]", 0.09686371147087668], ["Tuple[int, int]", 0.09686371147087668], ["Iterable[str]", 0.09381871491652136], ["Sequence[T]", 0.09031077187603742]], "max_seq_length": [["tuple", 0.10439835159941957], ["List[Tuple[int, int]]", 0.09686371147087668], ["Tuple[int, int]", 0.09686371147087668], ["Iterable[str]", 0.09381871491652136], ["Sequence[T]", 0.09031077187603742]], "tokenizer": [["tuple", 0.10439835159941957], ["List[Tuple[int, int]]", 0.09686371147087668], ["Tuple[int, int]", 0.09686371147087668], ["Iterable[str]", 0.09381871491652136], ["Sequence[T]", 0.09031077187603742]]}, "q_name": "convert_examples_to_features", "ret_exprs": ["return features"], "ret_type": "", "ret_type_p": [["str", 0.499999997187741], ["Union[int, float]", 0.499999997187741], ["int", 3.5919497255188037e-09], ["List[int]", 5.284757530932018e-10]], "variables": {"feature": "", "features": ""}, "variables_p": {"feature": [["List[int]", 0.19705904913994593], ["float", 0.18702214895095873], ["List[str]", 0.09705290918448621], ["int", 0.08974648306510356], ["List[float]", 0.08972819339266519], ["list", 0.08972160541183301]], "features": [["list", 0.4], ["Generator[Any, None, None]", 0.1], ["List[Tuple[int, int]]", 0.1], ["str", 0.1], ["float", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[783, 0], [972, 59]], "fn_var_ln": {"bert_config": [[800, 2], [800, 13]], "estimator": [[859, 2], [859, 11]], "eval_drop_remainder": [[912, 4], [912, 23]], "eval_examples": [[883, 4], [883, 17]], "eval_file": [[894, 4], [894, 13]], "eval_input_fn": [[913, 4], [913, 17]], "eval_steps": [[910, 6], [910, 16]], "is_per_host": [[827, 2], [827, 13]], "label_list": [[817, 2], [817, 12]], "model_fn": [[847, 2], [847, 10]], "num_actual_eval_examples": [[884, 4], [884, 28]], "num_actual_predict_examples": [[930, 4], [930, 31]], "num_train_steps": [[843, 4], [843, 19]], "num_warmup_steps": [[845, 4], [845, 20]], "num_written_lines": [[961, 6], [961, 23]], "output_eval_file": [[921, 4], [921, 20]], "output_line": [[967, 8], [967, 19]], "output_predict_file": [[959, 4], [959, 23]], "predict_drop_remainder": [[950, 4], [950, 26]], "predict_examples": [[929, 4], [929, 20]], "predict_file": [[939, 4], [939, 16]], "predict_input_fn": [[951, 4], [951, 20]], "probabilities": [[964, 8], [964, 21]], "processor": [[815, 2], [815, 11]], "processors": [[786, 2], [786, 12]], "result": [[957, 4], [957, 10]], "run_config": [[828, 2], [828, 12]], "task_name": [[810, 2], [810, 11]], "tokenizer": [[819, 2], [819, 11]], "tpu_cluster_resolver": [[824, 4], [824, 24]], "train_examples": [[842, 4], [842, 18]], "train_file": [[868, 4], [868, 14]], "train_input_fn": [[875, 4], [875, 18]]}, "fn_var_occur": {"bert_config": [["bert_config", "modeling", "BertConfig", "from_json_file", "FLAGS", "bert_config_file"], ["FLAGS", "max_seq_length", "bert_config", "max_position_embeddings"], ["ValueError", "FLAGS", "max_seq_length", "bert_config", "max_position_embeddings"], ["model_fn", "model_fn_builder", "bert_config", "bert_config", "num_labels", "len", "label_list", "init_checkpoint", "FLAGS", "init_checkpoint", "learning_rate", "FLAGS", "learning_rate", "num_train_steps", "num_train_steps", "num_warmup_steps", "num_warmup_steps", "use_tpu", "FLAGS", "use_tpu", "use_one_hot_embeddings", "FLAGS", "use_tpu"]], "estimator": [["estimator", "tf", "contrib", "tpu", "TPUEstimator", "use_tpu", "FLAGS", "use_tpu", "model_fn", "model_fn", "config", "run_config", "train_batch_size", "FLAGS", "train_batch_size", "eval_batch_size", "FLAGS", "eval_batch_size", "predict_batch_size", "FLAGS", "predict_batch_size"], ["estimator", "train", "input_fn", "train_input_fn", "max_steps", "num_train_steps"], ["result", "estimator", "evaluate", "input_fn", "eval_input_fn", "steps", "eval_steps"], ["result", "estimator", "predict", "input_fn", "predict_input_fn"]], "eval_drop_remainder": [["eval_drop_remainder", "True", "FLAGS", "use_tpu", "False"], ["eval_input_fn", "file_based_input_fn_builder", "input_file", "eval_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "eval_drop_remainder"]], "eval_examples": [["eval_examples", "processor", "get_dev_examples", "FLAGS", "data_dir"], ["num_actual_eval_examples", "len", "eval_examples"], ["len", "eval_examples", "FLAGS", "eval_batch_size"], ["eval_examples", "append", "PaddingInputExample"], ["file_based_convert_examples_to_features", "eval_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "eval_file"], ["tf", "logging", "info", "len", "eval_examples", "num_actual_eval_examples", "len", "eval_examples", "num_actual_eval_examples"], ["len", "eval_examples", "FLAGS", "eval_batch_size"], ["eval_steps", "int", "len", "eval_examples", "FLAGS", "eval_batch_size"]], "eval_file": [["eval_file", "os", "path", "join", "FLAGS", "output_dir"], ["file_based_convert_examples_to_features", "eval_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "eval_file"], ["eval_input_fn", "file_based_input_fn_builder", "input_file", "eval_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "eval_drop_remainder"]], "eval_input_fn": [["eval_input_fn", "file_based_input_fn_builder", "input_file", "eval_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "eval_drop_remainder"], ["result", "estimator", "evaluate", "input_fn", "eval_input_fn", "steps", "eval_steps"]], "eval_steps": [["eval_steps", "None"], ["eval_steps", "int", "len", "eval_examples", "FLAGS", "eval_batch_size"], ["result", "estimator", "evaluate", "input_fn", "eval_input_fn", "steps", "eval_steps"]], "is_per_host": [["is_per_host", "tf", "contrib", "tpu", "InputPipelineConfig", "PER_HOST_V2"], ["run_config", "tf", "contrib", "tpu", "RunConfig", "cluster", "tpu_cluster_resolver", "master", "FLAGS", "master", "model_dir", "FLAGS", "output_dir", "save_checkpoints_steps", "FLAGS", "save_checkpoints_steps", "tpu_config", "tf", "contrib", "tpu", "TPUConfig", "iterations_per_loop", "FLAGS", "iterations_per_loop", "num_shards", "FLAGS", "num_tpu_cores", "per_host_input_for_training", "is_per_host"]], "label_list": [["label_list", "processor", "get_labels"], ["model_fn", "model_fn_builder", "bert_config", "bert_config", "num_labels", "len", "label_list", "init_checkpoint", "FLAGS", "init_checkpoint", "learning_rate", "FLAGS", "learning_rate", "num_train_steps", "num_train_steps", "num_warmup_steps", "num_warmup_steps", "use_tpu", "FLAGS", "use_tpu", "use_one_hot_embeddings", "FLAGS", "use_tpu"], ["file_based_convert_examples_to_features", "train_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "train_file"], ["file_based_convert_examples_to_features", "eval_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "eval_file"], ["file_based_convert_examples_to_features", "predict_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "predict_file"]], "model_fn": [["model_fn", "model_fn_builder", "bert_config", "bert_config", "num_labels", "len", "label_list", "init_checkpoint", "FLAGS", "init_checkpoint", "learning_rate", "FLAGS", "learning_rate", "num_train_steps", "num_train_steps", "num_warmup_steps", "num_warmup_steps", "use_tpu", "FLAGS", "use_tpu", "use_one_hot_embeddings", "FLAGS", "use_tpu"], ["estimator", "tf", "contrib", "tpu", "TPUEstimator", "use_tpu", "FLAGS", "use_tpu", "model_fn", "model_fn", "config", "run_config", "train_batch_size", "FLAGS", "train_batch_size", "eval_batch_size", "FLAGS", "eval_batch_size", "predict_batch_size", "FLAGS", "predict_batch_size"]], "num_actual_eval_examples": [["num_actual_eval_examples", "len", "eval_examples"], ["tf", "logging", "info", "len", "eval_examples", "num_actual_eval_examples", "len", "eval_examples", "num_actual_eval_examples"]], "num_actual_predict_examples": [["num_actual_predict_examples", "len", "predict_examples"], ["tf", "logging", "info", "len", "predict_examples", "num_actual_predict_examples", "len", "predict_examples", "num_actual_predict_examples"], ["i", "num_actual_predict_examples"], ["num_written_lines", "num_actual_predict_examples"]], "num_train_steps": [["num_train_steps", "None"], ["num_train_steps", "int", "len", "train_examples", "FLAGS", "train_batch_size", "FLAGS", "num_train_epochs"], ["num_warmup_steps", "int", "num_train_steps", "FLAGS", "warmup_proportion"], ["model_fn", "model_fn_builder", "bert_config", "bert_config", "num_labels", "len", "label_list", "init_checkpoint", "FLAGS", "init_checkpoint", "learning_rate", "FLAGS", "learning_rate", "num_train_steps", "num_train_steps", "num_warmup_steps", "num_warmup_steps", "use_tpu", "FLAGS", "use_tpu", "use_one_hot_embeddings", "FLAGS", "use_tpu"], ["tf", "logging", "info", "num_train_steps"], ["estimator", "train", "input_fn", "train_input_fn", "max_steps", "num_train_steps"]], "num_warmup_steps": [["num_warmup_steps", "None"], ["num_warmup_steps", "int", "num_train_steps", "FLAGS", "warmup_proportion"], ["model_fn", "model_fn_builder", "bert_config", "bert_config", "num_labels", "len", "label_list", "init_checkpoint", "FLAGS", "init_checkpoint", "learning_rate", "FLAGS", "learning_rate", "num_train_steps", "num_train_steps", "num_warmup_steps", "num_warmup_steps", "use_tpu", "FLAGS", "use_tpu", "use_one_hot_embeddings", "FLAGS", "use_tpu"]], "num_written_lines": [["num_written_lines", "num_actual_predict_examples"]], "output_eval_file": [["output_eval_file", "os", "path", "join", "FLAGS", "output_dir"], ["tf", "gfile", "GFile", "output_eval_file", "writer"]], "output_line": [["output_line", "join", "str", "class_probability", "class_probability", "probabilities"], ["writer", "write", "output_line"]], "output_predict_file": [["output_predict_file", "os", "path", "join", "FLAGS", "output_dir"], ["tf", "gfile", "GFile", "output_predict_file", "writer"]], "predict_drop_remainder": [["predict_drop_remainder", "True", "FLAGS", "use_tpu", "False"], ["predict_input_fn", "file_based_input_fn_builder", "input_file", "predict_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "predict_drop_remainder"]], "predict_examples": [["predict_examples", "processor", "get_test_examples", "FLAGS", "data_dir"], ["num_actual_predict_examples", "len", "predict_examples"], ["len", "predict_examples", "FLAGS", "predict_batch_size"], ["predict_examples", "append", "PaddingInputExample"], ["file_based_convert_examples_to_features", "predict_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "predict_file"], ["tf", "logging", "info", "len", "predict_examples", "num_actual_predict_examples", "len", "predict_examples", "num_actual_predict_examples"]], "predict_file": [["predict_file", "os", "path", "join", "FLAGS", "output_dir"], ["file_based_convert_examples_to_features", "predict_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "predict_file"], ["predict_input_fn", "file_based_input_fn_builder", "input_file", "predict_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "predict_drop_remainder"]], "predict_input_fn": [["predict_input_fn", "file_based_input_fn_builder", "input_file", "predict_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "predict_drop_remainder"], ["result", "estimator", "predict", "input_fn", "predict_input_fn"]], "probabilities": [["probabilities", "prediction"], ["output_line", "join", "str", "class_probability", "class_probability", "probabilities"]], "processor": [["processor", "processors", "task_name"], ["label_list", "processor", "get_labels"], ["train_examples", "processor", "get_train_examples", "FLAGS", "data_dir"], ["eval_examples", "processor", "get_dev_examples", "FLAGS", "data_dir"], ["predict_examples", "processor", "get_test_examples", "FLAGS", "data_dir"]], "processors": [["processors", "ColaProcessor", "MnliProcessor", "MrpcProcessor", "XnliProcessor"], ["task_name", "processors"], ["processor", "processors", "task_name"]], "result": [["result", "estimator", "evaluate", "input_fn", "eval_input_fn", "steps", "eval_steps"], ["sorted", "result", "keys"], ["tf", "logging", "info", "key", "str", "result", "key"], ["writer", "write", "key", "str", "result", "key"], ["result", "estimator", "predict", "input_fn", "predict_input_fn"], ["enumerate", "result"]], "run_config": [["run_config", "tf", "contrib", "tpu", "RunConfig", "cluster", "tpu_cluster_resolver", "master", "FLAGS", "master", "model_dir", "FLAGS", "output_dir", "save_checkpoints_steps", "FLAGS", "save_checkpoints_steps", "tpu_config", "tf", "contrib", "tpu", "TPUConfig", "iterations_per_loop", "FLAGS", "iterations_per_loop", "num_shards", "FLAGS", "num_tpu_cores", "per_host_input_for_training", "is_per_host"], ["estimator", "tf", "contrib", "tpu", "TPUEstimator", "use_tpu", "FLAGS", "use_tpu", "model_fn", "model_fn", "config", "run_config", "train_batch_size", "FLAGS", "train_batch_size", "eval_batch_size", "FLAGS", "eval_batch_size", "predict_batch_size", "FLAGS", "predict_batch_size"]], "task_name": [["task_name", "FLAGS", "task_name", "lower"], ["task_name", "processors"], ["ValueError", "task_name"], ["processor", "processors", "task_name"]], "tokenizer": [["tokenizer", "tokenization", "FullTokenizer", "vocab_file", "FLAGS", "vocab_file", "do_lower_case", "FLAGS", "do_lower_case"], ["file_based_convert_examples_to_features", "train_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "train_file"], ["file_based_convert_examples_to_features", "eval_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "eval_file"], ["file_based_convert_examples_to_features", "predict_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "predict_file"]], "tpu_cluster_resolver": [["tpu_cluster_resolver", "None"], ["tpu_cluster_resolver", "tf", "contrib", "cluster_resolver", "TPUClusterResolver", "FLAGS", "tpu_name", "zone", "FLAGS", "tpu_zone", "project", "FLAGS", "gcp_project"], ["run_config", "tf", "contrib", "tpu", "RunConfig", "cluster", "tpu_cluster_resolver", "master", "FLAGS", "master", "model_dir", "FLAGS", "output_dir", "save_checkpoints_steps", "FLAGS", "save_checkpoints_steps", "tpu_config", "tf", "contrib", "tpu", "TPUConfig", "iterations_per_loop", "FLAGS", "iterations_per_loop", "num_shards", "FLAGS", "num_tpu_cores", "per_host_input_for_training", "is_per_host"]], "train_examples": [["train_examples", "None"], ["train_examples", "processor", "get_train_examples", "FLAGS", "data_dir"], ["num_train_steps", "int", "len", "train_examples", "FLAGS", "train_batch_size", "FLAGS", "num_train_epochs"], ["file_based_convert_examples_to_features", "train_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "train_file"], ["tf", "logging", "info", "len", "train_examples"]], "train_file": [["train_file", "os", "path", "join", "FLAGS", "output_dir"], ["file_based_convert_examples_to_features", "train_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "train_file"], ["train_input_fn", "file_based_input_fn_builder", "input_file", "train_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "True", "drop_remainder", "True"]], "train_input_fn": [["train_input_fn", "file_based_input_fn_builder", "input_file", "train_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "True", "drop_remainder", "True"], ["estimator", "train", "input_fn", "train_input_fn", "max_steps", "num_train_steps"]]}, "name": "main", "params": {"_": ""}, "params_descr": {"_": ""}, "params_occur": {"_": []}, "params_p": {"_": [["List[str]", 0.49999999999999994], ["bool", 0.3], ["Optional[Sequence[str]]", 0.09999999999999999], ["Optional[List[str]]", 0.09999999999999999]], "args": [], "kwargs": []}, "q_name": "main", "ret_exprs": [], "ret_type": "", "variables": {"bert_config": "", "estimator": "", "eval_drop_remainder": "", "eval_examples": "", "eval_file": "", "eval_input_fn": "", "eval_steps": "", "is_per_host": "", "label_list": "", "model_fn": "", "num_actual_eval_examples": "", "num_actual_predict_examples": "", "num_train_steps": "", "num_warmup_steps": "", "num_written_lines": "", "output_eval_file": "", "output_line": "", "output_predict_file": "", "predict_drop_remainder": "", "predict_examples": "", "predict_file": "", "predict_input_fn": "", "probabilities": "", "processor": "", "processors": "", "result": "", "run_config": "", "task_name": "", "tokenizer": "", "tpu_cluster_resolver": "", "train_examples": "", "train_file": "", "train_input_fn": ""}, "variables_p": {"bert_config": [["Dict[str, str]", 0.566944885081446], ["Tuple[str]", 0.12620392835935715], ["str", 0.11882034199162697], ["Dict[str, Union[str, Any]]", 0.0962036427680407], ["Dict[str, Dict[str, str]]", 0.09182720179952915]], "estimator": [], "eval_drop_remainder": [["str", 0.8084222225710183], ["List[str]", 0.1024753768808493], ["Dict[str, int]", 0.08910240054813248]], "eval_examples": [["List[str]", 0.23250914514059237], ["list", 0.19619601254972568], ["dict", 0.18476272314665623], ["str", 0.0973260882533042], ["Dict[str, Callable[[], Any]]", 0.09485823096455102]], "eval_file": [["str", 0.7715081998195492]], "eval_input_fn": [["list", 0.2224304807506884], ["bytes", 0.19167779356538645], ["int", 0.11883560685948283]], "eval_steps": [["int", 0.5577411642922949], ["List[Tuple[int]]", 0.2022615330694171], ["float", 0.08207797773907774], ["str", 0.08001522564478285], ["SupportsInt", 0.0779040992544275]], "is_per_host": [["bool", 0.13231291267795825]], "label_list": [["nevergrad.optimization.multiobjective.hypervolume.VectorLinkedList", 0.25025945372172664], ["List[Dict[str, str]]", 0.11615307761574824], ["Iterator[None]", 0.09606495974810307], ["str", 0.09542776162725161], ["List[Union[Any, Any]]", 0.09463256844419476], ["list", 0.08840731676070672], ["List[Dict[str, object]]", 0.08550686875479295], ["List[OrderedDict[str, Any]]", 0.08549335052418226]], "model_fn": [], "num_actual_eval_examples": [["int", 0.7284811148061802], ["List[int]", 0.27151888519381995]], "num_actual_predict_examples": [["int", 0.7284811148061802], ["List[int]", 0.27151888519381995]], "num_train_steps": [["int", 0.7253620127688799], ["float", 0.11678480954359803], ["str", 0.08514986791231526]], "num_warmup_steps": [["Optional[int]", 0.46175106980930847], ["int", 0.2982555166000527], ["List[None]", 0.23999341359063872]], "num_written_lines": [["int", 0.8740774477739384], ["Dict[str, int]", 0.12592255222606158]], "output_eval_file": [["str", 0.9010472990470118], ["List[str]", 0.09895270095298808]], "output_line": [["list", 0.29474301297661104], ["int", 0.2262772981481423], ["str", 0.09843353991166855]], "output_predict_file": [["str", 0.9010472990470118], ["List[str]", 0.09895270095298808]], "predict_drop_remainder": [["str", 0.8084222225710183], ["List[str]", 0.1024753768808493], ["Dict[str, int]", 0.08910240054813248]], "predict_examples": [["List[str]", 0.41296445460277187], ["list", 0.09235044562474196], ["str", 0.08692856051907982], ["set", 0.0859267059124156], ["int", 0.0859267059124156]], "predict_file": [["str", 0.7715081998195492]], "predict_input_fn": [["list", 0.2224304807506884], ["bytes", 0.19167779356538645], ["int", 0.11883560685948283]], "probabilities": [["str", 0.2510012753126571], ["int", 0.08534074424850498]], "processor": [["List[str]", 0.5838411432722643], ["list", 0.18070872211223957], ["str", 0.15037982503399375], ["int", 0.0850703095815024]], "processors": [["str", 0.2516691070172039], ["Dict[str, Dict[str, Any]]", 0.1153072123056664]], "result": [["Dict[str, Any]", 0.21992283511651545]], "run_config": [["str", 0.27831586279493925], ["Dict[str, Union[int, str]]", 0.12576133897902964]], "task_name": [["str", 1.0]], "tokenizer": [], "tpu_cluster_resolver": [], "train_examples": [["list", 0.2125316903841209], ["List[str]", 0.1469666593265642], ["List[int]", 0.10286954038897306], ["Tuple[Any, Any, Any, Any]", 0.10002492457477873], ["int", 0.09325497803299283]], "train_file": [["str", 0.7715081998195492]], "train_input_fn": [["int", 0.20639943274693912], ["bytes", 0.19497639658508764], ["list", 0.13909429304851242]]}}], "imports": ["__future__", "absolute_import", "__future__", "division", "__future__", "print_function", "collections", "csv", "os", "modeling", "optimization", "tokenization", "tensorflow", "tf"], "mod_var_ln": {"FLAGS": [[31, 0], [31, 5]], "flags": [[29, 0], [29, 5]]}, "mod_var_occur": {"FLAGS": [["tokenization", "validate_case_matches_checkpoint", "FLAGS", "do_lower_case", "FLAGS", "init_checkpoint"], ["FLAGS", "do_train", "FLAGS", "do_eval", "FLAGS", "do_predict"], ["bert_config", "modeling", "BertConfig", "from_json_file", "FLAGS", "bert_config_file"], ["FLAGS", "max_seq_length", "bert_config", "max_position_embeddings"], ["ValueError", "FLAGS", "max_seq_length", "bert_config", "max_position_embeddings"], ["tf", "gfile", "MakeDirs", "FLAGS", "output_dir"], ["task_name", "FLAGS", "task_name", "lower"], ["tokenizer", "tokenization", "FullTokenizer", "vocab_file", "FLAGS", "vocab_file", "do_lower_case", "FLAGS", "do_lower_case"], ["FLAGS", "use_tpu", "FLAGS", "tpu_name"], ["tpu_cluster_resolver", "tf", "contrib", "cluster_resolver", "TPUClusterResolver", "FLAGS", "tpu_name", "zone", "FLAGS", "tpu_zone", "project", "FLAGS", "gcp_project"], ["run_config", "tf", "contrib", "tpu", "RunConfig", "cluster", "tpu_cluster_resolver", "master", "FLAGS", "master", "model_dir", "FLAGS", "output_dir", "save_checkpoints_steps", "FLAGS", "save_checkpoints_steps", "tpu_config", "tf", "contrib", "tpu", "TPUConfig", "iterations_per_loop", "FLAGS", "iterations_per_loop", "num_shards", "FLAGS", "num_tpu_cores", "per_host_input_for_training", "is_per_host"], ["FLAGS", "do_train"], ["train_examples", "processor", "get_train_examples", "FLAGS", "data_dir"], ["num_train_steps", "int", "len", "train_examples", "FLAGS", "train_batch_size", "FLAGS", "num_train_epochs"], ["num_warmup_steps", "int", "num_train_steps", "FLAGS", "warmup_proportion"], ["model_fn", "model_fn_builder", "bert_config", "bert_config", "num_labels", "len", "label_list", "init_checkpoint", "FLAGS", "init_checkpoint", "learning_rate", "FLAGS", "learning_rate", "num_train_steps", "num_train_steps", "num_warmup_steps", "num_warmup_steps", "use_tpu", "FLAGS", "use_tpu", "use_one_hot_embeddings", "FLAGS", "use_tpu"], ["estimator", "tf", "contrib", "tpu", "TPUEstimator", "use_tpu", "FLAGS", "use_tpu", "model_fn", "model_fn", "config", "run_config", "train_batch_size", "FLAGS", "train_batch_size", "eval_batch_size", "FLAGS", "eval_batch_size", "predict_batch_size", "FLAGS", "predict_batch_size"], ["FLAGS", "do_train"], ["train_file", "os", "path", "join", "FLAGS", "output_dir"], ["file_based_convert_examples_to_features", "train_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "train_file"], ["tf", "logging", "info", "FLAGS", "train_batch_size"], ["train_input_fn", "file_based_input_fn_builder", "input_file", "train_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "True", "drop_remainder", "True"], ["FLAGS", "do_eval"], ["eval_examples", "processor", "get_dev_examples", "FLAGS", "data_dir"], ["FLAGS", "use_tpu"], ["len", "eval_examples", "FLAGS", "eval_batch_size"], ["eval_file", "os", "path", "join", "FLAGS", "output_dir"], ["file_based_convert_examples_to_features", "eval_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "eval_file"], ["tf", "logging", "info", "FLAGS", "eval_batch_size"], ["FLAGS", "use_tpu"], ["len", "eval_examples", "FLAGS", "eval_batch_size"], ["eval_steps", "int", "len", "eval_examples", "FLAGS", "eval_batch_size"], ["eval_drop_remainder", "True", "FLAGS", "use_tpu", "False"], ["eval_input_fn", "file_based_input_fn_builder", "input_file", "eval_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "eval_drop_remainder"], ["output_eval_file", "os", "path", "join", "FLAGS", "output_dir"], ["FLAGS", "do_predict"], ["predict_examples", "processor", "get_test_examples", "FLAGS", "data_dir"], ["FLAGS", "use_tpu"], ["len", "predict_examples", "FLAGS", "predict_batch_size"], ["predict_file", "os", "path", "join", "FLAGS", "output_dir"], ["file_based_convert_examples_to_features", "predict_examples", "label_list", "FLAGS", "max_seq_length", "tokenizer", "predict_file"], ["tf", "logging", "info", "FLAGS", "predict_batch_size"], ["predict_drop_remainder", "True", "FLAGS", "use_tpu", "False"], ["predict_input_fn", "file_based_input_fn_builder", "input_file", "predict_file", "seq_length", "FLAGS", "max_seq_length", "is_training", "False", "drop_remainder", "predict_drop_remainder"], ["output_predict_file", "os", "path", "join", "FLAGS", "output_dir"]], "flags": [["FLAGS", "flags", "FLAGS"], ["flags", "DEFINE_string", "None"], ["flags", "DEFINE_string", "None"], ["flags", "DEFINE_string", "None"], ["flags", "DEFINE_string", "None"], ["flags", "DEFINE_string", "None"], ["flags", "DEFINE_string", "None"], ["flags", "DEFINE_bool", "True"], ["flags", "DEFINE_integer"], ["flags", "DEFINE_bool", "False"], ["flags", "DEFINE_bool", "False"], ["flags", "DEFINE_bool", "False"], ["flags", "DEFINE_integer"], ["flags", "DEFINE_integer"], ["flags", "DEFINE_integer"], ["flags", "DEFINE_float"], ["flags", "DEFINE_float"], ["flags", "DEFINE_float"], ["flags", "DEFINE_integer"], ["flags", "DEFINE_integer"], ["flags", "DEFINE_bool", "False"], ["tf", "flags", "DEFINE_string", "None"], ["tf", "flags", "DEFINE_string", "None"], ["tf", "flags", "DEFINE_string", "None"], ["tf", "flags", "DEFINE_string", "None"], ["flags", "DEFINE_integer"], ["flags", "mark_flag_as_required"], ["flags", "mark_flag_as_required"], ["flags", "mark_flag_as_required"], ["flags", "mark_flag_as_required"], ["flags", "mark_flag_as_required"]]}, "no_types_annot": {"D": 0, "I": 0, "U": 251}, "session_id": "yHJGY8B7M3H-vllFlXW9zyL4RQtU4vskemEZ1j-zqks", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {"FLAGS": "", "flags": ""}, "variables_p": {"FLAGS": [["int", 0.39074148806817327], ["float", 0.09411237520541343], ["Pattern[Any]", 0.09082320581366748], ["list", 0.09053932574740102], ["bytes", 0.08939287296336991]], "flags": [["list", 0.11935580967609766], ["str", 0.10768420167698146]]}}}