{"error": null, "response": {"classes": [{"cls_lc": [[16, 0], [19, 24]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[17, 4], [19, 24]], "fn_var_ln": {"next": [[19, 8], [19, 17]], "val": [[18, 8], [18, 16]]}, "fn_var_occur": {"next": [["self", "next", "None"]], "val": [["self", "val", "x"]]}, "name": "__init__", "params": {"self": "", "x": ""}, "params_descr": {"self": "", "x": ""}, "params_occur": {"self": [["self", "val", "x"], ["self", "next", "None"]], "x": [["self", "val", "x"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "x": [["float", 0.3479153117210161], ["int", 0.2515215930221082]]}, "q_name": "Node.__init__", "ret_exprs": [], "ret_type": "", "variables": {"next": "", "val": ""}, "variables_p": {"next": [["\"Frame\"", 0.19999999999676038], ["str", 3.971941177518544e-12], ["Dict[str, Any]", 3.6175949269712212e-12]], "val": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}], "name": "Node", "q_name": "Node", "variables": {}, "variables_p": {}}, {"cls_lc": [[33, 0], [211, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[34, 4], [45, 42]], "fn_var_ln": {"l": [[36, 8], [36, 14]], "l1": [[42, 8], [42, 15]]}, "fn_var_occur": {"l": [["self", "l", "Node"], ["self", "l", "next", "Node"], ["self", "l", "next", "next", "Node"], ["self", "l", "next", "next", "next", "Node"], ["self", "l", "next", "next", "next", "next", "Node"]], "l1": [["self", "l1", "Node"], ["self", "l1", "next", "Node"], ["self", "l1", "next", "next", "Node"], ["self", "l1", "next", "next", "next", "Node"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "l", "Node"], ["self", "l", "next", "Node"], ["self", "l", "next", "next", "Node"], ["self", "l", "next", "next", "next", "Node"], ["self", "l", "next", "next", "next", "next", "Node"], ["self", "l1", "Node"], ["self", "l1", "next", "Node"], ["self", "l1", "next", "next", "Node"], ["self", "l1", "next", "next", "next", "Node"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.setUp", "ret_exprs": [], "ret_type": "", "variables": {"l": "", "l1": ""}, "variables_p": {"l": [["Type[Dict[str, Any]]", 0.0883400964556188]], "l1": [["DefaultDict[Any, str]", 0.5035613328218502], ["Union[Literal, Literal]", 0.24442703821037892], ["Tuple[Any, Any]", 0.1679017707642841]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [57, 77]], "fn_var_ln": {"head": [[53, 8], [53, 12]], "next": [[54, 8], [54, 17]]}, "fn_var_occur": {"head": [["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["self", "assertEqual", "convert", "reverse_list", "head"], ["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["self", "assertEqual", "convert", "reverse_list_recursive", "head"]], "next": [["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"]]}, "name": "test_reverse_list", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "convert", "reverse_list", "head"], ["self", "assertEqual", "convert", "reverse_list_recursive", "head"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_reverse_list", "ret_exprs": [], "ret_type": "", "variables": {"head": "", "next": ""}, "variables_p": {"head": [["str", 0.1277986020508668]], "next": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 4], [73, 41]], "fn_var_ln": {"head": [[67, 8], [67, 12]], "next": [[68, 8], [68, 17]]}, "fn_var_occur": {"head": [["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["self", "assertTrue", "is_sorted", "head"], ["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["self", "assertFalse", "is_sorted", "head"]], "next": [["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"]]}, "name": "test_is_sorted", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "is_sorted", "head"], ["self", "assertFalse", "is_sorted", "head"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_is_sorted", "ret_exprs": [], "ret_type": "", "variables": {"head": "", "next": ""}, "variables_p": {"head": [["str", 0.10994328690067665]], "next": [["int", 0.07325993821662147]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [100, 63]], "fn_var_ln": {"head": [[95, 8], [95, 12]], "next": [[96, 8], [96, 17]]}, "fn_var_occur": {"head": [["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["self", "assertEqual", "convert", "remove_range", "head"], ["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["self", "assertEqual", "convert", "remove_range", "head"], ["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["self", "assertEqual", "convert", "remove_range", "head"]], "next": [["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"]]}, "name": "test_remove_range", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "convert", "remove_range", "head"], ["self", "assertEqual", "convert", "remove_range", "head"], ["self", "assertEqual", "convert", "remove_range", "head"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_remove_range", "ret_exprs": [], "ret_type": "", "variables": {"head": "", "next": ""}, "variables_p": {"head": [["str", 0.10994328690067665]], "next": [["int", 0.07325993821662147]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[102, 4], [108, 65]], "fn_var_ln": {"head": [[103, 8], [103, 12]], "next": [[104, 8], [104, 17]]}, "fn_var_occur": {"head": [["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["self", "assertEqual", "convert", "swap_pairs", "head"]], "next": [["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"]]}, "name": "test_swap_in_pairs", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "convert", "swap_pairs", "head"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_swap_in_pairs", "ret_exprs": [], "ret_type": "", "variables": {"head": "", "next": ""}, "variables_p": {"head": [["str", 0.1461490217308533]], "next": [["int", 0.5091563224524911]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[110, 4], [118, 73]], "fn_var_ln": {"head": [[112, 8], [112, 12]], "next": [[113, 8], [113, 17]]}, "fn_var_occur": {"head": [["head", "Node"], ["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"], ["self", "assertEqual", "convert", "rotate_right", "head"]], "next": [["head", "next", "Node"], ["head", "next", "next", "Node"], ["head", "next", "next", "next", "Node"], ["head", "next", "next", "next", "next", "Node"]]}, "name": "test_rotate_right", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "convert", "rotate_right", "head"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_rotate_right", "ret_exprs": [], "ret_type": "", "variables": {"head": "", "next": ""}, "variables_p": {"head": [["str", 0.10994328690067665]], "next": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [141, 41]], "fn_var_ln": {"curr": [[140, 12], [140, 16]], "cyclic_node": [[125, 8], [125, 19]], "head": [[136, 8], [136, 12]], "next": [[139, 12], [139, 21]]}, "fn_var_occur": {"curr": [["curr", "head", "next"], ["curr", "next", "cyclic_node"], ["curr", "curr", "next"], ["curr", "next", "Node"], ["curr", "curr", "next"], ["curr", "next", "Node"], ["curr", "curr", "next"], ["curr", "next", "cyclic_node"], ["curr", "head"], ["curr", "next", "Node", "i"], ["curr", "curr", "next"]], "cyclic_node": [["cyclic_node", "Node"], ["curr", "next", "cyclic_node"], ["curr", "next", "cyclic_node"]], "head": [["head", "Node"], ["head", "next", "Node"], ["curr", "head", "next"], ["self", "assertTrue", "is_cyclic", "head"], ["head", "Node"], ["curr", "head"], ["self", "assertFalse", "is_cyclic", "head"]], "next": [["head", "next", "Node"], ["curr", "head", "next"], ["curr", "next", "cyclic_node"], ["curr", "curr", "next"], ["curr", "next", "Node"], ["curr", "curr", "next"], ["curr", "next", "Node"], ["curr", "curr", "next"], ["curr", "next", "cyclic_node"], ["curr", "next", "Node", "i"], ["curr", "curr", "next"]]}, "name": "test_is_cyclic", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "is_cyclic", "head"], ["self", "assertFalse", "is_cyclic", "head"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_is_cyclic", "ret_exprs": [], "ret_type": "", "variables": {"curr": "", "cyclic_node": "", "head": "", "next": ""}, "variables_p": {"curr": [["Counter", 0.11880608032588083], ["int", 0.09266762222352129]], "cyclic_node": [["int", 0.3739521068750586], ["str", 0.195983937651526]], "head": [["str", 0.11404347600744241], ["List[Tuple[str, str]]", 0.09924546624376254]], "next": []}}, {"docstring": {"func": "Input: head1:1->2->4, head2: 1->3->4", "long_descr": "Output: 1->1->2->3->4->4", "ret": null}, "fn_lc": [[143, 4], [164, 69]], "fn_var_ln": {"head1": [[157, 8], [157, 13]], "head2": [[160, 8], [160, 13]], "next": [[161, 8], [161, 18]]}, "fn_var_occur": {"head1": [["head1", "Node"], ["head1", "next", "Node"], ["head1", "next", "next", "Node"], ["self", "assertEqual", "convert", "merge_two_list", "head1", "head2"], ["head1", "Node"], ["head1", "next", "Node"], ["head1", "next", "next", "Node"], ["self", "assertEqual", "convert", "merge_two_list_recur", "head1", "head2"]], "head2": [["head2", "Node"], ["head2", "next", "Node"], ["head2", "next", "next", "Node"], ["self", "assertEqual", "convert", "merge_two_list", "head1", "head2"], ["head2", "Node"], ["head2", "next", "Node"], ["head2", "next", "next", "Node"], ["self", "assertEqual", "convert", "merge_two_list_recur", "head1", "head2"]], "next": [["head1", "next", "Node"], ["head1", "next", "next", "Node"], ["head2", "next", "Node"], ["head2", "next", "next", "Node"], ["head1", "next", "Node"], ["head1", "next", "next", "Node"], ["head2", "next", "Node"], ["head2", "next", "next", "Node"]]}, "name": "test_merge_two_list", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "convert", "merge_two_list", "head1", "head2"], ["self", "assertEqual", "convert", "merge_two_list_recur", "head1", "head2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_merge_two_list", "ret_exprs": [], "ret_type": "", "variables": {"head1": "", "head2": "", "next": ""}, "variables_p": {"head1": [["str", 0.13498909187473285], ["List[Tuple[str, str]]", 0.0949306564503464]], "head2": [["str", 0.13498909187473285], ["List[Tuple[str, str]]", 0.0949306564503464]], "next": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[166, 4], [168, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_palindrome", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "is_palindrome", "self", "l"], ["self", "assertFalse", "is_palindrome", "self", "l1"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_is_palindrome", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[170, 4], [172, 54]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_palindrome_stack", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "is_palindrome_stack", "self", "l"], ["self", "assertFalse", "is_palindrome_stack", "self", "l1"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_is_palindrome_stack", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[174, 4], [176, 53]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_palindrome_dict", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "is_palindrome_dict", "self", "l"], ["self", "assertFalse", "is_palindrome_dict", "self", "l1"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_is_palindrome_dict", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[178, 4], [181, 38]], "fn_var_ln": {"result": [[180, 8], [180, 14]]}, "fn_var_occur": {"result": [["result", "copy_random_pointer_v1", "self", "random_list_node1"], ["self", "_assert_is_a_copy", "result"]]}, "name": "test_solution_0", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_init_random_list_nodes"], ["result", "copy_random_pointer_v1", "self", "random_list_node1"], ["self", "_assert_is_a_copy", "result"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_solution_0", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["Optional[str]", 0.09041889880514044], ["Dict[str, float]", 0.0704081425156466]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[183, 4], [186, 38]], "fn_var_ln": {"result": [[185, 8], [185, 14]]}, "fn_var_occur": {"result": [["result", "copy_random_pointer_v2", "self", "random_list_node1"], ["self", "_assert_is_a_copy", "result"]]}, "name": "test_solution_1", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_init_random_list_nodes"], ["result", "copy_random_pointer_v2", "self", "random_list_node1"], ["self", "_assert_is_a_copy", "result"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_solution_1", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["Optional[str]", 0.09041889880514044], ["Dict[str, float]", 0.0704081425156466]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[188, 4], [198, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_assert_is_a_copy", "params": {"result": "", "self": ""}, "params_descr": {"result": "", "self": ""}, "params_occur": {"result": [["self", "assertEqual", "result", "next", "next", "next", "next", "label"], ["self", "assertEqual", "result", "next", "next", "next", "label"], ["self", "assertEqual", "result", "next", "next", "label"], ["self", "assertEqual", "result", "next", "label"], ["self", "assertEqual", "result", "label"], ["self", "assertEqual", "result", "next", "next", "next", "next", "random", "label"], ["self", "assertIsNone", "result", "next", "next", "next", "random"], ["self", "assertEqual", "result", "next", "next", "random", "label"], ["self", "assertEqual", "result", "next", "random", "label"], ["self", "assertEqual", "result", "random", "label"]], "self": [["self", "assertEqual", "result", "next", "next", "next", "next", "label"], ["self", "assertEqual", "result", "next", "next", "next", "label"], ["self", "assertEqual", "result", "next", "next", "label"], ["self", "assertEqual", "result", "next", "label"], ["self", "assertEqual", "result", "label"], ["self", "assertEqual", "result", "next", "next", "next", "next", "random", "label"], ["self", "assertIsNone", "result", "next", "next", "next", "random"], ["self", "assertEqual", "result", "next", "next", "random", "label"], ["self", "assertEqual", "result", "next", "random", "label"], ["self", "assertEqual", "result", "random", "label"]]}, "params_p": {"args": [], "kwargs": [], "result": [["str", 0.19178170962092722], ["dict", 0.10431509899233594], ["int", 0.09019583424388387]], "self": []}, "q_name": "TestSuite._assert_is_a_copy", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[200, 4], [211, 52]], "fn_var_ln": {"next": [[210, 8], [210, 30]], "random": [[211, 8], [211, 32]], "random_list_node1": [[201, 8], [201, 30]], "random_list_node2": [[202, 8], [202, 25]], "random_list_node3": [[203, 8], [203, 25]], "random_list_node4": [[204, 8], [204, 25]], "random_list_node5": [[205, 8], [205, 25]]}, "fn_var_occur": {"next": [["self", "random_list_node1", "next", "self", "random_list_node1", "random", "random_list_node2", "random_list_node4"], ["random_list_node2", "next", "random_list_node2", "random", "random_list_node3", "random_list_node5"], ["random_list_node3", "next", "random_list_node3", "random", "random_list_node4", "random_list_node2"], ["random_list_node4", "next", "random_list_node5"]], "random": [["self", "random_list_node1", "next", "self", "random_list_node1", "random", "random_list_node2", "random_list_node4"], ["random_list_node2", "next", "random_list_node2", "random", "random_list_node3", "random_list_node5"], ["random_list_node3", "next", "random_list_node3", "random", "random_list_node4", "random_list_node2"], ["random_list_node5", "random", "random_list_node3"]], "random_list_node1": [["self", "random_list_node1", "RandomListNode"], ["self", "random_list_node1", "next", "self", "random_list_node1", "random", "random_list_node2", "random_list_node4"]], "random_list_node2": [["random_list_node2", "RandomListNode"], ["self", "random_list_node1", "next", "self", "random_list_node1", "random", "random_list_node2", "random_list_node4"], ["random_list_node2", "next", "random_list_node2", "random", "random_list_node3", "random_list_node5"], ["random_list_node3", "next", "random_list_node3", "random", "random_list_node4", "random_list_node2"]], "random_list_node3": [["random_list_node3", "RandomListNode"], ["random_list_node2", "next", "random_list_node2", "random", "random_list_node3", "random_list_node5"], ["random_list_node3", "next", "random_list_node3", "random", "random_list_node4", "random_list_node2"], ["random_list_node5", "random", "random_list_node3"]], "random_list_node4": [["random_list_node4", "RandomListNode"], ["self", "random_list_node1", "next", "self", "random_list_node1", "random", "random_list_node2", "random_list_node4"], ["random_list_node3", "next", "random_list_node3", "random", "random_list_node4", "random_list_node2"], ["random_list_node4", "next", "random_list_node5"]], "random_list_node5": [["random_list_node5", "RandomListNode"], ["random_list_node2", "next", "random_list_node2", "random", "random_list_node3", "random_list_node5"], ["random_list_node4", "next", "random_list_node5"], ["random_list_node5", "random", "random_list_node3"]]}, "name": "_init_random_list_nodes", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "random_list_node1", "RandomListNode"], ["self", "random_list_node1", "next", "self", "random_list_node1", "random", "random_list_node2", "random_list_node4"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite._init_random_list_nodes", "ret_exprs": [], "ret_type": "", "variables": {"next": "", "random": "", "random_list_node1": "", "random_list_node2": "", "random_list_node3": "", "random_list_node4": "", "random_list_node5": ""}, "variables_p": {"next": [["int", 0.8076697527247836], ["float", 0.09616512363760812], ["str", 0.09616512363760812]], "random": [["int", 0.8076697527247836], ["float", 0.09616512363760812], ["str", 0.09616512363760812]], "random_list_node1": [["int", 0.9999999999999998]], "random_list_node2": [["dict", 0.10747936465661208], ["Optional[List[str]]", 0.09360572644117689], ["bool", 0.09360572644117689], ["Dict[str, Any]", 0.08986325393521674]], "random_list_node3": [["str", 0.5995342970370751]], "random_list_node4": [["dict", 0.10747936465661208], ["Optional[List[str]]", 0.09360572644117689], ["bool", 0.09360572644117689], ["Dict[str, Any]", 0.08986325393521674]], "random_list_node5": [["str", 0.5995342970370751]]}}], "name": "TestSuite", "q_name": "TestSuite", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[23, 0], [30, 14]], "fn_var_ln": {"current": [[29, 12], [29, 19]], "ret": [[24, 4], [24, 7]]}, "fn_var_occur": {"current": [["current", "head"], ["ret", "append", "current", "val"], ["current", "current", "next"]], "ret": [["ret", "append", "current", "val"]]}, "name": "convert", "params": {"head": ""}, "params_descr": {"head": ""}, "params_occur": {"head": [["current", "head"]]}, "params_p": {"args": [], "head": [["str", 0.7499999992162008], ["List[str]", 0.24999999954287033], ["int", 5.875898176924361e-10], ["bytes", 3.595442056028313e-10]], "kwargs": []}, "q_name": "convert", "ret_exprs": ["return ret"], "ret_type": "", "ret_type_p": [["List[str]", 0.23180113745175362], ["bool", 0.20327108407182837], ["str", 0.09758207879028889], ["Dict[str, Any]", 0.0852118534370477]], "variables": {"current": "", "ret": ""}, "variables_p": {"current": [["str", 0.3042523030972838], ["dict", 0.15025502029613114], ["List[int]", 0.11064113753061768], ["Dict[str, Any]", 0.09026938689598461], ["frozenset[str]", 0.08580032906371833], ["Dict[str, List[int]]", 0.08372273121747568]], "ret": [["str", 0.3626482849893551], ["list", 0.21929374960092896], ["List[str]", 0.1349091150656917], ["Dict[str, Union[Any, Any, Any, Any]]", 0.11890675467938207], ["List[List]", 0.08263820328931033]]}}], "imports": ["unittest", "algorithms", "linkedlist", "reverse_list", "reverse_list_recursive", "is_sorted", "remove_range", "swap_pairs", "rotate_right", "is_cyclic", "merge_two_list", "merge_two_list_recur", "is_palindrome", "is_palindrome_stack", "is_palindrome_dict", "RandomListNode", "copy_random_pointer_v1", "copy_random_pointer_v2"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 52}, "session_id": "lix8BfnRj1lBJ8-9N9F4UBfHg6yZvTMuj17vJvAt9AY", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}