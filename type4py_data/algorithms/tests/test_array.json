{"error": null, "response": {"classes": [{"cls_lc": [[26, 0], [41, 66]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[28, 4], [41, 66]], "fn_var_ln": {"a": [[30, 8], [30, 9]], "josephus_generator": [[31, 8], [31, 26]]}, "fn_var_occur": {"a": [["josephus_generator", "josephus", "a"]], "josephus_generator": [["josephus_generator", "josephus", "a"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertRaises", "StopIteration", "next", "josephus_generator"]]}, "name": "test_josephus", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertEqual", "next", "josephus_generator"], ["self", "assertRaises", "StopIteration", "next", "josephus_generator"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestJosephus.test_josephus", "ret_exprs": [], "ret_type": "", "variables": {"a": "", "josephus_generator": ""}, "variables_p": {"a": [["str", 4.2108605285161915e-11], ["int", 2.3607229996138572e-11], ["List[List[Any]]", 1.0404297480081005e-11]], "josephus_generator": [["list", 0.20033225750358957], ["property", 0.08705388494466101]]}}], "name": "TestJosephus", "q_name": "TestJosephus", "variables": {}, "variables_p": {}}, {"cls_lc": [[44, 0], [78, 32]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [63, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_nth_naive", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "delete_nth_naive", "n"], ["self", "assertListEqual", "delete_nth_naive", "n"], ["self", "assertListEqual", "delete_nth_naive", "n"], ["self", "assertListEqual", "delete_nth_naive", "n"], ["self", "assertListEqual", "delete_nth_naive", "n"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDeleteNth.test_delete_nth_naive", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [78, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_delete_nth", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "delete_nth", "n"], ["self", "assertListEqual", "delete_nth", "n"], ["self", "assertListEqual", "delete_nth", "n"], ["self", "assertListEqual", "delete_nth", "n"], ["self", "assertListEqual", "delete_nth", "n"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestDeleteNth.test_delete_nth", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestDeleteNth", "q_name": "TestDeleteNth", "variables": {}, "variables_p": {}}, {"cls_lc": [[81, 0], [124, 57]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [95, 40]], "fn_var_ln": {"flattened": [[94, 8], [94, 17]], "nested_list": [[93, 8], [93, 19]]}, "fn_var_occur": {"flattened": [["flattened", "flatten", "nested_list"], ["self", "assertEqual", "flattened"], ["flattened", "flatten", "nested_list"], ["self", "assertEqual", "flattened"], ["flattened", "flatten", "nested_list"], ["self", "assertEqual", "flattened"]], "nested_list": [["flattened", "flatten", "nested_list"], ["flattened", "flatten", "nested_list"], ["flattened", "flatten", "nested_list"]]}, "name": "test_flatten", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "flattened"], ["self", "assertEqual", "flattened"], ["self", "assertEqual", "flattened"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFlatten.test_flatten", "ret_exprs": [], "ret_type": "", "variables": {"flattened": "", "nested_list": ""}, "variables_p": {"flattened": [["list", 0.20150918391975006], ["str", 0.1876203880119317], ["dict", 0.12351566702245526], ["List[float]", 0.11535407602086457], ["int", 0.09222274336906774], ["deque", 0.08999525471923434]], "nested_list": [["list", 0.5293232461288923], ["List[int]", 0.08519772236981842], ["dict", 0.08164339141596878]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[97, 4], [124, 57]], "fn_var_ln": {"flattened": [[122, 8], [122, 17]], "nested_list": [[121, 8], [121, 19]]}, "fn_var_occur": {"flattened": [["flattened", "flatten_iter", "nested_list"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertRaises", "StopIteration", "next", "flattened"], ["flattened", "flatten_iter", "nested_list"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertRaises", "StopIteration", "next", "flattened"], ["flattened", "flatten_iter", "nested_list"], ["self", "assertEqual", "next", "flattened"], ["self", "assertRaises", "StopIteration", "next", "flattened"]], "nested_list": [["flattened", "flatten_iter", "nested_list"], ["flattened", "flatten_iter", "nested_list"], ["flattened", "flatten_iter", "nested_list"]]}, "name": "test_flatten_iter", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertRaises", "StopIteration", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertRaises", "StopIteration", "next", "flattened"], ["self", "assertEqual", "next", "flattened"], ["self", "assertRaises", "StopIteration", "next", "flattened"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFlatten.test_flatten_iter", "ret_exprs": [], "ret_type": "", "variables": {"flattened": "", "nested_list": ""}, "variables_p": {"flattened": [["list", 0.11914568652990318], ["set", 0.09228448801225449]], "nested_list": [["list", 0.6086281156226471], ["List[str]", 0.06155883674958161]]}}], "name": "TestFlatten", "q_name": "TestFlatten", "variables": {}, "variables_p": {}}, {"cls_lc": [[127, 0], [139, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[129, 4], [139, 52]], "fn_var_ln": {"final": [[132, 8], [132, 13]], "initial": [[131, 8], [131, 15]], "seq": [[133, 15], [133, 18]], "steps": [[133, 8], [133, 13]]}, "fn_var_occur": {"final": [["steps", "seq", "garage", "initial", "final"]], "initial": [["steps", "seq", "garage", "initial", "final"]], "seq": [["steps", "seq", "garage", "initial", "final"], ["self", "assertListEqual", "seq"]], "steps": [["steps", "seq", "garage", "initial", "final"], ["self", "assertEqual", "steps"]]}, "name": "test_garage", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "steps"], ["self", "assertListEqual", "seq"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGarage.test_garage", "ret_exprs": [], "ret_type": "", "variables": {"final": "", "initial": "", "seq": "", "steps": ""}, "variables_p": {"final": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "initial": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "seq": [], "steps": [["int", 1.288253141639725e-10]]}}], "name": "TestGarage", "q_name": "TestGarage", "variables": {}, "variables_p": {}}, {"cls_lc": [[142, 0], [208, 74]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [159, 58]], "fn_var_ln": {"string": [[158, 8], [158, 14]]}, "fn_var_occur": {"string": [["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"]]}, "name": "test_longest_non_repeat_v1", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"], ["self", "assertEqual", "longest_non_repeat_v1", "string"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLongestNonRepeat.test_longest_non_repeat_v1", "ret_exprs": [], "ret_type": "", "variables": {"string": ""}, "variables_p": {"string": [["List[str]", 0.4305328302440166], ["str", 0.28748784314980524], ["list", 0.09559447313841461], ["set", 0.09351689516451965], ["bytes", 0.09286795830324385]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[161, 4], [176, 58]], "fn_var_ln": {"string": [[175, 8], [175, 14]]}, "fn_var_occur": {"string": [["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"]]}, "name": "test_longest_non_repeat_v2", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"], ["self", "assertEqual", "longest_non_repeat_v2", "string"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLongestNonRepeat.test_longest_non_repeat_v2", "ret_exprs": [], "ret_type": "", "variables": {"string": ""}, "variables_p": {"string": [["List[str]", 0.4305328302440166], ["str", 0.28748784314980524], ["list", 0.09559447313841461], ["set", 0.09351689516451965], ["bytes", 0.09286795830324385]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[178, 4], [192, 74]], "fn_var_ln": {"string": [[191, 8], [191, 14]]}, "fn_var_occur": {"string": [["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"]]}, "name": "test_get_longest_non_repeat_v1", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"], ["self", "assertEqual", "get_longest_non_repeat_v1", "string"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLongestNonRepeat.test_get_longest_non_repeat_v1", "ret_exprs": [], "ret_type": "", "variables": {"string": ""}, "variables_p": {"string": [["bytearray", 0.14404401567772424], ["str", 0.0914582276010278]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[194, 4], [208, 74]], "fn_var_ln": {"string": [[207, 8], [207, 14]]}, "fn_var_occur": {"string": [["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"]]}, "name": "test_get_longest_non_repeat_v2", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"], ["self", "assertEqual", "get_longest_non_repeat_v2", "string"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLongestNonRepeat.test_get_longest_non_repeat_v2", "ret_exprs": [], "ret_type": "", "variables": {"string": ""}, "variables_p": {"string": [["bytearray", 0.14404401567772424], ["str", 0.0914582276010278]]}}], "name": "TestLongestNonRepeat", "q_name": "TestLongestNonRepeat", "variables": {}, "variables_p": {}}, {"cls_lc": [[211, 0], [220, 51]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[213, 4], [220, 51]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_max_ones_index", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "max_ones_index"], ["self", "assertEqual", "max_ones_index"], ["self", "assertEqual", "max_ones_index"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMaxOnesIndex.test_max_ones_index", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMaxOnesIndex", "q_name": "TestMaxOnesIndex", "variables": {}, "variables_p": {}}, {"cls_lc": [[223, 0], [240, 9]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[225, 4], [232, 9]], "fn_var_ln": {"interval_list": [[226, 8], [226, 21]], "intervals": [[227, 8], [227, 17]], "merged_intervals": [[228, 8], [228, 24]]}, "fn_var_occur": {"interval_list": [["intervals", "Interval", "i", "i", "i", "interval_list"]], "intervals": [["intervals", "Interval", "i", "i", "i", "interval_list"], ["merged_intervals", "Interval", "merge", "intervals"]], "merged_intervals": [["merged_intervals", "Interval", "merge", "intervals"], ["self", "assertEqual", "merged_intervals", "Interval", "Interval", "Interval"]]}, "name": "test_merge", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "merged_intervals", "Interval", "Interval", "Interval"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMergeInterval.test_merge", "ret_exprs": [], "ret_type": "", "variables": {"interval_list": "", "intervals": "", "merged_intervals": ""}, "variables_p": {"interval_list": [["int", 0.37614378344058014], ["list", 0.36000553253034134], ["List[float]", 0.16623545487993122]], "intervals": [["Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]", 0.27796875441463537], ["int", 0.18081896252232493], ["list", 0.16860554650349693], ["str", 0.09394680677452301], ["List[str]", 0.08159709233224584]], "merged_intervals": [["int", 1.288253141639725e-10]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[234, 4], [240, 9]], "fn_var_ln": {"interval_list": [[235, 8], [235, 21]], "merged_intervals": [[236, 8], [236, 24]]}, "fn_var_occur": {"interval_list": [["merged_intervals", "merge_intervals", "interval_list"]], "merged_intervals": [["merged_intervals", "merge_intervals", "interval_list"], ["self", "assertEqual", "merged_intervals"]]}, "name": "test_merge_intervals", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "merged_intervals"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMergeInterval.test_merge_intervals", "ret_exprs": [], "ret_type": "", "variables": {"interval_list": "", "merged_intervals": ""}, "variables_p": {"interval_list": [["List[str]", 0.4], ["list", 0.4], ["List[Tuple[Any, Any]]", 0.1], ["List[Union[float, int, str]]", 0.1]], "merged_intervals": [["int", 0.20075723179884244], ["bytes", 0.09662427634816786], ["float", 0.09635780092725726]]}}], "name": "TestMergeInterval", "q_name": "TestMergeInterval", "variables": {}, "variables_p": {}}, {"cls_lc": [[243, 0], [254, 69]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[245, 4], [254, 69]], "fn_var_ln": {"arr": [[247, 8], [247, 11]]}, "fn_var_occur": {"arr": [["self", "assertListEqual", "missing_ranges", "arr"], ["self", "assertListEqual", "missing_ranges", "arr"]]}, "name": "test_missing_ranges", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "missing_ranges", "arr"], ["self", "assertListEqual", "missing_ranges", "arr"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMissingRanges.test_missing_ranges", "ret_exprs": [], "ret_type": "", "variables": {"arr": ""}, "variables_p": {"arr": [["list", 0.7648366000524852], ["List[int]", 0.13508567322130685], ["Tuple[Any, Literal]", 0.10007772672620809]]}}], "name": "TestMissingRanges", "q_name": "TestMissingRanges", "variables": {}, "variables_p": {}}, {"cls_lc": [[257, 0], [266, 68]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[259, 4], [266, 68]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_move_zeros", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "move_zeros", "False", "False"], ["self", "assertListEqual", "move_zeros", "None", "True", "None", "True"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMoveZeros.test_move_zeros", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMoveZeros", "q_name": "TestMoveZeros", "variables": {}, "variables_p": {}}, {"cls_lc": [[269, 0], [299, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [279, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_plus_one_v1", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "plus_one_v1"], ["self", "assertListEqual", "plus_one_v1"], ["self", "assertListEqual", "plus_one_v1"], ["self", "assertListEqual", "plus_one_v1"], ["self", "assertListEqual", "plus_one_v1"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlusOne.test_plus_one_v1", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[281, 4], [289, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_plus_one_v2", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "plus_one_v2"], ["self", "assertListEqual", "plus_one_v2"], ["self", "assertListEqual", "plus_one_v2"], ["self", "assertListEqual", "plus_one_v2"], ["self", "assertListEqual", "plus_one_v2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlusOne.test_plus_one_v2", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[291, 4], [299, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_plus_one_v3", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "plus_one_v3"], ["self", "assertListEqual", "plus_one_v3"], ["self", "assertListEqual", "plus_one_v3"], ["self", "assertListEqual", "plus_one_v3"], ["self", "assertListEqual", "plus_one_v3"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPlusOne.test_plus_one_v3", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestPlusOne", "q_name": "TestPlusOne", "variables": {}, "variables_p": {}}, {"cls_lc": [[302, 0], [332, 62]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[304, 4], [312, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rotate_v1", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "rotate_v1", "k"], ["self", "assertListEqual", "rotate_v1", "k"], ["self", "assertListEqual", "rotate_v1", "k"], ["self", "assertListEqual", "rotate_v1", "k"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRotateArray.test_rotate_v1", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[314, 4], [322, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rotate_v2", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "rotate_v2", "k"], ["self", "assertListEqual", "rotate_v2", "k"], ["self", "assertListEqual", "rotate_v2", "k"], ["self", "assertListEqual", "rotate_v2", "k"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRotateArray.test_rotate_v2", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[324, 4], [332, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rotate_v3", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "rotate_v3", "k"], ["self", "assertListEqual", "rotate_v3", "k"], ["self", "assertListEqual", "rotate_v3", "k"], ["self", "assertListEqual", "rotate_v3", "k"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRotateArray.test_rotate_v3", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestRotateArray", "q_name": "TestRotateArray", "variables": {}, "variables_p": {}}, {"cls_lc": [[335, 0], [344, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[337, 4], [344, 39]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_summarize_ranges", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "summarize_ranges"], ["self", "assertListEqual", "summarize_ranges"], ["self", "assertListEqual", "summarize_ranges"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSummaryRanges.test_summarize_ranges", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestSummaryRanges", "q_name": "TestSummaryRanges", "variables": {}, "variables_p": {}}, {"cls_lc": [[347, 0], [355, 67]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[349, 4], [355, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_three_sum", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertSetEqual", "three_sum"], ["self", "assertSetEqual", "three_sum"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestThreeSum.test_three_sum", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestThreeSum", "q_name": "TestThreeSum", "variables": {}, "variables_p": {}}, {"cls_lc": [[358, 0], [365, 66]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[360, 4], [365, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_two_sum", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTupleEqual", "two_sum", "target"], ["self", "assertTupleEqual", "two_sum", "target"], ["self", "assertIsNone", "two_sum", "target"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTwoSum.test_two_sum", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestTwoSum", "q_name": "TestTwoSum", "variables": {}, "variables_p": {}}, {"cls_lc": [[368, 0], [374, 29]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[370, 4], [374, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_trimmean", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "trimmean"], ["self", "assertEqual", "trimmean"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTrimmean.test_trimmean", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestTrimmean", "q_name": "TestTrimmean", "variables": {}, "variables_p": {}}, {"cls_lc": [[377, 0], [382, 34]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[379, 4], [382, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_top_1", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "top_1"], ["self", "assertListEqual", "top_1"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestTop1.test_top_1", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestTop1", "q_name": "TestTop1", "variables": {}, "variables_p": {}}, {"cls_lc": [[385, 0], [391, 75]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[387, 4], [391, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_limit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "limit"], ["self", "assertListEqual", "limit"], ["self", "assertListEqual", "limit"], ["self", "assertListEqual", "limit", "None"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLimit.test_limit", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestLimit", "q_name": "TestLimit", "variables": {}, "variables_p": {}}, {"cls_lc": [[394, 0], [426, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[396, 4], [426, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_n_sum", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "n_sum"], ["self", "assertEqual", "n_sum", "sorted"], ["self", "assertEqual", "n_sum", "sorted"], ["self", "assertEqual", "n_sum", "sorted"], ["self", "assertEqual", "n_sum", "sorted"], ["self", "assertEqual", "n_sum", "sum_closure", "a", "b", "a", "b"], ["self", "assertEqual", "n_sum", "sum_closure", "a", "b", "a", "b", "a", "b", "same_closure", "a", "b", "a", "b", "a", "b"], ["self", "assertEqual", "n_sum", "sum_closure", "a", "b", "a", "b", "a", "b", "compare_closure", "a", "b", "a", "b", "a", "b"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestNSum.test_n_sum", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestNSum", "q_name": "TestNSum", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["algorithms", "arrays", "delete_nth", "delete_nth_naive", "flatten_iter", "flatten", "garage", "josephus", "longest_non_repeat_v1", "longest_non_repeat_v2", "get_longest_non_repeat_v1", "get_longest_non_repeat_v2", "Interval", "merge_intervals", "missing_ranges", "move_zeros", "plus_one_v1", "plus_one_v2", "plus_one_v3", "rotate_v1", "rotate_v2", "rotate_v3", "summarize_ranges", "three_sum", "two_sum", "max_ones_index", "trimmean", "top_1", "limit", "n_sum", "unittest"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 48}, "session_id": "z52Amd0-W_M-TI7vcKkPG-7kQH204pJN9LErwvZ8XaE", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}