{"error": null, "response": {"classes": [{"cls_lc": [[9, 0], [216, 8]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[11, 1], [28, 30]], "fn_var_ln": {"m1": [[12, 2], [12, 9]], "m10": [[21, 2], [21, 10]], "m11": [[22, 2], [22, 10]], "m12": [[23, 2], [23, 10]], "m13": [[24, 2], [24, 10]], "m14": [[25, 2], [25, 10]], "m15": [[26, 2], [26, 10]], "m16": [[27, 2], [27, 10]], "m17": [[28, 2], [28, 10]], "m2": [[13, 2], [13, 9]], "m3": [[14, 2], [14, 9]], "m4": [[15, 2], [15, 9]], "m5": [[16, 2], [16, 9]], "m6": [[17, 2], [17, 9]], "m7": [[18, 2], [18, 9]], "m8": [[19, 2], [19, 9]], "m9": [[20, 2], [20, 9]]}, "fn_var_occur": {"m1": [["self", "m1", "Monomial"]], "m10": [["self", "m10", "math", "pi"]], "m11": [["self", "m11", "Fraction"]], "m12": [["self", "m12"]], "m13": [["self", "m13", "Monomial"]], "m14": [["self", "m14", "Monomial"]], "m15": [["self", "m15", "Monomial"]], "m16": [["self", "m16", "Monomial", "math", "pi"]], "m17": [["self", "m17", "Monomial"]], "m2": [["self", "m2", "Monomial"]], "m3": [["self", "m3", "Monomial"]], "m4": [["self", "m4", "Monomial"]], "m5": [["self", "m5", "Monomial", "Fraction"]], "m6": [["self", "m6", "Monomial"]], "m7": [["self", "m7", "Monomial", "math", "pi"]], "m8": [["self", "m8", "Monomial"]], "m9": [["self", "m9"]]}, "name": "setUp", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "m1", "Monomial"], ["self", "m2", "Monomial"], ["self", "m3", "Monomial"], ["self", "m4", "Monomial"], ["self", "m5", "Monomial", "Fraction"], ["self", "m6", "Monomial"], ["self", "m7", "Monomial", "math", "pi"], ["self", "m8", "Monomial"], ["self", "m9"], ["self", "m10", "math", "pi"], ["self", "m11", "Fraction"], ["self", "m12"], ["self", "m13", "Monomial"], ["self", "m14", "Monomial"], ["self", "m15", "Monomial"], ["self", "m16", "Monomial", "math", "pi"], ["self", "m17", "Monomial"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.setUp", "ret_exprs": [], "ret_type": "", "variables": {"m1": "", "m10": "", "m11": "", "m12": "", "m13": "", "m14": "", "m15": "", "m16": "", "m17": "", "m2": "", "m3": "", "m4": "", "m5": "", "m6": "", "m7": "", "m8": "", "m9": ""}, "variables_p": {"m1": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m10": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m11": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m12": [["int", 0.6812033711597617], ["bytes", 0.10041906305056607], ["str", 0.09617966205810621]], "m13": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m14": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m15": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m16": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m17": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m2": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m3": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m4": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m5": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m6": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m7": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m8": [["Pattern[str]", 6.747122380846276e-11], ["list", 4.026682903685868e-11], ["float", 3.702618221869945e-11], ["int", 3.6417025452774915e-11], ["List[str]", 3.6417025452774915e-11], ["Union[bytes, int]", 3.6417025452774915e-11], ["str", 3.6417025452774915e-11]], "m9": [["int", 0.6812033711597617], ["bytes", 0.10041906305056607], ["str", 0.09617966205810621]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[30, 1], [66, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_addition", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m1", "self", "m2"], ["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m2", "self", "m3"], ["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m2", "self", "m14"], ["self", "assertEqual", "self", "m13", "self", "m2", "self", "m1"], ["self", "assertEqual", "self", "m1", "self", "m1", "self", "m1"], ["self", "assertEqual", "self", "m7", "self", "m7", "Monomial", "math", "pi"], ["self", "assertEqual", "self", "m8", "self", "m1"], ["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m2", "self", "m9"], ["self", "assertRaises", "TypeError", "x", "y", "x", "y", "self", "m9", "self", "m2"], ["self", "assertEqual", "self", "m1", "self", "m9", "Monomial"], ["self", "assertEqual", "self", "m1", "self", "m12", "Monomial"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_addition", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 1], [105, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_subtraction", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m1", "self", "m2"], ["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m2", "self", "m3"], ["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m2", "self", "m14"], ["self", "assertEqual", "self", "m2", "self", "m2", "self", "m1"], ["self", "assertEqual", "self", "m2", "self", "m2", "Monomial"], ["self", "assertEqual", "self", "m1", "self", "m1", "self", "m1"], ["self", "assertEqual", "self", "m2", "self", "m15", "Monomial"], ["self", "assertEqual", "self", "m16", "self", "m7", "Monomial", "math", "pi"], ["self", "assertRaises", "ValueError", "x", "y", "x", "y", "self", "m2", "self", "m9"], ["self", "assertRaises", "TypeError", "x", "y", "x", "y", "self", "m9", "self", "m2"], ["self", "assertEqual", "self", "m1", "self", "m9", "Monomial"], ["self", "assertEqual", "self", "m1", "self", "m12", "Monomial"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_subtraction", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[107, 1], [124, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_multiplication", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "self", "m2", "self", "m13", "Monomial"], ["self", "assertEqual", "self", "m2", "self", "m17", "Monomial"], ["self", "assertEqual", "self", "m8", "self", "m5", "self", "m1"], ["self", "assertEqual", "self", "m1", "self", "m2", "self", "m1"], ["self", "assertEqual", "self", "m7", "self", "m3", "Monomial", "math", "pi"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_multiplication", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[126, 1], [145, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_inverse", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "ValueError", "x", "x", "inverse", "self", "m1"], ["self", "assertRaises", "ValueError", "x", "x", "inverse", "self", "m8"], ["self", "assertRaises", "ValueError", "x", "x", "inverse", "Monomial", "self", "m12"], ["self", "assertEqual", "self", "m7", "inverse", "Monomial", "math", "pi"], ["self", "assertEqual", "self", "m5", "inverse", "Monomial", "Fraction"], ["self", "assertEqual", "self", "m5", "inverse", "Monomial"], ["self", "assertTrue", "self", "m6", "inverse", "Monomial", "Fraction"], ["self", "assertEqual", "self", "m6", "inverse", "Monomial"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_inverse", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[147, 1], [161, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_division", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "ValueError", "x", "y", "x", "__truediv__", "y", "self", "m2", "self", "m1"], ["self", "assertRaises", "ValueError", "x", "y", "x", "__truediv__", "y", "self", "m2", "self", "m8"], ["self", "assertRaises", "ValueError", "x", "y", "x", "__truediv__", "y", "self", "m2", "self", "m12"], ["self", "assertEqual", "self", "m7", "self", "m3", "Monomial", "math", "pi"], ["self", "assertEqual", "self", "m14", "self", "m13", "Monomial", "Fraction"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_division", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[163, 1], [189, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_substitution", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertAlmostEqual", "self", "m7", "substitute", "math", "pi", "delta"], ["self", "assertAlmostEqual", "self", "m7", "substitute", "math", "pi", "delta"], ["self", "assertAlmostEqual", "self", "m7", "substitute", "Fraction", "Fraction", "math", "pi", "delta"], ["self", "assertAlmostEqual", "self", "m7", "substitute", "math", "pi", "delta"], ["self", "assertAlmostEqual", "self", "m7", "substitute", "math", "pi", "delta"], ["self", "assertRaises", "ValueError", "x", "y", "x", "substitute", "y", "self", "m7"], ["self", "assertRaises", "ValueError", "x", "y", "x", "substitute", "y", "self", "m7"], ["self", "assertEqual", "self", "m8", "substitute"], ["self", "assertEqual", "self", "m8", "substitute"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_substitution", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[191, 1], [201, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_all_variables", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "self", "m5", "all_variables"], ["self", "assertEqual", "self", "m6", "all_variables", "set"], ["self", "assertEqual", "self", "m8", "all_variables", "set"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_all_variables", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[203, 1], [216, 8]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_monomial_clone", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "self", "m3", "self", "m3", "clone"], ["self", "assertEqual", "self", "m1", "self", "m8", "clone"], ["self", "assertEqual", "self", "m1", "self", "m1", "clone"], ["self", "assertEqual", "self", "m8", "self", "m1", "clone"], ["self", "assertEqual", "self", "m8", "self", "m8", "clone"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_monomial_clone", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.10089842758952366]], "variables": {}, "variables_p": {}}], "name": "TestSuite", "q_name": "TestSuite", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["algorithms", "maths", "polynomial", "Monomial", "fractions", "Fraction", "math", "unittest"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 26}, "session_id": "hLNj__-G-dbWqRKjlSAsKHGcF9g1bpAbh1N6pGO6a9I", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}