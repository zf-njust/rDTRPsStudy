{"error": null, "response": {"classes": [{"cls_lc": [[13, 0], [97, 44]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[14, 4], [17, 39]], "fn_var_ln": {"m": [[15, 8], [15, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put"], ["self", "assertEqual", "m", "get"]]}, "name": "test_one_entry", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_one_entry", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["List[None]", 0.11367363449609473], ["Tuple[Literal, Literal, Literal]", 0.10647233823992057], ["List[int]", 0.09518689164958406]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[19, 4], [22, 40]], "fn_var_ln": {"m": [[20, 8], [20, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put"], ["self", "assertEqual", "m", "get"]]}, "name": "test_add_entry_bigger_than_table_size", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_add_entry_bigger_than_table_size", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["List[None]", 0.11367363449609473], ["Tuple[Literal, Literal, Literal]", 0.10647233823992057], ["List[int]", 0.09518689164958406]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[24, 4], [27, 41]], "fn_var_ln": {"m": [[25, 8], [25, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put"], ["self", "assertEqual", "None", "m", "get"]]}, "name": "test_get_none_if_key_missing_and_hash_collision", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "None", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_get_none_if_key_missing_and_hash_collision", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["List[None]", 0.1075150897683758], ["Set[str]", 0.09021730410268629]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[29, 4], [34, 41]], "fn_var_ln": {"m": [[30, 8], [30, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put"], ["m", "put"], ["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "name": "test_two_entries_with_same_hash", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_two_entries_with_same_hash", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [41, 40]], "fn_var_ln": {"m": [[38, 8], [38, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put", "i", "i"], ["self", "assertEqual", "None", "m", "get"]]}, "name": "test_get_on_full_table_does_halts", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "None", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_get_on_full_table_does_halts", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["memoryview", 0.111703378403791], ["bytes", 0.10792107256538826], ["Callable[[], Any]", 0.09434175498614926]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[43, 4], [49, 37]], "fn_var_ln": {"m": [[44, 8], [44, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put", "i", "i"], ["m", "del_"], ["self", "assertEqual", "None", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "name": "test_delete_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "None", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_delete_key", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["dict", 0.3650590275388891], ["Counter[Any]", 0.16349629153027015], ["Dict[str, Union[Any, str]]", 0.09709618561367706], ["Dict[str, str]", 0.09615608984316633], ["float", 0.09299388003399087]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[51, 4], [56, 37]], "fn_var_ln": {"m": [[52, 8], [52, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put"], ["m", "put"], ["self", "assertEqual", "m", "get"]]}, "name": "test_delete_key_and_reassign", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_delete_key_and_reassign", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["List[None]", 0.10724297188160536]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [64, 23]], "fn_var_ln": {"m": [[59, 8], [59, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put"], ["m", "put"], ["m", "put"], ["m", "put"]]}, "name": "test_assigning_to_full_table_throws_error", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertRaises", "ValueError"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_assigning_to_full_table_throws_error", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["str", 0.18106125147432478], ["Dict[str, int]", 0.11161175432061984], ["Dict[int, Union[Any, Any, Any, Any, Any, Any]]", 0.10734887569931294], ["Tuple[int, int]", 0.08225659082706056]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[66, 4], [71, 43]], "fn_var_ln": {"m": [[67, 8], [67, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["self", "assertEqual", "len", "m"], ["m", "put", "i", "i"], ["self", "assertEqual", "i", "len", "m"]]}, "name": "test_len_trivial", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "m"], ["self", "assertEqual", "i", "len", "m"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_len_trivial", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["int", 0.1937977943474207], ["bytes", 0.19040319763778646], ["str", 0.12139802531886185]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[73, 4], [80, 35]], "fn_var_ln": {"m": [[74, 8], [74, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put"], ["self", "assertEqual", "len", "m"], ["m", "del_"], ["self", "assertEqual", "len", "m"], ["m", "put"], ["self", "assertEqual", "len", "m"]]}, "name": "test_len_after_deletions", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "m"], ["self", "assertEqual", "len", "m"], ["self", "assertEqual", "len", "m"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_len_after_deletions", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["str", 0.11200767753696712], ["Tuple[Literal, Literal, Literal]", 0.0931357621715217]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[82, 4], [90, 71]], "fn_var_ln": {"m": [[83, 8], [83, 9]]}, "fn_var_occur": {"m": [["m", "ResizableHashTable"], ["self", "assertEqual", "ResizableHashTable", "MIN_SIZE", "m", "size"], ["m", "put", "i"], ["self", "assertEqual", "ResizableHashTable", "MIN_SIZE", "m", "size"], ["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get", "ResizableHashTable", "MIN_SIZE"]]}, "name": "test_resizable_hash_table", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "ResizableHashTable", "MIN_SIZE", "m", "size"], ["self", "assertEqual", "ResizableHashTable", "MIN_SIZE", "m", "size"], ["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get", "ResizableHashTable", "MIN_SIZE"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_resizable_hash_table", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["memoryview", 0.11446480733748489], ["List[str]", 0.10374179166222411], ["int", 0.09363166327589792]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [97, 44]], "fn_var_ln": {"m": [[93, 8], [93, 9]]}, "fn_var_occur": {"m": [["m", "HashTable"], ["m", "put", "i", "i"], ["self", "assertEqual", "i", "m", "get", "i"]]}, "name": "test_fill_up_the_limit", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "i", "m", "get", "i"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestHashTable.test_fill_up_the_limit", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["dict", 0.377431354998955], ["Dict[bytes, str]", 0.10754829065910629], ["bytes", 0.09322586702404523]]}}], "name": "TestHashTable", "q_name": "TestHashTable", "variables": {}, "variables_p": {}}, {"cls_lc": [[100, 0], [152, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[101, 4], [104, 39]], "fn_var_ln": {"m": [[102, 8], [102, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["m", "put"], ["self", "assertEqual", "m", "get"]]}, "name": "test_one_entry", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_one_entry", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["str", 0.09397220235476929]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[106, 4], [111, 41]], "fn_var_ln": {"m": [[107, 8], [107, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["m", "put"], ["m", "put"], ["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "name": "test_two_entries_with_same_hash", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_two_entries_with_same_hash", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["List[bytes]", 0.09272960503554381]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[113, 4], [118, 43]], "fn_var_ln": {"m": [[114, 8], [114, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["self", "assertEqual", "len", "m"], ["m", "put", "i", "i"], ["self", "assertEqual", "i", "len", "m"]]}, "name": "test_len_trivial", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "m"], ["self", "assertEqual", "i", "len", "m"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_len_trivial", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["memoryview", 0.22604923148014588]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[120, 4], [127, 35]], "fn_var_ln": {"m": [[121, 8], [121, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["m", "put"], ["self", "assertEqual", "len", "m"], ["m", "del_"], ["self", "assertEqual", "len", "m"], ["m", "put"], ["self", "assertEqual", "len", "m"]]}, "name": "test_len_after_deletions", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "len", "m"], ["self", "assertEqual", "len", "m"], ["self", "assertEqual", "len", "m"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_len_after_deletions", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["Iterator[int]", 0.11491866313056], ["list", 0.10252298857320652], ["Pattern[str]", 0.09048426741969734]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[129, 4], [135, 37]], "fn_var_ln": {"m": [[130, 8], [130, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["m", "put", "i", "i"], ["m", "del_"], ["self", "assertEqual", "None", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "name": "test_delete_key", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "None", "m", "get"], ["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_delete_key", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["str", 0.2017668096619613]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[137, 4], [142, 37]], "fn_var_ln": {"m": [[138, 8], [138, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["m", "put"], ["m", "put"], ["self", "assertEqual", "m", "get"]]}, "name": "test_delete_key_and_reassign", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_delete_key_and_reassign", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": []}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[144, 4], [147, 40]], "fn_var_ln": {"m": [[145, 8], [145, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["m", "put"], ["self", "assertEqual", "m", "get"]]}, "name": "test_add_entry_bigger_than_table_size", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_add_entry_bigger_than_table_size", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": [["str", 0.09397220235476929]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[149, 4], [152, 41]], "fn_var_ln": {"m": [[150, 8], [150, 9]]}, "fn_var_occur": {"m": [["m", "SeparateChainingHashTable"], ["m", "put"], ["self", "assertEqual", "None", "m", "get"]]}, "name": "test_get_none_if_key_missing_and_hash_collision", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "None", "m", "get"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSeparateChainingHashTable.test_get_none_if_key_missing_and_hash_collision", "ret_exprs": [], "ret_type": "", "variables": {"m": ""}, "variables_p": {"m": []}}], "name": "TestSeparateChainingHashTable", "q_name": "TestSeparateChainingHashTable", "variables": {}, "variables_p": {}}, {"cls_lc": [[155, 0], [160, 65]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[156, 4], [160, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_word_pattern", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "word_pattern"], ["self", "assertFalse", "word_pattern"], ["self", "assertFalse", "word_pattern"], ["self", "assertFalse", "word_pattern"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestWordPattern.test_word_pattern", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestWordPattern", "q_name": "TestWordPattern", "variables": {}, "variables_p": {}}, {"cls_lc": [[163, 0], [167, 56]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[164, 4], [167, 56]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_isomorphic", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "is_isomorphic"], ["self", "assertFalse", "is_isomorphic"], ["self", "assertTrue", "is_isomorphic"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestIsSomorphic.test_is_isomorphic", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestIsSomorphic", "q_name": "TestIsSomorphic", "variables": {}, "variables_p": {}}, {"cls_lc": [[170, 0], [181, 78]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[171, 4], [175, 75]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_longest_palindromic_subsequence_is_correct", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "longest_palindromic_subsequence"], ["self", "assertEqual", "longest_palindromic_subsequence"], ["self", "assertEqual", "longest_palindromic_subsequence"], ["self", "assertEqual", "longest_palindromic_subsequence"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLongestPalindromicSubsequence.test_longest_palindromic_subsequence_is_correct", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[177, 4], [181, 78]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_longest_palindromic_subsequence_is_incorrect", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertNotEqual", "longest_palindromic_subsequence"], ["self", "assertNotEqual", "longest_palindromic_subsequence"], ["self", "assertNotEqual", "longest_palindromic_subsequence"], ["self", "assertNotEqual", "longest_palindromic_subsequence"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLongestPalindromicSubsequence.test_longest_palindromic_subsequence_is_incorrect", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestLongestPalindromicSubsequence", "q_name": "TestLongestPalindromicSubsequence", "variables": {}, "variables_p": {}}, {"cls_lc": [[184, 0], [187, 50]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 4], [187, 50]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_is_anagram", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "is_anagram"], ["self", "assertFalse", "is_anagram"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestIsAnagram.test_is_anagram", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestIsAnagram", "q_name": "TestIsAnagram", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["algorithms", "map", "HashTable", "ResizableHashTable", "SeparateChainingHashTable", "word_pattern", "is_isomorphic", "is_anagram", "longest_palindromic_subsequence", "unittest"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 45}, "session_id": "5gx-pR5DvKuD5nvZRWqAZFGn_aJrl3vdZjteu6WSiAA", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}