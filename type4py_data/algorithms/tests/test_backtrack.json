{"error": null, "response": {"classes": [{"cls_lc": [[28, 0], [53, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[29, 4], [53, 58]], "fn_var_ln": {"answer": [[41, 8], [41, 14]], "s": [[39, 8], [39, 9]], "target": [[40, 8], [40, 14]]}, "fn_var_occur": {"answer": [["self", "assertEqual", "add_operators", "s", "target", "answer"]], "s": [["self", "assertEqual", "add_operators", "s", "target"], ["self", "assertEqual", "add_operators", "s", "target"], ["self", "assertEqual", "add_operators", "s", "target", "answer"]], "target": [["self", "assertEqual", "add_operators", "s", "target"], ["self", "assertEqual", "add_operators", "s", "target"], ["self", "assertEqual", "add_operators", "s", "target", "answer"]]}, "name": "test_add_operators", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "add_operators", "s", "target"], ["self", "assertEqual", "add_operators", "s", "target"], ["self", "assertEqual", "add_operators", "s", "target", "answer"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestAddOperator.test_add_operators", "ret_exprs": [], "ret_type": "", "variables": {"answer": "", "s": "", "target": ""}, "variables_p": {"answer": [["int", 0.6163477116568719], ["str", 0.10290667868169075]], "s": [["float", 0.19147977458678864], ["int", 0.12836076588567413], ["List[int]", 0.10141604370580914], ["Dict[str, str]", 0.0892968823079842]], "target": [["list", 0.18948139891122967], ["str", 0.16378724363274375], ["List[Dict[str, Any]]", 0.10284219848821184], ["Dict[Any, int]", 0.09180023112060032], ["Dict[str, Union[Any, Any, Any]]", 0.08301894386191395], ["Dict[str, Union[Any, str]]", 0.08197676332633748]]}}], "name": "TestAddOperator", "q_name": "TestAddOperator", "variables": {}, "variables_p": {}}, {"cls_lc": [[56, 0], [70, 52]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [60, 47]], "fn_var_ln": {"perms": [[59, 8], [59, 13]]}, "fn_var_occur": {"perms": [["self", "assertEqual", "perms", "permute"]]}, "name": "test_permute", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "perms", "permute"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPermuteAndAnagram.test_permute", "ret_exprs": [], "ret_type": "", "variables": {"perms": ""}, "variables_p": {"perms": [["list", 0.30000000000000004], ["Dict[str, object]", 0.2], ["int", 0.2], ["dict", 0.1], ["str", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[62, 4], [66, 48]], "fn_var_ln": {"it": [[63, 8], [63, 10]], "perms": [[64, 8], [64, 13]]}, "fn_var_occur": {"it": [["it", "permute_iter"], ["self", "assertEqual", "perms", "i", "next", "it"]], "perms": [["range", "len", "perms"], ["self", "assertEqual", "perms", "i", "next", "it"]]}, "name": "test_permute_iter", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "perms", "i", "next", "it"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPermuteAndAnagram.test_permute_iter", "ret_exprs": [], "ret_type": "", "variables": {"it": "", "perms": ""}, "variables_p": {"it": [["bytes", 0.07984522739602784]], "perms": [["int", 0.21408776708592214], ["str", 0.17212372793747815], ["list", 0.16714277538674488], ["List[Tuple[str, Any, Any]]", 0.12456975890735479], ["List[str]", 0.12431839175109943], ["List[float]", 0.11281181345966271], ["List[Tuple[int, int]]", 0.0849457654717379]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[68, 4], [70, 52]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_angram", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "anagram"], ["self", "assertFalse", "anagram"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPermuteAndAnagram.test_angram", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestPermuteAndAnagram", "q_name": "TestPermuteAndAnagram", "variables": {}, "variables_p": {}}, {"cls_lc": [[73, 0], [97, 36]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[75, 4], [85, 36]], "fn_var_ln": {"A": [[76, 8], [76, 9]], "B": [[77, 8], [77, 9]], "C": [[78, 8], [78, 9]], "answer": [[80, 8], [80, 14]], "target": [[79, 8], [79, 14]]}, "fn_var_occur": {"A": [["self", "assertListEqual", "sorted", "array_sum_combinations", "A", "B", "C", "target", "answer"]], "B": [["self", "assertListEqual", "sorted", "array_sum_combinations", "A", "B", "C", "target", "answer"]], "C": [["self", "assertListEqual", "sorted", "array_sum_combinations", "A", "B", "C", "target", "answer"]], "answer": [["answer", "sort"], ["self", "assertListEqual", "sorted", "array_sum_combinations", "A", "B", "C", "target", "answer"]], "target": [["self", "assertListEqual", "sorted", "array_sum_combinations", "A", "B", "C", "target", "answer"]]}, "name": "test_array_sum_combinations", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "sorted", "array_sum_combinations", "A", "B", "C", "target", "answer"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestArrayCombinationSum.test_array_sum_combinations", "ret_exprs": [], "ret_type": "", "variables": {"A": "", "B": "", "C": "", "answer": "", "target": ""}, "variables_p": {"A": [["str", 0.29803212270567114], ["list", 0.20114309199528582], ["T", 0.11761574523539994], ["Tuple[float, float, float]", 0.10265402032896932], ["float", 0.10130158570897069], ["Dict[int, int]", 0.0919141173168634], ["Iterator[Any]", 0.08733931670883968]], "B": [["str", 0.3945090680142699], ["float", 0.21824773656530838], ["T", 0.10033272140536108], ["List[List[int]]", 0.09648894639608963], ["List[int]", 0.09648894639608963], ["int", 0.09393258122288128]], "C": [["str", 0.39076098266410064], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1219108221302394], ["List[List[int]]", 0.10594502502862228], ["float", 0.10298021051190154], ["int", 0.09429829293173846]], "answer": [["list", 0.9999999999999999]], "target": [["int", 0.1905299063271964], ["str", 0.16901294650645027], ["List[str]", 0.10073478250470377], ["frozenset[str]", 0.09839427781160244], ["list", 0.0845502462986296], ["List[float]", 0.08048263288137913]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[87, 4], [97, 36]], "fn_var_ln": {"A": [[88, 8], [88, 9]], "B": [[89, 8], [89, 9]], "C": [[90, 8], [90, 9]], "answer": [[92, 8], [92, 14]], "target": [[91, 8], [91, 14]]}, "fn_var_occur": {"A": [["self", "assertListEqual", "sorted", "unique_array_sum_combinations", "A", "B", "C", "target", "answer"]], "B": [["self", "assertListEqual", "sorted", "unique_array_sum_combinations", "A", "B", "C", "target", "answer"]], "C": [["self", "assertListEqual", "sorted", "unique_array_sum_combinations", "A", "B", "C", "target", "answer"]], "answer": [["answer", "sort"], ["self", "assertListEqual", "sorted", "unique_array_sum_combinations", "A", "B", "C", "target", "answer"]], "target": [["self", "assertListEqual", "sorted", "unique_array_sum_combinations", "A", "B", "C", "target", "answer"]]}, "name": "test_unique_array_sum_combinations", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertListEqual", "sorted", "unique_array_sum_combinations", "A", "B", "C", "target", "answer"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestArrayCombinationSum.test_unique_array_sum_combinations", "ret_exprs": [], "ret_type": "", "variables": {"A": "", "B": "", "C": "", "answer": "", "target": ""}, "variables_p": {"A": [["list", 0.3359746429771508], ["range", 0.11672086893940684], ["float", 0.11624295441200742], ["Tuple[float, float, float]", 0.08891173302667607], ["str", 0.08806502706824694]], "B": [["list", 0.4771911689201536], ["float", 0.13104703097433099], ["range", 0.11030900000687702], ["T", 0.09656462649562562]], "C": [["str", 0.19056328887603843], ["dict", 0.14487220919959723], ["T", 0.12789998539187974], ["float", 0.09757378773583278], ["int", 0.09027141290596886], ["Counter[Any]", 0.08652364509135896]], "answer": [["list", 0.8923605470375792]], "target": [["List[int]", 0.32873036978400333], ["int", 0.20371683488087855], ["List[str]", 0.1812511900750396], ["float", 0.09158606752611592]]}}], "name": "TestArrayCombinationSum", "q_name": "TestArrayCombinationSum", "variables": {}, "variables_p": {}}, {"cls_lc": [[100, 0], [124, 72]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[102, 4], [106, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "check_sum", "params": {"nums": "", "self": "", "target": ""}, "params_descr": {"nums": "", "self": "", "target": ""}, "params_occur": {"nums": [["sum", "nums", "target"], ["True", "nums"], ["False", "nums"]], "self": [], "target": [["sum", "nums", "target"]]}, "params_p": {"args": [], "kwargs": [], "nums": [["IO", 0.20672973385257945], ["List[str]", 0.10641374561789602], ["Callable", 0.09628390697259634], ["dict", 0.09394192641845185]], "self": [], "target": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]]}, "q_name": "TestCombinationSum.check_sum", "ret_exprs": ["return (True, nums)", "return (False, nums)"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[108, 4], [124, 72]], "fn_var_ln": {"answer1": [[111, 8], [111, 15]], "answer2": [[119, 8], [119, 15]], "candidates1": [[109, 8], [109, 19]], "candidates2": [[117, 8], [117, 19]], "target1": [[110, 8], [110, 15]], "target2": [[118, 8], [118, 15]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "combination_sum", "candidates1", "target1", "answer1"]], "answer2": [["self", "assertEqual", "combination_sum", "candidates2", "target2", "answer2"]], "candidates1": [["self", "assertEqual", "combination_sum", "candidates1", "target1", "answer1"]], "candidates2": [["self", "assertEqual", "combination_sum", "candidates2", "target2", "answer2"]], "target1": [["self", "assertEqual", "combination_sum", "candidates1", "target1", "answer1"]], "target2": [["self", "assertEqual", "combination_sum", "candidates2", "target2", "answer2"]]}, "name": "test_combination_sum", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "combination_sum", "candidates1", "target1", "answer1"], ["self", "assertEqual", "combination_sum", "candidates2", "target2", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCombinationSum.test_combination_sum", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "candidates1": "", "candidates2": "", "target1": "", "target2": ""}, "variables_p": {"answer1": [["list", 0.2775158373716504], ["Exception", 0.19475282461292226], ["str", 0.18105488941307196], ["List[Union[Any, Any]]", 0.08267863927124955], ["ValueError", 0.0814602030455084]], "answer2": [["list", 0.2775158373716504], ["Exception", 0.19475282461292226], ["str", 0.18105488941307196], ["List[Union[Any, Any]]", 0.08267863927124955], ["ValueError", 0.0814602030455084]], "candidates1": [["list", 0.7547531689440276], ["List[Union[Any, Any]]", 0.1358500742333977], ["Exception", 0.10939675682257502]], "candidates2": [["list", 0.7547531689440276], ["List[Union[Any, Any]]", 0.1358500742333977], ["Exception", 0.10939675682257502]], "target1": [["list", 0.30790643986758287], ["float", 0.07388070995925396], ["List[str]", 0.0732593791618238], ["Dict[str, int]", 0.07314912181597809], ["dict", 0.06553471730980227]], "target2": [["list", 0.30790643986758287], ["float", 0.07388070995925396], ["List[str]", 0.0732593791618238], ["Dict[str, int]", 0.07314912181597809], ["dict", 0.06553471730980227]]}}], "name": "TestCombinationSum", "q_name": "TestCombinationSum", "variables": {}, "variables_p": {}}, {"cls_lc": [[127, 0], [173, 63]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[129, 4], [149, 53]], "fn_var_ln": {"answer1": [[131, 8], [131, 15]], "answer2": [[142, 8], [142, 15]], "target1": [[130, 8], [130, 15]], "target2": [[141, 8], [141, 15]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "get_factors", "target1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "get_factors", "target2", "sorted", "answer2"]], "target1": [["self", "assertEqual", "sorted", "get_factors", "target1", "sorted", "answer1"]], "target2": [["self", "assertEqual", "sorted", "get_factors", "target2", "sorted", "answer2"]]}, "name": "test_get_factors", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "get_factors", "target1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "get_factors", "target2", "sorted", "answer2"], ["self", "assertEqual", "sorted", "get_factors"], ["self", "assertEqual", "sorted", "get_factors"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFactorCombinations.test_get_factors", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "target1": "", "target2": ""}, "variables_p": {"answer1": [["int", 0.9087934260304203], ["Dict[int, List[int]]", 0.09120657396957962]], "answer2": [["int", 0.9087934260304203], ["Dict[int, List[int]]", 0.09120657396957962]], "target1": [["int", 0.7049939627531828], ["float", 0.20112368120635865], ["dict", 0.09388235604045851]], "target2": [["int", 0.7049939627531828], ["float", 0.20112368120635865], ["dict", 0.09388235604045851]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[151, 4], [173, 63]], "fn_var_ln": {"answer1": [[153, 8], [153, 15]], "answer2": [[165, 8], [165, 15]], "target1": [[152, 8], [152, 15]], "target2": [[164, 8], [164, 15]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "recursive_get_factors", "target1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "recursive_get_factors", "target2", "sorted", "answer2"]], "target1": [["self", "assertEqual", "sorted", "recursive_get_factors", "target1", "sorted", "answer1"]], "target2": [["self", "assertEqual", "sorted", "recursive_get_factors", "target2", "sorted", "answer2"]]}, "name": "test_recursive_get_factors", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "recursive_get_factors", "target1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "recursive_get_factors", "target2", "sorted", "answer2"], ["self", "assertEqual", "sorted", "recursive_get_factors"], ["self", "assertEqual", "sorted", "recursive_get_factors"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFactorCombinations.test_recursive_get_factors", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "target1": "", "target2": ""}, "variables_p": {"answer1": [["list", 0.24655494667855132], ["str", 0.1710058754132715], ["List[str]", 0.11002233336176023], ["Tuple[Literal]", 0.10814575291906786], ["Dict[str, Union[Any, bool]]", 0.09999620516303825]], "answer2": [["list", 0.24655494667855132], ["str", 0.1710058754132715], ["List[str]", 0.11002233336176023], ["Tuple[Literal]", 0.10814575291906786], ["Dict[str, Union[Any, bool]]", 0.09999620516303825]], "target1": [["list", 0.3922727410901647], ["str", 0.2889498072467941], ["Dict[str, Union[Any, Any]]", 0.14076384722858004], ["dict", 0.08774497030887664]], "target2": [["list", 0.3922727410901647], ["str", 0.2889498072467941], ["Dict[str, Union[Any, Any]]", 0.14076384722858004], ["dict", 0.08774497030887664]]}}], "name": "TestFactorCombinations", "q_name": "TestFactorCombinations", "variables": {}, "variables_p": {}}, {"cls_lc": [[176, 0], [222, 59]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[178, 4], [189, 60]], "fn_var_ln": {"board": [[179, 8], [179, 13]], "result": [[187, 8], [187, 14]], "test_result": [[188, 8], [188, 19]], "words": [[186, 8], [186, 13]]}, "fn_var_occur": {"board": [["result", "find_words", "board", "words"]], "result": [["result", "find_words", "board", "words"], ["self", "assertEqual", "sorted", "result", "sorted", "test_result"]], "test_result": [["self", "assertEqual", "sorted", "result", "sorted", "test_result"]], "words": [["result", "find_words", "board", "words"]]}, "name": "test_normal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "result", "sorted", "test_result"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFindWords.test_normal", "ret_exprs": [], "ret_type": "", "variables": {"board": "", "result": "", "test_result": "", "words": ""}, "variables_p": {"board": [["bytes", 0.1120712961239057], ["str", 0.10967660693227307]], "result": [["dict", 0.2616941945836254], ["Dict[str, Optional[int]]", 0.08562166126476917], ["Tuple[Dict[str, Any], int]", 0.08365095634968828], ["Dict[str, Any]", 0.0817029028515976]], "test_result": [["list", 0.31265702537683804], ["List[str]", 0.2744617909054614], ["str", 0.21235428013906438], ["Dict[str, Union[Any, Any]]", 0.10755603087878285], ["List[int]", 0.09297087269985334]], "words": [["bytes", 0.1120712961239057], ["str", 0.10967660693227307]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[191, 4], [200, 54]], "fn_var_ln": {"board": [[192, 8], [192, 13]], "words": [[199, 8], [199, 13]]}, "fn_var_occur": {"board": [["self", "assertEqual", "find_words", "board", "words"]], "words": [["self", "assertEqual", "find_words", "board", "words"]]}, "name": "test_none", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "find_words", "board", "words"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFindWords.test_none", "ret_exprs": [], "ret_type": "", "variables": {"board": "", "words": ""}, "variables_p": {"board": [["str", 0.44302220968595035], ["List[bytes]", 0.22959970627612605], ["list", 0.15143987342814658], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.04461040735174684], ["List[int]", 0.033203219550859614], ["dict", 0.032708194569056874], ["Dict[str, object]", 0.032708194569056874], ["int", 0.032708194569056874]], "words": [["str", 0.44302220968595035], ["List[bytes]", 0.22959970627612605], ["list", 0.15143987342814658], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.04461040735174684], ["List[int]", 0.033203219550859614], ["dict", 0.032708194569056874], ["Dict[str, object]", 0.032708194569056874], ["int", 0.032708194569056874]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[202, 4], [205, 54]], "fn_var_ln": {"board": [[203, 8], [203, 13]], "words": [[204, 8], [204, 13]]}, "fn_var_occur": {"board": [["self", "assertEqual", "find_words", "board", "words"]], "words": [["self", "assertEqual", "find_words", "board", "words"]]}, "name": "test_empty", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "find_words", "board", "words"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFindWords.test_empty", "ret_exprs": [], "ret_type": "", "variables": {"board": "", "words": ""}, "variables_p": {"board": [["str", 0.44302220968595035], ["List[bytes]", 0.22959970627612605], ["list", 0.15143987342814658], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.04461040735174684], ["List[int]", 0.033203219550859614], ["dict", 0.032708194569056874], ["Dict[str, object]", 0.032708194569056874], ["int", 0.032708194569056874]], "words": [["str", 0.44302220968595035], ["List[bytes]", 0.22959970627612605], ["list", 0.15143987342814658], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.04461040735174684], ["List[int]", 0.033203219550859614], ["dict", 0.032708194569056874], ["Dict[str, object]", 0.032708194569056874], ["int", 0.032708194569056874]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[207, 4], [213, 59]], "fn_var_ln": {"board": [[208, 8], [208, 13]], "words": [[212, 8], [212, 13]]}, "fn_var_occur": {"board": [["self", "assertEqual", "find_words", "board", "words"]], "words": [["self", "assertEqual", "find_words", "board", "words"]]}, "name": "test_uneven", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "find_words", "board", "words"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFindWords.test_uneven", "ret_exprs": [], "ret_type": "", "variables": {"board": "", "words": ""}, "variables_p": {"board": [["str", 0.44302220968595035], ["List[bytes]", 0.22959970627612605], ["list", 0.15143987342814658], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.04461040735174684], ["List[int]", 0.033203219550859614], ["dict", 0.032708194569056874], ["Dict[str, object]", 0.032708194569056874], ["int", 0.032708194569056874]], "words": [["str", 0.44302220968595035], ["List[bytes]", 0.22959970627612605], ["list", 0.15143987342814658], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal]", 0.04461040735174684], ["List[int]", 0.033203219550859614], ["dict", 0.032708194569056874], ["Dict[str, object]", 0.032708194569056874], ["int", 0.032708194569056874]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[215, 4], [222, 59]], "fn_var_ln": {"board": [[216, 8], [216, 13]], "words": [[221, 8], [221, 13]]}, "fn_var_occur": {"board": [["self", "assertTrue", "len", "find_words", "board", "words"]], "words": [["self", "assertTrue", "len", "find_words", "board", "words"]]}, "name": "test_repeat", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "len", "find_words", "board", "words"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestFindWords.test_repeat", "ret_exprs": [], "ret_type": "", "variables": {"board": "", "words": ""}, "variables_p": {"board": [["list", 0.2637796249509122], ["List[Tuple[str, Any, Any]]", 0.13748176134007664], ["Dict[str, int]", 0.12212064086386504], ["Type[List[Any]]", 0.11139445044387496], ["List[int]", 0.10510406283877115], ["List[List[str]]", 0.0942188482146789], ["str", 0.08535542822381464], ["Set[str]", 0.08054518312400664]], "words": [["list", 0.2637796249509122], ["List[Tuple[str, Any, Any]]", 0.13748176134007664], ["Dict[str, int]", 0.12212064086386504], ["Type[List[Any]]", 0.11139445044387496], ["List[int]", 0.10510406283877115], ["List[List[str]]", 0.0942188482146789], ["str", 0.08535542822381464], ["Set[str]", 0.08054518312400664]]}}], "name": "TestFindWords", "q_name": "TestFindWords", "variables": {}, "variables_p": {}}, {"cls_lc": [[225, 0], [240, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[226, 4], [240, 41]], "fn_var_ln": {"answer1": [[228, 8], [228, 15]], "answer2": [[234, 8], [234, 15]], "word1": [[227, 8], [227, 13]], "word2": [[233, 8], [233, 13]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "generate_abbreviations", "word1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "generate_abbreviations", "word2", "sorted", "answer2"]], "word1": [["self", "assertEqual", "sorted", "generate_abbreviations", "word1", "sorted", "answer1"]], "word2": [["self", "assertEqual", "sorted", "generate_abbreviations", "word2", "sorted", "answer2"]]}, "name": "test_generate_abbreviations", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "generate_abbreviations", "word1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "generate_abbreviations", "word2", "sorted", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGenerateAbbreviations.test_generate_abbreviations", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "word1": "", "word2": ""}, "variables_p": {"answer1": [["list", 0.5198239663753841], ["str", 0.10334176336339533], ["Dict[str, None]", 0.10209740638746584], ["int", 0.09629410639547673], ["List[bool]", 0.09111569666627801]], "answer2": [["list", 0.5198239663753841], ["str", 0.10334176336339533], ["Dict[str, None]", 0.10209740638746584], ["int", 0.09629410639547673], ["List[bool]", 0.09111569666627801]], "word1": [["str", 0.22863686909389386], ["Dict[int, int]", 0.12362856761092637], ["Dict[str, int]", 0.12362856761092637], ["Any[Any]", 0.09442129155831355], ["int", 0.09044142767915479], ["list", 0.08514026036044563], ["List[int]", 0.08191196947801606]], "word2": [["str", 0.22863686909389386], ["Dict[int, int]", 0.12362856761092637], ["Dict[str, int]", 0.12362856761092637], ["Any[Any]", 0.09442129155831355], ["int", 0.09044142767915479], ["list", 0.08514026036044563], ["List[int]", 0.08191196947801606]]}}], "name": "TestGenerateAbbreviations", "q_name": "TestGenerateAbbreviations", "variables": {}, "variables_p": {}}, {"cls_lc": [[243, 0], [255, 58]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[245, 4], [255, 58]], "fn_var_ln": {"pattern1": [[246, 8], [246, 16]], "pattern2": [[248, 8], [248, 16]], "pattern3": [[250, 8], [250, 16]], "string1": [[247, 8], [247, 15]], "string2": [[249, 8], [249, 15]], "string3": [[251, 8], [251, 15]]}, "fn_var_occur": {"pattern1": [["self", "assertTrue", "pattern_match", "pattern1", "string1"]], "pattern2": [["self", "assertTrue", "pattern_match", "pattern2", "string2"]], "pattern3": [["self", "assertFalse", "pattern_match", "pattern3", "string3"]], "string1": [["self", "assertTrue", "pattern_match", "pattern1", "string1"]], "string2": [["self", "assertTrue", "pattern_match", "pattern2", "string2"]], "string3": [["self", "assertFalse", "pattern_match", "pattern3", "string3"]]}, "name": "test_pattern_match", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "pattern_match", "pattern1", "string1"], ["self", "assertTrue", "pattern_match", "pattern2", "string2"], ["self", "assertFalse", "pattern_match", "pattern3", "string3"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPatternMatch.test_pattern_match", "ret_exprs": [], "ret_type": "", "variables": {"pattern1": "", "pattern2": "", "pattern3": "", "string1": "", "string2": "", "string3": ""}, "variables_p": {"pattern1": [["Dict[str, Any]", 0.31075702532234534], ["Dict[str, int]", 0.09327645053471298]], "pattern2": [["Dict[str, Any]", 0.31075702532234534], ["Dict[str, int]", 0.09327645053471298]], "pattern3": [["Dict[str, Any]", 0.31075702532234534], ["Dict[str, int]", 0.09327645053471298]], "string1": [["Dict[int, int]", 0.11940499570019875], ["Dict[str, Union[dict, Any, Any, Any, Any, Any, Any]]", 0.08639270795899211], ["str", 0.0856744344749231], ["Dict[str, Any]", 0.0854916993617801], ["Pattern[str]", 0.08496807105916733], ["dict", 0.0816953035372874], ["list", 0.08084778595148717], ["Dict[str, Union[Any, Any]]", 0.08084208848791576]], "string2": [["Dict[int, int]", 0.11940499570019875], ["Dict[str, Union[dict, Any, Any, Any, Any, Any, Any]]", 0.08639270795899211], ["str", 0.0856744344749231], ["Dict[str, Any]", 0.0854916993617801], ["Pattern[str]", 0.08496807105916733], ["dict", 0.0816953035372874], ["list", 0.08084778595148717], ["Dict[str, Union[Any, Any]]", 0.08084208848791576]], "string3": [["Dict[int, int]", 0.11940499570019875], ["Dict[str, Union[dict, Any, Any, Any, Any, Any, Any]]", 0.08639270795899211], ["str", 0.0856744344749231], ["Dict[str, Any]", 0.0854916993617801], ["Pattern[str]", 0.08496807105916733], ["dict", 0.0816953035372874], ["list", 0.08084778595148717], ["Dict[str, Union[Any, Any]]", 0.08084208848791576]]}}], "name": "TestPatternMatch", "q_name": "TestPatternMatch", "variables": {}, "variables_p": {}}, {"cls_lc": [[258, 0], [266, 55]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[260, 4], [266, 55]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_generate_parenthesis", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "generate_parenthesis_v1"], ["self", "assertEqual", "generate_parenthesis_v1"], ["self", "assertEqual", "generate_parenthesis_v2"], ["self", "assertEqual", "generate_parenthesis_v2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestGenerateParenthesis.test_generate_parenthesis", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestGenerateParenthesis", "q_name": "TestGenerateParenthesis", "variables": {}, "variables_p": {}}, {"cls_lc": [[269, 0], [278, 78]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [278, 78]], "fn_var_ln": {"answer1": [[273, 8], [273, 15]], "answer2": [[277, 8], [277, 15]], "digit1": [[272, 8], [272, 14]], "digit2": [[276, 8], [276, 14]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "letter_combinations", "digit1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "letter_combinations", "digit2", "sorted", "answer2"]], "digit1": [["self", "assertEqual", "sorted", "letter_combinations", "digit1", "sorted", "answer1"]], "digit2": [["self", "assertEqual", "sorted", "letter_combinations", "digit2", "sorted", "answer2"]]}, "name": "test_letter_combinations", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "letter_combinations", "digit1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "letter_combinations", "digit2", "sorted", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestLetterCombinations.test_letter_combinations", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "digit1": "", "digit2": ""}, "variables_p": {"answer1": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "answer2": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "digit1": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]], "digit2": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]]}}], "name": "TestLetterCombinations", "q_name": "TestLetterCombinations", "variables": {}, "variables_p": {}}, {"cls_lc": [[281, 0], [300, 41]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[283, 4], [300, 41]], "fn_var_ln": {"answer1": [[285, 8], [285, 15]], "answer2": [[289, 8], [289, 15]], "answer3": [[294, 8], [294, 15]], "string1": [[284, 8], [284, 15]], "string2": [[288, 8], [288, 15]], "string3": [[293, 8], [293, 15]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "palindromic_substrings", "string1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "palindromic_substrings", "string2", "sorted", "answer2"]], "answer3": [["self", "assertEqual", "sorted", "palindromic_substrings", "string3", "sorted", "answer3"]], "string1": [["self", "assertEqual", "palindromic_substrings", "string1", "sorted", "answer1"]], "string2": [["self", "assertEqual", "sorted", "palindromic_substrings", "string2", "sorted", "answer2"]], "string3": [["self", "assertEqual", "sorted", "palindromic_substrings", "string3", "sorted", "answer3"]]}, "name": "test_palindromic_substrings", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "palindromic_substrings", "string1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "palindromic_substrings", "string2", "sorted", "answer2"], ["self", "assertEqual", "sorted", "palindromic_substrings", "string3", "sorted", "answer3"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPalindromicSubstrings.test_palindromic_substrings", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "answer3": "", "string1": "", "string2": "", "string3": ""}, "variables_p": {"answer1": [["Dict[int, Any]", 0.29908927362192494], ["Dict[str, str]", 0.18164966104123664], ["bool", 0.10508966418093463], ["List[bool]", 0.10062044240615543], ["int", 0.08508408438120071], ["dict", 0.08507570134283819]], "answer2": [["list", 0.504827922443817], ["Exception", 0.11121123435852884], ["Dict[str, None]", 0.10513022257260965], ["List[str]", 0.09473425611253662], ["Dict[str, Union[None, dict, Any]]", 0.09409682564723182]], "answer3": [["list", 0.504827922443817], ["Exception", 0.11121123435852884], ["Dict[str, None]", 0.10513022257260965], ["List[str]", 0.09473425611253662], ["Dict[str, Union[None, dict, Any]]", 0.09409682564723182]], "string1": [["str", 0.29512091980970634], ["List[Dict[str, Any]]", 0.22091427487241655], ["List[str]", 0.1984518721402418], ["dict", 0.10212438260667041], ["List[float]", 0.0963454619198329], ["Dict[Any, List[str]]", 0.08704308865113203]], "string2": [["list", 0.8082273447257584], ["str", 0.19177265527424187]], "string3": [["list", 0.8082273447257584], ["str", 0.19177265527424187]]}}], "name": "TestPalindromicSubstrings", "q_name": "TestPalindromicSubstrings", "variables": {}, "variables_p": {}}, {"cls_lc": [[303, 0], [319, 72]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[305, 4], [319, 72]], "fn_var_ln": {"answer1": [[307, 8], [307, 15]], "answer2": [[311, 8], [311, 15]], "answer3": [[317, 8], [317, 15]], "nums1": [[306, 8], [306, 13]], "nums2": [[310, 8], [310, 13]], "nums3": [[316, 8], [316, 13]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "permute_unique", "nums1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "permute_unique", "nums2", "sorted", "answer2"]], "answer3": [["self", "assertEqual", "sorted", "permute_unique", "nums3", "sorted", "answer3"]], "nums1": [["self", "assertEqual", "sorted", "permute_unique", "nums1", "sorted", "answer1"]], "nums2": [["self", "assertEqual", "sorted", "permute_unique", "nums2", "sorted", "answer2"]], "nums3": [["self", "assertEqual", "sorted", "permute_unique", "nums3", "sorted", "answer3"]]}, "name": "test_permute_unique", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "permute_unique", "nums1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "permute_unique", "nums2", "sorted", "answer2"], ["self", "assertEqual", "sorted", "permute_unique", "nums3", "sorted", "answer3"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPermuteUnique.test_permute_unique", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "answer3": "", "nums1": "", "nums2": "", "nums3": ""}, "variables_p": {"answer1": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "answer2": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "answer3": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "nums1": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]], "nums2": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]], "nums3": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]]}}], "name": "TestPermuteUnique", "q_name": "TestPermuteUnique", "variables": {}, "variables_p": {}}, {"cls_lc": [[322, 0], [352, 75]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[324, 4], [337, 65]], "fn_var_ln": {"answer1": [[326, 8], [326, 15]], "answer2": [[335, 8], [335, 15]], "nums1": [[325, 8], [325, 13]], "nums2": [[334, 8], [334, 13]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "permute", "nums1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "permute", "nums2", "sorted", "answer2"]], "nums1": [["self", "assertEqual", "sorted", "permute", "nums1", "sorted", "answer1"]], "nums2": [["self", "assertEqual", "sorted", "permute", "nums2", "sorted", "answer2"]]}, "name": "test_permute", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "permute", "nums1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "permute", "nums2", "sorted", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPermute.test_permute", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "nums1": "", "nums2": ""}, "variables_p": {"answer1": [["list", 0.5297332427317303], ["Exception", 0.17236231444039424], ["str", 0.12365859583165018]], "answer2": [["list", 0.5297332427317303], ["Exception", 0.17236231444039424], ["str", 0.12365859583165018]], "nums1": [["list", 0.5273906510652391], ["int", 0.1561697514503317], ["dict", 0.07808487572516586], ["Dict[str, object]", 0.07808487572516586]], "nums2": [["list", 0.5273906510652391], ["int", 0.1561697514503317], ["dict", 0.07808487572516586], ["Dict[str, object]", 0.07808487572516586]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[339, 4], [352, 75]], "fn_var_ln": {"answer1": [[341, 8], [341, 15]], "answer2": [[350, 8], [350, 15]], "nums1": [[340, 8], [340, 13]], "nums2": [[349, 8], [349, 13]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "permute_recursive", "nums1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "permute_recursive", "nums2", "sorted", "answer2"]], "nums1": [["self", "assertEqual", "sorted", "permute_recursive", "nums1", "sorted", "answer1"]], "nums2": [["self", "assertEqual", "sorted", "permute_recursive", "nums2", "sorted", "answer2"]]}, "name": "test_permute_recursive", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "permute_recursive", "nums1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "permute_recursive", "nums2", "sorted", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestPermute.test_permute_recursive", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "nums1": "", "nums2": ""}, "variables_p": {"answer1": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "answer2": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "nums1": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]], "nums2": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]]}}], "name": "TestPermute", "q_name": "TestPermute", "variables": {}, "variables_p": {}}, {"cls_lc": [[355, 0], [366, 72]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[357, 4], [366, 72]], "fn_var_ln": {"answer1": [[359, 8], [359, 15]], "answer2": [[363, 8], [363, 15]], "nums1": [[358, 8], [358, 13]], "nums2": [[362, 8], [362, 13]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "subsets_unique", "nums1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "subsets_unique", "nums2", "sorted", "answer2"]], "nums1": [["self", "assertEqual", "sorted", "subsets_unique", "nums1", "sorted", "answer1"]], "nums2": [["self", "assertEqual", "sorted", "subsets_unique", "nums2", "sorted", "answer2"]]}, "name": "test_subsets_unique", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "subsets_unique", "nums1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "subsets_unique", "nums2", "sorted", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubsetsUnique.test_subsets_unique", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "nums1": "", "nums2": ""}, "variables_p": {"answer1": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "answer2": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "nums1": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]], "nums2": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]]}}], "name": "TestSubsetsUnique", "q_name": "TestSubsetsUnique", "variables": {}, "variables_p": {}}, {"cls_lc": [[369, 0], [391, 68]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[371, 4], [380, 65]], "fn_var_ln": {"answer1": [[373, 8], [373, 15]], "answer2": [[377, 8], [377, 15]], "nums1": [[372, 8], [372, 13]], "nums2": [[376, 8], [376, 13]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "subsets", "nums1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "subsets", "nums2", "sorted", "answer2"]], "nums1": [["self", "assertEqual", "sorted", "subsets", "nums1", "sorted", "answer1"]], "nums2": [["self", "assertEqual", "sorted", "subsets", "nums2", "sorted", "answer2"]]}, "name": "test_subsets", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "subsets", "nums1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "subsets", "nums2", "sorted", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubsets.test_subsets", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "nums1": "", "nums2": ""}, "variables_p": {"answer1": [["list", 0.5297332427317303], ["Exception", 0.17236231444039424], ["str", 0.12365859583165018]], "answer2": [["list", 0.5297332427317303], ["Exception", 0.17236231444039424], ["str", 0.12365859583165018]], "nums1": [["list", 0.5273906510652391], ["int", 0.1561697514503317], ["dict", 0.07808487572516586], ["Dict[str, object]", 0.07808487572516586]], "nums2": [["list", 0.5273906510652391], ["int", 0.1561697514503317], ["dict", 0.07808487572516586], ["Dict[str, object]", 0.07808487572516586]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[382, 4], [391, 68]], "fn_var_ln": {"answer1": [[384, 8], [384, 15]], "answer2": [[388, 8], [388, 15]], "nums1": [[383, 8], [383, 13]], "nums2": [[387, 8], [387, 13]]}, "fn_var_occur": {"answer1": [["self", "assertEqual", "sorted", "subsets_v2", "nums1", "sorted", "answer1"]], "answer2": [["self", "assertEqual", "sorted", "subsets_v2", "nums2", "sorted", "answer2"]], "nums1": [["self", "assertEqual", "sorted", "subsets_v2", "nums1", "sorted", "answer1"]], "nums2": [["self", "assertEqual", "sorted", "subsets_v2", "nums2", "sorted", "answer2"]]}, "name": "test_subsets_v2", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sorted", "subsets_v2", "nums1", "sorted", "answer1"], ["self", "assertEqual", "sorted", "subsets_v2", "nums2", "sorted", "answer2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSubsets.test_subsets_v2", "ret_exprs": [], "ret_type": "", "variables": {"answer1": "", "answer2": "", "nums1": "", "nums2": ""}, "variables_p": {"answer1": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "answer2": [["list", 0.5391358851006917], ["Exception", 0.15432762559370217], ["str", 0.13988506107515233]], "nums1": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]], "nums2": [["list", 0.47103409911140226], ["int", 0.1690077742781089], ["dict", 0.08450388713905445], ["Dict[str, object]", 0.08450388713905445]]}}], "name": "TestSubsets", "q_name": "TestSubsets", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["algorithms", "backtrack", "add_operators", "permute_iter", "anagram", "array_sum_combinations", "unique_array_sum_combinations", "combination_sum", "get_factors", "recursive_get_factors", "find_words", "generate_abbreviations", "generate_parenthesis_v1", "generate_parenthesis_v2", "letter_combinations", "palindromic_substrings", "pattern_match", "permute_unique", "permute", "permute_recursive", "subsets_unique", "subsets", "subsets_v2", "unittest"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 116}, "session_id": "m300f7P3WgvfotxCWL5T-nQeFL0K-h5JCHqpTKXtw48", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}