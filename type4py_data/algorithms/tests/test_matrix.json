{"error": null, "response": {"classes": [{"cls_lc": [[19, 0], [41, 65]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[20, 4], [41, 65]], "fn_var_ln": {"grid1": [[28, 8], [28, 13]], "grid2": [[34, 8], [34, 13]]}, "fn_var_occur": {"grid1": [["self", "assertEqual", "bomb_enemy", "max_killed_enemies", "grid1"], ["self", "assertEqual", "bomb_enemy", "max_killed_enemies", "grid1"]], "grid2": [["self", "assertEqual", "bomb_enemy", "max_killed_enemies", "grid2"]]}, "name": "test_3x4", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "bomb_enemy", "max_killed_enemies", "grid1"], ["self", "assertEqual", "bomb_enemy", "max_killed_enemies", "grid1"], ["self", "assertEqual", "bomb_enemy", "max_killed_enemies", "grid2"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestBombEnemy.test_3x4", "ret_exprs": [], "ret_type": "", "variables": {"grid1": "", "grid2": ""}, "variables_p": {"grid1": [["int", 0.43704253098569057], ["List[int]", 0.10114810819995854], ["List[float]", 0.09729490347685796], ["dict", 0.09063721362678197], ["Counter[int]", 0.08902994467376904]], "grid2": [["Tuple[int, int, int]", 0.4171695901015525], ["list", 0.3037577011035188], ["Dict[str, str]", 0.08913988639537127]]}}], "name": "TestBombEnemy", "q_name": "TestBombEnemy", "variables": {}, "variables_p": {}}, {"cls_lc": [[44, 0], [67, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[52, 4], [67, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_copy_transform", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "copy_transform", "rotate_clockwise"], ["self", "assertEqual", "copy_transform", "rotate_counterclockwise"], ["self", "assertEqual", "copy_transform", "top_left_invert"], ["self", "assertEqual", "copy_transform", "bottom_left_invert"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCopyTransform.test_copy_transform", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestCopyTransform", "q_name": "TestCopyTransform", "variables": {}, "variables_p": {}}, {"cls_lc": [[70, 0], [103, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[78, 4], [103, 45]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_crout_matrix_decomposition", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "crout_matrix_decomposition", "crout_matrix_decomposition"], ["self", "assertEqual", "crout_matrix_decomposition", "crout_matrix_decomposition"], ["self", "assertEqual", "crout_matrix_decomposition", "crout_matrix_decomposition"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCroutMatrixDecomposition.test_crout_matrix_decomposition", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestCroutMatrixDecomposition", "q_name": "TestCroutMatrixDecomposition", "variables": {}, "variables_p": {}}, {"cls_lc": [[106, 0], [139, 74]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[114, 4], [139, 74]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_cholesky_matrix_decomposition", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "cholesky_matrix_decomposition", "cholesky_decomposition"], ["self", "assertEqual", "None", "cholesky_matrix_decomposition", "cholesky_decomposition"], ["self", "assertEqual", "None", "cholesky_matrix_decomposition", "cholesky_decomposition"], ["self", "assertEqual", "cholesky_matrix_decomposition", "cholesky_decomposition"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestCholeskyMatrixDecomposition.test_cholesky_matrix_decomposition", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestCholeskyMatrixDecomposition", "q_name": "TestCholeskyMatrixDecomposition", "variables": {}, "variables_p": {}}, {"cls_lc": [[142, 0], [179, 45]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[150, 4], [179, 45]], "fn_var_ln": {"m1": [[153, 8], [153, 10]], "m2": [[157, 8], [157, 10]], "m3": [[160, 8], [160, 10]], "m4": [[163, 8], [163, 10]], "m5": [[166, 8], [166, 10]], "m6": [[169, 8], [169, 10]]}, "fn_var_occur": {"m1": [["self", "assertEqual", "matrix_inversion", "invert_matrix", "m1"]], "m2": [["self", "assertEqual", "matrix_inversion", "invert_matrix", "m2"]], "m3": [["self", "assertEqual", "matrix_inversion", "invert_matrix", "m3"]], "m4": [["self", "assertEqual", "matrix_inversion", "invert_matrix", "m4"]], "m5": [["self", "assertEqual", "matrix_inversion", "invert_matrix", "m5"]], "m6": [["self", "assertEqual", "matrix_inversion", "invert_matrix", "m6", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction"]]}, "name": "test_inversion", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "matrix_inversion", "invert_matrix", "m1"], ["self", "assertEqual", "matrix_inversion", "invert_matrix", "m2"], ["self", "assertEqual", "matrix_inversion", "invert_matrix", "m3"], ["self", "assertEqual", "matrix_inversion", "invert_matrix", "m4"], ["self", "assertEqual", "matrix_inversion", "invert_matrix", "m5"], ["self", "assertEqual", "matrix_inversion", "invert_matrix", "m6", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction", "Fraction"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestInversion.test_inversion", "ret_exprs": [], "ret_type": "", "variables": {"m1": "", "m2": "", "m3": "", "m4": "", "m5": "", "m6": ""}, "variables_p": {"m1": [["list", 0.31897556285606693], ["float", 0.12644188851473237], ["Dict[int, str]", 0.10187897324519464], ["List[str]", 0.0935145898204137], ["List[int]", 0.08716442835189701], ["Dict[str, str]", 0.07841895629231928], ["dict", 0.07683716081744384]], "m2": [["list", 0.31897556285606693], ["float", 0.12644188851473237], ["Dict[int, str]", 0.10187897324519464], ["List[str]", 0.0935145898204137], ["List[int]", 0.08716442835189701], ["Dict[str, str]", 0.07841895629231928], ["dict", 0.07683716081744384]], "m3": [["list", 0.31897556285606693], ["float", 0.12644188851473237], ["Dict[int, str]", 0.10187897324519464], ["List[str]", 0.0935145898204137], ["List[int]", 0.08716442835189701], ["Dict[str, str]", 0.07841895629231928], ["dict", 0.07683716081744384]], "m4": [["list", 0.31897556285606693], ["float", 0.12644188851473237], ["Dict[int, str]", 0.10187897324519464], ["List[str]", 0.0935145898204137], ["List[int]", 0.08716442835189701], ["Dict[str, str]", 0.07841895629231928], ["dict", 0.07683716081744384]], "m5": [["list", 0.31897556285606693], ["float", 0.12644188851473237], ["Dict[int, str]", 0.10187897324519464], ["List[str]", 0.0935145898204137], ["List[int]", 0.08716442835189701], ["Dict[str, str]", 0.07841895629231928], ["dict", 0.07683716081744384]], "m6": [["list", 0.4274068380416018], ["str", 0.2504871522391315], ["Dict[Tuple[Any, Any], Any]", 0.07570223315182618], ["List[Dict[str, Any]]", 0.07564087452429152], ["int", 0.07444468205919776]]}}], "name": "TestInversion", "q_name": "TestInversion", "variables": {}, "variables_p": {}}, {"cls_lc": [[182, 0], [203, 68]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[190, 4], [203, 68]], "fn_var_ln": {"mat": [[191, 8], [191, 11]]}, "fn_var_occur": {"mat": [["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"], ["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"], ["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"], ["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"]]}, "name": "test_matrix_exponentiation", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"], ["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"], ["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"], ["self", "assertEqual", "matrix_exponentiation", "matrix_exponentiation", "mat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMatrixExponentiation.test_matrix_exponentiation", "ret_exprs": [], "ret_type": "", "variables": {"mat": ""}, "variables_p": {"mat": [["List[str]", 8.55456248646506e-12], ["Dict[str, int]", 5.4207234063614154e-12]]}}], "name": "TestMatrixExponentiation", "q_name": "TestMatrixExponentiation", "variables": {}, "variables_p": {}}, {"cls_lc": [[206, 0], [216, 66]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[214, 4], [216, 66]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_multiply", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "multiply", "multiply"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestMultiply.test_multiply", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestMultiply", "q_name": "TestMultiply", "variables": {}, "variables_p": {}}, {"cls_lc": [[219, 0], [230, 46]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[227, 4], [230, 46]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_rotate_image", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "rotate_image", "rotate"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestRotateImage.test_rotate_image", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestRotateImage", "q_name": "TestRotateImage", "variables": {}, "variables_p": {}}, {"cls_lc": [[233, 0], [247, 28]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[241, 4], [247, 28]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_sparse_dot_vector", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sparse_dot_vector", "dot_product", "sparse_dot_vector", "vector_to_index_value_list", "sparse_dot_vector", "vector_to_index_value_list"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSparseDotVector.test_sparse_dot_vector", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestSparseDotVector", "q_name": "TestSparseDotVector", "variables": {}, "variables_p": {}}, {"cls_lc": [[250, 0], [260, 76]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[258, 4], [260, 76]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_spiral_traversal", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "spiral_traversal", "spiral_traversal"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSpiralTraversal.test_spiral_traversal", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestSpiralTraversal", "q_name": "TestSpiralTraversal", "variables": {}, "variables_p": {}}, {"cls_lc": [[263, 0], [354, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[271, 4], [354, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "test_sudoku_validator", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertTrue", "sudoku_validator", "valid_solution"], ["self", "assertTrue", "sudoku_validator", "valid_solution_hashtable"], ["self", "assertTrue", "sudoku_validator", "valid_solution_set"], ["self", "assertFalse", "sudoku_validator", "valid_solution"], ["self", "assertFalse", "sudoku_validator", "valid_solution_hashtable"], ["self", "assertFalse", "sudoku_validator", "valid_solution_set"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSudokuValidator.test_sudoku_validator", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "TestSudokuValidator", "q_name": "TestSudokuValidator", "variables": {}, "variables_p": {}}, {"cls_lc": [[357, 0], [372, 68]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[365, 4], [372, 68]], "fn_var_ln": {"mat": [[366, 8], [366, 11]]}, "fn_var_occur": {"mat": [["self", "assertEqual", "sum_sub_squares", "sum_sub_squares", "mat"]]}, "name": "test_sum_sub_squares", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sum_sub_squares", "sum_sub_squares", "mat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSumSubSquares.test_sum_sub_squares", "ret_exprs": [], "ret_type": "", "variables": {"mat": ""}, "variables_p": {"mat": [["list", 0.30000000000000004], ["Dict[str, object]", 0.2], ["int", 0.2], ["dict", 0.1], ["str", 0.1]]}}], "name": "TestSumSubSquares", "q_name": "TestSumSubSquares", "variables": {}, "variables_p": {}}, {"cls_lc": [[375, 0], [387, 10]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[376, 4], [387, 10]], "fn_var_ln": {"mat": [[377, 8], [377, 11]]}, "fn_var_occur": {"mat": [["self", "assertEqual", "sort_matrix_diagonally", "sort_diagonally", "mat"]]}, "name": "test_sort_diagonally", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "sort_matrix_diagonally", "sort_diagonally", "mat"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSortMatrixDiagonally.test_sort_diagonally", "ret_exprs": [], "ret_type": "", "variables": {"mat": ""}, "variables_p": {"mat": [["list", 0.30000000000000004], ["Dict[str, object]", 0.2], ["int", 0.2], ["dict", 0.1], ["str", 0.1]]}}], "name": "TestSortMatrixDiagonally", "q_name": "TestSortMatrixDiagonally", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["algorithms", "matrix", "bomb_enemy", "copy_transform", "crout_matrix_decomposition", "cholesky_matrix_decomposition", "matrix_exponentiation", "matrix_inversion", "multiply", "rotate_image", "sparse_dot_vector", "spiral_traversal", "sudoku_validator", "sum_sub_squares", "sort_matrix_diagonally", "unittest", "fractions", "Fraction"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 24}, "session_id": "gr_BD_YJfukZtVjPBWUx7xFSY2Rpd0yRsTvH1pMXxk4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}