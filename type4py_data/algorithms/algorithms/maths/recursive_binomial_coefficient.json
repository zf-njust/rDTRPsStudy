{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Calculates the binomial coefficient, C(n,k), with n>=k using recursion", "long_descr": "Time complexity is O(k), so can calculate fairly quickly for large values of k.\n\n>>> recursive_binomial_coefficient(5,0)\n1\n\n>>> recursive_binomial_coefficient(8,2)\n28\n\n>>> recursive_binomial_coefficient(500,300)\n5054949849935535817667719165973249533761635252733275327088189563256013971725761702359997954491403585396607971745777019273390505201262259748208640", "ret": null}, "fn_lc": [[1, 0], [26, 61]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "recursive_binomial_coefficient", "params": {"k": "", "n": ""}, "params_descr": {"k": "", "n": ""}, "params_occur": {"k": [["k", "n"], ["k", "n", "k"], ["k", "n"], ["recursive_binomial_coefficient", "n", "n", "k"], ["int", "n", "k", "recursive_binomial_coefficient", "n", "k"]], "n": [["k", "n"], ["k", "n", "k"], ["k", "n"], ["recursive_binomial_coefficient", "n", "n", "k"], ["int", "n", "k", "recursive_binomial_coefficient", "n", "k"]]}, "params_p": {"args": [], "k": [["int", 0.7520078434652554], ["List[int]", 0.07985451696020439], ["Union[str, int]", 0.07971704676171272]], "kwargs": [], "n": [["int", 0.7520078434652554], ["List[int]", 0.07985451696020439], ["Union[str, int]", 0.07971704676171272]]}, "q_name": "recursive_binomial_coefficient", "ret_exprs": ["return 1", "return recursive_binomial_coefficient(n,n-k)", "return int((n/k)*recursive_binomial_coefficient(n-1,k-1))"], "ret_type": "", "ret_type_p": [["str", 0.21119106096661433], ["Optional[Dict[str, Any]]", 0.18516158689915824], ["Optional[float]", 0.09644262084593093], ["bool", 0.09174724393089037]], "variables": {}, "variables_p": {}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 3}, "session_id": "BezX2pm1myPQdH538UxrI0s-Ib4Ugc0cp61rPeZaQoU", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}