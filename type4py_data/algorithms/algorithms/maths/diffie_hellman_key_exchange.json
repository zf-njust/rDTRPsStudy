{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Return True if num is a prime number", "long_descr": "Else return False.", "ret": null}, "fn_lc": [[12, 0], [28, 15]], "fn_var_ln": {"j": [[23, 4], [23, 5]]}, "fn_var_occur": {"j": [["j", "j", "num"], ["num", "j", "num", "j"]]}, "name": "prime_check", "params": {"num": ""}, "params_descr": {"num": ""}, "params_occur": {"num": [["num", "num"], ["num", "num"], ["j", "j", "num"], ["num", "j", "num", "j"]]}, "params_p": {"args": [], "kwargs": [], "num": [["int", 0.411703771473672], ["float", 0.15674120418524679], ["Optional[int]", 0.09085838358624528], ["Optional[str]", 0.09085838358624528], ["str", 0.08353047138599042], ["List[int]", 0.08289525949412457]]}, "q_name": "prime_check", "ret_exprs": ["return False", "return True", "return False", "return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 1.0]], "variables": {"j": ""}, "variables_p": {"j": [["int", 0.7133067555558665], ["str", 0.19934231653622336], ["List[int]", 0.08735092790791017]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[37, 0], [47, 13]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "find_order", "params": {"a": "", "n": ""}, "params_descr": {"a": "", "n": ""}, "params_occur": {"a": [["a", "n"], ["math", "gcd", "a", "n"], ["pow", "a", "i", "n"]], "n": [["a", "n"], ["math", "gcd", "a", "n"], ["range", "n"], ["pow", "a", "i", "n"]]}, "params_p": {"a": [["int", 0.4350066260605615], ["str", 0.1889529282903087], ["Union[int, float]", 0.09595432384933576]], "args": [], "kwargs": [], "n": [["int", 0.8293258516833448], ["bool", 0.086902442758662]]}, "q_name": "find_order", "ret_exprs": ["return 1", "return -1", "return i", "return -1"], "ret_type": "", "ret_type_p": [["float", 0.39999999999999997], ["int", 0.3]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Euler's totient function or Phi function.", "long_descr": "Time Complexity: O(sqrt(n)).", "ret": null}, "fn_lc": [[57, 0], [68, 17]], "fn_var_ln": {"result": [[60, 4], [60, 10]]}, "fn_var_occur": {"result": [["result", "n"], ["result", "result", "i"], ["result", "result", "n"]]}, "name": "euler_totient", "params": {"n": ""}, "params_descr": {"n": ""}, "params_occur": {"n": [["result", "n"], ["range", "int", "n"], ["n", "i"], ["n", "i"], ["n", "i"], ["result", "result", "n"]]}, "params_p": {"args": [], "kwargs": [], "n": [["int", 1.0]]}, "q_name": "euler_totient", "ret_exprs": ["return result"], "ret_type": "", "ret_type_p": [["bool", 0.16408864410171026], ["Optional[Union[str, Any]]", 0.08753798278800795]], "variables": {"result": ""}, "variables_p": {"result": [["list", 0.24131048819240397], ["dict", 0.1578073026135477], ["List[Callable[[], Any]]", 0.14902776120640351], ["Dict[str, int]", 0.14732140925422768], ["Generator[Any, None, None]", 0.1456095727429713], ["List[int]", 0.06972882807436702]]}}, {"docstring": {"func": "Returns all primitive roots of n. ", "long_descr": null, "ret": null}, "fn_lc": [[77, 0], [91, 22]], "fn_var_ln": {"order": [[88, 8], [88, 13]], "p_root_list": [[83, 4], [83, 15]], "phi": [[82, 4], [82, 7]]}, "fn_var_occur": {"order": [["order", "find_order", "i", "n"], ["order", "phi"]], "p_root_list": [["p_root_list", "append", "i"]], "phi": [["phi", "euler_totient", "n"], ["order", "phi"]]}, "name": "find_primitive_root", "params": {"n": ""}, "params_descr": {"n": ""}, "params_occur": {"n": [["phi", "euler_totient", "n"], ["range", "n"], ["math", "gcd", "i", "n"], ["order", "find_order", "i", "n"]]}, "params_p": {"args": [], "kwargs": [], "n": [["int", 0.5931127265514068], ["Union[int, float]", 0.14393146620481978], ["str", 0.09264755770146386], ["Optional[bool]", 0.08775796294743562]]}, "q_name": "find_primitive_root", "ret_exprs": ["return [0]", "return p_root_list"], "ret_type": "", "ret_type_p": [["str", 0.4190896187929707], ["int", 0.08881688077095731]], "variables": {"order": "", "p_root_list": "", "phi": ""}, "variables_p": {"order": [["str", 0.413101109639264], ["Callable(chr)[[int], str]", 0.09818683869678813], ["dict", 0.09476584519485903], ["Set[str]", 0.0931219798463313], ["List[str]", 0.0909877077891467]], "p_root_list": [["List[str]", 0.6317978807922386], ["str", 0.18104369305317566], ["list", 0.08285308542844545]], "phi": [["int", 0.8333333333224039], ["float", 0.1666666666619465], ["List[str]", 1.5649648210229984e-11]]}}, {"docstring": {"func": "Alice determine her private key", "long_descr": "in the range of 1 ~ p-1.\nThis must be kept in secret", "ret": null}, "fn_lc": [[106, 0], [110, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "alice_private_key", "params": {"p": ""}, "params_descr": {"p": ""}, "params_occur": {"p": [["randint", "p"]]}, "params_p": {"args": [], "kwargs": [], "p": [["str", 0.9999999984257893], ["int", 3.5727642449961676e-10], ["Dict[str, Any]", 3.5727642449961676e-10], ["Type[Any]", 2.980705413261846e-10]]}, "q_name": "alice_private_key", "ret_exprs": ["return randint(1, p-1)"], "ret_type": "", "ret_type_p": [["str", 0.9999999984257893], ["int", 3.5727642449961676e-10], ["Dict[str, Any]", 3.5727642449961676e-10], ["Type[Any]", 2.980705413261846e-10]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Alice calculate her public key", "long_descr": "with her private key.\nThis is open to public", "ret": null}, "fn_lc": [[113, 0], [117, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "alice_public_key", "params": {"a": "", "a_pr_k": "", "p": ""}, "params_descr": {"a": "", "a_pr_k": "", "p": ""}, "params_occur": {"a": [["pow", "a", "a_pr_k", "p"]], "a_pr_k": [["pow", "a", "a_pr_k", "p"]], "p": [["pow", "a", "a_pr_k", "p"]]}, "params_p": {"a": [["int", 0.372509724052627], ["str", 0.1380461894606548], ["float", 0.10807999002351444], ["T", 0.08685864274312995]], "a_pr_k": [["int", 0.372509724052627], ["str", 0.1380461894606548], ["float", 0.10807999002351444], ["T", 0.08685864274312995]], "args": [], "kwargs": [], "p": [["int", 0.372509724052627], ["str", 0.1380461894606548], ["float", 0.10807999002351444], ["T", 0.08685864274312995]]}, "q_name": "alice_public_key", "ret_exprs": ["return pow(a, a_pr_k) % p"], "ret_type": "", "ret_type_p": [["int", 0.3674715939115173], ["str", 0.1519537583468951], ["List[int]", 0.09397305204061397], ["bytes", 0.08009067190317659]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Bob determine his private key", "long_descr": "in the range of 1 ~ p-1.\nThis must be kept in secret", "ret": null}, "fn_lc": [[120, 0], [124, 26]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "bob_private_key", "params": {"p": ""}, "params_descr": {"p": ""}, "params_occur": {"p": [["randint", "p"]]}, "params_p": {"args": [], "kwargs": [], "p": [["str", 0.9999999984257893], ["int", 3.5727642449961676e-10], ["Dict[str, Any]", 3.5727642449961676e-10], ["Type[Any]", 2.980705413261846e-10]]}, "q_name": "bob_private_key", "ret_exprs": ["return randint(1, p-1)"], "ret_type": "", "ret_type_p": [["str", 0.9999999984257893], ["int", 3.5727642449961676e-10], ["Dict[str, Any]", 3.5727642449961676e-10], ["Type[Any]", 2.980705413261846e-10]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Bob calculate his public key", "long_descr": "with his private key.\nThis is open to public", "ret": null}, "fn_lc": [[127, 0], [131, 29]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "bob_public_key", "params": {"a": "", "b_pr_k": "", "p": ""}, "params_descr": {"a": "", "b_pr_k": "", "p": ""}, "params_occur": {"a": [["pow", "a", "b_pr_k", "p"]], "b_pr_k": [["pow", "a", "b_pr_k", "p"]], "p": [["pow", "a", "b_pr_k", "p"]]}, "params_p": {"a": [["bool", 0.5647307656811351], ["tuple", 0.11708548862119489], ["float", 0.08306700560524961], ["int", 0.07688524945539658]], "args": [], "b_pr_k": [["bool", 0.5647307656811351], ["tuple", 0.11708548862119489], ["float", 0.08306700560524961], ["int", 0.07688524945539658]], "kwargs": [], "p": [["bool", 0.5647307656811351], ["tuple", 0.11708548862119489], ["float", 0.08306700560524961], ["int", 0.07688524945539658]]}, "q_name": "bob_public_key", "ret_exprs": ["return pow(a, b_pr_k) % p"], "ret_type": "", "ret_type_p": [["str", 0.7032567578245221], ["bytes", 0.10490766196793777], ["int", 0.09697348272820366], ["Dict[str, str]", 0.0948620974793362]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Alice calculate secret key shared with Bob,", "long_descr": "with her private key and Bob's public key.\nThis must be kept in secret", "ret": null}, "fn_lc": [[134, 0], [138, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "alice_shared_key", "params": {"a_pr_k": "", "b_pu_k": "", "p": ""}, "params_descr": {"a_pr_k": "", "b_pu_k": "", "p": ""}, "params_occur": {"a_pr_k": [["pow", "b_pu_k", "a_pr_k", "p"]], "b_pu_k": [["pow", "b_pu_k", "a_pr_k", "p"]], "p": [["pow", "b_pu_k", "a_pr_k", "p"]]}, "params_p": {"a_pr_k": [["int", 0.4095383538406539], ["float", 0.149292885135476], ["Optional[List[Any]]", 0.09443982148632603], ["bool", 0.078924648282446]], "args": [], "b_pu_k": [["int", 0.4095383538406539], ["float", 0.149292885135476], ["Optional[List[Any]]", 0.09443982148632603], ["bool", 0.078924648282446]], "kwargs": [], "p": [["int", 0.4095383538406539], ["float", 0.149292885135476], ["Optional[List[Any]]", 0.09443982148632603], ["bool", 0.078924648282446]]}, "q_name": "alice_shared_key", "ret_exprs": ["return pow(b_pu_k, a_pr_k) % p"], "ret_type": "", "ret_type_p": [["int", 0.27193044322256205], ["str", 0.2613450293440686], ["List[dict]", 0.12240183440665327], ["float", 0.10786350415770575], ["Iterable[int]", 0.08616862518657274]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Bob calculate secret key shared with Alice,", "long_descr": "with his private key and Alice's public key.\nThis must be kept in secret", "ret": null}, "fn_lc": [[141, 0], [145, 34]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "bob_shared_key", "params": {"a_pu_k": "", "b_pr_k": "", "p": ""}, "params_descr": {"a_pu_k": "", "b_pr_k": "", "p": ""}, "params_occur": {"a_pu_k": [["pow", "a_pu_k", "b_pr_k", "p"]], "b_pr_k": [["pow", "a_pu_k", "b_pr_k", "p"]], "p": [["pow", "a_pu_k", "b_pr_k", "p"]]}, "params_p": {"a_pu_k": [["int", 0.5569816567636522], ["list", 0.09367140329544471], ["Optional[str]", 0.08340864013791044]], "args": [], "b_pr_k": [["int", 0.5569816567636522], ["list", 0.09367140329544471], ["Optional[str]", 0.08340864013791044]], "kwargs": [], "p": [["int", 0.5569816567636522], ["list", 0.09367140329544471], ["Optional[str]", 0.08340864013791044]]}, "q_name": "bob_shared_key", "ret_exprs": ["return pow(a_pu_k, b_pr_k) % p"], "ret_type": "", "ret_type_p": [["bool", 0.7253446632739924]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Perform diffie-helmman key exchange. ", "long_descr": null, "ret": null}, "fn_lc": [[148, 0], [184, 27]], "fn_var_ln": {"a_pr_k": [[165, 4], [165, 10]], "a_pu_k": [[166, 4], [166, 10]], "a_sh_k": [[179, 4], [179, 10]], "b_pr_k": [[168, 4], [168, 10]], "b_pu_k": [[169, 4], [169, 10]], "b_sh_k": [[180, 4], [180, 10]], "option": [[152, 8], [152, 14]], "p_root_list": [[158, 8], [158, 19]]}, "fn_var_occur": {"a_pr_k": [["a_pr_k", "alice_private_key", "p"], ["a_pu_k", "alice_public_key", "a_pr_k", "a", "p"], ["print", "a_pr_k"], ["a_sh_k", "alice_shared_key", "b_pu_k", "a_pr_k", "p"]], "a_pu_k": [["a_pu_k", "alice_public_key", "a_pr_k", "a", "p"], ["print", "a_pu_k"], ["b_sh_k", "bob_shared_key", "a_pu_k", "b_pr_k", "p"]], "a_sh_k": [["a_sh_k", "alice_shared_key", "b_pu_k", "a_pr_k", "p"], ["print", "a_sh_k"], ["a_sh_k", "b_sh_k"]], "b_pr_k": [["b_pr_k", "bob_private_key", "p"], ["b_pu_k", "bob_public_key", "b_pr_k", "a", "p"], ["print", "b_pr_k"], ["b_sh_k", "bob_shared_key", "a_pu_k", "b_pr_k", "p"]], "b_pu_k": [["b_pu_k", "bob_public_key", "b_pr_k", "a", "p"], ["print", "b_pu_k"], ["a_sh_k", "alice_shared_key", "b_pu_k", "a_pr_k", "p"]], "b_sh_k": [["b_sh_k", "bob_shared_key", "a_pu_k", "b_pr_k", "p"], ["print", "b_sh_k"], ["a_sh_k", "b_sh_k"]], "option": [["option", "None"]], "p_root_list": [["p_root_list", "find_primitive_root", "p"], ["p_root_list", "index", "a"]]}, "name": "diffie_hellman_key_exchange", "params": {"a": "", "option": "", "p": ""}, "params_descr": {"a": "", "option": "", "p": ""}, "params_occur": {"a": [["p_root_list", "index", "a"], ["print", "a", "p"], ["a_pu_k", "alice_public_key", "a_pr_k", "a", "p"], ["b_pu_k", "bob_public_key", "b_pr_k", "a", "p"]], "option": [["option", "None"]], "p": [["prime_check", "p", "False"], ["print", "p"], ["p_root_list", "find_primitive_root", "p"], ["print", "a", "p"], ["a_pr_k", "alice_private_key", "p"], ["a_pu_k", "alice_public_key", "a_pr_k", "a", "p"], ["b_pr_k", "bob_private_key", "p"], ["b_pu_k", "bob_public_key", "b_pr_k", "a", "p"], ["a_sh_k", "alice_shared_key", "b_pu_k", "a_pr_k", "p"], ["b_sh_k", "bob_shared_key", "a_pu_k", "b_pr_k", "p"]]}, "params_p": {"a": [["bool", 0.18865722180357025], ["Dict[str, List[str]]", 0.10537888359193455], ["List[Tuple[str, int, int]]", 0.09031389040623809]], "args": [], "kwargs": [], "option": [["int", 0.2499583289009047], ["str", 0.20525309305163483], ["Optional[Sequence[str]]", 0.08749651542660464], ["Optional[int]", 0.08659384249256959], ["List[Dict[str, Any]]", 0.0805576293807138]], "p": [["str", 0.2047547923071948], ["List[str]", 0.12602364798109356], ["IO[bytes]", 0.11466621504883669], ["int", 0.09080878374587428], ["List[int]", 0.09008857725835812], ["Callable[[None], bool]", 0.08820155660729988]]}, "q_name": "diffie_hellman_key_exchange", "ret_exprs": ["return False", "return False", "return a_sh_k == b_sh_k"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"a_pr_k": "", "a_pu_k": "", "a_sh_k": "", "b_pr_k": "", "b_pu_k": "", "b_sh_k": "", "option": "", "p_root_list": ""}, "variables_p": {"a_pr_k": [["int", 0.2935373374326749], ["list", 0.11293482238558236], ["Dict[str, Any]", 0.10052007415926516], ["float", 0.09755515337839077]], "a_pu_k": [["str", 0.19636663547966748], ["List[int]", 0.09342687363887493]], "a_sh_k": [["int", 0.18950649275584575], ["Tuple[float]", 0.10968502426574654], ["List[str]", 0.10277672187853844], ["float", 0.10190847938070358], ["list", 0.09565937410858776], ["List[Tuple[str, int]]", 0.09136744823727064]], "b_pr_k": [["int", 0.21572559526881113], ["bytes", 0.09790080438226323], ["str", 0.0975881953802576], ["List[int]", 0.08500912122002625]], "b_pu_k": [["str", 0.48603120105435305], ["int", 0.18502421155841592], ["bytes", 0.14071486768522828], ["List[float]", 0.09466922212354054]], "b_sh_k": [["bytes", 0.12546739900159132], ["str", 0.11011977132358329], ["int", 0.08867047332299967], ["List[float]", 0.08584514257746338]], "option": [["list", 0.19265322773226332], ["dict", 0.18180339571365617], ["bool", 0.12068489914174493], ["List[Optional[bool]]", 0.1030185364259524], ["str", 0.1019272928436073], ["List[Type[Any]]", 0.08895263628540115]], "p_root_list": [["list", 0.4919667566048406], ["List[str]", 0.2911621918256261], ["str", 0.2168710515695333]]}}], "imports": ["math", "random", "randint"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 45}, "session_id": "hcFfRAmC_-zmkLI-qyz-76qBDRUL2Tss7D94oVKvs2w", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}