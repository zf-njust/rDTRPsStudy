{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Computes the smallest x that satisfies the chinese remainder theorem", "long_descr": "for a system of equations.\nThe system of equations has the form:\nx % nums[0] = rems[0]\nx % nums[1] = rems[1]\n...\nx % nums[k - 1] = rems[k - 1]\nWhere k is the number of elements in nums and rems, k > 0.\nAll numbers in nums needs to be pariwise coprime otherwise an exception is raised\nreturns x: the smallest value for x that satisfies the system of equations", "ret": null}, "fn_lc": [[7, 0], [39, 14]], "fn_var_ln": {"i": [[32, 8], [32, 9]], "k": [[29, 4], [29, 5]], "x": [[30, 4], [30, 5]]}, "fn_var_occur": {"i": [["i", "k"], ["x", "nums", "i", "rems", "i"], ["i", "k"]], "k": [["k", "len", "nums"], ["i", "k"], ["i", "k"]], "x": [["x", "nums", "i", "rems", "i"]]}, "name": "solve_chinese_remainder", "params": {"nums": "typing.List[builtins.int]", "rems": "typing.List[builtins.int]"}, "params_descr": {"nums": "", "rems": ""}, "params_occur": {"nums": [["len", "nums", "len", "rems"], ["len", "nums"], ["_check_coprime", "nums"], ["k", "len", "nums"], ["x", "nums", "i", "rems", "i"]], "rems": [["len", "nums", "len", "rems"], ["x", "nums", "i", "rems", "i"]]}, "params_p": {"args": [], "kwargs": [], "nums": [["str", 0.24814900419571126], ["List[str]", 0.09385259574839575], ["List[int]", 0.09385259574839575], ["list", 0.09385259574839575], ["int", 0.09385259574839575]], "rems": [["float", 0.20028565486736827], ["str", 0.13006749726565656], ["list", 0.1136202643288766], ["Iterable", 0.10117452087211555], ["List[dict]", 0.0936079551784581], ["[[]]", 0.09083614364141886], ["List[int]", 0.08497992627230481]]}, "q_name": "solve_chinese_remainder", "ret_exprs": ["return x"], "ret_type": "", "ret_type_p": [["str", 0.20762776128935173]], "variables": {"i": "", "k": "", "x": ""}, "variables_p": {"i": [["int", 0.8252840871442142], ["List[int]", 0.0904636267330159], ["float", 0.08425228612276989]], "k": [["str", 0.7058519383606545], ["List[Dict[str, Any]]", 0.10931585066136183], ["int", 0.09241610548899182], ["bool", 0.09241610548899182]], "x": [["int", 0.3871617717916013], ["List[List[str]]", 0.11051950204227368], ["dict", 0.10268483699061075], ["Tuple[int]", 0.10053485290140465], ["Tuple[Any, Any]", 0.09784638955103775]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 0], [46, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_check_coprime", "params": {"list_to_check": "typing.List[builtins.int]"}, "params_descr": {"list_to_check": ""}, "params_occur": {"list_to_check": [["enumerate", "list_to_check"], ["list_to_check", "ind"]]}, "params_p": {"args": [], "kwargs": [], "list_to_check": [["int", 0.36465235723403483], ["str", 0.22187157214933667], ["List[int]", 0.11204994379884656], ["Tuple[str]", 0.08285554891972237]]}, "q_name": "_check_coprime", "ret_exprs": ["return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {}, "variables_p": {}}], "imports": ["typing", "List", "algorithms", "maths", "gcd", "gcd"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 3, "I": 0, "U": 5}, "session_id": "e7376CgRehHw-G7N7y1pEkMCVRkg5n2M4tS0lXxpRe8", "set": null, "tc": [false, null], "type_annot_cove": 0.38, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}