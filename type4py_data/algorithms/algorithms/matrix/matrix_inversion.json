{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "invert an n x n matrix", "long_descr": null, "ret": null}, "fn_lc": [[26, 0], [63, 23]], "fn_var_ln": {"inverted": [[61, 8], [61, 16]], "m_of_minors": [[55, 8], [55, 19]], "multiplier": [[58, 8], [58, 18]]}, "fn_var_occur": {"inverted": [["inverted", "multiplier", "len", "m", "n", "range", "len", "m"], ["inverted", "inverted", "m"], ["inverted", "inverted", "m"], ["inverted", "multiplier", "m"], ["inverted", "multiplier", "m"], ["inverted", "transpose_and_multiply", "m_of_minors", "multiplier"]], "m_of_minors": [["m_of_minors", "get_matrix_of_minors", "m"], ["inverted", "transpose_and_multiply", "m_of_minors", "multiplier"]], "multiplier": [["multiplier", "get_determinant", "m"], ["inverted", "multiplier", "len", "m", "n", "range", "len", "m"], ["inverted", "multiplier", "m"], ["inverted", "multiplier", "m"], ["multiplier", "fractions", "Fraction", "get_determinant", "m"], ["inverted", "transpose_and_multiply", "m_of_minors", "multiplier"]]}, "name": "invert_matrix", "params": {"m": ""}, "params_descr": {"m": ""}, "params_occur": {"m": [["array_is_matrix", "m"], ["len", "m", "len", "m"], ["len", "m"], ["get_determinant", "m"], ["len", "m"], ["multiplier", "get_determinant", "m"], ["inverted", "multiplier", "len", "m", "n", "range", "len", "m"], ["inverted", "inverted", "m"], ["inverted", "inverted", "m"], ["inverted", "multiplier", "m"], ["inverted", "multiplier", "m"], ["m_of_minors", "get_matrix_of_minors", "m"], ["multiplier", "fractions", "Fraction", "get_determinant", "m"]]}, "params_p": {"args": [], "kwargs": [], "m": [["List[float]", 0.11213974493800395], ["str", 0.10185113511420539], ["List[List[int]]", 0.09811178197826348], ["list", 0.09278477488922675], ["int", 0.0922881311598855]]}, "q_name": "invert_matrix", "ret_exprs": ["return [[-1]]", "return [[-2]]", "return [[-3]]", "return [[-4]]", "return inverted", "return inverted"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"inverted": "", "m_of_minors": "", "multiplier": ""}, "variables_p": {"inverted": [["int", 0.8051069588968053], ["str", 0.10658443030850867], ["Tuple[float, float]", 0.08830861079468616]], "m_of_minors": [["str", 0.6404864338485217], ["int", 0.35951356615147834]], "multiplier": [["int", 0.699701572101819], ["deque[int]", 0.1038200519554421], ["List[Tuple[int, Any]]", 0.09862921784288153], ["List[int]", 0.09784915809985735]]}}, {"docstring": {"func": "recursively calculate the determinant of an n x n matrix, n >= 2", "long_descr": null, "ret": null}, "fn_lc": [[66, 0], [77, 18]], "fn_var_ln": {"det": [[73, 8], [73, 11]], "sign": [[72, 8], [72, 12]]}, "fn_var_occur": {"det": [["det", "sign", "m", "i", "get_determinant", "get_minor", "m", "i"]], "sign": [["det", "sign", "m", "i", "get_determinant", "get_minor", "m", "i"]]}, "name": "get_determinant", "params": {"m": ""}, "params_descr": {"m": ""}, "params_occur": {"m": [["len", "m"], ["m", "m", "m", "m"], ["range", "len", "m"], ["det", "sign", "m", "i", "get_determinant", "get_minor", "m", "i"]]}, "params_p": {"args": [], "kwargs": [], "m": [["int", 0.7013426684068772], ["bytearray", 0.11073292358886574]]}, "q_name": "get_determinant", "ret_exprs": ["return (m[0][0] * m[1][1]) - (m[0][1] * m[1][0])", "return det"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"det": "", "sign": ""}, "variables_p": {"det": [["int", 0.8012502839380631]], "sign": [["int", 0.8012502839380631]]}}, {"docstring": {"func": "get the matrix of minors and alternate signs", "long_descr": null, "ret": null}, "fn_lc": [[80, 0], [90, 27]], "fn_var_ln": {"matrix_of_minors": [[82, 4], [82, 20]], "sign": [[88, 16], [88, 20]]}, "fn_var_occur": {"matrix_of_minors": [["matrix_of_minors", "i", "range", "len", "m", "j", "range", "len", "m"], ["matrix_of_minors", "row", "col", "sign", "get_determinant", "get_minor", "m", "row", "col"]], "sign": [["matrix_of_minors", "row", "col", "sign", "get_determinant", "get_minor", "m", "row", "col"]]}, "name": "get_matrix_of_minors", "params": {"m": ""}, "params_descr": {"m": ""}, "params_occur": {"m": [["matrix_of_minors", "i", "range", "len", "m", "j", "range", "len", "m"], ["range", "len", "m"], ["range", "len", "m"], ["matrix_of_minors", "row", "col", "sign", "get_determinant", "get_minor", "m", "row", "col"]]}, "params_p": {"args": [], "kwargs": [], "m": [["int", 0.6663513220358629], ["List[int]", 0.24481312754114692], ["list", 0.08883555042299023]]}, "q_name": "get_matrix_of_minors", "ret_exprs": ["return matrix_of_minors"], "ret_type": "", "ret_type_p": [["str", 0.20478263558469922], ["Set[str]", 0.07471753420149872]], "variables": {"matrix_of_minors": "", "sign": ""}, "variables_p": {"matrix_of_minors": [["int", 0.9044136622007589], ["List[int]", 0.09558633779924121]], "sign": [["str", 0.2678382480846309], ["list", 0.09411581195179407]]}}, {"docstring": {"func": "get the minor of the matrix position m[row][col]", "long_descr": "(all values m[r][c] where r != row and c != col)", "ret": null}, "fn_lc": [[93, 0], [104, 17]], "fn_var_ln": {"minors": [[98, 4], [98, 10]], "new_row": [[101, 12], [101, 19]]}, "fn_var_occur": {"minors": [["minors", "append", "new_row"]], "new_row": [["new_row", "m", "i", "col"], ["new_row", "extend", "m", "i", "col"], ["minors", "append", "new_row"]]}, "name": "get_minor", "params": {"col": "", "m": "", "row": ""}, "params_descr": {"col": "", "m": "", "row": ""}, "params_occur": {"col": [["new_row", "m", "i", "col"], ["new_row", "extend", "m", "i", "col"]], "m": [["range", "len", "m"], ["new_row", "m", "i", "col"], ["new_row", "extend", "m", "i", "col"]], "row": [["i", "row"]]}, "params_p": {"args": [], "col": [["int", 0.2024383112847642], ["Sequence[int]", 0.11412411433249617], ["str", 0.10341047896638564], ["Sized", 0.10187121978215158], ["Sequence[str]", 0.09237946838371681], ["List[str]", 0.08918090044400263]], "kwargs": [], "m": [["int", 0.2959669377990378], ["list", 0.20580996800328705], ["Sized", 0.11053697135673501], ["List[int]", 0.09952896677223678], ["List[str]", 0.08313887330060396]], "row": [["int", 0.7999999999999999], ["float", 0.2]]}, "q_name": "get_minor", "ret_exprs": ["return minors"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"minors": "", "new_row": ""}, "variables_p": {"minors": [["list", 0.6906896149348705], ["Pattern[str]", 0.11657654622070582], ["List[int]", 0.09964496031363479]], "new_row": [["List[str]", 0.199140614939872], ["bool", 0.19913739376589856], ["int", 0.1855194906909261], ["Tuple[Any, Any]", 0.12146987539646657], ["list", 0.10838627679572417], ["str", 0.09793785872684493]]}}, {"docstring": {"func": "swap values along diagonal, optionally adding multiplier", "long_descr": null, "ret": null}, "fn_lc": [[107, 0], [114, 12]], "fn_var_ln": {"temp": [[111, 12], [111, 16]]}, "fn_var_occur": {"temp": [["temp", "m", "row", "col", "multiplier"], ["m", "col", "row", "temp"]]}, "name": "transpose_and_multiply", "params": {"m": "", "multiplier": ""}, "params_descr": {"m": "", "multiplier": ""}, "params_occur": {"m": [["range", "len", "m"], ["temp", "m", "row", "col", "multiplier"], ["m", "row", "col", "m", "col", "row", "multiplier"], ["m", "col", "row", "temp"]], "multiplier": [["temp", "m", "row", "col", "multiplier"], ["m", "row", "col", "m", "col", "row", "multiplier"]]}, "params_p": {"args": [], "kwargs": [], "m": [["int", 0.7133574639052619], ["List[float]", 0.08748496450238126], ["bytes", 0.08560232989958699]], "multiplier": [["int", 0.23970975508067074], ["List[int]", 0.16105957993828393]]}, "q_name": "transpose_and_multiply", "ret_exprs": ["return m"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"temp": ""}, "variables_p": {"temp": [["int", 0.9999999996322476], ["str", 9.919395450171519e-11], ["float", 3.906845738154806e-11], ["list", 3.906845738154806e-11], ["List[int]", 3.853710483949756e-11]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[117, 0], [124, 15]], "fn_var_ln": {"first_col": [[120, 4], [120, 13]]}, "fn_var_occur": {"first_col": [["first_col", "len", "m"], ["len", "row", "first_col"]]}, "name": "array_is_matrix", "params": {"m": ""}, "params_descr": {"m": ""}, "params_occur": {"m": [["len", "m"], ["first_col", "len", "m"]]}, "params_p": {"args": [], "kwargs": [], "m": [["int", 0.430243080970256], ["str", 0.088306409524994]]}, "q_name": "array_is_matrix", "ret_exprs": ["return False", "return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"first_col": ""}, "variables_p": {"first_col": [["list", 0.19751849061445814], ["int", 0.10422653223904303], ["List[str]", 0.10081211771926386], ["DefaultDict[Any, dict]", 0.0934588187149429]]}}], "imports": ["fractions"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 26}, "session_id": "rloPP3-wnRA6-48CEQs6A_Sx4dq-vRw8CXbfyTO_N4I", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}