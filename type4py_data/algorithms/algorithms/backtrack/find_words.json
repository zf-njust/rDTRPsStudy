{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "backtrack tries to build each words from", "long_descr": "the board and return all words found\n\n@param: board, the passed in board of characters\n@param: i, the row index\n@param: j, the column index\n@param: trie, a trie of the passed in words\n@param: pre, a buffer of currently build string that differs\n        by recursion stack\n@param: used, a replica of the board except in booleans\n        to state whether a character has been used\n@param: result, the resulting set that contains all words found\n\n@return: list of words found", "ret": null}, "fn_lc": [[19, 4], [53, 30]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "backtrack", "params": {"board": "", "i": "", "j": "", "pre": "", "result": "", "trie": "", "used": ""}, "params_descr": {"board": "", "i": "", "j": "", "pre": "", "result": "", "trie": "", "used": ""}, "params_occur": {"board": [["i", "i", "len", "board", "j", "j", "len", "board"], ["used", "i", "j", "board", "i", "j", "trie"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"]], "i": [["i", "i", "len", "board", "j", "j", "len", "board"], ["used", "i", "j", "board", "i", "j", "trie"], ["used", "i", "j", "True"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["used", "i", "j", "False"]], "j": [["i", "i", "len", "board", "j", "j", "len", "board"], ["used", "i", "j", "board", "i", "j", "trie"], ["used", "i", "j", "True"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["used", "i", "j", "False"]], "pre": [["result", "add", "pre"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"]], "result": [["result", "add", "pre"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"]], "trie": [["used", "i", "j", "board", "i", "j", "trie"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"]], "used": [["used", "i", "j", "board", "i", "j", "trie"], ["used", "i", "j", "True"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["backtrack", "board", "i", "j", "trie", "board", "i", "j", "pre", "board", "i", "j", "used", "result"], ["used", "i", "j", "False"]]}, "params_p": {"args": [], "board": [["int", 0.5021545835412876], ["bytearray", 0.09560471918187474], ["Sequence[T]", 0.09177951240558994], ["Sized", 0.08897797365347063], ["list", 0.08467445999336345]], "i": [["int", 0.4017362166650763], ["Sequence[T]", 0.10334106155835837], ["Sized", 0.09364796931702309], ["list", 0.09328229558973554], ["bytearray", 0.08700239818289954], ["dict", 0.08491597783688762]], "j": [["int", 0.4017362166650763], ["Sequence[T]", 0.10334106155835837], ["Sized", 0.09364796931702309], ["list", 0.09328229558973554], ["bytearray", 0.08700239818289954], ["dict", 0.08491597783688762]], "kwargs": [], "pre": [["int", 0.366091629328078], ["Dict[str, int]", 0.14994829317629013], ["Tuple[str]", 0.10556440026656622], ["Optional[int]", 0.09136463618138309], ["bool", 0.08939497141382075]], "result": [["int", 0.366091629328078], ["Dict[str, int]", 0.14994829317629013], ["Tuple[str]", 0.10556440026656622], ["Optional[int]", 0.09136463618138309], ["bool", 0.08939497141382075]], "trie": [["int", 0.6677700586961124], ["Optional[float]", 0.07838459256380399]], "used": [["int", 0.41171742196943373], ["bool", 0.11261702421788418]]}, "q_name": "find_words.<locals>.backtrack", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[17, 0], [73, 23]], "fn_var_ln": {"curr_trie": [[63, 12], [63, 21]], "result": [[67, 4], [67, 10]], "trie": [[57, 4], [57, 8]], "used": [[68, 4], [68, 8]]}, "fn_var_occur": {"curr_trie": [["curr_trie", "trie"], ["char", "curr_trie"], ["curr_trie", "char"], ["curr_trie", "curr_trie", "char"]], "result": [["result", "set"], ["backtrack", "board", "i", "j", "trie", "used", "result"], ["list", "result"]], "trie": [["curr_trie", "trie"], ["backtrack", "board", "i", "j", "trie", "used", "result"]], "used": [["used", "False", "len", "board", "_", "range", "len", "board"], ["backtrack", "board", "i", "j", "trie", "used", "result"]]}, "name": "find_words", "params": {"board": "", "words": ""}, "params_descr": {"board": "", "words": ""}, "params_occur": {"board": [["used", "False", "len", "board", "_", "range", "len", "board"], ["range", "len", "board"], ["range", "len", "board"], ["backtrack", "board", "i", "j", "trie", "used", "result"]], "words": []}, "params_p": {"args": [], "board": [["List[int]", 0.21713375063011894], ["str", 0.20252566728796176], ["List[Dict]", 0.10942857920704525], ["Sequence[T]", 0.0981735926924818], ["list", 0.09528818167774103], ["List[Dict[str, Any]]", 0.09307249962248308]], "kwargs": [], "words": [["List[str]", 0.19999999999999998], ["bool", 0.09999999999999999], ["List[object]", 0.09999999999999999], ["Sized", 0.09999999999999999], ["Optional[List]", 0.09999999999999999], ["str", 0.09999999999999999]]}, "q_name": "find_words", "ret_exprs": ["return list(result)"], "ret_type": "", "ret_type_p": [["List[str]", 0.4670309748653553], ["str", 0.2430083298336096], ["List[Dict]", 0.12577571592562117], ["Union[List, Tuple]", 0.082092489687707]], "variables": {"curr_trie": "", "result": "", "trie": "", "used": ""}, "variables_p": {"curr_trie": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "result": [["Set[str]", 0.1726932783835478], ["dict", 0.15304195345352578], ["list", 0.08678697634499721], ["List[Tuple[bytes, bytes]]", 0.08672270902126211], ["str", 0.08600888238670439]], "trie": [["int", 0.45567268944694983], ["float", 0.09286937381028243], ["List[str]", 0.08669818721367331], ["str", 0.08669818721367331]], "used": [["List[bool]", 0.5128376467021699], ["float", 0.11013425854835654], ["List[List[Any]]", 0.09672268756619214], ["list", 0.09443566922311383], ["List[List[float]]", 0.09420437784192885], ["List[str]", 0.09166536011823868]]}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 15}, "session_id": "cuGp3R0SX8MLT29Ah0u5gXbhfH8efz1RNKhttea2V1w", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}