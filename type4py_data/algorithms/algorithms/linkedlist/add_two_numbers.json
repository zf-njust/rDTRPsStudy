{"error": null, "response": {"classes": [{"cls_lc": [[17, 0], [20, 24]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[18, 4], [20, 24]], "fn_var_ln": {"next": [[20, 8], [20, 17]], "val": [[19, 8], [19, 16]]}, "fn_var_occur": {"next": [["self", "next", "None"]], "val": [["self", "val", "x"]]}, "name": "__init__", "params": {"self": "", "x": ""}, "params_descr": {"self": "", "x": ""}, "params_occur": {"self": [["self", "val", "x"], ["self", "next", "None"]], "x": [["self", "val", "x"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "x": [["float", 0.3479153117210161], ["int", 0.2515215930221082]]}, "q_name": "Node.__init__", "ret_exprs": [], "ret_type": "", "variables": {"next": "", "val": ""}, "variables_p": {"next": [["\"Frame\"", 0.19999999999676038], ["str", 3.971941177518544e-12], ["Dict[str, Any]", 3.6175949269712212e-12]], "val": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}], "name": "Node", "q_name": "Node", "variables": {}, "variables_p": {}}, {"cls_lc": [[77, 0], [128, 39]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[83, 4], [87, 56]], "fn_var_ln": {"next": [[85, 8], [85, 20]], "number1": [[84, 8], [84, 15]]}, "fn_var_occur": {"next": [["number1", "next", "Node"], ["number1", "next", "next", "Node"]], "number1": [["number1", "Node"], ["number1", "next", "Node"], ["number1", "next", "next", "Node"], ["self", "assertEqual", "convert_to_str", "number1"]]}, "name": "test_convert_to_str", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "convert_to_str", "number1"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_convert_to_str", "ret_exprs": [], "ret_type": "", "variables": {"next": "", "number1": ""}, "variables_p": {"next": [["int", 0.5999999999954376], ["dict", 1.1536777258353996e-11]], "number1": [["str", 0.11692705060756824], ["List[Tuple[str, str]]", 0.10314189087014253]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[89, 4], [124, 39]], "fn_var_ln": {"next": [[121, 8], [121, 20]], "number1": [[91, 8], [91, 15]], "number2": [[94, 8], [94, 15]], "number3": [[101, 8], [101, 15]], "number4": [[104, 8], [104, 15]], "number5": [[111, 8], [111, 15]], "number6": [[112, 8], [112, 15]], "number7": [[117, 8], [117, 15]], "number8": [[120, 8], [120, 15]], "result": [[123, 8], [123, 14]]}, "fn_var_occur": {"next": [["number1", "next", "Node"], ["number1", "next", "next", "Node"], ["number2", "next", "Node"], ["number2", "next", "next", "Node"], ["number3", "next", "Node"], ["number3", "next", "next", "Node"], ["number4", "next", "Node"], ["number4", "next", "next", "Node"], ["number7", "next", "Node"], ["number7", "next", "next", "Node"], ["number8", "next", "Node"], ["number8", "next", "next", "Node"]], "number1": [["number1", "Node"], ["number1", "next", "Node"], ["number1", "next", "next", "Node"], ["result", "convert_to_str", "add_two_numbers", "number1", "number2"]], "number2": [["number2", "Node"], ["number2", "next", "Node"], ["number2", "next", "next", "Node"], ["result", "convert_to_str", "add_two_numbers", "number1", "number2"]], "number3": [["number3", "Node"], ["number3", "next", "Node"], ["number3", "next", "next", "Node"], ["result", "convert_to_str", "add_two_numbers", "number3", "number4"]], "number4": [["number4", "Node"], ["number4", "next", "Node"], ["number4", "next", "next", "Node"], ["result", "convert_to_str", "add_two_numbers", "number3", "number4"]], "number5": [["number5", "Node"], ["result", "convert_to_str", "add_two_numbers", "number5", "number6"]], "number6": [["number6", "Node"], ["result", "convert_to_str", "add_two_numbers", "number5", "number6"]], "number7": [["number7", "Node"], ["number7", "next", "Node"], ["number7", "next", "next", "Node"], ["result", "convert_to_str", "add_two_numbers", "number7", "number8"]], "number8": [["number8", "Node"], ["number8", "next", "Node"], ["number8", "next", "next", "Node"], ["result", "convert_to_str", "add_two_numbers", "number7", "number8"]], "result": [["result", "convert_to_str", "add_two_numbers", "number1", "number2"], ["self", "assertEqual", "result"], ["result", "convert_to_str", "add_two_numbers", "number3", "number4"], ["self", "assertEqual", "result"], ["result", "convert_to_str", "add_two_numbers", "number5", "number6"], ["self", "assertEqual", "result"], ["result", "convert_to_str", "add_two_numbers", "number7", "number8"], ["self", "assertEqual", "result"]]}, "name": "test_add_two_numbers", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "result"], ["self", "assertEqual", "result"], ["self", "assertEqual", "result"], ["self", "assertEqual", "result"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_add_two_numbers", "ret_exprs": [], "ret_type": "", "variables": {"next": "", "number1": "", "number2": "", "number3": "", "number4": "", "number5": "", "number6": "", "number7": "", "number8": "", "result": ""}, "variables_p": {"next": [], "number1": [["str", 0.09879675244593047]], "number2": [["str", 0.09879675244593047]], "number3": [["str", 0.09879675244593047]], "number4": [["str", 0.09879675244593047]], "number5": [["dict", 0.2136841474515808], ["list", 0.09661741789041416], ["set", 0.08528153041483294], ["Dict[str, str]", 0.08132546289504743]], "number6": [["dict", 0.2136841474515808], ["list", 0.09661741789041416], ["set", 0.08528153041483294], ["Dict[str, str]", 0.08132546289504743]], "number7": [["str", 0.09879675244593047]], "number8": [["str", 0.09879675244593047]], "result": [["Dict[str, Any]", 0.11177785377221656], ["List[None]", 0.10651902140317948], ["NoReturn", 0.08382063619167414]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[126, 4], [128, 39]], "fn_var_ln": {"result": [[127, 8], [127, 14]]}, "fn_var_occur": {"result": [["result", "convert_to_str", "convert_to_list"], ["self", "assertEqual", "result"]]}, "name": "test_convert_to_list", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "assertEqual", "result"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "TestSuite.test_convert_to_list", "ret_exprs": [], "ret_type": "", "variables": {"result": ""}, "variables_p": {"result": [["List[Tuple[str, Any]]", 0.09574827441939435], ["str", 0.0880760246994939], ["List[int]", 0.08685561914304667]]}}], "name": "TestSuite", "q_name": "TestSuite", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[23, 0], [40, 20]], "fn_var_ln": {"current": [[37, 8], [37, 15]], "head": [[24, 4], [24, 8]], "left": [[32, 12], [32, 16]], "next": [[39, 8], [39, 20]], "right": [[35, 12], [35, 17]], "sum": [[26, 4], [26, 7]]}, "fn_var_occur": {"current": [["current", "head"], ["current", "next", "Node", "sum"], ["current", "current", "next"], ["current", "next", "Node"]], "head": [["head", "Node"], ["current", "head"], ["head", "next"]], "left": [["left", "right"], ["print", "left", "val", "right", "val"], ["sum", "left", "val"], ["left", "left", "next"]], "next": [["left", "left", "next"], ["right", "right", "next"], ["current", "next", "Node", "sum"], ["current", "current", "next"], ["current", "next", "Node"], ["head", "next"]], "right": [["left", "right"], ["print", "left", "val", "right", "val"], ["sum", "right", "val"], ["right", "right", "next"]], "sum": [["sum", "left", "val"], ["sum", "right", "val"], ["current", "next", "Node", "sum"]]}, "name": "add_two_numbers", "params": {"left": "Node", "right": "Node"}, "params_descr": {"left": "", "right": ""}, "params_occur": {"left": [["left", "right"], ["print", "left", "val", "right", "val"], ["sum", "left", "val"], ["left", "left", "next"]], "right": [["left", "right"], ["print", "left", "val", "right", "val"], ["sum", "right", "val"], ["right", "right", "next"]]}, "params_p": {"args": [], "kwargs": [], "left": [["int", 0.4037167572940488], ["List[int]", 0.19649290410030676]], "right": [["int", 0.4037167572940488], ["List[int]", 0.19649290410030676]]}, "q_name": "add_two_numbers", "ret_exprs": ["return head.next"], "ret_type": "Node", "ret_type_p": [["int", 0.3], ["Optional[str]", 0.09999999999999999]], "variables": {"current": "", "head": "", "left": "", "next": "", "right": "", "sum": ""}, "variables_p": {"current": [["List[str]", 0.9999999999453117], ["int", 5.468817756243338e-11]], "head": [["int", 0.49999999998749156], ["list", 3.894300058824186e-12]], "left": [["int", 0.7], ["str", 0.19999999999999998]], "next": [["list", 0.08220656897048209], ["Set[str]", 0.08023333887253056], ["Any[Any]", 0.07845563892962439]], "right": [["int", 0.7], ["str", 0.19999999999999998]], "sum": [["Set[str]", 0.07581463005442983], ["List[int]", 0.06736596794899977]]}}, {"docstring": {"func": "converts a positive integer into a (reversed) linked list.", "long_descr": "for example: give 112\nresult 2 -> 1 -> 1", "ret": null}, "fn_lc": [[43, 0], [63, 41]], "fn_var_ln": {"current": [[57, 12], [57, 19]], "head": [[50, 8], [50, 12]], "next": [[60, 8], [60, 20]], "quotient": [[53, 8], [53, 16]], "remainder": [[58, 12], [58, 21]]}, "fn_var_occur": {"current": [["current", "head"], ["current", "next", "Node", "remainder"], ["current", "current", "next"], ["current", "next", "Node", "remainder"]], "head": [["head", "Node"], ["current", "head"], ["head", "next"]], "next": [["current", "next", "Node", "remainder"], ["current", "current", "next"], ["current", "next", "Node", "remainder"], ["head", "next"]], "quotient": [["quotient", "number"], ["remainder", "quotient"]], "remainder": [["remainder", "number"], ["current", "next", "Node", "remainder"], ["remainder", "quotient"], ["current", "next", "Node", "remainder"]]}, "name": "convert_to_list", "params": {"number": "builtins.int"}, "params_descr": {"number": ""}, "params_occur": {"number": [["remainder", "number"], ["quotient", "number"]]}, "params_p": {"args": [], "kwargs": [], "number": [["str", 0.3496294057099668], ["bool", 0.27873025469572854], ["List[str]", 0.09291008489857619]]}, "q_name": "convert_to_list", "ret_exprs": ["return head.next"], "ret_type": "Node", "ret_type_p": [["str", 0.3496294057099668], ["bool", 0.27873025469572854], ["List[str]", 0.09291008489857619]], "variables": {"current": "", "head": "", "next": "", "quotient": "", "remainder": ""}, "variables_p": {"current": [["List[str]", 0.5910435663986733], ["tuple", 0.19301260942438211]], "head": [["int", 0.49999999998749156], ["list", 3.894300058824186e-12]], "next": [], "quotient": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "remainder": [["List[str]", 0.632980379278176], ["int", 0.18843922440726302]]}}, {"docstring": {"func": "converts the non-negative number list into a string.", "long_descr": null, "ret": null}, "fn_lc": [[66, 0], [74, 17]], "fn_var_ln": {"l": [[73, 8], [73, 9]], "result": [[70, 4], [70, 10]]}, "fn_var_occur": {"l": [["result", "str", "l", "val"], ["l", "l", "next"]], "result": [["result", "str", "l", "val"]]}, "name": "convert_to_str", "params": {"l": "Node"}, "params_descr": {"l": ""}, "params_occur": {"l": [["result", "str", "l", "val"], ["l", "l", "next"]]}, "params_p": {"args": [], "kwargs": [], "l": [["int", 0.6151071428701033], ["List[float]", 0.10424198561220943], ["List[str]", 0.09950548789684611], ["Optional[Union[int, float]]", 0.08904488359822559]]}, "q_name": "convert_to_str", "ret_exprs": ["return result"], "ret_type": "builtins.str", "ret_type_p": [["str", 0.21301271077282016], ["list", 0.09537561433828916], ["List[str]", 0.09457643903502717]], "variables": {"l": "", "result": ""}, "variables_p": {"l": [["str", 0.49272341229710337], ["int", 0.4041809694226653]], "result": [["str", 0.38666469563366285], ["int", 0.3175956078045966], ["Final", 0.1914864591438651], ["Dict[str, Union[dict, Any, str]]", 0.10425323741787522]]}}], "imports": ["unittest"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 4, "I": 0, "U": 33}, "session_id": "LHhw9I_Un2rRh0WXo1D2bLMiapW4_cbnz9Hu5qtcTVA", "set": null, "tc": [false, null], "type_annot_cove": 0.11, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}