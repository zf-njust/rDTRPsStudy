{"error": null, "response": {"classes": [{"cls_lc": [[22, 0], [77, 23]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[23, 4], [25, 26]], "fn_var_ln": {"arr": [[24, 8], [24, 16]], "n": [[25, 8], [25, 14]]}, "fn_var_occur": {"arr": [["self", "arr", "freq"]], "n": [["self", "n", "len", "freq"]]}, "name": "__init__", "params": {"freq": "", "self": ""}, "params_descr": {"freq": "", "self": ""}, "params_occur": {"freq": [["self", "arr", "freq"], ["self", "n", "len", "freq"]], "self": [["self", "arr", "freq"], ["self", "n", "len", "freq"]]}, "params_p": {"args": [], "freq": [["int", 0.6437287448281254], ["Sequence[str]", 0.109595780693948], ["List[int]", 0.08260830648048985], ["str", 0.08230830430622059], ["bytes", 0.0817588636912164]], "kwargs": [], "self": []}, "q_name": "Fenwick_Tree.__init__", "ret_exprs": [], "ret_type": "", "variables": {"arr": "", "n": ""}, "variables_p": {"arr": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "n": [["int", 0.5092665248843783], ["str", 0.37034706631671566]]}}, {"docstring": {"func": "Returns sum of arr[0..index]. This function assumes that the array is preprocessed and partial sums of array elements are stored in bit_tree[]. ", "long_descr": null, "ret": null}, "fn_lc": [[27, 4], [45, 16]], "fn_var_ln": {"i": [[35, 8], [35, 9]], "s": [[32, 8], [32, 9]]}, "fn_var_occur": {"i": [["i", "i"], ["s", "bit_tree", "i"], ["i", "i", "i"]], "s": [["s", "bit_tree", "i"]]}, "name": "get_sum", "params": {"bit_tree": "", "i": "", "self": ""}, "params_descr": {"bit_tree": "", "i": "", "self": ""}, "params_occur": {"bit_tree": [["s", "bit_tree", "i"]], "i": [["i", "i"], ["s", "bit_tree", "i"], ["i", "i", "i"]], "self": []}, "params_p": {"args": [], "bit_tree": [["str", 0.23313403144161515], ["int", 0.18751253177292299], ["Pattern[str]", 0.1678368456136445], ["Tuple[Literal, Literal, Literal, Literal]", 0.1480030570604987], ["Sequence", 0.09584013092457935], ["Set[str]", 0.08468395991797029], ["List[str]", 0.08298944326876892]], "i": [["float", 0.18492119445696897], ["List[str]", 0.11544071822896039], ["Sequence[int]", 0.10323111802717169], ["str", 0.09283517210847622]], "kwargs": [], "self": []}, "q_name": "Fenwick_Tree.get_sum", "ret_exprs": ["return s"], "ret_type": "", "ret_type_p": [["str", 0.6444842246866785]], "variables": {"i": "", "s": ""}, "variables_p": {"i": [["int", 0.6219158961517262], ["List[str]", 0.08122865508014523], ["float", 0.0768722713052153], ["List[int]", 0.07579332875134391], ["list", 0.07228419145141904], ["Pattern[str]", 0.0719056572601503]], "s": [["list", 0.27945092028722573], ["str", 0.2210485898543232], ["int", 0.17036638518690628], ["Pattern[str]", 0.07897668305550215]]}}, {"docstring": {"func": "Updates a node in Binary Index Tree (bit_tree) at given index in bit_tree. The given value 'val' is added to bit_tree[i] and all of its ancestors in tree. ", "long_descr": null, "ret": null}, "fn_lc": [[47, 4], [62, 25]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "update_bit", "params": {"bit_tree": "", "i": "", "self": "", "v": ""}, "params_descr": {"bit_tree": "", "i": "", "self": "", "v": ""}, "params_occur": {"bit_tree": [["bit_tree", "i", "v"]], "i": [["i", "self", "n"], ["bit_tree", "i", "v"], ["i", "i", "i"]], "self": [["i", "self", "n"]], "v": [["bit_tree", "i", "v"]]}, "params_p": {"args": [], "bit_tree": [["BinaryIO", 0.5417080343984735], ["str", 0.252657842702281], ["Pattern", 0.11579867010253492], ["IO[bytes]", 0.08983545279671065]], "i": [["float", 0.09879655045873877], ["int", 0.09565632744266289], ["bool", 0.09498296409013665], ["list", 0.09102804989965331], ["callable", 0.09102804989965331], ["List[str]", 0.09033376578529734]], "kwargs": [], "self": [], "v": [["BinaryIO", 0.5417080343984735], ["str", 0.252657842702281], ["Pattern", 0.11579867010253492], ["IO[bytes]", 0.08983545279671065]]}, "q_name": "Fenwick_Tree.update_bit", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Constructs and returns a Binary Indexed Tree for given array of size n. ", "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [77, 23]], "fn_var_ln": {"bit_tree": [[71, 8], [71, 16]]}, "fn_var_occur": {"bit_tree": [["bit_tree", "self", "n"], ["self", "update_bit", "bit_tree", "i", "self", "arr", "i"]]}, "name": "construct", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["bit_tree", "self", "n"], ["range", "self", "n"], ["self", "update_bit", "bit_tree", "i", "self", "arr", "i"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Fenwick_Tree.construct", "ret_exprs": ["return bit_tree"], "ret_type": "", "ret_type_p": [["str", 0.10190344359307354], ["BaseException", 0.09014797302989015], ["Optional[BaseException]", 0.08900167503312743]], "variables": {"bit_tree": ""}, "variables_p": {"bit_tree": [["int", 0.6271101427189653], ["Dict[str, Union[Any, Any, Any]]", 0.09347036877466401], ["Set[int]", 0.09225462841689867]]}}], "name": "Fenwick_Tree", "q_name": "Fenwick_Tree", "variables": {}, "variables_p": {}}], "funcs": [], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 14}, "session_id": "r8I2dlueYefgEEplTGxWVlp6ZtrIsPhCyk50Y1gecCY", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}