{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Gets a stream of data and compresses it", "long_descr": "under a Run-Length Encoding.", "ret": "The encoded string."}, "fn_lc": [[9, 0], [36, 51]], "fn_var_ln": {"count": [[30, 12], [30, 17]], "encoded_str": [[18, 4], [18, 15]], "prev_ch": [[31, 12], [31, 19]]}, "fn_var_occur": {"count": [["encoded_str", "str", "count", "prev_ch"], ["encoded_str", "str", "count", "prev_ch"]], "encoded_str": [["encoded_str", "str", "count", "prev_ch"], ["encoded_str", "str", "count", "prev_ch"]], "prev_ch": [["ch", "prev_ch"], ["encoded_str", "str", "count", "prev_ch"], ["prev_ch", "ch"], ["encoded_str", "str", "count", "prev_ch"]]}, "name": "encode_rle", "params": {"input": ""}, "params_descr": {"input": "The data to be encoded."}, "params_occur": {"input": []}, "params_p": {"args": [], "input": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "encode_rle", "ret_exprs": ["return ''", "return encoded_str + (str(count) + prev_ch)"], "ret_type": "", "ret_type_p": [["str", 1.0]], "variables": {"count": "", "encoded_str": "", "prev_ch": ""}, "variables_p": {"count": [["int", 0.3486405316167352], ["tuple", 0.08224430548136057]], "encoded_str": [["str", 0.7077573364071075], ["Optional[str]", 0.18911558413514692], ["int", 0.10312707945774564]], "prev_ch": [["int", 0.49919839250795983], ["float", 0.3004809644952241], ["bool", 0.20032064299681607]]}}, {"docstring": {"func": "Gets a stream of data and decompresses it", "long_descr": "under a Run-Length Decoding.", "ret": "The decoded string."}, "fn_lc": [[39, 0], [58, 21]], "fn_var_ln": {"count": [[54, 12], [54, 17]], "decode_str": [[46, 4], [46, 14]]}, "fn_var_occur": {"count": [["decode_str", "ch", "int", "count"], ["count", "ch"]], "decode_str": [["decode_str", "ch", "int", "count"]]}, "name": "decode_rle", "params": {"input": ""}, "params_descr": {"input": "The data to be decoded."}, "params_occur": {"input": []}, "params_p": {"args": [], "input": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]], "kwargs": []}, "q_name": "decode_rle", "ret_exprs": ["return decode_str"], "ret_type": "", "ret_type_p": [["str", 1.0]], "variables": {"count": "", "decode_str": ""}, "variables_p": {"count": [["int", 0.3160344588604259], ["str", 0.15801722943021296], ["frozenset[Any]", 0.13357511151025966], ["DefaultDict[Any, DefaultDict[Any, Any]]", 0.07402078328407687], ["List[str]", 0.07200320684836871], ["Tuple[str, str, str, str]", 0.06897661415114063]], "decode_str": [["str", 0.9164589918965503], ["int", 0.08354100810344961]]}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 9}, "session_id": "pnhhbXWF81Aoe7-em_rpFblko4oPAvEr841QFu0KQ2Y", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}