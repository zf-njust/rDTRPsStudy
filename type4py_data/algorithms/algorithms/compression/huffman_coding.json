{"error": null, "response": {"classes": [{"cls_lc": [[12, 0], [32, 65]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[13, 4], [17, 26]], "fn_var_ln": {"frequency": [[14, 8], [14, 22]], "left": [[16, 8], [16, 17]], "right": [[17, 8], [17, 18]], "sign": [[15, 8], [15, 17]]}, "fn_var_occur": {"frequency": [["self", "frequency", "frequency"]], "left": [["self", "left", "left"]], "right": [["self", "right", "right"]], "sign": [["self", "sign", "sign"]]}, "name": "__init__", "params": {"frequency": "", "left": "", "right": "", "self": "", "sign": ""}, "params_descr": {"frequency": "", "left": "", "right": "", "self": "", "sign": ""}, "params_occur": {"frequency": [["self", "frequency", "frequency"]], "left": [["self", "left", "left"]], "right": [["self", "right", "right"]], "self": [["self", "frequency", "frequency"], ["self", "sign", "sign"], ["self", "left", "left"], ["self", "right", "right"]], "sign": [["self", "sign", "sign"]]}, "params_p": {"args": [], "frequency": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "kwargs": [], "left": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "right": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]], "self": [], "sign": [["int", 0.3], ["bool", 0.09999999999999999], ["float", 0.09999999999999999]]}, "q_name": "Node.__init__", "ret_exprs": [], "ret_type": "", "variables": {"frequency": "", "left": "", "right": "", "sign": ""}, "variables_p": {"frequency": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "left": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "right": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "sign": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[19, 4], [20, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__lt__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["self", "frequency", "other", "frequency"]], "self": [["self", "frequency", "other", "frequency"]]}, "params_p": {"args": [], "kwargs": [], "other": [["Union[str, \"Date\"]", 8.558199866586338e-11], ["Tuple[float, float]", 2.2038073904544742e-11], ["Type", 2.0881611798473296e-11]], "self": []}, "q_name": "Node.__lt__", "ret_exprs": ["return self.frequency < other.frequency"], "ret_type": "", "ret_type_p": [["bool", 0.28692467452883313], ["Optional[str]", 0.07928648954665708], ["Optional[int]", 0.07882633477869071]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[22, 4], [23, 47]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__gt__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["self", "frequency", "other", "frequency"]], "self": [["self", "frequency", "other", "frequency"]]}, "params_p": {"args": [], "kwargs": [], "other": [["Union[str, \"Date\"]", 8.558199866586338e-11], ["Tuple[float, float]", 2.2038073904544742e-11], ["Type", 2.0881611798473296e-11]], "self": []}, "q_name": "Node.__gt__", "ret_exprs": ["return self.frequency > other.frequency"], "ret_type": "", "ret_type_p": [["bool", 0.28692467452883313], ["Optional[str]", 0.07928648954665708], ["Optional[int]", 0.07882633477869071]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[25, 4], [26, 48]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__eq__", "params": {"other": "", "self": ""}, "params_descr": {"other": "", "self": ""}, "params_occur": {"other": [["self", "frequency", "other", "frequency"]], "self": [["self", "frequency", "other", "frequency"]]}, "params_p": {"args": [], "kwargs": [], "other": [["Union[str, \"Date\"]", 8.558199866586338e-11], ["Tuple[float, float]", 2.2038073904544742e-11], ["Type", 2.0881611798473296e-11]], "self": []}, "q_name": "Node.__eq__", "ret_exprs": ["return self.frequency == other.frequency"], "ret_type": "", "ret_type_p": [["bool", 0.28692467452883313], ["Optional[str]", 0.07928648954665708], ["Optional[int]", 0.07882633477869071]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[28, 4], [29, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__str__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["format", "self", "sign", "self", "frequency"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Node.__str__", "ret_exprs": ["return \"<ch: {0}: {1}>\".format(self.sign, self.frequency)"], "ret_type": "", "ret_type_p": [["str", 1.0000000000000002]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[31, 4], [32, 65]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__repr__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["format", "self", "sign", "self", "frequency"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "Node.__repr__", "ret_exprs": ["return \"<ch: {0}: {1}>\".format(self.sign, self.frequency)"], "ret_type": "", "ret_type_p": [["str", 0.9999999999999999]], "variables": {}, "variables_p": {}}], "name": "Node", "q_name": "Node", "variables": {}, "variables_p": {}}, {"cls_lc": [[35, 0], [118, 21]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[36, 4], [39, 33]], "fn_var_ln": {"buffer": [[38, 8], [38, 19]], "file": [[37, 8], [37, 17]], "is_last_byte": [[39, 8], [39, 25]]}, "fn_var_occur": {"buffer": [["self", "buffer"]], "file": [["self", "file", "file"]], "is_last_byte": [["self", "is_last_byte", "False"]]}, "name": "__init__", "params": {"file": "", "self": ""}, "params_descr": {"file": "", "self": ""}, "params_occur": {"file": [["self", "file", "file"]], "self": [["self", "file", "file"], ["self", "buffer"], ["self", "is_last_byte", "False"]]}, "params_p": {"args": [], "file": [["int", 0.225429215619262], ["str", 0.18742810184322287], ["bool", 0.1229967670340868], ["Dict[str, str]", 0.09291071918446697], ["Dict[str, int]", 0.08862846366626041]], "kwargs": [], "self": []}, "q_name": "HuffmanReader.__init__", "ret_exprs": [], "ret_type": "", "variables": {"buffer": "", "file": "", "is_last_byte": ""}, "variables_p": {"buffer": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "file": [["str", 0.7110319750724378], ["list", 0.10863402976193007]], "is_last_byte": [["Dict[str, int]", 0.36138946471813266], ["bool", 0.29903916307582545], ["dict", 0.1436890504847499], ["Dict[str, float]", 0.08869779030101639]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[41, 4], [43, 30]], "fn_var_ln": {"bin_num": [[42, 8], [42, 15]]}, "fn_var_occur": {"bin_num": [["bin_num", "self", "get_bit", "self", "get_bit", "self", "get_bit"], ["int", "bin_num"]]}, "name": "get_number_of_additional_bits_in_the_last_byte", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["bin_num", "self", "get_bit", "self", "get_bit", "self", "get_bit"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "HuffmanReader.get_number_of_additional_bits_in_the_last_byte", "ret_exprs": ["return int(bin_num, 2)"], "ret_type": "builtins.int", "ret_type_p": [["int", 0.17710356683951878], ["str", 0.15077571871557569], ["type", 0.10862325469676509], ["List[str]", 0.10544170565662128], ["List[dict]", 0.10136081619028041], ["bool", 0.09794732281959345], ["dict", 0.07729195708548962]], "variables": {"bin_num": ""}, "variables_p": {"bin_num": [["str", 0.3016249108713356], ["int", 0.20108327391422373], ["float", 0.10054163695711187], ["Callable", 0.10054163695711187]]}}, {"docstring": {"func": "Load tree from file", "long_descr": null, "ret": ""}, "fn_lc": [[45, 4], [73, 19]], "fn_var_ln": {"current_bit": [[58, 12], [58, 23]], "current_node": [[67, 20], [67, 32]], "is_end_of_tree": [[69, 20], [69, 34]], "left": [[60, 16], [60, 33]], "node_stack": [[51, 8], [51, 18]], "queue_leaves": [[52, 8], [52, 20]], "right": [[61, 16], [61, 34]], "root": [[53, 8], [53, 12]]}, "fn_var_occur": {"current_bit": [["current_bit", "self", "get_bit"]], "current_node": [["current_node", "root"], ["current_node", "left", "Node"], ["current_node", "right", "Node"], ["node_stack", "append", "current_node", "right"], ["current_node", "current_node", "left"], ["queue_leaves", "append", "current_node"], ["current_node", "node_stack", "pop"]], "is_end_of_tree": [["is_end_of_tree", "False"], ["is_end_of_tree", "True"]], "left": [["current_node", "left", "Node"], ["current_node", "current_node", "left"]], "node_stack": [["node_stack", "deque"], ["node_stack", "append", "current_node", "right"], ["current_node", "node_stack", "pop"]], "queue_leaves": [["queue_leaves", "deque"], ["queue_leaves", "append", "current_node"], ["self", "_fill_tree", "queue_leaves"]], "right": [["current_node", "right", "Node"], ["node_stack", "append", "current_node", "right"]], "root": [["root", "Node"], ["current_node", "root"]]}, "name": "load_tree", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["current_bit", "self", "get_bit"], ["self", "_fill_tree", "queue_leaves"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "HuffmanReader.load_tree", "ret_exprs": ["return root"], "ret_type": "Node", "ret_type_p": [], "variables": {"current_bit": "", "current_node": "", "is_end_of_tree": "", "left": "", "node_stack": "", "queue_leaves": "", "right": "", "root": ""}, "variables_p": {"current_bit": [["int", 0.6230401519021689], ["str", 0.10435748268802986], ["dict", 0.09210610768953971]], "current_node": [["str", 0.10221752940467171], ["List[str]", 0.10104192734509175], ["complex", 0.09778990037143402]], "is_end_of_tree": [["int", 0.29963243120258476], ["str", 0.20098018345977403]], "left": [["str", 0.3029411892107077], ["Dict[int, List[str]]", 0.2086963420463408], ["list", 0.18168715769721636], ["Dict[int, str]", 0.10701933193475612]], "node_stack": [["str", 0.4971955781393372], ["Tuple[Tuple[Literal, Literal], Tuple[Literal, Literal]]", 0.26799215086754125], ["list", 0.08945824547231952]], "queue_leaves": [["int", 0.17304913180301248], ["List[Tuple[Any, Any, int]]", 0.10301868694473058], ["Dict[str, List[str]]", 0.09874991266274775], ["Dict[str, List[Any]]", 0.08135885360858607]], "right": [["set", 0.2860409090777523], ["int", 0.18959578191020293], ["str", 0.12713683014956975], ["Type[Optional[Any]]", 0.09209387645039847]], "root": [["str", 0.6046258261220524], ["Dict[str, str]", 0.11867469330584206], ["List[str]", 0.10077097102034206], ["Dict[str, List[str]]", 0.08864678273394089], ["int", 0.08728172681782259]]}}, {"docstring": {"func": "Load values to tree after reading tree", "long_descr": null, "ret": ""}, "fn_lc": [[75, 4], [85, 25]], "fn_var_ln": {"node": [[83, 12], [83, 16]], "s": [[84, 12], [84, 13]], "sign": [[85, 12], [85, 21]]}, "fn_var_occur": {"node": [["node", "leaves_queue", "pop"], ["node", "sign", "s"]], "s": [["s", "int", "self", "get_byte"], ["node", "sign", "s"]], "sign": [["node", "sign", "s"]]}, "name": "_fill_tree", "params": {"leaves_queue": "", "self": ""}, "params_descr": {"leaves_queue": "", "self": ""}, "params_occur": {"leaves_queue": [["leaves_queue", "reverse"], ["node", "leaves_queue", "pop"]], "self": [["s", "int", "self", "get_byte"]]}, "params_p": {"args": [], "kwargs": [], "leaves_queue": [["int", 0.09130056862876613]], "self": []}, "q_name": "HuffmanReader._fill_tree", "ret_exprs": [], "ret_type": "", "variables": {"node": "", "s": "", "sign": ""}, "variables_p": {"node": [["list", 0.09553537374452159]], "s": [["str", 0.25266057878820947], ["Set[int]", 0.21805099366957792], ["List[int]", 0.18750333178367645], ["float", 0.1785150003137133], ["int", 0.0897161565249138], ["bytes", 0.0735539389199093]], "sign": [["str", 0.30000000000000004], ["Pattern[str]", 0.30000000000000004], ["List[str]", 0.1], ["Tuple[int, int, int]", 0.1], ["list", 0.1], ["Dict[int, List[int]]", 0.1]]}}, {"docstring": {"func": "Load next byte is buffer is less than buff_limit", "long_descr": null, "ret": "True if there is enough bits in buffer to read"}, "fn_lc": [[87, 4], [102, 19]], "fn_var_ln": {"byte": [[94, 12], [94, 16]], "i": [[99, 12], [99, 13]]}, "fn_var_occur": {"byte": [["byte", "self", "file", "read"], ["i", "int", "from_bytes", "byte"]], "i": [["i", "int", "from_bytes", "byte"], ["self", "buffer", "extend", "list", "format", "i"]]}, "name": "_load_byte", "params": {"buff_limit": "", "self": ""}, "params_descr": {"buff_limit": "", "self": ""}, "params_occur": {"buff_limit": [["len", "self", "buffer", "buff_limit"]], "self": [["len", "self", "buffer", "buff_limit"], ["byte", "self", "file", "read"], ["self", "buffer", "extend", "list", "format", "i"]]}, "params_p": {"args": [], "buff_limit": [["str", 0.2193778693885669], ["bool", 0.08747566848056881]], "kwargs": [], "self": []}, "q_name": "HuffmanReader._load_byte", "ret_exprs": ["return False", "return True"], "ret_type": "builtins.bool", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"byte": "", "i": ""}, "variables_p": {"byte": [["int", 0.36175910296100844], ["List[int]", 0.20427135513066574], ["Union[int, str]", 0.13987773805723147], ["Callable(chr)[[int], str]", 0.13543012375477048], ["Tuple[bool]", 0.07743575483654032]], "i": [["bytes", 0.8075645492293937], ["int", 0.1924354507706063]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[104, 4], [109, 21]], "fn_var_ln": {"bit": [[106, 12], [106, 15]]}, "fn_var_occur": {"bit": [["bit", "self", "buffer", "pop"]]}, "name": "get_bit", "params": {"buff_limit": "", "self": ""}, "params_descr": {"buff_limit": "", "self": ""}, "params_occur": {"buff_limit": [["self", "_load_byte", "buff_limit"]], "self": [["self", "_load_byte", "buff_limit"], ["bit", "self", "buffer", "pop"]]}, "params_p": {"args": [], "buff_limit": [["str", 0.36826300913518806], ["bool", 0.3160198882796139], ["int", 0.0818266691821897]], "kwargs": [], "self": []}, "q_name": "HuffmanReader.get_bit", "ret_exprs": ["return bit", "return -1"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["bool", 0.09999999999999999]], "variables": {"bit": ""}, "variables_p": {"bit": [["int", 0.7], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1], ["bool", 0.1], ["Type[str]", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[111, 4], [118, 21]], "fn_var_ln": {"buffer": [[114, 12], [114, 23]], "byte_list": [[113, 12], [113, 21]]}, "fn_var_occur": {"buffer": [["byte_list", "self", "buffer"], ["self", "buffer", "self", "buffer"]], "byte_list": [["byte_list", "self", "buffer"], ["join", "byte_list"]]}, "name": "get_byte", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "_load_byte"], ["byte_list", "self", "buffer"], ["self", "buffer", "self", "buffer"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "HuffmanReader.get_byte", "ret_exprs": ["return \"\".join(byte_list)", "return -1"], "ret_type": "", "ret_type_p": [["str", 0.7836363285971331], ["bool", 0.11425526048951858], ["Optional[str]", 0.1021084109133483]], "variables": {"buffer": "", "byte_list": ""}, "variables_p": {"buffer": [["float", 0.20807306634643882], ["List[int]", 0.11409624675755732], ["str", 0.10339612980270477], ["Dict[str, Any]", 0.100020000720311], ["Optional[str]", 0.08371426273921125]], "byte_list": [["list", 0.3712637279909734], ["List[str]", 0.34759011139555973], ["List[Tuple[str, str, str, bool]]", 0.1029086763415641], ["bool", 0.0940858446324908], ["Tuple[str]", 0.08415163963941186]]}}], "name": "HuffmanReader", "q_name": "HuffmanReader", "variables": {}, "variables_p": {}}, {"cls_lc": [[121, 0], [189, 73]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[122, 4], [125, 27]], "fn_var_ln": {"buffer": [[124, 8], [124, 19]], "file": [[123, 8], [123, 17]], "saved_bits": [[125, 8], [125, 23]]}, "fn_var_occur": {"buffer": [["self", "buffer"]], "file": [["self", "file", "file"]], "saved_bits": [["self", "saved_bits"]]}, "name": "__init__", "params": {"file": "", "self": ""}, "params_descr": {"file": "", "self": ""}, "params_occur": {"file": [["self", "file", "file"]], "self": [["self", "file", "file"], ["self", "buffer"], ["self", "saved_bits"]]}, "params_p": {"args": [], "file": [["int", 0.225429215619262], ["str", 0.18742810184322287], ["bool", 0.1229967670340868], ["Dict[str, str]", 0.09291071918446697], ["Dict[str, int]", 0.08862846366626041]], "kwargs": [], "self": []}, "q_name": "HuffmanWriter.__init__", "ret_exprs": [], "ret_type": "", "variables": {"buffer": "", "file": "", "saved_bits": ""}, "variables_p": {"buffer": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "file": [["str", 0.7110319750724378], ["list", 0.10863402976193007]], "saved_bits": [["str", 0.5709041006462743], ["int", 0.06722631347339593]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[127, 4], [128, 33]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "write_char", "params": {"char": "", "self": ""}, "params_descr": {"char": "", "self": ""}, "params_occur": {"char": [["self", "write_int", "ord", "char"]], "self": [["self", "write_int", "ord", "char"]]}, "params_p": {"args": [], "char": [["str", 0.8001309047462736], ["int", 0.11655689945920814], ["Dict[int, str]", 0.08331219579451832]], "kwargs": [], "self": []}, "q_name": "HuffmanWriter.write_char", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[130, 4], [132, 32]], "fn_var_ln": {"bin_int": [[131, 8], [131, 15]]}, "fn_var_occur": {"bin_int": [["bin_int", "format", "num"], ["self", "write_bits", "bin_int"]]}, "name": "write_int", "params": {"num": "", "self": ""}, "params_descr": {"num": "", "self": ""}, "params_occur": {"num": [["bin_int", "format", "num"]], "self": [["self", "write_bits", "bin_int"]]}, "params_p": {"args": [], "kwargs": [], "num": [["int", 0.2935034936935526], ["bool", 0.2844059862253265], ["Optional[int]", 0.13581754163502166], ["float", 0.096668987629215], ["Dict[str, str]", 0.09480199540844216]], "self": []}, "q_name": "HuffmanWriter.write_int", "ret_exprs": [], "ret_type": "", "variables": {"bin_int": ""}, "variables_p": {"bin_int": [["str", 0.4379394108925377], ["int", 0.372063740805054], ["float", 0.10569365256665754]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[134, 4], [142, 41]], "fn_var_ln": {"buffer": [[142, 12], [142, 23]], "i": [[140, 12], [140, 13]]}, "fn_var_occur": {"buffer": [["self", "buffer", "bits"], ["len", "self", "buffer"], ["i", "int", "self", "buffer"], ["self", "buffer", "self", "buffer"]], "i": [["i", "int", "self", "buffer"], ["self", "file", "write", "bytes", "i"]]}, "name": "write_bits", "params": {"bits": "", "self": ""}, "params_descr": {"bits": "", "self": ""}, "params_occur": {"bits": [["self", "saved_bits", "len", "bits"], ["self", "buffer", "bits"]], "self": [["self", "saved_bits", "len", "bits"], ["self", "buffer", "bits"], ["len", "self", "buffer"], ["i", "int", "self", "buffer"], ["self", "file", "write", "bytes", "i"], ["self", "buffer", "self", "buffer"]]}, "params_p": {"args": [], "bits": [["List[int]", 0.19999999999999998], ["list", 0.19999999999999998], ["bool", 0.19999999999999998], ["List[float]", 0.19999999999999998], ["str", 0.09999999999999999], ["int", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "HuffmanWriter.write_bits", "ret_exprs": [], "ret_type": "", "variables": {"buffer": "", "i": ""}, "variables_p": {"buffer": [["int", 0.9999999999999999]], "i": [["int", 0.6033812594422019], ["bytearray", 0.20134020182859771], ["float", 0.11115176868934312]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[153, 8], [162, 38]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "get_code_tree", "params": {"T": ""}, "params_descr": {"T": ""}, "params_occur": {"T": [["T", "sign", "None"], ["signs", "append", "T", "sign"], ["T", "left"], ["get_code_tree", "T", "left"], ["T", "right"], ["get_code_tree", "T", "right"]]}, "params_p": {"T": [["Optional[List[Type]]", 0.2774897890602925], ["List[str]", 0.09943035685604791], ["float", 0.09746019159739343]], "args": [], "kwargs": [], "self": []}, "q_name": "HuffmanWriter.save_tree.<locals>.get_code_tree", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Generate and save tree code to file", "long_descr": null, "ret": ""}, "fn_lc": [[144, 4], [167, 36]], "fn_var_ln": {"signs": [[150, 8], [150, 13]], "tree_code": [[151, 8], [151, 17]]}, "fn_var_occur": {"signs": [], "tree_code": [["self", "write_bits", "tree_code"]]}, "name": "save_tree", "params": {"self": "", "tree": ""}, "params_descr": {"self": "", "tree": ""}, "params_occur": {"self": [["self", "write_bits", "tree_code"], ["self", "write_int", "int_sign"]], "tree": [["get_code_tree", "tree"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tree": [["str", 0.6941150818421216]]}, "q_name": "HuffmanWriter.save_tree", "ret_exprs": [], "ret_type": "", "variables": {"signs": "", "tree_code": ""}, "variables_p": {"signs": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "tree_code": [["int", 0.39418235481622554], ["str", 0.20482453692187186], ["float", 0.18860318786798985], ["Dict[str, bool]", 0.09655741801688104]]}}, {"docstring": {"func": "Overwrite first three bits in the file", "long_descr": null, "ret": ""}, "fn_lc": [[169, 4], [183, 35]], "fn_var_ln": {"first_byte": [[181, 8], [181, 18]], "first_byte_raw": [[176, 8], [176, 22]]}, "fn_var_occur": {"first_byte": [["first_byte", "format", "int", "from_bytes", "first_byte_raw"], ["first_byte", "first_byte"], ["first_byte", "format", "additional_bits", "first_byte"], ["self", "write_bits", "first_byte"]], "first_byte_raw": [["first_byte_raw", "self", "file", "read"], ["first_byte", "format", "int", "from_bytes", "first_byte_raw"]]}, "name": "_save_information_about_additional_bits", "params": {"additional_bits": "builtins.int", "self": ""}, "params_descr": {"additional_bits": "number of bits that were appended to fill last byte", "self": ""}, "params_occur": {"additional_bits": [["first_byte", "format", "additional_bits", "first_byte"]], "self": [["self", "file", "seek"], ["first_byte_raw", "self", "file", "read"], ["self", "file", "seek"], ["self", "write_bits", "first_byte"]]}, "params_p": {"additional_bits": [["str", 0.6705615111915875], ["TextIO", 0.16765289355563526], ["IO[Any]", 0.08683751660833731], ["int", 0.07494807864444016]], "args": [], "kwargs": [], "self": []}, "q_name": "HuffmanWriter._save_information_about_additional_bits", "ret_exprs": [], "ret_type": "", "variables": {"first_byte": "", "first_byte_raw": ""}, "variables_p": {"first_byte": [["bytes", 0.8021742686446378], ["int", 0.1978257313553622]], "first_byte_raw": [["int", 0.6034645904278739], ["bytes", 0.30700176307097776], ["Union[int, str]", 0.08953364650114823]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[185, 4], [189, 73]], "fn_var_ln": {"additional_bits": [[186, 8], [186, 23]]}, "fn_var_occur": {"additional_bits": [["additional_bits", "len", "self", "buffer"], ["self", "write_bits", "additional_bits"], ["self", "_save_information_about_additional_bits", "additional_bits"]]}, "name": "close", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["additional_bits", "len", "self", "buffer"], ["self", "write_bits", "additional_bits"], ["self", "_save_information_about_additional_bits", "additional_bits"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "HuffmanWriter.close", "ret_exprs": [], "ret_type": "", "variables": {"additional_bits": ""}, "variables_p": {"additional_bits": [["int", 0.8930244051712357], ["float", 0.10697559482876419]]}}], "name": "HuffmanWriter", "q_name": "HuffmanWriter", "variables": {}, "variables_p": {}}, {"cls_lc": [[192, 0], [224, 37]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[197, 4], [200, 25]], "fn_var_ln": {"current_node": [[199, 8], [199, 25]], "found": [[200, 8], [200, 18]], "root": [[198, 8], [198, 17]]}, "fn_var_occur": {"current_node": [["self", "current_node", "tree"]], "found": [["self", "found", "None"]], "root": [["self", "root", "tree"]]}, "name": "__init__", "params": {"self": "", "tree": ""}, "params_descr": {"self": "", "tree": ""}, "params_occur": {"self": [["self", "root", "tree"], ["self", "current_node", "tree"], ["self", "found", "None"]], "tree": [["self", "root", "tree"], ["self", "current_node", "tree"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tree": [["dict", 0.11609715503202368], ["T", 0.09298791038360457], ["Container[T]", 0.09298791038360457]]}, "q_name": "TreeFinder.__init__", "ret_exprs": [], "ret_type": "", "variables": {"current_node": "", "found": "", "root": ""}, "variables_p": {"current_node": [["str", 0.20149937379362817], ["int", 0.1915649843538442]], "found": [["\"Frame\"", 0.19999999999676038], ["str", 3.971941177518544e-12], ["Dict[str, Any]", 3.6175949269712212e-12]], "root": [["Optional[str]", 1.8410405300053918e-11], ["str", 1.7214377530151187e-11], ["dict", 8.669498576066885e-12]]}}, {"docstring": {"func": "Find sign in tree", "long_descr": null, "ret": "True if sign is found"}, "fn_lc": [[202, 4], [220, 24]], "fn_var_ln": {"current_node": [[211, 12], [211, 29]]}, "fn_var_occur": {"current_node": [["self", "current_node", "self", "current_node", "left"], ["self", "current_node", "self", "current_node", "right"], ["self", "current_node", "sign", "None"], ["self", "_reset", "self", "current_node", "sign"]]}, "name": "find", "params": {"bit": "", "self": ""}, "params_descr": {"bit": "", "self": ""}, "params_occur": {"bit": [], "self": [["self", "current_node", "self", "current_node", "left"], ["self", "current_node", "self", "current_node", "right"], ["self", "_reset"], ["self", "current_node", "sign", "None"], ["self", "_reset", "self", "current_node", "sign"]]}, "params_p": {"args": [], "bit": [["List[str]", 0.19999999999999998], ["bool", 0.09999999999999999], ["List[object]", 0.09999999999999999], ["Sized", 0.09999999999999999], ["Optional[List]", 0.09999999999999999], ["str", 0.09999999999999999]], "kwargs": [], "self": []}, "q_name": "TreeFinder.find", "ret_exprs": ["return True", "return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"current_node": ""}, "variables_p": {"current_node": [["str", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[222, 4], [224, 37]], "fn_var_ln": {"current_node": [[224, 8], [224, 25]], "found": [[223, 8], [223, 18]]}, "fn_var_occur": {"current_node": [["self", "current_node", "self", "root"]], "found": [["self", "found", "found"]]}, "name": "_reset", "params": {"found": "", "self": ""}, "params_descr": {"found": "", "self": ""}, "params_occur": {"found": [["self", "found", "found"]], "self": [["self", "found", "found"], ["self", "current_node", "self", "root"]]}, "params_p": {"args": [], "found": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "kwargs": [], "self": []}, "q_name": "TreeFinder._reset", "ret_exprs": [], "ret_type": "", "variables": {"current_node": "", "found": ""}, "variables_p": {"current_node": [["str", 0.6973831451600896], ["int", 0.11305902663902781], ["List[str]", 0.09139462908191966]], "found": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}], "name": "TreeFinder", "q_name": "TreeFinder", "variables": {}, "variables_p": {}}, {"cls_lc": [[227, 0], [328, 95]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[228, 4], [229, 12]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "HuffmanCoding.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[232, 4], [240, 30]], "fn_var_ln": {"additional_bits": [[235, 12], [235, 27]], "reader": [[234, 12], [234, 18]], "tree": [[236, 12], [236, 16]]}, "fn_var_occur": {"additional_bits": [["additional_bits", "reader", "get_number_of_additional_bits_in_the_last_byte"], ["HuffmanCoding", "_decode_and_write_signs_to_file", "file_out", "reader", "tree", "additional_bits"]], "reader": [["reader", "HuffmanReader", "file_in"], ["additional_bits", "reader", "get_number_of_additional_bits_in_the_last_byte"], ["tree", "reader", "load_tree"], ["HuffmanCoding", "_decode_and_write_signs_to_file", "file_out", "reader", "tree", "additional_bits"]], "tree": [["tree", "reader", "load_tree"], ["HuffmanCoding", "_decode_and_write_signs_to_file", "file_out", "reader", "tree", "additional_bits"]]}, "name": "decode_file", "params": {"file_in_name": "", "file_out_name": ""}, "params_descr": {"file_in_name": "", "file_out_name": ""}, "params_occur": {"file_in_name": [["open", "file_in_name", "file_in"]], "file_out_name": []}, "params_p": {"args": [], "file_in_name": [["str", 0.9001340209684657]], "file_out_name": [["bool", 0.30250252508737674], ["Optional[Callable]", 0.10273133931530258], ["Iterable[str]", 0.10041329340864104], ["List[str]", 0.08121283780702873], ["str", 0.07521148046703531], ["Union[bytes, str]", 0.07521148046703531]], "kwargs": [], "self": []}, "q_name": "HuffmanCoding.decode_file", "ret_exprs": [], "ret_type": "", "variables": {"additional_bits": "", "reader": "", "tree": ""}, "variables_p": {"additional_bits": [["str", 0.11025671414779192], ["Tuple[float, float]", 0.09495336753484969], ["list", 0.09383950532148537], ["bytes", 0.09061897487344062]], "reader": [["List[int]", 0.20662517086214788], ["int", 0.20268954324533497], ["str", 0.09101092075599812]], "tree": [["str", 0.1616501985515028], ["TextIO", 0.09110051682563178], ["bytes", 0.08303617068487204], ["Type[Iterator[Any]]", 0.07155672056350729]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[243, 4], [259, 62]], "fn_var_ln": {"bit": [[251, 20], [251, 23]], "is_end_of_file": [[254, 16], [254, 30]], "last_byte": [[256, 16], [256, 25]], "tree_finder": [[244, 8], [244, 19]]}, "fn_var_occur": {"bit": [["bit", "reader", "get_bit"], ["tree_finder", "find", "bit"], ["bit", "reader", "get_bit"], ["tree_finder", "find", "bit"]], "is_end_of_file": [["is_end_of_file", "False"], ["is_end_of_file", "True"]], "last_byte": [["last_byte", "reader", "buffer"], ["last_byte", "last_byte", "additional_bits"]], "tree_finder": [["tree_finder", "TreeFinder", "tree"], ["tree_finder", "find", "bit"], ["file", "write", "bytes", "tree_finder", "found"], ["tree_finder", "find", "bit"], ["file", "write", "bytes", "tree_finder", "found"]]}, "name": "_decode_and_write_signs_to_file", "params": {"additional_bits": "builtins.int", "file": "", "reader": "HuffmanReader", "tree": "Node"}, "params_descr": {"additional_bits": "", "file": "", "reader": "", "tree": ""}, "params_occur": {"additional_bits": [["last_byte", "last_byte", "additional_bits"]], "file": [["file", "write", "bytes", "tree_finder", "found"], ["file", "write", "bytes", "tree_finder", "found"]], "reader": [["bit", "reader", "get_bit"], ["bit", "reader", "get_bit"], ["last_byte", "reader", "buffer"]], "tree": [["tree_finder", "TreeFinder", "tree"]]}, "params_p": {"additional_bits": [["int", 0.20979317206763665], ["bytes", 0.20103103091343427], ["bool", 0.09912323369428694], ["Sequence[T]", 0.0984425255497565], ["Iterable[int]", 0.09390200195460141], ["str", 0.09035264961450615], ["List[str]", 0.08881973113009063]], "args": [], "file": [["Callable[[bytes], bytes]", 0.28469711571775713], ["bytes", 0.2808669264361116], ["Callable[[], bytes]", 0.10305467378543222], ["List[float]", 0.09973308999098342]], "kwargs": [], "reader": [["str", 0.28916884489071015], ["bytes", 0.20101774060493022], ["float", 0.11370974948536663], ["bool", 0.10481984005745297], ["List[int]", 0.09861452700314167]], "self": [], "tree": [["bool", 0.21418493848415743], ["str", 0.1147650780811853], ["dict", 0.06604284793067629], ["list", 0.042813245360322126]]}, "q_name": "HuffmanCoding._decode_and_write_signs_to_file", "ret_exprs": [], "ret_type": "", "variables": {"bit": "", "is_end_of_file": "", "last_byte": "", "tree_finder": ""}, "variables_p": {"bit": [], "is_end_of_file": [["int", 0.5418110201796987], ["Dict[str, int]", 0.12950704092723136]], "last_byte": [["int", 0.6017802739348346], ["float", 0.15529748052549947]], "tree_finder": [["str", 0.08702555530919821]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[262, 4], [275, 30]], "fn_var_ln": {"codes": [[267, 12], [267, 17]], "signs_frequency": [[264, 12], [264, 27]], "tree": [[266, 12], [266, 16]], "writer": [[269, 12], [269, 18]]}, "fn_var_occur": {"codes": [["codes", "HuffmanCoding", "_generate_codes", "tree"], ["HuffmanCoding", "_encode_and_write_signs_to_file", "file_in", "writer", "codes"]], "signs_frequency": [["signs_frequency", "HuffmanCoding", "_get_char_frequency", "file_in"], ["tree", "HuffmanCoding", "_create_tree", "signs_frequency"]], "tree": [["tree", "HuffmanCoding", "_create_tree", "signs_frequency"], ["codes", "HuffmanCoding", "_generate_codes", "tree"], ["writer", "save_tree", "tree"]], "writer": [["writer", "HuffmanWriter", "file_out"], ["writer", "write_bits"], ["writer", "save_tree", "tree"], ["HuffmanCoding", "_encode_and_write_signs_to_file", "file_in", "writer", "codes"], ["writer", "close"]]}, "name": "encode_file", "params": {"file_in_name": "", "file_out_name": ""}, "params_descr": {"file_in_name": "", "file_out_name": ""}, "params_occur": {"file_in_name": [["open", "file_in_name", "file_in"]], "file_out_name": []}, "params_p": {"args": [], "file_in_name": [["str", 0.9001340209684657]], "file_out_name": [["bool", 0.30250252508737674], ["Optional[Callable]", 0.10273133931530258], ["Iterable[str]", 0.10041329340864104], ["List[str]", 0.08121283780702873], ["str", 0.07521148046703531], ["Union[bytes, str]", 0.07521148046703531]], "kwargs": [], "self": []}, "q_name": "HuffmanCoding.encode_file", "ret_exprs": [], "ret_type": "", "variables": {"codes": "", "signs_frequency": "", "tree": "", "writer": ""}, "variables_p": {"codes": [["str", 0.49993014314973105], ["int", 0.4086901100949304]], "signs_frequency": [["str", 0.11410979180573012]], "tree": [], "writer": [["Optional[str]", 0.11950143386428401], ["Dict[str, List[Any]]", 0.08451023069285309], ["str", 0.07995662931718925], ["list", 0.07912460799419413]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[278, 4], [283, 31]], "fn_var_ln": {"int_char": [[281, 12], [281, 20]], "sign": [[283, 12], [283, 16]]}, "fn_var_occur": {"int_char": [["int_char", "int", "from_bytes", "sign"], ["writer", "write_bits", "codes", "int_char"]], "sign": [["sign", "file", "read"], ["int_char", "int", "from_bytes", "sign"], ["sign", "file", "read"]]}, "name": "_encode_and_write_signs_to_file", "params": {"codes": "builtins.dict", "file": "", "writer": "HuffmanWriter"}, "params_descr": {"codes": "", "file": "", "writer": ""}, "params_occur": {"codes": [["writer", "write_bits", "codes", "int_char"]], "file": [["sign", "file", "read"], ["sign", "file", "read"]], "writer": [["writer", "write_bits", "codes", "int_char"]]}, "params_p": {"args": [], "codes": [["str", 0.7162938027220481]], "file": [["str", 0.18210520561463003], ["IO[bytes]", 0.09186496356724287], ["BinaryIO", 0.09159056094229565]], "kwargs": [], "self": [], "writer": [["str", 0.7162938027220481]]}, "q_name": "HuffmanCoding._encode_and_write_signs_to_file", "ret_exprs": [], "ret_type": "", "variables": {"int_char": "", "sign": ""}, "variables_p": {"int_char": [["bytes", 0.9073987583184927], ["str", 0.09260124168150738]], "sign": [["bytes", 0.5691133066093118], ["str", 0.09068406403103617]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[286, 4], [298, 30]], "fn_var_ln": {"curr_pos": [[292, 12], [292, 20]], "is_end_of_file": [[294, 16], [294, 30]], "prev_pos": [[290, 12], [290, 20]], "sign": [[291, 12], [291, 16]], "signs_frequency": [[288, 8], [288, 23]]}, "fn_var_occur": {"curr_pos": [["curr_pos", "file", "tell"], ["prev_pos", "curr_pos"]], "is_end_of_file": [["is_end_of_file", "False"], ["is_end_of_file", "True"]], "prev_pos": [["prev_pos", "file", "tell"], ["prev_pos", "curr_pos"]], "sign": [["sign", "file", "read"], ["signs_frequency", "int", "from_bytes", "sign"]], "signs_frequency": [["signs_frequency", "defaultdict"], ["signs_frequency", "int", "from_bytes", "sign"]]}, "name": "_get_char_frequency", "params": {"file": ""}, "params_descr": {"file": ""}, "params_occur": {"file": [["prev_pos", "file", "tell"], ["sign", "file", "read"], ["curr_pos", "file", "tell"]]}, "params_p": {"args": [], "file": [["BinaryIO", 0.09965178341179798], ["IO[bytes]", 0.08947212225307799]], "kwargs": [], "self": []}, "q_name": "HuffmanCoding._get_char_frequency", "ret_exprs": ["return signs_frequency"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.4524496141082373]], "variables": {"curr_pos": "", "is_end_of_file": "", "prev_pos": "", "sign": "", "signs_frequency": ""}, "variables_p": {"curr_pos": [["str", 0.7939642832569592]], "is_end_of_file": [["int", 0.5418110201796987], ["Dict[str, int]", 0.12950704092723136]], "prev_pos": [["str", 0.7939642832569592]], "sign": [["int", 0.2557224269994767], ["bytes", 0.16541323832497962], ["bool", 0.09249593666805123], ["str", 0.07266402452025957]], "signs_frequency": [["bytes", 0.2955574694538284], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.1259053149179346]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[301, 4], [304, 20]], "fn_var_ln": {"codes": [[302, 8], [302, 13]]}, "fn_var_occur": {"codes": [["codes", "dict"], ["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "codes"]]}, "name": "_generate_codes", "params": {"tree": "Node"}, "params_descr": {"tree": ""}, "params_occur": {"tree": [["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "codes"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "tree": [["Dict[str, str]", 0.30169328302659076], ["str", 0.09133108189521923], ["List[int]", 0.09096639913331697], ["Tuple[int]", 0.0894318689759921]]}, "q_name": "HuffmanCoding._generate_codes", "ret_exprs": ["return codes"], "ret_type": "builtins.dict", "ret_type_p": [["str", 0.826126009768374], ["Optional[int]", 0.08913138091446174]], "variables": {"codes": ""}, "variables_p": {"codes": [["Dict[str, str]", 0.29198025659418364], ["dict", 0.19303979688404282], ["Type[str]", 0.12216015510453744], ["Dict[float, str]", 0.1060898058904334], ["str", 0.09648161781642837], ["Dict[int, Any]", 0.08930820197615864]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[307, 4], [317, 23]], "fn_var_ln": {"left": [[312, 12], [312, 16]], "new_node": [[314, 12], [314, 20]], "nodes": [[308, 8], [308, 13]], "right": [[313, 12], [313, 17]]}, "fn_var_occur": {"left": [["left", "heapq", "heappop", "nodes"], ["new_node", "Node", "frequency", "left", "frequency", "right", "frequency", "left", "left", "right", "right"]], "new_node": [["new_node", "Node", "frequency", "left", "frequency", "right", "frequency", "left", "left", "right", "right"], ["heapq", "heappush", "nodes", "new_node"]], "nodes": [["nodes", "Node", "frequency", "frequency", "sign", "char_int", "char_int", "frequency", "signs_frequency", "items"], ["heapq", "heapify", "nodes"], ["len", "nodes"], ["left", "heapq", "heappop", "nodes"], ["right", "heapq", "heappop", "nodes"], ["heapq", "heappush", "nodes", "new_node"]], "right": [["right", "heapq", "heappop", "nodes"], ["new_node", "Node", "frequency", "left", "frequency", "right", "frequency", "left", "left", "right", "right"]]}, "name": "_create_tree", "params": {"signs_frequency": "builtins.dict"}, "params_descr": {"signs_frequency": ""}, "params_occur": {"signs_frequency": [["nodes", "Node", "frequency", "frequency", "sign", "char_int", "char_int", "frequency", "signs_frequency", "items"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "signs_frequency": [["int", 0.27416953645599407], ["Optional[\"ShippingRateInputType\"]", 0.10328027317113539], ["str", 0.08509775491637565]]}, "q_name": "HuffmanCoding._create_tree", "ret_exprs": ["return nodes[0]"], "ret_type": "Node", "ret_type_p": [["int", 0.1889860212533193]], "variables": {"left": "", "new_node": "", "nodes": "", "right": ""}, "variables_p": {"left": [["int", 0.08772559829268346], ["list", 0.06828908810020147]], "new_node": [["list", 0.3663714091667302]], "nodes": [], "right": [["int", 0.08772559829268346], ["list", 0.06828908810020147]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[320, 4], [328, 95]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "_go_through_tree_and_create_codes", "params": {"code": "builtins.str", "dict_codes": "builtins.dict", "tree": "Node"}, "params_descr": {"code": "", "dict_codes": "", "tree": ""}, "params_occur": {"code": [["dict_codes", "tree", "sign", "code"], ["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "left", "code", "dict_codes"], ["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "right", "code", "dict_codes"]], "dict_codes": [["dict_codes", "tree", "sign", "code"], ["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "left", "code", "dict_codes"], ["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "right", "code", "dict_codes"]], "tree": [["tree", "sign", "None"], ["dict_codes", "tree", "sign", "code"], ["tree", "left"], ["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "left", "code", "dict_codes"], ["tree", "right"], ["HuffmanCoding", "_go_through_tree_and_create_codes", "tree", "right", "code", "dict_codes"]]}, "params_p": {"args": [], "code": [["str", 0.5932250659404827], ["int", 0.3025077627781586], ["List[str]", 0.10426717128135855]], "dict_codes": [["str", 0.5932250659404827], ["int", 0.3025077627781586], ["List[str]", 0.10426717128135855]], "kwargs": [], "self": [], "tree": [["str", 0.39391503869211386], ["Optional[float]", 0.1061553028190894], ["Optional[str]", 0.1061553028190894], ["int", 0.09403838954867436], ["Dict[bytes, int]", 0.09376231745086684]]}, "q_name": "HuffmanCoding._go_through_tree_and_create_codes", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "HuffmanCoding", "q_name": "HuffmanCoding", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["collections", "defaultdict", "deque", "heapq"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 17, "I": 0, "U": 111}, "session_id": "AP7KE2I7QlcwHPgxH5ng8Y6UaFmZGBQLKYixR1fgxzw", "set": null, "tc": [false, null], "type_annot_cove": 0.13, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}