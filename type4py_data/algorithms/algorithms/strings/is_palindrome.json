{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[17, 0], [32, 15]], "fn_var_ln": {"i": [[31, 8], [31, 9]], "j": [[31, 11], [31, 12]]}, "fn_var_occur": {"i": [["i", "j"], ["s", "i", "isalnum"], ["s", "i", "lower", "s", "j", "lower"], ["i", "j", "i", "j"]], "j": [["j", "len", "s"], ["i", "j"], ["s", "j", "isalnum"], ["s", "i", "lower", "s", "j", "lower"], ["i", "j", "i", "j"]]}, "name": "is_palindrome", "params": {"s": ""}, "params_descr": {"s": ""}, "params_occur": {"s": [["j", "len", "s"], ["s", "i", "isalnum"], ["s", "j", "isalnum"], ["s", "i", "lower", "s", "j", "lower"]]}, "params_p": {"args": [], "kwargs": [], "s": [["str", 0.7311461697093096], ["bytes", 0.0920221428682394], ["Union[str, bytes]", 0.09112223653659665]]}, "q_name": "is_palindrome", "ret_exprs": ["return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"i": "", "j": ""}, "variables_p": {"i": [["int", 0.7233383524279083], ["Dict[str, int]", 0.09749336157915547], ["list", 0.08665734889424168]], "j": [["int", 0.4737730867254957], ["List[Tuple[Any, Any]]", 0.14895406260533134], ["List[int]", 0.11991675652067985], ["float", 0.09275487400149204], ["Tuple[Literal, Literal, Literal]", 0.08379946203027841], ["Dict[str, str]", 0.0808017581167225]]}}, {"docstring": {"func": "Remove punctuation, case sensitivity and spaces", "long_descr": null, "ret": null}, "fn_lc": [[49, 0], [53, 62]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "remove_punctuation", "params": {"s": ""}, "params_descr": {"s": ""}, "params_occur": {"s": [["join", "i", "lower", "i", "s", "i", "ascii_letters"]]}, "params_p": {"args": [], "kwargs": [], "s": [["str", 0.5097934339882085], ["Optional[str]", 0.10828129359814383], ["bytes", 0.06571041572143953]]}, "q_name": "remove_punctuation", "ret_exprs": ["return \"\".join(i.lower() for i in s if i in ascii_letters)"], "ret_type": "", "ret_type_p": [["int", 0.28878473105614455], ["float", 0.11637703059067928], ["Tuple[int]", 0.10234300761837752], ["List[Tuple[int, str, str]]", 0.09918323558096562], ["str", 0.09762099189615334], ["List[str]", 0.09474252085156355]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[56, 0], [57, 15]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "string_reverse", "params": {"s": ""}, "params_descr": {"s": ""}, "params_occur": {"s": []}, "params_p": {"args": [], "kwargs": [], "s": [["str", 0.2629696737499351], ["List[str]", 0.2294647152559482], ["bytes", 0.12435691196232833], ["int", 0.09260742841549867]]}, "q_name": "string_reverse", "ret_exprs": ["return s[::-1]"], "ret_type": "", "ret_type_p": [["str", 0.8308964320660445], ["float", 0.08455178396697766]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[59, 0], [65, 13]], "fn_var_ln": {"s": [[60, 1], [60, 2]]}, "fn_var_occur": {"s": [["s", "remove_punctuation", "s"], ["s", "string_reverse", "s"]]}, "name": "is_palindrome_reverse", "params": {"s": ""}, "params_descr": {"s": ""}, "params_occur": {"s": [["s", "remove_punctuation", "s"], ["s", "string_reverse", "s"]]}, "params_p": {"args": [], "kwargs": [], "s": [["str", 0.36126730564439685]]}, "q_name": "is_palindrome_reverse", "ret_exprs": ["return True", "return False"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"s": ""}, "variables_p": {"s": [["str", 0.23445279289425836], ["List[float]", 0.18381190681927007], ["Set[int]", 0.0972816440200469], ["tuple", 0.09573430333307557], ["List[int]", 0.09343545699599196]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 0], [75, 15]], "fn_var_ln": {"s": [[70, 4], [70, 5]]}, "fn_var_occur": {"s": [["s", "remove_punctuation", "s"], ["range", "len", "s"], ["s", "i", "s", "len", "s", "i"]]}, "name": "is_palindrome_two_pointer", "params": {"s": ""}, "params_descr": {"s": ""}, "params_occur": {"s": [["s", "remove_punctuation", "s"], ["range", "len", "s"], ["s", "i", "s", "len", "s", "i"]]}, "params_p": {"args": [], "kwargs": [], "s": [["str", 0.7944844979345538], ["int", 0.15787880529608572]]}, "q_name": "is_palindrome_two_pointer", "ret_exprs": ["return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"s": ""}, "variables_p": {"s": [["str", 0.36614271488496486], ["List[str]", 0.18708158949455161], ["List[int]", 0.15235393344731762], ["bytes", 0.1346155198657798], ["int", 0.10734504213437579], ["dict", 0.05246120017301021]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[79, 0], [88, 15]], "fn_var_ln": {"s": [[81, 4], [81, 5]], "stack": [[80, 4], [80, 9]]}, "fn_var_occur": {"s": [["s", "remove_punctuation", "s"], ["range", "len", "s", "len", "s"], ["stack", "append", "s", "i"], ["range", "len", "s"], ["s", "i", "stack", "pop"]], "stack": [["stack", "append", "s", "i"], ["s", "i", "stack", "pop"]]}, "name": "is_palindrome_stack", "params": {"s": ""}, "params_descr": {"s": ""}, "params_occur": {"s": [["s", "remove_punctuation", "s"], ["range", "len", "s", "len", "s"], ["stack", "append", "s", "i"], ["range", "len", "s"], ["s", "i", "stack", "pop"]]}, "params_p": {"args": [], "kwargs": [], "s": [["str", 0.6206691311440471], ["int", 0.30271666875425485]]}, "q_name": "is_palindrome_stack", "ret_exprs": ["return False", "return True"], "ret_type": "", "ret_type_p": [["bool", 0.9999999999999999]], "variables": {"s": "", "stack": ""}, "variables_p": {"s": [["str", 0.5693690226272469], ["List[int]", 0.14434347206485926], ["int", 0.12762718570108822], ["list", 0.09433855474814731], ["dict", 0.06432176485865838]], "stack": [["list", 0.7164644527435631], ["List[str]", 0.19579862809068516], ["str", 0.08773691916575171]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[91, 0], [105, 16]], "fn_var_ln": {"deq": [[93, 4], [93, 7]], "equal": [[103, 12], [103, 17]], "first": [[100, 8], [100, 13]], "last": [[101, 8], [101, 12]], "s": [[92, 4], [92, 5]]}, "fn_var_occur": {"deq": [["deq", "deque"], ["deq", "appendleft", "char"], ["len", "deq", "equal"], ["first", "deq", "pop"], ["last", "deq", "popleft"]], "equal": [["equal", "True"], ["len", "deq", "equal"], ["equal", "False"]], "first": [["first", "deq", "pop"], ["first", "last"]], "last": [["last", "deq", "popleft"], ["first", "last"]], "s": [["s", "remove_punctuation", "s"]]}, "name": "is_palindrome_deque", "params": {"s": ""}, "params_descr": {"s": ""}, "params_occur": {"s": [["s", "remove_punctuation", "s"]]}, "params_p": {"args": [], "kwargs": [], "s": [["str", 0.4851290543894795], ["bool", 0.10908990307612451]]}, "q_name": "is_palindrome_deque", "ret_exprs": ["return equal"], "ret_type": "", "ret_type_p": [["str", 0.19999999999999998], ["int", 0.09999999999999999]], "variables": {"deq": "", "equal": "", "first": "", "last": "", "s": ""}, "variables_p": {"deq": [["List[int]", 0.2499999999889309], ["int", 0.2499999999784044], ["float", 1.4516805937966184e-11], ["Dict[str, Any]", 1.2901061395878476e-11]], "equal": [["List[int]", 0.4385545660221236], ["int", 0.1408924322506324], ["list", 0.09863313625291632], ["List[Union[Any, slice]]", 0.08363275778568978]], "first": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "last": [["list", 0.4999999999778898], ["List[bytes]", 0.1666666666592966], ["List[str]", 0.1666666666592966], ["int", 2.3380050415486263e-11], ["bool", 1.0353572658058895e-11]], "s": [["str", 0.2258741528743416], ["float", 0.17703529677207713], ["T", 0.1438068037248731], ["int", 0.10265972476734901]]}}], "imports": ["string", "ascii_letters", "collections", "deque"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 21}, "session_id": "jmO_d3gxQjih5B3F0L7cm_wsVQ_5Hmkn19jqTeJbVC0", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}