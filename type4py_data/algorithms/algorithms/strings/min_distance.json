{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Finds minimum distance by getting longest common subsequence", "long_descr": null, "ret": null}, "fn_lc": [[14, 0], [22, 82]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "min_distance", "params": {"word1": "", "word2": ""}, "params_descr": {"word1": "", "word2": ""}, "params_occur": {"word1": [["len", "word1", "len", "word2", "lcs", "word1", "word2", "len", "word1", "len", "word2"]], "word2": [["len", "word1", "len", "word2", "lcs", "word1", "word2", "len", "word1", "len", "word2"]]}, "params_p": {"args": [], "kwargs": [], "word1": [["str", 0.3092199004851472], ["Sequence[float]", 0.30374434922454563], ["List[float]", 0.11502702516536184], ["list", 0.10189479086461618], ["int", 0.08873290043986902], ["Dict[str, str]", 0.08138103382045993]], "word2": [["str", 0.3092199004851472], ["Sequence[float]", 0.30374434922454563], ["List[float]", 0.11502702516536184], ["list", 0.10189479086461618], ["int", 0.08873290043986902], ["Dict[str, str]", 0.08138103382045993]]}, "q_name": "min_distance", "ret_exprs": ["return len(word1) + len(word2) - 2 * lcs(word1, word2, len(word1), len(word2))"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "The length of longest common subsequence among the two given strings word1 and word2", "long_descr": null, "ret": null}, "fn_lc": [[24, 0], [32, 72]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "lcs", "params": {"i": "", "j": "", "word1": "", "word2": ""}, "params_descr": {"i": "", "j": "", "word1": "", "word2": ""}, "params_occur": {"i": [["i", "j"], ["word1", "i", "word2", "j"], ["lcs", "word1", "word2", "i", "j"], ["max", "lcs", "word1", "word2", "i", "j", "lcs", "word1", "word2", "i", "j"]], "j": [["i", "j"], ["word1", "i", "word2", "j"], ["lcs", "word1", "word2", "i", "j"], ["max", "lcs", "word1", "word2", "i", "j", "lcs", "word1", "word2", "i", "j"]], "word1": [["word1", "i", "word2", "j"], ["lcs", "word1", "word2", "i", "j"], ["max", "lcs", "word1", "word2", "i", "j", "lcs", "word1", "word2", "i", "j"]], "word2": [["word1", "i", "word2", "j"], ["lcs", "word1", "word2", "i", "j"], ["max", "lcs", "word1", "word2", "i", "j", "lcs", "word1", "word2", "i", "j"]]}, "params_p": {"args": [], "i": [["Optional[int]", 0.24580296973834515], ["int", 0.23463072419349873]], "j": [["Optional[int]", 0.24580296973834515], ["int", 0.23463072419349873]], "kwargs": [], "word1": [["float", 0.4180781088744211], ["bytes", 0.1118312320090968], ["bool", 0.0853113216622556]], "word2": [["float", 0.4180781088744211], ["bytes", 0.1118312320090968], ["bool", 0.0853113216622556]]}, "q_name": "lcs", "ret_exprs": ["return 0", "return 1 + lcs(word1, word2, i - 1, j - 1)", "return max(lcs(word1, word2, i - 1, j), lcs(word1, word2, i, j - 1))"], "ret_type": "", "ret_type_p": [["List[dict]", 0.14274961220715957], ["str", 0.09447170247369778], ["bytearray", 0.09075315675795785], ["int", 0.08759039628140068], ["bytes", 0.08370929471846261]], "variables": {}, "variables_p": {}}, {"docstring": {"func": "Finds minimum distance in a dynamic programming manner", "long_descr": "TC: O(length1*length2), SC: O(length1*length2)", "ret": null}, "fn_lc": [[34, 0], [62, 38]], "fn_var_ln": {"length1": [[43, 4], [43, 11]], "length2": [[43, 13], [43, 20]], "res": [[44, 4], [44, 7]]}, "fn_var_occur": {"length1": [["length1", "length2", "len", "word1", "len", "word2"], ["res", "_", "range", "length2", "_", "range", "length1"], ["length1", "length2"], ["range", "length1"], ["range", "length1"], ["range", "length1"]], "length2": [["length1", "length2", "len", "word1", "len", "word2"], ["res", "_", "range", "length2", "_", "range", "length1"], ["length1", "length2"], ["range", "length2"], ["range", "length2"]], "res": [["res", "_", "range", "length2", "_", "range", "length1"], ["res", "i", "res", "i", "i", "i"], ["res", "i", "i"], ["res", "i", "i"], ["res", "i", "j", "res", "i", "j"], ["res", "i", "j", "min", "res", "i", "j", "res", "i", "j"], ["res", "len", "word1", "len", "word2"]]}, "name": "min_distance_dp", "params": {"word1": "", "word2": ""}, "params_descr": {"word1": "", "word2": ""}, "params_occur": {"word1": [["length1", "length2", "len", "word1", "len", "word2"], ["word1", "i", "word2", "j"], ["res", "len", "word1", "len", "word2"]], "word2": [["length1", "length2", "len", "word1", "len", "word2"], ["word1", "i", "word2", "j"], ["res", "len", "word1", "len", "word2"]]}, "params_p": {"args": [], "kwargs": [], "word1": [["list", 0.3480562442193784], ["List[List[str]]", 0.2841865595212885], ["List[int]", 0.18602169944744298], ["str", 0.18173549681189]], "word2": [["list", 0.3480562442193784], ["List[List[str]]", 0.2841865595212885], ["List[int]", 0.18602169944744298], ["str", 0.18173549681189]]}, "q_name": "min_distance_dp", "ret_exprs": ["return res[len(word1)][len(word2)]"], "ret_type": "", "ret_type_p": [["List[int]", 0.18484792514470838], ["Iterable[str]", 0.10591950277114666], ["Iterable[T]", 0.09939167428097595], ["int", 0.09216146907175131]], "variables": {"length1": "", "length2": "", "res": ""}, "variables_p": {"length1": [["int", 0.8100206062765832], ["Counter[int]", 0.0984428078364163], ["Tuple[float, float]", 0.09153658588700059]], "length2": [["int", 0.8164611566427653], ["Counter[int]", 0.09515310501594204], ["Tuple[float, float]", 0.08838573834129257]], "res": [["int", 0.6881647231468233], ["tuple", 0.11186934727987369], ["str", 0.10176811473152136], ["Pattern[str]", 0.09819781484178176]]}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 14}, "session_id": "E3LMtAk0i0b6shqU33NfLJnm6L5leh2GRbQ2Qd6tTOI", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}