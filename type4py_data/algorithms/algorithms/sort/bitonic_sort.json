{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[12, 4], [17, 18]], "fn_var_ln": {"n": [[13, 8], [13, 9]]}, "fn_var_occur": {"n": [["n", "len", "arr"], ["range", "n"], ["reverse", "arr", "i", "arr", "i", "n"], ["arr", "i", "arr", "i", "n", "arr", "i", "n", "arr", "i"]]}, "name": "compare", "params": {"arr": "", "reverse": ""}, "params_descr": {"arr": "", "reverse": ""}, "params_occur": {"arr": [["n", "len", "arr"], ["reverse", "arr", "i", "arr", "i", "n"], ["arr", "i", "arr", "i", "n", "arr", "i", "n", "arr", "i"]], "reverse": [["reverse", "arr", "i", "arr", "i", "n"]]}, "params_p": {"args": [], "arr": [["List[int]", 0.43248335946126654], ["list", 0.2954406892255345], ["List[float]", 0.09800238495402692], ["List[List[int]]", 0.08976936445915425], ["Optional[Union[str, Any, Any, Any]]", 0.0843042019000178]], "kwargs": [], "reverse": [["str", 0.19999999999999998], ["int", 0.09999999999999999]]}, "q_name": "bitonic_sort.<locals>.compare", "ret_exprs": ["return arr"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"n": ""}, "variables_p": {"n": [["int", 1.0]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[19, 4], [28, 27]], "fn_var_ln": {"arr": [[25, 8], [25, 11]], "left": [[26, 8], [26, 12]], "n": [[20, 8], [20, 9]], "right": [[27, 8], [27, 13]]}, "fn_var_occur": {"arr": [["n", "len", "arr"], ["arr", "compare", "arr", "reverse"], ["left", "bitonic_merge", "arr", "n", "reverse"], ["right", "bitonic_merge", "arr", "n", "reverse"]], "left": [["left", "bitonic_merge", "arr", "n", "reverse"], ["left", "right"]], "n": [["n", "len", "arr"], ["left", "bitonic_merge", "arr", "n", "reverse"], ["right", "bitonic_merge", "arr", "n", "reverse"]], "right": [["right", "bitonic_merge", "arr", "n", "reverse"], ["left", "right"]]}, "name": "bitonic_merge", "params": {"arr": "", "reverse": ""}, "params_descr": {"arr": "", "reverse": ""}, "params_occur": {"arr": [["n", "len", "arr"], ["arr", "compare", "arr", "reverse"], ["left", "bitonic_merge", "arr", "n", "reverse"], ["right", "bitonic_merge", "arr", "n", "reverse"]], "reverse": [["arr", "compare", "arr", "reverse"], ["left", "bitonic_merge", "arr", "n", "reverse"], ["right", "bitonic_merge", "arr", "n", "reverse"]]}, "params_p": {"args": [], "arr": [["int", 0.30000000000000004], ["bool", 0.1]], "kwargs": [], "reverse": [["bool", 0.10903429141105343], ["str", 0.07777481362641903]]}, "q_name": "bitonic_sort.<locals>.bitonic_merge", "ret_exprs": ["return arr", "return left + right"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"arr": "", "left": "", "n": "", "right": ""}, "variables_p": {"arr": [["list", 0.35214006880540305], ["int", 0.1802363588601747], ["str", 0.11725486647625677], ["Type[range]", 0.071417804016789]], "left": [["int", 0.6005775739073459], ["float", 0.10262541342941696], ["Dict[int, int]", 0.09184756489592862], ["dict", 0.09042722641717213]], "n": [["int", 0.9225067474001335], ["list", 0.07749325259986631]], "right": [["int", 0.6005775739073459], ["float", 0.10262541342941696], ["Dict[int, int]", 0.09184756489592862], ["dict", 0.09042722641717213]]}}, {"docstring": {"func": "bitonic sort is sorting algorithm to use multiple process, but this code not containing parallel process", "long_descr": "It can sort only array that sizes power of 2\nIt can sort array in both increasing order and decreasing order by giving argument true(increasing) and false(decreasing)\n\nWorst-case in parallel: O(log(n)^2)\nWorst-case in non-parallel: O(nlog(n)^2)\n\nreference: https://en.wikipedia.org/wiki/Bitonic_sorter", "ret": null}, "fn_lc": [[1, 0], [43, 14]], "fn_var_ln": {"arr": [[41, 4], [41, 7]], "left": [[38, 4], [38, 8]], "n": [[31, 4], [31, 5]], "right": [[39, 4], [39, 9]]}, "fn_var_occur": {"arr": [["n", "len", "arr"], ["left", "bitonic_sort", "arr", "n", "True"], ["right", "bitonic_sort", "arr", "n", "False"], ["arr", "bitonic_merge", "left", "right", "reverse"]], "left": [["left", "bitonic_sort", "arr", "n", "True"], ["arr", "bitonic_merge", "left", "right", "reverse"]], "n": [["n", "len", "arr"], ["n", "n", "n"], ["left", "bitonic_sort", "arr", "n", "True"], ["right", "bitonic_sort", "arr", "n", "False"]], "right": [["right", "bitonic_sort", "arr", "n", "False"], ["arr", "bitonic_merge", "left", "right", "reverse"]]}, "name": "bitonic_sort", "params": {"arr": "", "reverse": ""}, "params_descr": {"arr": "", "reverse": ""}, "params_occur": {"arr": [["n", "len", "arr"], ["left", "bitonic_sort", "arr", "n", "True"], ["right", "bitonic_sort", "arr", "n", "False"], ["arr", "bitonic_merge", "left", "right", "reverse"]], "reverse": [["arr", "bitonic_merge", "left", "right", "reverse"]]}, "params_p": {"args": [], "arr": [["int", 0.3], ["bool", 0.09999999999999999]], "kwargs": [], "reverse": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]]}, "q_name": "bitonic_sort", "ret_exprs": ["return arr", "return arr"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"arr": "", "left": "", "n": "", "right": ""}, "variables_p": {"arr": [["list", 0.5219972916669764], ["int", 0.19295379873654964], ["Tuple[int, int]", 0.10905536939599428]], "left": [["List[Tuple[int, Any]]", 0.20939667257880165], ["str", 0.10923241151501142], ["List[str]", 0.09674075380337578], ["Union[Literal, Literal]", 0.09553447709038475], ["bytearray", 0.09182437289899549], ["bytes", 0.09182437289899549], ["Callable", 0.09177577683385348]], "n": [["int", 0.5007325814717217], ["List[int]", 0.4992674185282781]], "right": [["dict", 0.10990806405818562], ["str", 0.09976104227501038], ["Pattern[str]", 0.0880390272166626]]}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 16}, "session_id": "RTtb_hiBF_iinwLrboHOxxKOlpSDlw64VAIhNfNoSW4", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}