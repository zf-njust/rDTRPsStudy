{"error": null, "response": {"classes": [{"cls_lc": [[35, 0], [59, 19]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Pass.", "long_descr": null, "ret": null}, "fn_lc": [[38, 4], [39, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AbstractHeap.__init__", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Pass.", "long_descr": null, "ret": null}, "fn_lc": [[42, 4], [43, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "perc_up", "params": {"i": "", "self": ""}, "params_descr": {"i": "", "self": ""}, "params_occur": {"i": [], "self": []}, "params_p": {"args": [], "i": [["int", 0.5], ["slice", 0.2], ["T", 0.1], ["Optional[bool]", 0.1], ["bool", 0.1]], "kwargs": [], "self": []}, "q_name": "AbstractHeap.perc_up", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Pass.", "long_descr": null, "ret": null}, "fn_lc": [[46, 4], [47, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "insert", "params": {"self": "", "val": ""}, "params_descr": {"self": "", "val": ""}, "params_occur": {"self": [], "val": []}, "params_p": {"args": [], "kwargs": [], "self": [], "val": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]]}, "q_name": "AbstractHeap.insert", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Pass.", "long_descr": null, "ret": null}, "fn_lc": [[50, 4], [51, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "perc_down", "params": {"i": "", "self": ""}, "params_descr": {"i": "", "self": ""}, "params_occur": {"i": [], "self": []}, "params_p": {"args": [], "i": [["int", 0.5], ["slice", 0.2], ["T", 0.1], ["Optional[bool]", 0.1], ["bool", 0.1]], "kwargs": [], "self": []}, "q_name": "AbstractHeap.perc_down", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Pass.", "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [55, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "min_child", "params": {"i": "", "self": ""}, "params_descr": {"i": "", "self": ""}, "params_occur": {"i": [], "self": []}, "params_p": {"args": [], "i": [["int", 0.5], ["slice", 0.2], ["T", 0.1], ["Optional[bool]", 0.1], ["bool", 0.1]], "kwargs": [], "self": []}, "q_name": "AbstractHeap.min_child", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Pass.", "long_descr": null, "ret": null}, "fn_lc": [[58, 4], [59, 19]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "remove_min", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": []}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "AbstractHeap.remove_min", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}], "name": "AbstractHeap", "q_name": "AbstractHeap", "variables": {}, "variables_p": {}}, {"cls_lc": [[62, 0], [122, 18]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [67, 25]], "fn_var_ln": {"current_size": [[66, 8], [66, 25]], "heap": [[67, 8], [67, 17]]}, "fn_var_occur": {"current_size": [["self", "current_size"]], "heap": [["self", "heap"]]}, "name": "__init__", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["self", "current_size"], ["self", "heap"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BinaryHeap.__init__", "ret_exprs": [], "ret_type": "", "variables": {"current_size": "", "heap": ""}, "variables_p": {"current_size": [["int", 0.7071901737172868], ["float", 0.10033816613341556]], "heap": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[69, 4], [74, 22]], "fn_var_ln": {"i": [[74, 12], [74, 13]]}, "fn_var_occur": {"i": [["self", "heap", "i", "self", "heap", "i"], ["self", "heap", "i", "self", "heap", "i", "self", "heap", "i", "self", "heap", "i"], ["i", "i"]]}, "name": "perc_up", "params": {"i": "", "self": ""}, "params_descr": {"i": "", "self": ""}, "params_occur": {"i": [["self", "heap", "i", "self", "heap", "i"], ["self", "heap", "i", "self", "heap", "i", "self", "heap", "i", "self", "heap", "i"], ["i", "i"]], "self": [["self", "heap", "i", "self", "heap", "i"], ["self", "heap", "i", "self", "heap", "i", "self", "heap", "i", "self", "heap", "i"]]}, "params_p": {"args": [], "i": [["Optional[int]", 0.34713382035365337], ["int", 0.27763948735726157]], "kwargs": [], "self": []}, "q_name": "BinaryHeap.perc_up", "ret_exprs": [], "ret_type": "", "variables": {"i": ""}, "variables_p": {"i": [["int", 0.8944242502037572], ["List[List[int]]", 0.10557574979624271]]}}, {"docstring": {"func": "Method insert always start by inserting the element at the bottom.", "long_descr": "It inserts rightmost spot so as to maintain the complete tree property.\nThen, it fixes the tree by swapping the new element with its parent,\nuntil it finds an appropriate spot for the element. It essentially\nperc_up the minimum element\nComplexity: O(logN)", "ret": null}, "fn_lc": [[76, 4], [91, 11]], "fn_var_ln": {"current_size": [[86, 8], [86, 25]]}, "fn_var_occur": {"current_size": [["self", "current_size", "self", "current_size"], ["self", "perc_up", "self", "current_size"]]}, "name": "insert", "params": {"self": "", "val": ""}, "params_descr": {"self": "", "val": ""}, "params_occur": {"self": [["self", "heap", "append", "val"], ["self", "current_size", "self", "current_size"], ["self", "perc_up", "self", "current_size"]], "val": [["self", "heap", "append", "val"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "val": [["int", 0.1], ["str", 0.1], ["T", 0.1]]}, "q_name": "BinaryHeap.insert", "ret_exprs": [], "ret_type": "", "variables": {"current_size": ""}, "variables_p": {"current_size": [["int", 0.8885197958898279], ["Final", 0.11148020411017222]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[93, 4], [98, 20]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "min_child", "params": {"i": "", "self": ""}, "params_descr": {"i": "", "self": ""}, "params_occur": {"i": [["i", "self", "current_size"], ["self", "heap", "i", "self", "heap", "i"]], "self": [["i", "self", "current_size"], ["self", "heap", "i", "self", "heap", "i"]]}, "params_p": {"args": [], "i": [["int", 0.9109000404417593], ["str", 0.08909995955824056]], "kwargs": [], "self": []}, "q_name": "BinaryHeap.min_child", "ret_exprs": ["return 2 * i", "return 2 * i + 1", "return 2 * i"], "ret_type": "", "ret_type_p": [["int", 0.31879970392156437], ["List[int]", 0.20156708769620973], ["float", 0.10968575546163323], ["bool", 0.08264599222346798]], "variables": {}, "variables_p": {}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[100, 4], [106, 25]], "fn_var_ln": {"i": [[106, 12], [106, 13]], "min_child": [[102, 12], [102, 21]]}, "fn_var_occur": {"i": [["i", "self", "current_size"], ["min_child", "self", "min_child", "i"], ["self", "heap", "min_child", "self", "heap", "i"], ["self", "heap", "min_child", "self", "heap", "i", "self", "heap", "i", "self", "heap", "min_child"], ["i", "min_child"]], "min_child": [["min_child", "self", "min_child", "i"], ["self", "heap", "min_child", "self", "heap", "i"], ["self", "heap", "min_child", "self", "heap", "i", "self", "heap", "i", "self", "heap", "min_child"], ["i", "min_child"]]}, "name": "perc_down", "params": {"i": "", "self": ""}, "params_descr": {"i": "", "self": ""}, "params_occur": {"i": [["i", "self", "current_size"], ["min_child", "self", "min_child", "i"], ["self", "heap", "min_child", "self", "heap", "i"], ["self", "heap", "min_child", "self", "heap", "i", "self", "heap", "i", "self", "heap", "min_child"], ["i", "min_child"]], "self": [["i", "self", "current_size"], ["min_child", "self", "min_child", "i"], ["self", "heap", "min_child", "self", "heap", "i"], ["self", "heap", "min_child", "self", "heap", "i", "self", "heap", "i", "self", "heap", "min_child"]]}, "params_p": {"args": [], "i": [["int", 1.0]], "kwargs": [], "self": []}, "q_name": "BinaryHeap.perc_down", "ret_exprs": [], "ret_type": "", "variables": {"i": "", "min_child": ""}, "variables_p": {"i": [["int", 0.9084585843367867]], "min_child": [["int", 0.2321644468748052], ["bool", 0.17769146731795885], ["float", 0.11095825565625853], ["str", 0.10392470537058283], ["dict", 0.08005892980722779]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[115, 4], [122, 18]], "fn_var_ln": {"current_size": [[119, 8], [119, 25]], "ret": [[116, 8], [116, 11]]}, "fn_var_occur": {"current_size": [["self", "heap", "self", "heap", "self", "current_size"], ["self", "current_size", "self", "current_size"]], "ret": [["ret", "self", "heap"]]}, "name": "remove_min", "params": {"self": ""}, "params_descr": {"self": ""}, "params_occur": {"self": [["ret", "self", "heap"], ["self", "heap", "self", "heap", "self", "current_size"], ["self", "current_size", "self", "current_size"], ["self", "heap", "pop"], ["self", "perc_down"]]}, "params_p": {"args": [], "kwargs": [], "self": []}, "q_name": "BinaryHeap.remove_min", "ret_exprs": ["return ret"], "ret_type": "", "ret_type_p": [["bool", 0.2395657390539261], ["List[str]", 0.23338568586490194], ["Set[str]", 0.16051642331466923], ["Dict[str, Any]", 0.08608815791117343], ["str", 0.08416976611412513]], "variables": {"current_size": "", "ret": ""}, "variables_p": {"current_size": [["int", 0.7558543821066589], ["str", 0.07909337768103104]], "ret": [["int", 0.7214910584105596], ["List[int]", 0.1029153049698144], ["Dict[int, str]", 0.08792731545670145], ["Final", 0.08766632116292439]]}}], "name": "BinaryHeap", "q_name": "BinaryHeap", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["abc", "ABCMeta", "abstractmethod"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 26}, "session_id": "VTUerI8Ky4COxMXI_6OkU2jwXjN6h-PIsLxLuIGYTW0", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}