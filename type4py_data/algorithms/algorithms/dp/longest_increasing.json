{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Dynamic Programming Algorithm for", "long_descr": "counting the length of longest increasing subsequence\ntype sequence: list[int]\nrtype: int", "ret": null}, "fn_lc": [[24, 0], [38, 22]], "fn_var_ln": {"counts": [[32, 4], [32, 10]], "length": [[31, 4], [31, 10]]}, "fn_var_occur": {"counts": [["counts", "_", "range", "length"], ["counts", "i", "max", "counts", "i", "counts", "j"], ["print", "counts"], ["max", "counts"]], "length": [["length", "len", "sequence"], ["counts", "_", "range", "length"], ["range", "length"]]}, "name": "longest_increasing_subsequence", "params": {"sequence": ""}, "params_descr": {"sequence": ""}, "params_occur": {"sequence": [["length", "len", "sequence"], ["sequence", "i", "sequence", "j"]]}, "params_p": {"args": [], "kwargs": [], "sequence": [["str", 0.9999999999524235]]}, "q_name": "longest_increasing_subsequence", "ret_exprs": ["return max(counts)"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"counts": "", "length": ""}, "variables_p": {"counts": [["int", 0.43304535601944505], ["Type[tuple]", 0.10581360846168353], ["str", 0.09948413582050737], ["float", 0.09600101496139518], ["Tuple[Literal, Literal, Literal, Literal, Literal, Literal, Literal, Literal]", 0.08759639307626067]], "length": [["int", 0.6965066208026276], ["Tuple[float, float]", 0.12486197385467007], ["List[Tuple[str, str]]", 0.09033833477952787]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[54, 4], [63, 59]], "fn_var_ln": {"mid": [[58, 8], [58, 11]]}, "fn_var_occur": {"mid": [["mid", "left", "right"], ["target", "mid"], ["update", "pos", "left", "mid", "target", "vertex"], ["update", "pos", "mid", "right", "target", "vertex"]]}, "name": "update", "params": {"left": "", "pos": "", "right": "", "target": "", "vertex": ""}, "params_descr": {"left": "", "pos": "", "right": "", "target": "", "vertex": ""}, "params_occur": {"left": [["left", "right"], ["mid", "left", "right"], ["update", "pos", "left", "mid", "target", "vertex"]], "pos": [["tree", "pos", "vertex"], ["update", "pos", "left", "mid", "target", "vertex"], ["update", "pos", "mid", "right", "target", "vertex"], ["tree", "pos", "max_seq", "tree", "pos", "tree", "pos"]], "right": [["left", "right"], ["mid", "left", "right"], ["update", "pos", "mid", "right", "target", "vertex"]], "target": [["target", "mid"], ["update", "pos", "left", "mid", "target", "vertex"], ["update", "pos", "mid", "right", "target", "vertex"]], "vertex": [["tree", "pos", "vertex"], ["update", "pos", "left", "mid", "target", "vertex"], ["update", "pos", "mid", "right", "target", "vertex"]]}, "params_p": {"args": [], "kwargs": [], "left": [["List[str]", 0.2165568238571997], ["int", 0.18473410597098847], ["Optional[str]", 0.11867707037555324]], "pos": [["Dict[str, Any]", 0.2834716097057073], ["Optional[dict]", 0.09489060626624517]], "right": [["List[str]", 0.2165568238571997], ["int", 0.18473410597098847], ["Optional[str]", 0.11867707037555324]], "target": [["dict", 0.5284517315110412], ["Dict[str, Any]", 0.3699521157125454], ["Optional[Dict[str, Any]]", 0.10159615277641339]], "vertex": [["Dict[str, Any]", 0.4711071952387002]]}, "q_name": "longest_increasing_subsequence_optimized.<locals>.update", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.18922182643132657], ["Set[str]", 0.09806214350278977], ["DefaultDict", 0.08606284428682971]], "variables": {"mid": ""}, "variables_p": {"mid": [["dict", 0.18818428602668086], ["Counter", 0.08789515166231242], ["DefaultDict[Any, Optional[float]]", 0.07719370866177386]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[65, 4], [72, 58]], "fn_var_ln": {"mid": [[70, 8], [70, 11]]}, "fn_var_occur": {"mid": [["mid", "left", "right"], ["max_seq", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]]}, "name": "get_max", "params": {"end": "", "left": "", "pos": "", "right": "", "start": ""}, "params_descr": {"end": "", "left": "", "pos": "", "right": "", "start": ""}, "params_occur": {"end": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["max_seq", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "left": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["mid", "left", "right"], ["max_seq", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "pos": [["tree", "pos"], ["max_seq", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "right": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["mid", "left", "right"], ["max_seq", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "start": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["max_seq", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]]}, "params_p": {"args": [], "end": [["int", 0.678673273714157], ["float", 0.0897499019000833]], "kwargs": [], "left": [["int", 0.48976493362758305], ["str", 0.10291603139184578], ["float", 0.10031493068937834]], "pos": [["int", 0.32248442196099775], ["str", 0.09912818764688774], ["Optional[int]", 0.09763880645389164]], "right": [["int", 0.48976493362758305], ["str", 0.10291603139184578], ["float", 0.10031493068937834]], "start": [["int", 0.678673273714157], ["float", 0.0897499019000833]]}, "q_name": "longest_increasing_subsequence_optimized.<locals>.get_max", "ret_exprs": ["return 0", "return tree[pos]", "return max_seq(get_max(pos<<1, left, mid, start, end), get_max((pos<<1)|1, mid+1, right, start, end))"], "ret_type": "", "ret_type_p": [["float", 0.2286381619865171]], "variables": {"mid": ""}, "variables_p": {"mid": [["Tuple[str, str, str, str]", 0.10481273453549822]]}}, {"docstring": {"func": "Optimized dynamic programming algorithm for", "long_descr": "couting the length of the longest increasing subsequence\nusing segment tree data structure to achieve better complexity\nif max element is larger than 10^5 then use\nlongest_increasing_subsequence_optimied2() instead\ntype sequence: list[int]\nrtype: int", "ret": null}, "fn_lc": [[41, 0], [78, 14]], "fn_var_ln": {"ans": [[76, 8], [76, 11]], "cur": [[75, 8], [75, 11]], "max_seq": [[51, 4], [51, 11]], "tree": [[52, 4], [52, 8]]}, "fn_var_occur": {"ans": [["ans", "max_seq", "ans", "cur"]], "cur": [["cur", "get_max", "max_seq", "element"], ["ans", "max_seq", "ans", "cur"], ["update", "max_seq", "element", "cur"]], "max_seq": [["cur", "get_max", "max_seq", "element"], ["ans", "max_seq", "ans", "cur"], ["update", "max_seq", "element", "cur"]], "tree": []}, "name": "longest_increasing_subsequence_optimized", "params": {"sequence": ""}, "params_descr": {"sequence": ""}, "params_occur": {"sequence": []}, "params_p": {"args": [], "kwargs": [], "sequence": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]]}, "q_name": "longest_increasing_subsequence_optimized", "ret_exprs": ["return ans"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"ans": "", "cur": "", "max_seq": "", "tree": ""}, "variables_p": {"ans": [["int", 0.8700296607707774], ["List[str]", 0.12997033922922258]], "cur": [["int", 0.6767538251583854], ["Optional[str]", 0.12940556906222403]], "max_seq": [["int", 0.6767538251583854], ["Optional[str]", 0.12940556906222403]], "tree": [["str", 0.3], ["int", 0.19999999999999998], ["property", 0.09999999999999999], ["Tuple[str, List[str], List[str]]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999], ["list", 0.09999999999999999]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[92, 4], [101, 55]], "fn_var_ln": {"mid": [[96, 8], [96, 11]]}, "fn_var_occur": {"mid": [["mid", "left", "right"], ["target", "mid"], ["vertex", "pos", "left", "mid", "target", "vertex"], ["vertex", "pos", "mid", "right", "target", "vertex"]]}, "name": "update", "params": {"left": "", "pos": "", "right": "", "target": "", "vertex": ""}, "params_descr": {"left": "", "pos": "", "right": "", "target": "", "vertex": ""}, "params_occur": {"left": [["left", "right"], ["mid", "left", "right"], ["vertex", "pos", "left", "mid", "target", "vertex"]], "pos": [["tree", "pos", "vertex"], ["vertex", "pos", "left", "mid", "target", "vertex"], ["vertex", "pos", "mid", "right", "target", "vertex"], ["tree", "pos", "max", "tree", "pos", "tree", "pos"]], "right": [["left", "right"], ["mid", "left", "right"], ["vertex", "pos", "mid", "right", "target", "vertex"]], "target": [["target", "mid"], ["vertex", "pos", "left", "mid", "target", "vertex"], ["vertex", "pos", "mid", "right", "target", "vertex"]], "vertex": [["tree", "pos", "vertex"], ["vertex", "pos", "left", "mid", "target", "vertex"], ["vertex", "pos", "mid", "right", "target", "vertex"]]}, "params_p": {"args": [], "kwargs": [], "left": [["str", 0.0969980057803261], ["int", 0.09117126404598626]], "pos": [["str", 0.27716446627414626]], "right": [["str", 0.0969980057803261], ["int", 0.09117126404598626]], "target": [["str", 0.18535131053383674], ["int", 0.09829398182750546]], "vertex": [["str", 0.27716446627414626]]}, "q_name": "longest_increasing_subsequence_optimized2.<locals>.update", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["str", 0.18922182643132657], ["Set[str]", 0.09806214350278977], ["DefaultDict", 0.08606284428682971]], "variables": {"mid": ""}, "variables_p": {"mid": [["List[Tuple[str, str]]", 0.10839865348982676], ["Union[int, str]", 0.09478878025469618]]}}, {"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[103, 4], [110, 58]], "fn_var_ln": {"mid": [[108, 8], [108, 11]]}, "fn_var_occur": {"mid": [["mid", "left", "right"], ["max", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]]}, "name": "get_max", "params": {"end": "", "left": "", "pos": "", "right": "", "start": ""}, "params_descr": {"end": "", "left": "", "pos": "", "right": "", "start": ""}, "params_occur": {"end": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["max", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "left": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["mid", "left", "right"], ["max", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "pos": [["tree", "pos"], ["max", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "right": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["mid", "left", "right"], ["max", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]], "start": [["left", "end", "right", "start"], ["left", "start", "right", "end"], ["max", "get_max", "pos", "left", "mid", "start", "end", "get_max", "pos", "mid", "right", "start", "end"]]}, "params_p": {"args": [], "end": [["int", 0.30332957286095547], ["bool", 0.09843627842566782]], "kwargs": [], "left": [["int", 0.5294077130876397], ["bool", 0.125185198186787]], "pos": [["str", 0.3119191852309289], ["int", 0.20731536462560535], ["Optional[str]", 0.19755839040739565], ["Optional[bool]", 0.09384500553900398]], "right": [["int", 0.5294077130876397], ["bool", 0.125185198186787]], "start": [["int", 0.30332957286095547], ["bool", 0.09843627842566782]]}, "q_name": "longest_increasing_subsequence_optimized2.<locals>.get_max", "ret_exprs": ["return 0", "return tree[pos]", "return max(get_max(pos<<1, left, mid, start, end), get_max((pos<<1)|1, mid+1, right, start, end))"], "ret_type": "", "ret_type_p": [["str", 0.19695130134838135], ["Optional[Callable]", 0.12349933977316087], ["Optional[str]", 0.08452461130225658]], "variables": {"mid": ""}, "variables_p": {"mid": [["Dict[str, Dict[str, Any]]", 0.10254193059469817], ["int", 0.09674267232282865]]}}, {"docstring": {"func": "Optimized dynamic programming algorithm for", "long_descr": "counting the length of the longest increasing subsequence\nusing segment tree data structure to achieve better complexity\ntype sequence: list[int]\nrtype: int", "ret": null}, "fn_lc": [[81, 0], [117, 14]], "fn_var_ln": {"ans": [[115, 8], [115, 11]], "cur": [[114, 8], [114, 11]], "i": [[113, 8], [113, 9]], "length": [[89, 4], [89, 10]], "sorted_seq": [[91, 4], [91, 14]], "tree": [[90, 4], [90, 8]]}, "fn_var_occur": {"ans": [["ans", "max", "ans", "cur"]], "cur": [["cur", "get_max", "length", "i"], ["ans", "max", "ans", "cur"], ["update", "length", "i", "cur"]], "i": [["i", "tup"], ["cur", "get_max", "length", "i"], ["update", "length", "i", "cur"]], "length": [["cur", "get_max", "length", "i"], ["update", "length", "i", "cur"]], "sorted_seq": [], "tree": []}, "name": "longest_increasing_subsequence_optimized2", "params": {"sequence": ""}, "params_descr": {"sequence": ""}, "params_occur": {"sequence": []}, "params_p": {"args": [], "kwargs": [], "sequence": [["int", 0.19999999999999998], ["str", 0.19999999999999998], ["Iterable['Context']", 0.09999999999999999], ["dict", 0.09999999999999999], ["bool", 0.09999999999999999]]}, "q_name": "longest_increasing_subsequence_optimized2", "ret_exprs": ["return ans"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"ans": "", "cur": "", "i": "", "length": "", "sorted_seq": "", "tree": ""}, "variables_p": {"ans": [["int", 0.33333333329375947], ["bool", 0.33333333329375947], ["frozenset[str]", 5.600442973614411e-11], ["bytes", 2.843706794522162e-11], ["bytearray", 2.0550007662476503e-11]], "cur": [["float", 0.20115994972647844], ["int", 0.10767529467076728], ["property", 0.09300900118225697]], "i": [["int", 0.5872394716015434], ["float", 0.20577440773138192]], "length": [["Collection[int]", 0.20765971047492607], ["Dict[int, Any]", 0.19388837242812776], ["float", 0.12992735969938735], ["list", 0.10360698489018953], ["dict", 0.09447410174132255], ["int", 0.09232140974155863]], "sorted_seq": [["str", 0.4], ["List[str]", 0.1], ["int", 0.1], ["Dict[str, List[Any]]", 0.1], ["Tuple[str, str, str, str, str, str, str, str]", 0.1]], "tree": [["str", 0.3], ["int", 0.19999999999999998], ["property", 0.09999999999999999], ["Tuple[str, List[str], List[str]]", 0.09999999999999999], ["Dict[str, Any]", 0.09999999999999999], ["list", 0.09999999999999999]]}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 32}, "session_id": "f-EbXsWasw0AT87MmaCcx1knZCBfp61_KkW3TFqIrio", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}