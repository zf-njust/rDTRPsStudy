{"error": null, "response": {"classes": [{"cls_lc": [[8, 0], [51, 28]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[13, 4], [16, 29]], "fn_var_ln": {"graph": [[15, 8], [15, 18]], "has_path": [[16, 8], [16, 21]], "vertex_count": [[14, 8], [14, 25]]}, "fn_var_occur": {"graph": [["self", "graph", "defaultdict", "list"]], "has_path": [["self", "has_path", "False"]], "vertex_count": [["self", "vertex_count", "vertex_count"]]}, "name": "__init__", "params": {"self": "", "vertex_count": ""}, "params_descr": {"self": "", "vertex_count": ""}, "params_occur": {"self": [["self", "vertex_count", "vertex_count"], ["self", "graph", "defaultdict", "list"], ["self", "has_path", "False"]], "vertex_count": [["self", "vertex_count", "vertex_count"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "vertex_count": [["int", 0.4377455064339952]]}, "q_name": "Graph.__init__", "ret_exprs": [], "ret_type": "", "variables": {"graph": "", "has_path": "", "vertex_count": ""}, "variables_p": {"graph": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]], "has_path": [["Optional[str]", 0.8539698092731528], ["Optional[BinaryIO]", 0.14603019072684725]], "vertex_count": [["int", 0.4999999999866716], ["float", 8.833344351932265e-12], ["Set[str]", 5.381212320047802e-12], ["Callable[[Any], tuple]", 4.353879314451742e-12]]}}, {"docstring": {"func": "Add a new directed edge to the graph", "long_descr": null, "ret": null}, "fn_lc": [[18, 4], [22, 41]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_edge", "params": {"self": "", "source": "", "target": ""}, "params_descr": {"self": "", "source": "", "target": ""}, "params_occur": {"self": [["self", "graph", "source", "append", "target"]], "source": [["self", "graph", "source", "append", "target"]], "target": [["self", "graph", "source", "append", "target"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "source": [["List[str]", 0.08407656041895196], ["Dict[str, Any]", 0.07639229510408772]], "target": [["List[str]", 0.08407656041895196], ["Dict[str, Any]", 0.07639229510408772]]}, "q_name": "Graph.add_edge", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Determine if there is a path from source to target using a depth first search", "long_descr": null, "ret": null}, "fn_lc": [[24, 4], [29, 44]], "fn_var_ln": {"visited": [[28, 8], [28, 15]]}, "fn_var_occur": {"visited": [["visited", "False", "self", "vertex_count"], ["self", "dfsutil", "visited", "source", "target"]]}, "name": "dfs", "params": {"self": "", "source": "", "target": ""}, "params_descr": {"self": "", "source": "", "target": ""}, "params_occur": {"self": [["visited", "False", "self", "vertex_count"], ["self", "dfsutil", "visited", "source", "target"]], "source": [["self", "dfsutil", "visited", "source", "target"]], "target": [["self", "dfsutil", "visited", "source", "target"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "source": [["str", 1.0]], "target": [["str", 1.0]]}, "q_name": "Graph.dfs", "ret_exprs": [], "ret_type": "", "variables": {"visited": ""}, "variables_p": {"visited": [["List[bool]", 0.6645674942504498], ["int", 0.2601479028146719]]}}, {"docstring": {"func": "Determine if there is a path from source to target using a depth first search.", "long_descr": ":param: visited should be an array of booleans determining if the\ncorresponding vertex has been visited already", "ret": null}, "fn_lc": [[31, 4], [43, 46]], "fn_var_ln": {"has_path": [[40, 16], [40, 29]]}, "fn_var_occur": {"has_path": [["self", "has_path", "True"]]}, "name": "dfsutil", "params": {"self": "", "source": "", "target": "", "visited": ""}, "params_descr": {"self": "", "source": "", "target": "", "visited": ""}, "params_occur": {"self": [["self", "graph", "source"], ["target", "self", "graph", "source"], ["self", "has_path", "True"], ["self", "dfsutil", "visited", "source", "i"]], "source": [["visited", "source", "True"], ["self", "graph", "source"], ["target", "self", "graph", "source"], ["self", "dfsutil", "visited", "source", "i"]], "target": [["target", "self", "graph", "source"]], "visited": [["visited", "source", "True"], ["visited", "i"], ["self", "dfsutil", "visited", "source", "i"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "source": [["Type[T]", 0.09597008950405857], ["str", 0.07448923511287489]], "target": [["int", 0.1723618877955386], ["List[str]", 0.09153366345076733], ["bool", 0.08211271598968638], ["str", 0.08135978455573639]], "visited": [["Optional[str]", 0.6766001107296914], ["Optional[Set[str]]", 0.09652846451353295]]}, "q_name": "Graph.dfsutil", "ret_exprs": ["return"], "ret_type": "", "ret_type_p": [["Union[tuple, list]", 0.12326783261663934], ["List[int]", 0.09124591253820835], ["Dict[str, Any]", 0.08769568774684897], ["str", 0.08682447752895113]], "variables": {"has_path": ""}, "variables_p": {"has_path": [["Optional[str]", 0.20458760634345574], ["str", 0.09886825949441633], ["Optional[BinaryIO]", 0.09886220296698024]]}}, {"docstring": {"func": "Determine if there is a path from source to target", "long_descr": null, "ret": null}, "fn_lc": [[45, 4], [51, 28]], "fn_var_ln": {"has_path": [[49, 8], [49, 21]]}, "fn_var_occur": {"has_path": [["self", "has_path", "False"], ["self", "has_path"]]}, "name": "is_reachable", "params": {"self": "", "source": "", "target": ""}, "params_descr": {"self": "", "source": "", "target": ""}, "params_occur": {"self": [["self", "has_path", "False"], ["self", "dfs", "source", "target"], ["self", "has_path"]], "source": [["self", "dfs", "source", "target"]], "target": [["self", "dfs", "source", "target"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "source": [["str", 0.8355059398601898]], "target": [["str", 0.8355059398601898]]}, "q_name": "Graph.is_reachable", "ret_exprs": ["return self.has_path"], "ret_type": "", "ret_type_p": [["str", 0.40989743266382334]], "variables": {"has_path": ""}, "variables_p": {"has_path": [["str", 0.8061529068319523]]}}], "name": "Graph", "q_name": "Graph", "variables": {}, "variables_p": {}}], "funcs": [], "imports": ["collections", "defaultdict"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 20}, "session_id": "fqZgYupzwj_CCkmJqp2eoI7ceJOWLsly_N3WetAsB-E", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}