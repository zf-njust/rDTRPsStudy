{"error": null, "response": {"classes": [{"cls_lc": [[8, 0], [16, 28]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": null}, "fn_lc": [[13, 4], [16, 28]], "fn_var_ln": {"source": [[14, 8], [14, 19]], "target": [[15, 8], [15, 19]], "weight": [[16, 8], [16, 19]]}, "fn_var_occur": {"source": [["self", "source", "source"]], "target": [["self", "target", "target"]], "weight": [["self", "weight", "weight"]]}, "name": "__init__", "params": {"self": "", "source": "", "target": "", "weight": ""}, "params_descr": {"self": "", "source": "", "target": "", "weight": ""}, "params_occur": {"self": [["self", "source", "source"], ["self", "target", "target"], ["self", "weight", "weight"]], "source": [["self", "source", "source"]], "target": [["self", "target", "target"]], "weight": [["self", "weight", "weight"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "source": [["Optional[str]", 0.41991652447861993], ["str", 0.38673718123252415], ["bool", 0.193346294288856]], "target": [["str", 0.3110931120320711], ["Optional[str]", 0.12105503346295973], ["Callable", 0.10194819647513258], ["list", 0.09689639726412014]], "weight": [["str", 0.3110931120320711], ["Optional[str]", 0.12105503346295973], ["Callable", 0.10194819647513258], ["list", 0.09689639726412014]]}, "q_name": "Edge.__init__", "ret_exprs": [], "ret_type": "", "variables": {"source": "", "target": "", "weight": ""}, "variables_p": {"source": [["Dict[str, str]", 1.1907870165115673e-11], ["Set[str]", 1.1866471920497328e-11], ["str", 1.1193767851286933e-11], ["List[str]", 1.0947519640306457e-11], ["Tuple[str, str]", 1.0399781341872155e-11]], "target": [["str", 1.2090695819049696e-11], ["tuple", 5.486808325658294e-12]], "weight": [["str", 0.30000000000000004], ["Dict[str, Any]", 0.1], ["dict", 0.1], ["int", 0.1]]}}], "name": "Edge", "q_name": "Edge", "variables": {}, "variables_p": {}}, {"cls_lc": [[19, 0], [67, 32]], "cls_var_ln": {}, "cls_var_occur": {}, "funcs": [{"docstring": {"func": "Args:", "long_descr": "n (int): Number of vertices in the graph", "ret": null}, "fn_lc": [[26, 4], [35, 30]], "fn_var_ln": {"parent": [[32, 8], [32, 19]], "size": [[33, 8], [33, 17]]}, "fn_var_occur": {"parent": [["self", "parent", "None", "size"], ["self", "parent", "i", "i"]], "size": [["self", "parent", "None", "size"], ["self", "size", "size"], ["range", "size"]]}, "name": "__init__", "params": {"self": "", "size": ""}, "params_descr": {"self": "", "size": ""}, "params_occur": {"self": [["self", "parent", "None", "size"], ["self", "size", "size"], ["self", "parent", "i", "i"]], "size": [["self", "parent", "None", "size"], ["self", "size", "size"], ["range", "size"]]}, "params_p": {"args": [], "kwargs": [], "self": [], "size": [["int", 0.6796704917777356], ["str", 0.10698842293725878], ["Optional[float]", 0.10698842293725878], ["Optional[int]", 0.1063526623477467]]}, "q_name": "DisjointSet.__init__", "ret_exprs": [], "ret_type": "", "variables": {"parent": "", "size": ""}, "variables_p": {"parent": [["str", 0.21079081918086684], ["list", 0.11005936288894388], ["List[str]", 0.1063655351106161]], "size": [["int", 0.9284550260425719]]}}, {"docstring": {"func": "Args:", "long_descr": "node1, node2 (int): Indexes of nodes whose sets will be merged.", "ret": null}, "fn_lc": [[37, 4], [54, 48]], "fn_var_ln": {"node1": [[45, 8], [45, 13]], "node2": [[46, 8], [46, 13]]}, "fn_var_occur": {"node1": [["node1", "self", "find_set", "node1"], ["self", "size", "node1", "self", "size", "node2"], ["self", "parent", "node1", "node2"], ["self", "size", "node2", "self", "size", "node1"], ["self", "parent", "node2", "node1"], ["self", "size", "node1", "self", "size", "node2"]], "node2": [["node2", "self", "find_set", "node2"], ["self", "size", "node1", "self", "size", "node2"], ["self", "parent", "node1", "node2"], ["self", "size", "node2", "self", "size", "node1"], ["self", "parent", "node2", "node1"], ["self", "size", "node1", "self", "size", "node2"]]}, "name": "merge_set", "params": {"node1": "", "node2": "", "self": ""}, "params_descr": {"node1": "", "node2": "", "self": ""}, "params_occur": {"node1": [["node1", "self", "find_set", "node1"], ["self", "size", "node1", "self", "size", "node2"], ["self", "parent", "node1", "node2"], ["self", "size", "node2", "self", "size", "node1"], ["self", "parent", "node2", "node1"], ["self", "size", "node1", "self", "size", "node2"]], "node2": [["node2", "self", "find_set", "node2"], ["self", "size", "node1", "self", "size", "node2"], ["self", "parent", "node1", "node2"], ["self", "size", "node2", "self", "size", "node1"], ["self", "parent", "node2", "node1"], ["self", "size", "node1", "self", "size", "node2"]], "self": [["node1", "self", "find_set", "node1"], ["node2", "self", "find_set", "node2"], ["self", "size", "node1", "self", "size", "node2"], ["self", "parent", "node1", "node2"], ["self", "size", "node2", "self", "size", "node1"], ["self", "parent", "node2", "node1"], ["self", "size", "node1", "self", "size", "node2"]]}, "params_p": {"args": [], "kwargs": [], "node1": [["List[int]", 0.10723030204544551], ["str", 0.08914699147611312], ["T", 0.08344000095808779]], "node2": [["List[int]", 0.10723030204544551], ["str", 0.08914699147611312], ["T", 0.08344000095808779]], "self": []}, "q_name": "DisjointSet.merge_set", "ret_exprs": [], "ret_type": "", "variables": {"node1": "", "node2": ""}, "variables_p": {"node1": [["str", 0.21563952704696615], ["List[str]", 0.1994955515759693], ["int", 0.10530477150981199], ["list", 0.09689067513299514], ["List[int]", 0.09045628323975767]], "node2": [["str", 0.21563952704696615], ["List[str]", 0.1994955515759693], ["int", 0.10530477150981199], ["list", 0.09689067513299514], ["List[int]", 0.09045628323975767]]}}, {"docstring": {"func": "Get the root element of the set containing <a>", "long_descr": null, "ret": null}, "fn_lc": [[56, 4], [67, 32]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "find_set", "params": {"node": "", "self": ""}, "params_descr": {"node": "", "self": ""}, "params_occur": {"node": [["self", "parent", "node", "node"], ["self", "parent", "node", "self", "find_set", "self", "parent", "node"], ["self", "parent", "node"]], "self": [["self", "parent", "node", "node"], ["self", "parent", "node", "self", "find_set", "self", "parent", "node"], ["self", "parent", "node"]]}, "params_p": {"args": [], "kwargs": [], "node": [], "self": []}, "q_name": "DisjointSet.find_set", "ret_exprs": ["return self.parent[node]"], "ret_type": "", "ret_type_p": [["T", 0.21077507485130761], ["Optional[str]", 0.20537373286644622], ["str", 0.11059774260217983], ["List[str]", 0.09919431322869932], ["Iterable[T]", 0.0974848099263753], ["Optional[int]", 0.089376607704527], ["Optional[List[Callable]]", 0.089376607704527]], "variables": {}, "variables_p": {}}], "name": "DisjointSet", "q_name": "DisjointSet", "variables": {}, "variables_p": {}}], "funcs": [{"docstring": {"func": null, "long_descr": null, "ret": "sum of weights of the minnimum spanning tree"}, "fn_lc": [[70, 0], [105, 45]], "fn_var_ln": {"mst": [[92, 4], [92, 7]], "set_u": [[95, 8], [95, 13]], "set_v": [[96, 8], [96, 13]]}, "fn_var_occur": {"mst": [["mst", "append", "edge"], ["len", "mst", "vertex_count"], ["sum", "edge", "weight", "edge", "mst"]], "set_u": [["set_u", "forest", "find_set", "edge", "u"], ["set_u", "set_v"], ["forest", "merge_set", "set_u", "set_v"]], "set_v": [["set_v", "forest", "find_set", "edge", "v"], ["set_u", "set_v"], ["forest", "merge_set", "set_u", "set_v"]]}, "name": "kruskal", "params": {"edges": "", "forest": "", "vertex_count": ""}, "params_descr": {"edges": "Edges of the graph", "forest": "DisjointSet of the vertices", "vertex_count": "Number of vertices in the graph"}, "params_occur": {"edges": [["edges", "sort", "key", "edge", "edge", "weight"]], "forest": [["set_u", "forest", "find_set", "edge", "u"], ["set_v", "forest", "find_set", "edge", "v"], ["forest", "merge_set", "set_u", "set_v"]], "vertex_count": [["len", "mst", "vertex_count"]]}, "params_p": {"args": [], "edges": [["List[Tuple[Any, Any]]", 0.4999999999060468], ["List[tuple]", 0.4999999999060468], ["Iterable[int]", 4.1829190292352994e-11], ["list", 2.1616168775292342e-11], ["List[Tuple[int, Any]]", 1.4924987013365596e-11], ["Iterable[Tuple[str, str]]", 1.300929242819548e-11], ["List[Tuple[int, int]]", 1.2277097990307773e-11]], "forest": [["int", 0.19131120839135493], ["str", 0.0933914201770086]], "kwargs": [], "vertex_count": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]]}, "q_name": "kruskal", "ret_exprs": ["return sum([edge.weight for edge in mst])"], "ret_type": "", "ret_type_p": [["int", 0.29909091005647986], ["List[str]", 0.20025053401348752], ["str", 0.09917897129056952]], "variables": {"mst": "", "set_u": "", "set_v": ""}, "variables_p": {"mst": [["int", 0.27394819686421423], ["List[int]", 0.23718486934353675], ["list", 0.1458631516473391], ["List[List[int]]", 0.12648455454128835], ["float", 0.11057263662083484], ["set", 0.10594659098278669]], "set_u": [["str", 0.3184858935291459], ["Dict[Any, Tuple[str, str]]", 0.11992015030754882], ["Pattern[str]", 0.07250987900253371]], "set_v": []}}, {"docstring": {"func": "Test. How input works:", "long_descr": "Input consists of different weighted, connected, undirected graphs.\nline 1:\n  integers n, m\nlines 2..m+2:\n  edge with the format -> node index u, node index v, integer weight\n\nSamples of input:\n\n5 6\n1 2 3\n1 3 8\n2 4 5\n3 4 2\n3 5 4\n4 5 6\n\n3 3\n2 1 20\n3 1 20\n2 3 100\n\nSum of weights of the optimal paths:\n14, 40", "ret": null}, "fn_lc": [[108, 0], [148, 71]], "fn_var_ln": {"edge_count": [[136, 22], [136, 32]], "edges": [[138, 8], [138, 13]], "forest": [[137, 8], [137, 14]], "source": [[142, 12], [142, 18]], "target": [[142, 20], [142, 26]], "vertex_count": [[136, 8], [136, 20]], "weight": [[142, 28], [142, 34]]}, "fn_var_occur": {"edge_count": [["vertex_count", "edge_count", "map", "int", "size", "split"], ["forest", "DisjointSet", "edge_count"], ["edges", "None", "edge_count"], ["range", "edge_count"]], "edges": [["edges", "None", "edge_count"], ["edges", "i", "Edge", "source", "target", "weight"], ["print", "kruskal", "vertex_count", "edges", "forest"]], "forest": [["forest", "DisjointSet", "edge_count"], ["print", "kruskal", "vertex_count", "edges", "forest"]], "source": [["source", "target", "weight", "map", "int", "input", "split"], ["edges", "i", "Edge", "source", "target", "weight"]], "target": [["source", "target", "weight", "map", "int", "input", "split"], ["edges", "i", "Edge", "source", "target", "weight"]], "vertex_count": [["vertex_count", "edge_count", "map", "int", "size", "split"], ["print", "kruskal", "vertex_count", "edges", "forest"]], "weight": [["source", "target", "weight", "map", "int", "input", "split"], ["edges", "i", "Edge", "source", "target", "weight"]]}, "name": "main", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "main", "ret_exprs": [], "ret_type": "", "variables": {"edge_count": "", "edges": "", "forest": "", "source": "", "target": "", "vertex_count": "", "weight": ""}, "variables_p": {"edge_count": [["int", 0.7640708531908357], ["Set[str]", 0.10235006011406207]], "edges": [["int", 0.6110454746829123]], "forest": [["int", 0.3702162985219295], ["List[int]", 0.21514502250368345], ["Counter[int]", 0.08910769729766586]], "source": [["str", 1.0000000000000002]], "target": [["str", 0.6234996063707757], ["Union[Literal, str]", 0.14618397382147874], ["Optional[str]", 0.14618397382147874]], "vertex_count": [["int", 0.2669673409912563], ["defaultdict", 0.12119166499460575], ["Counter[int]", 0.11618393688502802], ["list", 0.10467480073940735], ["bytearray", 0.09480937568134777]], "weight": [["str", 0.6234996063707757], ["Union[Literal, str]", 0.14618397382147874], ["Optional[str]", 0.14618397382147874]]}}], "imports": ["sys"], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 27}, "session_id": "m-BNvgUA1RBmA_U1cAIp4Y3URXROX5G4LHKmrA2Tnkg", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}