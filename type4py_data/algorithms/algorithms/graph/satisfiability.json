{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Perform a depth first search traversal of the graph starting at the given vertex.", "long_descr": "Stores the order in which nodes were visited to the list, in transposed order.", "ret": null}, "fn_lc": [[16, 0], [27, 24]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dfs_transposed", "params": {"graph": "", "order": "", "vertex": "", "visited": ""}, "params_descr": {"graph": "", "order": "", "vertex": "", "visited": ""}, "params_occur": {"graph": [["graph", "vertex"], ["dfs_transposed", "adjacent", "graph", "order", "visited"]], "order": [["dfs_transposed", "adjacent", "graph", "order", "visited"], ["order", "append", "vertex"]], "vertex": [["visited", "vertex", "True"], ["graph", "vertex"], ["order", "append", "vertex"]], "visited": [["visited", "vertex", "True"], ["visited", "adjacent"], ["dfs_transposed", "adjacent", "graph", "order", "visited"]]}, "params_p": {"args": [], "graph": [["int", 0.9999999996709523], ["List[str]", 2.577688151828479e-10], ["str", 3.646510082157097e-11]], "kwargs": [], "order": [["float", 0.1094230825004522], ["list", 0.10612874933747696], ["str", 0.10612874933747696], ["List[str]", 0.09316391293240292]], "vertex": [["bool", 0.11068026159814744], ["Callable", 0.10398444793239278]], "visited": [["str", 0.262817193443143], ["list", 0.2591312215938153], ["List[str]", 0.15318646122150248], ["Optional[dict]", 0.0779669055039789], ["Dict[str, str]", 0.07783469410560849], ["Optional[str]", 0.07783469410560849]]}, "q_name": "dfs_transposed", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Perform a depth first search traversal of the graph starting at the given vertex.", "long_descr": "Records all visited nodes as being of a certain strongly connected component.", "ret": null}, "fn_lc": [[30, 0], [40, 67]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "dfs", "params": {"current_comp": "", "graph": "", "vertex": "", "vertex_scc": "", "visited": ""}, "params_descr": {"current_comp": "", "graph": "", "vertex": "", "vertex_scc": "", "visited": ""}, "params_occur": {"current_comp": [["vertex_scc", "vertex", "current_comp"], ["dfs", "adjacent", "current_comp", "vertex_scc", "graph", "visited"]], "graph": [["graph", "vertex"], ["dfs", "adjacent", "current_comp", "vertex_scc", "graph", "visited"]], "vertex": [["visited", "vertex", "True"], ["vertex_scc", "vertex", "current_comp"], ["graph", "vertex"]], "vertex_scc": [["vertex_scc", "vertex", "current_comp"], ["dfs", "adjacent", "current_comp", "vertex_scc", "graph", "visited"]], "visited": [["visited", "vertex", "True"], ["visited", "adjacent"], ["dfs", "adjacent", "current_comp", "vertex_scc", "graph", "visited"]]}, "params_p": {"args": [], "current_comp": [["int", 0.30084434291569306], ["Optional[int]", 0.09460367026529302]], "graph": [["float", 0.13016029585686745], ["Callable", 0.10470529257535274], ["bool", 0.08476986694092384]], "kwargs": [], "vertex": [["bool", 1.0000000000000002]], "vertex_scc": [["int", 0.30084434291569306], ["Optional[int]", 0.09460367026529302]], "visited": [["bool", 0.3898722564505492], ["Tuple[List[str], List[str], List[str], List[str]]", 0.11133048873396864], ["Tuple[int]", 0.08559226239054725]]}, "q_name": "dfs", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Add a directed edge to the graph.", "long_descr": null, "ret": null}, "fn_lc": [[43, 0], [50, 40]], "fn_var_ln": {}, "fn_var_occur": {}, "name": "add_edge", "params": {"graph": "", "vertex_from": "", "vertex_to": ""}, "params_descr": {"graph": "", "vertex_from": "", "vertex_to": ""}, "params_occur": {"graph": [["vertex_from", "graph"], ["graph", "vertex_from"], ["graph", "vertex_from", "append", "vertex_to"]], "vertex_from": [["vertex_from", "graph"], ["graph", "vertex_from"], ["graph", "vertex_from", "append", "vertex_to"]], "vertex_to": [["graph", "vertex_from", "append", "vertex_to"]]}, "params_p": {"args": [], "graph": [["list", 0.09928810359468263], ["Dict[str, List[str]]", 0.09263561458661856], ["Union[int, float]", 0.09075596662847342], ["List[str]", 0.08792506951507442], ["float", 0.08269358302266604]], "kwargs": [], "vertex_from": [["list", 0.09928810359468263], ["Dict[str, List[str]]", 0.09263561458661856], ["Union[int, float]", 0.09075596662847342], ["List[str]", 0.08792506951507442], ["float", 0.08269358302266604]], "vertex_to": [["List[str]", 0.2646277082631121], ["str", 0.17398320647052992], ["Callable", 0.1590235633846015]]}, "q_name": "add_edge", "ret_exprs": [], "ret_type": "", "variables": {}, "variables_p": {}}, {"docstring": {"func": "Computes the strongly connected components of a graph ", "long_descr": null, "ret": null}, "fn_lc": [[53, 0], [78, 21]], "fn_var_ln": {"current_comp": [[71, 4], [71, 16]], "graph_transposed": [[58, 4], [58, 20]], "order": [[55, 4], [55, 9]], "vertex_scc": [[69, 4], [69, 14]], "visited": [[68, 4], [68, 11]]}, "fn_var_occur": {"current_comp": [["dfs", "vertex", "current_comp", "vertex_scc", "graph", "visited"]], "graph_transposed": [["graph_transposed", "vertex", "vertex", "graph"], ["add_edge", "graph_transposed", "target", "source"], ["dfs_transposed", "vertex", "graph_transposed", "order", "visited"]], "order": [["dfs_transposed", "vertex", "graph_transposed", "order", "visited"], ["reversed", "order"]], "vertex_scc": [["dfs", "vertex", "current_comp", "vertex_scc", "graph", "visited"]], "visited": [["visited", "vertex", "False", "vertex", "graph"], ["visited", "vertex"], ["dfs_transposed", "vertex", "graph_transposed", "order", "visited"], ["visited", "vertex", "False", "vertex", "graph"], ["visited", "vertex"], ["dfs", "vertex", "current_comp", "vertex_scc", "graph", "visited"]]}, "name": "scc", "params": {"graph": ""}, "params_descr": {"graph": ""}, "params_occur": {"graph": [["visited", "vertex", "False", "vertex", "graph"], ["graph_transposed", "vertex", "vertex", "graph"], ["graph", "iteritems"], ["visited", "vertex", "False", "vertex", "graph"], ["dfs", "vertex", "current_comp", "vertex_scc", "graph", "visited"]]}, "params_p": {"args": [], "graph": [["bool", 0.3980669529255138], ["Optional[int]", 0.11545937082495031], ["float", 0.06311090024429393]], "kwargs": []}, "q_name": "scc", "ret_exprs": ["return vertex_scc"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"current_comp": "", "graph_transposed": "", "order": "", "vertex_scc": "", "visited": ""}, "variables_p": {"current_comp": [["str", 0.25000000005409984], ["int", 0.24999999998196673]], "graph_transposed": [], "order": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "vertex_scc": [["str", 0.25000000005409984], ["int", 0.24999999998196673]], "visited": [["list", 0.8015755014437076], ["List[str]", 0.19842449855629227]]}}, {"docstring": {"func": "Builds the implication graph from the formula ", "long_descr": null, "ret": null}, "fn_lc": [[81, 0], [94, 16]], "fn_var_ln": {"graph": [[83, 4], [83, 9]]}, "fn_var_occur": {"graph": [["graph", "lit", "neg"], ["add_edge", "graph", "a_lit", "a_neg", "b_lit", "b_neg"], ["add_edge", "graph", "b_lit", "b_neg", "a_lit", "a_neg"]]}, "name": "build_graph", "params": {"formula": ""}, "params_descr": {"formula": ""}, "params_occur": {"formula": []}, "params_p": {"args": [], "formula": [["bool", 0.4], ["list", 0.1], ["Iterable[str]", 0.1]], "kwargs": []}, "q_name": "build_graph", "ret_exprs": ["return graph"], "ret_type": "", "ret_type_p": [["bool", 0.10000000000000002]], "variables": {"graph": ""}, "variables_p": {"graph": [["str", 0.2027368887590519]]}}, {"docstring": {"func": "Solves the 2-SAT problem", "long_descr": null, "ret": null}, "fn_lc": [[97, 0], [126, 16]], "fn_var_ln": {"comp_repr": [[108, 4], [108, 13]], "comp_value": [[114, 4], [114, 14]], "components": [[115, 4], [115, 14]], "graph": [[101, 4], [101, 9]], "lit": [[121, 13], [121, 16]], "neg": [[121, 18], [121, 21]], "value": [[124, 4], [124, 9]], "vertex_scc": [[102, 4], [102, 14]]}, "fn_var_occur": {"comp_repr": [["vertex_scc", "vertex", "comp_repr"], ["comp_repr", "vertex_scc", "vertex", "vertex"], ["lit", "neg", "comp_repr", "comp"]], "comp_value": [["comp", "comp_value"], ["comp_value", "comp", "False"], ["comp_value", "vertex_scc", "lit", "neg", "True"], ["value", "var", "comp_value", "vertex_scc", "var", "False", "var", "_", "graph"]], "components": [["components", "sorted", "vertex_scc", "values"]], "graph": [["graph", "build_graph", "formula"], ["vertex_scc", "scc", "graph"], ["value", "var", "comp_value", "vertex_scc", "var", "False", "var", "_", "graph"]], "lit": [["lit", "neg", "comp_repr", "comp"], ["comp_value", "vertex_scc", "lit", "neg", "True"]], "neg": [["lit", "neg", "comp_repr", "comp"], ["comp_value", "vertex_scc", "lit", "neg", "True"]], "value": [["value", "var", "comp_value", "vertex_scc", "var", "False", "var", "_", "graph"]], "vertex_scc": [["vertex_scc", "scc", "graph"], ["vertex_scc", "var", "False", "vertex_scc", "var", "True"], ["vertex_scc", "vertex", "comp_repr"], ["comp_repr", "vertex_scc", "vertex", "vertex"], ["components", "sorted", "vertex_scc", "values"], ["comp_value", "vertex_scc", "lit", "neg", "True"], ["value", "var", "comp_value", "vertex_scc", "var", "False", "var", "_", "graph"]]}, "name": "solve_sat", "params": {"formula": ""}, "params_descr": {"formula": ""}, "params_occur": {"formula": [["graph", "build_graph", "formula"]]}, "params_p": {"args": [], "formula": [["str", 5.179071006555899e-11], ["List[str]", 2.2707785674083287e-11], ["Optional[Union[Any, Any]]", 9.905784261816507e-12], ["Tuple[str]", 6.906495189149961e-12]], "kwargs": []}, "q_name": "solve_sat", "ret_exprs": ["return None", "return value"], "ret_type": "", "ret_type_p": [["Optional[str]", 0.48061423911524004], ["bool", 0.22983493282887243], ["Optional[float]", 0.09884796722722393], ["str", 0.09507620493381937]], "variables": {"comp_repr": "", "comp_value": "", "components": "", "graph": "", "lit": "", "neg": "", "value": "", "vertex_scc": ""}, "variables_p": {"comp_repr": [["int", 0.2], ["dict", 0.1], ["List[int]", 0.1], ["List[List[int]]", 0.1], ["str", 0.1]], "comp_value": [["List[List[int]]", 0.126003364835437], ["str", 0.09707311576362716], ["int", 0.08138206243587638], ["Tuple[Tuple[Any, Any]]", 0.07853613404012168], ["List[float]", 0.07739687448007289]], "components": [["list", 0.5065375167043844], ["List[str]", 0.08201409532925646], ["List[Tuple[Any, Any]]", 0.07500629293985281]], "graph": [], "lit": [["str", 0.11320153869465331]], "neg": [["str", 0.11320153869465331]], "value": [["Union[bytearray, bytes]", 0.1075199354283362], ["int", 0.10185454111187918], ["Tuple[Any, Any]", 0.09756941814517991], ["List[None]", 0.0927278325955381]], "vertex_scc": []}}, {"docstring": {"func": "Entry point for testing", "long_descr": null, "ret": null}, "fn_lc": [[129, 0], [142, 37]], "fn_var_ln": {"formula": [[133, 4], [133, 11]], "result": [[139, 4], [139, 10]]}, "fn_var_occur": {"formula": [["formula", "False", "False", "True", "True", "False", "False", "True", "True", "False", "True"], ["result", "solve_sat", "formula"]], "result": [["result", "solve_sat", "formula"], ["result", "items"]]}, "name": "main", "params": {}, "params_descr": {}, "params_occur": {}, "params_p": {"args": [], "kwargs": []}, "q_name": "main", "ret_exprs": [], "ret_type": "", "variables": {"formula": "", "result": ""}, "variables_p": {"formula": [["List[str]", 0.20531569841405042], ["Tuple[str, str]", 0.1915784281180855], ["dict", 0.12480959476560965], ["int", 0.09802602489377729], ["List[int]", 0.09240893663164097]], "result": [["dict", 0.0780736605764772]]}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 38}, "session_id": "K6mDkcS2fBnJ82SVFVj2kNQOsZS9_13sOXkYMfHs0IY", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}