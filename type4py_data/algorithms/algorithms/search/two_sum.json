{"error": null, "response": {"classes": [], "funcs": [{"docstring": {"func": "Given a list of numbers sorted in ascending order, find the indices of two", "long_descr": "numbers such that their sum is the given target.\n\nUsing binary search.", "ret": null}, "fn_lc": [[19, 0], [38, 15]], "fn_var_ln": {"high": [[37, 16], [37, 20]], "low": [[35, 16], [35, 19]], "mid": [[30, 12], [30, 15]], "second_val": [[27, 8], [27, 18]]}, "fn_var_occur": {"high": [["low", "high", "i", "len", "numbers"], ["low", "high"], ["mid", "low", "high", "low"], ["high", "mid"]], "low": [["low", "high", "i", "len", "numbers"], ["low", "high"], ["mid", "low", "high", "low"], ["low", "mid"]], "mid": [["mid", "low", "high", "low"], ["second_val", "numbers", "mid"], ["i", "mid"], ["second_val", "numbers", "mid"], ["low", "mid"], ["high", "mid"]], "second_val": [["second_val", "target", "number"], ["second_val", "numbers", "mid"], ["second_val", "numbers", "mid"]]}, "name": "two_sum", "params": {"numbers": "", "target": ""}, "params_descr": {"numbers": "", "target": ""}, "params_occur": {"numbers": [["enumerate", "numbers"], ["low", "high", "i", "len", "numbers"], ["second_val", "numbers", "mid"], ["second_val", "numbers", "mid"]], "target": [["second_val", "target", "number"]]}, "params_p": {"args": [], "kwargs": [], "numbers": [["Sequence[int]", 0.197948378910169], ["Union[bytearray, memoryview]", 0.18190543498729592], ["Sequence['cirq.Qid']", 0.1300338532563735], ["List[int]", 0.12232048030179964], ["list", 0.1020491845871618], ["List[List[str]]", 0.09644587896781096]], "target": [["Tuple[int, int]", 0.4999999999797278], ["str", 0.2500000000170535], ["Callable[[], object]", 0.2499999999898639], ["Pattern", 1.3354769056712523e-11]]}, "q_name": "two_sum", "ret_exprs": ["return [i + 1, mid + 1]", "return None"], "ret_type": "", "ret_type_p": [["Tuple[Hashable]", 0.19701493681696172], ["int", 0.10954636244465664], ["dict", 0.10059515667911252], ["Callable[[], bool]", 0.09680944820709222], ["list", 0.09359738442684795], ["Iterable[T]", 0.09224512448144595]], "variables": {"high": "", "low": "", "mid": "", "second_val": ""}, "variables_p": {"high": [["int", 0.45829512832953084], ["float", 0.1589580400523656], ["bytes", 0.0998120656534767], ["Dict[str, str]", 0.08433103125340365]], "low": [["bytes", 0.3571622771685127], ["dict", 0.09698977444169175], ["int", 0.09415439651695841], ["Dict[str, str]", 0.08030800581949513]], "mid": [["int", 0.3633155348185524], ["str", 0.16636862928232385], ["Tuple[Literal, Literal]", 0.11445392950961102], ["List[int]", 0.08727406962707226], ["bytes", 0.08015180206566871]], "second_val": [["Dict[Tuple[int, int], int]", 0.9999999998257995], ["Dict[str, Union[Any, str]]", 4.315691127801008e-11], ["dict", 1.5460574362374e-11]]}}, {"docstring": {"func": "Given a list of numbers, find the indices of two numbers such that their", "long_descr": "sum is the given target.\n\nUsing a hash table.", "ret": null}, "fn_lc": [[40, 0], [52, 15]], "fn_var_ln": {"dic": [[47, 4], [47, 7]]}, "fn_var_occur": {"dic": [["target", "num", "dic"], ["dic", "target", "num", "i"], ["dic", "num", "i"]]}, "name": "two_sum1", "params": {"numbers": "", "target": ""}, "params_descr": {"numbers": "", "target": ""}, "params_occur": {"numbers": [["enumerate", "numbers"]], "target": [["target", "num", "dic"], ["dic", "target", "num", "i"]]}, "params_p": {"args": [], "kwargs": [], "numbers": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "target": [["int", 0.672448510608946], ["bool", 0.14493592069804476]]}, "q_name": "two_sum1", "ret_exprs": ["return [dic[target - num] + 1, i + 1]", "return None"], "ret_type": "", "ret_type_p": [["str", 0.21284267437085294], ["Optional[str]", 0.190277871440557], ["Optional[int]", 0.10316389871691652], ["int", 0.09184912610870133]], "variables": {"dic": ""}, "variables_p": {"dic": [["int", 0.7768454910938332], ["Type[range]", 0.22315450890616706]]}}, {"docstring": {"func": "Given a list of numbers sorted in ascending order, find the indices of two", "long_descr": "numbers such that their sum is the given target.\n\nUsing a bidirectional linear search.", "ret": null}, "fn_lc": [[54, 0], [71, 27]], "fn_var_ln": {"current_sum": [[64, 8], [64, 19]], "left": [[71, 12], [71, 16]], "right": [[69, 12], [69, 17]]}, "fn_var_occur": {"current_sum": [["current_sum", "numbers", "left", "numbers", "right"], ["current_sum", "target"], ["current_sum", "target"]], "left": [["left", "right"], ["current_sum", "numbers", "left", "numbers", "right"], ["left", "right"], ["left", "left"]], "right": [["right", "len", "numbers"], ["left", "right"], ["current_sum", "numbers", "left", "numbers", "right"], ["left", "right"], ["right", "right"]]}, "name": "two_sum2", "params": {"numbers": "", "target": ""}, "params_descr": {"numbers": "", "target": ""}, "params_occur": {"numbers": [["right", "len", "numbers"], ["current_sum", "numbers", "left", "numbers", "right"]], "target": [["current_sum", "target"], ["current_sum", "target"]]}, "params_p": {"args": [], "kwargs": [], "numbers": [["int", 0.39568734688039564], ["list", 0.2087225436500795], ["List[List[int]]", 0.09290912523451504], ["List[int]", 0.09072884482715665], ["str", 0.06493673210862137], ["Sequence[int]", 0.06381374925378178]], "target": [["T", 0.12722879911459267], ["List[str]", 0.09975118482417843], ["Dict[str, float]", 0.09146744754593462]]}, "q_name": "two_sum2", "ret_exprs": ["return [left + 1, right + 1]"], "ret_type": "", "ret_type_p": [["int", 0.30000000000000004], ["Callable", 0.2], ["str", 0.1]], "variables": {"current_sum": "", "left": "", "right": ""}, "variables_p": {"current_sum": [["ValueError", 0.10225446909042642], ["List[int]", 0.10050663401595522], ["str", 0.09429200654567339]], "left": [["str", 0.25000000005409984], ["int", 0.24999999998196673]], "right": [["list", 0.5418828151367227], ["List[int]", 0.27480535239847936], ["Set[str]", 0.1833118324647981]]}}], "imports": [], "mod_var_ln": {}, "mod_var_occur": {}, "no_types_annot": {"D": 0, "I": 0, "U": 17}, "session_id": "DksSuyoxJgCU-c3reAq160ylocKe-4I7Av9OpCnVpO8", "set": null, "tc": [false, null], "type_annot_cove": 0.0, "typed_seq": "", "untyped_seq": "", "variables": {}, "variables_p": {}}}